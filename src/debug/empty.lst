
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/debug/empty.elf:     file format elf32-littleriscv
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/debug/empty.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x20010000

Program Header:
    LOAD off    0x00001000 vaddr 0x20010000 paddr 0x20010000 align 2**12
         filesz 0x00001120 memsz 0x00001120 flags rwx
    LOAD off    0x00003000 vaddr 0x80000000 paddr 0x20018518 align 2**12
         filesz 0x00000b0c memsz 0x00000b0c flags rw-
     TLS off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**2
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00003b10 vaddr 0x80000b10 paddr 0x80000b10 align 2**12
         filesz 0x00000000 memsz 0x00000cb0 flags rw-
    LOAD off    0x00003b0c vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00004180 vaddr 0x20011180 paddr 0x20011180 align 2**12
         filesz 0x00007392 memsz 0x00007392 flags r-x
    LOAD off    0x0000b512 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .init             000002e6  20010000  20010000  00001000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .init_array       0000000c  200102e8  200102e8  000012e8  2**3  CONTENTS, ALLOC, LOAD, DATA
  2 .ctors            0000007a  200102f4  200102f4  000012f4  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata           00000db0  20010370  20010370  00001370  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .text             00007392  20011180  20011180  00004180  2**7  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .data             00000b0c  80000000  20018518  00003000  2**3  CONTENTS, ALLOC, LOAD, DATA
  6 .bss              000000a4  80000b10  80000b10  00003b10  2**3  ALLOC
  7 .stack            00000400  80000bc0  80000bc0  00003b10  2**4  ALLOC
  8 .heap             00000800  80000fc0  80000fc0  00003b10  2**3  ALLOC
  9 .debug_info       000367cb  00000000  00000000  0000b512  2**0  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev     0000430c  00000000  00000000  00041cdd  2**0  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges    00000ce0  00000000  00000000  00045ff0  2**3  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges     00000c38  00000000  00000000  00046cd0  2**3  CONTENTS, READONLY, DEBUGGING
 13 .debug_line       0000ef7b  00000000  00000000  00047908  2**0  CONTENTS, READONLY, DEBUGGING
 14 .debug_str        00005907  00000000  00000000  00056883  2**0  CONTENTS, READONLY, DEBUGGING
 15 .comment          00000028  00000000  00000000  0005c18a  2**0  CONTENTS, READONLY
 16 .riscv.attributes 0000002b  00000000  00000000  0005c1b2  2**0  CONTENTS, READONLY
 17 .debug_frame      000031ec  00000000  00000000  0005c1e0  2**2  CONTENTS, READONLY, DEBUGGING
 18 .debug_loc        00001539  00000000  00000000  0005f3cc  2**0  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
20010000 l    d  .init	00000000 .init
200102e8 l    d  .init_array	00000000 .init_array
200102f4 l    d  .ctors	00000000 .ctors
20010370 l    d  .rodata	00000000 .rodata
20011180 l    d  .text	00000000 .text
80000000 l    d  .data	00000000 .data
80000b10 l    d  .bss	00000000 .bss
80000bc0 l    d  .stack	00000000 .stack
80000fc0 l    d  .heap	00000000 .heap
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    df *ABS*	00000000 scrub.o
200100ca l     F .init	00000000 __metal_memory_scrub
20010138 l       .init	00000000 skip_scrub
00000000 l    df *ABS*	00000000 synchronize_harts.c
00000000 l    df *ABS*	00000000 crt0.o
20010248 l       .init	00000000 _skip_init
2001100c l       .rodata	00000000 argv
20011010 l       .rodata	00000000 envp
20011014 l       .rodata	00000000 name
00000000 l    df *ABS*	00000000 sifive_fe310-g000_pll.c
20014fdc l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllsel0
20014ff6 l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllref
20015010 l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_divider_base
20015026 l     F .text	00000014 __metal_driver_sifive_fe310_g000_pll_divider_offset
2001503a l     F .text	00000012 __metal_driver_sifive_fe310_g000_pll_config_base
2001504c l     F .text	00000010 __metal_driver_sifive_fe310_g000_pll_config_offset
2001505c l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_init_rate
20015072 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
20015084 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
200106ac l     O .rodata	00000880 pll_configs
20015096 l     F .text	0000004e get_pll_config_freq
200152f8 l     F .text	000000aa find_closest_config
200153a2 l     F .text	000001a4 configure_pll
00000000 l    df *ABS*	00000000 tty.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 findfp.c
200116fa l     F .text	00000068 std
00000000 l    df *ABS*	00000000 nano-vfprintf.c
20011baa l     F .text	0000002a __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 riscv_clint0.c
20012468 l     F .text	00000026 __metal_driver_sifive_clint0_control_base
2001248e l     F .text	00000024 __metal_driver_sifive_clint0_num_interrupts
200124b2 l     F .text	0000003c __metal_driver_sifive_clint0_interrupt_parents
200124ee l     F .text	00000030 __metal_driver_sifive_clint0_interrupt_lines
2001264e l     F .text	00000036 _get_cpu_intc
00000000 l    df *ABS*	00000000 riscv_cpu.c
20012b80 l     F .text	00000024 __metal_driver_cpu_hartid
20012ba4 l     F .text	0000002a __metal_driver_cpu_timebase
20012bce l     F .text	0000002a __metal_driver_cpu_interrupt_controller
20012bf8 l     F .text	00000024 __metal_driver_cpu_buserror
00000000 l    df *ABS*	00000000 riscv_plic0.c
20014542 l     F .text	0000002a __metal_driver_sifive_plic0_control_base
2001456c l     F .text	0000002a __metal_driver_sifive_plic0_num_interrupts
20014596 l     F .text	00000028 __metal_driver_sifive_plic0_max_priority
200145be l     F .text	00000028 __metal_driver_sifive_plic0_interrupt_parents
200145e6 l     F .text	00000022 __metal_driver_sifive_plic0_interrupt_lines
20014608 l     F .text	0000001e __metal_driver_sifive_plic0_context_ids
00000000 l    df *ABS*	00000000 sifive_gpio0.c
20015722 l     F .text	00000026 __metal_driver_sifive_gpio0_base
20015748 l     F .text	0000002a __metal_driver_sifive_gpio0_interrupt_parent
20015772 l     F .text	0000035e __metal_driver_sifive_gpio0_interrupt_lines
00000000 l    df *ABS*	00000000 sifive_i2c0.c
20016180 l     F .text	0000002a __metal_driver_sifive_i2c0_control_base
200161aa l     F .text	0000002e __metal_driver_sifive_i2c0_clock
200161d8 l     F .text	0000002a __metal_driver_sifive_i2c0_pinmux
20016202 l     F .text	00000028 __metal_driver_sifive_i2c0_pinmux_output_selector
2001622a l     F .text	00000028 __metal_driver_sifive_i2c0_pinmux_source_selector
20016252 l     F .text	00000034 pre_rate_change_callback
20016286 l     F .text	00000030 post_rate_change_callback
200162b6 l     F .text	0000008e __metal_driver_sifive_i2c0_init
20016344 l     F .text	00000020 __metal_driver_sifive_i2c0_get_baud_rate
20016364 l     F .text	00000156 __metal_driver_sifive_i2c0_set_baud_rate
200164ba l     F .text	00000148 __metal_driver_sifive_i2c0_write_addr
20016602 l     F .text	00000166 __metal_driver_sifive_i2c0_write
20016768 l     F .text	00000158 __metal_driver_sifive_i2c0_read
200168c0 l     F .text	00000260 __metal_driver_sifive_i2c0_transfer
00000000 l    df *ABS*	00000000 sifive_uart0.c
20016b20 l     F .text	00000040 __metal_driver_sifive_uart0_control_base
20016b60 l     F .text	00000048 __metal_driver_sifive_uart0_interrupt_parent
20016ba8 l     F .text	0000003c __metal_driver_sifive_uart0_interrupt_line
20016be4 l     F .text	00000048 __metal_driver_sifive_uart0_clock
20016c2c l     F .text	00000040 __metal_driver_sifive_uart0_pinmux
20016c6c l     F .text	0000003c __metal_driver_sifive_uart0_pinmux_output_selector
20016ca8 l     F .text	00000040 __metal_driver_sifive_uart0_pinmux_source_selector
20017088 l     F .text	000000d8 pre_rate_change_callback_func
20017160 l     F .text	0000002e post_rate_change_callback_func
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfrosc.c
20014df4 l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfrosc_ref
20014e0e l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfrosc_config_base
20014e24 l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfrosc_config_offset
20014e38 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfxosc.c
20014ef0 l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfxosc_ref
20014f0a l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfxosc_config_base
20014f20 l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfxosc_config_offset
20014f34 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_prci.c
200156aa l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 cpu.c
00000000 l    df *ABS*	00000000 i2c.c
00000000 l    df *ABS*	00000000 shutdown.c
00000000 l    df *ABS*	00000000 time.c
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 vector.o
20017780 l       .text	00000000 IRQ_0
20017784 l       .text	00000000 IRQ_1
20017788 l       .text	00000000 IRQ_2
2001778c l       .text	00000000 IRQ_3
20017790 l       .text	00000000 IRQ_4
20017794 l       .text	00000000 IRQ_5
20017798 l       .text	00000000 IRQ_6
2001779c l       .text	00000000 IRQ_7
200177a0 l       .text	00000000 IRQ_8
200177a4 l       .text	00000000 IRQ_9
200177a8 l       .text	00000000 IRQ_10
200177ac l       .text	00000000 IRQ_11
200177b0 l       .text	00000000 IRQ_12
200177b4 l       .text	00000000 IRQ_13
200177b8 l       .text	00000000 IRQ_14
200177bc l       .text	00000000 IRQ_15
200177c0 l       .text	00000000 IRQ_LC0
200177c4 l       .text	00000000 IRQ_LC1
200177c8 l       .text	00000000 IRQ_LC2
200177cc l       .text	00000000 IRQ_LC3
200177d0 l       .text	00000000 IRQ_LC4
200177d4 l       .text	00000000 IRQ_LC5
200177d8 l       .text	00000000 IRQ_LC6
200177dc l       .text	00000000 IRQ_LC7
200177e0 l       .text	00000000 IRQ_LC8
200177e4 l       .text	00000000 IRQ_LC9
200177e8 l       .text	00000000 IRQ_LC10
200177ec l       .text	00000000 IRQ_LC11
200177f0 l       .text	00000000 IRQ_LC12
200177f4 l       .text	00000000 IRQ_LC13
200177f8 l       .text	00000000 IRQ_LC14
200177fc l       .text	00000000 IRQ_LC15
00000000 l    df *ABS*	00000000 fixed-clock.c
20017800 l     F .text	00000070 __metal_driver_fixed_clock_rate
00000000 l    df *ABS*	00000000 timer.c
00000000 l    df *ABS*	00000000 sys_close.c
00000000 l    df *ABS*	00000000 sys_fstat.c
00000000 l    df *ABS*	00000000 sys_isatty.c
00000000 l    df *ABS*	00000000 sys_lseek.c
00000000 l    df *ABS*	00000000 sys_read.c
00000000 l    df *ABS*	00000000 sys_sbrk.c
80000b08 l     O .data	00000004 __brk
00000000 l    df *ABS*	00000000 sys_write.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 __atexit.c
80000b24 l     O .bss	0000008c _global_atexit0
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 init.c
80000b1c l     O .bss	00000004 init_done.1531
80000b20 l     O .bss	00000004 fini_done.1540
00000000 l    df *ABS*	00000000 sys_exit.c
00000000 l    df *ABS*	00000000 impure.c
80000000 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 inline.c
00000000 l    df *ABS*	00000000 
200102f4 l       .init_array	00000000 metal_constructors_end
200102f8 l       .init_array	00000000 __fini_array_end
200102f8 l       .init_array	00000000 metal_destructors_end
200102f8 l       .init_array	00000000 metal_destructors_start
200102f8 l       .init_array	00000000 __fini_array_start
200102e8 l       .init_array	00000000 __init_array_end
200102e8 l       .init_array	00000000 __preinit_array_end
200102e8 l       .init_array	00000000 __init_array_start
200102e8 l       .init_array	00000000 metal_constructors_start
200102e8 l       .init_array	00000000 __preinit_array_start
20010fcc g     O .rodata	00000040 __metal_driver_vtable_sifive_uart0
20012016 g     F .text	0000002a _isatty_r
2001344e  w    F .text	00000096 metal_lc4_interrupt_vector_handler
20011294 g     F .text	000000da _puts_r
200174ba g     F .text	00000046 metal_i2c_write
20012040 g     F .text	0000002e _lseek_r
200172f2 g     F .text	00000026 metal_clock_get_rate_hz
20016fe8 g     F .text	000000a0 __metal_driver_sifive_uart0_set_baud_rate
2001282a g     F .text	00000058 __metal_driver_riscv_clint0_set_vector_mode
20016e3c g     F .text	0000004a __metal_driver_sifive_uart0_set_tx_watermark
200133b8  w    F .text	00000096 metal_lc3_interrupt_vector_handler
20013c3e g     F .text	00000064 __metal_valid_interrupt_id
20011250 g     F .text	00000044 printf
800012c0 g       .data	00000000 __global_pointer$
200102ec g     O .init_array	00000004 _use_hfxosc_ptr
200140b8 g     F .text	0000001c __metal_driver_riscv_cpu_controller_get_vector_mode
2001034a g     F .ctors	00000024 metal_tty_init
2001729e g     F .text	00000054 _metal_clock_append_to_callbacks
20014662 g     F .text	00000046 __metal_plic0_complete_interrupt
20013e8e g     F .text	000001d6 __metal_driver_riscv_cpu_controller_interrupt_register
200102e8 g     O .init_array	00000004 _metal_sifive_fe310_g000_pll_init_ptr
20011f56 g     F .text	00000036 __sseek
200117b0 g     F .text	00000066 __sinit
80000ac4  w    O .data	00000004 __metal_i2c_table
2001137c g     F .text	000000c0 __swbuf_r
80000b10 g       .data	00000000 __tls_base
2001176c g     F .text	00000044 __sfmoreglue
2001208a g     F .text	00000002 __malloc_unlock
20017486 g     F .text	00000034 metal_i2c_init
2001743e g     F .text	0000002e metal_cpu_get
80000a5c g     O .data	00000020 __metal_dt_serial_10013000
20015d5a g     F .text	0000004a __metal_driver_sifive_gpio0_disable_io
200104a8 g     O .rodata	00000064 __metal_driver_vtable_riscv_clint0
80000bb4 g       .bss	00000000 metal_segment_bss_target_end
2001251e g     F .text	0000009a __metal_clint0_mtime_get
200144b6 g     F .text	0000002e __metal_driver_cpu_get_instruction_length
00000001 g       *ABS*	00000000 __metal_chicken_bit
20016f00 g     F .text	00000030 __metal_driver_sifive_uart0_get_rx_watermark
20015b10 g     F .text	00000046 __metal_driver_sifive_gpio0_disable_input
20017ae4 g     F .text	0000000c __errno
08000000 g       .rodata	00000000 metal_segment_itim_target_start
200173ee g     F .text	0000002a metal_cpu_get_timebase
20016e0c g     F .text	00000030 __metal_driver_sifive_uart0_txready
20016d9a g     F .text	0000003a __metal_driver_sifive_uart0_rx_interrupt_enable
2001014a g     F .init	0000000e __metal_synchronize_harts
80000b10 g       .data	00000000 metal_segment_bss_target_start
200125b8 g     F .text	00000096 __metal_driver_riscv_clint0_mtimecmp_set
20011fea g     F .text	0000002c _fstat_r
20015faa g     F .text	00000188 __metal_driver_sifive_gpio0_clear_int
80000bb0 g     O .bss	00000004 errno
20015188 g     F .text	00000170 __metal_driver_sifive_fe310_g000_pll_get_rate_hz
00000400 g       *ABS*	00000000 __stack_size
20017362 g     F .text	00000030 metal_clock_register_pre_rate_change_callback
2001373c  w    F .text	00000096 metal_lc9_interrupt_vector_handler
200100d6  w    F .init	00000000 __metal_before_start
200184aa  w    F .text	00000016 metal_init_run
80000a7c g     O .data	00000020 __metal_dt_serial_10023000
20010648 g     O .rodata	00000064 __metal_driver_vtable_riscv_plic0
20010604 g     O .rodata	00000044 __metal_driver_vtable_cpu
2001772c g     F .text	0000002e metal_uart_set_baud_rate
2001718e g     F .text	000000d0 __metal_driver_sifive_uart0_init
00000000 g       *ABS*	00000000 __metal_eccscrub_bit
80000a38 g     O .data	00000024 __metal_dt_i2c_10016000
20014144 g     F .text	00000072 __metal_driver_cpu_mcycle_get
20010f2c g     O .rodata	0000000c __metal_driver_vtable_sifive_fe310_g000_pll
80000fc0 g       .heap	00000000 metal_segment_heap_target_start
20011762 g     F .text	0000000a _cleanup_r
80000ad8 g     O .data	00000008 __metal_dt_cpu_0
200136a6  w    F .text	00000096 metal_lc8_interrupt_vector_handler
20015546 g     F .text	00000164 __metal_driver_sifive_fe310_g000_pll_set_rate_hz
200178fa g     F .text	0000004a metal_timer_get_timebase_frequency
20014d58 g     F .text	00000074 __metal_driver_riscv_plic0_affinity_set_threshold
2001136e g     F .text	0000000e puts
20013994  w    F .text	00000096 metal_lc13_interrupt_vector_handler
20012d8a g     F .text	00000018 __metal_default_exception_handler
20017966 g     F .text	00000026 _fstat
20012b4c g     F .text	00000034 __metal_driver_riscv_clint0_set_interrupt
200140d4 g     F .text	00000054 __metal_driver_riscv_cpu_controller_set_vector_mode
20012c1c g     F .text	00000030 __metal_driver_cpu_get
200105a0 g     O .rodata	00000064 __metal_driver_vtable_riscv_cpu_intc
20012c7e g     F .text	00000018 __metal_interrupt_global_disable
20014dcc g     F .text	00000028 __metal_driver_riscv_plic0_affinity_get_threshold
20013610  w    F .text	00000096 metal_lc7_interrupt_vector_handler
200137d2  w    F .text	00000096 metal_lc10_interrupt_vector_handler
20011eae g     F .text	0000002a _sbrk_r
20014b78 g     F .text	00000050 __metal_driver_riscv_plic0_disable
20013d5e g     F .text	0000004e __metal_exception_register
200183ba g     F .text	00000078 metal_init
2001243a g     F .text	0000002e _read_r
200142d8 g     F .text	00000016 __metal_driver_cpu_timer_controller_interrupt
20015bf2 g     F .text	00000040 __metal_driver_sifive_gpio0_enable_output
80000000 g       .rodata	00000000 metal_segment_lim_target_end
20012e7a g     F .text	00000068 __metal_default_sw_handler
20017392 g     F .text	00000032 metal_clock_register_post_rate_change_callback
8000006c g     O .data	0000000c __metal_dt_clock_2
20016ce8 g     F .text	00000020 __metal_driver_sifive_uart0_interrupt_controller
20018068 g     F .text	00000352 .hidden __umoddi3
2001798c g     F .text	00000020 _isatty
20015cb8 g     F .text	00000040 __metal_driver_sifive_gpio0_output_toggle
20016d28 g     F .text	0000003a __metal_driver_sifive_uart0_tx_interrupt_enable
80000b00 g     O .data	00000008 __metal_driver_vtable_fixed_clock
80000acc g     O .data	00000004 _global_impure_ptr
20012ee2  w    F .text	00000092 metal_timer_interrupt_vector_handler
20017b50 g     F .text	0000006a __libc_init_array
20015c32 g     F .text	00000040 __metal_driver_sifive_gpio0_output_set
20013868  w    F .text	00000096 metal_lc11_interrupt_vector_handler
20017d0a g     F .text	0000035e .hidden __udivdi3
20010fb4 g     O .rodata	00000018 __metal_driver_vtable_sifive_i2c0
20014fba g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz
20014064 g     F .text	0000002a __metal_driver_riscv_cpu_controller_interrupt_enable
20017a00 g     F .text	0000006a _sbrk
20015bac g     F .text	00000046 __metal_driver_sifive_gpio0_disable_output
2001725e g     F .text	00000040 _metal_clock_call_all_callbacks
200102c4 g     F .init	00000002 _init
20012ce0 g     F .text	0000001a __metal_interrupt_timer_disable
20015da4 g     F .text	00000206 __metal_driver_sifive_gpio0_config_int
2001438e g     F .text	00000062 __metal_driver_cpu_clear_sw_ipi
20010f78 g     O .rodata	0000003c __metal_driver_vtable_sifive_gpio0
20016d62 g     F .text	00000038 __metal_driver_sifive_uart0_tx_interrupt_disable
20015cf8 g     F .text	00000062 __metal_driver_sifive_gpio0_enable_io
20017b18 g     F .text	00000038 __libc_fini_array
80000ab4 g     O .data	0000000c __metal_dt_clock_4
20018432 g     F .text	00000078 metal_fini
20016132 g     F .text	00000020 __metal_driver_gpio_interrupt_controller
20014318 g     F .text	00000014 __metal_driver_cpu_get_sw_interrupt_id
20014522 g     F .text	00000020 __metal_driver_cpu_get_buserror
80000000 g       .data	00000000 metal_segment_data_target_start
20012d32 g     F .text	0000002c __metal_interrupt_local_enable
20012b18 g     F .text	00000034 __metal_driver_riscv_clint0_clear_interrupt
200184d6 g     F .text	00000028 metal_tty_putc
20014860 g     F .text	00000018 __metal_plic0_default_handler
20017a6a  w    F .text	00000070 write
00000000 g       *ABS*	00000000 __tbss_size
80000060 g     O .data	0000000c __metal_dt_clock_0
200175b2 g     F .text	000000e6 metal_gettimeofday
00000800 g       *ABS*	00000000 __heap_size
20014bc8 g     F .text	00000030 __metal_driver_riscv_plic0_set_threshold
20012f74 g     F .text	00000016 __metal_default_beu_handler
2001040c g     O .rodata	00000020 __sf_fake_stderr
20012d16 g     F .text	0000001c __metal_interrupt_external_disable
20016d08 g     F .text	00000020 __metal_driver_sifive_uart0_get_interrupt_id
20017500 g     F .text	00000046 metal_i2c_read
20014128 g     F .text	0000001c __metal_driver_riscv_cpu_controller_command_request
20013dac g     F .text	000000e2 __metal_driver_riscv_cpu_controller_interrupt_init
20011bd4 g     F .text	00000042 __sfputs_r
20014470 g     F .text	00000046 __metal_driver_cpu_exception_register
20012c96 g     F .text	00000018 __metal_interrupt_software_enable
2001328c  w    F .text	00000096 metal_lc1_interrupt_vector_handler
2001206e g     F .text	0000001a memchr
20017546 g     F .text	00000030 metal_i2c_set_baud_rate
20011a20 g     F .text	000000ac _free_r
80000b18 g     O .bss	00000004 _global_atexit
20014728 g     F .text	00000062 __metal_driver_riscv_plic0_set_priority
20013b56 g     F .text	00000050 __metal_controller_interrupt_vector_mode
20017c42 g     F .text	000000c8 __call_exitprocs
80000fc0 g       .stack	00000000 _sp
200102f0 g     O .init_array	00000004 _metal_tty_init_ptr
20010158 g     F .init	00000000 _start
20014e4a g     F .text	00000084 __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz
200178b0 g     F .text	0000004a metal_timer_get_cyclecount
200179ac g     F .text	0000002a _lseek
20014450 g     F .text	00000020 __metal_driver_cpu_controller_interrupt
200144e4 g     F .text	0000001e __metal_driver_cpu_get_exception_pc
20012cfa g     F .text	0000001c __metal_interrupt_external_enable
20017bba g     F .text	00000088 __register_exitproc
20016f30 g     F .text	00000042 __metal_driver_sifive_uart0_putc
2001491c g     F .text	00000150 __metal_driver_riscv_plic0_init
20014b2a g     F .text	0000004e __metal_driver_riscv_plic0_enable
20015b80 g     F .text	0000002c __metal_driver_sifive_gpio0_output
2001357a  w    F .text	00000096 metal_lc6_interrupt_vector_handler
20012c4c g     F .text	0000001a __metal_myhart_id
20016152 g     F .text	0000002e __metal_driver_gpio_get_interrupt_id
20012de8  w    F .text	00000092 metal_software_interrupt_vector_handler
2001408e g     F .text	0000002a __metal_driver_riscv_cpu_controller_interrupt_disable
20011fc0 g     F .text	0000002a _close_r
200173c4 g     F .text	0000002a metal_cpu_get_timer
20016fc8 g     F .text	00000020 __metal_driver_sifive_uart0_get_baud_rate
2001270c g     F .text	000000da __metal_driver_riscv_clint0_register
80000ad0 g     O .data	00000008 __metal_dt_clint_2000000
2001143c g     F .text	00000110 __swsetup_r
20011816 g     F .text	0000009a __sfp
20017318 g     F .text	0000004a metal_clock_set_rate_hz
20011ed8 g     F .text	00000030 __sread
20015ad0 g     F .text	00000040 __metal_driver_sifive_gpio0_enable_input
200102c6  w    F .init	00000000 secondary_main
20012dba  w    F .text	0000002e metal_interrupt_vector_handler
20012088 g     F .text	00000002 __malloc_lock
20016dd4 g     F .text	00000038 __metal_driver_sifive_uart0_rx_interrupt_disable
20011696 g     F .text	00000064 _fflush_r
200146ee g     F .text	0000003a __metal_plic0_get_threshold
200156bc g     F .text	0000002e __metal_driver_sifive_fe310_g000_prci_get_reg
2001042c g     O .rodata	00000020 __sf_fake_stdin
20013ca2 g     F .text	000000bc __metal_local_interrupt_enable
200129e6 g     F .text	00000132 __metal_driver_riscv_clint0_command_request
20011a10 g     F .text	00000010 memset
200134e4  w    F .text	00000096 metal_lc5_interrupt_vector_handler
20011180 g     F .text	000000d0 main
80000b10 g       .data	00000000 metal_segment_data_target_end
20016eb6 g     F .text	0000004a __metal_driver_sifive_uart0_set_rx_watermark
80000ae8 g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_hfrosc
2001432c g     F .text	00000062 __metal_driver_cpu_set_sw_ipi
200143f0 g     F .text	00000060 __metal_driver_cpu_get_msip
200175a4 g     F .text	0000000e metal_shutdown
08000000 g       .rodata	00000000 metal_segment_itim_target_end
20014502 g     F .text	00000020 __metal_driver_cpu_set_exception_pc
20014626 g     F .text	0000003c __metal_plic0_claim_interrupt
20016e86 g     F .text	00000030 __metal_driver_sifive_uart0_get_tx_watermark
20011f8c g     F .text	00000006 __sclose
200138fe  w    F .text	00000096 metal_lc12_interrupt_vector_handler
20010092 g     F .init	00000000 metal_mem_scrub
20011acc g     F .text	000000de _malloc_r
2001280e g     F .text	0000001c __metal_driver_riscv_clint0_get_vector_mode
80000ae4 g     O .data	00000004 __metal_dt_prci_10008000
200141b6 g     F .text	00000046 __metal_driver_cpu_timebase_get
20014cbc g     F .text	0000009c __metal_driver_riscv_plic0_affinity_disable
20010000 g       .init	00000000 _enter
2001746c g     F .text	0000001a metal_cpu_get_current_hartid
20014f46 g     F .text	00000074 __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz
20017780 g       .text	00000000 __metal_vector_table
20011120 g       *ABS*	00000000 metal_segment_itim_source_start
80000ac0  w    O .data	00000004 __metal_cpu_table
80000090 g     O .data	000003d0 __metal_dt_cpu_0_interrupt_controller
200102c4 g     F .init	00000002 _fini
20011250 g     F .text	00000044 iprintf
80000000 g       .rodata	00000000 metal_segment_lim_target_start
20011020 g     O .rodata	00000100 .hidden __clz_tab
2001478a g     F .text	00000034 __metal_driver_riscv_plic0_get_priority
20010320 g     F .ctors	0000002a use_hfxosc
20012c66 g     F .text	00000018 __metal_interrupt_global_enable
20017ada g     F .text	0000000a atexit
20011f92 g     F .text	0000002e _write_r
20012cc6 g     F .text	0000001a __metal_interrupt_timer_enable
20016f72 g     F .text	00000056 __metal_driver_sifive_uart0_getc
20012934 g     F .text	000000b2 __metal_driver_riscv_clint0_disable
2001208c g     F .text	0000010c _printf_common
80000ac8 g     O .data	00000004 _impure_ptr
20014262 g     F .text	00000076 __metal_driver_cpu_mtimecmp_set
2001154c g     F .text	0000014a __sflush_r
20014bf8 g     F .text	00000028 __metal_driver_riscv_plic0_get_threshold
200150e4 g     F .text	000000a4 __metal_driver_sifive_fe310_g000_pll_init
80000078 g     O .data	0000000c __metal_dt_clock_5
200156ea g     F .text	00000038 __metal_driver_sifive_fe310_g000_prci_set_reg
20017870 g     F .text	0000001e __metal_driver_fixed_clock_get_rate_hz
20012882 g     F .text	000000b2 __metal_driver_riscv_clint0_enable
20018518 g       *ABS*	00000000 metal_segment_data_source_start
2001013c g       .init	00000000 early_trap_vector
800017c0 g       .heap	00000000 metal_segment_heap_target_end
20013ba6 g     F .text	00000098 __metal_controller_interrupt_vector
80000aa8 g     O .data	0000000c __metal_dt_clock_1
80000460 g     O .data	000005d8 __metal_dt_interrupt_controller_c000000
2001191c g     F .text	00000058 __swhatbuf_r
20015c72 g     F .text	00000046 __metal_driver_sifive_gpio0_output_clear
20012f8a g     F .text	00000066 __metal_default_timer_handler
20017a6a g     F .text	00000070 _write
20014878 g     F .text	000000a4 __metal_plic0_handler
20013322  w    F .text	00000096 metal_lc2_interrupt_vector_handler
20013ac0  w    F .text	00000096 metal_lc15_interrupt_vector_handler
20017418 g     F .text	00000026 metal_cpu_interrupt_controller
20011f08 g     F .text	0000004e __swrite
20017af0 g     F .text	00000028 exit
20011c16 g     F .text	00000298 _vfiprintf_r
200118b0 g     F .text	0000006c _fwalk_reent
2001788e g     F .text	00000022 __metal_driver_fixed_clock_set_rate_hz
20011120 g       *ABS*	00000000 metal_segment_lim_source_start
2001044c g     O .rodata	00000020 __sf_fake_stdout
80000ae0 g     O .data	00000004 __metal_dt_gpio_10012000
20012da2 g     F .text	00000018 __metal_default_interrupt_handler
200176fe g     F .text	0000002e metal_uart_putc
200179d6 g     F .text	0000002a _read
200184c0  w    F .text	00000016 metal_fini_run
20015b56 g     F .text	0000002a __metal_driver_sifive_gpio0_input
20013000 g     F .text	0000017c __metal_exception_handler
200131f6  w    F .text	00000096 metal_lc0_interrupt_vector_handler
200184fe g     F .text	00000014 _exit
20017576 g     F .text	0000002e metal_i2c_get_device
200141fc g     F .text	00000066 __metal_driver_cpu_mtime_get
20011974 g     F .text	0000009c __smakebuf_r
200127e6 g     F .text	00000028 __metal_driver_riscv_clint0_vector_register
20012198 g     F .text	000002a2 _printf_i
80000b14 g     O .bss	00000004 __malloc_sbrk_start
20013a2a  w    F .text	00000096 metal_lc14_interrupt_vector_handler
80000af0 g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_hfxosc
20012684 g     F .text	00000088 __metal_driver_riscv_clint0_init
80000b10 g     O .bss	00000004 __malloc_free_list
200102f4 g     F .ctors	0000002c metal_sifive_fe310_g000_pll_init
20011c16 g     F .text	00000298 _vfprintf_r
200142ee g     F .text	00000014 __metal_driver_cpu_get_timer_interrupt_id
200147be g     F .text	000000a2 __metal_plic0_enable
20010090  w      .init	00000000 __register_frame_info
20014ece g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz
20014302 g     F .text	00000016 __metal_driver_cpu_sw_controller_interrupt
20012d5e g     F .text	0000002c __metal_interrupt_local_disable
20012cae g     F .text	00000018 __metal_interrupt_software_disable
20017698 g     F .text	0000003a metal_time
200176d2 g     F .text	0000002c metal_uart_init
80000a9c g     O .data	0000000c __metal_dt_clock_3
80000084 g     O .data	0000000c __metal_dt_clock_6
200146a8 g     F .text	00000046 __metal_plic0_set_threshold
20014c20 g     F .text	0000009c __metal_driver_riscv_plic0_affinity_enable
20017944 g     F .text	00000022 _close
80000af8 g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_prci
00000000 g       *ABS*	00000000 __metal_boot_hart
20014a6c g     F .text	000000be __metal_driver_riscv_plic0_register



Disassembly of section .init:

20010000 <_enter>:
_enter():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:24
     * it's not valid to obtain the address of any symbol without GP
     * configured.  The C environment might go ahead and do this again, but
     * that's safe as it's a fixed register. */
.option push
.option norelax
    la gp, __global_pointer$
20010000:	5fff1197          	auipc	gp,0x5fff1
20010004:	2c018193          	addi	gp,gp,704 # 800012c0 <__global_pointer$>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:28
.option pop

    /* trap over the chicken bit register clearing, aloe & fe310 dont have it */
    la t0, 1f
20010008:	00000297          	auipc	t0,0x0
2001000c:	01828293          	addi	t0,t0,24 # 20010020 <_enter+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:29
    csrw mtvec, t0
20010010:	30529073          	csrw	mtvec,t0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:31
    /* chicken bit is enable if core are sifive series. */
    la t0, __metal_chicken_bit
20010014:	00100293          	li	t0,1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:32
    beqz t0, 1f
20010018:	00028463          	beqz	t0,20010020 <_enter+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:34
    /* If set, always clear the feature disable register for all cores series */
    csrwi 0x7C1, 0
2001001c:	7c105073          	csrwi	0x7c1,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:39
.align 4
1:
    /* Set up a simple trap vector to catch anything that goes wrong early in
     * the boot process. */
    la t0, early_trap_vector
20010020:	00000297          	auipc	t0,0x0
20010024:	11c28293          	addi	t0,t0,284 # 2001013c <early_trap_vector>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:40
    csrw mtvec, t0
20010028:	30529073          	csrw	mtvec,t0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:48
     * C, so here we set up a C environment. First we set up a stack pointer,
     * which is left as a weak reference in order to allow initialization
     * routines that do not need a stack to be set up to transparently be
     * called. */
    .weak __metal_stack_pointer
    la sp, __metal_stack_pointer
2001002c:	dfff0117          	auipc	sp,0xdfff0
20010030:	fd410113          	addi	sp,sp,-44 # 0 <__metal_boot_hart>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:55
   /* The METAL is designed for a bare-metal environment and therefore is expected
    * to define its own stack pointer. We also align the stack pointer here
    * because the only RISC-V ABI that's currently defined, mandates 16-byte
    * stack alignment. */

    bne sp, zero, 1f
20010034:	00011463          	bnez	sp,2001003c <_enter+0x3c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:56
    la sp, _sp
20010038:	d0018113          	addi	sp,gp,-768 # 80000fc0 <_sp>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:59
1:
    /* Increment by hartid number of stack sizes */
    csrr a0, mhartid
2001003c:	f1402573          	csrr	a0,mhartid
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:60
    li t0, 0
20010040:	4281                	li	t0,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:61
    la t1, __stack_size
20010042:	40000313          	li	t1,1024
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:63
1:
    andi sp, sp, -16
20010046:	ff017113          	andi	sp,sp,-16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:64
    beq t0, a0, 1f
2001004a:	00a28563          	beq	t0,a0,20010054 <_enter+0x54>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:65
    add sp, sp, t1
2001004e:	911a                	add	sp,sp,t1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:66
    addi t0, t0, 1
20010050:	0285                	addi	t0,t0,1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:67
    j 1b
20010052:	bfd5                	j	20010046 <_enter+0x46>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:76
     * just skip over the call entirely.   Note that __metal_initialize isn't
     * actually a full C function, as it doesn't end up with the .bss or .data
     * segments having been initialized.  This is done to avoid putting a
     * burden on systems that can be initialized without having a C environment
     * set up. */
    la ra, __metal_before_start
20010054:	00000097          	auipc	ra,0x0
20010058:	08208093          	addi	ra,ra,130 # 200100d6 <__metal_before_start>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:77
    beqz ra, 1f
2001005c:	00008363          	beqz	ra,20010062 <_enter+0x62>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:78
    jalr ra
20010060:	9082                	jalr	ra
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:84
1:

    /* At this point we can enter the C runtime's startup file.  The arguments
     * to this function are designed to match those provided to the SEE, just
     * so we don't have to write another ABI. */
    csrr a0, mhartid
20010062:	f1402573          	csrr	a0,mhartid
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:85
    li a1, 0
20010066:	4581                	li	a1,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:86
    li a2, 0
20010068:	4601                	li	a2,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:87
    call _start
2001006a:	20fd                	jal	20010158 <_start>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:92

    /* If we've made it back here then there's probably something wrong.  We
     * allow the METAL to register a handler here. */
    .weak __metal_after_main
    la ra, __metal_after_main
2001006c:	dfff0097          	auipc	ra,0xdfff0
20010070:	f9408093          	addi	ra,ra,-108 # 0 <__metal_boot_hart>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:93
    beqz ra, 1f
20010074:	00008363          	beqz	ra,2001007a <_enter+0x7a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:94
    jalr ra
20010078:	9082                	jalr	ra
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:99
1:

    /* If that handler returns then there's not a whole lot we can do.  Just
     * try to make some noise. */
     la t0, 1f
2001007a:	00000297          	auipc	t0,0x0
2001007e:	00c28293          	addi	t0,t0,12 # 20010086 <_enter+0x86>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:100
     csrw mtvec, t0
20010082:	30529073          	csrw	mtvec,t0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:102
1:
     lw t1, 0(x0)
20010086:	00002303          	lw	t1,0(zero) # 0 <__metal_boot_hart>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:103
     j 1b
2001008a:	bff5                	j	20010086 <_enter+0x86>
2001008c:	0000                	unimp
	...

20010090 <__register_frame_info>:
__register_frame_info():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:117
.weak __register_frame_info
.global __register_frame_info
.section .text.metal.init.__register_frame_info
__register_frame_info:
    .cfi_startproc
    ret
20010090:	8082                	ret

20010092 <metal_mem_scrub>:
metal_mem_scrub():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:24
.type metal_mem_scrub, @function
metal_mem_scrub:

    /* Disable machine interrupts,
    restore previous mstatus value at exit */
    li      a3, 8
20010092:	46a1                	li	a3,8
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:25
    csrrc   t1, mstatus, a3
20010094:	3006b373          	csrrc	t1,mstatus,a3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:28

#if __riscv_xlen == 32
    addi    t0, x0, 4
20010098:	00400293          	li	t0,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:30
1:
    blt     a1, t0, 2f
2001009c:	0055c563          	blt	a1,t0,200100a6 <metal_mem_scrub+0x14>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:31
    andi    a2, a0, 3
200100a0:	00357613          	andi	a2,a0,3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:32
    beqz    a2, 3f
200100a4:	ca11                	beqz	a2,200100b8 <metal_mem_scrub+0x26>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:34
2:
    sb      x0, 0(a0)
200100a6:	00050023          	sb	zero,0(a0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:35
    addi    a0, a0, 1
200100aa:	0505                	addi	a0,a0,1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:36
    addi    a1, a1, -1
200100ac:	15fd                	addi	a1,a1,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:37
    bgtz    a1, 1b
200100ae:	feb047e3          	bgtz	a1,2001009c <metal_mem_scrub+0xa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:38
    csrw    mstatus, t1
200100b2:	30031073          	csrw	mstatus,t1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:39
    ret
200100b6:	8082                	ret
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:41
3:
    sw      x0, 0(a0)
200100b8:	00052023          	sw	zero,0(a0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:42
    addi    a0, a0, 4
200100bc:	0511                	addi	a0,a0,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:43
    addi    a1, a1, -4
200100be:	15f1                	addi	a1,a1,-4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:44
    bgtz    a1, 1b
200100c0:	fcb04ee3          	bgtz	a1,2001009c <metal_mem_scrub+0xa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:45
    csrw    mstatus, t1
200100c4:	30031073          	csrw	mstatus,t1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:46
    ret
200100c8:	8082                	ret

200100ca <__metal_memory_scrub>:
__metal_memory_scrub():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:74
.type __metal_memory_scrub, @function
__metal_memory_scrub:
/* Zero out specified memory regions */
1:
#if __riscv_xlen == 32
    sw      x0, 0(t1)
200100ca:	00032023          	sw	zero,0(t1)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:75
    addi    t1, t1, 4
200100ce:	0311                	addi	t1,t1,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:76
    blt     t1, t2, 1b
200100d0:	fe734de3          	blt	t1,t2,200100ca <__metal_memory_scrub>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:82
#else
    sd      x0, 0(t1)
    addi    t1, t1, 8
    blt     t1, t2, 1b
#endif
    ret
200100d4:	8082                	ret

200100d6 <__metal_before_start>:
__metal_before_start():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:94
.weak __metal_before_start
.global __metal_before_start
.type __metal_before_start, @function
__metal_before_start:
    /* Save caller ra */
    mv      s0, ra
200100d6:	8406                	mv	s0,ra
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:96

    la      t0, __metal_eccscrub_bit
200100d8:	dfff0297          	auipc	t0,0xdfff0
200100dc:	f2828293          	addi	t0,t0,-216 # 0 <__metal_boot_hart>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:97
    beqz    t0, skip_scrub
200100e0:	04028c63          	beqz	t0,20010138 <skip_scrub>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:99

    la      t0, __metal_boot_hart
200100e4:	dfff0297          	auipc	t0,0xdfff0
200100e8:	f1c28293          	addi	t0,t0,-228 # 0 <__metal_boot_hart>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:100
    csrr    a5, mhartid
200100ec:	f14027f3          	csrr	a5,mhartid
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:103

    /* Disable machine interrupts to be safe */
    li      a3, 8
200100f0:	46a1                	li	a3,8
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:104
    csrc    mstatus, a3
200100f2:	3006b073          	csrc	mstatus,a3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:107

    /* Zero out per hart stack */
    mv      t1, sp
200100f6:	830a                	mv	t1,sp
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:108
    la      t2, __stack_size
200100f8:	dfff0397          	auipc	t2,0xdfff0
200100fc:	30838393          	addi	t2,t2,776 # 400 <__stack_size>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:109
    add     t2, t2, sp
20010100:	938a                	add	t2,t2,sp
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:110
    beq     t1, t2, 1f
20010102:	00730363          	beq	t1,t2,20010108 <__metal_before_start+0x32>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:111
    jal     __metal_memory_scrub
20010106:	37d1                	jal	200100ca <__metal_memory_scrub>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:113
1:
    bne     a5, t0, skip_scrub
20010108:	02579863          	bne	a5,t0,20010138 <skip_scrub>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:116

    /* Zero out data segment */
    la      t1, metal_segment_data_target_start
2001010c:	5fff0317          	auipc	t1,0x5fff0
20010110:	ef430313          	addi	t1,t1,-268 # 80000000 <metal_segment_lim_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:117
    la      t2, metal_segment_data_target_end
20010114:	5fff1397          	auipc	t2,0x5fff1
20010118:	9fc38393          	addi	t2,t2,-1540 # 80000b10 <__tls_base>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:118
    beq     t1, t2, 1f
2001011c:	00730363          	beq	t1,t2,20010122 <__metal_before_start+0x4c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:119
    jal     __metal_memory_scrub
20010120:	376d                	jal	200100ca <__metal_memory_scrub>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:122
1:
    /* Zero out itim memory */
    la      t1, metal_segment_itim_target_start
20010122:	e7ff0317          	auipc	t1,0xe7ff0
20010126:	ede30313          	addi	t1,t1,-290 # 8000000 <metal_segment_itim_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:123
    la      t2, metal_segment_itim_target_end
2001012a:	e7ff0397          	auipc	t2,0xe7ff0
2001012e:	ed638393          	addi	t2,t2,-298 # 8000000 <metal_segment_itim_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:124
    beq     t1, t2, skip_scrub
20010132:	00730363          	beq	t1,t2,20010138 <skip_scrub>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:125
    jal     __metal_memory_scrub
20010136:	3f51                	jal	200100ca <__metal_memory_scrub>

20010138 <skip_scrub>:
skip_scrub():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:129

skip_scrub:
    /* Restore caller ra */
    mv      ra, s0
20010138:	80a2                	mv	ra,s0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:130
    ret
2001013a:	8082                	ret

2001013c <early_trap_vector>:
early_trap_vector():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/trap.S:64
.section .text.metal.init.trapvec
.global early_trap_vector
.align 2
early_trap_vector:
    .cfi_startproc
    csrr t0, mcause
2001013c:	342022f3          	csrr	t0,mcause
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/trap.S:65
    csrr t1, mepc
20010140:	34102373          	csrr	t1,mepc
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/trap.S:66
    csrr t2, mtval
20010144:	343023f3          	csrr	t2,mtval
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/trap.S:67
    j early_trap_vector
20010148:	bfd5                	j	2001013c <early_trap_vector>

2001014a <__metal_synchronize_harts>:
__metal_synchronize_harts():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/synchronize_harts.c:19
/*
 * _synchronize_harts() is called by crt0.S to cause harts > 0 to wait for
 * hart 0 to finish copying the datat section, zeroing the BSS, and running
 * the libc contstructors.
 */
__attribute__((section(".init"))) void __metal_synchronize_harts() {
2001014a:	1141                	addi	sp,sp,-16
2001014c:	c622                	sw	s0,12(sp)
2001014e:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/synchronize_harts.c:66
        while (METAL_MSIP(msip_base, hart) == 1)
            ;
    }

#endif /* __METAL_DT_MAX_HARTS > 1 */
}
20010150:	0001                	nop
20010152:	4432                	lw	s0,12(sp)
20010154:	0141                	addi	sp,sp,16
20010156:	8082                	ret

20010158 <_start>:
_start():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:36
.cfi_startproc
.cfi_undefined ra

  /* This is a bit funky: it's not usually sane for _start to return, but in
   * this case we actually want to in order to signal an error to the METAL. */
  mv s0, ra
20010158:	8406                	mv	s0,ra
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:44
   * safely perform any access that may be relaxed without GP being set.  This
   * is done with relaxation disabled to avoid relaxing the address calculation
   * to just "addi gp, gp, 0". */
.option push
.option norelax
  la gp, __global_pointer$
2001015a:	5fff1197          	auipc	gp,0x5fff1
2001015e:	16618193          	addi	gp,gp,358 # 800012c0 <__global_pointer$>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:50
.option pop

  /* Stack pointer is expected to be initialized before _start */

  /* If we're not hart 0, skip the initialization work */
  la t0, __metal_boot_hart
20010162:	00000293          	li	t0,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:51
  bne a0, t0, _skip_init
20010166:	0e551163          	bne	a0,t0,20010248 <_skip_init>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:60
   * boot and then need to get relocated into a non-persistant writable memory
   * before C code can execute.  If this is the case we do so here.  This step
   * is optional: if the METAL provides an environment in which this relocation
   * is not necessary then it must simply set metal_segment_data_source_start to
   * be equal to metal_segment_data_target_start. */
  la t0, metal_segment_data_source_start
2001016a:	00008297          	auipc	t0,0x8
2001016e:	3ae28293          	addi	t0,t0,942 # 20018518 <metal_segment_data_source_start>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:61
  la t1, metal_segment_data_target_start
20010172:	5fff0317          	auipc	t1,0x5fff0
20010176:	e8e30313          	addi	t1,t1,-370 # 80000000 <metal_segment_lim_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:62
  la t2, metal_segment_data_target_end
2001017a:	5fff1397          	auipc	t2,0x5fff1
2001017e:	99638393          	addi	t2,t2,-1642 # 80000b10 <__tls_base>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:64

  beq t0, t1, 2f
20010182:	00628c63          	beq	t0,t1,2001019a <_start+0x42>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:65
  bge t1, t2, 2f
20010186:	00735a63          	bge	t1,t2,2001019a <_start+0x42>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:69

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
2001018a:	0002a503          	lw	a0,0(t0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:70
  addi t0, t0, 4
2001018e:	0291                	addi	t0,t0,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:71
  sw   a0, 0(t1)
20010190:	00a32023          	sw	a0,0(t1)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:72
  addi t1, t1, 4
20010194:	0311                	addi	t1,t1,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:73
  blt  t1, t2, 1b
20010196:	fe734ae3          	blt	t1,t2,2001018a <_start+0x32>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:84
  blt  t1, t2, 1b
#endif
2:

  /* Copy the ITIM section */
  la t0, metal_segment_itim_source_start
2001019a:	00001297          	auipc	t0,0x1
2001019e:	f8628293          	addi	t0,t0,-122 # 20011120 <metal_segment_itim_source_start>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:85
  la t1, metal_segment_itim_target_start
200101a2:	e7ff0317          	auipc	t1,0xe7ff0
200101a6:	e5e30313          	addi	t1,t1,-418 # 8000000 <metal_segment_itim_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:86
  la t2, metal_segment_itim_target_end
200101aa:	e7ff0397          	auipc	t2,0xe7ff0
200101ae:	e5638393          	addi	t2,t2,-426 # 8000000 <metal_segment_itim_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:88

  beq t0, t1, 2f
200101b2:	00628c63          	beq	t0,t1,200101ca <_start+0x72>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:89
  bge t1, t2, 2f
200101b6:	00735a63          	bge	t1,t2,200101ca <_start+0x72>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:93

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
200101ba:	0002a503          	lw	a0,0(t0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:94
  addi t0, t0, 4
200101be:	0291                	addi	t0,t0,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:95
  sw   a0, 0(t1)
200101c0:	00a32023          	sw	a0,0(t1)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:96
  addi t1, t1, 4
200101c4:	0311                	addi	t1,t1,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:97
  blt  t1, t2, 1b
200101c6:	fe734ae3          	blt	t1,t2,200101ba <_start+0x62>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:109
#endif
2:

  /* Fence all subsequent instruction fetches until after the ITIM writes
     complete */
  fence.i
200101ca:	0000100f          	fence.i
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:114

2:

  /* Copy the LIM section */
  la t0, metal_segment_lim_source_start
200101ce:	00001297          	auipc	t0,0x1
200101d2:	f5228293          	addi	t0,t0,-174 # 20011120 <metal_segment_itim_source_start>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:115
  la t1, metal_segment_lim_target_start
200101d6:	5fff0317          	auipc	t1,0x5fff0
200101da:	e2a30313          	addi	t1,t1,-470 # 80000000 <metal_segment_lim_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:116
  la t2, metal_segment_lim_target_end
200101de:	5fff0397          	auipc	t2,0x5fff0
200101e2:	e2238393          	addi	t2,t2,-478 # 80000000 <metal_segment_lim_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:118

  beq t0, t1, 2f
200101e6:	00628c63          	beq	t0,t1,200101fe <_start+0xa6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:119
  bge t1, t2, 2f
200101ea:	00735a63          	bge	t1,t2,200101fe <_start+0xa6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:123

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
200101ee:	0002a503          	lw	a0,0(t0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:124
  addi t0, t0, 4
200101f2:	0291                	addi	t0,t0,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:125
  sw   a0, 0(t1)
200101f4:	00a32023          	sw	a0,0(t1)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:126
  addi t1, t1, 4
200101f8:	0311                	addi	t1,t1,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:127
  blt  t1, t2, 1b
200101fa:	fe734ae3          	blt	t1,t2,200101ee <_start+0x96>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:139
#endif
2:

  /* Fence all subsequent instruction fetches until after the LIM writes
     complete */
  fence.i
200101fe:	0000100f          	fence.i
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:142

  /* Zero the BSS segment. */
  la t1, metal_segment_bss_target_start
20010202:	5fff1317          	auipc	t1,0x5fff1
20010206:	90e30313          	addi	t1,t1,-1778 # 80000b10 <__tls_base>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:143
  la t2, metal_segment_bss_target_end
2001020a:	8f418393          	addi	t2,gp,-1804 # 80000bb4 <metal_segment_bss_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:145

  bge t1, t2, 2f
2001020e:	00735763          	bge	t1,t2,2001021c <_start+0xc4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:149

1:
#if __riscv_xlen == 32
  sw   x0, 0(t1)
20010212:	00032023          	sw	zero,0(t1)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:150
  addi t1, t1, 4
20010216:	0311                	addi	t1,t1,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:151
  blt  t1, t2, 1b
20010218:	fe734de3          	blt	t1,t2,20010212 <_start+0xba>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:161
#endif
2:

  /* Set TLS pointer */
  .weak __tls_base	
  la tp, __tls_base
2001021c:	5fff1217          	auipc	tp,0x5fff1
20010220:	8f420213          	addi	tp,tp,-1804 # 80000b10 <__tls_base>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:166

  /* At this point we're in an environment that can execute C code.  The first
   * thing to do is to make the callback to the parent environment if it's been
   * requested to do so. */
  beqz a2, 1f
20010224:	c211                	beqz	a2,20010228 <_start+0xd0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:167
  jalr a2
20010226:	9602                	jalr	a2
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:171
1:

  /* The RISC-V port only uses new-style constructors and destructors. */
  la a0, __libc_fini_array
20010228:	00008517          	auipc	a0,0x8
2001022c:	8f050513          	addi	a0,a0,-1808 # 20017b18 <__libc_fini_array>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:172
  call atexit
20010230:	0ab070ef          	jal	ra,20017ada <atexit>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:173
  call __libc_init_array
20010234:	11d070ef          	jal	ra,20017b50 <__libc_init_array>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:177

  /* Register metal_fini_run as a destructor and call metal_init_run to
   * run and setup Metal constructors */
  la a0, metal_fini_run
20010238:	00008517          	auipc	a0,0x8
2001023c:	28850513          	addi	a0,a0,648 # 200184c0 <metal_fini_run>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:178
  call atexit
20010240:	09b070ef          	jal	ra,20017ada <atexit>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:179
  call metal_init_run
20010244:	266080ef          	jal	ra,200184aa <metal_init_run>

20010248 <_skip_init>:
_skip_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:185

_skip_init:

  /* Synchronize harts so that secondary harts wait until hart 0 finishes
     initializing */
  call __metal_synchronize_harts
20010248:	3709                	jal	2001014a <__metal_synchronize_harts>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:188

  /* Disable and clear all interrupt sources */
  li   a3, -1
2001024a:	56fd                	li	a3,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:189
  csrc mie, a3
2001024c:	3046b073          	csrc	mie,a3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:190
  csrc mip, a3
20010250:	3446b073          	csrc	mip,a3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:194

  /* The delegation CSRs exist if user mode interrupts (N extension) or
   * supervisor mode (S extension) are supported */
  csrr a5, misa
20010254:	301027f3          	csrr	a5,misa
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:195
  lui  a4, 0x42
20010258:	00042737          	lui	a4,0x42
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:196
  and  a4, a4, a5
2001025c:	8f7d                	and	a4,a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:197
  beqz a4, 1f
2001025e:	c709                	beqz	a4,20010268 <_skip_init+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:198
  csrc mideleg, a3
20010260:	3036b073          	csrc	mideleg,a3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:199
  csrc medeleg, a3
20010264:	3026b073          	csrc	medeleg,a3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:203
1:

  /* The satp CSR exists if supervisor mode (S extension) is supported */
  lui  a4, 0x40
20010268:	00040737          	lui	a4,0x40
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:204
  and  a4, a4, a5
2001026c:	8f7d                	and	a4,a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:205
  beqz a4, 1f
2001026e:	c319                	beqz	a4,20010274 <_skip_init+0x2c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:206
  csrc satp, a3
20010270:	1806b073          	csrc	satp,a3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:210
1:

  /* Check RISC-V isa and enable FS bits if Floating Point architecture. */
  li   a4, 0x10028
20010274:	00010737          	lui	a4,0x10
20010278:	02870713          	addi	a4,a4,40 # 10028 <__heap_size+0xf828>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:211
  and  a5, a5, a4
2001027c:	8ff9                	and	a5,a5,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:212
  beqz a5, 1f
2001027e:	cb89                	beqz	a5,20010290 <_skip_init+0x48>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:213
  csrr a5, mstatus
20010280:	300027f3          	csrr	a5,mstatus
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:214
  lui  a4, 0x2
20010284:	6709                	lui	a4,0x2
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:215
  or   a5, a5, a4
20010286:	8fd9                	or	a5,a5,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:216
  csrw mstatus, a5
20010288:	30079073          	csrw	mstatus,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:217
  csrwi fcsr, 0
2001028c:	00305073          	csrwi	fcsr,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:221
1:

  /* Check for vector extension support and enable it if found */
  csrr a5, misa
20010290:	301027f3          	csrr	a5,misa
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:222
  li a4, 0x200000
20010294:	00200737          	lui	a4,0x200
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:223
  and a5, a5, a4
20010298:	8ff9                	and	a5,a5,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:224
  beqz a5, 1f
2001029a:	c799                	beqz	a5,200102a8 <_skip_init+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:225
  csrr a5, mstatus
2001029c:	300027f3          	csrr	a5,mstatus
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:226
  ori a5, a5, 0x200
200102a0:	2007e793          	ori	a5,a5,512
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:227
  csrw mstatus, a5
200102a4:	30079073          	csrw	mstatus,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:233
1:

  /* This is a C runtime, so main() is defined to have some arguments.  Since
   * there's nothing sane the METAL can pass we don't bother with that but
   * instead just setup as close to a NOP as we can. */
  li a0, 1     /* argc=1 */
200102a8:	4505                	li	a0,1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:234
  la a1, argv  /* argv = {"libgloss", NULL} */
200102aa:	00001597          	auipc	a1,0x1
200102ae:	d6258593          	addi	a1,a1,-670 # 2001100c <argv>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:235
  la a2, envp  /* envp = {NULL} */
200102b2:	00001617          	auipc	a2,0x1
200102b6:	d5e60613          	addi	a2,a2,-674 # 20011010 <envp>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:236
  call secondary_main
200102ba:	2031                	jal	200102c6 <secondary_main>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:242

  /* Call exit to handle libc's cleanup routines.  Under normal contains this
   * shouldn't even get called, but I'm still not using a tail call here
   * because returning to the METAL is the right thing to do in pathological
   * situations. */
  call exit
200102bc:	035070ef          	jal	ra,20017af0 <exit>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:247

  /* And here's where we return.  Again, it's a bit odd but the METAL defines
   * this as a bad idea (ie, as opposed to leaving it undefined) and at this
   * point it's really the only thing left to do. */
  mv ra, s0
200102c0:	80a2                	mv	ra,s0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:248
  ret
200102c2:	8082                	ret

200102c4 <_fini>:
_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:260
.type   _init, @function
.global _fini
.type   _fini, @function
_init:
_fini:
  ret
200102c4:	8082                	ret

200102c6 <secondary_main>:
secondary_main():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:271
.weak   secondary_main
.global secondary_main
.type   secondary_main, @function

secondary_main:
  addi sp, sp, -16
200102c6:	1141                	addi	sp,sp,-16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:273
#if __riscv_xlen == 32
  sw ra, 4(sp)
200102c8:	c206                	sw	ra,4(sp)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:277
#else
  sd ra, 8(sp)
#endif
  csrr t0, mhartid
200102ca:	f14022f3          	csrr	t0,mhartid
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:278
  la t1, __metal_boot_hart
200102ce:	00000313          	li	t1,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:279
  beq t0, t1, 2f
200102d2:	00628563          	beq	t0,t1,200102dc <secondary_main+0x16>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:281
1:
  wfi
200102d6:	10500073          	wfi
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:282
  j 1b
200102da:	bff5                	j	200102d6 <secondary_main+0x10>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:284
2:
  call main
200102dc:	6a5000ef          	jal	ra,20011180 <main>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:286
#if __riscv_xlen == 32
  lw ra, 4(sp)
200102e0:	4092                	lw	ra,4(sp)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:290
#else
  ld ra, 8(sp)
#endif
  addi sp, sp, 16
200102e2:	0141                	addi	sp,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:291
  ret
200102e4:	8082                	ret

Disassembly of section .ctors:

200102f4 <metal_sifive_fe310_g000_pll_init>:
metal_sifive_fe310_g000_pll_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:151
    return pll_input_rate * config->multiplier / config->divisor;
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE

METAL_CONSTRUCTOR(metal_sifive_fe310_g000_pll_init) {
200102f4:	1101                	addi	sp,sp,-32
200102f6:	ce06                	sw	ra,28(sp)
200102f8:	cc22                	sw	s0,24(sp)
200102fa:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:152
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
200102fc:	561040ef          	jal	ra,2001505c <__metal_driver_sifive_fe310_g000_pll_init_rate>
20010300:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:154
    /* If the PLL init_rate is zero, don't initialize the PLL */
    if (init_rate != 0)
20010304:	fec42783          	lw	a5,-20(s0)
20010308:	c799                	beqz	a5,20010316 <__fini_array_end+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:155
        __metal_driver_sifive_fe310_g000_pll_init(
2001030a:	800017b7          	lui	a5,0x80001
2001030e:	ab478513          	addi	a0,a5,-1356 # 80000ab4 <metal_segment_heap_target_end+0xfffff2f4>
20010312:	5d3040ef          	jal	ra,200150e4 <__metal_driver_sifive_fe310_g000_pll_init>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:157
            __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE);
}
20010316:	0001                	nop
20010318:	40f2                	lw	ra,28(sp)
2001031a:	4462                	lw	s0,24(sp)
2001031c:	6105                	addi	sp,sp,32
2001031e:	8082                	ret

20010320 <use_hfxosc>:
use_hfxosc():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:389

    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE
METAL_CONSTRUCTOR(use_hfxosc) {
20010320:	1101                	addi	sp,sp,-32
20010322:	ce06                	sw	ra,28(sp)
20010324:	cc22                	sw	s0,24(sp)
20010326:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:390
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20010328:	535040ef          	jal	ra,2001505c <__metal_driver_sifive_fe310_g000_pll_init_rate>
2001032c:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:391
    metal_clock_set_rate_hz(&__METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE->clock,
20010330:	fec42583          	lw	a1,-20(s0)
20010334:	800017b7          	lui	a5,0x80001
20010338:	ab478513          	addi	a0,a5,-1356 # 80000ab4 <metal_segment_heap_target_end+0xfffff2f4>
2001033c:	7dd060ef          	jal	ra,20017318 <metal_clock_set_rate_hz>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:393
                            init_rate);
}
20010340:	0001                	nop
20010342:	40f2                	lw	ra,28(sp)
20010344:	4462                	lw	s0,24(sp)
20010346:	6105                	addi	sp,sp,32
20010348:	8082                	ret

2001034a <metal_tty_init>:
metal_tty_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/tty.c:28

#ifndef __METAL_DT_STDOUT_UART_BAUD
#define __METAL_DT_STDOUT_UART_BAUD 115200
#endif

METAL_CONSTRUCTOR(metal_tty_init) {
2001034a:	1141                	addi	sp,sp,-16
2001034c:	c606                	sw	ra,12(sp)
2001034e:	c422                	sw	s0,8(sp)
20010350:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/tty.c:29
    metal_uart_init(__METAL_DT_STDOUT_UART_HANDLE, __METAL_DT_STDOUT_UART_BAUD);
20010352:	67f1                	lui	a5,0x1c
20010354:	20078593          	addi	a1,a5,512 # 1c200 <__heap_size+0x1ba00>
20010358:	800017b7          	lui	a5,0x80001
2001035c:	a5c78513          	addi	a0,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
20010360:	372070ef          	jal	ra,200176d2 <metal_uart_init>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/tty.c:30
}
20010364:	0001                	nop
20010366:	40b2                	lw	ra,12(sp)
20010368:	4422                	lw	s0,8(sp)
2001036a:	0141                	addi	sp,sp,16
2001036c:	8082                	ret

Disassembly of section .text:

20011180 <main>:
main():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:46
#define WAIT_1S(timeout)                                                       \
  timeout = time(NULL) + 1;                                                    \
  while (timeout > time(NULL))                                                 \
    ;

int main() {
20011180:	1101                	addi	sp,sp,-32
20011182:	ce06                	sw	ra,28(sp)
20011184:	cc22                	sw	s0,24(sp)
20011186:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:52
	unsigned int temp, volt;
	unsigned char buf[LEN1];
	time_t timeout;
	struct metal_i2c *i2c;

	printf("%s %s \n", __DATE__, __TIME__);
20011188:	200107b7          	lui	a5,0x20010
2001118c:	37078613          	addi	a2,a5,880 # 20010370 <metal_tty_init+0x26>
20011190:	200107b7          	lui	a5,0x20010
20011194:	37c78593          	addi	a1,a5,892 # 2001037c <metal_tty_init+0x32>
20011198:	200107b7          	lui	a5,0x20010
2001119c:	38878513          	addi	a0,a5,904 # 20010388 <metal_tty_init+0x3e>
200111a0:	2845                	jal	20011250 <iprintf>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:53
	printf("I2C demo test..\n");
200111a2:	200107b7          	lui	a5,0x20010
200111a6:	39078513          	addi	a0,a5,912 # 20010390 <metal_tty_init+0x46>
200111aa:	22d1                	jal	2001136e <puts>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:55

	i2c = metal_i2c_get_device(0);
200111ac:	4501                	li	a0,0
200111ae:	3c8060ef          	jal	ra,20017576 <metal_i2c_get_device>
200111b2:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:57

	if (i2c == NULL) {
200111b6:	fec42783          	lw	a5,-20(s0)
200111ba:	eb81                	bnez	a5,200111ca <main+0x4a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:58
		printf("I2C not available \n");
200111bc:	200107b7          	lui	a5,0x20010
200111c0:	3a078513          	addi	a0,a5,928 # 200103a0 <metal_tty_init+0x56>
200111c4:	226d                	jal	2001136e <puts>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:59
		return RET_NOK;
200111c6:	4785                	li	a5,1
200111c8:	a8bd                	j	20011246 <main+0xc6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:62
	}

	metal_i2c_init(i2c, I2C_BAUDRATE, METAL_I2C_MASTER);
200111ca:	4605                	li	a2,1
200111cc:	67e1                	lui	a5,0x18
200111ce:	6a078593          	addi	a1,a5,1696 # 186a0 <__heap_size+0x17ea0>
200111d2:	fec42503          	lw	a0,-20(s0)
200111d6:	2b0060ef          	jal	ra,20017486 <metal_i2c_init>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:66

	// TODO: this is copied from the example; find how it would work for our sensor
	/* Attempt to read LSM6DS33 (IMU) chip id */
	buf[0] = IMU_WHO_AM_I_SUBADDR;
200111da:	47bd                	li	a5,15
200111dc:	fef40423          	sb	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:69

	while(1) {
		buf[0] = IMU_WHO_AM_I_SUBADDR;
200111e0:	47bd                	li	a5,15
200111e2:	fef40423          	sb	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:70
		metal_i2c_write(i2c, IMU_I2C_ADDR, LEN1, buf, METAL_I2C_STOP_DISABLE);
200111e6:	fe840793          	addi	a5,s0,-24
200111ea:	4701                	li	a4,0
200111ec:	86be                	mv	a3,a5
200111ee:	4605                	li	a2,1
200111f0:	06b00593          	li	a1,107
200111f4:	fec42503          	lw	a0,-20(s0)
200111f8:	2c2060ef          	jal	ra,200174ba <metal_i2c_write>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:71
		metal_i2c_read(i2c, IMU_I2C_ADDR, LEN1, buf, METAL_I2C_STOP_ENABLE);
200111fc:	fe840793          	addi	a5,s0,-24
20011200:	4705                	li	a4,1
20011202:	86be                	mv	a3,a5
20011204:	4605                	li	a2,1
20011206:	06b00593          	li	a1,107
2001120a:	fec42503          	lw	a0,-20(s0)
2001120e:	2f2060ef          	jal	ra,20017500 <metal_i2c_read>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:72
		printf("Data read = %x\n", buf[0]);
20011212:	fe844783          	lbu	a5,-24(s0)
20011216:	85be                	mv	a1,a5
20011218:	200107b7          	lui	a5,0x20010
2001121c:	3b478513          	addi	a0,a5,948 # 200103b4 <metal_tty_init+0x6a>
20011220:	2805                	jal	20011250 <iprintf>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:77
		//metal_i2c_write(i2c, IMU_I2C_ADDR, LEN1, buf, METAL_I2C_STOP_DISABLE);
		//metal_i2c_read(i2c, IMU_I2C_ADDR, LEN1, buf, METAL_I2C_STOP_ENABLE);

		/* Verify Chip ID */
		if (buf[0] == IMU_SENSOR_ID) {
20011222:	fe844703          	lbu	a4,-24(s0)
20011226:	06900793          	li	a5,105
2001122a:	00f71863          	bne	a4,a5,2001123a <main+0xba>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:78
			printf("Accelero/Gyro module detected \n");
2001122e:	200107b7          	lui	a5,0x20010
20011232:	3c478513          	addi	a0,a5,964 # 200103c4 <metal_tty_init+0x7a>
20011236:	2a25                	jal	2001136e <puts>
20011238:	b765                	j	200111e0 <main+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:80
		} else {
			printf("Failed to detect Accelero/Gyro module \n");
2001123a:	200107b7          	lui	a5,0x20010
2001123e:	3e478513          	addi	a0,a5,996 # 200103e4 <metal_tty_init+0x9a>
20011242:	2235                	jal	2001136e <puts>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:69
		buf[0] = IMU_WHO_AM_I_SUBADDR;
20011244:	bf71                	j	200111e0 <main+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:87 (discriminator 1)
		}
	}


	return 0;
}
20011246:	853e                	mv	a0,a5
20011248:	40f2                	lw	ra,28(sp)
2001124a:	4462                	lw	s0,24(sp)
2001124c:	6105                	addi	sp,sp,32
2001124e:	8082                	ret

20011250 <iprintf>:
printf():
20011250:	7139                	addi	sp,sp,-64
20011252:	da3e                	sw	a5,52(sp)
20011254:	d22e                	sw	a1,36(sp)
20011256:	d432                	sw	a2,40(sp)
20011258:	d636                	sw	a3,44(sp)
2001125a:	d83a                	sw	a4,48(sp)
2001125c:	dc42                	sw	a6,56(sp)
2001125e:	de46                	sw	a7,60(sp)
20011260:	5fff0797          	auipc	a5,0x5fff0
20011264:	86878793          	addi	a5,a5,-1944 # 80000ac8 <_impure_ptr>
20011268:	cc22                	sw	s0,24(sp)
2001126a:	4380                	lw	s0,0(a5)
2001126c:	ca26                	sw	s1,20(sp)
2001126e:	ce06                	sw	ra,28(sp)
20011270:	84aa                	mv	s1,a0
20011272:	c409                	beqz	s0,2001127c <iprintf+0x2c>
20011274:	4c1c                	lw	a5,24(s0)
20011276:	e399                	bnez	a5,2001127c <iprintf+0x2c>
20011278:	8522                	mv	a0,s0
2001127a:	2b1d                	jal	200117b0 <__sinit>
2001127c:	440c                	lw	a1,8(s0)
2001127e:	1054                	addi	a3,sp,36
20011280:	8626                	mv	a2,s1
20011282:	8522                	mv	a0,s0
20011284:	c636                	sw	a3,12(sp)
20011286:	191000ef          	jal	ra,20011c16 <_vfiprintf_r>
2001128a:	40f2                	lw	ra,28(sp)
2001128c:	4462                	lw	s0,24(sp)
2001128e:	44d2                	lw	s1,20(sp)
20011290:	6121                	addi	sp,sp,64
20011292:	8082                	ret

20011294 <_puts_r>:
_puts_r():
20011294:	1101                	addi	sp,sp,-32
20011296:	ca26                	sw	s1,20(sp)
20011298:	c84a                	sw	s2,16(sp)
2001129a:	ce06                	sw	ra,28(sp)
2001129c:	cc22                	sw	s0,24(sp)
2001129e:	c64e                	sw	s3,12(sp)
200112a0:	c452                	sw	s4,8(sp)
200112a2:	84aa                	mv	s1,a0
200112a4:	892e                	mv	s2,a1
200112a6:	c501                	beqz	a0,200112ae <_puts_r+0x1a>
200112a8:	4d1c                	lw	a5,24(a0)
200112aa:	e391                	bnez	a5,200112ae <_puts_r+0x1a>
200112ac:	2311                	jal	200117b0 <__sinit>
200112ae:	4c9c                	lw	a5,24(s1)
200112b0:	4480                	lw	s0,8(s1)
200112b2:	e399                	bnez	a5,200112b8 <_puts_r+0x24>
200112b4:	8526                	mv	a0,s1
200112b6:	29ed                	jal	200117b0 <__sinit>
200112b8:	fffff797          	auipc	a5,0xfffff
200112bc:	17478793          	addi	a5,a5,372 # 2001042c <__sf_fake_stdin>
200112c0:	02f41c63          	bne	s0,a5,200112f8 <_puts_r+0x64>
200112c4:	40c0                	lw	s0,4(s1)
200112c6:	00c45783          	lhu	a5,12(s0)
200112ca:	8ba1                	andi	a5,a5,8
200112cc:	c7b1                	beqz	a5,20011318 <_puts_r+0x84>
200112ce:	481c                	lw	a5,16(s0)
200112d0:	c7a1                	beqz	a5,20011318 <_puts_r+0x84>
200112d2:	59fd                	li	s3,-1
200112d4:	4a29                	li	s4,10
200112d6:	441c                	lw	a5,8(s0)
200112d8:	00094583          	lbu	a1,0(s2)
200112dc:	17fd                	addi	a5,a5,-1
200112de:	e9b1                	bnez	a1,20011332 <_puts_r+0x9e>
200112e0:	c41c                	sw	a5,8(s0)
200112e2:	0607de63          	bgez	a5,2001135e <_puts_r+0xca>
200112e6:	8622                	mv	a2,s0
200112e8:	45a9                	li	a1,10
200112ea:	8526                	mv	a0,s1
200112ec:	2841                	jal	2001137c <__swbuf_r>
200112ee:	57fd                	li	a5,-1
200112f0:	02f50863          	beq	a0,a5,20011320 <_puts_r+0x8c>
200112f4:	4529                	li	a0,10
200112f6:	a035                	j	20011322 <_puts_r+0x8e>
200112f8:	fffff797          	auipc	a5,0xfffff
200112fc:	15478793          	addi	a5,a5,340 # 2001044c <__sf_fake_stdout>
20011300:	00f41463          	bne	s0,a5,20011308 <_puts_r+0x74>
20011304:	4480                	lw	s0,8(s1)
20011306:	b7c1                	j	200112c6 <_puts_r+0x32>
20011308:	fffff797          	auipc	a5,0xfffff
2001130c:	10478793          	addi	a5,a5,260 # 2001040c <__sf_fake_stderr>
20011310:	faf41be3          	bne	s0,a5,200112c6 <_puts_r+0x32>
20011314:	44c0                	lw	s0,12(s1)
20011316:	bf45                	j	200112c6 <_puts_r+0x32>
20011318:	85a2                	mv	a1,s0
2001131a:	8526                	mv	a0,s1
2001131c:	2205                	jal	2001143c <__swsetup_r>
2001131e:	d955                	beqz	a0,200112d2 <_puts_r+0x3e>
20011320:	557d                	li	a0,-1
20011322:	40f2                	lw	ra,28(sp)
20011324:	4462                	lw	s0,24(sp)
20011326:	44d2                	lw	s1,20(sp)
20011328:	4942                	lw	s2,16(sp)
2001132a:	49b2                	lw	s3,12(sp)
2001132c:	4a22                	lw	s4,8(sp)
2001132e:	6105                	addi	sp,sp,32
20011330:	8082                	ret
20011332:	c41c                	sw	a5,8(s0)
20011334:	0905                	addi	s2,s2,1
20011336:	0007d763          	bgez	a5,20011344 <_puts_r+0xb0>
2001133a:	4c18                	lw	a4,24(s0)
2001133c:	00e7cb63          	blt	a5,a4,20011352 <_puts_r+0xbe>
20011340:	01458963          	beq	a1,s4,20011352 <_puts_r+0xbe>
20011344:	401c                	lw	a5,0(s0)
20011346:	00178713          	addi	a4,a5,1
2001134a:	c018                	sw	a4,0(s0)
2001134c:	00b78023          	sb	a1,0(a5)
20011350:	b759                	j	200112d6 <_puts_r+0x42>
20011352:	8622                	mv	a2,s0
20011354:	8526                	mv	a0,s1
20011356:	201d                	jal	2001137c <__swbuf_r>
20011358:	f7351fe3          	bne	a0,s3,200112d6 <_puts_r+0x42>
2001135c:	b7d1                	j	20011320 <_puts_r+0x8c>
2001135e:	401c                	lw	a5,0(s0)
20011360:	00178713          	addi	a4,a5,1
20011364:	c018                	sw	a4,0(s0)
20011366:	4729                	li	a4,10
20011368:	00e78023          	sb	a4,0(a5)
2001136c:	b761                	j	200112f4 <_puts_r+0x60>

2001136e <puts>:
puts():
2001136e:	5ffef797          	auipc	a5,0x5ffef
20011372:	75a78793          	addi	a5,a5,1882 # 80000ac8 <_impure_ptr>
20011376:	85aa                	mv	a1,a0
20011378:	4388                	lw	a0,0(a5)
2001137a:	bf29                	j	20011294 <_puts_r>

2001137c <__swbuf_r>:
__swbuf_r():
2001137c:	1101                	addi	sp,sp,-32
2001137e:	cc22                	sw	s0,24(sp)
20011380:	ca26                	sw	s1,20(sp)
20011382:	c84a                	sw	s2,16(sp)
20011384:	ce06                	sw	ra,28(sp)
20011386:	c64e                	sw	s3,12(sp)
20011388:	84aa                	mv	s1,a0
2001138a:	892e                	mv	s2,a1
2001138c:	8432                	mv	s0,a2
2001138e:	c501                	beqz	a0,20011396 <__swbuf_r+0x1a>
20011390:	4d1c                	lw	a5,24(a0)
20011392:	e391                	bnez	a5,20011396 <__swbuf_r+0x1a>
20011394:	2931                	jal	200117b0 <__sinit>
20011396:	fffff797          	auipc	a5,0xfffff
2001139a:	09678793          	addi	a5,a5,150 # 2001042c <__sf_fake_stdin>
2001139e:	06f41963          	bne	s0,a5,20011410 <__swbuf_r+0x94>
200113a2:	40c0                	lw	s0,4(s1)
200113a4:	4c1c                	lw	a5,24(s0)
200113a6:	c41c                	sw	a5,8(s0)
200113a8:	00c45783          	lhu	a5,12(s0)
200113ac:	8ba1                	andi	a5,a5,8
200113ae:	c3c9                	beqz	a5,20011430 <__swbuf_r+0xb4>
200113b0:	481c                	lw	a5,16(s0)
200113b2:	cfbd                	beqz	a5,20011430 <__swbuf_r+0xb4>
200113b4:	481c                	lw	a5,16(s0)
200113b6:	4008                	lw	a0,0(s0)
200113b8:	0ff97993          	andi	s3,s2,255
200113bc:	0ff97913          	andi	s2,s2,255
200113c0:	8d1d                	sub	a0,a0,a5
200113c2:	485c                	lw	a5,20(s0)
200113c4:	00f54663          	blt	a0,a5,200113d0 <__swbuf_r+0x54>
200113c8:	85a2                	mv	a1,s0
200113ca:	8526                	mv	a0,s1
200113cc:	24e9                	jal	20011696 <_fflush_r>
200113ce:	e52d                	bnez	a0,20011438 <__swbuf_r+0xbc>
200113d0:	441c                	lw	a5,8(s0)
200113d2:	0505                	addi	a0,a0,1
200113d4:	17fd                	addi	a5,a5,-1
200113d6:	c41c                	sw	a5,8(s0)
200113d8:	401c                	lw	a5,0(s0)
200113da:	00178713          	addi	a4,a5,1
200113de:	c018                	sw	a4,0(s0)
200113e0:	01378023          	sb	s3,0(a5)
200113e4:	485c                	lw	a5,20(s0)
200113e6:	00a78963          	beq	a5,a0,200113f8 <__swbuf_r+0x7c>
200113ea:	00c45783          	lhu	a5,12(s0)
200113ee:	8b85                	andi	a5,a5,1
200113f0:	cb81                	beqz	a5,20011400 <__swbuf_r+0x84>
200113f2:	47a9                	li	a5,10
200113f4:	00f91663          	bne	s2,a5,20011400 <__swbuf_r+0x84>
200113f8:	85a2                	mv	a1,s0
200113fa:	8526                	mv	a0,s1
200113fc:	2c69                	jal	20011696 <_fflush_r>
200113fe:	ed0d                	bnez	a0,20011438 <__swbuf_r+0xbc>
20011400:	40f2                	lw	ra,28(sp)
20011402:	4462                	lw	s0,24(sp)
20011404:	854a                	mv	a0,s2
20011406:	44d2                	lw	s1,20(sp)
20011408:	4942                	lw	s2,16(sp)
2001140a:	49b2                	lw	s3,12(sp)
2001140c:	6105                	addi	sp,sp,32
2001140e:	8082                	ret
20011410:	fffff797          	auipc	a5,0xfffff
20011414:	03c78793          	addi	a5,a5,60 # 2001044c <__sf_fake_stdout>
20011418:	00f41463          	bne	s0,a5,20011420 <__swbuf_r+0xa4>
2001141c:	4480                	lw	s0,8(s1)
2001141e:	b759                	j	200113a4 <__swbuf_r+0x28>
20011420:	fffff797          	auipc	a5,0xfffff
20011424:	fec78793          	addi	a5,a5,-20 # 2001040c <__sf_fake_stderr>
20011428:	f6f41ee3          	bne	s0,a5,200113a4 <__swbuf_r+0x28>
2001142c:	44c0                	lw	s0,12(s1)
2001142e:	bf9d                	j	200113a4 <__swbuf_r+0x28>
20011430:	85a2                	mv	a1,s0
20011432:	8526                	mv	a0,s1
20011434:	2021                	jal	2001143c <__swsetup_r>
20011436:	dd3d                	beqz	a0,200113b4 <__swbuf_r+0x38>
20011438:	597d                	li	s2,-1
2001143a:	b7d9                	j	20011400 <__swbuf_r+0x84>

2001143c <__swsetup_r>:
__swsetup_r():
2001143c:	1141                	addi	sp,sp,-16
2001143e:	5ffef797          	auipc	a5,0x5ffef
20011442:	68a78793          	addi	a5,a5,1674 # 80000ac8 <_impure_ptr>
20011446:	c226                	sw	s1,4(sp)
20011448:	4384                	lw	s1,0(a5)
2001144a:	c422                	sw	s0,8(sp)
2001144c:	c04a                	sw	s2,0(sp)
2001144e:	c606                	sw	ra,12(sp)
20011450:	892a                	mv	s2,a0
20011452:	842e                	mv	s0,a1
20011454:	c489                	beqz	s1,2001145e <__swsetup_r+0x22>
20011456:	4c9c                	lw	a5,24(s1)
20011458:	e399                	bnez	a5,2001145e <__swsetup_r+0x22>
2001145a:	8526                	mv	a0,s1
2001145c:	2e91                	jal	200117b0 <__sinit>
2001145e:	fffff797          	auipc	a5,0xfffff
20011462:	fce78793          	addi	a5,a5,-50 # 2001042c <__sf_fake_stdin>
20011466:	02f41c63          	bne	s0,a5,2001149e <__swsetup_r+0x62>
2001146a:	40c0                	lw	s0,4(s1)
2001146c:	00c41703          	lh	a4,12(s0)
20011470:	01071793          	slli	a5,a4,0x10
20011474:	83c1                	srli	a5,a5,0x10
20011476:	0087f693          	andi	a3,a5,8
2001147a:	eeb5                	bnez	a3,200114f6 <__swsetup_r+0xba>
2001147c:	0107f693          	andi	a3,a5,16
20011480:	ee9d                	bnez	a3,200114be <__swsetup_r+0x82>
20011482:	47a5                	li	a5,9
20011484:	00f92023          	sw	a5,0(s2)
20011488:	04076713          	ori	a4,a4,64
2001148c:	00e41623          	sh	a4,12(s0)
20011490:	557d                	li	a0,-1
20011492:	40b2                	lw	ra,12(sp)
20011494:	4422                	lw	s0,8(sp)
20011496:	4492                	lw	s1,4(sp)
20011498:	4902                	lw	s2,0(sp)
2001149a:	0141                	addi	sp,sp,16
2001149c:	8082                	ret
2001149e:	fffff797          	auipc	a5,0xfffff
200114a2:	fae78793          	addi	a5,a5,-82 # 2001044c <__sf_fake_stdout>
200114a6:	00f41463          	bne	s0,a5,200114ae <__swsetup_r+0x72>
200114aa:	4480                	lw	s0,8(s1)
200114ac:	b7c1                	j	2001146c <__swsetup_r+0x30>
200114ae:	fffff797          	auipc	a5,0xfffff
200114b2:	f5e78793          	addi	a5,a5,-162 # 2001040c <__sf_fake_stderr>
200114b6:	faf41be3          	bne	s0,a5,2001146c <__swsetup_r+0x30>
200114ba:	44c0                	lw	s0,12(s1)
200114bc:	bf45                	j	2001146c <__swsetup_r+0x30>
200114be:	8b91                	andi	a5,a5,4
200114c0:	c78d                	beqz	a5,200114ea <__swsetup_r+0xae>
200114c2:	584c                	lw	a1,52(s0)
200114c4:	c989                	beqz	a1,200114d6 <__swsetup_r+0x9a>
200114c6:	04440793          	addi	a5,s0,68
200114ca:	00f58463          	beq	a1,a5,200114d2 <__swsetup_r+0x96>
200114ce:	854a                	mv	a0,s2
200114d0:	2b81                	jal	20011a20 <_free_r>
200114d2:	02042a23          	sw	zero,52(s0)
200114d6:	00c45783          	lhu	a5,12(s0)
200114da:	00042223          	sw	zero,4(s0)
200114de:	fdb7f793          	andi	a5,a5,-37
200114e2:	00f41623          	sh	a5,12(s0)
200114e6:	481c                	lw	a5,16(s0)
200114e8:	c01c                	sw	a5,0(s0)
200114ea:	00c45783          	lhu	a5,12(s0)
200114ee:	0087e793          	ori	a5,a5,8
200114f2:	00f41623          	sh	a5,12(s0)
200114f6:	481c                	lw	a5,16(s0)
200114f8:	ef81                	bnez	a5,20011510 <__swsetup_r+0xd4>
200114fa:	00c45783          	lhu	a5,12(s0)
200114fe:	20000713          	li	a4,512
20011502:	2807f793          	andi	a5,a5,640
20011506:	00e78563          	beq	a5,a4,20011510 <__swsetup_r+0xd4>
2001150a:	85a2                	mv	a1,s0
2001150c:	854a                	mv	a0,s2
2001150e:	219d                	jal	20011974 <__smakebuf_r>
20011510:	00c45783          	lhu	a5,12(s0)
20011514:	0017f713          	andi	a4,a5,1
20011518:	c705                	beqz	a4,20011540 <__swsetup_r+0x104>
2001151a:	485c                	lw	a5,20(s0)
2001151c:	00042423          	sw	zero,8(s0)
20011520:	40f007b3          	neg	a5,a5
20011524:	cc1c                	sw	a5,24(s0)
20011526:	481c                	lw	a5,16(s0)
20011528:	4501                	li	a0,0
2001152a:	f7a5                	bnez	a5,20011492 <__swsetup_r+0x56>
2001152c:	00c41783          	lh	a5,12(s0)
20011530:	0807f713          	andi	a4,a5,128
20011534:	df39                	beqz	a4,20011492 <__swsetup_r+0x56>
20011536:	0407e793          	ori	a5,a5,64
2001153a:	00f41623          	sh	a5,12(s0)
2001153e:	bf89                	j	20011490 <__swsetup_r+0x54>
20011540:	8b89                	andi	a5,a5,2
20011542:	4701                	li	a4,0
20011544:	e391                	bnez	a5,20011548 <__swsetup_r+0x10c>
20011546:	4858                	lw	a4,20(s0)
20011548:	c418                	sw	a4,8(s0)
2001154a:	bff1                	j	20011526 <__swsetup_r+0xea>

2001154c <__sflush_r>:
__sflush_r():
2001154c:	00c5d783          	lhu	a5,12(a1)
20011550:	1101                	addi	sp,sp,-32
20011552:	cc22                	sw	s0,24(sp)
20011554:	ca26                	sw	s1,20(sp)
20011556:	ce06                	sw	ra,28(sp)
20011558:	c84a                	sw	s2,16(sp)
2001155a:	c64e                	sw	s3,12(sp)
2001155c:	0087f713          	andi	a4,a5,8
20011560:	84aa                	mv	s1,a0
20011562:	842e                	mv	s0,a1
20011564:	e765                	bnez	a4,2001164c <__sflush_r+0x100>
20011566:	41d8                	lw	a4,4(a1)
20011568:	00e04763          	bgtz	a4,20011576 <__sflush_r+0x2a>
2001156c:	41b8                	lw	a4,64(a1)
2001156e:	00e04463          	bgtz	a4,20011576 <__sflush_r+0x2a>
20011572:	4501                	li	a0,0
20011574:	a0c1                	j	20011634 <__sflush_r+0xe8>
20011576:	5458                	lw	a4,44(s0)
20011578:	df6d                	beqz	a4,20011572 <__sflush_r+0x26>
2001157a:	0004a903          	lw	s2,0(s1)
2001157e:	01379693          	slli	a3,a5,0x13
20011582:	0004a023          	sw	zero,0(s1)
20011586:	0606de63          	bgez	a3,20011602 <__sflush_r+0xb6>
2001158a:	4868                	lw	a0,84(s0)
2001158c:	00c45783          	lhu	a5,12(s0)
20011590:	8b91                	andi	a5,a5,4
20011592:	c799                	beqz	a5,200115a0 <__sflush_r+0x54>
20011594:	405c                	lw	a5,4(s0)
20011596:	8d1d                	sub	a0,a0,a5
20011598:	585c                	lw	a5,52(s0)
2001159a:	c399                	beqz	a5,200115a0 <__sflush_r+0x54>
2001159c:	403c                	lw	a5,64(s0)
2001159e:	8d1d                	sub	a0,a0,a5
200115a0:	545c                	lw	a5,44(s0)
200115a2:	500c                	lw	a1,32(s0)
200115a4:	862a                	mv	a2,a0
200115a6:	4681                	li	a3,0
200115a8:	8526                	mv	a0,s1
200115aa:	9782                	jalr	a5
200115ac:	57fd                	li	a5,-1
200115ae:	00c45703          	lhu	a4,12(s0)
200115b2:	00f51d63          	bne	a0,a5,200115cc <__sflush_r+0x80>
200115b6:	4094                	lw	a3,0(s1)
200115b8:	47f5                	li	a5,29
200115ba:	08d7e463          	bltu	a5,a3,20011642 <__sflush_r+0xf6>
200115be:	204007b7          	lui	a5,0x20400
200115c2:	0785                	addi	a5,a5,1
200115c4:	00d7d7b3          	srl	a5,a5,a3
200115c8:	8b85                	andi	a5,a5,1
200115ca:	cfa5                	beqz	a5,20011642 <__sflush_r+0xf6>
200115cc:	481c                	lw	a5,16(s0)
200115ce:	00042223          	sw	zero,4(s0)
200115d2:	c01c                	sw	a5,0(s0)
200115d4:	01371793          	slli	a5,a4,0x13
200115d8:	0007d863          	bgez	a5,200115e8 <__sflush_r+0x9c>
200115dc:	57fd                	li	a5,-1
200115de:	00f51463          	bne	a0,a5,200115e6 <__sflush_r+0x9a>
200115e2:	409c                	lw	a5,0(s1)
200115e4:	e391                	bnez	a5,200115e8 <__sflush_r+0x9c>
200115e6:	c868                	sw	a0,84(s0)
200115e8:	584c                	lw	a1,52(s0)
200115ea:	0124a023          	sw	s2,0(s1)
200115ee:	d1d1                	beqz	a1,20011572 <__sflush_r+0x26>
200115f0:	04440793          	addi	a5,s0,68
200115f4:	00f58463          	beq	a1,a5,200115fc <__sflush_r+0xb0>
200115f8:	8526                	mv	a0,s1
200115fa:	211d                	jal	20011a20 <_free_r>
200115fc:	02042a23          	sw	zero,52(s0)
20011600:	bf8d                	j	20011572 <__sflush_r+0x26>
20011602:	500c                	lw	a1,32(s0)
20011604:	4685                	li	a3,1
20011606:	4601                	li	a2,0
20011608:	8526                	mv	a0,s1
2001160a:	9702                	jalr	a4
2001160c:	57fd                	li	a5,-1
2001160e:	f6f51fe3          	bne	a0,a5,2001158c <__sflush_r+0x40>
20011612:	409c                	lw	a5,0(s1)
20011614:	dfa5                	beqz	a5,2001158c <__sflush_r+0x40>
20011616:	4775                	li	a4,29
20011618:	00e78563          	beq	a5,a4,20011622 <__sflush_r+0xd6>
2001161c:	4759                	li	a4,22
2001161e:	00e79563          	bne	a5,a4,20011628 <__sflush_r+0xdc>
20011622:	0124a023          	sw	s2,0(s1)
20011626:	b7b1                	j	20011572 <__sflush_r+0x26>
20011628:	00c45783          	lhu	a5,12(s0)
2001162c:	0407e793          	ori	a5,a5,64
20011630:	00f41623          	sh	a5,12(s0)
20011634:	40f2                	lw	ra,28(sp)
20011636:	4462                	lw	s0,24(sp)
20011638:	44d2                	lw	s1,20(sp)
2001163a:	4942                	lw	s2,16(sp)
2001163c:	49b2                	lw	s3,12(sp)
2001163e:	6105                	addi	sp,sp,32
20011640:	8082                	ret
20011642:	04076713          	ori	a4,a4,64
20011646:	00e41623          	sh	a4,12(s0)
2001164a:	b7ed                	j	20011634 <__sflush_r+0xe8>
2001164c:	0105a983          	lw	s3,16(a1)
20011650:	f20981e3          	beqz	s3,20011572 <__sflush_r+0x26>
20011654:	0005a903          	lw	s2,0(a1)
20011658:	8b8d                	andi	a5,a5,3
2001165a:	0135a023          	sw	s3,0(a1)
2001165e:	41390933          	sub	s2,s2,s3
20011662:	4701                	li	a4,0
20011664:	e391                	bnez	a5,20011668 <__sflush_r+0x11c>
20011666:	49d8                	lw	a4,20(a1)
20011668:	c418                	sw	a4,8(s0)
2001166a:	f12054e3          	blez	s2,20011572 <__sflush_r+0x26>
2001166e:	541c                	lw	a5,40(s0)
20011670:	500c                	lw	a1,32(s0)
20011672:	86ca                	mv	a3,s2
20011674:	864e                	mv	a2,s3
20011676:	8526                	mv	a0,s1
20011678:	9782                	jalr	a5
2001167a:	00a04a63          	bgtz	a0,2001168e <__sflush_r+0x142>
2001167e:	00c45783          	lhu	a5,12(s0)
20011682:	557d                	li	a0,-1
20011684:	0407e793          	ori	a5,a5,64
20011688:	00f41623          	sh	a5,12(s0)
2001168c:	b765                	j	20011634 <__sflush_r+0xe8>
2001168e:	99aa                	add	s3,s3,a0
20011690:	40a90933          	sub	s2,s2,a0
20011694:	bfd9                	j	2001166a <__sflush_r+0x11e>

20011696 <_fflush_r>:
_fflush_r():
20011696:	499c                	lw	a5,16(a1)
20011698:	cfb9                	beqz	a5,200116f6 <_fflush_r+0x60>
2001169a:	1101                	addi	sp,sp,-32
2001169c:	cc22                	sw	s0,24(sp)
2001169e:	ce06                	sw	ra,28(sp)
200116a0:	842a                	mv	s0,a0
200116a2:	c511                	beqz	a0,200116ae <_fflush_r+0x18>
200116a4:	4d1c                	lw	a5,24(a0)
200116a6:	e781                	bnez	a5,200116ae <_fflush_r+0x18>
200116a8:	c62e                	sw	a1,12(sp)
200116aa:	2219                	jal	200117b0 <__sinit>
200116ac:	45b2                	lw	a1,12(sp)
200116ae:	fffff797          	auipc	a5,0xfffff
200116b2:	d7e78793          	addi	a5,a5,-642 # 2001042c <__sf_fake_stdin>
200116b6:	00f59b63          	bne	a1,a5,200116cc <_fflush_r+0x36>
200116ba:	404c                	lw	a1,4(s0)
200116bc:	00c59783          	lh	a5,12(a1)
200116c0:	c795                	beqz	a5,200116ec <_fflush_r+0x56>
200116c2:	8522                	mv	a0,s0
200116c4:	4462                	lw	s0,24(sp)
200116c6:	40f2                	lw	ra,28(sp)
200116c8:	6105                	addi	sp,sp,32
200116ca:	b549                	j	2001154c <__sflush_r>
200116cc:	fffff797          	auipc	a5,0xfffff
200116d0:	d8078793          	addi	a5,a5,-640 # 2001044c <__sf_fake_stdout>
200116d4:	00f59463          	bne	a1,a5,200116dc <_fflush_r+0x46>
200116d8:	440c                	lw	a1,8(s0)
200116da:	b7cd                	j	200116bc <_fflush_r+0x26>
200116dc:	fffff797          	auipc	a5,0xfffff
200116e0:	d3078793          	addi	a5,a5,-720 # 2001040c <__sf_fake_stderr>
200116e4:	fcf59ce3          	bne	a1,a5,200116bc <_fflush_r+0x26>
200116e8:	444c                	lw	a1,12(s0)
200116ea:	bfc9                	j	200116bc <_fflush_r+0x26>
200116ec:	40f2                	lw	ra,28(sp)
200116ee:	4462                	lw	s0,24(sp)
200116f0:	4501                	li	a0,0
200116f2:	6105                	addi	sp,sp,32
200116f4:	8082                	ret
200116f6:	4501                	li	a0,0
200116f8:	8082                	ret

200116fa <std>:
std():
200116fa:	1141                	addi	sp,sp,-16
200116fc:	c422                	sw	s0,8(sp)
200116fe:	c606                	sw	ra,12(sp)
20011700:	842a                	mv	s0,a0
20011702:	00b51623          	sh	a1,12(a0)
20011706:	00c51723          	sh	a2,14(a0)
2001170a:	00052023          	sw	zero,0(a0)
2001170e:	00052223          	sw	zero,4(a0)
20011712:	00052423          	sw	zero,8(a0)
20011716:	06052223          	sw	zero,100(a0)
2001171a:	00052823          	sw	zero,16(a0)
2001171e:	00052a23          	sw	zero,20(a0)
20011722:	00052c23          	sw	zero,24(a0)
20011726:	4621                	li	a2,8
20011728:	4581                	li	a1,0
2001172a:	05c50513          	addi	a0,a0,92
2001172e:	24cd                	jal	20011a10 <memset>
20011730:	00000797          	auipc	a5,0x0
20011734:	7a878793          	addi	a5,a5,1960 # 20011ed8 <__sread>
20011738:	d05c                	sw	a5,36(s0)
2001173a:	00000797          	auipc	a5,0x0
2001173e:	7ce78793          	addi	a5,a5,1998 # 20011f08 <__swrite>
20011742:	d41c                	sw	a5,40(s0)
20011744:	00001797          	auipc	a5,0x1
20011748:	81278793          	addi	a5,a5,-2030 # 20011f56 <__sseek>
2001174c:	d45c                	sw	a5,44(s0)
2001174e:	00001797          	auipc	a5,0x1
20011752:	83e78793          	addi	a5,a5,-1986 # 20011f8c <__sclose>
20011756:	d000                	sw	s0,32(s0)
20011758:	d81c                	sw	a5,48(s0)
2001175a:	40b2                	lw	ra,12(sp)
2001175c:	4422                	lw	s0,8(sp)
2001175e:	0141                	addi	sp,sp,16
20011760:	8082                	ret

20011762 <_cleanup_r>:
_cleanup_r():
20011762:	00000597          	auipc	a1,0x0
20011766:	f3458593          	addi	a1,a1,-204 # 20011696 <_fflush_r>
2001176a:	a299                	j	200118b0 <_fwalk_reent>

2001176c <__sfmoreglue>:
__sfmoreglue():
2001176c:	1141                	addi	sp,sp,-16
2001176e:	c226                	sw	s1,4(sp)
20011770:	06800613          	li	a2,104
20011774:	fff58493          	addi	s1,a1,-1
20011778:	02c484b3          	mul	s1,s1,a2
2001177c:	c04a                	sw	s2,0(sp)
2001177e:	892e                	mv	s2,a1
20011780:	c422                	sw	s0,8(sp)
20011782:	c606                	sw	ra,12(sp)
20011784:	07448593          	addi	a1,s1,116
20011788:	2691                	jal	20011acc <_malloc_r>
2001178a:	842a                	mv	s0,a0
2001178c:	c919                	beqz	a0,200117a2 <__sfmoreglue+0x36>
2001178e:	00052023          	sw	zero,0(a0)
20011792:	01252223          	sw	s2,4(a0)
20011796:	0531                	addi	a0,a0,12
20011798:	c408                	sw	a0,8(s0)
2001179a:	06848613          	addi	a2,s1,104
2001179e:	4581                	li	a1,0
200117a0:	2c85                	jal	20011a10 <memset>
200117a2:	8522                	mv	a0,s0
200117a4:	40b2                	lw	ra,12(sp)
200117a6:	4422                	lw	s0,8(sp)
200117a8:	4492                	lw	s1,4(sp)
200117aa:	4902                	lw	s2,0(sp)
200117ac:	0141                	addi	sp,sp,16
200117ae:	8082                	ret

200117b0 <__sinit>:
__sinit():
200117b0:	4d1c                	lw	a5,24(a0)
200117b2:	e3ad                	bnez	a5,20011814 <__sinit+0x64>
200117b4:	1141                	addi	sp,sp,-16
200117b6:	c606                	sw	ra,12(sp)
200117b8:	c422                	sw	s0,8(sp)
200117ba:	00000797          	auipc	a5,0x0
200117be:	fa878793          	addi	a5,a5,-88 # 20011762 <_cleanup_r>
200117c2:	d51c                	sw	a5,40(a0)
200117c4:	80c18793          	addi	a5,gp,-2036 # 80000acc <_global_impure_ptr>
200117c8:	439c                	lw	a5,0(a5)
200117ca:	04052423          	sw	zero,72(a0)
200117ce:	04052623          	sw	zero,76(a0)
200117d2:	04052823          	sw	zero,80(a0)
200117d6:	00f51463          	bne	a0,a5,200117de <__sinit+0x2e>
200117da:	4785                	li	a5,1
200117dc:	cd1c                	sw	a5,24(a0)
200117de:	842a                	mv	s0,a0
200117e0:	281d                	jal	20011816 <__sfp>
200117e2:	c048                	sw	a0,4(s0)
200117e4:	8522                	mv	a0,s0
200117e6:	2805                	jal	20011816 <__sfp>
200117e8:	c408                	sw	a0,8(s0)
200117ea:	8522                	mv	a0,s0
200117ec:	202d                	jal	20011816 <__sfp>
200117ee:	c448                	sw	a0,12(s0)
200117f0:	4048                	lw	a0,4(s0)
200117f2:	4601                	li	a2,0
200117f4:	4591                	li	a1,4
200117f6:	3711                	jal	200116fa <std>
200117f8:	4408                	lw	a0,8(s0)
200117fa:	4605                	li	a2,1
200117fc:	45a5                	li	a1,9
200117fe:	3df5                	jal	200116fa <std>
20011800:	4448                	lw	a0,12(s0)
20011802:	4609                	li	a2,2
20011804:	45c9                	li	a1,18
20011806:	3dd5                	jal	200116fa <std>
20011808:	4785                	li	a5,1
2001180a:	cc1c                	sw	a5,24(s0)
2001180c:	40b2                	lw	ra,12(sp)
2001180e:	4422                	lw	s0,8(sp)
20011810:	0141                	addi	sp,sp,16
20011812:	8082                	ret
20011814:	8082                	ret

20011816 <__sfp>:
__sfp():
20011816:	1141                	addi	sp,sp,-16
20011818:	80c18793          	addi	a5,gp,-2036 # 80000acc <_global_impure_ptr>
2001181c:	c226                	sw	s1,4(sp)
2001181e:	4384                	lw	s1,0(a5)
20011820:	c04a                	sw	s2,0(sp)
20011822:	c606                	sw	ra,12(sp)
20011824:	4c9c                	lw	a5,24(s1)
20011826:	c422                	sw	s0,8(sp)
20011828:	892a                	mv	s2,a0
2001182a:	e399                	bnez	a5,20011830 <__sfp+0x1a>
2001182c:	8526                	mv	a0,s1
2001182e:	3749                	jal	200117b0 <__sinit>
20011830:	04848493          	addi	s1,s1,72
20011834:	4480                	lw	s0,8(s1)
20011836:	40dc                	lw	a5,4(s1)
20011838:	17fd                	addi	a5,a5,-1
2001183a:	0007d663          	bgez	a5,20011846 <__sfp+0x30>
2001183e:	409c                	lw	a5,0(s1)
20011840:	cfb1                	beqz	a5,2001189c <__sfp+0x86>
20011842:	4084                	lw	s1,0(s1)
20011844:	bfc5                	j	20011834 <__sfp+0x1e>
20011846:	00c41703          	lh	a4,12(s0)
2001184a:	e731                	bnez	a4,20011896 <__sfp+0x80>
2001184c:	77c1                	lui	a5,0xffff0
2001184e:	0785                	addi	a5,a5,1
20011850:	06042223          	sw	zero,100(s0)
20011854:	00042023          	sw	zero,0(s0)
20011858:	00042223          	sw	zero,4(s0)
2001185c:	00042423          	sw	zero,8(s0)
20011860:	c45c                	sw	a5,12(s0)
20011862:	00042823          	sw	zero,16(s0)
20011866:	00042a23          	sw	zero,20(s0)
2001186a:	00042c23          	sw	zero,24(s0)
2001186e:	4621                	li	a2,8
20011870:	4581                	li	a1,0
20011872:	05c40513          	addi	a0,s0,92
20011876:	2a69                	jal	20011a10 <memset>
20011878:	02042a23          	sw	zero,52(s0)
2001187c:	02042c23          	sw	zero,56(s0)
20011880:	04042423          	sw	zero,72(s0)
20011884:	04042623          	sw	zero,76(s0)
20011888:	8522                	mv	a0,s0
2001188a:	40b2                	lw	ra,12(sp)
2001188c:	4422                	lw	s0,8(sp)
2001188e:	4492                	lw	s1,4(sp)
20011890:	4902                	lw	s2,0(sp)
20011892:	0141                	addi	sp,sp,16
20011894:	8082                	ret
20011896:	06840413          	addi	s0,s0,104
2001189a:	bf79                	j	20011838 <__sfp+0x22>
2001189c:	4591                	li	a1,4
2001189e:	854a                	mv	a0,s2
200118a0:	35f1                	jal	2001176c <__sfmoreglue>
200118a2:	c088                	sw	a0,0(s1)
200118a4:	842a                	mv	s0,a0
200118a6:	fd51                	bnez	a0,20011842 <__sfp+0x2c>
200118a8:	47b1                	li	a5,12
200118aa:	00f92023          	sw	a5,0(s2)
200118ae:	bfe9                	j	20011888 <__sfp+0x72>

200118b0 <_fwalk_reent>:
_fwalk_reent():
200118b0:	7179                	addi	sp,sp,-48
200118b2:	d422                	sw	s0,40(sp)
200118b4:	d04a                	sw	s2,32(sp)
200118b6:	cc52                	sw	s4,24(sp)
200118b8:	ca56                	sw	s5,20(sp)
200118ba:	c85a                	sw	s6,16(sp)
200118bc:	c65e                	sw	s7,12(sp)
200118be:	d606                	sw	ra,44(sp)
200118c0:	d226                	sw	s1,36(sp)
200118c2:	ce4e                	sw	s3,28(sp)
200118c4:	8a2a                	mv	s4,a0
200118c6:	8aae                	mv	s5,a1
200118c8:	04850413          	addi	s0,a0,72
200118cc:	4901                	li	s2,0
200118ce:	4b05                	li	s6,1
200118d0:	5bfd                	li	s7,-1
200118d2:	ec09                	bnez	s0,200118ec <_fwalk_reent+0x3c>
200118d4:	50b2                	lw	ra,44(sp)
200118d6:	5422                	lw	s0,40(sp)
200118d8:	854a                	mv	a0,s2
200118da:	5492                	lw	s1,36(sp)
200118dc:	5902                	lw	s2,32(sp)
200118de:	49f2                	lw	s3,28(sp)
200118e0:	4a62                	lw	s4,24(sp)
200118e2:	4ad2                	lw	s5,20(sp)
200118e4:	4b42                	lw	s6,16(sp)
200118e6:	4bb2                	lw	s7,12(sp)
200118e8:	6145                	addi	sp,sp,48
200118ea:	8082                	ret
200118ec:	4404                	lw	s1,8(s0)
200118ee:	00442983          	lw	s3,4(s0)
200118f2:	19fd                	addi	s3,s3,-1
200118f4:	0009d463          	bgez	s3,200118fc <_fwalk_reent+0x4c>
200118f8:	4000                	lw	s0,0(s0)
200118fa:	bfe1                	j	200118d2 <_fwalk_reent+0x22>
200118fc:	00c4d783          	lhu	a5,12(s1)
20011900:	00fb7b63          	bgeu	s6,a5,20011916 <_fwalk_reent+0x66>
20011904:	00e49783          	lh	a5,14(s1)
20011908:	01778763          	beq	a5,s7,20011916 <_fwalk_reent+0x66>
2001190c:	85a6                	mv	a1,s1
2001190e:	8552                	mv	a0,s4
20011910:	9a82                	jalr	s5
20011912:	00a96933          	or	s2,s2,a0
20011916:	06848493          	addi	s1,s1,104
2001191a:	bfe1                	j	200118f2 <_fwalk_reent+0x42>

2001191c <__swhatbuf_r>:
__swhatbuf_r():
2001191c:	7119                	addi	sp,sp,-128
2001191e:	daa6                	sw	s1,116(sp)
20011920:	84ae                	mv	s1,a1
20011922:	00e59583          	lh	a1,14(a1)
20011926:	dca2                	sw	s0,120(sp)
20011928:	de86                	sw	ra,124(sp)
2001192a:	8432                	mv	s0,a2
2001192c:	0005dc63          	bgez	a1,20011944 <__swhatbuf_r+0x28>
20011930:	00c4d783          	lhu	a5,12(s1)
20011934:	0006a023          	sw	zero,0(a3)
20011938:	0807f793          	andi	a5,a5,128
2001193c:	e39d                	bnez	a5,20011962 <__swhatbuf_r+0x46>
2001193e:	40000793          	li	a5,1024
20011942:	a015                	j	20011966 <__swhatbuf_r+0x4a>
20011944:	0830                	addi	a2,sp,24
20011946:	c636                	sw	a3,12(sp)
20011948:	254d                	jal	20011fea <_fstat_r>
2001194a:	46b2                	lw	a3,12(sp)
2001194c:	fe0542e3          	bltz	a0,20011930 <__swhatbuf_r+0x14>
20011950:	4772                	lw	a4,28(sp)
20011952:	67bd                	lui	a5,0xf
20011954:	8ff9                	and	a5,a5,a4
20011956:	7779                	lui	a4,0xffffe
20011958:	97ba                	add	a5,a5,a4
2001195a:	0017b793          	seqz	a5,a5
2001195e:	c29c                	sw	a5,0(a3)
20011960:	bff9                	j	2001193e <__swhatbuf_r+0x22>
20011962:	04000793          	li	a5,64
20011966:	c01c                	sw	a5,0(s0)
20011968:	50f6                	lw	ra,124(sp)
2001196a:	5466                	lw	s0,120(sp)
2001196c:	54d6                	lw	s1,116(sp)
2001196e:	4501                	li	a0,0
20011970:	6109                	addi	sp,sp,128
20011972:	8082                	ret

20011974 <__smakebuf_r>:
__smakebuf_r():
20011974:	00c5d783          	lhu	a5,12(a1)
20011978:	1101                	addi	sp,sp,-32
2001197a:	cc22                	sw	s0,24(sp)
2001197c:	ce06                	sw	ra,28(sp)
2001197e:	ca26                	sw	s1,20(sp)
20011980:	c84a                	sw	s2,16(sp)
20011982:	8b89                	andi	a5,a5,2
20011984:	842e                	mv	s0,a1
20011986:	cf89                	beqz	a5,200119a0 <__smakebuf_r+0x2c>
20011988:	04740793          	addi	a5,s0,71
2001198c:	c01c                	sw	a5,0(s0)
2001198e:	c81c                	sw	a5,16(s0)
20011990:	4785                	li	a5,1
20011992:	c85c                	sw	a5,20(s0)
20011994:	40f2                	lw	ra,28(sp)
20011996:	4462                	lw	s0,24(sp)
20011998:	44d2                	lw	s1,20(sp)
2001199a:	4942                	lw	s2,16(sp)
2001199c:	6105                	addi	sp,sp,32
2001199e:	8082                	ret
200119a0:	0074                	addi	a3,sp,12
200119a2:	0030                	addi	a2,sp,8
200119a4:	84aa                	mv	s1,a0
200119a6:	3f9d                	jal	2001191c <__swhatbuf_r>
200119a8:	45a2                	lw	a1,8(sp)
200119aa:	892a                	mv	s2,a0
200119ac:	8526                	mv	a0,s1
200119ae:	2a39                	jal	20011acc <_malloc_r>
200119b0:	ed01                	bnez	a0,200119c8 <__smakebuf_r+0x54>
200119b2:	00c41783          	lh	a5,12(s0)
200119b6:	2007f713          	andi	a4,a5,512
200119ba:	ff69                	bnez	a4,20011994 <__smakebuf_r+0x20>
200119bc:	9bf1                	andi	a5,a5,-4
200119be:	0027e793          	ori	a5,a5,2
200119c2:	00f41623          	sh	a5,12(s0)
200119c6:	b7c9                	j	20011988 <__smakebuf_r+0x14>
200119c8:	00000797          	auipc	a5,0x0
200119cc:	d9a78793          	addi	a5,a5,-614 # 20011762 <_cleanup_r>
200119d0:	d49c                	sw	a5,40(s1)
200119d2:	00c45783          	lhu	a5,12(s0)
200119d6:	c008                	sw	a0,0(s0)
200119d8:	c808                	sw	a0,16(s0)
200119da:	0807e793          	ori	a5,a5,128
200119de:	00f41623          	sh	a5,12(s0)
200119e2:	47a2                	lw	a5,8(sp)
200119e4:	c85c                	sw	a5,20(s0)
200119e6:	47b2                	lw	a5,12(sp)
200119e8:	cf89                	beqz	a5,20011a02 <__smakebuf_r+0x8e>
200119ea:	00e41583          	lh	a1,14(s0)
200119ee:	8526                	mv	a0,s1
200119f0:	251d                	jal	20012016 <_isatty_r>
200119f2:	c901                	beqz	a0,20011a02 <__smakebuf_r+0x8e>
200119f4:	00c45783          	lhu	a5,12(s0)
200119f8:	9bf1                	andi	a5,a5,-4
200119fa:	0017e793          	ori	a5,a5,1
200119fe:	00f41623          	sh	a5,12(s0)
20011a02:	00c45783          	lhu	a5,12(s0)
20011a06:	00f96933          	or	s2,s2,a5
20011a0a:	01241623          	sh	s2,12(s0)
20011a0e:	b759                	j	20011994 <__smakebuf_r+0x20>

20011a10 <memset>:
memset():
20011a10:	832a                	mv	t1,a0
20011a12:	c611                	beqz	a2,20011a1e <memset+0xe>
20011a14:	00b30023          	sb	a1,0(t1)
20011a18:	167d                	addi	a2,a2,-1
20011a1a:	0305                	addi	t1,t1,1
20011a1c:	fe65                	bnez	a2,20011a14 <memset+0x4>
20011a1e:	8082                	ret

20011a20 <_free_r>:
_free_r():
20011a20:	c5cd                	beqz	a1,20011aca <_free_r+0xaa>
20011a22:	ffc5a783          	lw	a5,-4(a1)
20011a26:	1141                	addi	sp,sp,-16
20011a28:	c422                	sw	s0,8(sp)
20011a2a:	c606                	sw	ra,12(sp)
20011a2c:	c226                	sw	s1,4(sp)
20011a2e:	ffc58413          	addi	s0,a1,-4
20011a32:	0007d363          	bgez	a5,20011a38 <_free_r+0x18>
20011a36:	943e                	add	s0,s0,a5
20011a38:	84aa                	mv	s1,a0
20011a3a:	25b9                	jal	20012088 <__malloc_lock>
20011a3c:	5ffef797          	auipc	a5,0x5ffef
20011a40:	0d478793          	addi	a5,a5,212 # 80000b10 <__tls_base>
20011a44:	439c                	lw	a5,0(a5)
20011a46:	ef89                	bnez	a5,20011a60 <_free_r+0x40>
20011a48:	00042223          	sw	zero,4(s0)
20011a4c:	5ffef797          	auipc	a5,0x5ffef
20011a50:	0c87a223          	sw	s0,196(a5) # 80000b10 <__tls_base>
20011a54:	4422                	lw	s0,8(sp)
20011a56:	40b2                	lw	ra,12(sp)
20011a58:	8526                	mv	a0,s1
20011a5a:	4492                	lw	s1,4(sp)
20011a5c:	0141                	addi	sp,sp,16
20011a5e:	a535                	j	2001208a <__malloc_unlock>
20011a60:	00f47e63          	bgeu	s0,a5,20011a7c <_free_r+0x5c>
20011a64:	4014                	lw	a3,0(s0)
20011a66:	00d40733          	add	a4,s0,a3
20011a6a:	00e79663          	bne	a5,a4,20011a76 <_free_r+0x56>
20011a6e:	4398                	lw	a4,0(a5)
20011a70:	43dc                	lw	a5,4(a5)
20011a72:	9736                	add	a4,a4,a3
20011a74:	c018                	sw	a4,0(s0)
20011a76:	c05c                	sw	a5,4(s0)
20011a78:	bfd1                	j	20011a4c <_free_r+0x2c>
20011a7a:	87ba                	mv	a5,a4
20011a7c:	43d8                	lw	a4,4(a5)
20011a7e:	c319                	beqz	a4,20011a84 <_free_r+0x64>
20011a80:	fee47de3          	bgeu	s0,a4,20011a7a <_free_r+0x5a>
20011a84:	4394                	lw	a3,0(a5)
20011a86:	00d78633          	add	a2,a5,a3
20011a8a:	00861f63          	bne	a2,s0,20011aa8 <_free_r+0x88>
20011a8e:	4010                	lw	a2,0(s0)
20011a90:	96b2                	add	a3,a3,a2
20011a92:	c394                	sw	a3,0(a5)
20011a94:	00d78633          	add	a2,a5,a3
20011a98:	fac71ee3          	bne	a4,a2,20011a54 <_free_r+0x34>
20011a9c:	4310                	lw	a2,0(a4)
20011a9e:	4358                	lw	a4,4(a4)
20011aa0:	96b2                	add	a3,a3,a2
20011aa2:	c394                	sw	a3,0(a5)
20011aa4:	c3d8                	sw	a4,4(a5)
20011aa6:	b77d                	j	20011a54 <_free_r+0x34>
20011aa8:	00c47563          	bgeu	s0,a2,20011ab2 <_free_r+0x92>
20011aac:	47b1                	li	a5,12
20011aae:	c09c                	sw	a5,0(s1)
20011ab0:	b755                	j	20011a54 <_free_r+0x34>
20011ab2:	4010                	lw	a2,0(s0)
20011ab4:	00c406b3          	add	a3,s0,a2
20011ab8:	00d71663          	bne	a4,a3,20011ac4 <_free_r+0xa4>
20011abc:	4314                	lw	a3,0(a4)
20011abe:	4358                	lw	a4,4(a4)
20011ac0:	96b2                	add	a3,a3,a2
20011ac2:	c014                	sw	a3,0(s0)
20011ac4:	c058                	sw	a4,4(s0)
20011ac6:	c3c0                	sw	s0,4(a5)
20011ac8:	b771                	j	20011a54 <_free_r+0x34>
20011aca:	8082                	ret

20011acc <_malloc_r>:
_malloc_r():
20011acc:	1101                	addi	sp,sp,-32
20011ace:	ca26                	sw	s1,20(sp)
20011ad0:	00358493          	addi	s1,a1,3
20011ad4:	98f1                	andi	s1,s1,-4
20011ad6:	ce06                	sw	ra,28(sp)
20011ad8:	cc22                	sw	s0,24(sp)
20011ada:	c84a                	sw	s2,16(sp)
20011adc:	c64e                	sw	s3,12(sp)
20011ade:	04a1                	addi	s1,s1,8
20011ae0:	47b1                	li	a5,12
20011ae2:	04f4f763          	bgeu	s1,a5,20011b30 <_malloc_r+0x64>
20011ae6:	44b1                	li	s1,12
20011ae8:	04b4e663          	bltu	s1,a1,20011b34 <_malloc_r+0x68>
20011aec:	892a                	mv	s2,a0
20011aee:	2b69                	jal	20012088 <__malloc_lock>
20011af0:	5ffef797          	auipc	a5,0x5ffef
20011af4:	02078793          	addi	a5,a5,32 # 80000b10 <__tls_base>
20011af8:	4398                	lw	a4,0(a5)
20011afa:	843a                	mv	s0,a4
20011afc:	e431                	bnez	s0,20011b48 <_malloc_r+0x7c>
20011afe:	5ffef797          	auipc	a5,0x5ffef
20011b02:	01678793          	addi	a5,a5,22 # 80000b14 <__malloc_sbrk_start>
20011b06:	439c                	lw	a5,0(a5)
20011b08:	eb81                	bnez	a5,20011b18 <_malloc_r+0x4c>
20011b0a:	4581                	li	a1,0
20011b0c:	854a                	mv	a0,s2
20011b0e:	2645                	jal	20011eae <_sbrk_r>
20011b10:	5ffef797          	auipc	a5,0x5ffef
20011b14:	00a7a223          	sw	a0,4(a5) # 80000b14 <__malloc_sbrk_start>
20011b18:	85a6                	mv	a1,s1
20011b1a:	854a                	mv	a0,s2
20011b1c:	2e49                	jal	20011eae <_sbrk_r>
20011b1e:	59fd                	li	s3,-1
20011b20:	07351963          	bne	a0,s3,20011b92 <_malloc_r+0xc6>
20011b24:	47b1                	li	a5,12
20011b26:	00f92023          	sw	a5,0(s2)
20011b2a:	854a                	mv	a0,s2
20011b2c:	2bb9                	jal	2001208a <__malloc_unlock>
20011b2e:	a029                	j	20011b38 <_malloc_r+0x6c>
20011b30:	fa04dce3          	bgez	s1,20011ae8 <_malloc_r+0x1c>
20011b34:	47b1                	li	a5,12
20011b36:	c11c                	sw	a5,0(a0)
20011b38:	4501                	li	a0,0
20011b3a:	40f2                	lw	ra,28(sp)
20011b3c:	4462                	lw	s0,24(sp)
20011b3e:	44d2                	lw	s1,20(sp)
20011b40:	4942                	lw	s2,16(sp)
20011b42:	49b2                	lw	s3,12(sp)
20011b44:	6105                	addi	sp,sp,32
20011b46:	8082                	ret
20011b48:	401c                	lw	a5,0(s0)
20011b4a:	8f85                	sub	a5,a5,s1
20011b4c:	0407c063          	bltz	a5,20011b8c <_malloc_r+0xc0>
20011b50:	46ad                	li	a3,11
20011b52:	00f6f663          	bgeu	a3,a5,20011b5e <_malloc_r+0x92>
20011b56:	c01c                	sw	a5,0(s0)
20011b58:	943e                	add	s0,s0,a5
20011b5a:	c004                	sw	s1,0(s0)
20011b5c:	a801                	j	20011b6c <_malloc_r+0xa0>
20011b5e:	405c                	lw	a5,4(s0)
20011b60:	02871463          	bne	a4,s0,20011b88 <_malloc_r+0xbc>
20011b64:	5ffef717          	auipc	a4,0x5ffef
20011b68:	faf72623          	sw	a5,-84(a4) # 80000b10 <__tls_base>
20011b6c:	854a                	mv	a0,s2
20011b6e:	2b31                	jal	2001208a <__malloc_unlock>
20011b70:	00b40513          	addi	a0,s0,11
20011b74:	00440793          	addi	a5,s0,4
20011b78:	9961                	andi	a0,a0,-8
20011b7a:	40f50733          	sub	a4,a0,a5
20011b7e:	df55                	beqz	a4,20011b3a <_malloc_r+0x6e>
20011b80:	943a                	add	s0,s0,a4
20011b82:	8f89                	sub	a5,a5,a0
20011b84:	c01c                	sw	a5,0(s0)
20011b86:	bf55                	j	20011b3a <_malloc_r+0x6e>
20011b88:	c35c                	sw	a5,4(a4)
20011b8a:	b7cd                	j	20011b6c <_malloc_r+0xa0>
20011b8c:	8722                	mv	a4,s0
20011b8e:	4040                	lw	s0,4(s0)
20011b90:	b7b5                	j	20011afc <_malloc_r+0x30>
20011b92:	00350413          	addi	s0,a0,3
20011b96:	9871                	andi	s0,s0,-4
20011b98:	fc8501e3          	beq	a0,s0,20011b5a <_malloc_r+0x8e>
20011b9c:	40a405b3          	sub	a1,s0,a0
20011ba0:	854a                	mv	a0,s2
20011ba2:	2631                	jal	20011eae <_sbrk_r>
20011ba4:	fb351be3          	bne	a0,s3,20011b5a <_malloc_r+0x8e>
20011ba8:	bfb5                	j	20011b24 <_malloc_r+0x58>

20011baa <__sfputc_r>:
__sfputc_r():
20011baa:	461c                	lw	a5,8(a2)
20011bac:	17fd                	addi	a5,a5,-1
20011bae:	c61c                	sw	a5,8(a2)
20011bb0:	0007da63          	bgez	a5,20011bc4 <__sfputc_r+0x1a>
20011bb4:	4e18                	lw	a4,24(a2)
20011bb6:	00e7c563          	blt	a5,a4,20011bc0 <__sfputc_r+0x16>
20011bba:	47a9                	li	a5,10
20011bbc:	00f59463          	bne	a1,a5,20011bc4 <__sfputc_r+0x1a>
20011bc0:	fbcff06f          	j	2001137c <__swbuf_r>
20011bc4:	421c                	lw	a5,0(a2)
20011bc6:	852e                	mv	a0,a1
20011bc8:	00178713          	addi	a4,a5,1
20011bcc:	c218                	sw	a4,0(a2)
20011bce:	00b78023          	sb	a1,0(a5)
20011bd2:	8082                	ret

20011bd4 <__sfputs_r>:
__sfputs_r():
20011bd4:	1101                	addi	sp,sp,-32
20011bd6:	cc22                	sw	s0,24(sp)
20011bd8:	ca26                	sw	s1,20(sp)
20011bda:	c84a                	sw	s2,16(sp)
20011bdc:	c64e                	sw	s3,12(sp)
20011bde:	c452                	sw	s4,8(sp)
20011be0:	ce06                	sw	ra,28(sp)
20011be2:	892a                	mv	s2,a0
20011be4:	89ae                	mv	s3,a1
20011be6:	8432                	mv	s0,a2
20011be8:	00d604b3          	add	s1,a2,a3
20011bec:	5a7d                	li	s4,-1
20011bee:	00941463          	bne	s0,s1,20011bf6 <__sfputs_r+0x22>
20011bf2:	4501                	li	a0,0
20011bf4:	a809                	j	20011c06 <__sfputs_r+0x32>
20011bf6:	00044583          	lbu	a1,0(s0)
20011bfa:	864e                	mv	a2,s3
20011bfc:	854a                	mv	a0,s2
20011bfe:	3775                	jal	20011baa <__sfputc_r>
20011c00:	0405                	addi	s0,s0,1
20011c02:	ff4516e3          	bne	a0,s4,20011bee <__sfputs_r+0x1a>
20011c06:	40f2                	lw	ra,28(sp)
20011c08:	4462                	lw	s0,24(sp)
20011c0a:	44d2                	lw	s1,20(sp)
20011c0c:	4942                	lw	s2,16(sp)
20011c0e:	49b2                	lw	s3,12(sp)
20011c10:	4a22                	lw	s4,8(sp)
20011c12:	6105                	addi	sp,sp,32
20011c14:	8082                	ret

20011c16 <_vfiprintf_r>:
_vfiprintf_r():
20011c16:	7135                	addi	sp,sp,-160
20011c18:	cd22                	sw	s0,152(sp)
20011c1a:	cb26                	sw	s1,148(sp)
20011c1c:	c94a                	sw	s2,144(sp)
20011c1e:	c74e                	sw	s3,140(sp)
20011c20:	cf06                	sw	ra,156(sp)
20011c22:	c552                	sw	s4,136(sp)
20011c24:	c356                	sw	s5,132(sp)
20011c26:	c15a                	sw	s6,128(sp)
20011c28:	dede                	sw	s7,124(sp)
20011c2a:	dce2                	sw	s8,120(sp)
20011c2c:	dae6                	sw	s9,116(sp)
20011c2e:	89aa                	mv	s3,a0
20011c30:	84ae                	mv	s1,a1
20011c32:	8932                	mv	s2,a2
20011c34:	8436                	mv	s0,a3
20011c36:	c501                	beqz	a0,20011c3e <_vfiprintf_r+0x28>
20011c38:	4d1c                	lw	a5,24(a0)
20011c3a:	e391                	bnez	a5,20011c3e <_vfiprintf_r+0x28>
20011c3c:	3e95                	jal	200117b0 <__sinit>
20011c3e:	ffffe797          	auipc	a5,0xffffe
20011c42:	7ee78793          	addi	a5,a5,2030 # 2001042c <__sf_fake_stdin>
20011c46:	0cf49b63          	bne	s1,a5,20011d1c <_vfiprintf_r+0x106>
20011c4a:	0049a483          	lw	s1,4(s3)
20011c4e:	00c4d783          	lhu	a5,12(s1)
20011c52:	8ba1                	andi	a5,a5,8
20011c54:	c7f5                	beqz	a5,20011d40 <_vfiprintf_r+0x12a>
20011c56:	489c                	lw	a5,16(s1)
20011c58:	c7e5                	beqz	a5,20011d40 <_vfiprintf_r+0x12a>
20011c5a:	02000793          	li	a5,32
20011c5e:	02f104a3          	sb	a5,41(sp)
20011c62:	03000793          	li	a5,48
20011c66:	d202                	sw	zero,36(sp)
20011c68:	02f10523          	sb	a5,42(sp)
20011c6c:	c622                	sw	s0,12(sp)
20011c6e:	02500b93          	li	s7,37
20011c72:	ffffea97          	auipc	s5,0xffffe
20011c76:	7faa8a93          	addi	s5,s5,2042 # 2001046c <__sf_fake_stdout+0x20>
20011c7a:	4c05                	li	s8,1
20011c7c:	4b29                	li	s6,10
20011c7e:	844a                	mv	s0,s2
20011c80:	00044783          	lbu	a5,0(s0)
20011c84:	c399                	beqz	a5,20011c8a <_vfiprintf_r+0x74>
20011c86:	0f779063          	bne	a5,s7,20011d66 <_vfiprintf_r+0x150>
20011c8a:	41240cb3          	sub	s9,s0,s2
20011c8e:	000c8d63          	beqz	s9,20011ca8 <_vfiprintf_r+0x92>
20011c92:	86e6                	mv	a3,s9
20011c94:	864a                	mv	a2,s2
20011c96:	85a6                	mv	a1,s1
20011c98:	854e                	mv	a0,s3
20011c9a:	3f2d                	jal	20011bd4 <__sfputs_r>
20011c9c:	57fd                	li	a5,-1
20011c9e:	1ef50663          	beq	a0,a5,20011e8a <_vfiprintf_r+0x274>
20011ca2:	5692                	lw	a3,36(sp)
20011ca4:	96e6                	add	a3,a3,s9
20011ca6:	d236                	sw	a3,36(sp)
20011ca8:	00044783          	lbu	a5,0(s0)
20011cac:	1c078f63          	beqz	a5,20011e8a <_vfiprintf_r+0x274>
20011cb0:	57fd                	li	a5,-1
20011cb2:	00140913          	addi	s2,s0,1
20011cb6:	c802                	sw	zero,16(sp)
20011cb8:	ce02                	sw	zero,28(sp)
20011cba:	ca3e                	sw	a5,20(sp)
20011cbc:	cc02                	sw	zero,24(sp)
20011cbe:	040109a3          	sb	zero,83(sp)
20011cc2:	d482                	sw	zero,104(sp)
20011cc4:	00094583          	lbu	a1,0(s2)
20011cc8:	4615                	li	a2,5
20011cca:	8556                	mv	a0,s5
20011ccc:	264d                	jal	2001206e <memchr>
20011cce:	00190413          	addi	s0,s2,1
20011cd2:	47c2                	lw	a5,16(sp)
20011cd4:	e959                	bnez	a0,20011d6a <_vfiprintf_r+0x154>
20011cd6:	0107f713          	andi	a4,a5,16
20011cda:	c709                	beqz	a4,20011ce4 <_vfiprintf_r+0xce>
20011cdc:	02000713          	li	a4,32
20011ce0:	04e109a3          	sb	a4,83(sp)
20011ce4:	0087f713          	andi	a4,a5,8
20011ce8:	c709                	beqz	a4,20011cf2 <_vfiprintf_r+0xdc>
20011cea:	02b00713          	li	a4,43
20011cee:	04e109a3          	sb	a4,83(sp)
20011cf2:	00094683          	lbu	a3,0(s2)
20011cf6:	02a00713          	li	a4,42
20011cfa:	08e68063          	beq	a3,a4,20011d7a <_vfiprintf_r+0x164>
20011cfe:	47f2                	lw	a5,28(sp)
20011d00:	844a                	mv	s0,s2
20011d02:	4681                	li	a3,0
20011d04:	4625                	li	a2,9
20011d06:	00044703          	lbu	a4,0(s0)
20011d0a:	00140593          	addi	a1,s0,1
20011d0e:	fd070713          	addi	a4,a4,-48
20011d12:	0ae67963          	bgeu	a2,a4,20011dc4 <_vfiprintf_r+0x1ae>
20011d16:	cab5                	beqz	a3,20011d8a <_vfiprintf_r+0x174>
20011d18:	ce3e                	sw	a5,28(sp)
20011d1a:	a885                	j	20011d8a <_vfiprintf_r+0x174>
20011d1c:	ffffe797          	auipc	a5,0xffffe
20011d20:	73078793          	addi	a5,a5,1840 # 2001044c <__sf_fake_stdout>
20011d24:	00f49563          	bne	s1,a5,20011d2e <_vfiprintf_r+0x118>
20011d28:	0089a483          	lw	s1,8(s3)
20011d2c:	b70d                	j	20011c4e <_vfiprintf_r+0x38>
20011d2e:	ffffe797          	auipc	a5,0xffffe
20011d32:	6de78793          	addi	a5,a5,1758 # 2001040c <__sf_fake_stderr>
20011d36:	f0f49ce3          	bne	s1,a5,20011c4e <_vfiprintf_r+0x38>
20011d3a:	00c9a483          	lw	s1,12(s3)
20011d3e:	bf01                	j	20011c4e <_vfiprintf_r+0x38>
20011d40:	85a6                	mv	a1,s1
20011d42:	854e                	mv	a0,s3
20011d44:	ef8ff0ef          	jal	ra,2001143c <__swsetup_r>
20011d48:	d909                	beqz	a0,20011c5a <_vfiprintf_r+0x44>
20011d4a:	557d                	li	a0,-1
20011d4c:	40fa                	lw	ra,156(sp)
20011d4e:	446a                	lw	s0,152(sp)
20011d50:	44da                	lw	s1,148(sp)
20011d52:	494a                	lw	s2,144(sp)
20011d54:	49ba                	lw	s3,140(sp)
20011d56:	4a2a                	lw	s4,136(sp)
20011d58:	4a9a                	lw	s5,132(sp)
20011d5a:	4b0a                	lw	s6,128(sp)
20011d5c:	5bf6                	lw	s7,124(sp)
20011d5e:	5c66                	lw	s8,120(sp)
20011d60:	5cd6                	lw	s9,116(sp)
20011d62:	610d                	addi	sp,sp,160
20011d64:	8082                	ret
20011d66:	0405                	addi	s0,s0,1
20011d68:	bf21                	j	20011c80 <_vfiprintf_r+0x6a>
20011d6a:	41550533          	sub	a0,a0,s5
20011d6e:	00ac1533          	sll	a0,s8,a0
20011d72:	8fc9                	or	a5,a5,a0
20011d74:	c83e                	sw	a5,16(sp)
20011d76:	8922                	mv	s2,s0
20011d78:	b7b1                	j	20011cc4 <_vfiprintf_r+0xae>
20011d7a:	4732                	lw	a4,12(sp)
20011d7c:	00470693          	addi	a3,a4,4
20011d80:	4318                	lw	a4,0(a4)
20011d82:	c636                	sw	a3,12(sp)
20011d84:	02074963          	bltz	a4,20011db6 <_vfiprintf_r+0x1a0>
20011d88:	ce3a                	sw	a4,28(sp)
20011d8a:	00044703          	lbu	a4,0(s0)
20011d8e:	02e00793          	li	a5,46
20011d92:	04f71f63          	bne	a4,a5,20011df0 <_vfiprintf_r+0x1da>
20011d96:	00144703          	lbu	a4,1(s0)
20011d9a:	02a00793          	li	a5,42
20011d9e:	02f71b63          	bne	a4,a5,20011dd4 <_vfiprintf_r+0x1be>
20011da2:	47b2                	lw	a5,12(sp)
20011da4:	0409                	addi	s0,s0,2
20011da6:	00478713          	addi	a4,a5,4
20011daa:	439c                	lw	a5,0(a5)
20011dac:	c63a                	sw	a4,12(sp)
20011dae:	0207c163          	bltz	a5,20011dd0 <_vfiprintf_r+0x1ba>
20011db2:	ca3e                	sw	a5,20(sp)
20011db4:	a835                	j	20011df0 <_vfiprintf_r+0x1da>
20011db6:	40e00733          	neg	a4,a4
20011dba:	0027e793          	ori	a5,a5,2
20011dbe:	ce3a                	sw	a4,28(sp)
20011dc0:	c83e                	sw	a5,16(sp)
20011dc2:	b7e1                	j	20011d8a <_vfiprintf_r+0x174>
20011dc4:	036787b3          	mul	a5,a5,s6
20011dc8:	4685                	li	a3,1
20011dca:	842e                	mv	s0,a1
20011dcc:	97ba                	add	a5,a5,a4
20011dce:	bf25                	j	20011d06 <_vfiprintf_r+0xf0>
20011dd0:	57fd                	li	a5,-1
20011dd2:	b7c5                	j	20011db2 <_vfiprintf_r+0x19c>
20011dd4:	0405                	addi	s0,s0,1
20011dd6:	ca02                	sw	zero,20(sp)
20011dd8:	4681                	li	a3,0
20011dda:	4781                	li	a5,0
20011ddc:	4625                	li	a2,9
20011dde:	00044703          	lbu	a4,0(s0)
20011de2:	00140593          	addi	a1,s0,1
20011de6:	fd070713          	addi	a4,a4,-48
20011dea:	06e67663          	bgeu	a2,a4,20011e56 <_vfiprintf_r+0x240>
20011dee:	f2f1                	bnez	a3,20011db2 <_vfiprintf_r+0x19c>
20011df0:	00044583          	lbu	a1,0(s0)
20011df4:	460d                	li	a2,3
20011df6:	ffffe517          	auipc	a0,0xffffe
20011dfa:	67e50513          	addi	a0,a0,1662 # 20010474 <__sf_fake_stdout+0x28>
20011dfe:	2c85                	jal	2001206e <memchr>
20011e00:	cd11                	beqz	a0,20011e1c <_vfiprintf_r+0x206>
20011e02:	ffffe797          	auipc	a5,0xffffe
20011e06:	67278793          	addi	a5,a5,1650 # 20010474 <__sf_fake_stdout+0x28>
20011e0a:	8d1d                	sub	a0,a0,a5
20011e0c:	04000793          	li	a5,64
20011e10:	00a797b3          	sll	a5,a5,a0
20011e14:	4542                	lw	a0,16(sp)
20011e16:	0405                	addi	s0,s0,1
20011e18:	8d5d                	or	a0,a0,a5
20011e1a:	c82a                	sw	a0,16(sp)
20011e1c:	00044583          	lbu	a1,0(s0)
20011e20:	4619                	li	a2,6
20011e22:	ffffe517          	auipc	a0,0xffffe
20011e26:	65650513          	addi	a0,a0,1622 # 20010478 <__sf_fake_stdout+0x2c>
20011e2a:	00140913          	addi	s2,s0,1
20011e2e:	02b10423          	sb	a1,40(sp)
20011e32:	2c35                	jal	2001206e <memchr>
20011e34:	c13d                	beqz	a0,20011e9a <_vfiprintf_r+0x284>
20011e36:	dffee797          	auipc	a5,0xdffee
20011e3a:	1ca78793          	addi	a5,a5,458 # 0 <__metal_boot_hart>
20011e3e:	e795                	bnez	a5,20011e6a <_vfiprintf_r+0x254>
20011e40:	4742                	lw	a4,16(sp)
20011e42:	47b2                	lw	a5,12(sp)
20011e44:	10077713          	andi	a4,a4,256
20011e48:	cf09                	beqz	a4,20011e62 <_vfiprintf_r+0x24c>
20011e4a:	0791                	addi	a5,a5,4
20011e4c:	c63e                	sw	a5,12(sp)
20011e4e:	5792                	lw	a5,36(sp)
20011e50:	97d2                	add	a5,a5,s4
20011e52:	d23e                	sw	a5,36(sp)
20011e54:	b52d                	j	20011c7e <_vfiprintf_r+0x68>
20011e56:	036787b3          	mul	a5,a5,s6
20011e5a:	4685                	li	a3,1
20011e5c:	842e                	mv	s0,a1
20011e5e:	97ba                	add	a5,a5,a4
20011e60:	bfbd                	j	20011dde <_vfiprintf_r+0x1c8>
20011e62:	079d                	addi	a5,a5,7
20011e64:	9be1                	andi	a5,a5,-8
20011e66:	07a1                	addi	a5,a5,8
20011e68:	b7d5                	j	20011e4c <_vfiprintf_r+0x236>
20011e6a:	0078                	addi	a4,sp,12
20011e6c:	00000697          	auipc	a3,0x0
20011e70:	d6868693          	addi	a3,a3,-664 # 20011bd4 <__sfputs_r>
20011e74:	8626                	mv	a2,s1
20011e76:	080c                	addi	a1,sp,16
20011e78:	854e                	mv	a0,s3
20011e7a:	00000097          	auipc	ra,0x0
20011e7e:	000000e7          	jalr	zero # 0 <__metal_boot_hart>
20011e82:	57fd                	li	a5,-1
20011e84:	8a2a                	mv	s4,a0
20011e86:	fcf514e3          	bne	a0,a5,20011e4e <_vfiprintf_r+0x238>
20011e8a:	00c4d783          	lhu	a5,12(s1)
20011e8e:	0407f793          	andi	a5,a5,64
20011e92:	ea079ce3          	bnez	a5,20011d4a <_vfiprintf_r+0x134>
20011e96:	5512                	lw	a0,36(sp)
20011e98:	bd55                	j	20011d4c <_vfiprintf_r+0x136>
20011e9a:	0078                	addi	a4,sp,12
20011e9c:	00000697          	auipc	a3,0x0
20011ea0:	d3868693          	addi	a3,a3,-712 # 20011bd4 <__sfputs_r>
20011ea4:	8626                	mv	a2,s1
20011ea6:	080c                	addi	a1,sp,16
20011ea8:	854e                	mv	a0,s3
20011eaa:	24fd                	jal	20012198 <_printf_i>
20011eac:	bfd9                	j	20011e82 <_vfiprintf_r+0x26c>

20011eae <_sbrk_r>:
_sbrk_r():
20011eae:	1141                	addi	sp,sp,-16
20011eb0:	c422                	sw	s0,8(sp)
20011eb2:	842a                	mv	s0,a0
20011eb4:	852e                	mv	a0,a1
20011eb6:	8e01a823          	sw	zero,-1808(gp) # 80000bb0 <errno>
20011eba:	c606                	sw	ra,12(sp)
20011ebc:	345050ef          	jal	ra,20017a00 <_sbrk>
20011ec0:	57fd                	li	a5,-1
20011ec2:	00f51763          	bne	a0,a5,20011ed0 <_sbrk_r+0x22>
20011ec6:	8f018793          	addi	a5,gp,-1808 # 80000bb0 <errno>
20011eca:	439c                	lw	a5,0(a5)
20011ecc:	c391                	beqz	a5,20011ed0 <_sbrk_r+0x22>
20011ece:	c01c                	sw	a5,0(s0)
20011ed0:	40b2                	lw	ra,12(sp)
20011ed2:	4422                	lw	s0,8(sp)
20011ed4:	0141                	addi	sp,sp,16
20011ed6:	8082                	ret

20011ed8 <__sread>:
__sread():
20011ed8:	1141                	addi	sp,sp,-16
20011eda:	c422                	sw	s0,8(sp)
20011edc:	842e                	mv	s0,a1
20011ede:	00e59583          	lh	a1,14(a1)
20011ee2:	c606                	sw	ra,12(sp)
20011ee4:	2b99                	jal	2001243a <_read_r>
20011ee6:	00054963          	bltz	a0,20011ef8 <__sread+0x20>
20011eea:	487c                	lw	a5,84(s0)
20011eec:	97aa                	add	a5,a5,a0
20011eee:	c87c                	sw	a5,84(s0)
20011ef0:	40b2                	lw	ra,12(sp)
20011ef2:	4422                	lw	s0,8(sp)
20011ef4:	0141                	addi	sp,sp,16
20011ef6:	8082                	ret
20011ef8:	00c45783          	lhu	a5,12(s0)
20011efc:	777d                	lui	a4,0xfffff
20011efe:	177d                	addi	a4,a4,-1
20011f00:	8ff9                	and	a5,a5,a4
20011f02:	00f41623          	sh	a5,12(s0)
20011f06:	b7ed                	j	20011ef0 <__sread+0x18>

20011f08 <__swrite>:
__swrite():
20011f08:	00c5d783          	lhu	a5,12(a1)
20011f0c:	1101                	addi	sp,sp,-32
20011f0e:	cc22                	sw	s0,24(sp)
20011f10:	ca26                	sw	s1,20(sp)
20011f12:	c84a                	sw	s2,16(sp)
20011f14:	c64e                	sw	s3,12(sp)
20011f16:	ce06                	sw	ra,28(sp)
20011f18:	1007f793          	andi	a5,a5,256
20011f1c:	84aa                	mv	s1,a0
20011f1e:	842e                	mv	s0,a1
20011f20:	8932                	mv	s2,a2
20011f22:	89b6                	mv	s3,a3
20011f24:	c791                	beqz	a5,20011f30 <__swrite+0x28>
20011f26:	00e59583          	lh	a1,14(a1)
20011f2a:	4689                	li	a3,2
20011f2c:	4601                	li	a2,0
20011f2e:	2a09                	jal	20012040 <_lseek_r>
20011f30:	00c45783          	lhu	a5,12(s0)
20011f34:	777d                	lui	a4,0xfffff
20011f36:	177d                	addi	a4,a4,-1
20011f38:	8ff9                	and	a5,a5,a4
20011f3a:	00f41623          	sh	a5,12(s0)
20011f3e:	00e41583          	lh	a1,14(s0)
20011f42:	4462                	lw	s0,24(sp)
20011f44:	40f2                	lw	ra,28(sp)
20011f46:	86ce                	mv	a3,s3
20011f48:	864a                	mv	a2,s2
20011f4a:	49b2                	lw	s3,12(sp)
20011f4c:	4942                	lw	s2,16(sp)
20011f4e:	8526                	mv	a0,s1
20011f50:	44d2                	lw	s1,20(sp)
20011f52:	6105                	addi	sp,sp,32
20011f54:	a83d                	j	20011f92 <_write_r>

20011f56 <__sseek>:
__sseek():
20011f56:	1141                	addi	sp,sp,-16
20011f58:	c422                	sw	s0,8(sp)
20011f5a:	842e                	mv	s0,a1
20011f5c:	00e59583          	lh	a1,14(a1)
20011f60:	c606                	sw	ra,12(sp)
20011f62:	28f9                	jal	20012040 <_lseek_r>
20011f64:	57fd                	li	a5,-1
20011f66:	00c45703          	lhu	a4,12(s0)
20011f6a:	00f51b63          	bne	a0,a5,20011f80 <__sseek+0x2a>
20011f6e:	77fd                	lui	a5,0xfffff
20011f70:	17fd                	addi	a5,a5,-1
20011f72:	8ff9                	and	a5,a5,a4
20011f74:	00f41623          	sh	a5,12(s0)
20011f78:	40b2                	lw	ra,12(sp)
20011f7a:	4422                	lw	s0,8(sp)
20011f7c:	0141                	addi	sp,sp,16
20011f7e:	8082                	ret
20011f80:	6785                	lui	a5,0x1
20011f82:	8fd9                	or	a5,a5,a4
20011f84:	00f41623          	sh	a5,12(s0)
20011f88:	c868                	sw	a0,84(s0)
20011f8a:	b7fd                	j	20011f78 <__sseek+0x22>

20011f8c <__sclose>:
__sclose():
20011f8c:	00e59583          	lh	a1,14(a1)
20011f90:	a805                	j	20011fc0 <_close_r>

20011f92 <_write_r>:
_write_r():
20011f92:	1141                	addi	sp,sp,-16
20011f94:	c422                	sw	s0,8(sp)
20011f96:	842a                	mv	s0,a0
20011f98:	852e                	mv	a0,a1
20011f9a:	85b2                	mv	a1,a2
20011f9c:	8636                	mv	a2,a3
20011f9e:	8e01a823          	sw	zero,-1808(gp) # 80000bb0 <errno>
20011fa2:	c606                	sw	ra,12(sp)
20011fa4:	2c7050ef          	jal	ra,20017a6a <_write>
20011fa8:	57fd                	li	a5,-1
20011faa:	00f51763          	bne	a0,a5,20011fb8 <_write_r+0x26>
20011fae:	8f018793          	addi	a5,gp,-1808 # 80000bb0 <errno>
20011fb2:	439c                	lw	a5,0(a5)
20011fb4:	c391                	beqz	a5,20011fb8 <_write_r+0x26>
20011fb6:	c01c                	sw	a5,0(s0)
20011fb8:	40b2                	lw	ra,12(sp)
20011fba:	4422                	lw	s0,8(sp)
20011fbc:	0141                	addi	sp,sp,16
20011fbe:	8082                	ret

20011fc0 <_close_r>:
_close_r():
20011fc0:	1141                	addi	sp,sp,-16
20011fc2:	c422                	sw	s0,8(sp)
20011fc4:	842a                	mv	s0,a0
20011fc6:	852e                	mv	a0,a1
20011fc8:	8e01a823          	sw	zero,-1808(gp) # 80000bb0 <errno>
20011fcc:	c606                	sw	ra,12(sp)
20011fce:	177050ef          	jal	ra,20017944 <_close>
20011fd2:	57fd                	li	a5,-1
20011fd4:	00f51763          	bne	a0,a5,20011fe2 <_close_r+0x22>
20011fd8:	8f018793          	addi	a5,gp,-1808 # 80000bb0 <errno>
20011fdc:	439c                	lw	a5,0(a5)
20011fde:	c391                	beqz	a5,20011fe2 <_close_r+0x22>
20011fe0:	c01c                	sw	a5,0(s0)
20011fe2:	40b2                	lw	ra,12(sp)
20011fe4:	4422                	lw	s0,8(sp)
20011fe6:	0141                	addi	sp,sp,16
20011fe8:	8082                	ret

20011fea <_fstat_r>:
_fstat_r():
20011fea:	1141                	addi	sp,sp,-16
20011fec:	c422                	sw	s0,8(sp)
20011fee:	842a                	mv	s0,a0
20011ff0:	852e                	mv	a0,a1
20011ff2:	85b2                	mv	a1,a2
20011ff4:	8e01a823          	sw	zero,-1808(gp) # 80000bb0 <errno>
20011ff8:	c606                	sw	ra,12(sp)
20011ffa:	16d050ef          	jal	ra,20017966 <_fstat>
20011ffe:	57fd                	li	a5,-1
20012000:	00f51763          	bne	a0,a5,2001200e <_fstat_r+0x24>
20012004:	8f018793          	addi	a5,gp,-1808 # 80000bb0 <errno>
20012008:	439c                	lw	a5,0(a5)
2001200a:	c391                	beqz	a5,2001200e <_fstat_r+0x24>
2001200c:	c01c                	sw	a5,0(s0)
2001200e:	40b2                	lw	ra,12(sp)
20012010:	4422                	lw	s0,8(sp)
20012012:	0141                	addi	sp,sp,16
20012014:	8082                	ret

20012016 <_isatty_r>:
_isatty_r():
20012016:	1141                	addi	sp,sp,-16
20012018:	c422                	sw	s0,8(sp)
2001201a:	842a                	mv	s0,a0
2001201c:	852e                	mv	a0,a1
2001201e:	8e01a823          	sw	zero,-1808(gp) # 80000bb0 <errno>
20012022:	c606                	sw	ra,12(sp)
20012024:	169050ef          	jal	ra,2001798c <_isatty>
20012028:	57fd                	li	a5,-1
2001202a:	00f51763          	bne	a0,a5,20012038 <_isatty_r+0x22>
2001202e:	8f018793          	addi	a5,gp,-1808 # 80000bb0 <errno>
20012032:	439c                	lw	a5,0(a5)
20012034:	c391                	beqz	a5,20012038 <_isatty_r+0x22>
20012036:	c01c                	sw	a5,0(s0)
20012038:	40b2                	lw	ra,12(sp)
2001203a:	4422                	lw	s0,8(sp)
2001203c:	0141                	addi	sp,sp,16
2001203e:	8082                	ret

20012040 <_lseek_r>:
_lseek_r():
20012040:	1141                	addi	sp,sp,-16
20012042:	c422                	sw	s0,8(sp)
20012044:	842a                	mv	s0,a0
20012046:	852e                	mv	a0,a1
20012048:	85b2                	mv	a1,a2
2001204a:	8636                	mv	a2,a3
2001204c:	8e01a823          	sw	zero,-1808(gp) # 80000bb0 <errno>
20012050:	c606                	sw	ra,12(sp)
20012052:	15b050ef          	jal	ra,200179ac <_lseek>
20012056:	57fd                	li	a5,-1
20012058:	00f51763          	bne	a0,a5,20012066 <_lseek_r+0x26>
2001205c:	8f018793          	addi	a5,gp,-1808 # 80000bb0 <errno>
20012060:	439c                	lw	a5,0(a5)
20012062:	c391                	beqz	a5,20012066 <_lseek_r+0x26>
20012064:	c01c                	sw	a5,0(s0)
20012066:	40b2                	lw	ra,12(sp)
20012068:	4422                	lw	s0,8(sp)
2001206a:	0141                	addi	sp,sp,16
2001206c:	8082                	ret

2001206e <memchr>:
memchr():
2001206e:	0ff5f593          	andi	a1,a1,255
20012072:	962a                	add	a2,a2,a0
20012074:	00c51463          	bne	a0,a2,2001207c <memchr+0xe>
20012078:	4501                	li	a0,0
2001207a:	8082                	ret
2001207c:	00054783          	lbu	a5,0(a0)
20012080:	feb78de3          	beq	a5,a1,2001207a <memchr+0xc>
20012084:	0505                	addi	a0,a0,1
20012086:	b7fd                	j	20012074 <memchr+0x6>

20012088 <__malloc_lock>:
__malloc_lock():
20012088:	8082                	ret

2001208a <__malloc_unlock>:
__malloc_unlock():
2001208a:	8082                	ret

2001208c <_printf_common>:
_printf_common():
2001208c:	7179                	addi	sp,sp,-48
2001208e:	ca56                	sw	s5,20(sp)
20012090:	499c                	lw	a5,16(a1)
20012092:	8aba                	mv	s5,a4
20012094:	4598                	lw	a4,8(a1)
20012096:	d422                	sw	s0,40(sp)
20012098:	d226                	sw	s1,36(sp)
2001209a:	ce4e                	sw	s3,28(sp)
2001209c:	cc52                	sw	s4,24(sp)
2001209e:	d606                	sw	ra,44(sp)
200120a0:	d04a                	sw	s2,32(sp)
200120a2:	c85a                	sw	s6,16(sp)
200120a4:	c65e                	sw	s7,12(sp)
200120a6:	89aa                	mv	s3,a0
200120a8:	842e                	mv	s0,a1
200120aa:	84b2                	mv	s1,a2
200120ac:	8a36                	mv	s4,a3
200120ae:	00e7d363          	bge	a5,a4,200120b4 <_printf_common+0x28>
200120b2:	87ba                	mv	a5,a4
200120b4:	c09c                	sw	a5,0(s1)
200120b6:	04344703          	lbu	a4,67(s0)
200120ba:	c319                	beqz	a4,200120c0 <_printf_common+0x34>
200120bc:	0785                	addi	a5,a5,1
200120be:	c09c                	sw	a5,0(s1)
200120c0:	401c                	lw	a5,0(s0)
200120c2:	0207f793          	andi	a5,a5,32
200120c6:	c781                	beqz	a5,200120ce <_printf_common+0x42>
200120c8:	409c                	lw	a5,0(s1)
200120ca:	0789                	addi	a5,a5,2
200120cc:	c09c                	sw	a5,0(s1)
200120ce:	00042903          	lw	s2,0(s0)
200120d2:	00697913          	andi	s2,s2,6
200120d6:	00091a63          	bnez	s2,200120ea <_printf_common+0x5e>
200120da:	01940b13          	addi	s6,s0,25
200120de:	5bfd                	li	s7,-1
200120e0:	445c                	lw	a5,12(s0)
200120e2:	4098                	lw	a4,0(s1)
200120e4:	8f99                	sub	a5,a5,a4
200120e6:	04f94c63          	blt	s2,a5,2001213e <_printf_common+0xb2>
200120ea:	401c                	lw	a5,0(s0)
200120ec:	04344683          	lbu	a3,67(s0)
200120f0:	0207f793          	andi	a5,a5,32
200120f4:	00d036b3          	snez	a3,a3
200120f8:	eba5                	bnez	a5,20012168 <_printf_common+0xdc>
200120fa:	04340613          	addi	a2,s0,67
200120fe:	85d2                	mv	a1,s4
20012100:	854e                	mv	a0,s3
20012102:	9a82                	jalr	s5
20012104:	57fd                	li	a5,-1
20012106:	04f50363          	beq	a0,a5,2001214c <_printf_common+0xc0>
2001210a:	401c                	lw	a5,0(s0)
2001210c:	4611                	li	a2,4
2001210e:	4098                	lw	a4,0(s1)
20012110:	8b99                	andi	a5,a5,6
20012112:	4454                	lw	a3,12(s0)
20012114:	4481                	li	s1,0
20012116:	00c79763          	bne	a5,a2,20012124 <_printf_common+0x98>
2001211a:	40e684b3          	sub	s1,a3,a4
2001211e:	0004d363          	bgez	s1,20012124 <_printf_common+0x98>
20012122:	4481                	li	s1,0
20012124:	441c                	lw	a5,8(s0)
20012126:	4818                	lw	a4,16(s0)
20012128:	00f75463          	bge	a4,a5,20012130 <_printf_common+0xa4>
2001212c:	8f99                	sub	a5,a5,a4
2001212e:	94be                	add	s1,s1,a5
20012130:	4901                	li	s2,0
20012132:	0469                	addi	s0,s0,26
20012134:	5b7d                	li	s6,-1
20012136:	05249863          	bne	s1,s2,20012186 <_printf_common+0xfa>
2001213a:	4501                	li	a0,0
2001213c:	a809                	j	2001214e <_printf_common+0xc2>
2001213e:	4685                	li	a3,1
20012140:	865a                	mv	a2,s6
20012142:	85d2                	mv	a1,s4
20012144:	854e                	mv	a0,s3
20012146:	9a82                	jalr	s5
20012148:	01751e63          	bne	a0,s7,20012164 <_printf_common+0xd8>
2001214c:	557d                	li	a0,-1
2001214e:	50b2                	lw	ra,44(sp)
20012150:	5422                	lw	s0,40(sp)
20012152:	5492                	lw	s1,36(sp)
20012154:	5902                	lw	s2,32(sp)
20012156:	49f2                	lw	s3,28(sp)
20012158:	4a62                	lw	s4,24(sp)
2001215a:	4ad2                	lw	s5,20(sp)
2001215c:	4b42                	lw	s6,16(sp)
2001215e:	4bb2                	lw	s7,12(sp)
20012160:	6145                	addi	sp,sp,48
20012162:	8082                	ret
20012164:	0905                	addi	s2,s2,1
20012166:	bfad                	j	200120e0 <_printf_common+0x54>
20012168:	00d40733          	add	a4,s0,a3
2001216c:	03000613          	li	a2,48
20012170:	04c701a3          	sb	a2,67(a4) # fffff043 <metal_segment_heap_target_end+0x7fffd883>
20012174:	04544703          	lbu	a4,69(s0)
20012178:	00168793          	addi	a5,a3,1
2001217c:	97a2                	add	a5,a5,s0
2001217e:	0689                	addi	a3,a3,2
20012180:	04e781a3          	sb	a4,67(a5) # 1043 <__heap_size+0x843>
20012184:	bf9d                	j	200120fa <_printf_common+0x6e>
20012186:	4685                	li	a3,1
20012188:	8622                	mv	a2,s0
2001218a:	85d2                	mv	a1,s4
2001218c:	854e                	mv	a0,s3
2001218e:	9a82                	jalr	s5
20012190:	fb650ee3          	beq	a0,s6,2001214c <_printf_common+0xc0>
20012194:	0905                	addi	s2,s2,1
20012196:	b745                	j	20012136 <_printf_common+0xaa>

20012198 <_printf_i>:
_printf_i():
20012198:	7179                	addi	sp,sp,-48
2001219a:	d422                	sw	s0,40(sp)
2001219c:	d226                	sw	s1,36(sp)
2001219e:	d04a                	sw	s2,32(sp)
200121a0:	ce4e                	sw	s3,28(sp)
200121a2:	d606                	sw	ra,44(sp)
200121a4:	cc52                	sw	s4,24(sp)
200121a6:	ca56                	sw	s5,20(sp)
200121a8:	c85a                	sw	s6,16(sp)
200121aa:	89b6                	mv	s3,a3
200121ac:	0185c683          	lbu	a3,24(a1)
200121b0:	06e00793          	li	a5,110
200121b4:	8932                	mv	s2,a2
200121b6:	84aa                	mv	s1,a0
200121b8:	842e                	mv	s0,a1
200121ba:	04358613          	addi	a2,a1,67
200121be:	1ef68063          	beq	a3,a5,2001239e <_printf_i+0x206>
200121c2:	06d7e263          	bltu	a5,a3,20012226 <_printf_i+0x8e>
200121c6:	06300793          	li	a5,99
200121ca:	0af68263          	beq	a3,a5,2001226e <_printf_i+0xd6>
200121ce:	00d7ed63          	bltu	a5,a3,200121e8 <_printf_i+0x50>
200121d2:	1e068a63          	beqz	a3,200123c6 <_printf_i+0x22e>
200121d6:	05800793          	li	a5,88
200121da:	16f68663          	beq	a3,a5,20012346 <_printf_i+0x1ae>
200121de:	04240a93          	addi	s5,s0,66
200121e2:	04d40123          	sb	a3,66(s0)
200121e6:	a869                	j	20012280 <_printf_i+0xe8>
200121e8:	06400793          	li	a5,100
200121ec:	00f68663          	beq	a3,a5,200121f8 <_printf_i+0x60>
200121f0:	06900793          	li	a5,105
200121f4:	fef695e3          	bne	a3,a5,200121de <_printf_i+0x46>
200121f8:	401c                	lw	a5,0(s0)
200121fa:	4308                	lw	a0,0(a4)
200121fc:	0807f693          	andi	a3,a5,128
20012200:	00450593          	addi	a1,a0,4
20012204:	c2c1                	beqz	a3,20012284 <_printf_i+0xec>
20012206:	411c                	lw	a5,0(a0)
20012208:	c30c                	sw	a1,0(a4)
2001220a:	0007d863          	bgez	a5,2001221a <_printf_i+0x82>
2001220e:	02d00713          	li	a4,45
20012212:	40f007b3          	neg	a5,a5
20012216:	04e401a3          	sb	a4,67(s0)
2001221a:	ffffe697          	auipc	a3,0xffffe
2001221e:	26668693          	addi	a3,a3,614 # 20010480 <__sf_fake_stdout+0x34>
20012222:	4729                	li	a4,10
20012224:	a065                	j	200122cc <_printf_i+0x134>
20012226:	07300793          	li	a5,115
2001222a:	1af68263          	beq	a3,a5,200123ce <_printf_i+0x236>
2001222e:	00d7ef63          	bltu	a5,a3,2001224c <_printf_i+0xb4>
20012232:	06f00793          	li	a5,111
20012236:	04f68f63          	beq	a3,a5,20012294 <_printf_i+0xfc>
2001223a:	07000793          	li	a5,112
2001223e:	faf690e3          	bne	a3,a5,200121de <_printf_i+0x46>
20012242:	419c                	lw	a5,0(a1)
20012244:	0207e793          	ori	a5,a5,32
20012248:	c19c                	sw	a5,0(a1)
2001224a:	a809                	j	2001225c <_printf_i+0xc4>
2001224c:	07500793          	li	a5,117
20012250:	04f68263          	beq	a3,a5,20012294 <_printf_i+0xfc>
20012254:	07800793          	li	a5,120
20012258:	f8f693e3          	bne	a3,a5,200121de <_printf_i+0x46>
2001225c:	07800793          	li	a5,120
20012260:	04f402a3          	sb	a5,69(s0)
20012264:	ffffe697          	auipc	a3,0xffffe
20012268:	23068693          	addi	a3,a3,560 # 20010494 <__sf_fake_stdout+0x48>
2001226c:	a0dd                	j	20012352 <_printf_i+0x1ba>
2001226e:	431c                	lw	a5,0(a4)
20012270:	04258a93          	addi	s5,a1,66
20012274:	00478693          	addi	a3,a5,4
20012278:	439c                	lw	a5,0(a5)
2001227a:	c314                	sw	a3,0(a4)
2001227c:	04f58123          	sb	a5,66(a1)
20012280:	4785                	li	a5,1
20012282:	a2ad                	j	200123ec <_printf_i+0x254>
20012284:	0407f693          	andi	a3,a5,64
20012288:	411c                	lw	a5,0(a0)
2001228a:	c30c                	sw	a1,0(a4)
2001228c:	debd                	beqz	a3,2001220a <_printf_i+0x72>
2001228e:	07c2                	slli	a5,a5,0x10
20012290:	87c1                	srai	a5,a5,0x10
20012292:	bfa5                	j	2001220a <_printf_i+0x72>
20012294:	400c                	lw	a1,0(s0)
20012296:	431c                	lw	a5,0(a4)
20012298:	0805f813          	andi	a6,a1,128
2001229c:	00478513          	addi	a0,a5,4
200122a0:	00080563          	beqz	a6,200122aa <_printf_i+0x112>
200122a4:	c308                	sw	a0,0(a4)
200122a6:	439c                	lw	a5,0(a5)
200122a8:	a039                	j	200122b6 <_printf_i+0x11e>
200122aa:	0405f593          	andi	a1,a1,64
200122ae:	c308                	sw	a0,0(a4)
200122b0:	d9fd                	beqz	a1,200122a6 <_printf_i+0x10e>
200122b2:	0007d783          	lhu	a5,0(a5)
200122b6:	06f00713          	li	a4,111
200122ba:	0ce68a63          	beq	a3,a4,2001238e <_printf_i+0x1f6>
200122be:	ffffe697          	auipc	a3,0xffffe
200122c2:	1c268693          	addi	a3,a3,450 # 20010480 <__sf_fake_stdout+0x34>
200122c6:	4729                	li	a4,10
200122c8:	040401a3          	sb	zero,67(s0)
200122cc:	404c                	lw	a1,4(s0)
200122ce:	c40c                	sw	a1,8(s0)
200122d0:	0005c563          	bltz	a1,200122da <_printf_i+0x142>
200122d4:	4008                	lw	a0,0(s0)
200122d6:	996d                	andi	a0,a0,-5
200122d8:	c008                	sw	a0,0(s0)
200122da:	e399                	bnez	a5,200122e0 <_printf_i+0x148>
200122dc:	8ab2                	mv	s5,a2
200122de:	cd91                	beqz	a1,200122fa <_printf_i+0x162>
200122e0:	8ab2                	mv	s5,a2
200122e2:	02e7f5b3          	remu	a1,a5,a4
200122e6:	1afd                	addi	s5,s5,-1
200122e8:	95b6                	add	a1,a1,a3
200122ea:	0005c583          	lbu	a1,0(a1)
200122ee:	00ba8023          	sb	a1,0(s5)
200122f2:	02e7d5b3          	divu	a1,a5,a4
200122f6:	0ae7f263          	bgeu	a5,a4,2001239a <_printf_i+0x202>
200122fa:	47a1                	li	a5,8
200122fc:	00f71e63          	bne	a4,a5,20012318 <_printf_i+0x180>
20012300:	401c                	lw	a5,0(s0)
20012302:	8b85                	andi	a5,a5,1
20012304:	cb91                	beqz	a5,20012318 <_printf_i+0x180>
20012306:	4058                	lw	a4,4(s0)
20012308:	481c                	lw	a5,16(s0)
2001230a:	00e7c763          	blt	a5,a4,20012318 <_printf_i+0x180>
2001230e:	03000793          	li	a5,48
20012312:	fefa8fa3          	sb	a5,-1(s5)
20012316:	1afd                	addi	s5,s5,-1
20012318:	41560633          	sub	a2,a2,s5
2001231c:	c810                	sw	a2,16(s0)
2001231e:	874e                	mv	a4,s3
20012320:	86ca                	mv	a3,s2
20012322:	0070                	addi	a2,sp,12
20012324:	85a2                	mv	a1,s0
20012326:	8526                	mv	a0,s1
20012328:	3395                	jal	2001208c <_printf_common>
2001232a:	5a7d                	li	s4,-1
2001232c:	0d451463          	bne	a0,s4,200123f4 <_printf_i+0x25c>
20012330:	557d                	li	a0,-1
20012332:	50b2                	lw	ra,44(sp)
20012334:	5422                	lw	s0,40(sp)
20012336:	5492                	lw	s1,36(sp)
20012338:	5902                	lw	s2,32(sp)
2001233a:	49f2                	lw	s3,28(sp)
2001233c:	4a62                	lw	s4,24(sp)
2001233e:	4ad2                	lw	s5,20(sp)
20012340:	4b42                	lw	s6,16(sp)
20012342:	6145                	addi	sp,sp,48
20012344:	8082                	ret
20012346:	04d582a3          	sb	a3,69(a1)
2001234a:	ffffe697          	auipc	a3,0xffffe
2001234e:	13668693          	addi	a3,a3,310 # 20010480 <__sf_fake_stdout+0x34>
20012352:	400c                	lw	a1,0(s0)
20012354:	4308                	lw	a0,0(a4)
20012356:	0805f813          	andi	a6,a1,128
2001235a:	411c                	lw	a5,0(a0)
2001235c:	0511                	addi	a0,a0,4
2001235e:	02080063          	beqz	a6,2001237e <_printf_i+0x1e6>
20012362:	c308                	sw	a0,0(a4)
20012364:	0015f713          	andi	a4,a1,1
20012368:	c701                	beqz	a4,20012370 <_printf_i+0x1d8>
2001236a:	0205e593          	ori	a1,a1,32
2001236e:	c00c                	sw	a1,0(s0)
20012370:	4741                	li	a4,16
20012372:	fbb9                	bnez	a5,200122c8 <_printf_i+0x130>
20012374:	400c                	lw	a1,0(s0)
20012376:	fdf5f593          	andi	a1,a1,-33
2001237a:	c00c                	sw	a1,0(s0)
2001237c:	b7b1                	j	200122c8 <_printf_i+0x130>
2001237e:	0405f813          	andi	a6,a1,64
20012382:	c308                	sw	a0,0(a4)
20012384:	fe0800e3          	beqz	a6,20012364 <_printf_i+0x1cc>
20012388:	07c2                	slli	a5,a5,0x10
2001238a:	83c1                	srli	a5,a5,0x10
2001238c:	bfe1                	j	20012364 <_printf_i+0x1cc>
2001238e:	ffffe697          	auipc	a3,0xffffe
20012392:	0f268693          	addi	a3,a3,242 # 20010480 <__sf_fake_stdout+0x34>
20012396:	4721                	li	a4,8
20012398:	bf05                	j	200122c8 <_printf_i+0x130>
2001239a:	87ae                	mv	a5,a1
2001239c:	b799                	j	200122e2 <_printf_i+0x14a>
2001239e:	4194                	lw	a3,0(a1)
200123a0:	431c                	lw	a5,0(a4)
200123a2:	49cc                	lw	a1,20(a1)
200123a4:	0806f813          	andi	a6,a3,128
200123a8:	00478513          	addi	a0,a5,4
200123ac:	00080663          	beqz	a6,200123b8 <_printf_i+0x220>
200123b0:	c308                	sw	a0,0(a4)
200123b2:	439c                	lw	a5,0(a5)
200123b4:	c38c                	sw	a1,0(a5)
200123b6:	a801                	j	200123c6 <_printf_i+0x22e>
200123b8:	c308                	sw	a0,0(a4)
200123ba:	0406f693          	andi	a3,a3,64
200123be:	439c                	lw	a5,0(a5)
200123c0:	daf5                	beqz	a3,200123b4 <_printf_i+0x21c>
200123c2:	00b79023          	sh	a1,0(a5)
200123c6:	00042823          	sw	zero,16(s0)
200123ca:	8ab2                	mv	s5,a2
200123cc:	bf89                	j	2001231e <_printf_i+0x186>
200123ce:	431c                	lw	a5,0(a4)
200123d0:	41d0                	lw	a2,4(a1)
200123d2:	4581                	li	a1,0
200123d4:	00478693          	addi	a3,a5,4
200123d8:	c314                	sw	a3,0(a4)
200123da:	0007aa83          	lw	s5,0(a5)
200123de:	8556                	mv	a0,s5
200123e0:	3179                	jal	2001206e <memchr>
200123e2:	c501                	beqz	a0,200123ea <_printf_i+0x252>
200123e4:	41550533          	sub	a0,a0,s5
200123e8:	c048                	sw	a0,4(s0)
200123ea:	405c                	lw	a5,4(s0)
200123ec:	c81c                	sw	a5,16(s0)
200123ee:	040401a3          	sb	zero,67(s0)
200123f2:	b735                	j	2001231e <_printf_i+0x186>
200123f4:	4814                	lw	a3,16(s0)
200123f6:	8656                	mv	a2,s5
200123f8:	85ca                	mv	a1,s2
200123fa:	8526                	mv	a0,s1
200123fc:	9982                	jalr	s3
200123fe:	f34509e3          	beq	a0,s4,20012330 <_printf_i+0x198>
20012402:	401c                	lw	a5,0(s0)
20012404:	8b89                	andi	a5,a5,2
20012406:	e78d                	bnez	a5,20012430 <_printf_i+0x298>
20012408:	47b2                	lw	a5,12(sp)
2001240a:	4448                	lw	a0,12(s0)
2001240c:	f2f553e3          	bge	a0,a5,20012332 <_printf_i+0x19a>
20012410:	853e                	mv	a0,a5
20012412:	b705                	j	20012332 <_printf_i+0x19a>
20012414:	4685                	li	a3,1
20012416:	8656                	mv	a2,s5
20012418:	85ca                	mv	a1,s2
2001241a:	8526                	mv	a0,s1
2001241c:	9982                	jalr	s3
2001241e:	f16509e3          	beq	a0,s6,20012330 <_printf_i+0x198>
20012422:	0a05                	addi	s4,s4,1
20012424:	445c                	lw	a5,12(s0)
20012426:	4732                	lw	a4,12(sp)
20012428:	8f99                	sub	a5,a5,a4
2001242a:	fefa45e3          	blt	s4,a5,20012414 <_printf_i+0x27c>
2001242e:	bfe9                	j	20012408 <_printf_i+0x270>
20012430:	4a01                	li	s4,0
20012432:	01940a93          	addi	s5,s0,25
20012436:	5b7d                	li	s6,-1
20012438:	b7f5                	j	20012424 <_printf_i+0x28c>

2001243a <_read_r>:
_read_r():
2001243a:	1141                	addi	sp,sp,-16
2001243c:	c422                	sw	s0,8(sp)
2001243e:	842a                	mv	s0,a0
20012440:	852e                	mv	a0,a1
20012442:	85b2                	mv	a1,a2
20012444:	8636                	mv	a2,a3
20012446:	8e01a823          	sw	zero,-1808(gp) # 80000bb0 <errno>
2001244a:	c606                	sw	ra,12(sp)
2001244c:	58a050ef          	jal	ra,200179d6 <_read>
20012450:	57fd                	li	a5,-1
20012452:	00f51763          	bne	a0,a5,20012460 <_read_r+0x26>
20012456:	8f018793          	addi	a5,gp,-1808 # 80000bb0 <errno>
2001245a:	439c                	lw	a5,0(a5)
2001245c:	c391                	beqz	a5,20012460 <_read_r+0x26>
2001245e:	c01c                	sw	a5,0(s0)
20012460:	40b2                	lw	ra,12(sp)
20012462:	4422                	lw	s0,8(sp)
20012464:	0141                	addi	sp,sp,16
20012466:	8082                	ret

20012468 <__metal_driver_sifive_clint0_control_base>:
__metal_driver_sifive_clint0_control_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:233
/* --------------------- fixed_factor_clock ------------ */


/* --------------------- sifive_clint0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_clint0_control_base(struct metal_interrupt *controller)
{
20012468:	1101                	addi	sp,sp,-32
2001246a:	ce22                	sw	s0,28(sp)
2001246c:	1000                	addi	s0,sp,32
2001246e:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:234
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20012472:	fec42703          	lw	a4,-20(s0)
20012476:	81018793          	addi	a5,gp,-2032 # 80000ad0 <__metal_dt_clint_2000000>
2001247a:	00f71563          	bne	a4,a5,20012484 <__metal_driver_sifive_clint0_control_base+0x1c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:235
		return METAL_RISCV_CLINT0_2000000_BASE_ADDRESS;
2001247e:	020007b7          	lui	a5,0x2000
20012482:	a011                	j	20012486 <__metal_driver_sifive_clint0_control_base+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:238
	}
	else {
		return 0;
20012484:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:240
	}
}
20012486:	853e                	mv	a0,a5
20012488:	4472                	lw	s0,28(sp)
2001248a:	6105                	addi	sp,sp,32
2001248c:	8082                	ret

2001248e <__metal_driver_sifive_clint0_num_interrupts>:
__metal_driver_sifive_clint0_num_interrupts():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:253
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_clint0_num_interrupts(struct metal_interrupt *controller)
{
2001248e:	1101                	addi	sp,sp,-32
20012490:	ce22                	sw	s0,28(sp)
20012492:	1000                	addi	s0,sp,32
20012494:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:254
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20012498:	fec42703          	lw	a4,-20(s0)
2001249c:	81018793          	addi	a5,gp,-2032 # 80000ad0 <__metal_dt_clint_2000000>
200124a0:	00f71463          	bne	a4,a5,200124a8 <__metal_driver_sifive_clint0_num_interrupts+0x1a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:255
		return METAL_MAX_CLINT_INTERRUPTS;
200124a4:	4789                	li	a5,2
200124a6:	a011                	j	200124aa <__metal_driver_sifive_clint0_num_interrupts+0x1c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:258
	}
	else {
		return 0;
200124a8:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:260
	}
}
200124aa:	853e                	mv	a0,a5
200124ac:	4472                	lw	s0,28(sp)
200124ae:	6105                	addi	sp,sp,32
200124b0:	8082                	ret

200124b2 <__metal_driver_sifive_clint0_interrupt_parents>:
__metal_driver_sifive_clint0_interrupt_parents():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:263

static __inline__ struct metal_interrupt * __metal_driver_sifive_clint0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
200124b2:	1101                	addi	sp,sp,-32
200124b4:	ce22                	sw	s0,28(sp)
200124b6:	1000                	addi	s0,sp,32
200124b8:	fea42623          	sw	a0,-20(s0)
200124bc:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:264
	if (idx == 0) {
200124c0:	fe842783          	lw	a5,-24(s0)
200124c4:	e791                	bnez	a5,200124d0 <__metal_driver_sifive_clint0_interrupt_parents+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:265
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
200124c6:	800007b7          	lui	a5,0x80000
200124ca:	09078793          	addi	a5,a5,144 # 80000090 <metal_segment_heap_target_end+0xffffe8d0>
200124ce:	a821                	j	200124e6 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:267
	}
	else if (idx == 1) {
200124d0:	fe842703          	lw	a4,-24(s0)
200124d4:	4785                	li	a5,1
200124d6:	00f71763          	bne	a4,a5,200124e4 <__metal_driver_sifive_clint0_interrupt_parents+0x32>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:268
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
200124da:	800007b7          	lui	a5,0x80000
200124de:	09078793          	addi	a5,a5,144 # 80000090 <metal_segment_heap_target_end+0xffffe8d0>
200124e2:	a011                	j	200124e6 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:271
	}
	else {
		return NULL;
200124e4:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:273
	}
}
200124e6:	853e                	mv	a0,a5
200124e8:	4472                	lw	s0,28(sp)
200124ea:	6105                	addi	sp,sp,32
200124ec:	8082                	ret

200124ee <__metal_driver_sifive_clint0_interrupt_lines>:
__metal_driver_sifive_clint0_interrupt_lines():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:276

static __inline__ int __metal_driver_sifive_clint0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
200124ee:	1101                	addi	sp,sp,-32
200124f0:	ce22                	sw	s0,28(sp)
200124f2:	1000                	addi	s0,sp,32
200124f4:	fea42623          	sw	a0,-20(s0)
200124f8:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:277
	if (idx == 0) {
200124fc:	fe842783          	lw	a5,-24(s0)
20012500:	e399                	bnez	a5,20012506 <__metal_driver_sifive_clint0_interrupt_lines+0x18>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:278
		return 3;
20012502:	478d                	li	a5,3
20012504:	a809                	j	20012516 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:280
	}
	else if (idx == 1) {
20012506:	fe842703          	lw	a4,-24(s0)
2001250a:	4785                	li	a5,1
2001250c:	00f71463          	bne	a4,a5,20012514 <__metal_driver_sifive_clint0_interrupt_lines+0x26>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:281
		return 7;
20012510:	479d                	li	a5,7
20012512:	a011                	j	20012516 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:284
	}
	else {
		return 0;
20012514:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:286
	}
}
20012516:	853e                	mv	a0,a5
20012518:	4472                	lw	s0,28(sp)
2001251a:	6105                	addi	sp,sp,32
2001251c:	8082                	ret

2001251e <__metal_clint0_mtime_get>:
__metal_clint0_mtime_get():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:14
#include <metal/drivers/riscv_clint0.h>
#include <metal/io.h>
#include <metal/machine.h>

unsigned long long
__metal_clint0_mtime_get(struct __metal_driver_riscv_clint0 *clint) {
2001251e:	715d                	addi	sp,sp,-80
20012520:	c686                	sw	ra,76(sp)
20012522:	c4a2                	sw	s0,72(sp)
20012524:	c2ca                	sw	s2,68(sp)
20012526:	c0ce                	sw	s3,64(sp)
20012528:	de52                	sw	s4,60(sp)
2001252a:	dc56                	sw	s5,56(sp)
2001252c:	da5a                	sw	s6,52(sp)
2001252e:	d85e                	sw	s7,48(sp)
20012530:	d662                	sw	s8,44(sp)
20012532:	d466                	sw	s9,40(sp)
20012534:	0880                	addi	s0,sp,80
20012536:	faa42e23          	sw	a0,-68(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:17
    __metal_io_u32 lo, hi;
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
2001253a:	fbc42783          	lw	a5,-68(s0)
2001253e:	853e                	mv	a0,a5
20012540:	3725                	jal	20012468 <__metal_driver_sifive_clint0_control_base>
20012542:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:21 (discriminator 1)

    /* Guard against rollover when reading */
    do {
        hi = __METAL_ACCESS_ONCE(
20012546:	fcc42703          	lw	a4,-52(s0)
2001254a:	67b1                	lui	a5,0xc
2001254c:	17f1                	addi	a5,a5,-4
2001254e:	97ba                	add	a5,a5,a4
20012550:	439c                	lw	a5,0(a5)
20012552:	fcf42423          	sw	a5,-56(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:23 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4));
        lo = __METAL_ACCESS_ONCE(
20012556:	fcc42703          	lw	a4,-52(s0)
2001255a:	67b1                	lui	a5,0xc
2001255c:	17e1                	addi	a5,a5,-8
2001255e:	97ba                	add	a5,a5,a4
20012560:	439c                	lw	a5,0(a5)
20012562:	fcf42223          	sw	a5,-60(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:25 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME));
    } while (__METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20012566:	fcc42703          	lw	a4,-52(s0)
2001256a:	67b1                	lui	a5,0xc
2001256c:	17f1                	addi	a5,a5,-4
2001256e:	97ba                	add	a5,a5,a4
20012570:	439c                	lw	a5,0(a5)
20012572:	fc842703          	lw	a4,-56(s0)
20012576:	fcf718e3          	bne	a4,a5,20012546 <__metal_clint0_mtime_get+0x28>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:29
                                                    METAL_RISCV_CLINT0_MTIME +
                                                    4)) != hi);

    return (((unsigned long long)hi) << 32) | lo;
2001257a:	fc842783          	lw	a5,-56(s0)
2001257e:	8c3e                	mv	s8,a5
20012580:	4c81                	li	s9,0
20012582:	000c1993          	slli	s3,s8,0x0
20012586:	4901                	li	s2,0
20012588:	fc442783          	lw	a5,-60(s0)
2001258c:	8a3e                	mv	s4,a5
2001258e:	4a81                	li	s5,0
20012590:	01496b33          	or	s6,s2,s4
20012594:	0159ebb3          	or	s7,s3,s5
20012598:	87da                	mv	a5,s6
2001259a:	885e                	mv	a6,s7
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:30
}
2001259c:	853e                	mv	a0,a5
2001259e:	85c2                	mv	a1,a6
200125a0:	40b6                	lw	ra,76(sp)
200125a2:	4426                	lw	s0,72(sp)
200125a4:	4916                	lw	s2,68(sp)
200125a6:	4986                	lw	s3,64(sp)
200125a8:	5a72                	lw	s4,60(sp)
200125aa:	5ae2                	lw	s5,56(sp)
200125ac:	5b52                	lw	s6,52(sp)
200125ae:	5bc2                	lw	s7,48(sp)
200125b0:	5c32                	lw	s8,44(sp)
200125b2:	5ca2                	lw	s9,40(sp)
200125b4:	6161                	addi	sp,sp,80
200125b6:	8082                	ret

200125b8 <__metal_driver_riscv_clint0_mtimecmp_set>:
__metal_driver_riscv_clint0_mtimecmp_set():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:34

int __metal_driver_riscv_clint0_mtimecmp_set(struct metal_interrupt *controller,
                                             int hartid,
                                             unsigned long long time) {
200125b8:	7179                	addi	sp,sp,-48
200125ba:	d606                	sw	ra,44(sp)
200125bc:	d422                	sw	s0,40(sp)
200125be:	d24a                	sw	s2,36(sp)
200125c0:	d04e                	sw	s3,32(sp)
200125c2:	1800                	addi	s0,sp,48
200125c4:	fca42e23          	sw	a0,-36(s0)
200125c8:	fcb42c23          	sw	a1,-40(s0)
200125cc:	fcc42823          	sw	a2,-48(s0)
200125d0:	fcd42a23          	sw	a3,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:35
    struct __metal_driver_riscv_clint0 *clint =
200125d4:	fdc42783          	lw	a5,-36(s0)
200125d8:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:38
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
200125dc:	fec42783          	lw	a5,-20(s0)
200125e0:	853e                	mv	a0,a5
200125e2:	3559                	jal	20012468 <__metal_driver_sifive_clint0_control_base>
200125e4:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:45
     * and are NOT internally latched for multiword transfers.
     * Need to be careful about sequencing to avoid triggering
     * spurious interrupts: For that set the high word to a max
     * value first.
     */
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
200125e8:	fd842783          	lw	a5,-40(s0)
200125ec:	078e                	slli	a5,a5,0x3
200125ee:	873e                	mv	a4,a5
200125f0:	fe842783          	lw	a5,-24(s0)
200125f4:	973e                	add	a4,a4,a5
200125f6:	6791                	lui	a5,0x4
200125f8:	0791                	addi	a5,a5,4
200125fa:	97ba                	add	a5,a5,a4
200125fc:	873e                	mv	a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:47
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = 0xFFFFFFFF;
200125fe:	57fd                	li	a5,-1
20012600:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:48
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
20012602:	fd842783          	lw	a5,-40(s0)
20012606:	078e                	slli	a5,a5,0x3
20012608:	873e                	mv	a4,a5
2001260a:	fe842783          	lw	a5,-24(s0)
2001260e:	973e                	add	a4,a4,a5
20012610:	6791                	lui	a5,0x4
20012612:	97ba                	add	a5,a5,a4
20012614:	873e                	mv	a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:50
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
        (__metal_io_u32)time;
20012616:	fd042783          	lw	a5,-48(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:49
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
2001261a:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:53
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = (__metal_io_u32)(time >> 32);
2001261c:	fd442783          	lw	a5,-44(s0)
20012620:	0007d913          	srli	s2,a5,0x0
20012624:	4981                	li	s3,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:51
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
20012626:	fd842783          	lw	a5,-40(s0)
2001262a:	078e                	slli	a5,a5,0x3
2001262c:	873e                	mv	a4,a5
2001262e:	fe842783          	lw	a5,-24(s0)
20012632:	973e                	add	a4,a4,a5
20012634:	6791                	lui	a5,0x4
20012636:	0791                	addi	a5,a5,4
20012638:	97ba                	add	a5,a5,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:53
                                           4)) = (__metal_io_u32)(time >> 32);
2001263a:	874a                	mv	a4,s2
2001263c:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:54
    return 0;
2001263e:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:55
}
20012640:	853e                	mv	a0,a5
20012642:	50b2                	lw	ra,44(sp)
20012644:	5422                	lw	s0,40(sp)
20012646:	5912                	lw	s2,36(sp)
20012648:	5982                	lw	s3,32(sp)
2001264a:	6145                	addi	sp,sp,48
2001264c:	8082                	ret

2001264e <_get_cpu_intc>:
_get_cpu_intc():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:57

static struct metal_interrupt *_get_cpu_intc() {
2001264e:	1101                	addi	sp,sp,-32
20012650:	ce06                	sw	ra,28(sp)
20012652:	cc22                	sw	s0,24(sp)
20012654:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:58
    int hartid = 0;
20012656:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:59
    __asm__ volatile("csrr %[hartid], mhartid"
2001265a:	f14027f3          	csrr	a5,mhartid
2001265e:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:62
                     : [hartid] "=r"(hartid)::"memory");

    struct metal_cpu *cpu = metal_cpu_get(hartid);
20012662:	fec42783          	lw	a5,-20(s0)
20012666:	853e                	mv	a0,a5
20012668:	5d7040ef          	jal	ra,2001743e <metal_cpu_get>
2001266c:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:64

    return metal_cpu_interrupt_controller(cpu);
20012670:	fe842503          	lw	a0,-24(s0)
20012674:	5a5040ef          	jal	ra,20017418 <metal_cpu_interrupt_controller>
20012678:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:65
}
2001267a:	853e                	mv	a0,a5
2001267c:	40f2                	lw	ra,28(sp)
2001267e:	4462                	lw	s0,24(sp)
20012680:	6105                	addi	sp,sp,32
20012682:	8082                	ret

20012684 <__metal_driver_riscv_clint0_init>:
__metal_driver_riscv_clint0_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:67

void __metal_driver_riscv_clint0_init(struct metal_interrupt *controller) {
20012684:	7139                	addi	sp,sp,-64
20012686:	de06                	sw	ra,60(sp)
20012688:	dc22                	sw	s0,56(sp)
2001268a:	0080                	addi	s0,sp,64
2001268c:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:69
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
20012690:	fcc42503          	lw	a0,-52(s0)
20012694:	3bed                	jal	2001248e <__metal_driver_sifive_clint0_num_interrupts>
20012696:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:70
    struct __metal_driver_riscv_clint0 *clint =
2001269a:	fcc42783          	lw	a5,-52(s0)
2001269e:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:73
        (struct __metal_driver_riscv_clint0 *)(controller);

    if (!clint->init_done) {
200126a2:	fe442783          	lw	a5,-28(s0)
200126a6:	43dc                	lw	a5,4(a5)
200126a8:	efa9                	bnez	a5,20012702 <__metal_driver_riscv_clint0_init+0x7e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:76
        /* Register its interrupts with with parent controller, aka sw and
         * timerto its default isr */
        for (int i = 0; i < num_interrupts; i++) {
200126aa:	fe042623          	sw	zero,-20(s0)
200126ae:	a081                	j	200126ee <__metal_driver_riscv_clint0_init+0x6a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:78 (discriminator 3)
            struct metal_interrupt *intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
200126b0:	fec42583          	lw	a1,-20(s0)
200126b4:	fcc42503          	lw	a0,-52(s0)
200126b8:	3bed                	jal	200124b2 <__metal_driver_sifive_clint0_interrupt_parents>
200126ba:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:80 (discriminator 3)
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
200126be:	fec42583          	lw	a1,-20(s0)
200126c2:	fcc42503          	lw	a0,-52(s0)
200126c6:	3525                	jal	200124ee <__metal_driver_sifive_clint0_interrupt_lines>
200126c8:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:81 (discriminator 3)
            intc->vtable->interrupt_register(intc, line, NULL, controller);
200126cc:	fe042783          	lw	a5,-32(s0)
200126d0:	439c                	lw	a5,0(a5)
200126d2:	4fdc                	lw	a5,28(a5)
200126d4:	fcc42683          	lw	a3,-52(s0)
200126d8:	4601                	li	a2,0
200126da:	fdc42583          	lw	a1,-36(s0)
200126de:	fe042503          	lw	a0,-32(s0)
200126e2:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 3)
        for (int i = 0; i < num_interrupts; i++) {
200126e4:	fec42783          	lw	a5,-20(s0)
200126e8:	0785                	addi	a5,a5,1
200126ea:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 1)
200126ee:	fec42703          	lw	a4,-20(s0)
200126f2:	fe842783          	lw	a5,-24(s0)
200126f6:	faf74de3          	blt	a4,a5,200126b0 <__metal_driver_riscv_clint0_init+0x2c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:83
        }
        clint->init_done = 1;
200126fa:	fe442783          	lw	a5,-28(s0)
200126fe:	4705                	li	a4,1
20012700:	c3d8                	sw	a4,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:85
    }
}
20012702:	0001                	nop
20012704:	50f2                	lw	ra,60(sp)
20012706:	5462                	lw	s0,56(sp)
20012708:	6121                	addi	sp,sp,64
2001270a:	8082                	ret

2001270c <__metal_driver_riscv_clint0_register>:
__metal_driver_riscv_clint0_register():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:89

int __metal_driver_riscv_clint0_register(struct metal_interrupt *controller,
                                         int id, metal_interrupt_handler_t isr,
                                         void *priv) {
2001270c:	7139                	addi	sp,sp,-64
2001270e:	de06                	sw	ra,60(sp)
20012710:	dc22                	sw	s0,56(sp)
20012712:	0080                	addi	s0,sp,64
20012714:	fca42623          	sw	a0,-52(s0)
20012718:	fcb42423          	sw	a1,-56(s0)
2001271c:	fcc42223          	sw	a2,-60(s0)
20012720:	fcd42023          	sw	a3,-64(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:90
    int rc = -1;
20012724:	57fd                	li	a5,-1
20012726:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:91
    metal_vector_mode mode = __metal_controller_interrupt_vector_mode();
2001272a:	42c010ef          	jal	ra,20013b56 <__metal_controller_interrupt_vector_mode>
2001272e:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:92
    struct metal_interrupt *intc = NULL;
20012732:	fe042423          	sw	zero,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:93
    struct metal_interrupt *cpu_intc = _get_cpu_intc();
20012736:	3f21                	jal	2001264e <_get_cpu_intc>
20012738:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:95
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
2001273c:	fcc42503          	lw	a0,-52(s0)
20012740:	33b9                	jal	2001248e <__metal_driver_sifive_clint0_num_interrupts>
20012742:	fca42c23          	sw	a0,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:97

    if ((mode != METAL_VECTOR_MODE) && (mode != METAL_DIRECT_MODE)) {
20012746:	fe042703          	lw	a4,-32(s0)
2001274a:	4785                	li	a5,1
2001274c:	00f70863          	beq	a4,a5,2001275c <__metal_driver_riscv_clint0_register+0x50>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:97 (discriminator 1)
20012750:	fe042783          	lw	a5,-32(s0)
20012754:	c781                	beqz	a5,2001275c <__metal_driver_riscv_clint0_register+0x50>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:98
        return rc;
20012756:	fec42783          	lw	a5,-20(s0)
2001275a:	a049                	j	200127dc <__metal_driver_riscv_clint0_register+0xd0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:101
    }

    for (int i = 0; i < num_interrupts; i++) {
2001275c:	fe042223          	sw	zero,-28(s0)
20012760:	a091                	j	200127a4 <__metal_driver_riscv_clint0_register+0x98>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:102
        int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20012762:	fe442583          	lw	a1,-28(s0)
20012766:	fcc42503          	lw	a0,-52(s0)
2001276a:	3351                	jal	200124ee <__metal_driver_sifive_clint0_interrupt_lines>
2001276c:	fca42a23          	sw	a0,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:103
        intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20012770:	fe442583          	lw	a1,-28(s0)
20012774:	fcc42503          	lw	a0,-52(s0)
20012778:	3b2d                	jal	200124b2 <__metal_driver_sifive_clint0_interrupt_parents>
2001277a:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:104
        if (cpu_intc == intc && id == line) {
2001277e:	fdc42703          	lw	a4,-36(s0)
20012782:	fe842783          	lw	a5,-24(s0)
20012786:	00f71863          	bne	a4,a5,20012796 <__metal_driver_riscv_clint0_register+0x8a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:104 (discriminator 1)
2001278a:	fc842703          	lw	a4,-56(s0)
2001278e:	fd442783          	lw	a5,-44(s0)
20012792:	02f70063          	beq	a4,a5,200127b2 <__metal_driver_riscv_clint0_register+0xa6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:107 (discriminator 2)
            break;
        }
        intc = NULL;
20012796:	fe042423          	sw	zero,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 2)
    for (int i = 0; i < num_interrupts; i++) {
2001279a:	fe442783          	lw	a5,-28(s0)
2001279e:	0785                	addi	a5,a5,1
200127a0:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 1)
200127a4:	fe442703          	lw	a4,-28(s0)
200127a8:	fd842783          	lw	a5,-40(s0)
200127ac:	faf74be3          	blt	a4,a5,20012762 <__metal_driver_riscv_clint0_register+0x56>
200127b0:	a011                	j	200127b4 <__metal_driver_riscv_clint0_register+0xa8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:105
            break;
200127b2:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:111
    }

    /* Register its interrupts with parent controller */
    if (intc) {
200127b4:	fe842783          	lw	a5,-24(s0)
200127b8:	c385                	beqz	a5,200127d8 <__metal_driver_riscv_clint0_register+0xcc>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:112
        rc = intc->vtable->interrupt_register(intc, id, isr, priv);
200127ba:	fe842783          	lw	a5,-24(s0)
200127be:	439c                	lw	a5,0(a5)
200127c0:	4fdc                	lw	a5,28(a5)
200127c2:	fc042683          	lw	a3,-64(s0)
200127c6:	fc442603          	lw	a2,-60(s0)
200127ca:	fc842583          	lw	a1,-56(s0)
200127ce:	fe842503          	lw	a0,-24(s0)
200127d2:	9782                	jalr	a5
200127d4:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:114
    }
    return rc;
200127d8:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:115
}
200127dc:	853e                	mv	a0,a5
200127de:	50f2                	lw	ra,60(sp)
200127e0:	5462                	lw	s0,56(sp)
200127e2:	6121                	addi	sp,sp,64
200127e4:	8082                	ret

200127e6 <__metal_driver_riscv_clint0_vector_register>:
__metal_driver_riscv_clint0_vector_register():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:119

int __metal_driver_riscv_clint0_vector_register(
    struct metal_interrupt *controller, int id,
    metal_interrupt_vector_handler_t isr, void *priv) {
200127e6:	7179                	addi	sp,sp,-48
200127e8:	d622                	sw	s0,44(sp)
200127ea:	1800                	addi	s0,sp,48
200127ec:	fca42e23          	sw	a0,-36(s0)
200127f0:	fcb42c23          	sw	a1,-40(s0)
200127f4:	fcc42a23          	sw	a2,-44(s0)
200127f8:	fcd42823          	sw	a3,-48(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:121
    /* Not supported. User can override the 'weak' handler with their own */
    int rc = -1;
200127fc:	57fd                	li	a5,-1
200127fe:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:122
    return rc;
20012802:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:123
}
20012806:	853e                	mv	a0,a5
20012808:	5432                	lw	s0,44(sp)
2001280a:	6145                	addi	sp,sp,48
2001280c:	8082                	ret

2001280e <__metal_driver_riscv_clint0_get_vector_mode>:
__metal_driver_riscv_clint0_get_vector_mode():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:126

metal_vector_mode __metal_driver_riscv_clint0_get_vector_mode(
    struct metal_interrupt *controller) {
2001280e:	1101                	addi	sp,sp,-32
20012810:	ce06                	sw	ra,28(sp)
20012812:	cc22                	sw	s0,24(sp)
20012814:	1000                	addi	s0,sp,32
20012816:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:127
    return __metal_controller_interrupt_vector_mode();
2001281a:	33c010ef          	jal	ra,20013b56 <__metal_controller_interrupt_vector_mode>
2001281e:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:128
}
20012820:	853e                	mv	a0,a5
20012822:	40f2                	lw	ra,28(sp)
20012824:	4462                	lw	s0,24(sp)
20012826:	6105                	addi	sp,sp,32
20012828:	8082                	ret

2001282a <__metal_driver_riscv_clint0_set_vector_mode>:
__metal_driver_riscv_clint0_set_vector_mode():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:131

int __metal_driver_riscv_clint0_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
2001282a:	7179                	addi	sp,sp,-48
2001282c:	d606                	sw	ra,44(sp)
2001282e:	d422                	sw	s0,40(sp)
20012830:	1800                	addi	s0,sp,48
20012832:	fca42e23          	sw	a0,-36(s0)
20012836:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:132
    int rc = -1;
2001283a:	57fd                	li	a5,-1
2001283c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:133
    struct metal_interrupt *intc = _get_cpu_intc();
20012840:	3539                	jal	2001264e <_get_cpu_intc>
20012842:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:135

    if (intc) {
20012846:	fe842783          	lw	a5,-24(s0)
2001284a:	c395                	beqz	a5,2001286e <__metal_driver_riscv_clint0_set_vector_mode+0x44>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:138
        /* Valid vector modes are VECTOR and DIRECT, anything else is invalid
         * (-1) */
        switch (mode) {
2001284c:	fd842703          	lw	a4,-40(s0)
20012850:	4785                	li	a5,1
20012852:	02e7e063          	bltu	a5,a4,20012872 <__metal_driver_riscv_clint0_set_vector_mode+0x48>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:141
        case METAL_VECTOR_MODE:
        case METAL_DIRECT_MODE:
            rc = intc->vtable->interrupt_set_vector_mode(intc, mode);
20012856:	fe842783          	lw	a5,-24(s0)
2001285a:	439c                	lw	a5,0(a5)
2001285c:	43dc                	lw	a5,4(a5)
2001285e:	fd842583          	lw	a1,-40(s0)
20012862:	fe842503          	lw	a0,-24(s0)
20012866:	9782                	jalr	a5
20012868:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:142
            break;
2001286c:	a021                	j	20012874 <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:146
        default:
            break;
        }
    }
2001286e:	0001                	nop
20012870:	a011                	j	20012874 <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:144
            break;
20012872:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:147
    return rc;
20012874:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:148
}
20012878:	853e                	mv	a0,a5
2001287a:	50b2                	lw	ra,44(sp)
2001287c:	5422                	lw	s0,40(sp)
2001287e:	6145                	addi	sp,sp,48
20012880:	8082                	ret

20012882 <__metal_driver_riscv_clint0_enable>:
__metal_driver_riscv_clint0_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:151

int __metal_driver_riscv_clint0_enable(struct metal_interrupt *controller,
                                       int id) {
20012882:	7139                	addi	sp,sp,-64
20012884:	de06                	sw	ra,60(sp)
20012886:	dc22                	sw	s0,56(sp)
20012888:	0080                	addi	s0,sp,64
2001288a:	fca42623          	sw	a0,-52(s0)
2001288e:	fcb42423          	sw	a1,-56(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:152
    int rc = -1;
20012892:	57fd                	li	a5,-1
20012894:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:154

    if (id) {
20012898:	fc842783          	lw	a5,-56(s0)
2001289c:	c7c9                	beqz	a5,20012926 <__metal_driver_riscv_clint0_enable+0xa4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:155
        struct metal_interrupt *intc = NULL;
2001289e:	fe042423          	sw	zero,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:156
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
200128a2:	3375                	jal	2001264e <_get_cpu_intc>
200128a4:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:158
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
200128a8:	fcc42503          	lw	a0,-52(s0)
200128ac:	36cd                	jal	2001248e <__metal_driver_sifive_clint0_num_interrupts>
200128ae:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:160

        for (int i = 0; i < num_interrupts; i++) {
200128b2:	fe042223          	sw	zero,-28(s0)
200128b6:	a091                	j	200128fa <__metal_driver_riscv_clint0_enable+0x78>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:162
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
200128b8:	fe442583          	lw	a1,-28(s0)
200128bc:	fcc42503          	lw	a0,-52(s0)
200128c0:	313d                	jal	200124ee <__metal_driver_sifive_clint0_interrupt_lines>
200128c2:	fca42c23          	sw	a0,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:164
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
200128c6:	fe442583          	lw	a1,-28(s0)
200128ca:	fcc42503          	lw	a0,-52(s0)
200128ce:	36d5                	jal	200124b2 <__metal_driver_sifive_clint0_interrupt_parents>
200128d0:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:165
            if (cpu_intc == intc && id == line) {
200128d4:	fe042703          	lw	a4,-32(s0)
200128d8:	fe842783          	lw	a5,-24(s0)
200128dc:	00f71863          	bne	a4,a5,200128ec <__metal_driver_riscv_clint0_enable+0x6a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:165 (discriminator 1)
200128e0:	fc842703          	lw	a4,-56(s0)
200128e4:	fd842783          	lw	a5,-40(s0)
200128e8:	02f70063          	beq	a4,a5,20012908 <__metal_driver_riscv_clint0_enable+0x86>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:168 (discriminator 2)
                break;
            }
            intc = NULL;
200128ec:	fe042423          	sw	zero,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
200128f0:	fe442783          	lw	a5,-28(s0)
200128f4:	0785                	addi	a5,a5,1
200128f6:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 1)
200128fa:	fe442703          	lw	a4,-28(s0)
200128fe:	fdc42783          	lw	a5,-36(s0)
20012902:	faf74be3          	blt	a4,a5,200128b8 <__metal_driver_riscv_clint0_enable+0x36>
20012906:	a011                	j	2001290a <__metal_driver_riscv_clint0_enable+0x88>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:166
                break;
20012908:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:172
        }

        /* Enable its interrupts with parent controller */
        if (intc) {
2001290a:	fe842783          	lw	a5,-24(s0)
2001290e:	cf81                	beqz	a5,20012926 <__metal_driver_riscv_clint0_enable+0xa4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:173
            rc = intc->vtable->interrupt_enable(intc, id);
20012910:	fe842783          	lw	a5,-24(s0)
20012914:	439c                	lw	a5,0(a5)
20012916:	53dc                	lw	a5,36(a5)
20012918:	fc842583          	lw	a1,-56(s0)
2001291c:	fe842503          	lw	a0,-24(s0)
20012920:	9782                	jalr	a5
20012922:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:177
        }
    }

    return rc;
20012926:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:178
}
2001292a:	853e                	mv	a0,a5
2001292c:	50f2                	lw	ra,60(sp)
2001292e:	5462                	lw	s0,56(sp)
20012930:	6121                	addi	sp,sp,64
20012932:	8082                	ret

20012934 <__metal_driver_riscv_clint0_disable>:
__metal_driver_riscv_clint0_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:181

int __metal_driver_riscv_clint0_disable(struct metal_interrupt *controller,
                                        int id) {
20012934:	7139                	addi	sp,sp,-64
20012936:	de06                	sw	ra,60(sp)
20012938:	dc22                	sw	s0,56(sp)
2001293a:	0080                	addi	s0,sp,64
2001293c:	fca42623          	sw	a0,-52(s0)
20012940:	fcb42423          	sw	a1,-56(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:182
    int rc = -1;
20012944:	57fd                	li	a5,-1
20012946:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:184

    if (id) {
2001294a:	fc842783          	lw	a5,-56(s0)
2001294e:	c7c9                	beqz	a5,200129d8 <__metal_driver_riscv_clint0_disable+0xa4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:185
        struct metal_interrupt *intc = NULL;
20012950:	fe042423          	sw	zero,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:186
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
20012954:	39ed                	jal	2001264e <_get_cpu_intc>
20012956:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:188
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
2001295a:	fcc42503          	lw	a0,-52(s0)
2001295e:	3e05                	jal	2001248e <__metal_driver_sifive_clint0_num_interrupts>
20012960:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:190

        for (int i = 0; i < num_interrupts; i++) {
20012964:	fe042223          	sw	zero,-28(s0)
20012968:	a091                	j	200129ac <__metal_driver_riscv_clint0_disable+0x78>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:192
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
2001296a:	fe442583          	lw	a1,-28(s0)
2001296e:	fcc42503          	lw	a0,-52(s0)
20012972:	3eb5                	jal	200124ee <__metal_driver_sifive_clint0_interrupt_lines>
20012974:	fca42c23          	sw	a0,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:194
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20012978:	fe442583          	lw	a1,-28(s0)
2001297c:	fcc42503          	lw	a0,-52(s0)
20012980:	3e0d                	jal	200124b2 <__metal_driver_sifive_clint0_interrupt_parents>
20012982:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:195
            if (cpu_intc == intc && id == line) {
20012986:	fe042703          	lw	a4,-32(s0)
2001298a:	fe842783          	lw	a5,-24(s0)
2001298e:	00f71863          	bne	a4,a5,2001299e <__metal_driver_riscv_clint0_disable+0x6a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:195 (discriminator 1)
20012992:	fc842703          	lw	a4,-56(s0)
20012996:	fd842783          	lw	a5,-40(s0)
2001299a:	02f70063          	beq	a4,a5,200129ba <__metal_driver_riscv_clint0_disable+0x86>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:198 (discriminator 2)
                break;
            }
            intc = NULL;
2001299e:	fe042423          	sw	zero,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
200129a2:	fe442783          	lw	a5,-28(s0)
200129a6:	0785                	addi	a5,a5,1
200129a8:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 1)
200129ac:	fe442703          	lw	a4,-28(s0)
200129b0:	fdc42783          	lw	a5,-36(s0)
200129b4:	faf74be3          	blt	a4,a5,2001296a <__metal_driver_riscv_clint0_disable+0x36>
200129b8:	a011                	j	200129bc <__metal_driver_riscv_clint0_disable+0x88>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:196
                break;
200129ba:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:202
        }

        /* Disable its interrupts with parent controller */
        if (intc) {
200129bc:	fe842783          	lw	a5,-24(s0)
200129c0:	cf81                	beqz	a5,200129d8 <__metal_driver_riscv_clint0_disable+0xa4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:203
            rc = intc->vtable->interrupt_disable(intc, id);
200129c2:	fe842783          	lw	a5,-24(s0)
200129c6:	439c                	lw	a5,0(a5)
200129c8:	579c                	lw	a5,40(a5)
200129ca:	fc842583          	lw	a1,-56(s0)
200129ce:	fe842503          	lw	a0,-24(s0)
200129d2:	9782                	jalr	a5
200129d4:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:207
        }
    }

    return rc;
200129d8:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:208
}
200129dc:	853e                	mv	a0,a5
200129de:	50f2                	lw	ra,60(sp)
200129e0:	5462                	lw	s0,56(sp)
200129e2:	6121                	addi	sp,sp,64
200129e4:	8082                	ret

200129e6 <__metal_driver_riscv_clint0_command_request>:
__metal_driver_riscv_clint0_command_request():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:211

int __metal_driver_riscv_clint0_command_request(
    struct metal_interrupt *controller, int command, void *data) {
200129e6:	7179                	addi	sp,sp,-48
200129e8:	d606                	sw	ra,44(sp)
200129ea:	d422                	sw	s0,40(sp)
200129ec:	1800                	addi	s0,sp,48
200129ee:	fca42e23          	sw	a0,-36(s0)
200129f2:	fcb42c23          	sw	a1,-40(s0)
200129f6:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:213
    int hartid;
    int rc = -1;
200129fa:	57fd                	li	a5,-1
200129fc:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:214
    struct __metal_driver_riscv_clint0 *clint =
20012a00:	fdc42783          	lw	a5,-36(s0)
20012a04:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:217
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(controller);
20012a08:	fdc42503          	lw	a0,-36(s0)
20012a0c:	3cb1                	jal	20012468 <__metal_driver_sifive_clint0_control_base>
20012a0e:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:219

    switch (command) {
20012a12:	fd842703          	lw	a4,-40(s0)
20012a16:	4789                	li	a5,2
20012a18:	04f70863          	beq	a4,a5,20012a68 <__metal_driver_riscv_clint0_command_request+0x82>
20012a1c:	fd842703          	lw	a4,-40(s0)
20012a20:	4789                	li	a5,2
20012a22:	00e7c863          	blt	a5,a4,20012a32 <__metal_driver_riscv_clint0_command_request+0x4c>
20012a26:	fd842703          	lw	a4,-40(s0)
20012a2a:	4785                	li	a5,1
20012a2c:	00f70e63          	beq	a4,a5,20012a48 <__metal_driver_riscv_clint0_command_request+0x62>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:263
            rc = __METAL_ACCESS_ONCE(
                (__metal_io_u32 *)(control_base + (hartid * 4)));
        }
        break;
    default:
        break;
20012a30:	a8e9                	j	20012b0a <__metal_driver_riscv_clint0_command_request+0x124>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:219
    switch (command) {
20012a32:	fd842703          	lw	a4,-40(s0)
20012a36:	478d                	li	a5,3
20012a38:	04f70c63          	beq	a4,a5,20012a90 <__metal_driver_riscv_clint0_command_request+0xaa>
20012a3c:	fd842703          	lw	a4,-40(s0)
20012a40:	4791                	li	a5,4
20012a42:	08f70863          	beq	a4,a5,20012ad2 <__metal_driver_riscv_clint0_command_request+0xec>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:263
        break;
20012a46:	a0d1                	j	20012b0a <__metal_driver_riscv_clint0_command_request+0x124>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:221
        if (data) {
20012a48:	fd442783          	lw	a5,-44(s0)
20012a4c:	cbc5                	beqz	a5,20012afc <__metal_driver_riscv_clint0_command_request+0x116>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:222
            *(unsigned long long *)data = __metal_clint0_mtime_get(clint);
20012a4e:	fe842503          	lw	a0,-24(s0)
20012a52:	34f1                	jal	2001251e <__metal_clint0_mtime_get>
20012a54:	87aa                	mv	a5,a0
20012a56:	882e                	mv	a6,a1
20012a58:	fd442703          	lw	a4,-44(s0)
20012a5c:	c31c                	sw	a5,0(a4)
20012a5e:	01072223          	sw	a6,4(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:223
            rc = 0;
20012a62:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
20012a66:	a859                	j	20012afc <__metal_driver_riscv_clint0_command_request+0x116>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:227
        if (data) {
20012a68:	fd442783          	lw	a5,-44(s0)
20012a6c:	cbd1                	beqz	a5,20012b00 <__metal_driver_riscv_clint0_command_request+0x11a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:228
            hartid = *(int *)data;
20012a6e:	fd442783          	lw	a5,-44(s0)
20012a72:	439c                	lw	a5,0(a5)
20012a74:	fef42023          	sw	a5,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:229
            __METAL_ACCESS_ONCE((
20012a78:	fe042783          	lw	a5,-32(s0)
20012a7c:	078a                	slli	a5,a5,0x2
20012a7e:	873e                	mv	a4,a5
20012a80:	fe442783          	lw	a5,-28(s0)
20012a84:	97ba                	add	a5,a5,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:230
                __metal_io_u32 *)(control_base + (hartid * 4))) = METAL_DISABLE;
20012a86:	0007a023          	sw	zero,0(a5) # 4000 <__heap_size+0x3800>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:231
            rc = 0;
20012a8a:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
20012a8e:	a88d                	j	20012b00 <__metal_driver_riscv_clint0_command_request+0x11a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:235
        if (data) {
20012a90:	fd442783          	lw	a5,-44(s0)
20012a94:	cba5                	beqz	a5,20012b04 <__metal_driver_riscv_clint0_command_request+0x11e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:236
            hartid = *(int *)data;
20012a96:	fd442783          	lw	a5,-44(s0)
20012a9a:	439c                	lw	a5,0(a5)
20012a9c:	fef42023          	sw	a5,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:237
            __METAL_ACCESS_ONCE(
20012aa0:	fe042783          	lw	a5,-32(s0)
20012aa4:	078a                	slli	a5,a5,0x2
20012aa6:	873e                	mv	a4,a5
20012aa8:	fe442783          	lw	a5,-28(s0)
20012aac:	97ba                	add	a5,a5,a4
20012aae:	873e                	mv	a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:238
                (__metal_io_u32 *)(control_base + (hartid * 4))) = METAL_ENABLE;
20012ab0:	4785                	li	a5,1
20012ab2:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:248
            __METAL_IO_FENCE(o, i);
20012ab4:	0480000f          	fence	o,i
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:249
            rc = __METAL_ACCESS_ONCE(
20012ab8:	fe042783          	lw	a5,-32(s0)
20012abc:	078a                	slli	a5,a5,0x2
20012abe:	873e                	mv	a4,a5
20012ac0:	fe442783          	lw	a5,-28(s0)
20012ac4:	97ba                	add	a5,a5,a4
20012ac6:	439c                	lw	a5,0(a5)
20012ac8:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:251
            rc = 0;
20012acc:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
20012ad0:	a815                	j	20012b04 <__metal_driver_riscv_clint0_command_request+0x11e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:255
        rc = 0;
20012ad2:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:256
        if (data) {
20012ad6:	fd442783          	lw	a5,-44(s0)
20012ada:	c79d                	beqz	a5,20012b08 <__metal_driver_riscv_clint0_command_request+0x122>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:257
            hartid = *(int *)data;
20012adc:	fd442783          	lw	a5,-44(s0)
20012ae0:	439c                	lw	a5,0(a5)
20012ae2:	fef42023          	sw	a5,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:258
            rc = __METAL_ACCESS_ONCE(
20012ae6:	fe042783          	lw	a5,-32(s0)
20012aea:	078a                	slli	a5,a5,0x2
20012aec:	873e                	mv	a4,a5
20012aee:	fe442783          	lw	a5,-28(s0)
20012af2:	97ba                	add	a5,a5,a4
20012af4:	439c                	lw	a5,0(a5)
20012af6:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
20012afa:	a039                	j	20012b08 <__metal_driver_riscv_clint0_command_request+0x122>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
20012afc:	0001                	nop
20012afe:	a031                	j	20012b0a <__metal_driver_riscv_clint0_command_request+0x124>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
20012b00:	0001                	nop
20012b02:	a021                	j	20012b0a <__metal_driver_riscv_clint0_command_request+0x124>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
20012b04:	0001                	nop
20012b06:	a011                	j	20012b0a <__metal_driver_riscv_clint0_command_request+0x124>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
20012b08:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:266
    }

    return rc;
20012b0a:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:267
}
20012b0e:	853e                	mv	a0,a5
20012b10:	50b2                	lw	ra,44(sp)
20012b12:	5422                	lw	s0,40(sp)
20012b14:	6145                	addi	sp,sp,48
20012b16:	8082                	ret

20012b18 <__metal_driver_riscv_clint0_clear_interrupt>:
__metal_driver_riscv_clint0_clear_interrupt():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:270

int __metal_driver_riscv_clint0_clear_interrupt(
    struct metal_interrupt *controller, int id) {
20012b18:	7179                	addi	sp,sp,-48
20012b1a:	d606                	sw	ra,44(sp)
20012b1c:	d422                	sw	s0,40(sp)
20012b1e:	1800                	addi	s0,sp,48
20012b20:	fca42e23          	sw	a0,-36(s0)
20012b24:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:271
    int hartid = metal_cpu_get_current_hartid();
20012b28:	145040ef          	jal	ra,2001746c <metal_cpu_get_current_hartid>
20012b2c:	87aa                	mv	a5,a0
20012b2e:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:272
    return __metal_driver_riscv_clint0_command_request(
20012b32:	fec40793          	addi	a5,s0,-20
20012b36:	863e                	mv	a2,a5
20012b38:	4589                	li	a1,2
20012b3a:	fdc42503          	lw	a0,-36(s0)
20012b3e:	3565                	jal	200129e6 <__metal_driver_riscv_clint0_command_request>
20012b40:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:274
        controller, METAL_SOFTWARE_IPI_CLEAR, &hartid);
}
20012b42:	853e                	mv	a0,a5
20012b44:	50b2                	lw	ra,44(sp)
20012b46:	5422                	lw	s0,40(sp)
20012b48:	6145                	addi	sp,sp,48
20012b4a:	8082                	ret

20012b4c <__metal_driver_riscv_clint0_set_interrupt>:
__metal_driver_riscv_clint0_set_interrupt():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:277

int __metal_driver_riscv_clint0_set_interrupt(
    struct metal_interrupt *controller, int id) {
20012b4c:	7179                	addi	sp,sp,-48
20012b4e:	d606                	sw	ra,44(sp)
20012b50:	d422                	sw	s0,40(sp)
20012b52:	1800                	addi	s0,sp,48
20012b54:	fca42e23          	sw	a0,-36(s0)
20012b58:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:278
    int hartid = metal_cpu_get_current_hartid();
20012b5c:	111040ef          	jal	ra,2001746c <metal_cpu_get_current_hartid>
20012b60:	87aa                	mv	a5,a0
20012b62:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:279
    return __metal_driver_riscv_clint0_command_request(
20012b66:	fec40793          	addi	a5,s0,-20
20012b6a:	863e                	mv	a2,a5
20012b6c:	458d                	li	a1,3
20012b6e:	fdc42503          	lw	a0,-36(s0)
20012b72:	3d95                	jal	200129e6 <__metal_driver_riscv_clint0_command_request>
20012b74:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:281
        controller, METAL_SOFTWARE_IPI_SET, &hartid);
}
20012b76:	853e                	mv	a0,a5
20012b78:	50b2                	lw	ra,44(sp)
20012b7a:	5422                	lw	s0,40(sp)
20012b7c:	6145                	addi	sp,sp,48
20012b7e:	8082                	ret

20012b80 <__metal_driver_cpu_hartid>:
__metal_driver_cpu_hartid():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:292



/* --------------------- cpu ------------ */
static __inline__ int __metal_driver_cpu_hartid(struct metal_cpu *cpu)
{
20012b80:	1101                	addi	sp,sp,-32
20012b82:	ce22                	sw	s0,28(sp)
20012b84:	1000                	addi	s0,sp,32
20012b86:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:293
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20012b8a:	fec42703          	lw	a4,-20(s0)
20012b8e:	81818793          	addi	a5,gp,-2024 # 80000ad8 <__metal_dt_cpu_0>
20012b92:	00f71463          	bne	a4,a5,20012b9a <__metal_driver_cpu_hartid+0x1a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:294
		return 0;
20012b96:	4781                	li	a5,0
20012b98:	a011                	j	20012b9c <__metal_driver_cpu_hartid+0x1c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:297
	}
	else {
		return -1;
20012b9a:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:299
	}
}
20012b9c:	853e                	mv	a0,a5
20012b9e:	4472                	lw	s0,28(sp)
20012ba0:	6105                	addi	sp,sp,32
20012ba2:	8082                	ret

20012ba4 <__metal_driver_cpu_timebase>:
__metal_driver_cpu_timebase():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:302

static __inline__ int __metal_driver_cpu_timebase(struct metal_cpu *cpu)
{
20012ba4:	1101                	addi	sp,sp,-32
20012ba6:	ce22                	sw	s0,28(sp)
20012ba8:	1000                	addi	s0,sp,32
20012baa:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:303
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20012bae:	fec42703          	lw	a4,-20(s0)
20012bb2:	81818793          	addi	a5,gp,-2024 # 80000ad8 <__metal_dt_cpu_0>
20012bb6:	00f71763          	bne	a4,a5,20012bc4 <__metal_driver_cpu_timebase+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:304
		return 16000000;
20012bba:	00f427b7          	lui	a5,0xf42
20012bbe:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
20012bc2:	a011                	j	20012bc6 <__metal_driver_cpu_timebase+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:307
	}
	else {
		return 0;
20012bc4:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:309
	}
}
20012bc6:	853e                	mv	a0,a5
20012bc8:	4472                	lw	s0,28(sp)
20012bca:	6105                	addi	sp,sp,32
20012bcc:	8082                	ret

20012bce <__metal_driver_cpu_interrupt_controller>:
__metal_driver_cpu_interrupt_controller():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:312

static __inline__ struct metal_interrupt * __metal_driver_cpu_interrupt_controller(struct metal_cpu *cpu)
{
20012bce:	1101                	addi	sp,sp,-32
20012bd0:	ce22                	sw	s0,28(sp)
20012bd2:	1000                	addi	s0,sp,32
20012bd4:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:313
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20012bd8:	fec42703          	lw	a4,-20(s0)
20012bdc:	81818793          	addi	a5,gp,-2024 # 80000ad8 <__metal_dt_cpu_0>
20012be0:	00f71763          	bne	a4,a5,20012bee <__metal_driver_cpu_interrupt_controller+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:314
		return &__metal_dt_cpu_0_interrupt_controller.controller;
20012be4:	800007b7          	lui	a5,0x80000
20012be8:	09078793          	addi	a5,a5,144 # 80000090 <metal_segment_heap_target_end+0xffffe8d0>
20012bec:	a011                	j	20012bf0 <__metal_driver_cpu_interrupt_controller+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:317
	}
	else {
		return NULL;
20012bee:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:319
	}
}
20012bf0:	853e                	mv	a0,a5
20012bf2:	4472                	lw	s0,28(sp)
20012bf4:	6105                	addi	sp,sp,32
20012bf6:	8082                	ret

20012bf8 <__metal_driver_cpu_buserror>:
__metal_driver_cpu_buserror():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:332
		return 0;
	}
}

static __inline__ struct metal_buserror * __metal_driver_cpu_buserror(struct metal_cpu *cpu)
{
20012bf8:	1101                	addi	sp,sp,-32
20012bfa:	ce22                	sw	s0,28(sp)
20012bfc:	1000                	addi	s0,sp,32
20012bfe:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:333
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20012c02:	fec42703          	lw	a4,-20(s0)
20012c06:	81818793          	addi	a5,gp,-2024 # 80000ad8 <__metal_dt_cpu_0>
20012c0a:	00f71463          	bne	a4,a5,20012c12 <__metal_driver_cpu_buserror+0x1a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:334
		return NULL;
20012c0e:	4781                	li	a5,0
20012c10:	a011                	j	20012c14 <__metal_driver_cpu_buserror+0x1c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:337
	}
	else {
		return NULL;
20012c12:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:339
	}
}
20012c14:	853e                	mv	a0,a5
20012c16:	4472                	lw	s0,28(sp)
20012c18:	6105                	addi	sp,sp,32
20012c1a:	8082                	ret

20012c1c <__metal_driver_cpu_get>:
__metal_driver_cpu_get():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:25
extern void __metal_vector_table();
unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu);
int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time);

struct metal_cpu *__metal_driver_cpu_get(int hartid) {
20012c1c:	1101                	addi	sp,sp,-32
20012c1e:	ce22                	sw	s0,28(sp)
20012c20:	1000                	addi	s0,sp,32
20012c22:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:26
    if (hartid < __METAL_DT_MAX_HARTS) {
20012c26:	fec42783          	lw	a5,-20(s0)
20012c2a:	00f04c63          	bgtz	a5,20012c42 <__metal_driver_cpu_get+0x26>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:27
        return &(__metal_cpu_table[hartid]->cpu);
20012c2e:	800017b7          	lui	a5,0x80001
20012c32:	fec42703          	lw	a4,-20(s0)
20012c36:	070a                	slli	a4,a4,0x2
20012c38:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20012c3c:	97ba                	add	a5,a5,a4
20012c3e:	439c                	lw	a5,0(a5)
20012c40:	a011                	j	20012c44 <__metal_driver_cpu_get+0x28>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:29
    }
    return (struct metal_cpu *)NULL;
20012c42:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:30
}
20012c44:	853e                	mv	a0,a5
20012c46:	4472                	lw	s0,28(sp)
20012c48:	6105                	addi	sp,sp,32
20012c4a:	8082                	ret

20012c4c <__metal_myhart_id>:
__metal_myhart_id():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:32

uintptr_t __metal_myhart_id(void) {
20012c4c:	1101                	addi	sp,sp,-32
20012c4e:	ce22                	sw	s0,28(sp)
20012c50:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:34
    uintptr_t myhart;
    __asm__ volatile("csrr %0, mhartid" : "=r"(myhart));
20012c52:	f14027f3          	csrr	a5,mhartid
20012c56:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:35
    return myhart;
20012c5a:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:36
}
20012c5e:	853e                	mv	a0,a5
20012c60:	4472                	lw	s0,28(sp)
20012c62:	6105                	addi	sp,sp,32
20012c64:	8082                	ret

20012c66 <__metal_interrupt_global_enable>:
__metal_interrupt_global_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:45
    for (ptr = base; ptr < (base + size); ptr++) {
        *ptr = 0;
    }
}

void __metal_interrupt_global_enable(void) {
20012c66:	1101                	addi	sp,sp,-32
20012c68:	ce22                	sw	s0,28(sp)
20012c6a:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:47
    uintptr_t m;
    __asm__ volatile("csrrs %0, mstatus, %1"
20012c6c:	47a1                	li	a5,8
20012c6e:	3007a7f3          	csrrs	a5,mstatus,a5
20012c72:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:50
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
20012c76:	0001                	nop
20012c78:	4472                	lw	s0,28(sp)
20012c7a:	6105                	addi	sp,sp,32
20012c7c:	8082                	ret

20012c7e <__metal_interrupt_global_disable>:
__metal_interrupt_global_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:52

void __metal_interrupt_global_disable(void) {
20012c7e:	1101                	addi	sp,sp,-32
20012c80:	ce22                	sw	s0,28(sp)
20012c82:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:54
    uintptr_t m;
    __asm__ volatile("csrrc %0, mstatus, %1"
20012c84:	47a1                	li	a5,8
20012c86:	3007b7f3          	csrrc	a5,mstatus,a5
20012c8a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:57
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
20012c8e:	0001                	nop
20012c90:	4472                	lw	s0,28(sp)
20012c92:	6105                	addi	sp,sp,32
20012c94:	8082                	ret

20012c96 <__metal_interrupt_software_enable>:
__metal_interrupt_software_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:59

void __metal_interrupt_software_enable(void) {
20012c96:	1101                	addi	sp,sp,-32
20012c98:	ce22                	sw	s0,28(sp)
20012c9a:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:61
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20012c9c:	47a1                	li	a5,8
20012c9e:	3047a7f3          	csrrs	a5,mie,a5
20012ca2:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:64
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
20012ca6:	0001                	nop
20012ca8:	4472                	lw	s0,28(sp)
20012caa:	6105                	addi	sp,sp,32
20012cac:	8082                	ret

20012cae <__metal_interrupt_software_disable>:
__metal_interrupt_software_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:66

void __metal_interrupt_software_disable(void) {
20012cae:	1101                	addi	sp,sp,-32
20012cb0:	ce22                	sw	s0,28(sp)
20012cb2:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:68
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
20012cb4:	47a1                	li	a5,8
20012cb6:	3047b7f3          	csrrc	a5,mie,a5
20012cba:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:71
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
20012cbe:	0001                	nop
20012cc0:	4472                	lw	s0,28(sp)
20012cc2:	6105                	addi	sp,sp,32
20012cc4:	8082                	ret

20012cc6 <__metal_interrupt_timer_enable>:
__metal_interrupt_timer_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:73

void __metal_interrupt_timer_enable(void) {
20012cc6:	1101                	addi	sp,sp,-32
20012cc8:	ce22                	sw	s0,28(sp)
20012cca:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:75
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20012ccc:	08000793          	li	a5,128
20012cd0:	3047a7f3          	csrrs	a5,mie,a5
20012cd4:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:78
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
20012cd8:	0001                	nop
20012cda:	4472                	lw	s0,28(sp)
20012cdc:	6105                	addi	sp,sp,32
20012cde:	8082                	ret

20012ce0 <__metal_interrupt_timer_disable>:
__metal_interrupt_timer_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:80

void __metal_interrupt_timer_disable(void) {
20012ce0:	1101                	addi	sp,sp,-32
20012ce2:	ce22                	sw	s0,28(sp)
20012ce4:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:82
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
20012ce6:	08000793          	li	a5,128
20012cea:	3047b7f3          	csrrc	a5,mie,a5
20012cee:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:85
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
20012cf2:	0001                	nop
20012cf4:	4472                	lw	s0,28(sp)
20012cf6:	6105                	addi	sp,sp,32
20012cf8:	8082                	ret

20012cfa <__metal_interrupt_external_enable>:
__metal_interrupt_external_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:87

void __metal_interrupt_external_enable(void) {
20012cfa:	1101                	addi	sp,sp,-32
20012cfc:	ce22                	sw	s0,28(sp)
20012cfe:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:89
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20012d00:	6785                	lui	a5,0x1
20012d02:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20012d06:	3047a7f3          	csrrs	a5,mie,a5
20012d0a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:92
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
20012d0e:	0001                	nop
20012d10:	4472                	lw	s0,28(sp)
20012d12:	6105                	addi	sp,sp,32
20012d14:	8082                	ret

20012d16 <__metal_interrupt_external_disable>:
__metal_interrupt_external_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:94

void __metal_interrupt_external_disable(void) {
20012d16:	1101                	addi	sp,sp,-32
20012d18:	ce22                	sw	s0,28(sp)
20012d1a:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:96
    unsigned long m;
    __asm__ volatile("csrrc %0, mie, %1"
20012d1c:	6785                	lui	a5,0x1
20012d1e:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20012d22:	3047b7f3          	csrrc	a5,mie,a5
20012d26:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:99
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
20012d2a:	0001                	nop
20012d2c:	4472                	lw	s0,28(sp)
20012d2e:	6105                	addi	sp,sp,32
20012d30:	8082                	ret

20012d32 <__metal_interrupt_local_enable>:
__metal_interrupt_local_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:101

void __metal_interrupt_local_enable(int id) {
20012d32:	7179                	addi	sp,sp,-48
20012d34:	d622                	sw	s0,44(sp)
20012d36:	1800                	addi	s0,sp,48
20012d38:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:102
    uintptr_t b = 1 << id;
20012d3c:	fdc42783          	lw	a5,-36(s0)
20012d40:	4705                	li	a4,1
20012d42:	00f717b3          	sll	a5,a4,a5
20012d46:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:104
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1" : "=r"(m) : "r"(b));
20012d4a:	fec42783          	lw	a5,-20(s0)
20012d4e:	3047a7f3          	csrrs	a5,mie,a5
20012d52:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:105
}
20012d56:	0001                	nop
20012d58:	5432                	lw	s0,44(sp)
20012d5a:	6145                	addi	sp,sp,48
20012d5c:	8082                	ret

20012d5e <__metal_interrupt_local_disable>:
__metal_interrupt_local_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:107

void __metal_interrupt_local_disable(int id) {
20012d5e:	7179                	addi	sp,sp,-48
20012d60:	d622                	sw	s0,44(sp)
20012d62:	1800                	addi	s0,sp,48
20012d64:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:108
    uintptr_t b = 1 << id;
20012d68:	fdc42783          	lw	a5,-36(s0)
20012d6c:	4705                	li	a4,1
20012d6e:	00f717b3          	sll	a5,a4,a5
20012d72:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:110
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1" : "=r"(m) : "r"(b));
20012d76:	fec42783          	lw	a5,-20(s0)
20012d7a:	3047b7f3          	csrrc	a5,mie,a5
20012d7e:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:111
}
20012d82:	0001                	nop
20012d84:	5432                	lw	s0,44(sp)
20012d86:	6145                	addi	sp,sp,48
20012d88:	8082                	ret

20012d8a <__metal_default_exception_handler>:
__metal_default_exception_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:113

void __metal_default_exception_handler(struct metal_cpu *cpu, int ecode) {
20012d8a:	1101                	addi	sp,sp,-32
20012d8c:	ce06                	sw	ra,28(sp)
20012d8e:	cc22                	sw	s0,24(sp)
20012d90:	1000                	addi	s0,sp,32
20012d92:	fea42623          	sw	a0,-20(s0)
20012d96:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:114
    metal_shutdown(100);
20012d9a:	06400513          	li	a0,100
20012d9e:	007040ef          	jal	ra,200175a4 <metal_shutdown>

20012da2 <__metal_default_interrupt_handler>:
__metal_default_interrupt_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:117
}

void __metal_default_interrupt_handler(int id, void *priv) {
20012da2:	1101                	addi	sp,sp,-32
20012da4:	ce06                	sw	ra,28(sp)
20012da6:	cc22                	sw	s0,24(sp)
20012da8:	1000                	addi	s0,sp,32
20012daa:	fea42623          	sw	a0,-20(s0)
20012dae:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:118
    metal_shutdown(200);
20012db2:	0c800513          	li	a0,200
20012db6:	7ee040ef          	jal	ra,200175a4 <metal_shutdown>

20012dba <metal_interrupt_vector_handler>:
metal_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:122
}

/* The metal_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_interrupt_vector_handler(void) {
20012dba:	715d                	addi	sp,sp,-80
20012dbc:	c686                	sw	ra,76(sp)
20012dbe:	c496                	sw	t0,72(sp)
20012dc0:	c29a                	sw	t1,68(sp)
20012dc2:	c09e                	sw	t2,64(sp)
20012dc4:	de22                	sw	s0,60(sp)
20012dc6:	dc2a                	sw	a0,56(sp)
20012dc8:	da2e                	sw	a1,52(sp)
20012dca:	d832                	sw	a2,48(sp)
20012dcc:	d636                	sw	a3,44(sp)
20012dce:	d43a                	sw	a4,40(sp)
20012dd0:	d23e                	sw	a5,36(sp)
20012dd2:	d042                	sw	a6,32(sp)
20012dd4:	ce46                	sw	a7,28(sp)
20012dd6:	cc72                	sw	t3,24(sp)
20012dd8:	ca76                	sw	t4,20(sp)
20012dda:	c87a                	sw	t5,16(sp)
20012ddc:	c67e                	sw	t6,12(sp)
20012dde:	0880                	addi	s0,sp,80
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:123
    metal_shutdown(300);
20012de0:	12c00513          	li	a0,300
20012de4:	7c0040ef          	jal	ra,200175a4 <metal_shutdown>

20012de8 <metal_software_interrupt_vector_handler>:
metal_software_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:128
}

/* The metal_software_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_software_interrupt_vector_handler(void) {
20012de8:	711d                	addi	sp,sp,-96
20012dea:	ce86                	sw	ra,92(sp)
20012dec:	cc96                	sw	t0,88(sp)
20012dee:	ca9a                	sw	t1,84(sp)
20012df0:	c89e                	sw	t2,80(sp)
20012df2:	c6a2                	sw	s0,76(sp)
20012df4:	c4aa                	sw	a0,72(sp)
20012df6:	c2ae                	sw	a1,68(sp)
20012df8:	c0b2                	sw	a2,64(sp)
20012dfa:	de36                	sw	a3,60(sp)
20012dfc:	dc3a                	sw	a4,56(sp)
20012dfe:	da3e                	sw	a5,52(sp)
20012e00:	d842                	sw	a6,48(sp)
20012e02:	d646                	sw	a7,44(sp)
20012e04:	d472                	sw	t3,40(sp)
20012e06:	d276                	sw	t4,36(sp)
20012e08:	d07a                	sw	t5,32(sp)
20012e0a:	ce7e                	sw	t6,28(sp)
20012e0c:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:129
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_SW);
20012e0e:	3d3d                	jal	20012c4c <__metal_myhart_id>
20012e10:	872a                	mv	a4,a0
20012e12:	800017b7          	lui	a5,0x80001
20012e16:	070a                	slli	a4,a4,0x2
20012e18:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20012e1c:	97ba                	add	a5,a5,a4
20012e1e:	439c                	lw	a5,0(a5)
20012e20:	faf42623          	sw	a5,-84(s0)
20012e24:	fac42783          	lw	a5,-84(s0)
20012e28:	c785                	beqz	a5,20012e50 <metal_software_interrupt_vector_handler+0x68>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:129 (discriminator 1)
20012e2a:	fac42503          	lw	a0,-84(s0)
20012e2e:	3345                	jal	20012bce <__metal_driver_cpu_interrupt_controller>
20012e30:	faa42423          	sw	a0,-88(s0)
20012e34:	fa842783          	lw	a5,-88(s0)
20012e38:	0e07a783          	lw	a5,224(a5)
20012e3c:	faf42223          	sw	a5,-92(s0)
20012e40:	fa842783          	lw	a5,-88(s0)
20012e44:	0d87a783          	lw	a5,216(a5)
20012e48:	fa442583          	lw	a1,-92(s0)
20012e4c:	450d                	li	a0,3
20012e4e:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:130
}
20012e50:	0001                	nop
20012e52:	40f6                	lw	ra,92(sp)
20012e54:	42e6                	lw	t0,88(sp)
20012e56:	4356                	lw	t1,84(sp)
20012e58:	43c6                	lw	t2,80(sp)
20012e5a:	4436                	lw	s0,76(sp)
20012e5c:	4526                	lw	a0,72(sp)
20012e5e:	4596                	lw	a1,68(sp)
20012e60:	4606                	lw	a2,64(sp)
20012e62:	56f2                	lw	a3,60(sp)
20012e64:	5762                	lw	a4,56(sp)
20012e66:	57d2                	lw	a5,52(sp)
20012e68:	5842                	lw	a6,48(sp)
20012e6a:	58b2                	lw	a7,44(sp)
20012e6c:	5e22                	lw	t3,40(sp)
20012e6e:	5e92                	lw	t4,36(sp)
20012e70:	5f02                	lw	t5,32(sp)
20012e72:	4ff2                	lw	t6,28(sp)
20012e74:	6125                	addi	sp,sp,96
20012e76:	30200073          	mret

20012e7a <__metal_default_sw_handler>:
__metal_default_sw_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:132

void __metal_default_sw_handler(int id, void *priv) {
20012e7a:	7179                	addi	sp,sp,-48
20012e7c:	d606                	sw	ra,44(sp)
20012e7e:	d422                	sw	s0,40(sp)
20012e80:	1800                	addi	s0,sp,48
20012e82:	fca42e23          	sw	a0,-36(s0)
20012e86:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:135
    uintptr_t mcause;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20012e8a:	33c9                	jal	20012c4c <__metal_myhart_id>
20012e8c:	872a                	mv	a4,a0
20012e8e:	800017b7          	lui	a5,0x80001
20012e92:	070a                	slli	a4,a4,0x2
20012e94:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20012e98:	97ba                	add	a5,a5,a4
20012e9a:	439c                	lw	a5,0(a5)
20012e9c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:137

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
20012ea0:	342027f3          	csrr	a5,mcause
20012ea4:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:138
    if (cpu) {
20012ea8:	fec42783          	lw	a5,-20(s0)
20012eac:	c795                	beqz	a5,20012ed8 <__metal_default_sw_handler+0x5e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:140
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20012eae:	fec42503          	lw	a0,-20(s0)
20012eb2:	3b31                	jal	20012bce <__metal_driver_cpu_interrupt_controller>
20012eb4:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:141
        intc->metal_exception_table[mcause & METAL_MCAUSE_CAUSE](
20012eb8:	fe842783          	lw	a5,-24(s0)
20012ebc:	3ff7f793          	andi	a5,a5,1023
20012ec0:	fe442703          	lw	a4,-28(s0)
20012ec4:	0e878793          	addi	a5,a5,232
20012ec8:	078a                	slli	a5,a5,0x2
20012eca:	97ba                	add	a5,a5,a4
20012ecc:	439c                	lw	a5,0(a5)
20012ece:	fdc42583          	lw	a1,-36(s0)
20012ed2:	fec42503          	lw	a0,-20(s0)
20012ed6:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:144
            (struct metal_cpu *)cpu, id);
    }
}
20012ed8:	0001                	nop
20012eda:	50b2                	lw	ra,44(sp)
20012edc:	5422                	lw	s0,40(sp)
20012ede:	6145                	addi	sp,sp,48
20012ee0:	8082                	ret

20012ee2 <metal_timer_interrupt_vector_handler>:
metal_timer_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:148

/* The metal_timer_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_timer_interrupt_vector_handler(void) {
20012ee2:	711d                	addi	sp,sp,-96
20012ee4:	ce86                	sw	ra,92(sp)
20012ee6:	cc96                	sw	t0,88(sp)
20012ee8:	ca9a                	sw	t1,84(sp)
20012eea:	c89e                	sw	t2,80(sp)
20012eec:	c6a2                	sw	s0,76(sp)
20012eee:	c4aa                	sw	a0,72(sp)
20012ef0:	c2ae                	sw	a1,68(sp)
20012ef2:	c0b2                	sw	a2,64(sp)
20012ef4:	de36                	sw	a3,60(sp)
20012ef6:	dc3a                	sw	a4,56(sp)
20012ef8:	da3e                	sw	a5,52(sp)
20012efa:	d842                	sw	a6,48(sp)
20012efc:	d646                	sw	a7,44(sp)
20012efe:	d472                	sw	t3,40(sp)
20012f00:	d276                	sw	t4,36(sp)
20012f02:	d07a                	sw	t5,32(sp)
20012f04:	ce7e                	sw	t6,28(sp)
20012f06:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:149
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_TMR);
20012f08:	3391                	jal	20012c4c <__metal_myhart_id>
20012f0a:	872a                	mv	a4,a0
20012f0c:	800017b7          	lui	a5,0x80001
20012f10:	070a                	slli	a4,a4,0x2
20012f12:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20012f16:	97ba                	add	a5,a5,a4
20012f18:	439c                	lw	a5,0(a5)
20012f1a:	faf42623          	sw	a5,-84(s0)
20012f1e:	fac42783          	lw	a5,-84(s0)
20012f22:	c785                	beqz	a5,20012f4a <metal_timer_interrupt_vector_handler+0x68>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:149 (discriminator 1)
20012f24:	fac42503          	lw	a0,-84(s0)
20012f28:	315d                	jal	20012bce <__metal_driver_cpu_interrupt_controller>
20012f2a:	faa42423          	sw	a0,-88(s0)
20012f2e:	fa842783          	lw	a5,-88(s0)
20012f32:	1407a783          	lw	a5,320(a5)
20012f36:	faf42223          	sw	a5,-92(s0)
20012f3a:	fa842783          	lw	a5,-88(s0)
20012f3e:	1387a783          	lw	a5,312(a5)
20012f42:	fa442583          	lw	a1,-92(s0)
20012f46:	451d                	li	a0,7
20012f48:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:150
}
20012f4a:	0001                	nop
20012f4c:	40f6                	lw	ra,92(sp)
20012f4e:	42e6                	lw	t0,88(sp)
20012f50:	4356                	lw	t1,84(sp)
20012f52:	43c6                	lw	t2,80(sp)
20012f54:	4436                	lw	s0,76(sp)
20012f56:	4526                	lw	a0,72(sp)
20012f58:	4596                	lw	a1,68(sp)
20012f5a:	4606                	lw	a2,64(sp)
20012f5c:	56f2                	lw	a3,60(sp)
20012f5e:	5762                	lw	a4,56(sp)
20012f60:	57d2                	lw	a5,52(sp)
20012f62:	5842                	lw	a6,48(sp)
20012f64:	58b2                	lw	a7,44(sp)
20012f66:	5e22                	lw	t3,40(sp)
20012f68:	5e92                	lw	t4,36(sp)
20012f6a:	5f02                	lw	t5,32(sp)
20012f6c:	4ff2                	lw	t6,28(sp)
20012f6e:	6125                	addi	sp,sp,96
20012f70:	30200073          	mret

20012f74 <__metal_default_beu_handler>:
__metal_default_beu_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:152

void __metal_default_beu_handler(int id, void *priv) {}
20012f74:	1101                	addi	sp,sp,-32
20012f76:	ce22                	sw	s0,28(sp)
20012f78:	1000                	addi	s0,sp,32
20012f7a:	fea42623          	sw	a0,-20(s0)
20012f7e:	feb42423          	sw	a1,-24(s0)
20012f82:	0001                	nop
20012f84:	4472                	lw	s0,28(sp)
20012f86:	6105                	addi	sp,sp,32
20012f88:	8082                	ret

20012f8a <__metal_default_timer_handler>:
__metal_default_timer_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:154

void __metal_default_timer_handler(int id, void *priv) {
20012f8a:	7179                	addi	sp,sp,-48
20012f8c:	d606                	sw	ra,44(sp)
20012f8e:	d422                	sw	s0,40(sp)
20012f90:	1800                	addi	s0,sp,48
20012f92:	fca42e23          	sw	a0,-36(s0)
20012f96:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:155
    struct metal_cpu *cpu = __metal_driver_cpu_get(__metal_myhart_id());
20012f9a:	394d                	jal	20012c4c <__metal_myhart_id>
20012f9c:	87aa                	mv	a5,a0
20012f9e:	853e                	mv	a0,a5
20012fa0:	39b5                	jal	20012c1c <__metal_driver_cpu_get>
20012fa2:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:156
    unsigned long long time = __metal_driver_cpu_mtime_get(cpu);
20012fa6:	fec42503          	lw	a0,-20(s0)
20012faa:	252010ef          	jal	ra,200141fc <__metal_driver_cpu_mtime_get>
20012fae:	fea42023          	sw	a0,-32(s0)
20012fb2:	feb42223          	sw	a1,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:159

    /* Set a 10 cycle timer */
    __metal_driver_cpu_mtimecmp_set(cpu, time + 10);
20012fb6:	fe042783          	lw	a5,-32(s0)
20012fba:	fe442803          	lw	a6,-28(s0)
20012fbe:	45a9                	li	a1,10
20012fc0:	4601                	li	a2,0
20012fc2:	00b786b3          	add	a3,a5,a1
20012fc6:	8536                	mv	a0,a3
20012fc8:	00f53533          	sltu	a0,a0,a5
20012fcc:	00c80733          	add	a4,a6,a2
20012fd0:	00e507b3          	add	a5,a0,a4
20012fd4:	873e                	mv	a4,a5
20012fd6:	87b6                	mv	a5,a3
20012fd8:	883a                	mv	a6,a4
20012fda:	85be                	mv	a1,a5
20012fdc:	8642                	mv	a2,a6
20012fde:	fec42503          	lw	a0,-20(s0)
20012fe2:	280010ef          	jal	ra,20014262 <__metal_driver_cpu_mtimecmp_set>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:160
}
20012fe6:	0001                	nop
20012fe8:	50b2                	lw	ra,44(sp)
20012fea:	5422                	lw	s0,40(sp)
20012fec:	6145                	addi	sp,sp,48
20012fee:	8082                	ret
	...

20013000 <__metal_exception_handler>:
__metal_exception_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:169
metal_external_interrupt_vector_handler(void) {
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_EXT);
}

void __metal_exception_handler(void) __attribute__((interrupt, aligned(128)));
void __metal_exception_handler(void) {
20013000:	7119                	addi	sp,sp,-128
20013002:	de86                	sw	ra,124(sp)
20013004:	dc96                	sw	t0,120(sp)
20013006:	da9a                	sw	t1,116(sp)
20013008:	d89e                	sw	t2,112(sp)
2001300a:	d6a2                	sw	s0,108(sp)
2001300c:	d4aa                	sw	a0,104(sp)
2001300e:	d2ae                	sw	a1,100(sp)
20013010:	d0b2                	sw	a2,96(sp)
20013012:	ceb6                	sw	a3,92(sp)
20013014:	ccba                	sw	a4,88(sp)
20013016:	cabe                	sw	a5,84(sp)
20013018:	c8c2                	sw	a6,80(sp)
2001301a:	c6c6                	sw	a7,76(sp)
2001301c:	c4f2                	sw	t3,72(sp)
2001301e:	c2f6                	sw	t4,68(sp)
20013020:	c0fa                	sw	t5,64(sp)
20013022:	de7e                	sw	t6,60(sp)
20013024:	0100                	addi	s0,sp,128
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:174
    int id;
    void *priv;
    uintptr_t mcause, mepc, mtval, mtvec;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20013026:	311d                	jal	20012c4c <__metal_myhart_id>
20013028:	872a                	mv	a4,a0
2001302a:	800017b7          	lui	a5,0x80001
2001302e:	070a                	slli	a4,a4,0x2
20013030:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20013034:	97ba                	add	a5,a5,a4
20013036:	439c                	lw	a5,0(a5)
20013038:	faf42623          	sw	a5,-84(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:176

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
2001303c:	342027f3          	csrr	a5,mcause
20013040:	faf42423          	sw	a5,-88(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:177
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
20013044:	341027f3          	csrr	a5,mepc
20013048:	faf42223          	sw	a5,-92(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:178
    __asm__ volatile("csrr %0, mtval" : "=r"(mtval));
2001304c:	343027f3          	csrr	a5,mtval
20013050:	faf42023          	sw	a5,-96(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:179
    __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
20013054:	305027f3          	csrr	a5,mtvec
20013058:	f8f42e23          	sw	a5,-100(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:181

    if (cpu) {
2001305c:	fac42783          	lw	a5,-84(s0)
20013060:	cbf5                	beqz	a5,20013154 <__metal_exception_handler+0x154>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:183
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20013062:	fac42503          	lw	a0,-84(s0)
20013066:	36a5                	jal	20012bce <__metal_driver_cpu_interrupt_controller>
20013068:	f8a42c23          	sw	a0,-104(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:184
        id = mcause & METAL_MCAUSE_CAUSE;
2001306c:	fa842783          	lw	a5,-88(s0)
20013070:	3ff7f793          	andi	a5,a5,1023
20013074:	f8f42a23          	sw	a5,-108(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:185
        if (mcause & METAL_MCAUSE_INTR) {
20013078:	fa842783          	lw	a5,-88(s0)
2001307c:	0a07de63          	bgez	a5,20013138 <__metal_exception_handler+0x138>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:186
            if (id == METAL_INTERRUPT_ID_BEU) {
20013080:	f9442703          	lw	a4,-108(s0)
20013084:	08000793          	li	a5,128
20013088:	02f71263          	bne	a4,a5,200130ac <__metal_exception_handler+0xac>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:187
                priv = intc->metal_int_beu.exint_data;
2001308c:	f9842783          	lw	a5,-104(s0)
20013090:	3987a783          	lw	a5,920(a5)
20013094:	f8f42823          	sw	a5,-112(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:188
                intc->metal_int_beu.handler(id, priv);
20013098:	f9842783          	lw	a5,-104(s0)
2001309c:	3907a783          	lw	a5,912(a5)
200130a0:	f9042583          	lw	a1,-112(s0)
200130a4:	f9442503          	lw	a0,-108(s0)
200130a8:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:189
                return;
200130aa:	a06d                	j	20013154 <__metal_exception_handler+0x154>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:191
            }
            if ((id < METAL_INTERRUPT_ID_CSW) ||
200130ac:	f9442703          	lw	a4,-108(s0)
200130b0:	47ad                	li	a5,11
200130b2:	00e7d763          	bge	a5,a4,200130c0 <__metal_exception_handler+0xc0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:192 (discriminator 1)
                ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_DIRECT)) {
200130b6:	f9c42783          	lw	a5,-100(s0)
200130ba:	03f7f793          	andi	a5,a5,63
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:191 (discriminator 1)
            if ((id < METAL_INTERRUPT_ID_CSW) ||
200130be:	ef9d                	bnez	a5,200130fc <__metal_exception_handler+0xfc>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:193
                priv = intc->metal_int_table[id].exint_data;
200130c0:	f9842683          	lw	a3,-104(s0)
200130c4:	f9442703          	lw	a4,-108(s0)
200130c8:	87ba                	mv	a5,a4
200130ca:	0786                	slli	a5,a5,0x1
200130cc:	97ba                	add	a5,a5,a4
200130ce:	078e                	slli	a5,a5,0x3
200130d0:	97b6                	add	a5,a5,a3
200130d2:	0987a783          	lw	a5,152(a5)
200130d6:	f8f42823          	sw	a5,-112(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:194
                intc->metal_int_table[id].handler(id, priv);
200130da:	f9842683          	lw	a3,-104(s0)
200130de:	f9442703          	lw	a4,-108(s0)
200130e2:	87ba                	mv	a5,a4
200130e4:	0786                	slli	a5,a5,0x1
200130e6:	97ba                	add	a5,a5,a4
200130e8:	078e                	slli	a5,a5,0x3
200130ea:	97b6                	add	a5,a5,a3
200130ec:	0907a783          	lw	a5,144(a5)
200130f0:	f9042583          	lw	a1,-112(s0)
200130f4:	f9442503          	lw	a0,-108(s0)
200130f8:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:195
                return;
200130fa:	a8a9                	j	20013154 <__metal_exception_handler+0x154>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:197
            }
            if ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_CLIC) {
200130fc:	f9c42783          	lw	a5,-100(s0)
20013100:	03f7f713          	andi	a4,a5,63
20013104:	4789                	li	a5,2
20013106:	04f71763          	bne	a4,a5,20013154 <__metal_exception_handler+0x154>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:201
                uintptr_t mtvt;
                metal_interrupt_handler_t mtvt_handler;

                __asm__ volatile("csrr %0, 0x307" : "=r"(mtvt));
2001310a:	307027f3          	csrr	a5,mtvt
2001310e:	f8f42623          	sw	a5,-116(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:202
                priv = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20013112:	f9842783          	lw	a5,-104(s0)
20013116:	0dc7a783          	lw	a5,220(a5)
2001311a:	f8f42823          	sw	a5,-112(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:203
                mtvt_handler = (metal_interrupt_handler_t) * (uintptr_t *)mtvt;
2001311e:	f8c42783          	lw	a5,-116(s0)
20013122:	439c                	lw	a5,0(a5)
20013124:	f8f42423          	sw	a5,-120(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:204
                mtvt_handler(id, priv);
20013128:	f8842783          	lw	a5,-120(s0)
2001312c:	f9042583          	lw	a1,-112(s0)
20013130:	f9442503          	lw	a0,-108(s0)
20013134:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:205
                return;
20013136:	a839                	j	20013154 <__metal_exception_handler+0x154>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:208
            }
        } else {
            intc->metal_exception_table[id]((struct metal_cpu *)cpu, id);
20013138:	f9842703          	lw	a4,-104(s0)
2001313c:	f9442783          	lw	a5,-108(s0)
20013140:	0e878793          	addi	a5,a5,232
20013144:	078a                	slli	a5,a5,0x2
20013146:	97ba                	add	a5,a5,a4
20013148:	439c                	lw	a5,0(a5)
2001314a:	f9442583          	lw	a1,-108(s0)
2001314e:	fac42503          	lw	a0,-84(s0)
20013152:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:211
        }
    }
}
20013154:	50f6                	lw	ra,124(sp)
20013156:	52e6                	lw	t0,120(sp)
20013158:	5356                	lw	t1,116(sp)
2001315a:	53c6                	lw	t2,112(sp)
2001315c:	5436                	lw	s0,108(sp)
2001315e:	5526                	lw	a0,104(sp)
20013160:	5596                	lw	a1,100(sp)
20013162:	5606                	lw	a2,96(sp)
20013164:	46f6                	lw	a3,92(sp)
20013166:	4766                	lw	a4,88(sp)
20013168:	47d6                	lw	a5,84(sp)
2001316a:	4846                	lw	a6,80(sp)
2001316c:	48b6                	lw	a7,76(sp)
2001316e:	4e26                	lw	t3,72(sp)
20013170:	4e96                	lw	t4,68(sp)
20013172:	4f06                	lw	t5,64(sp)
20013174:	5ff2                	lw	t6,60(sp)
20013176:	6109                	addi	sp,sp,128
20013178:	30200073          	mret
	...

200131f6 <metal_lc0_interrupt_vector_handler>:
metal_lc0_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:214

/* The metal_lc0_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc0_interrupt_vector_handler(void) {
200131f6:	711d                	addi	sp,sp,-96
200131f8:	ce86                	sw	ra,92(sp)
200131fa:	cc96                	sw	t0,88(sp)
200131fc:	ca9a                	sw	t1,84(sp)
200131fe:	c89e                	sw	t2,80(sp)
20013200:	c6a2                	sw	s0,76(sp)
20013202:	c4aa                	sw	a0,72(sp)
20013204:	c2ae                	sw	a1,68(sp)
20013206:	c0b2                	sw	a2,64(sp)
20013208:	de36                	sw	a3,60(sp)
2001320a:	dc3a                	sw	a4,56(sp)
2001320c:	da3e                	sw	a5,52(sp)
2001320e:	d842                	sw	a6,48(sp)
20013210:	d646                	sw	a7,44(sp)
20013212:	d472                	sw	t3,40(sp)
20013214:	d276                	sw	t4,36(sp)
20013216:	d07a                	sw	t5,32(sp)
20013218:	ce7e                	sw	t6,28(sp)
2001321a:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:215
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC0);
2001321c:	a31ff0ef          	jal	ra,20012c4c <__metal_myhart_id>
20013220:	872a                	mv	a4,a0
20013222:	800017b7          	lui	a5,0x80001
20013226:	070a                	slli	a4,a4,0x2
20013228:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
2001322c:	97ba                	add	a5,a5,a4
2001322e:	439c                	lw	a5,0(a5)
20013230:	faf42623          	sw	a5,-84(s0)
20013234:	fac42783          	lw	a5,-84(s0)
20013238:	c78d                	beqz	a5,20013262 <metal_lc0_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:215 (discriminator 1)
2001323a:	fac42503          	lw	a0,-84(s0)
2001323e:	991ff0ef          	jal	ra,20012bce <__metal_driver_cpu_interrupt_controller>
20013242:	faa42423          	sw	a0,-88(s0)
20013246:	fa842783          	lw	a5,-88(s0)
2001324a:	2187a783          	lw	a5,536(a5)
2001324e:	faf42223          	sw	a5,-92(s0)
20013252:	fa842783          	lw	a5,-88(s0)
20013256:	2107a783          	lw	a5,528(a5)
2001325a:	fa442583          	lw	a1,-92(s0)
2001325e:	4541                	li	a0,16
20013260:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:216
}
20013262:	0001                	nop
20013264:	40f6                	lw	ra,92(sp)
20013266:	42e6                	lw	t0,88(sp)
20013268:	4356                	lw	t1,84(sp)
2001326a:	43c6                	lw	t2,80(sp)
2001326c:	4436                	lw	s0,76(sp)
2001326e:	4526                	lw	a0,72(sp)
20013270:	4596                	lw	a1,68(sp)
20013272:	4606                	lw	a2,64(sp)
20013274:	56f2                	lw	a3,60(sp)
20013276:	5762                	lw	a4,56(sp)
20013278:	57d2                	lw	a5,52(sp)
2001327a:	5842                	lw	a6,48(sp)
2001327c:	58b2                	lw	a7,44(sp)
2001327e:	5e22                	lw	t3,40(sp)
20013280:	5e92                	lw	t4,36(sp)
20013282:	5f02                	lw	t5,32(sp)
20013284:	4ff2                	lw	t6,28(sp)
20013286:	6125                	addi	sp,sp,96
20013288:	30200073          	mret

2001328c <metal_lc1_interrupt_vector_handler>:
metal_lc1_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:219

/* The metal_lc1_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc1_interrupt_vector_handler(void) {
2001328c:	711d                	addi	sp,sp,-96
2001328e:	ce86                	sw	ra,92(sp)
20013290:	cc96                	sw	t0,88(sp)
20013292:	ca9a                	sw	t1,84(sp)
20013294:	c89e                	sw	t2,80(sp)
20013296:	c6a2                	sw	s0,76(sp)
20013298:	c4aa                	sw	a0,72(sp)
2001329a:	c2ae                	sw	a1,68(sp)
2001329c:	c0b2                	sw	a2,64(sp)
2001329e:	de36                	sw	a3,60(sp)
200132a0:	dc3a                	sw	a4,56(sp)
200132a2:	da3e                	sw	a5,52(sp)
200132a4:	d842                	sw	a6,48(sp)
200132a6:	d646                	sw	a7,44(sp)
200132a8:	d472                	sw	t3,40(sp)
200132aa:	d276                	sw	t4,36(sp)
200132ac:	d07a                	sw	t5,32(sp)
200132ae:	ce7e                	sw	t6,28(sp)
200132b0:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:220
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC1);
200132b2:	99bff0ef          	jal	ra,20012c4c <__metal_myhart_id>
200132b6:	872a                	mv	a4,a0
200132b8:	800017b7          	lui	a5,0x80001
200132bc:	070a                	slli	a4,a4,0x2
200132be:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
200132c2:	97ba                	add	a5,a5,a4
200132c4:	439c                	lw	a5,0(a5)
200132c6:	faf42623          	sw	a5,-84(s0)
200132ca:	fac42783          	lw	a5,-84(s0)
200132ce:	c78d                	beqz	a5,200132f8 <metal_lc1_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:220 (discriminator 1)
200132d0:	fac42503          	lw	a0,-84(s0)
200132d4:	8fbff0ef          	jal	ra,20012bce <__metal_driver_cpu_interrupt_controller>
200132d8:	faa42423          	sw	a0,-88(s0)
200132dc:	fa842783          	lw	a5,-88(s0)
200132e0:	2307a783          	lw	a5,560(a5)
200132e4:	faf42223          	sw	a5,-92(s0)
200132e8:	fa842783          	lw	a5,-88(s0)
200132ec:	2287a783          	lw	a5,552(a5)
200132f0:	fa442583          	lw	a1,-92(s0)
200132f4:	4545                	li	a0,17
200132f6:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:221
}
200132f8:	0001                	nop
200132fa:	40f6                	lw	ra,92(sp)
200132fc:	42e6                	lw	t0,88(sp)
200132fe:	4356                	lw	t1,84(sp)
20013300:	43c6                	lw	t2,80(sp)
20013302:	4436                	lw	s0,76(sp)
20013304:	4526                	lw	a0,72(sp)
20013306:	4596                	lw	a1,68(sp)
20013308:	4606                	lw	a2,64(sp)
2001330a:	56f2                	lw	a3,60(sp)
2001330c:	5762                	lw	a4,56(sp)
2001330e:	57d2                	lw	a5,52(sp)
20013310:	5842                	lw	a6,48(sp)
20013312:	58b2                	lw	a7,44(sp)
20013314:	5e22                	lw	t3,40(sp)
20013316:	5e92                	lw	t4,36(sp)
20013318:	5f02                	lw	t5,32(sp)
2001331a:	4ff2                	lw	t6,28(sp)
2001331c:	6125                	addi	sp,sp,96
2001331e:	30200073          	mret

20013322 <metal_lc2_interrupt_vector_handler>:
metal_lc2_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:224

/* The metal_lc2_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc2_interrupt_vector_handler(void) {
20013322:	711d                	addi	sp,sp,-96
20013324:	ce86                	sw	ra,92(sp)
20013326:	cc96                	sw	t0,88(sp)
20013328:	ca9a                	sw	t1,84(sp)
2001332a:	c89e                	sw	t2,80(sp)
2001332c:	c6a2                	sw	s0,76(sp)
2001332e:	c4aa                	sw	a0,72(sp)
20013330:	c2ae                	sw	a1,68(sp)
20013332:	c0b2                	sw	a2,64(sp)
20013334:	de36                	sw	a3,60(sp)
20013336:	dc3a                	sw	a4,56(sp)
20013338:	da3e                	sw	a5,52(sp)
2001333a:	d842                	sw	a6,48(sp)
2001333c:	d646                	sw	a7,44(sp)
2001333e:	d472                	sw	t3,40(sp)
20013340:	d276                	sw	t4,36(sp)
20013342:	d07a                	sw	t5,32(sp)
20013344:	ce7e                	sw	t6,28(sp)
20013346:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:225
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC2);
20013348:	905ff0ef          	jal	ra,20012c4c <__metal_myhart_id>
2001334c:	872a                	mv	a4,a0
2001334e:	800017b7          	lui	a5,0x80001
20013352:	070a                	slli	a4,a4,0x2
20013354:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20013358:	97ba                	add	a5,a5,a4
2001335a:	439c                	lw	a5,0(a5)
2001335c:	faf42623          	sw	a5,-84(s0)
20013360:	fac42783          	lw	a5,-84(s0)
20013364:	c78d                	beqz	a5,2001338e <metal_lc2_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:225 (discriminator 1)
20013366:	fac42503          	lw	a0,-84(s0)
2001336a:	865ff0ef          	jal	ra,20012bce <__metal_driver_cpu_interrupt_controller>
2001336e:	faa42423          	sw	a0,-88(s0)
20013372:	fa842783          	lw	a5,-88(s0)
20013376:	2487a783          	lw	a5,584(a5)
2001337a:	faf42223          	sw	a5,-92(s0)
2001337e:	fa842783          	lw	a5,-88(s0)
20013382:	2407a783          	lw	a5,576(a5)
20013386:	fa442583          	lw	a1,-92(s0)
2001338a:	4549                	li	a0,18
2001338c:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:226
}
2001338e:	0001                	nop
20013390:	40f6                	lw	ra,92(sp)
20013392:	42e6                	lw	t0,88(sp)
20013394:	4356                	lw	t1,84(sp)
20013396:	43c6                	lw	t2,80(sp)
20013398:	4436                	lw	s0,76(sp)
2001339a:	4526                	lw	a0,72(sp)
2001339c:	4596                	lw	a1,68(sp)
2001339e:	4606                	lw	a2,64(sp)
200133a0:	56f2                	lw	a3,60(sp)
200133a2:	5762                	lw	a4,56(sp)
200133a4:	57d2                	lw	a5,52(sp)
200133a6:	5842                	lw	a6,48(sp)
200133a8:	58b2                	lw	a7,44(sp)
200133aa:	5e22                	lw	t3,40(sp)
200133ac:	5e92                	lw	t4,36(sp)
200133ae:	5f02                	lw	t5,32(sp)
200133b0:	4ff2                	lw	t6,28(sp)
200133b2:	6125                	addi	sp,sp,96
200133b4:	30200073          	mret

200133b8 <metal_lc3_interrupt_vector_handler>:
metal_lc3_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:229

/* The metal_lc3_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc3_interrupt_vector_handler(void) {
200133b8:	711d                	addi	sp,sp,-96
200133ba:	ce86                	sw	ra,92(sp)
200133bc:	cc96                	sw	t0,88(sp)
200133be:	ca9a                	sw	t1,84(sp)
200133c0:	c89e                	sw	t2,80(sp)
200133c2:	c6a2                	sw	s0,76(sp)
200133c4:	c4aa                	sw	a0,72(sp)
200133c6:	c2ae                	sw	a1,68(sp)
200133c8:	c0b2                	sw	a2,64(sp)
200133ca:	de36                	sw	a3,60(sp)
200133cc:	dc3a                	sw	a4,56(sp)
200133ce:	da3e                	sw	a5,52(sp)
200133d0:	d842                	sw	a6,48(sp)
200133d2:	d646                	sw	a7,44(sp)
200133d4:	d472                	sw	t3,40(sp)
200133d6:	d276                	sw	t4,36(sp)
200133d8:	d07a                	sw	t5,32(sp)
200133da:	ce7e                	sw	t6,28(sp)
200133dc:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:230
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC3);
200133de:	86fff0ef          	jal	ra,20012c4c <__metal_myhart_id>
200133e2:	872a                	mv	a4,a0
200133e4:	800017b7          	lui	a5,0x80001
200133e8:	070a                	slli	a4,a4,0x2
200133ea:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
200133ee:	97ba                	add	a5,a5,a4
200133f0:	439c                	lw	a5,0(a5)
200133f2:	faf42623          	sw	a5,-84(s0)
200133f6:	fac42783          	lw	a5,-84(s0)
200133fa:	c78d                	beqz	a5,20013424 <metal_lc3_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:230 (discriminator 1)
200133fc:	fac42503          	lw	a0,-84(s0)
20013400:	fceff0ef          	jal	ra,20012bce <__metal_driver_cpu_interrupt_controller>
20013404:	faa42423          	sw	a0,-88(s0)
20013408:	fa842783          	lw	a5,-88(s0)
2001340c:	2607a783          	lw	a5,608(a5)
20013410:	faf42223          	sw	a5,-92(s0)
20013414:	fa842783          	lw	a5,-88(s0)
20013418:	2587a783          	lw	a5,600(a5)
2001341c:	fa442583          	lw	a1,-92(s0)
20013420:	454d                	li	a0,19
20013422:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:231
}
20013424:	0001                	nop
20013426:	40f6                	lw	ra,92(sp)
20013428:	42e6                	lw	t0,88(sp)
2001342a:	4356                	lw	t1,84(sp)
2001342c:	43c6                	lw	t2,80(sp)
2001342e:	4436                	lw	s0,76(sp)
20013430:	4526                	lw	a0,72(sp)
20013432:	4596                	lw	a1,68(sp)
20013434:	4606                	lw	a2,64(sp)
20013436:	56f2                	lw	a3,60(sp)
20013438:	5762                	lw	a4,56(sp)
2001343a:	57d2                	lw	a5,52(sp)
2001343c:	5842                	lw	a6,48(sp)
2001343e:	58b2                	lw	a7,44(sp)
20013440:	5e22                	lw	t3,40(sp)
20013442:	5e92                	lw	t4,36(sp)
20013444:	5f02                	lw	t5,32(sp)
20013446:	4ff2                	lw	t6,28(sp)
20013448:	6125                	addi	sp,sp,96
2001344a:	30200073          	mret

2001344e <metal_lc4_interrupt_vector_handler>:
metal_lc4_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:234

/* The metal_lc4_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc4_interrupt_vector_handler(void) {
2001344e:	711d                	addi	sp,sp,-96
20013450:	ce86                	sw	ra,92(sp)
20013452:	cc96                	sw	t0,88(sp)
20013454:	ca9a                	sw	t1,84(sp)
20013456:	c89e                	sw	t2,80(sp)
20013458:	c6a2                	sw	s0,76(sp)
2001345a:	c4aa                	sw	a0,72(sp)
2001345c:	c2ae                	sw	a1,68(sp)
2001345e:	c0b2                	sw	a2,64(sp)
20013460:	de36                	sw	a3,60(sp)
20013462:	dc3a                	sw	a4,56(sp)
20013464:	da3e                	sw	a5,52(sp)
20013466:	d842                	sw	a6,48(sp)
20013468:	d646                	sw	a7,44(sp)
2001346a:	d472                	sw	t3,40(sp)
2001346c:	d276                	sw	t4,36(sp)
2001346e:	d07a                	sw	t5,32(sp)
20013470:	ce7e                	sw	t6,28(sp)
20013472:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:235
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC4);
20013474:	fd8ff0ef          	jal	ra,20012c4c <__metal_myhart_id>
20013478:	872a                	mv	a4,a0
2001347a:	800017b7          	lui	a5,0x80001
2001347e:	070a                	slli	a4,a4,0x2
20013480:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20013484:	97ba                	add	a5,a5,a4
20013486:	439c                	lw	a5,0(a5)
20013488:	faf42623          	sw	a5,-84(s0)
2001348c:	fac42783          	lw	a5,-84(s0)
20013490:	c78d                	beqz	a5,200134ba <metal_lc4_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:235 (discriminator 1)
20013492:	fac42503          	lw	a0,-84(s0)
20013496:	f38ff0ef          	jal	ra,20012bce <__metal_driver_cpu_interrupt_controller>
2001349a:	faa42423          	sw	a0,-88(s0)
2001349e:	fa842783          	lw	a5,-88(s0)
200134a2:	2787a783          	lw	a5,632(a5)
200134a6:	faf42223          	sw	a5,-92(s0)
200134aa:	fa842783          	lw	a5,-88(s0)
200134ae:	2707a783          	lw	a5,624(a5)
200134b2:	fa442583          	lw	a1,-92(s0)
200134b6:	4551                	li	a0,20
200134b8:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:236
}
200134ba:	0001                	nop
200134bc:	40f6                	lw	ra,92(sp)
200134be:	42e6                	lw	t0,88(sp)
200134c0:	4356                	lw	t1,84(sp)
200134c2:	43c6                	lw	t2,80(sp)
200134c4:	4436                	lw	s0,76(sp)
200134c6:	4526                	lw	a0,72(sp)
200134c8:	4596                	lw	a1,68(sp)
200134ca:	4606                	lw	a2,64(sp)
200134cc:	56f2                	lw	a3,60(sp)
200134ce:	5762                	lw	a4,56(sp)
200134d0:	57d2                	lw	a5,52(sp)
200134d2:	5842                	lw	a6,48(sp)
200134d4:	58b2                	lw	a7,44(sp)
200134d6:	5e22                	lw	t3,40(sp)
200134d8:	5e92                	lw	t4,36(sp)
200134da:	5f02                	lw	t5,32(sp)
200134dc:	4ff2                	lw	t6,28(sp)
200134de:	6125                	addi	sp,sp,96
200134e0:	30200073          	mret

200134e4 <metal_lc5_interrupt_vector_handler>:
metal_lc5_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:239

/* The metal_lc5_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc5_interrupt_vector_handler(void) {
200134e4:	711d                	addi	sp,sp,-96
200134e6:	ce86                	sw	ra,92(sp)
200134e8:	cc96                	sw	t0,88(sp)
200134ea:	ca9a                	sw	t1,84(sp)
200134ec:	c89e                	sw	t2,80(sp)
200134ee:	c6a2                	sw	s0,76(sp)
200134f0:	c4aa                	sw	a0,72(sp)
200134f2:	c2ae                	sw	a1,68(sp)
200134f4:	c0b2                	sw	a2,64(sp)
200134f6:	de36                	sw	a3,60(sp)
200134f8:	dc3a                	sw	a4,56(sp)
200134fa:	da3e                	sw	a5,52(sp)
200134fc:	d842                	sw	a6,48(sp)
200134fe:	d646                	sw	a7,44(sp)
20013500:	d472                	sw	t3,40(sp)
20013502:	d276                	sw	t4,36(sp)
20013504:	d07a                	sw	t5,32(sp)
20013506:	ce7e                	sw	t6,28(sp)
20013508:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:240
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC5);
2001350a:	f42ff0ef          	jal	ra,20012c4c <__metal_myhart_id>
2001350e:	872a                	mv	a4,a0
20013510:	800017b7          	lui	a5,0x80001
20013514:	070a                	slli	a4,a4,0x2
20013516:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
2001351a:	97ba                	add	a5,a5,a4
2001351c:	439c                	lw	a5,0(a5)
2001351e:	faf42623          	sw	a5,-84(s0)
20013522:	fac42783          	lw	a5,-84(s0)
20013526:	c78d                	beqz	a5,20013550 <metal_lc5_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:240 (discriminator 1)
20013528:	fac42503          	lw	a0,-84(s0)
2001352c:	ea2ff0ef          	jal	ra,20012bce <__metal_driver_cpu_interrupt_controller>
20013530:	faa42423          	sw	a0,-88(s0)
20013534:	fa842783          	lw	a5,-88(s0)
20013538:	2907a783          	lw	a5,656(a5)
2001353c:	faf42223          	sw	a5,-92(s0)
20013540:	fa842783          	lw	a5,-88(s0)
20013544:	2887a783          	lw	a5,648(a5)
20013548:	fa442583          	lw	a1,-92(s0)
2001354c:	4555                	li	a0,21
2001354e:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:241
}
20013550:	0001                	nop
20013552:	40f6                	lw	ra,92(sp)
20013554:	42e6                	lw	t0,88(sp)
20013556:	4356                	lw	t1,84(sp)
20013558:	43c6                	lw	t2,80(sp)
2001355a:	4436                	lw	s0,76(sp)
2001355c:	4526                	lw	a0,72(sp)
2001355e:	4596                	lw	a1,68(sp)
20013560:	4606                	lw	a2,64(sp)
20013562:	56f2                	lw	a3,60(sp)
20013564:	5762                	lw	a4,56(sp)
20013566:	57d2                	lw	a5,52(sp)
20013568:	5842                	lw	a6,48(sp)
2001356a:	58b2                	lw	a7,44(sp)
2001356c:	5e22                	lw	t3,40(sp)
2001356e:	5e92                	lw	t4,36(sp)
20013570:	5f02                	lw	t5,32(sp)
20013572:	4ff2                	lw	t6,28(sp)
20013574:	6125                	addi	sp,sp,96
20013576:	30200073          	mret

2001357a <metal_lc6_interrupt_vector_handler>:
metal_lc6_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:244

/* The metal_lc6_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc6_interrupt_vector_handler(void) {
2001357a:	711d                	addi	sp,sp,-96
2001357c:	ce86                	sw	ra,92(sp)
2001357e:	cc96                	sw	t0,88(sp)
20013580:	ca9a                	sw	t1,84(sp)
20013582:	c89e                	sw	t2,80(sp)
20013584:	c6a2                	sw	s0,76(sp)
20013586:	c4aa                	sw	a0,72(sp)
20013588:	c2ae                	sw	a1,68(sp)
2001358a:	c0b2                	sw	a2,64(sp)
2001358c:	de36                	sw	a3,60(sp)
2001358e:	dc3a                	sw	a4,56(sp)
20013590:	da3e                	sw	a5,52(sp)
20013592:	d842                	sw	a6,48(sp)
20013594:	d646                	sw	a7,44(sp)
20013596:	d472                	sw	t3,40(sp)
20013598:	d276                	sw	t4,36(sp)
2001359a:	d07a                	sw	t5,32(sp)
2001359c:	ce7e                	sw	t6,28(sp)
2001359e:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:245
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC6);
200135a0:	eacff0ef          	jal	ra,20012c4c <__metal_myhart_id>
200135a4:	872a                	mv	a4,a0
200135a6:	800017b7          	lui	a5,0x80001
200135aa:	070a                	slli	a4,a4,0x2
200135ac:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
200135b0:	97ba                	add	a5,a5,a4
200135b2:	439c                	lw	a5,0(a5)
200135b4:	faf42623          	sw	a5,-84(s0)
200135b8:	fac42783          	lw	a5,-84(s0)
200135bc:	c78d                	beqz	a5,200135e6 <metal_lc6_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:245 (discriminator 1)
200135be:	fac42503          	lw	a0,-84(s0)
200135c2:	e0cff0ef          	jal	ra,20012bce <__metal_driver_cpu_interrupt_controller>
200135c6:	faa42423          	sw	a0,-88(s0)
200135ca:	fa842783          	lw	a5,-88(s0)
200135ce:	2a87a783          	lw	a5,680(a5)
200135d2:	faf42223          	sw	a5,-92(s0)
200135d6:	fa842783          	lw	a5,-88(s0)
200135da:	2a07a783          	lw	a5,672(a5)
200135de:	fa442583          	lw	a1,-92(s0)
200135e2:	4559                	li	a0,22
200135e4:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:246
}
200135e6:	0001                	nop
200135e8:	40f6                	lw	ra,92(sp)
200135ea:	42e6                	lw	t0,88(sp)
200135ec:	4356                	lw	t1,84(sp)
200135ee:	43c6                	lw	t2,80(sp)
200135f0:	4436                	lw	s0,76(sp)
200135f2:	4526                	lw	a0,72(sp)
200135f4:	4596                	lw	a1,68(sp)
200135f6:	4606                	lw	a2,64(sp)
200135f8:	56f2                	lw	a3,60(sp)
200135fa:	5762                	lw	a4,56(sp)
200135fc:	57d2                	lw	a5,52(sp)
200135fe:	5842                	lw	a6,48(sp)
20013600:	58b2                	lw	a7,44(sp)
20013602:	5e22                	lw	t3,40(sp)
20013604:	5e92                	lw	t4,36(sp)
20013606:	5f02                	lw	t5,32(sp)
20013608:	4ff2                	lw	t6,28(sp)
2001360a:	6125                	addi	sp,sp,96
2001360c:	30200073          	mret

20013610 <metal_lc7_interrupt_vector_handler>:
metal_lc7_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:249

/* The metal_lc7_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc7_interrupt_vector_handler(void) {
20013610:	711d                	addi	sp,sp,-96
20013612:	ce86                	sw	ra,92(sp)
20013614:	cc96                	sw	t0,88(sp)
20013616:	ca9a                	sw	t1,84(sp)
20013618:	c89e                	sw	t2,80(sp)
2001361a:	c6a2                	sw	s0,76(sp)
2001361c:	c4aa                	sw	a0,72(sp)
2001361e:	c2ae                	sw	a1,68(sp)
20013620:	c0b2                	sw	a2,64(sp)
20013622:	de36                	sw	a3,60(sp)
20013624:	dc3a                	sw	a4,56(sp)
20013626:	da3e                	sw	a5,52(sp)
20013628:	d842                	sw	a6,48(sp)
2001362a:	d646                	sw	a7,44(sp)
2001362c:	d472                	sw	t3,40(sp)
2001362e:	d276                	sw	t4,36(sp)
20013630:	d07a                	sw	t5,32(sp)
20013632:	ce7e                	sw	t6,28(sp)
20013634:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:250
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC7);
20013636:	e16ff0ef          	jal	ra,20012c4c <__metal_myhart_id>
2001363a:	872a                	mv	a4,a0
2001363c:	800017b7          	lui	a5,0x80001
20013640:	070a                	slli	a4,a4,0x2
20013642:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20013646:	97ba                	add	a5,a5,a4
20013648:	439c                	lw	a5,0(a5)
2001364a:	faf42623          	sw	a5,-84(s0)
2001364e:	fac42783          	lw	a5,-84(s0)
20013652:	c78d                	beqz	a5,2001367c <metal_lc7_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:250 (discriminator 1)
20013654:	fac42503          	lw	a0,-84(s0)
20013658:	d76ff0ef          	jal	ra,20012bce <__metal_driver_cpu_interrupt_controller>
2001365c:	faa42423          	sw	a0,-88(s0)
20013660:	fa842783          	lw	a5,-88(s0)
20013664:	2c07a783          	lw	a5,704(a5)
20013668:	faf42223          	sw	a5,-92(s0)
2001366c:	fa842783          	lw	a5,-88(s0)
20013670:	2b87a783          	lw	a5,696(a5)
20013674:	fa442583          	lw	a1,-92(s0)
20013678:	455d                	li	a0,23
2001367a:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:251
}
2001367c:	0001                	nop
2001367e:	40f6                	lw	ra,92(sp)
20013680:	42e6                	lw	t0,88(sp)
20013682:	4356                	lw	t1,84(sp)
20013684:	43c6                	lw	t2,80(sp)
20013686:	4436                	lw	s0,76(sp)
20013688:	4526                	lw	a0,72(sp)
2001368a:	4596                	lw	a1,68(sp)
2001368c:	4606                	lw	a2,64(sp)
2001368e:	56f2                	lw	a3,60(sp)
20013690:	5762                	lw	a4,56(sp)
20013692:	57d2                	lw	a5,52(sp)
20013694:	5842                	lw	a6,48(sp)
20013696:	58b2                	lw	a7,44(sp)
20013698:	5e22                	lw	t3,40(sp)
2001369a:	5e92                	lw	t4,36(sp)
2001369c:	5f02                	lw	t5,32(sp)
2001369e:	4ff2                	lw	t6,28(sp)
200136a0:	6125                	addi	sp,sp,96
200136a2:	30200073          	mret

200136a6 <metal_lc8_interrupt_vector_handler>:
metal_lc8_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:254

/* The metal_lc8_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc8_interrupt_vector_handler(void) {
200136a6:	711d                	addi	sp,sp,-96
200136a8:	ce86                	sw	ra,92(sp)
200136aa:	cc96                	sw	t0,88(sp)
200136ac:	ca9a                	sw	t1,84(sp)
200136ae:	c89e                	sw	t2,80(sp)
200136b0:	c6a2                	sw	s0,76(sp)
200136b2:	c4aa                	sw	a0,72(sp)
200136b4:	c2ae                	sw	a1,68(sp)
200136b6:	c0b2                	sw	a2,64(sp)
200136b8:	de36                	sw	a3,60(sp)
200136ba:	dc3a                	sw	a4,56(sp)
200136bc:	da3e                	sw	a5,52(sp)
200136be:	d842                	sw	a6,48(sp)
200136c0:	d646                	sw	a7,44(sp)
200136c2:	d472                	sw	t3,40(sp)
200136c4:	d276                	sw	t4,36(sp)
200136c6:	d07a                	sw	t5,32(sp)
200136c8:	ce7e                	sw	t6,28(sp)
200136ca:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:255
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC8);
200136cc:	d80ff0ef          	jal	ra,20012c4c <__metal_myhart_id>
200136d0:	872a                	mv	a4,a0
200136d2:	800017b7          	lui	a5,0x80001
200136d6:	070a                	slli	a4,a4,0x2
200136d8:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
200136dc:	97ba                	add	a5,a5,a4
200136de:	439c                	lw	a5,0(a5)
200136e0:	faf42623          	sw	a5,-84(s0)
200136e4:	fac42783          	lw	a5,-84(s0)
200136e8:	c78d                	beqz	a5,20013712 <metal_lc8_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:255 (discriminator 1)
200136ea:	fac42503          	lw	a0,-84(s0)
200136ee:	ce0ff0ef          	jal	ra,20012bce <__metal_driver_cpu_interrupt_controller>
200136f2:	faa42423          	sw	a0,-88(s0)
200136f6:	fa842783          	lw	a5,-88(s0)
200136fa:	2d87a783          	lw	a5,728(a5)
200136fe:	faf42223          	sw	a5,-92(s0)
20013702:	fa842783          	lw	a5,-88(s0)
20013706:	2d07a783          	lw	a5,720(a5)
2001370a:	fa442583          	lw	a1,-92(s0)
2001370e:	4561                	li	a0,24
20013710:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:256
}
20013712:	0001                	nop
20013714:	40f6                	lw	ra,92(sp)
20013716:	42e6                	lw	t0,88(sp)
20013718:	4356                	lw	t1,84(sp)
2001371a:	43c6                	lw	t2,80(sp)
2001371c:	4436                	lw	s0,76(sp)
2001371e:	4526                	lw	a0,72(sp)
20013720:	4596                	lw	a1,68(sp)
20013722:	4606                	lw	a2,64(sp)
20013724:	56f2                	lw	a3,60(sp)
20013726:	5762                	lw	a4,56(sp)
20013728:	57d2                	lw	a5,52(sp)
2001372a:	5842                	lw	a6,48(sp)
2001372c:	58b2                	lw	a7,44(sp)
2001372e:	5e22                	lw	t3,40(sp)
20013730:	5e92                	lw	t4,36(sp)
20013732:	5f02                	lw	t5,32(sp)
20013734:	4ff2                	lw	t6,28(sp)
20013736:	6125                	addi	sp,sp,96
20013738:	30200073          	mret

2001373c <metal_lc9_interrupt_vector_handler>:
metal_lc9_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:259

/* The metal_lc9_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc9_interrupt_vector_handler(void) {
2001373c:	711d                	addi	sp,sp,-96
2001373e:	ce86                	sw	ra,92(sp)
20013740:	cc96                	sw	t0,88(sp)
20013742:	ca9a                	sw	t1,84(sp)
20013744:	c89e                	sw	t2,80(sp)
20013746:	c6a2                	sw	s0,76(sp)
20013748:	c4aa                	sw	a0,72(sp)
2001374a:	c2ae                	sw	a1,68(sp)
2001374c:	c0b2                	sw	a2,64(sp)
2001374e:	de36                	sw	a3,60(sp)
20013750:	dc3a                	sw	a4,56(sp)
20013752:	da3e                	sw	a5,52(sp)
20013754:	d842                	sw	a6,48(sp)
20013756:	d646                	sw	a7,44(sp)
20013758:	d472                	sw	t3,40(sp)
2001375a:	d276                	sw	t4,36(sp)
2001375c:	d07a                	sw	t5,32(sp)
2001375e:	ce7e                	sw	t6,28(sp)
20013760:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:260
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC9);
20013762:	ceaff0ef          	jal	ra,20012c4c <__metal_myhart_id>
20013766:	872a                	mv	a4,a0
20013768:	800017b7          	lui	a5,0x80001
2001376c:	070a                	slli	a4,a4,0x2
2001376e:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20013772:	97ba                	add	a5,a5,a4
20013774:	439c                	lw	a5,0(a5)
20013776:	faf42623          	sw	a5,-84(s0)
2001377a:	fac42783          	lw	a5,-84(s0)
2001377e:	c78d                	beqz	a5,200137a8 <metal_lc9_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:260 (discriminator 1)
20013780:	fac42503          	lw	a0,-84(s0)
20013784:	c4aff0ef          	jal	ra,20012bce <__metal_driver_cpu_interrupt_controller>
20013788:	faa42423          	sw	a0,-88(s0)
2001378c:	fa842783          	lw	a5,-88(s0)
20013790:	2f07a783          	lw	a5,752(a5)
20013794:	faf42223          	sw	a5,-92(s0)
20013798:	fa842783          	lw	a5,-88(s0)
2001379c:	2e87a783          	lw	a5,744(a5)
200137a0:	fa442583          	lw	a1,-92(s0)
200137a4:	4565                	li	a0,25
200137a6:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:261
}
200137a8:	0001                	nop
200137aa:	40f6                	lw	ra,92(sp)
200137ac:	42e6                	lw	t0,88(sp)
200137ae:	4356                	lw	t1,84(sp)
200137b0:	43c6                	lw	t2,80(sp)
200137b2:	4436                	lw	s0,76(sp)
200137b4:	4526                	lw	a0,72(sp)
200137b6:	4596                	lw	a1,68(sp)
200137b8:	4606                	lw	a2,64(sp)
200137ba:	56f2                	lw	a3,60(sp)
200137bc:	5762                	lw	a4,56(sp)
200137be:	57d2                	lw	a5,52(sp)
200137c0:	5842                	lw	a6,48(sp)
200137c2:	58b2                	lw	a7,44(sp)
200137c4:	5e22                	lw	t3,40(sp)
200137c6:	5e92                	lw	t4,36(sp)
200137c8:	5f02                	lw	t5,32(sp)
200137ca:	4ff2                	lw	t6,28(sp)
200137cc:	6125                	addi	sp,sp,96
200137ce:	30200073          	mret

200137d2 <metal_lc10_interrupt_vector_handler>:
metal_lc10_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:265

/* The metal_lc10_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc10_interrupt_vector_handler(void) {
200137d2:	711d                	addi	sp,sp,-96
200137d4:	ce86                	sw	ra,92(sp)
200137d6:	cc96                	sw	t0,88(sp)
200137d8:	ca9a                	sw	t1,84(sp)
200137da:	c89e                	sw	t2,80(sp)
200137dc:	c6a2                	sw	s0,76(sp)
200137de:	c4aa                	sw	a0,72(sp)
200137e0:	c2ae                	sw	a1,68(sp)
200137e2:	c0b2                	sw	a2,64(sp)
200137e4:	de36                	sw	a3,60(sp)
200137e6:	dc3a                	sw	a4,56(sp)
200137e8:	da3e                	sw	a5,52(sp)
200137ea:	d842                	sw	a6,48(sp)
200137ec:	d646                	sw	a7,44(sp)
200137ee:	d472                	sw	t3,40(sp)
200137f0:	d276                	sw	t4,36(sp)
200137f2:	d07a                	sw	t5,32(sp)
200137f4:	ce7e                	sw	t6,28(sp)
200137f6:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:266
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC10);
200137f8:	c54ff0ef          	jal	ra,20012c4c <__metal_myhart_id>
200137fc:	872a                	mv	a4,a0
200137fe:	800017b7          	lui	a5,0x80001
20013802:	070a                	slli	a4,a4,0x2
20013804:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20013808:	97ba                	add	a5,a5,a4
2001380a:	439c                	lw	a5,0(a5)
2001380c:	faf42623          	sw	a5,-84(s0)
20013810:	fac42783          	lw	a5,-84(s0)
20013814:	c78d                	beqz	a5,2001383e <metal_lc10_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:266 (discriminator 1)
20013816:	fac42503          	lw	a0,-84(s0)
2001381a:	bb4ff0ef          	jal	ra,20012bce <__metal_driver_cpu_interrupt_controller>
2001381e:	faa42423          	sw	a0,-88(s0)
20013822:	fa842783          	lw	a5,-88(s0)
20013826:	3087a783          	lw	a5,776(a5)
2001382a:	faf42223          	sw	a5,-92(s0)
2001382e:	fa842783          	lw	a5,-88(s0)
20013832:	3007a783          	lw	a5,768(a5)
20013836:	fa442583          	lw	a1,-92(s0)
2001383a:	4569                	li	a0,26
2001383c:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:267
}
2001383e:	0001                	nop
20013840:	40f6                	lw	ra,92(sp)
20013842:	42e6                	lw	t0,88(sp)
20013844:	4356                	lw	t1,84(sp)
20013846:	43c6                	lw	t2,80(sp)
20013848:	4436                	lw	s0,76(sp)
2001384a:	4526                	lw	a0,72(sp)
2001384c:	4596                	lw	a1,68(sp)
2001384e:	4606                	lw	a2,64(sp)
20013850:	56f2                	lw	a3,60(sp)
20013852:	5762                	lw	a4,56(sp)
20013854:	57d2                	lw	a5,52(sp)
20013856:	5842                	lw	a6,48(sp)
20013858:	58b2                	lw	a7,44(sp)
2001385a:	5e22                	lw	t3,40(sp)
2001385c:	5e92                	lw	t4,36(sp)
2001385e:	5f02                	lw	t5,32(sp)
20013860:	4ff2                	lw	t6,28(sp)
20013862:	6125                	addi	sp,sp,96
20013864:	30200073          	mret

20013868 <metal_lc11_interrupt_vector_handler>:
metal_lc11_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:271

/* The metal_lc11_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc11_interrupt_vector_handler(void) {
20013868:	711d                	addi	sp,sp,-96
2001386a:	ce86                	sw	ra,92(sp)
2001386c:	cc96                	sw	t0,88(sp)
2001386e:	ca9a                	sw	t1,84(sp)
20013870:	c89e                	sw	t2,80(sp)
20013872:	c6a2                	sw	s0,76(sp)
20013874:	c4aa                	sw	a0,72(sp)
20013876:	c2ae                	sw	a1,68(sp)
20013878:	c0b2                	sw	a2,64(sp)
2001387a:	de36                	sw	a3,60(sp)
2001387c:	dc3a                	sw	a4,56(sp)
2001387e:	da3e                	sw	a5,52(sp)
20013880:	d842                	sw	a6,48(sp)
20013882:	d646                	sw	a7,44(sp)
20013884:	d472                	sw	t3,40(sp)
20013886:	d276                	sw	t4,36(sp)
20013888:	d07a                	sw	t5,32(sp)
2001388a:	ce7e                	sw	t6,28(sp)
2001388c:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:272
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC11);
2001388e:	bbeff0ef          	jal	ra,20012c4c <__metal_myhart_id>
20013892:	872a                	mv	a4,a0
20013894:	800017b7          	lui	a5,0x80001
20013898:	070a                	slli	a4,a4,0x2
2001389a:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
2001389e:	97ba                	add	a5,a5,a4
200138a0:	439c                	lw	a5,0(a5)
200138a2:	faf42623          	sw	a5,-84(s0)
200138a6:	fac42783          	lw	a5,-84(s0)
200138aa:	c78d                	beqz	a5,200138d4 <metal_lc11_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:272 (discriminator 1)
200138ac:	fac42503          	lw	a0,-84(s0)
200138b0:	b1eff0ef          	jal	ra,20012bce <__metal_driver_cpu_interrupt_controller>
200138b4:	faa42423          	sw	a0,-88(s0)
200138b8:	fa842783          	lw	a5,-88(s0)
200138bc:	3207a783          	lw	a5,800(a5)
200138c0:	faf42223          	sw	a5,-92(s0)
200138c4:	fa842783          	lw	a5,-88(s0)
200138c8:	3187a783          	lw	a5,792(a5)
200138cc:	fa442583          	lw	a1,-92(s0)
200138d0:	456d                	li	a0,27
200138d2:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:273
}
200138d4:	0001                	nop
200138d6:	40f6                	lw	ra,92(sp)
200138d8:	42e6                	lw	t0,88(sp)
200138da:	4356                	lw	t1,84(sp)
200138dc:	43c6                	lw	t2,80(sp)
200138de:	4436                	lw	s0,76(sp)
200138e0:	4526                	lw	a0,72(sp)
200138e2:	4596                	lw	a1,68(sp)
200138e4:	4606                	lw	a2,64(sp)
200138e6:	56f2                	lw	a3,60(sp)
200138e8:	5762                	lw	a4,56(sp)
200138ea:	57d2                	lw	a5,52(sp)
200138ec:	5842                	lw	a6,48(sp)
200138ee:	58b2                	lw	a7,44(sp)
200138f0:	5e22                	lw	t3,40(sp)
200138f2:	5e92                	lw	t4,36(sp)
200138f4:	5f02                	lw	t5,32(sp)
200138f6:	4ff2                	lw	t6,28(sp)
200138f8:	6125                	addi	sp,sp,96
200138fa:	30200073          	mret

200138fe <metal_lc12_interrupt_vector_handler>:
metal_lc12_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:277

/* The metal_lc12_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc12_interrupt_vector_handler(void) {
200138fe:	711d                	addi	sp,sp,-96
20013900:	ce86                	sw	ra,92(sp)
20013902:	cc96                	sw	t0,88(sp)
20013904:	ca9a                	sw	t1,84(sp)
20013906:	c89e                	sw	t2,80(sp)
20013908:	c6a2                	sw	s0,76(sp)
2001390a:	c4aa                	sw	a0,72(sp)
2001390c:	c2ae                	sw	a1,68(sp)
2001390e:	c0b2                	sw	a2,64(sp)
20013910:	de36                	sw	a3,60(sp)
20013912:	dc3a                	sw	a4,56(sp)
20013914:	da3e                	sw	a5,52(sp)
20013916:	d842                	sw	a6,48(sp)
20013918:	d646                	sw	a7,44(sp)
2001391a:	d472                	sw	t3,40(sp)
2001391c:	d276                	sw	t4,36(sp)
2001391e:	d07a                	sw	t5,32(sp)
20013920:	ce7e                	sw	t6,28(sp)
20013922:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:278
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC12);
20013924:	b28ff0ef          	jal	ra,20012c4c <__metal_myhart_id>
20013928:	872a                	mv	a4,a0
2001392a:	800017b7          	lui	a5,0x80001
2001392e:	070a                	slli	a4,a4,0x2
20013930:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20013934:	97ba                	add	a5,a5,a4
20013936:	439c                	lw	a5,0(a5)
20013938:	faf42623          	sw	a5,-84(s0)
2001393c:	fac42783          	lw	a5,-84(s0)
20013940:	c78d                	beqz	a5,2001396a <metal_lc12_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:278 (discriminator 1)
20013942:	fac42503          	lw	a0,-84(s0)
20013946:	a88ff0ef          	jal	ra,20012bce <__metal_driver_cpu_interrupt_controller>
2001394a:	faa42423          	sw	a0,-88(s0)
2001394e:	fa842783          	lw	a5,-88(s0)
20013952:	3387a783          	lw	a5,824(a5)
20013956:	faf42223          	sw	a5,-92(s0)
2001395a:	fa842783          	lw	a5,-88(s0)
2001395e:	3307a783          	lw	a5,816(a5)
20013962:	fa442583          	lw	a1,-92(s0)
20013966:	4571                	li	a0,28
20013968:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:279
}
2001396a:	0001                	nop
2001396c:	40f6                	lw	ra,92(sp)
2001396e:	42e6                	lw	t0,88(sp)
20013970:	4356                	lw	t1,84(sp)
20013972:	43c6                	lw	t2,80(sp)
20013974:	4436                	lw	s0,76(sp)
20013976:	4526                	lw	a0,72(sp)
20013978:	4596                	lw	a1,68(sp)
2001397a:	4606                	lw	a2,64(sp)
2001397c:	56f2                	lw	a3,60(sp)
2001397e:	5762                	lw	a4,56(sp)
20013980:	57d2                	lw	a5,52(sp)
20013982:	5842                	lw	a6,48(sp)
20013984:	58b2                	lw	a7,44(sp)
20013986:	5e22                	lw	t3,40(sp)
20013988:	5e92                	lw	t4,36(sp)
2001398a:	5f02                	lw	t5,32(sp)
2001398c:	4ff2                	lw	t6,28(sp)
2001398e:	6125                	addi	sp,sp,96
20013990:	30200073          	mret

20013994 <metal_lc13_interrupt_vector_handler>:
metal_lc13_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:283

/* The metal_lc13_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc13_interrupt_vector_handler(void) {
20013994:	711d                	addi	sp,sp,-96
20013996:	ce86                	sw	ra,92(sp)
20013998:	cc96                	sw	t0,88(sp)
2001399a:	ca9a                	sw	t1,84(sp)
2001399c:	c89e                	sw	t2,80(sp)
2001399e:	c6a2                	sw	s0,76(sp)
200139a0:	c4aa                	sw	a0,72(sp)
200139a2:	c2ae                	sw	a1,68(sp)
200139a4:	c0b2                	sw	a2,64(sp)
200139a6:	de36                	sw	a3,60(sp)
200139a8:	dc3a                	sw	a4,56(sp)
200139aa:	da3e                	sw	a5,52(sp)
200139ac:	d842                	sw	a6,48(sp)
200139ae:	d646                	sw	a7,44(sp)
200139b0:	d472                	sw	t3,40(sp)
200139b2:	d276                	sw	t4,36(sp)
200139b4:	d07a                	sw	t5,32(sp)
200139b6:	ce7e                	sw	t6,28(sp)
200139b8:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:284
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC13);
200139ba:	a92ff0ef          	jal	ra,20012c4c <__metal_myhart_id>
200139be:	872a                	mv	a4,a0
200139c0:	800017b7          	lui	a5,0x80001
200139c4:	070a                	slli	a4,a4,0x2
200139c6:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
200139ca:	97ba                	add	a5,a5,a4
200139cc:	439c                	lw	a5,0(a5)
200139ce:	faf42623          	sw	a5,-84(s0)
200139d2:	fac42783          	lw	a5,-84(s0)
200139d6:	c78d                	beqz	a5,20013a00 <metal_lc13_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:284 (discriminator 1)
200139d8:	fac42503          	lw	a0,-84(s0)
200139dc:	9f2ff0ef          	jal	ra,20012bce <__metal_driver_cpu_interrupt_controller>
200139e0:	faa42423          	sw	a0,-88(s0)
200139e4:	fa842783          	lw	a5,-88(s0)
200139e8:	3507a783          	lw	a5,848(a5)
200139ec:	faf42223          	sw	a5,-92(s0)
200139f0:	fa842783          	lw	a5,-88(s0)
200139f4:	3487a783          	lw	a5,840(a5)
200139f8:	fa442583          	lw	a1,-92(s0)
200139fc:	4575                	li	a0,29
200139fe:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:285
}
20013a00:	0001                	nop
20013a02:	40f6                	lw	ra,92(sp)
20013a04:	42e6                	lw	t0,88(sp)
20013a06:	4356                	lw	t1,84(sp)
20013a08:	43c6                	lw	t2,80(sp)
20013a0a:	4436                	lw	s0,76(sp)
20013a0c:	4526                	lw	a0,72(sp)
20013a0e:	4596                	lw	a1,68(sp)
20013a10:	4606                	lw	a2,64(sp)
20013a12:	56f2                	lw	a3,60(sp)
20013a14:	5762                	lw	a4,56(sp)
20013a16:	57d2                	lw	a5,52(sp)
20013a18:	5842                	lw	a6,48(sp)
20013a1a:	58b2                	lw	a7,44(sp)
20013a1c:	5e22                	lw	t3,40(sp)
20013a1e:	5e92                	lw	t4,36(sp)
20013a20:	5f02                	lw	t5,32(sp)
20013a22:	4ff2                	lw	t6,28(sp)
20013a24:	6125                	addi	sp,sp,96
20013a26:	30200073          	mret

20013a2a <metal_lc14_interrupt_vector_handler>:
metal_lc14_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:289

/* The metal_lc14_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc14_interrupt_vector_handler(void) {
20013a2a:	711d                	addi	sp,sp,-96
20013a2c:	ce86                	sw	ra,92(sp)
20013a2e:	cc96                	sw	t0,88(sp)
20013a30:	ca9a                	sw	t1,84(sp)
20013a32:	c89e                	sw	t2,80(sp)
20013a34:	c6a2                	sw	s0,76(sp)
20013a36:	c4aa                	sw	a0,72(sp)
20013a38:	c2ae                	sw	a1,68(sp)
20013a3a:	c0b2                	sw	a2,64(sp)
20013a3c:	de36                	sw	a3,60(sp)
20013a3e:	dc3a                	sw	a4,56(sp)
20013a40:	da3e                	sw	a5,52(sp)
20013a42:	d842                	sw	a6,48(sp)
20013a44:	d646                	sw	a7,44(sp)
20013a46:	d472                	sw	t3,40(sp)
20013a48:	d276                	sw	t4,36(sp)
20013a4a:	d07a                	sw	t5,32(sp)
20013a4c:	ce7e                	sw	t6,28(sp)
20013a4e:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:290
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC14);
20013a50:	9fcff0ef          	jal	ra,20012c4c <__metal_myhart_id>
20013a54:	872a                	mv	a4,a0
20013a56:	800017b7          	lui	a5,0x80001
20013a5a:	070a                	slli	a4,a4,0x2
20013a5c:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20013a60:	97ba                	add	a5,a5,a4
20013a62:	439c                	lw	a5,0(a5)
20013a64:	faf42623          	sw	a5,-84(s0)
20013a68:	fac42783          	lw	a5,-84(s0)
20013a6c:	c78d                	beqz	a5,20013a96 <metal_lc14_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:290 (discriminator 1)
20013a6e:	fac42503          	lw	a0,-84(s0)
20013a72:	95cff0ef          	jal	ra,20012bce <__metal_driver_cpu_interrupt_controller>
20013a76:	faa42423          	sw	a0,-88(s0)
20013a7a:	fa842783          	lw	a5,-88(s0)
20013a7e:	3687a783          	lw	a5,872(a5)
20013a82:	faf42223          	sw	a5,-92(s0)
20013a86:	fa842783          	lw	a5,-88(s0)
20013a8a:	3607a783          	lw	a5,864(a5)
20013a8e:	fa442583          	lw	a1,-92(s0)
20013a92:	4579                	li	a0,30
20013a94:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:291
}
20013a96:	0001                	nop
20013a98:	40f6                	lw	ra,92(sp)
20013a9a:	42e6                	lw	t0,88(sp)
20013a9c:	4356                	lw	t1,84(sp)
20013a9e:	43c6                	lw	t2,80(sp)
20013aa0:	4436                	lw	s0,76(sp)
20013aa2:	4526                	lw	a0,72(sp)
20013aa4:	4596                	lw	a1,68(sp)
20013aa6:	4606                	lw	a2,64(sp)
20013aa8:	56f2                	lw	a3,60(sp)
20013aaa:	5762                	lw	a4,56(sp)
20013aac:	57d2                	lw	a5,52(sp)
20013aae:	5842                	lw	a6,48(sp)
20013ab0:	58b2                	lw	a7,44(sp)
20013ab2:	5e22                	lw	t3,40(sp)
20013ab4:	5e92                	lw	t4,36(sp)
20013ab6:	5f02                	lw	t5,32(sp)
20013ab8:	4ff2                	lw	t6,28(sp)
20013aba:	6125                	addi	sp,sp,96
20013abc:	30200073          	mret

20013ac0 <metal_lc15_interrupt_vector_handler>:
metal_lc15_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:295

/* The metal_lc15_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc15_interrupt_vector_handler(void) {
20013ac0:	711d                	addi	sp,sp,-96
20013ac2:	ce86                	sw	ra,92(sp)
20013ac4:	cc96                	sw	t0,88(sp)
20013ac6:	ca9a                	sw	t1,84(sp)
20013ac8:	c89e                	sw	t2,80(sp)
20013aca:	c6a2                	sw	s0,76(sp)
20013acc:	c4aa                	sw	a0,72(sp)
20013ace:	c2ae                	sw	a1,68(sp)
20013ad0:	c0b2                	sw	a2,64(sp)
20013ad2:	de36                	sw	a3,60(sp)
20013ad4:	dc3a                	sw	a4,56(sp)
20013ad6:	da3e                	sw	a5,52(sp)
20013ad8:	d842                	sw	a6,48(sp)
20013ada:	d646                	sw	a7,44(sp)
20013adc:	d472                	sw	t3,40(sp)
20013ade:	d276                	sw	t4,36(sp)
20013ae0:	d07a                	sw	t5,32(sp)
20013ae2:	ce7e                	sw	t6,28(sp)
20013ae4:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:296
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC15);
20013ae6:	966ff0ef          	jal	ra,20012c4c <__metal_myhart_id>
20013aea:	872a                	mv	a4,a0
20013aec:	800017b7          	lui	a5,0x80001
20013af0:	070a                	slli	a4,a4,0x2
20013af2:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20013af6:	97ba                	add	a5,a5,a4
20013af8:	439c                	lw	a5,0(a5)
20013afa:	faf42623          	sw	a5,-84(s0)
20013afe:	fac42783          	lw	a5,-84(s0)
20013b02:	c78d                	beqz	a5,20013b2c <metal_lc15_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:296 (discriminator 1)
20013b04:	fac42503          	lw	a0,-84(s0)
20013b08:	8c6ff0ef          	jal	ra,20012bce <__metal_driver_cpu_interrupt_controller>
20013b0c:	faa42423          	sw	a0,-88(s0)
20013b10:	fa842783          	lw	a5,-88(s0)
20013b14:	3807a783          	lw	a5,896(a5)
20013b18:	faf42223          	sw	a5,-92(s0)
20013b1c:	fa842783          	lw	a5,-88(s0)
20013b20:	3787a783          	lw	a5,888(a5)
20013b24:	fa442583          	lw	a1,-92(s0)
20013b28:	457d                	li	a0,31
20013b2a:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:297
}
20013b2c:	0001                	nop
20013b2e:	40f6                	lw	ra,92(sp)
20013b30:	42e6                	lw	t0,88(sp)
20013b32:	4356                	lw	t1,84(sp)
20013b34:	43c6                	lw	t2,80(sp)
20013b36:	4436                	lw	s0,76(sp)
20013b38:	4526                	lw	a0,72(sp)
20013b3a:	4596                	lw	a1,68(sp)
20013b3c:	4606                	lw	a2,64(sp)
20013b3e:	56f2                	lw	a3,60(sp)
20013b40:	5762                	lw	a4,56(sp)
20013b42:	57d2                	lw	a5,52(sp)
20013b44:	5842                	lw	a6,48(sp)
20013b46:	58b2                	lw	a7,44(sp)
20013b48:	5e22                	lw	t3,40(sp)
20013b4a:	5e92                	lw	t4,36(sp)
20013b4c:	5f02                	lw	t5,32(sp)
20013b4e:	4ff2                	lw	t6,28(sp)
20013b50:	6125                	addi	sp,sp,96
20013b52:	30200073          	mret

20013b56 <__metal_controller_interrupt_vector_mode>:
__metal_controller_interrupt_vector_mode():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:299

metal_vector_mode __metal_controller_interrupt_vector_mode(void) {
20013b56:	1101                	addi	sp,sp,-32
20013b58:	ce22                	sw	s0,28(sp)
20013b5a:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:302
    uintptr_t val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
20013b5c:	305027f3          	csrr	a5,mtvec
20013b60:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:303
    val &= METAL_MTVEC_MASK;
20013b64:	fec42783          	lw	a5,-20(s0)
20013b68:	03f7f793          	andi	a5,a5,63
20013b6c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:305

    switch (val) {
20013b70:	fec42703          	lw	a4,-20(s0)
20013b74:	4789                	li	a5,2
20013b76:	00f70d63          	beq	a4,a5,20013b90 <__metal_controller_interrupt_vector_mode+0x3a>
20013b7a:	fec42703          	lw	a4,-20(s0)
20013b7e:	478d                	li	a5,3
20013b80:	00f70a63          	beq	a4,a5,20013b94 <__metal_controller_interrupt_vector_mode+0x3e>
20013b84:	fec42703          	lw	a4,-20(s0)
20013b88:	4785                	li	a5,1
20013b8a:	00f70763          	beq	a4,a5,20013b98 <__metal_controller_interrupt_vector_mode+0x42>
20013b8e:	a039                	j	20013b9c <__metal_controller_interrupt_vector_mode+0x46>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:307
    case METAL_MTVEC_CLIC:
        return METAL_SELECTIVE_VECTOR_MODE;
20013b90:	478d                	li	a5,3
20013b92:	a031                	j	20013b9e <__metal_controller_interrupt_vector_mode+0x48>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:309
    case METAL_MTVEC_CLIC_VECTORED:
        return METAL_HARDWARE_VECTOR_MODE;
20013b94:	4791                	li	a5,4
20013b96:	a021                	j	20013b9e <__metal_controller_interrupt_vector_mode+0x48>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:311
    case METAL_MTVEC_VECTORED:
        return METAL_VECTOR_MODE;
20013b98:	4785                	li	a5,1
20013b9a:	a011                	j	20013b9e <__metal_controller_interrupt_vector_mode+0x48>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:313
    }
    return METAL_DIRECT_MODE;
20013b9c:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:314
}
20013b9e:	853e                	mv	a0,a5
20013ba0:	4472                	lw	s0,28(sp)
20013ba2:	6105                	addi	sp,sp,32
20013ba4:	8082                	ret

20013ba6 <__metal_controller_interrupt_vector>:
__metal_controller_interrupt_vector():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:317

void __metal_controller_interrupt_vector(metal_vector_mode mode,
                                         void *vec_table) {
20013ba6:	7179                	addi	sp,sp,-48
20013ba8:	d622                	sw	s0,44(sp)
20013baa:	1800                	addi	s0,sp,48
20013bac:	fca42e23          	sw	a0,-36(s0)
20013bb0:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:320
    uintptr_t trap_entry, val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
20013bb4:	305027f3          	csrr	a5,mtvec
20013bb8:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:321
    val &= ~(METAL_MTVEC_CLIC_VECTORED | METAL_MTVEC_CLIC_RESERVED);
20013bbc:	fec42783          	lw	a5,-20(s0)
20013bc0:	fc07f793          	andi	a5,a5,-64
20013bc4:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:322
    trap_entry = (uintptr_t)vec_table;
20013bc8:	fd842783          	lw	a5,-40(s0)
20013bcc:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:324

    switch (mode) {
20013bd0:	fdc42703          	lw	a4,-36(s0)
20013bd4:	4791                	li	a5,4
20013bd6:	06e7e063          	bltu	a5,a4,20013c36 <__metal_controller_interrupt_vector+0x90>
20013bda:	fdc42783          	lw	a5,-36(s0)
20013bde:	00279713          	slli	a4,a5,0x2
20013be2:	200107b7          	lui	a5,0x20010
20013be6:	50c78793          	addi	a5,a5,1292 # 2001050c <__metal_driver_vtable_riscv_clint0+0x64>
20013bea:	97ba                	add	a5,a5,a4
20013bec:	439c                	lw	a5,0(a5)
20013bee:	8782                	jr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:327
    case METAL_SELECTIVE_NONVECTOR_MODE:
    case METAL_SELECTIVE_VECTOR_MODE:
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
20013bf0:	fe842783          	lw	a5,-24(s0)
20013bf4:	30779073          	csrw	mtvt,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:328
        __asm__ volatile("csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC));
20013bf8:	fec42783          	lw	a5,-20(s0)
20013bfc:	0027e793          	ori	a5,a5,2
20013c00:	30579073          	csrw	mtvec,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:329
        break;
20013c04:	a80d                	j	20013c36 <__metal_controller_interrupt_vector+0x90>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:331
    case METAL_HARDWARE_VECTOR_MODE:
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
20013c06:	fe842783          	lw	a5,-24(s0)
20013c0a:	30779073          	csrw	mtvt,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:333
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC_VECTORED));
20013c0e:	fec42783          	lw	a5,-20(s0)
20013c12:	0037e793          	ori	a5,a5,3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:332
        __asm__ volatile(
20013c16:	30579073          	csrw	mtvec,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:334
        break;
20013c1a:	a831                	j	20013c36 <__metal_controller_interrupt_vector+0x90>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:337
    case METAL_VECTOR_MODE:
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(trap_entry | METAL_MTVEC_VECTORED));
20013c1c:	fe842783          	lw	a5,-24(s0)
20013c20:	0017e793          	ori	a5,a5,1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:336
        __asm__ volatile(
20013c24:	30579073          	csrw	mtvec,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:338
        break;
20013c28:	a039                	j	20013c36 <__metal_controller_interrupt_vector+0x90>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:341
    case METAL_DIRECT_MODE:
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
20013c2a:	fe842783          	lw	a5,-24(s0)
20013c2e:	9bf1                	andi	a5,a5,-4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:340
        __asm__ volatile(
20013c30:	30579073          	csrw	mtvec,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:342
        break;
20013c34:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:344
    }
}
20013c36:	0001                	nop
20013c38:	5432                	lw	s0,44(sp)
20013c3a:	6145                	addi	sp,sp,48
20013c3c:	8082                	ret

20013c3e <__metal_valid_interrupt_id>:
__metal_valid_interrupt_id():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:346

int __metal_valid_interrupt_id(int id) {
20013c3e:	1101                	addi	sp,sp,-32
20013c40:	ce22                	sw	s0,28(sp)
20013c42:	1000                	addi	s0,sp,32
20013c44:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
20013c48:	fec42703          	lw	a4,-20(s0)
20013c4c:	47ad                	li	a5,11
20013c4e:	04f70263          	beq	a4,a5,20013c92 <__metal_valid_interrupt_id+0x54>
20013c52:	fec42703          	lw	a4,-20(s0)
20013c56:	47ad                	li	a5,11
20013c58:	00e7cd63          	blt	a5,a4,20013c72 <__metal_valid_interrupt_id+0x34>
20013c5c:	fec42703          	lw	a4,-20(s0)
20013c60:	478d                	li	a5,3
20013c62:	02f70863          	beq	a4,a5,20013c92 <__metal_valid_interrupt_id+0x54>
20013c66:	fec42703          	lw	a4,-20(s0)
20013c6a:	479d                	li	a5,7
20013c6c:	02f70363          	beq	a4,a5,20013c92 <__metal_valid_interrupt_id+0x54>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:370
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
    case METAL_INTERRUPT_ID_BEU:
        return 1;
    default:
        break;
20013c70:	a01d                	j	20013c96 <__metal_valid_interrupt_id+0x58>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
20013c72:	fec42703          	lw	a4,-20(s0)
20013c76:	47c1                	li	a5,16
20013c78:	00f74f63          	blt	a4,a5,20013c96 <__metal_valid_interrupt_id+0x58>
20013c7c:	fec42703          	lw	a4,-20(s0)
20013c80:	47fd                	li	a5,31
20013c82:	00e7d863          	bge	a5,a4,20013c92 <__metal_valid_interrupt_id+0x54>
20013c86:	fec42703          	lw	a4,-20(s0)
20013c8a:	08000793          	li	a5,128
20013c8e:	00f71463          	bne	a4,a5,20013c96 <__metal_valid_interrupt_id+0x58>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:368
        return 1;
20013c92:	4785                	li	a5,1
20013c94:	a019                	j	20013c9a <__metal_valid_interrupt_id+0x5c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:370
        break;
20013c96:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:373
    }

    return 0;
20013c98:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:374
}
20013c9a:	853e                	mv	a0,a5
20013c9c:	4472                	lw	s0,28(sp)
20013c9e:	6105                	addi	sp,sp,32
20013ca0:	8082                	ret

20013ca2 <__metal_local_interrupt_enable>:
__metal_local_interrupt_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:377

int __metal_local_interrupt_enable(struct metal_interrupt *controller,
                                   metal_interrupt_id_e id, int enable) {
20013ca2:	7179                	addi	sp,sp,-48
20013ca4:	d606                	sw	ra,44(sp)
20013ca6:	d422                	sw	s0,40(sp)
20013ca8:	1800                	addi	s0,sp,48
20013caa:	fca42e23          	sw	a0,-36(s0)
20013cae:	fcb42c23          	sw	a1,-40(s0)
20013cb2:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:378
    int rc = 0;
20013cb6:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:380

    if (!controller) {
20013cba:	fdc42783          	lw	a5,-36(s0)
20013cbe:	e399                	bnez	a5,20013cc4 <__metal_local_interrupt_enable+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:381
        return -1;
20013cc0:	57fd                	li	a5,-1
20013cc2:	a849                	j	20013d54 <__metal_local_interrupt_enable+0xb2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:384
    }

    switch (id) {
20013cc4:	fd842703          	lw	a4,-40(s0)
20013cc8:	47fd                	li	a5,31
20013cca:	08e7e063          	bltu	a5,a4,20013d4a <__metal_local_interrupt_enable+0xa8>
20013cce:	fd842783          	lw	a5,-40(s0)
20013cd2:	00279713          	slli	a4,a5,0x2
20013cd6:	200107b7          	lui	a5,0x20010
20013cda:	52078793          	addi	a5,a5,1312 # 20010520 <__metal_driver_vtable_riscv_clint0+0x78>
20013cde:	97ba                	add	a5,a5,a4
20013ce0:	439c                	lw	a5,0(a5)
20013ce2:	8782                	jr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:386
    case METAL_INTERRUPT_ID_BASE:
        if (enable) {
20013ce4:	fd442783          	lw	a5,-44(s0)
20013ce8:	c781                	beqz	a5,20013cf0 <__metal_local_interrupt_enable+0x4e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:387
            __metal_interrupt_global_enable();
20013cea:	f7dfe0ef          	jal	ra,20012c66 <__metal_interrupt_global_enable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:391
        } else {
            __metal_interrupt_global_disable();
        }
        break;
20013cee:	a08d                	j	20013d50 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:389
            __metal_interrupt_global_disable();
20013cf0:	f8ffe0ef          	jal	ra,20012c7e <__metal_interrupt_global_disable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:391
        break;
20013cf4:	a8b1                	j	20013d50 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:393
    case METAL_INTERRUPT_ID_SW:
        if (enable) {
20013cf6:	fd442783          	lw	a5,-44(s0)
20013cfa:	c781                	beqz	a5,20013d02 <__metal_local_interrupt_enable+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:394
            __metal_interrupt_software_enable();
20013cfc:	f9bfe0ef          	jal	ra,20012c96 <__metal_interrupt_software_enable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:398
        } else {
            __metal_interrupt_software_disable();
        }
        break;
20013d00:	a881                	j	20013d50 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:396
            __metal_interrupt_software_disable();
20013d02:	fadfe0ef          	jal	ra,20012cae <__metal_interrupt_software_disable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:398
        break;
20013d06:	a0a9                	j	20013d50 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:400
    case METAL_INTERRUPT_ID_TMR:
        if (enable) {
20013d08:	fd442783          	lw	a5,-44(s0)
20013d0c:	c781                	beqz	a5,20013d14 <__metal_local_interrupt_enable+0x72>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:401
            __metal_interrupt_timer_enable();
20013d0e:	fb9fe0ef          	jal	ra,20012cc6 <__metal_interrupt_timer_enable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:405
        } else {
            __metal_interrupt_timer_disable();
        }
        break;
20013d12:	a83d                	j	20013d50 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:403
            __metal_interrupt_timer_disable();
20013d14:	fcdfe0ef          	jal	ra,20012ce0 <__metal_interrupt_timer_disable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:405
        break;
20013d18:	a825                	j	20013d50 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:407
    case METAL_INTERRUPT_ID_EXT:
        if (enable) {
20013d1a:	fd442783          	lw	a5,-44(s0)
20013d1e:	c781                	beqz	a5,20013d26 <__metal_local_interrupt_enable+0x84>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:408
            __metal_interrupt_external_enable();
20013d20:	fdbfe0ef          	jal	ra,20012cfa <__metal_interrupt_external_enable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:412
        } else {
            __metal_interrupt_external_disable();
        }
        break;
20013d24:	a035                	j	20013d50 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:410
            __metal_interrupt_external_disable();
20013d26:	ff1fe0ef          	jal	ra,20012d16 <__metal_interrupt_external_disable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:412
        break;
20013d2a:	a01d                	j	20013d50 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:429
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        if (enable) {
20013d2c:	fd442783          	lw	a5,-44(s0)
20013d30:	c799                	beqz	a5,20013d3e <__metal_local_interrupt_enable+0x9c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:430
            __metal_interrupt_local_enable(id);
20013d32:	fd842783          	lw	a5,-40(s0)
20013d36:	853e                	mv	a0,a5
20013d38:	ffbfe0ef          	jal	ra,20012d32 <__metal_interrupt_local_enable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:434
        } else {
            __metal_interrupt_local_disable(id);
        }
        break;
20013d3c:	a811                	j	20013d50 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:432
            __metal_interrupt_local_disable(id);
20013d3e:	fd842783          	lw	a5,-40(s0)
20013d42:	853e                	mv	a0,a5
20013d44:	81aff0ef          	jal	ra,20012d5e <__metal_interrupt_local_disable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:434
        break;
20013d48:	a021                	j	20013d50 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:436
    default:
        rc = -1;
20013d4a:	57fd                	li	a5,-1
20013d4c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:438
    }
    return rc;
20013d50:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:439
}
20013d54:	853e                	mv	a0,a5
20013d56:	50b2                	lw	ra,44(sp)
20013d58:	5422                	lw	s0,40(sp)
20013d5a:	6145                	addi	sp,sp,48
20013d5c:	8082                	ret

20013d5e <__metal_exception_register>:
__metal_exception_register():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:442

int __metal_exception_register(struct metal_interrupt *controller, int ecode,
                               metal_exception_handler_t isr) {
20013d5e:	7179                	addi	sp,sp,-48
20013d60:	d622                	sw	s0,44(sp)
20013d62:	1800                	addi	s0,sp,48
20013d64:	fca42e23          	sw	a0,-36(s0)
20013d68:	fcb42c23          	sw	a1,-40(s0)
20013d6c:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:443
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20013d70:	fdc42783          	lw	a5,-36(s0)
20013d74:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:445

    if ((ecode < METAL_MAX_EXCEPTION_CODE) && isr) {
20013d78:	fd842703          	lw	a4,-40(s0)
20013d7c:	47ad                	li	a5,11
20013d7e:	02e7c263          	blt	a5,a4,20013da2 <__metal_exception_register+0x44>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:445 (discriminator 1)
20013d82:	fd442783          	lw	a5,-44(s0)
20013d86:	cf91                	beqz	a5,20013da2 <__metal_exception_register+0x44>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:446
        intc->metal_exception_table[ecode] = isr;
20013d88:	fec42703          	lw	a4,-20(s0)
20013d8c:	fd842783          	lw	a5,-40(s0)
20013d90:	0e878793          	addi	a5,a5,232
20013d94:	078a                	slli	a5,a5,0x2
20013d96:	97ba                	add	a5,a5,a4
20013d98:	fd442703          	lw	a4,-44(s0)
20013d9c:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:447
        return 0;
20013d9e:	4781                	li	a5,0
20013da0:	a011                	j	20013da4 <__metal_exception_register+0x46>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:449
    }
    return -1;
20013da2:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:450
}
20013da4:	853e                	mv	a0,a5
20013da6:	5432                	lw	s0,44(sp)
20013da8:	6145                	addi	sp,sp,48
20013daa:	8082                	ret

20013dac <__metal_driver_riscv_cpu_controller_interrupt_init>:
__metal_driver_riscv_cpu_controller_interrupt_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:454

extern void early_trap_vector(void);
void __metal_driver_riscv_cpu_controller_interrupt_init(
    struct metal_interrupt *controller) {
20013dac:	7179                	addi	sp,sp,-48
20013dae:	d606                	sw	ra,44(sp)
20013db0:	d422                	sw	s0,40(sp)
20013db2:	1800                	addi	s0,sp,48
20013db4:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:455
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20013db8:	fdc42783          	lw	a5,-36(s0)
20013dbc:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:457

    if (!intc->init_done) {
20013dc0:	fe442783          	lw	a5,-28(s0)
20013dc4:	43dc                	lw	a5,4(a5)
20013dc6:	efdd                	bnez	a5,20013e84 <__metal_driver_riscv_cpu_controller_interrupt_init+0xd8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:459
        /* Default to use direct interrupt, setup sw cb table*/
        for (int i = 0; i < METAL_MAX_MI; i++) {
20013dc8:	fe042623          	sw	zero,-20(s0)
20013dcc:	a0b9                	j	20013e1a <__metal_driver_riscv_cpu_controller_interrupt_init+0x6e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:460 (discriminator 3)
            intc->metal_int_table[i].handler = NULL;
20013dce:	fe442683          	lw	a3,-28(s0)
20013dd2:	fec42703          	lw	a4,-20(s0)
20013dd6:	87ba                	mv	a5,a4
20013dd8:	0786                	slli	a5,a5,0x1
20013dda:	97ba                	add	a5,a5,a4
20013ddc:	078e                	slli	a5,a5,0x3
20013dde:	97b6                	add	a5,a5,a3
20013de0:	0807a823          	sw	zero,144(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:461 (discriminator 3)
            intc->metal_int_table[i].sub_int = NULL;
20013de4:	fe442683          	lw	a3,-28(s0)
20013de8:	fec42703          	lw	a4,-20(s0)
20013dec:	87ba                	mv	a5,a4
20013dee:	0786                	slli	a5,a5,0x1
20013df0:	97ba                	add	a5,a5,a4
20013df2:	078e                	slli	a5,a5,0x3
20013df4:	97b6                	add	a5,a5,a3
20013df6:	0807aa23          	sw	zero,148(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:462 (discriminator 3)
            intc->metal_int_table[i].exint_data = NULL;
20013dfa:	fe442683          	lw	a3,-28(s0)
20013dfe:	fec42703          	lw	a4,-20(s0)
20013e02:	87ba                	mv	a5,a4
20013e04:	0786                	slli	a5,a5,0x1
20013e06:	97ba                	add	a5,a5,a4
20013e08:	078e                	slli	a5,a5,0x3
20013e0a:	97b6                	add	a5,a5,a3
20013e0c:	0807ac23          	sw	zero,152(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 3)
        for (int i = 0; i < METAL_MAX_MI; i++) {
20013e10:	fec42783          	lw	a5,-20(s0)
20013e14:	0785                	addi	a5,a5,1
20013e16:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 1)
20013e1a:	fec42703          	lw	a4,-20(s0)
20013e1e:	47fd                	li	a5,31
20013e20:	fae7d7e3          	bge	a5,a4,20013dce <__metal_driver_riscv_cpu_controller_interrupt_init+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:465
        }

        for (int i = 0; i < METAL_MAX_ME; i++) {
20013e24:	fe042423          	sw	zero,-24(s0)
20013e28:	a01d                	j	20013e4e <__metal_driver_riscv_cpu_controller_interrupt_init+0xa2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:466 (discriminator 3)
            intc->metal_exception_table[i] = __metal_default_exception_handler;
20013e2a:	fe442703          	lw	a4,-28(s0)
20013e2e:	fe842783          	lw	a5,-24(s0)
20013e32:	0e878793          	addi	a5,a5,232
20013e36:	078a                	slli	a5,a5,0x2
20013e38:	97ba                	add	a5,a5,a4
20013e3a:	20013737          	lui	a4,0x20013
20013e3e:	d8a70713          	addi	a4,a4,-630 # 20012d8a <__metal_default_exception_handler>
20013e42:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 3)
        for (int i = 0; i < METAL_MAX_ME; i++) {
20013e44:	fe842783          	lw	a5,-24(s0)
20013e48:	0785                	addi	a5,a5,1
20013e4a:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 1)
20013e4e:	fe842703          	lw	a4,-24(s0)
20013e52:	47ad                	li	a5,11
20013e54:	fce7dbe3          	bge	a5,a4,20013e2a <__metal_driver_riscv_cpu_controller_interrupt_init+0x7e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:475
         * Set the real trap handler if the value of mtvec is equal to
         * early_trap_vector. If mtvec is not equal to early_trap_vector,
         * that means user has own trap handler, then we don't overwrite it.
         */
        uintptr_t mtvec;
        __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
20013e58:	305027f3          	csrr	a5,mtvec
20013e5c:	fef42023          	sw	a5,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:476
        if (mtvec == (uintptr_t)&early_trap_vector) {
20013e60:	200107b7          	lui	a5,0x20010
20013e64:	13c78793          	addi	a5,a5,316 # 2001013c <early_trap_vector>
20013e68:	fe042703          	lw	a4,-32(s0)
20013e6c:	00f71863          	bne	a4,a5,20013e7c <__metal_driver_riscv_cpu_controller_interrupt_init+0xd0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:477
            __metal_controller_interrupt_vector(
20013e70:	200137b7          	lui	a5,0x20013
20013e74:	00078593          	mv	a1,a5
20013e78:	4501                	li	a0,0
20013e7a:	3335                	jal	20013ba6 <__metal_controller_interrupt_vector>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:481
                METAL_DIRECT_MODE,
                (void *)(uintptr_t)&__metal_exception_handler);
        }
        intc->init_done = 1;
20013e7c:	fe442783          	lw	a5,-28(s0)
20013e80:	4705                	li	a4,1
20013e82:	c3d8                	sw	a4,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:483
    }
}
20013e84:	0001                	nop
20013e86:	50b2                	lw	ra,44(sp)
20013e88:	5422                	lw	s0,40(sp)
20013e8a:	6145                	addi	sp,sp,48
20013e8c:	8082                	ret

20013e8e <__metal_driver_riscv_cpu_controller_interrupt_register>:
__metal_driver_riscv_cpu_controller_interrupt_register():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:487

int __metal_driver_riscv_cpu_controller_interrupt_register(
    struct metal_interrupt *controller, int id, metal_interrupt_handler_t isr,
    void *priv) {
20013e8e:	7179                	addi	sp,sp,-48
20013e90:	d606                	sw	ra,44(sp)
20013e92:	d422                	sw	s0,40(sp)
20013e94:	1800                	addi	s0,sp,48
20013e96:	fca42e23          	sw	a0,-36(s0)
20013e9a:	fcb42c23          	sw	a1,-40(s0)
20013e9e:	fcc42a23          	sw	a2,-44(s0)
20013ea2:	fcd42823          	sw	a3,-48(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:488
    int rc = 0;
20013ea6:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:489
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20013eaa:	fdc42783          	lw	a5,-36(s0)
20013eae:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:491

    if (!__metal_valid_interrupt_id(id)) {
20013eb2:	fd842503          	lw	a0,-40(s0)
20013eb6:	3361                	jal	20013c3e <__metal_valid_interrupt_id>
20013eb8:	87aa                	mv	a5,a0
20013eba:	e399                	bnez	a5,20013ec0 <__metal_driver_riscv_cpu_controller_interrupt_register+0x32>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:492
        return -11;
20013ebc:	57d5                	li	a5,-11
20013ebe:	aa71                	j	2001405a <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:494
    }
    if ((id == METAL_INTERRUPT_ID_BEU) &&
20013ec0:	fd842703          	lw	a4,-40(s0)
20013ec4:	08000793          	li	a5,128
20013ec8:	00f71763          	bne	a4,a5,20013ed6 <__metal_driver_riscv_cpu_controller_interrupt_register+0x48>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:495 (discriminator 1)
        (__metal_controller_interrupt_vector_mode() != METAL_DIRECT_MODE)) {
20013ecc:	3169                	jal	20013b56 <__metal_controller_interrupt_vector_mode>
20013ece:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:494 (discriminator 1)
    if ((id == METAL_INTERRUPT_ID_BEU) &&
20013ed0:	c399                	beqz	a5,20013ed6 <__metal_driver_riscv_cpu_controller_interrupt_register+0x48>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:498
        /* Only allow registration of the bus error unit interrupt if
         * interrupt vectoring if off */
        return -13;
20013ed2:	57cd                	li	a5,-13
20013ed4:	a259                	j	2001405a <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:501
    }

    if (isr) {
20013ed6:	fd442783          	lw	a5,-44(s0)
20013eda:	cfb9                	beqz	a5,20013f38 <__metal_driver_riscv_cpu_controller_interrupt_register+0xaa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:502
        if (id == METAL_INTERRUPT_ID_BEU) {
20013edc:	fd842703          	lw	a4,-40(s0)
20013ee0:	08000793          	li	a5,128
20013ee4:	00f71f63          	bne	a4,a5,20013f02 <__metal_driver_riscv_cpu_controller_interrupt_register+0x74>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:503
            intc->metal_int_beu.handler = isr;
20013ee8:	fe842783          	lw	a5,-24(s0)
20013eec:	fd442703          	lw	a4,-44(s0)
20013ef0:	38e7a823          	sw	a4,912(a5) # 20013390 <metal_lc2_interrupt_vector_handler+0x6e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:504
            intc->metal_int_beu.exint_data = priv;
20013ef4:	fe842783          	lw	a5,-24(s0)
20013ef8:	fd042703          	lw	a4,-48(s0)
20013efc:	38e7ac23          	sw	a4,920(a5)
20013f00:	aa99                	j	20014056 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:506
        } else {
            intc->metal_int_table[id].handler = isr;
20013f02:	fe842683          	lw	a3,-24(s0)
20013f06:	fd842703          	lw	a4,-40(s0)
20013f0a:	87ba                	mv	a5,a4
20013f0c:	0786                	slli	a5,a5,0x1
20013f0e:	97ba                	add	a5,a5,a4
20013f10:	078e                	slli	a5,a5,0x3
20013f12:	97b6                	add	a5,a5,a3
20013f14:	fd442703          	lw	a4,-44(s0)
20013f18:	08e7a823          	sw	a4,144(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:507
            intc->metal_int_table[id].exint_data = priv;
20013f1c:	fe842683          	lw	a3,-24(s0)
20013f20:	fd842703          	lw	a4,-40(s0)
20013f24:	87ba                	mv	a5,a4
20013f26:	0786                	slli	a5,a5,0x1
20013f28:	97ba                	add	a5,a5,a4
20013f2a:	078e                	slli	a5,a5,0x3
20013f2c:	97b6                	add	a5,a5,a3
20013f2e:	fd042703          	lw	a4,-48(s0)
20013f32:	08e7ac23          	sw	a4,152(a5)
20013f36:	a205                	j	20014056 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:510
        }
    } else {
        switch (id) {
20013f38:	fd842703          	lw	a4,-40(s0)
20013f3c:	47ad                	li	a5,11
20013f3e:	0cf70c63          	beq	a4,a5,20014016 <__metal_driver_riscv_cpu_controller_interrupt_register+0x188>
20013f42:	fd842703          	lw	a4,-40(s0)
20013f46:	47ad                	li	a5,11
20013f48:	00e7cd63          	blt	a5,a4,20013f62 <__metal_driver_riscv_cpu_controller_interrupt_register+0xd4>
20013f4c:	fd842703          	lw	a4,-40(s0)
20013f50:	478d                	li	a5,3
20013f52:	02f70963          	beq	a4,a5,20013f84 <__metal_driver_riscv_cpu_controller_interrupt_register+0xf6>
20013f56:	fd842703          	lw	a4,-40(s0)
20013f5a:	479d                	li	a5,7
20013f5c:	06f70163          	beq	a4,a5,20013fbe <__metal_driver_riscv_cpu_controller_interrupt_register+0x130>
20013f60:	a8c5                	j	20014050 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c2>
20013f62:	fd842703          	lw	a4,-40(s0)
20013f66:	47c1                	li	a5,16
20013f68:	0ef74463          	blt	a4,a5,20014050 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c2>
20013f6c:	fd842703          	lw	a4,-40(s0)
20013f70:	47fd                	li	a5,31
20013f72:	0ae7d263          	bge	a5,a4,20014016 <__metal_driver_riscv_cpu_controller_interrupt_register+0x188>
20013f76:	fd842703          	lw	a4,-40(s0)
20013f7a:	08000793          	li	a5,128
20013f7e:	06f70d63          	beq	a4,a5,20013ff8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x16a>
20013f82:	a0f9                	j	20014050 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:512
        case METAL_INTERRUPT_ID_SW:
            intc->metal_int_table[id].handler = __metal_default_sw_handler;
20013f84:	fe842683          	lw	a3,-24(s0)
20013f88:	fd842703          	lw	a4,-40(s0)
20013f8c:	87ba                	mv	a5,a4
20013f8e:	0786                	slli	a5,a5,0x1
20013f90:	97ba                	add	a5,a5,a4
20013f92:	078e                	slli	a5,a5,0x3
20013f94:	97b6                	add	a5,a5,a3
20013f96:	20013737          	lui	a4,0x20013
20013f9a:	e7a70713          	addi	a4,a4,-390 # 20012e7a <__metal_default_sw_handler>
20013f9e:	08e7a823          	sw	a4,144(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:513
            intc->metal_int_table[id].sub_int = priv;
20013fa2:	fe842683          	lw	a3,-24(s0)
20013fa6:	fd842703          	lw	a4,-40(s0)
20013faa:	87ba                	mv	a5,a4
20013fac:	0786                	slli	a5,a5,0x1
20013fae:	97ba                	add	a5,a5,a4
20013fb0:	078e                	slli	a5,a5,0x3
20013fb2:	97b6                	add	a5,a5,a3
20013fb4:	fd042703          	lw	a4,-48(s0)
20013fb8:	08e7aa23          	sw	a4,148(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:514
            break;
20013fbc:	a869                	j	20014056 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:516
        case METAL_INTERRUPT_ID_TMR:
            intc->metal_int_table[id].handler = __metal_default_timer_handler;
20013fbe:	fe842683          	lw	a3,-24(s0)
20013fc2:	fd842703          	lw	a4,-40(s0)
20013fc6:	87ba                	mv	a5,a4
20013fc8:	0786                	slli	a5,a5,0x1
20013fca:	97ba                	add	a5,a5,a4
20013fcc:	078e                	slli	a5,a5,0x3
20013fce:	97b6                	add	a5,a5,a3
20013fd0:	20013737          	lui	a4,0x20013
20013fd4:	f8a70713          	addi	a4,a4,-118 # 20012f8a <__metal_default_timer_handler>
20013fd8:	08e7a823          	sw	a4,144(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:517
            intc->metal_int_table[id].sub_int = priv;
20013fdc:	fe842683          	lw	a3,-24(s0)
20013fe0:	fd842703          	lw	a4,-40(s0)
20013fe4:	87ba                	mv	a5,a4
20013fe6:	0786                	slli	a5,a5,0x1
20013fe8:	97ba                	add	a5,a5,a4
20013fea:	078e                	slli	a5,a5,0x3
20013fec:	97b6                	add	a5,a5,a3
20013fee:	fd042703          	lw	a4,-48(s0)
20013ff2:	08e7aa23          	sw	a4,148(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:518
            break;
20013ff6:	a085                	j	20014056 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:520
        case METAL_INTERRUPT_ID_BEU:
            intc->metal_int_beu.handler = __metal_default_beu_handler;
20013ff8:	fe842783          	lw	a5,-24(s0)
20013ffc:	20013737          	lui	a4,0x20013
20014000:	f7470713          	addi	a4,a4,-140 # 20012f74 <__metal_default_beu_handler>
20014004:	38e7a823          	sw	a4,912(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:521
            intc->metal_int_beu.exint_data = priv;
20014008:	fe842783          	lw	a5,-24(s0)
2001400c:	fd042703          	lw	a4,-48(s0)
20014010:	38e7ac23          	sw	a4,920(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:522
            break;
20014014:	a089                	j	20014056 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:540
        case METAL_INTERRUPT_ID_LC11:
        case METAL_INTERRUPT_ID_LC12:
        case METAL_INTERRUPT_ID_LC13:
        case METAL_INTERRUPT_ID_LC14:
        case METAL_INTERRUPT_ID_LC15:
            intc->metal_int_table[id].handler =
20014016:	fe842683          	lw	a3,-24(s0)
2001401a:	fd842703          	lw	a4,-40(s0)
2001401e:	87ba                	mv	a5,a4
20014020:	0786                	slli	a5,a5,0x1
20014022:	97ba                	add	a5,a5,a4
20014024:	078e                	slli	a5,a5,0x3
20014026:	97b6                	add	a5,a5,a3
20014028:	20013737          	lui	a4,0x20013
2001402c:	da270713          	addi	a4,a4,-606 # 20012da2 <__metal_default_interrupt_handler>
20014030:	08e7a823          	sw	a4,144(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:542
                __metal_default_interrupt_handler;
            intc->metal_int_table[id].sub_int = priv;
20014034:	fe842683          	lw	a3,-24(s0)
20014038:	fd842703          	lw	a4,-40(s0)
2001403c:	87ba                	mv	a5,a4
2001403e:	0786                	slli	a5,a5,0x1
20014040:	97ba                	add	a5,a5,a4
20014042:	078e                	slli	a5,a5,0x3
20014044:	97b6                	add	a5,a5,a3
20014046:	fd042703          	lw	a4,-48(s0)
2001404a:	08e7aa23          	sw	a4,148(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:543
            break;
2001404e:	a021                	j	20014056 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:545
        default:
            rc = -12;
20014050:	57d1                	li	a5,-12
20014052:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:548
        }
    }
    return rc;
20014056:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:549
}
2001405a:	853e                	mv	a0,a5
2001405c:	50b2                	lw	ra,44(sp)
2001405e:	5422                	lw	s0,40(sp)
20014060:	6145                	addi	sp,sp,48
20014062:	8082                	ret

20014064 <__metal_driver_riscv_cpu_controller_interrupt_enable>:
__metal_driver_riscv_cpu_controller_interrupt_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:552

int __metal_driver_riscv_cpu_controller_interrupt_enable(
    struct metal_interrupt *controller, int id) {
20014064:	1101                	addi	sp,sp,-32
20014066:	ce06                	sw	ra,28(sp)
20014068:	cc22                	sw	s0,24(sp)
2001406a:	1000                	addi	s0,sp,32
2001406c:	fea42623          	sw	a0,-20(s0)
20014070:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:553
    return __metal_local_interrupt_enable(controller, id, METAL_ENABLE);
20014074:	fe842783          	lw	a5,-24(s0)
20014078:	4605                	li	a2,1
2001407a:	85be                	mv	a1,a5
2001407c:	fec42503          	lw	a0,-20(s0)
20014080:	310d                	jal	20013ca2 <__metal_local_interrupt_enable>
20014082:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:554
}
20014084:	853e                	mv	a0,a5
20014086:	40f2                	lw	ra,28(sp)
20014088:	4462                	lw	s0,24(sp)
2001408a:	6105                	addi	sp,sp,32
2001408c:	8082                	ret

2001408e <__metal_driver_riscv_cpu_controller_interrupt_disable>:
__metal_driver_riscv_cpu_controller_interrupt_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:557

int __metal_driver_riscv_cpu_controller_interrupt_disable(
    struct metal_interrupt *controller, int id) {
2001408e:	1101                	addi	sp,sp,-32
20014090:	ce06                	sw	ra,28(sp)
20014092:	cc22                	sw	s0,24(sp)
20014094:	1000                	addi	s0,sp,32
20014096:	fea42623          	sw	a0,-20(s0)
2001409a:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:558
    return __metal_local_interrupt_enable(controller, id, METAL_DISABLE);
2001409e:	fe842783          	lw	a5,-24(s0)
200140a2:	4601                	li	a2,0
200140a4:	85be                	mv	a1,a5
200140a6:	fec42503          	lw	a0,-20(s0)
200140aa:	3ee5                	jal	20013ca2 <__metal_local_interrupt_enable>
200140ac:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:559
}
200140ae:	853e                	mv	a0,a5
200140b0:	40f2                	lw	ra,28(sp)
200140b2:	4462                	lw	s0,24(sp)
200140b4:	6105                	addi	sp,sp,32
200140b6:	8082                	ret

200140b8 <__metal_driver_riscv_cpu_controller_get_vector_mode>:
__metal_driver_riscv_cpu_controller_get_vector_mode():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:591
    }
    return -1;
}

metal_vector_mode __metal_driver_riscv_cpu_controller_get_vector_mode(
    struct metal_interrupt *controller) {
200140b8:	1101                	addi	sp,sp,-32
200140ba:	ce06                	sw	ra,28(sp)
200140bc:	cc22                	sw	s0,24(sp)
200140be:	1000                	addi	s0,sp,32
200140c0:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:592
    return __metal_controller_interrupt_vector_mode();
200140c4:	a93ff0ef          	jal	ra,20013b56 <__metal_controller_interrupt_vector_mode>
200140c8:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:593
}
200140ca:	853e                	mv	a0,a5
200140cc:	40f2                	lw	ra,28(sp)
200140ce:	4462                	lw	s0,24(sp)
200140d0:	6105                	addi	sp,sp,32
200140d2:	8082                	ret

200140d4 <__metal_driver_riscv_cpu_controller_set_vector_mode>:
__metal_driver_riscv_cpu_controller_set_vector_mode():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:596

int __metal_driver_riscv_cpu_controller_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
200140d4:	1101                	addi	sp,sp,-32
200140d6:	ce06                	sw	ra,28(sp)
200140d8:	cc22                	sw	s0,24(sp)
200140da:	1000                	addi	s0,sp,32
200140dc:	fea42623          	sw	a0,-20(s0)
200140e0:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:598

    if (mode == METAL_DIRECT_MODE) {
200140e4:	fe842783          	lw	a5,-24(s0)
200140e8:	eb99                	bnez	a5,200140fe <__metal_driver_riscv_cpu_controller_set_vector_mode+0x2a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:599
        __metal_controller_interrupt_vector(
200140ea:	200137b7          	lui	a5,0x20013
200140ee:	00078593          	mv	a1,a5
200140f2:	fe842503          	lw	a0,-24(s0)
200140f6:	ab1ff0ef          	jal	ra,20013ba6 <__metal_controller_interrupt_vector>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:601
            mode, (void *)(uintptr_t)&__metal_exception_handler);
        return 0;
200140fa:	4781                	li	a5,0
200140fc:	a00d                	j	2001411e <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:603
    }
    if (mode == METAL_VECTOR_MODE) {
200140fe:	fe842703          	lw	a4,-24(s0)
20014102:	4785                	li	a5,1
20014104:	00f71c63          	bne	a4,a5,2001411c <__metal_driver_riscv_cpu_controller_set_vector_mode+0x48>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:604
        __metal_controller_interrupt_vector(
20014108:	200177b7          	lui	a5,0x20017
2001410c:	78078593          	addi	a1,a5,1920 # 20017780 <__metal_vector_table>
20014110:	fe842503          	lw	a0,-24(s0)
20014114:	a93ff0ef          	jal	ra,20013ba6 <__metal_controller_interrupt_vector>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:606
            mode, (void *)(uintptr_t)__metal_vector_table);
        return 0;
20014118:	4781                	li	a5,0
2001411a:	a011                	j	2001411e <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:608
    }
    return -1;
2001411c:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:609
}
2001411e:	853e                	mv	a0,a5
20014120:	40f2                	lw	ra,28(sp)
20014122:	4462                	lw	s0,24(sp)
20014124:	6105                	addi	sp,sp,32
20014126:	8082                	ret

20014128 <__metal_driver_riscv_cpu_controller_command_request>:
__metal_driver_riscv_cpu_controller_command_request():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:612

int __metal_driver_riscv_cpu_controller_command_request(
    struct metal_interrupt *controller, int cmd, void *data) {
20014128:	1101                	addi	sp,sp,-32
2001412a:	ce22                	sw	s0,28(sp)
2001412c:	1000                	addi	s0,sp,32
2001412e:	fea42623          	sw	a0,-20(s0)
20014132:	feb42423          	sw	a1,-24(s0)
20014136:	fec42223          	sw	a2,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:615
    /* NOP for now, unless local interrupt lines the like of clic, clint, plic
     */
    return 0;
2001413a:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:616
}
2001413c:	853e                	mv	a0,a5
2001413e:	4472                	lw	s0,28(sp)
20014140:	6105                	addi	sp,sp,32
20014142:	8082                	ret

20014144 <__metal_driver_cpu_mcycle_get>:
__metal_driver_cpu_mcycle_get():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:620

/* CPU driver !!! */

unsigned long long __metal_driver_cpu_mcycle_get(struct metal_cpu *cpu) {
20014144:	7139                	addi	sp,sp,-64
20014146:	de22                	sw	s0,60(sp)
20014148:	0080                	addi	s0,sp,64
2001414a:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:621
    unsigned long long val = 0;
2001414e:	4301                	li	t1,0
20014150:	4381                	li	t2,0
20014152:	fe642423          	sw	t1,-24(s0)
20014156:	fe742623          	sw	t2,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:627 (discriminator 1)

#if __riscv_xlen == 32
    unsigned long hi, hi1, lo;

    do {
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi));
2001415a:	b8002573          	csrr	a0,mcycleh
2001415e:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:628 (discriminator 1)
        __asm__ volatile("csrr %0, mcycle" : "=r"(lo));
20014162:	b0002573          	csrr	a0,mcycle
20014166:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:629 (discriminator 1)
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi1));
2001416a:	b8002573          	csrr	a0,mcycleh
2001416e:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:632 (discriminator 1)
        /* hi != hi1 means mcycle overflow during we get value,
         * so we must retry. */
    } while (hi != hi1);
20014172:	fe442883          	lw	a7,-28(s0)
20014176:	fdc42503          	lw	a0,-36(s0)
2001417a:	fea890e3          	bne	a7,a0,2001415a <__metal_driver_cpu_mcycle_get+0x16>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:634

    val = ((unsigned long long)hi << 32) | lo;
2001417e:	fe442503          	lw	a0,-28(s0)
20014182:	85aa                	mv	a1,a0
20014184:	4601                	li	a2,0
20014186:	00059813          	slli	a6,a1,0x0
2001418a:	4781                	li	a5,0
2001418c:	fe042603          	lw	a2,-32(s0)
20014190:	86b2                	mv	a3,a2
20014192:	4701                	li	a4,0
20014194:	00d7e633          	or	a2,a5,a3
20014198:	fec42423          	sw	a2,-24(s0)
2001419c:	00e867b3          	or	a5,a6,a4
200141a0:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:639
#else
    __asm__ volatile("csrr %0, mcycle" : "=r"(val));
#endif

    return val;
200141a4:	fe842783          	lw	a5,-24(s0)
200141a8:	fec42803          	lw	a6,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:640
}
200141ac:	853e                	mv	a0,a5
200141ae:	85c2                	mv	a1,a6
200141b0:	5472                	lw	s0,60(sp)
200141b2:	6121                	addi	sp,sp,64
200141b4:	8082                	ret

200141b6 <__metal_driver_cpu_timebase_get>:
__metal_driver_cpu_timebase_get():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:642

unsigned long long __metal_driver_cpu_timebase_get(struct metal_cpu *cpu) {
200141b6:	7179                	addi	sp,sp,-48
200141b8:	d606                	sw	ra,44(sp)
200141ba:	d422                	sw	s0,40(sp)
200141bc:	d24a                	sw	s2,36(sp)
200141be:	d04e                	sw	s3,32(sp)
200141c0:	1800                	addi	s0,sp,48
200141c2:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:644
    int timebase;
    if (!cpu) {
200141c6:	fdc42783          	lw	a5,-36(s0)
200141ca:	e781                	bnez	a5,200141d2 <__metal_driver_cpu_timebase_get+0x1c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:645
        return 0;
200141cc:	4901                	li	s2,0
200141ce:	4981                	li	s3,0
200141d0:	a821                	j	200141e8 <__metal_driver_cpu_timebase_get+0x32>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:648
    }

    timebase = __metal_driver_cpu_timebase((struct metal_cpu *)cpu);
200141d2:	fdc42503          	lw	a0,-36(s0)
200141d6:	9cffe0ef          	jal	ra,20012ba4 <__metal_driver_cpu_timebase>
200141da:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:649
    return timebase;
200141de:	fec42783          	lw	a5,-20(s0)
200141e2:	893e                	mv	s2,a5
200141e4:	87fd                	srai	a5,a5,0x1f
200141e6:	89be                	mv	s3,a5
200141e8:	87ca                	mv	a5,s2
200141ea:	884e                	mv	a6,s3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:650
}
200141ec:	853e                	mv	a0,a5
200141ee:	85c2                	mv	a1,a6
200141f0:	50b2                	lw	ra,44(sp)
200141f2:	5422                	lw	s0,40(sp)
200141f4:	5912                	lw	s2,36(sp)
200141f6:	5982                	lw	s3,32(sp)
200141f8:	6145                	addi	sp,sp,48
200141fa:	8082                	ret

200141fc <__metal_driver_cpu_mtime_get>:
__metal_driver_cpu_mtime_get():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:652

unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu) {
200141fc:	7179                	addi	sp,sp,-48
200141fe:	d606                	sw	ra,44(sp)
20014200:	d422                	sw	s0,40(sp)
20014202:	1800                	addi	s0,sp,48
20014204:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:653
    unsigned long long time = 0;
20014208:	4781                	li	a5,0
2001420a:	4801                	li	a6,0
2001420c:	fef42023          	sw	a5,-32(s0)
20014210:	ff042223          	sw	a6,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:657
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20014214:	fdc42503          	lw	a0,-36(s0)
20014218:	9b7fe0ef          	jal	ra,20012bce <__metal_driver_cpu_interrupt_controller>
2001421c:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:659

    if (intc) {
20014220:	fec42783          	lw	a5,-20(s0)
20014224:	c78d                	beqz	a5,2001424e <__metal_driver_cpu_mtime_get+0x52>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:660
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20014226:	fec42783          	lw	a5,-20(s0)
2001422a:	13c7a783          	lw	a5,316(a5)
2001422e:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:661
        if (tmr_intc) {
20014232:	fe842783          	lw	a5,-24(s0)
20014236:	cf81                	beqz	a5,2001424e <__metal_driver_cpu_mtime_get+0x52>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:662
            tmr_intc->vtable->command_request(tmr_intc, METAL_TIMER_MTIME_GET,
20014238:	fe842783          	lw	a5,-24(s0)
2001423c:	439c                	lw	a5,0(a5)
2001423e:	47f8                	lw	a4,76(a5)
20014240:	fe040793          	addi	a5,s0,-32
20014244:	863e                	mv	a2,a5
20014246:	4585                	li	a1,1
20014248:	fe842503          	lw	a0,-24(s0)
2001424c:	9702                	jalr	a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:666
                                              &time);
        }
    }
    return time;
2001424e:	fe042783          	lw	a5,-32(s0)
20014252:	fe442803          	lw	a6,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:667
}
20014256:	853e                	mv	a0,a5
20014258:	85c2                	mv	a1,a6
2001425a:	50b2                	lw	ra,44(sp)
2001425c:	5422                	lw	s0,40(sp)
2001425e:	6145                	addi	sp,sp,48
20014260:	8082                	ret

20014262 <__metal_driver_cpu_mtimecmp_set>:
__metal_driver_cpu_mtimecmp_set():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:670

int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time) {
20014262:	7179                	addi	sp,sp,-48
20014264:	d606                	sw	ra,44(sp)
20014266:	d422                	sw	s0,40(sp)
20014268:	d226                	sw	s1,36(sp)
2001426a:	1800                	addi	s0,sp,48
2001426c:	fca42e23          	sw	a0,-36(s0)
20014270:	fcb42823          	sw	a1,-48(s0)
20014274:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:671
    int rc = -1;
20014278:	57fd                	li	a5,-1
2001427a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:675
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
2001427e:	fdc42503          	lw	a0,-36(s0)
20014282:	94dfe0ef          	jal	ra,20012bce <__metal_driver_cpu_interrupt_controller>
20014286:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:677

    if (intc) {
2001428a:	fe842783          	lw	a5,-24(s0)
2001428e:	cf8d                	beqz	a5,200142c8 <__metal_driver_cpu_mtimecmp_set+0x66>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:678
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20014290:	fe842783          	lw	a5,-24(s0)
20014294:	13c7a783          	lw	a5,316(a5)
20014298:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:679
        if (tmr_intc) {
2001429c:	fe442783          	lw	a5,-28(s0)
200142a0:	c785                	beqz	a5,200142c8 <__metal_driver_cpu_mtimecmp_set+0x66>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:680
            rc = tmr_intc->vtable->mtimecmp_set(
200142a2:	fe442783          	lw	a5,-28(s0)
200142a6:	439c                	lw	a5,0(a5)
200142a8:	4ba4                	lw	s1,80(a5)
200142aa:	fdc42503          	lw	a0,-36(s0)
200142ae:	8d3fe0ef          	jal	ra,20012b80 <__metal_driver_cpu_hartid>
200142b2:	87aa                	mv	a5,a0
200142b4:	fd042603          	lw	a2,-48(s0)
200142b8:	fd442683          	lw	a3,-44(s0)
200142bc:	85be                	mv	a1,a5
200142be:	fe442503          	lw	a0,-28(s0)
200142c2:	9482                	jalr	s1
200142c4:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:684
                tmr_intc, __metal_driver_cpu_hartid(cpu), time);
        }
    }
    return rc;
200142c8:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:685
}
200142cc:	853e                	mv	a0,a5
200142ce:	50b2                	lw	ra,44(sp)
200142d0:	5422                	lw	s0,40(sp)
200142d2:	5492                	lw	s1,36(sp)
200142d4:	6145                	addi	sp,sp,48
200142d6:	8082                	ret

200142d8 <__metal_driver_cpu_timer_controller_interrupt>:
__metal_driver_cpu_timer_controller_interrupt():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:688

struct metal_interrupt *
__metal_driver_cpu_timer_controller_interrupt(struct metal_cpu *cpu) {
200142d8:	1101                	addi	sp,sp,-32
200142da:	ce22                	sw	s0,28(sp)
200142dc:	1000                	addi	s0,sp,32
200142de:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:690
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
200142e2:	81018793          	addi	a5,gp,-2032 # 80000ad0 <__metal_dt_clint_2000000>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:699
#else
#pragma message("There is no interrupt controller for Timer interrupt")
    return NULL;
#endif
#endif
}
200142e6:	853e                	mv	a0,a5
200142e8:	4472                	lw	s0,28(sp)
200142ea:	6105                	addi	sp,sp,32
200142ec:	8082                	ret

200142ee <__metal_driver_cpu_get_timer_interrupt_id>:
__metal_driver_cpu_get_timer_interrupt_id():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:701

int __metal_driver_cpu_get_timer_interrupt_id(struct metal_cpu *cpu) {
200142ee:	1101                	addi	sp,sp,-32
200142f0:	ce22                	sw	s0,28(sp)
200142f2:	1000                	addi	s0,sp,32
200142f4:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:702
    return METAL_INTERRUPT_ID_TMR;
200142f8:	479d                	li	a5,7
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:703
}
200142fa:	853e                	mv	a0,a5
200142fc:	4472                	lw	s0,28(sp)
200142fe:	6105                	addi	sp,sp,32
20014300:	8082                	ret

20014302 <__metal_driver_cpu_sw_controller_interrupt>:
__metal_driver_cpu_sw_controller_interrupt():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:706

struct metal_interrupt *
__metal_driver_cpu_sw_controller_interrupt(struct metal_cpu *cpu) {
20014302:	1101                	addi	sp,sp,-32
20014304:	ce22                	sw	s0,28(sp)
20014306:	1000                	addi	s0,sp,32
20014308:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:708
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
2001430c:	81018793          	addi	a5,gp,-2032 # 80000ad0 <__metal_dt_clint_2000000>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:717
#else
#pragma message("There is no interrupt controller for Software interrupt")
    return NULL;
#endif
#endif
}
20014310:	853e                	mv	a0,a5
20014312:	4472                	lw	s0,28(sp)
20014314:	6105                	addi	sp,sp,32
20014316:	8082                	ret

20014318 <__metal_driver_cpu_get_sw_interrupt_id>:
__metal_driver_cpu_get_sw_interrupt_id():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:719

int __metal_driver_cpu_get_sw_interrupt_id(struct metal_cpu *cpu) {
20014318:	1101                	addi	sp,sp,-32
2001431a:	ce22                	sw	s0,28(sp)
2001431c:	1000                	addi	s0,sp,32
2001431e:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:720
    return METAL_INTERRUPT_ID_SW;
20014322:	478d                	li	a5,3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:721
}
20014324:	853e                	mv	a0,a5
20014326:	4472                	lw	s0,28(sp)
20014328:	6105                	addi	sp,sp,32
2001432a:	8082                	ret

2001432c <__metal_driver_cpu_set_sw_ipi>:
__metal_driver_cpu_set_sw_ipi():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:723

int __metal_driver_cpu_set_sw_ipi(struct metal_cpu *cpu, int hartid) {
2001432c:	7179                	addi	sp,sp,-48
2001432e:	d606                	sw	ra,44(sp)
20014330:	d422                	sw	s0,40(sp)
20014332:	1800                	addi	s0,sp,48
20014334:	fca42e23          	sw	a0,-36(s0)
20014338:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:724
    int rc = -1;
2001433c:	57fd                	li	a5,-1
2001433e:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:728
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20014342:	fdc42503          	lw	a0,-36(s0)
20014346:	889fe0ef          	jal	ra,20012bce <__metal_driver_cpu_interrupt_controller>
2001434a:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:730

    if (intc) {
2001434e:	fe842783          	lw	a5,-24(s0)
20014352:	c79d                	beqz	a5,20014380 <__metal_driver_cpu_set_sw_ipi+0x54>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:731
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20014354:	fe842783          	lw	a5,-24(s0)
20014358:	0dc7a783          	lw	a5,220(a5)
2001435c:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:732
        if (sw_intc) {
20014360:	fe442783          	lw	a5,-28(s0)
20014364:	cf91                	beqz	a5,20014380 <__metal_driver_cpu_set_sw_ipi+0x54>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:733
            rc = sw_intc->vtable->command_request(
20014366:	fe442783          	lw	a5,-28(s0)
2001436a:	439c                	lw	a5,0(a5)
2001436c:	47f8                	lw	a4,76(a5)
2001436e:	fd840793          	addi	a5,s0,-40
20014372:	863e                	mv	a2,a5
20014374:	458d                	li	a1,3
20014376:	fe442503          	lw	a0,-28(s0)
2001437a:	9702                	jalr	a4
2001437c:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:737
                sw_intc, METAL_SOFTWARE_IPI_SET, &hartid);
        }
    }
    return rc;
20014380:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:738
}
20014384:	853e                	mv	a0,a5
20014386:	50b2                	lw	ra,44(sp)
20014388:	5422                	lw	s0,40(sp)
2001438a:	6145                	addi	sp,sp,48
2001438c:	8082                	ret

2001438e <__metal_driver_cpu_clear_sw_ipi>:
__metal_driver_cpu_clear_sw_ipi():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:740

int __metal_driver_cpu_clear_sw_ipi(struct metal_cpu *cpu, int hartid) {
2001438e:	7179                	addi	sp,sp,-48
20014390:	d606                	sw	ra,44(sp)
20014392:	d422                	sw	s0,40(sp)
20014394:	1800                	addi	s0,sp,48
20014396:	fca42e23          	sw	a0,-36(s0)
2001439a:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:741
    int rc = -1;
2001439e:	57fd                	li	a5,-1
200143a0:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:745
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
200143a4:	fdc42503          	lw	a0,-36(s0)
200143a8:	827fe0ef          	jal	ra,20012bce <__metal_driver_cpu_interrupt_controller>
200143ac:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:747

    if (intc) {
200143b0:	fe842783          	lw	a5,-24(s0)
200143b4:	c79d                	beqz	a5,200143e2 <__metal_driver_cpu_clear_sw_ipi+0x54>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:748
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
200143b6:	fe842783          	lw	a5,-24(s0)
200143ba:	0dc7a783          	lw	a5,220(a5)
200143be:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:749
        if (sw_intc) {
200143c2:	fe442783          	lw	a5,-28(s0)
200143c6:	cf91                	beqz	a5,200143e2 <__metal_driver_cpu_clear_sw_ipi+0x54>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:750
            rc = sw_intc->vtable->command_request(
200143c8:	fe442783          	lw	a5,-28(s0)
200143cc:	439c                	lw	a5,0(a5)
200143ce:	47f8                	lw	a4,76(a5)
200143d0:	fd840793          	addi	a5,s0,-40
200143d4:	863e                	mv	a2,a5
200143d6:	4589                	li	a1,2
200143d8:	fe442503          	lw	a0,-28(s0)
200143dc:	9702                	jalr	a4
200143de:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:754
                sw_intc, METAL_SOFTWARE_IPI_CLEAR, &hartid);
        }
    }
    return rc;
200143e2:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:755
}
200143e6:	853e                	mv	a0,a5
200143e8:	50b2                	lw	ra,44(sp)
200143ea:	5422                	lw	s0,40(sp)
200143ec:	6145                	addi	sp,sp,48
200143ee:	8082                	ret

200143f0 <__metal_driver_cpu_get_msip>:
__metal_driver_cpu_get_msip():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:757

int __metal_driver_cpu_get_msip(struct metal_cpu *cpu, int hartid) {
200143f0:	7179                	addi	sp,sp,-48
200143f2:	d606                	sw	ra,44(sp)
200143f4:	d422                	sw	s0,40(sp)
200143f6:	1800                	addi	s0,sp,48
200143f8:	fca42e23          	sw	a0,-36(s0)
200143fc:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:758
    int rc = 0;
20014400:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:762
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20014404:	fdc42503          	lw	a0,-36(s0)
20014408:	fc6fe0ef          	jal	ra,20012bce <__metal_driver_cpu_interrupt_controller>
2001440c:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:764

    if (intc) {
20014410:	fe842783          	lw	a5,-24(s0)
20014414:	c79d                	beqz	a5,20014442 <__metal_driver_cpu_get_msip+0x52>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:765
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20014416:	fe842783          	lw	a5,-24(s0)
2001441a:	0dc7a783          	lw	a5,220(a5)
2001441e:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:766
        if (sw_intc) {
20014422:	fe442783          	lw	a5,-28(s0)
20014426:	cf91                	beqz	a5,20014442 <__metal_driver_cpu_get_msip+0x52>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:767
            rc = sw_intc->vtable->command_request(
20014428:	fe442783          	lw	a5,-28(s0)
2001442c:	439c                	lw	a5,0(a5)
2001442e:	47f8                	lw	a4,76(a5)
20014430:	fd840793          	addi	a5,s0,-40
20014434:	863e                	mv	a2,a5
20014436:	4591                	li	a1,4
20014438:	fe442503          	lw	a0,-28(s0)
2001443c:	9702                	jalr	a4
2001443e:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:771
                sw_intc, METAL_SOFTWARE_MSIP_GET, &hartid);
        }
    }
    return rc;
20014442:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:772
}
20014446:	853e                	mv	a0,a5
20014448:	50b2                	lw	ra,44(sp)
2001444a:	5422                	lw	s0,40(sp)
2001444c:	6145                	addi	sp,sp,48
2001444e:	8082                	ret

20014450 <__metal_driver_cpu_controller_interrupt>:
__metal_driver_cpu_controller_interrupt():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:775

struct metal_interrupt *
__metal_driver_cpu_controller_interrupt(struct metal_cpu *cpu) {
20014450:	1101                	addi	sp,sp,-32
20014452:	ce06                	sw	ra,28(sp)
20014454:	cc22                	sw	s0,24(sp)
20014456:	1000                	addi	s0,sp,32
20014458:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:776
    return __metal_driver_cpu_interrupt_controller(cpu);
2001445c:	fec42503          	lw	a0,-20(s0)
20014460:	f6efe0ef          	jal	ra,20012bce <__metal_driver_cpu_interrupt_controller>
20014464:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:777
}
20014466:	853e                	mv	a0,a5
20014468:	40f2                	lw	ra,28(sp)
2001446a:	4462                	lw	s0,24(sp)
2001446c:	6105                	addi	sp,sp,32
2001446e:	8082                	ret

20014470 <__metal_driver_cpu_exception_register>:
__metal_driver_cpu_exception_register():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:798
    }
    return -1;
}

int __metal_driver_cpu_exception_register(struct metal_cpu *cpu, int ecode,
                                          metal_exception_handler_t isr) {
20014470:	7179                	addi	sp,sp,-48
20014472:	d606                	sw	ra,44(sp)
20014474:	d422                	sw	s0,40(sp)
20014476:	1800                	addi	s0,sp,48
20014478:	fca42e23          	sw	a0,-36(s0)
2001447c:	fcb42c23          	sw	a1,-40(s0)
20014480:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:801
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20014484:	fdc42503          	lw	a0,-36(s0)
20014488:	f46fe0ef          	jal	ra,20012bce <__metal_driver_cpu_interrupt_controller>
2001448c:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:803

    if (intc) {
20014490:	fec42783          	lw	a5,-20(s0)
20014494:	cb99                	beqz	a5,200144aa <__metal_driver_cpu_exception_register+0x3a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:804
        return __metal_exception_register((struct metal_interrupt *)intc, ecode,
20014496:	fd442603          	lw	a2,-44(s0)
2001449a:	fd842583          	lw	a1,-40(s0)
2001449e:	fec42503          	lw	a0,-20(s0)
200144a2:	8bdff0ef          	jal	ra,20013d5e <__metal_exception_register>
200144a6:	87aa                	mv	a5,a0
200144a8:	a011                	j	200144ac <__metal_driver_cpu_exception_register+0x3c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:807
                                          isr);
    }
    return -1;
200144aa:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:808
}
200144ac:	853e                	mv	a0,a5
200144ae:	50b2                	lw	ra,44(sp)
200144b0:	5422                	lw	s0,40(sp)
200144b2:	6145                	addi	sp,sp,48
200144b4:	8082                	ret

200144b6 <__metal_driver_cpu_get_instruction_length>:
__metal_driver_cpu_get_instruction_length():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:811

int __metal_driver_cpu_get_instruction_length(struct metal_cpu *cpu,
                                              uintptr_t epc) {
200144b6:	1101                	addi	sp,sp,-32
200144b8:	ce22                	sw	s0,28(sp)
200144ba:	1000                	addi	s0,sp,32
200144bc:	fea42623          	sw	a0,-20(s0)
200144c0:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:817
    /**
     * Per ISA compressed instruction has last two bits of opcode set.
     * The encoding '00' '01' '10' are used for compressed instruction.
     * Only enconding '11' isn't regarded as compressed instruction (>16b).
     */
    return ((*(unsigned short *)epc & METAL_INSN_LENGTH_MASK) ==
200144c4:	fe842783          	lw	a5,-24(s0)
200144c8:	0007d783          	lhu	a5,0(a5)
200144cc:	0037f713          	andi	a4,a5,3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:820
            METAL_INSN_NOT_COMPRESSED)
               ? 4
               : 2;
200144d0:	478d                	li	a5,3
200144d2:	00f71463          	bne	a4,a5,200144da <__metal_driver_cpu_get_instruction_length+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 1)
200144d6:	4791                	li	a5,4
200144d8:	a011                	j	200144dc <__metal_driver_cpu_get_instruction_length+0x26>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 2)
200144da:	4789                	li	a5,2
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:821 (discriminator 5)
}
200144dc:	853e                	mv	a0,a5
200144de:	4472                	lw	s0,28(sp)
200144e0:	6105                	addi	sp,sp,32
200144e2:	8082                	ret

200144e4 <__metal_driver_cpu_get_exception_pc>:
__metal_driver_cpu_get_exception_pc():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:823

uintptr_t __metal_driver_cpu_get_exception_pc(struct metal_cpu *cpu) {
200144e4:	7179                	addi	sp,sp,-48
200144e6:	d622                	sw	s0,44(sp)
200144e8:	1800                	addi	s0,sp,48
200144ea:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:825
    uintptr_t mepc;
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
200144ee:	341027f3          	csrr	a5,mepc
200144f2:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:826
    return mepc;
200144f6:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:827
}
200144fa:	853e                	mv	a0,a5
200144fc:	5432                	lw	s0,44(sp)
200144fe:	6145                	addi	sp,sp,48
20014500:	8082                	ret

20014502 <__metal_driver_cpu_set_exception_pc>:
__metal_driver_cpu_set_exception_pc():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:829

int __metal_driver_cpu_set_exception_pc(struct metal_cpu *cpu, uintptr_t mepc) {
20014502:	1101                	addi	sp,sp,-32
20014504:	ce22                	sw	s0,28(sp)
20014506:	1000                	addi	s0,sp,32
20014508:	fea42623          	sw	a0,-20(s0)
2001450c:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:830
    __asm__ volatile("csrw mepc, %0" ::"r"(mepc));
20014510:	fe842783          	lw	a5,-24(s0)
20014514:	34179073          	csrw	mepc,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:831
    return 0;
20014518:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:832
}
2001451a:	853e                	mv	a0,a5
2001451c:	4472                	lw	s0,28(sp)
2001451e:	6105                	addi	sp,sp,32
20014520:	8082                	ret

20014522 <__metal_driver_cpu_get_buserror>:
__metal_driver_cpu_get_buserror():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:834

struct metal_buserror *__metal_driver_cpu_get_buserror(struct metal_cpu *cpu) {
20014522:	1101                	addi	sp,sp,-32
20014524:	ce06                	sw	ra,28(sp)
20014526:	cc22                	sw	s0,24(sp)
20014528:	1000                	addi	s0,sp,32
2001452a:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:835
    return __metal_driver_cpu_buserror(cpu);
2001452e:	fec42503          	lw	a0,-20(s0)
20014532:	ec6fe0ef          	jal	ra,20012bf8 <__metal_driver_cpu_buserror>
20014536:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:836
}
20014538:	853e                	mv	a0,a5
2001453a:	40f2                	lw	ra,28(sp)
2001453c:	4462                	lw	s0,24(sp)
2001453e:	6105                	addi	sp,sp,32
20014540:	8082                	ret

20014542 <__metal_driver_sifive_plic0_control_base>:
__metal_driver_sifive_plic0_control_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:345



/* --------------------- sifive_plic0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_plic0_control_base(struct metal_interrupt *controller)
{
20014542:	1101                	addi	sp,sp,-32
20014544:	ce22                	sw	s0,28(sp)
20014546:	1000                	addi	s0,sp,32
20014548:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:346
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
2001454c:	fec42703          	lw	a4,-20(s0)
20014550:	800007b7          	lui	a5,0x80000
20014554:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffeca0>
20014558:	00f71563          	bne	a4,a5,20014562 <__metal_driver_sifive_plic0_control_base+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:347
		return METAL_RISCV_PLIC0_C000000_BASE_ADDRESS;
2001455c:	0c0007b7          	lui	a5,0xc000
20014560:	a011                	j	20014564 <__metal_driver_sifive_plic0_control_base+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:350
	}
	else {
		return 0;
20014562:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:352
	}
}
20014564:	853e                	mv	a0,a5
20014566:	4472                	lw	s0,28(sp)
20014568:	6105                	addi	sp,sp,32
2001456a:	8082                	ret

2001456c <__metal_driver_sifive_plic0_num_interrupts>:
__metal_driver_sifive_plic0_num_interrupts():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:365
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_plic0_num_interrupts(struct metal_interrupt *controller)
{
2001456c:	1101                	addi	sp,sp,-32
2001456e:	ce22                	sw	s0,28(sp)
20014570:	1000                	addi	s0,sp,32
20014572:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:366
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20014576:	fec42703          	lw	a4,-20(s0)
2001457a:	800007b7          	lui	a5,0x80000
2001457e:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffeca0>
20014582:	00f71563          	bne	a4,a5,2001458c <__metal_driver_sifive_plic0_num_interrupts+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:367
		return METAL_RISCV_PLIC0_C000000_RISCV_NDEV;
20014586:	03500793          	li	a5,53
2001458a:	a011                	j	2001458e <__metal_driver_sifive_plic0_num_interrupts+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:370
	}
	else {
		return 0;
2001458c:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:372
	}
}
2001458e:	853e                	mv	a0,a5
20014590:	4472                	lw	s0,28(sp)
20014592:	6105                	addi	sp,sp,32
20014594:	8082                	ret

20014596 <__metal_driver_sifive_plic0_max_priority>:
__metal_driver_sifive_plic0_max_priority():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:375

static __inline__ int __metal_driver_sifive_plic0_max_priority(struct metal_interrupt *controller)
{
20014596:	1101                	addi	sp,sp,-32
20014598:	ce22                	sw	s0,28(sp)
2001459a:	1000                	addi	s0,sp,32
2001459c:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:376
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
200145a0:	fec42703          	lw	a4,-20(s0)
200145a4:	800007b7          	lui	a5,0x80000
200145a8:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffeca0>
200145ac:	00f71463          	bne	a4,a5,200145b4 <__metal_driver_sifive_plic0_max_priority+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:377
		return METAL_RISCV_PLIC0_C000000_RISCV_MAX_PRIORITY;
200145b0:	479d                	li	a5,7
200145b2:	a011                	j	200145b6 <__metal_driver_sifive_plic0_max_priority+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:380
	}
	else {
		return 0;
200145b4:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:382
	}
}
200145b6:	853e                	mv	a0,a5
200145b8:	4472                	lw	s0,28(sp)
200145ba:	6105                	addi	sp,sp,32
200145bc:	8082                	ret

200145be <__metal_driver_sifive_plic0_interrupt_parents>:
__metal_driver_sifive_plic0_interrupt_parents():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:385

static __inline__ struct metal_interrupt * __metal_driver_sifive_plic0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
200145be:	1101                	addi	sp,sp,-32
200145c0:	ce22                	sw	s0,28(sp)
200145c2:	1000                	addi	s0,sp,32
200145c4:	fea42623          	sw	a0,-20(s0)
200145c8:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:386
	if (idx == 0) {
200145cc:	fe842783          	lw	a5,-24(s0)
200145d0:	e791                	bnez	a5,200145dc <__metal_driver_sifive_plic0_interrupt_parents+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:387
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
200145d2:	800007b7          	lui	a5,0x80000
200145d6:	09078793          	addi	a5,a5,144 # 80000090 <metal_segment_heap_target_end+0xffffe8d0>
200145da:	a011                	j	200145de <__metal_driver_sifive_plic0_interrupt_parents+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:390
	}
	else {
		return NULL;
200145dc:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:392
	}
}
200145de:	853e                	mv	a0,a5
200145e0:	4472                	lw	s0,28(sp)
200145e2:	6105                	addi	sp,sp,32
200145e4:	8082                	ret

200145e6 <__metal_driver_sifive_plic0_interrupt_lines>:
__metal_driver_sifive_plic0_interrupt_lines():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:395

static __inline__ int __metal_driver_sifive_plic0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
200145e6:	1101                	addi	sp,sp,-32
200145e8:	ce22                	sw	s0,28(sp)
200145ea:	1000                	addi	s0,sp,32
200145ec:	fea42623          	sw	a0,-20(s0)
200145f0:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:396
	if (idx == 0) {
200145f4:	fe842783          	lw	a5,-24(s0)
200145f8:	e399                	bnez	a5,200145fe <__metal_driver_sifive_plic0_interrupt_lines+0x18>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:397
		return 11;
200145fa:	47ad                	li	a5,11
200145fc:	a011                	j	20014600 <__metal_driver_sifive_plic0_interrupt_lines+0x1a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:400
	}
	else {
		return 0;
200145fe:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:402
	}
}
20014600:	853e                	mv	a0,a5
20014602:	4472                	lw	s0,28(sp)
20014604:	6105                	addi	sp,sp,32
20014606:	8082                	ret

20014608 <__metal_driver_sifive_plic0_context_ids>:
__metal_driver_sifive_plic0_context_ids():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:405

static __inline__ int __metal_driver_sifive_plic0_context_ids(int hartid)
{
20014608:	1101                	addi	sp,sp,-32
2001460a:	ce22                	sw	s0,28(sp)
2001460c:	1000                	addi	s0,sp,32
2001460e:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:406
	if (hartid == 0) {
20014612:	fec42783          	lw	a5,-20(s0)
20014616:	e399                	bnez	a5,2001461c <__metal_driver_sifive_plic0_context_ids+0x14>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:407
		return 0;
20014618:	4781                	li	a5,0
2001461a:	a011                	j	2001461e <__metal_driver_sifive_plic0_context_ids+0x16>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:410
	}
	else {
		return -1;
2001461c:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:412
	}
}
2001461e:	853e                	mv	a0,a5
20014620:	4472                	lw	s0,28(sp)
20014622:	6105                	addi	sp,sp,32
20014624:	8082                	ret

20014626 <__metal_plic0_claim_interrupt>:
__metal_plic0_claim_interrupt():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:18
#include <metal/machine.h>
#include <metal/shutdown.h>

unsigned int
__metal_plic0_claim_interrupt(struct __metal_driver_riscv_plic0 *plic,
                              int context_id) {
20014626:	7179                	addi	sp,sp,-48
20014628:	d606                	sw	ra,44(sp)
2001462a:	d422                	sw	s0,40(sp)
2001462c:	1800                	addi	s0,sp,48
2001462e:	fca42e23          	sw	a0,-36(s0)
20014632:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:19
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20014636:	fdc42503          	lw	a0,-36(s0)
2001463a:	3721                	jal	20014542 <__metal_driver_sifive_plic0_control_base>
2001463c:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:21
        (struct metal_interrupt *)plic);
    return __METAL_ACCESS_ONCE(
20014640:	fd842783          	lw	a5,-40(s0)
20014644:	00c79713          	slli	a4,a5,0xc
20014648:	fec42783          	lw	a5,-20(s0)
2001464c:	973e                	add	a4,a4,a5
2001464e:	002007b7          	lui	a5,0x200
20014652:	0791                	addi	a5,a5,4
20014654:	97ba                	add	a5,a5,a4
20014656:	439c                	lw	a5,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:25
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM));
}
20014658:	853e                	mv	a0,a5
2001465a:	50b2                	lw	ra,44(sp)
2001465c:	5422                	lw	s0,40(sp)
2001465e:	6145                	addi	sp,sp,48
20014660:	8082                	ret

20014662 <__metal_plic0_complete_interrupt>:
__metal_plic0_complete_interrupt():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:28

void __metal_plic0_complete_interrupt(struct __metal_driver_riscv_plic0 *plic,
                                      int context_id, unsigned int id) {
20014662:	7179                	addi	sp,sp,-48
20014664:	d606                	sw	ra,44(sp)
20014666:	d422                	sw	s0,40(sp)
20014668:	1800                	addi	s0,sp,48
2001466a:	fca42e23          	sw	a0,-36(s0)
2001466e:	fcb42c23          	sw	a1,-40(s0)
20014672:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:29
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20014676:	fdc42503          	lw	a0,-36(s0)
2001467a:	35e1                	jal	20014542 <__metal_driver_sifive_plic0_control_base>
2001467c:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:31
        (struct metal_interrupt *)plic);
    __METAL_ACCESS_ONCE(
20014680:	fd842783          	lw	a5,-40(s0)
20014684:	00c79713          	slli	a4,a5,0xc
20014688:	fec42783          	lw	a5,-20(s0)
2001468c:	973e                	add	a4,a4,a5
2001468e:	002007b7          	lui	a5,0x200
20014692:	0791                	addi	a5,a5,4
20014694:	97ba                	add	a5,a5,a4
20014696:	873e                	mv	a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:34
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM)) = id;
20014698:	fd442783          	lw	a5,-44(s0)
2001469c:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:35
}
2001469e:	0001                	nop
200146a0:	50b2                	lw	ra,44(sp)
200146a2:	5422                	lw	s0,40(sp)
200146a4:	6145                	addi	sp,sp,48
200146a6:	8082                	ret

200146a8 <__metal_plic0_set_threshold>:
__metal_plic0_set_threshold():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:38

int __metal_plic0_set_threshold(struct metal_interrupt *controller,
                                int context_id, unsigned int threshold) {
200146a8:	7179                	addi	sp,sp,-48
200146aa:	d606                	sw	ra,44(sp)
200146ac:	d422                	sw	s0,40(sp)
200146ae:	1800                	addi	s0,sp,48
200146b0:	fca42e23          	sw	a0,-36(s0)
200146b4:	fcb42c23          	sw	a1,-40(s0)
200146b8:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:40
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
200146bc:	fdc42503          	lw	a0,-36(s0)
200146c0:	3549                	jal	20014542 <__metal_driver_sifive_plic0_control_base>
200146c2:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:41
    __METAL_ACCESS_ONCE(
200146c6:	fd842783          	lw	a5,-40(s0)
200146ca:	00c79713          	slli	a4,a5,0xc
200146ce:	fec42783          	lw	a5,-20(s0)
200146d2:	973e                	add	a4,a4,a5
200146d4:	002007b7          	lui	a5,0x200
200146d8:	97ba                	add	a5,a5,a4
200146da:	873e                	mv	a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:44
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD)) = threshold;
200146dc:	fd442783          	lw	a5,-44(s0)
200146e0:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:45
    return 0;
200146e2:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:46
}
200146e4:	853e                	mv	a0,a5
200146e6:	50b2                	lw	ra,44(sp)
200146e8:	5422                	lw	s0,40(sp)
200146ea:	6145                	addi	sp,sp,48
200146ec:	8082                	ret

200146ee <__metal_plic0_get_threshold>:
__metal_plic0_get_threshold():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:49

unsigned int __metal_plic0_get_threshold(struct metal_interrupt *controller,
                                         int context_id) {
200146ee:	7179                	addi	sp,sp,-48
200146f0:	d606                	sw	ra,44(sp)
200146f2:	d422                	sw	s0,40(sp)
200146f4:	1800                	addi	s0,sp,48
200146f6:	fca42e23          	sw	a0,-36(s0)
200146fa:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:51
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
200146fe:	fdc42503          	lw	a0,-36(s0)
20014702:	3581                	jal	20014542 <__metal_driver_sifive_plic0_control_base>
20014704:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:52
    return __METAL_ACCESS_ONCE(
20014708:	fd842783          	lw	a5,-40(s0)
2001470c:	00c79713          	slli	a4,a5,0xc
20014710:	fec42783          	lw	a5,-20(s0)
20014714:	973e                	add	a4,a4,a5
20014716:	002007b7          	lui	a5,0x200
2001471a:	97ba                	add	a5,a5,a4
2001471c:	439c                	lw	a5,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:56
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD));
}
2001471e:	853e                	mv	a0,a5
20014720:	50b2                	lw	ra,44(sp)
20014722:	5422                	lw	s0,40(sp)
20014724:	6145                	addi	sp,sp,48
20014726:	8082                	ret

20014728 <__metal_driver_riscv_plic0_set_priority>:
__metal_driver_riscv_plic0_set_priority():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:59

int __metal_driver_riscv_plic0_set_priority(struct metal_interrupt *controller,
                                            int id, unsigned int priority) {
20014728:	7179                	addi	sp,sp,-48
2001472a:	d606                	sw	ra,44(sp)
2001472c:	d422                	sw	s0,40(sp)
2001472e:	1800                	addi	s0,sp,48
20014730:	fca42e23          	sw	a0,-36(s0)
20014734:	fcb42c23          	sw	a1,-40(s0)
20014738:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:60
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
2001473c:	fdc42503          	lw	a0,-36(s0)
20014740:	3509                	jal	20014542 <__metal_driver_sifive_plic0_control_base>
20014742:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:62
        (struct metal_interrupt *)controller);
    unsigned int max_priority = __metal_driver_sifive_plic0_max_priority(
20014746:	fdc42503          	lw	a0,-36(s0)
2001474a:	35b1                	jal	20014596 <__metal_driver_sifive_plic0_max_priority>
2001474c:	87aa                	mv	a5,a0
2001474e:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:64
        (struct metal_interrupt *)controller);
    if ((max_priority) && (priority < max_priority)) {
20014752:	fe842783          	lw	a5,-24(s0)
20014756:	c785                	beqz	a5,2001477e <__metal_driver_riscv_plic0_set_priority+0x56>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:64 (discriminator 1)
20014758:	fd442703          	lw	a4,-44(s0)
2001475c:	fe842783          	lw	a5,-24(s0)
20014760:	00f77f63          	bgeu	a4,a5,2001477e <__metal_driver_riscv_plic0_set_priority+0x56>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:65
        __METAL_ACCESS_ONCE(
20014764:	fd842783          	lw	a5,-40(s0)
20014768:	078a                	slli	a5,a5,0x2
2001476a:	873e                	mv	a4,a5
2001476c:	fec42783          	lw	a5,-20(s0)
20014770:	97ba                	add	a5,a5,a4
20014772:	873e                	mv	a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:67
            (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                               (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT))) =
20014774:	fd442783          	lw	a5,-44(s0)
20014778:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:69
            priority;
        return 0;
2001477a:	4781                	li	a5,0
2001477c:	a011                	j	20014780 <__metal_driver_riscv_plic0_set_priority+0x58>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:71
    }
    return -1;
2001477e:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:72
}
20014780:	853e                	mv	a0,a5
20014782:	50b2                	lw	ra,44(sp)
20014784:	5422                	lw	s0,40(sp)
20014786:	6145                	addi	sp,sp,48
20014788:	8082                	ret

2001478a <__metal_driver_riscv_plic0_get_priority>:
__metal_driver_riscv_plic0_get_priority():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:76

unsigned int
__metal_driver_riscv_plic0_get_priority(struct metal_interrupt *controller,
                                        int id) {
2001478a:	7179                	addi	sp,sp,-48
2001478c:	d606                	sw	ra,44(sp)
2001478e:	d422                	sw	s0,40(sp)
20014790:	1800                	addi	s0,sp,48
20014792:	fca42e23          	sw	a0,-36(s0)
20014796:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:78
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
2001479a:	fdc42503          	lw	a0,-36(s0)
2001479e:	3355                	jal	20014542 <__metal_driver_sifive_plic0_control_base>
200147a0:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:80

    return __METAL_ACCESS_ONCE(
200147a4:	fd842783          	lw	a5,-40(s0)
200147a8:	078a                	slli	a5,a5,0x2
200147aa:	873e                	mv	a4,a5
200147ac:	fec42783          	lw	a5,-20(s0)
200147b0:	97ba                	add	a5,a5,a4
200147b2:	439c                	lw	a5,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:83
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                           (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT)));
}
200147b4:	853e                	mv	a0,a5
200147b6:	50b2                	lw	ra,44(sp)
200147b8:	5422                	lw	s0,40(sp)
200147ba:	6145                	addi	sp,sp,48
200147bc:	8082                	ret

200147be <__metal_plic0_enable>:
__metal_plic0_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:86

int __metal_plic0_enable(struct __metal_driver_riscv_plic0 *plic,
                         int context_id, int id, int enable) {
200147be:	7179                	addi	sp,sp,-48
200147c0:	d606                	sw	ra,44(sp)
200147c2:	d422                	sw	s0,40(sp)
200147c4:	1800                	addi	s0,sp,48
200147c6:	fca42e23          	sw	a0,-36(s0)
200147ca:	fcb42c23          	sw	a1,-40(s0)
200147ce:	fcc42a23          	sw	a2,-44(s0)
200147d2:	fcd42823          	sw	a3,-48(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:88
    unsigned int current;
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
200147d6:	fdc42503          	lw	a0,-36(s0)
200147da:	33a5                	jal	20014542 <__metal_driver_sifive_plic0_control_base>
200147dc:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:91
        (struct metal_interrupt *)plic);

    current = __METAL_ACCESS_ONCE(
200147e0:	fd842783          	lw	a5,-40(s0)
200147e4:	00779713          	slli	a4,a5,0x7
200147e8:	fec42783          	lw	a5,-20(s0)
200147ec:	97ba                	add	a5,a5,a4
200147ee:	fd442703          	lw	a4,-44(s0)
200147f2:	8715                	srai	a4,a4,0x5
200147f4:	070a                	slli	a4,a4,0x2
200147f6:	973e                	add	a4,a4,a5
200147f8:	6789                	lui	a5,0x2
200147fa:	97ba                	add	a5,a5,a4
200147fc:	439c                	lw	a5,0(a5)
200147fe:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:100
    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_ENABLE_BASE +
                           (context_id * METAL_RISCV_PLIC0_ENABLE_PER_HART) +
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
20014802:	fd042783          	lw	a5,-48(s0)
20014806:	cf81                	beqz	a5,2001481e <__metal_plic0_enable+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:99 (discriminator 1)
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
20014808:	fd442783          	lw	a5,-44(s0)
2001480c:	8bfd                	andi	a5,a5,31
2001480e:	4705                	li	a4,1
20014810:	00f717b3          	sll	a5,a4,a5
20014814:	873e                	mv	a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 1)
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
20014816:	fe842783          	lw	a5,-24(s0)
2001481a:	8fd9                	or	a5,a5,a4
2001481c:	a829                	j	20014836 <__metal_plic0_enable+0x78>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 2)
2001481e:	fd442783          	lw	a5,-44(s0)
20014822:	8bfd                	andi	a5,a5,31
20014824:	4705                	li	a4,1
20014826:	00f717b3          	sll	a5,a4,a5
2001482a:	fff7c793          	not	a5,a5
2001482e:	873e                	mv	a4,a5
20014830:	fe842783          	lw	a5,-24(s0)
20014834:	8ff9                	and	a5,a5,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:95
    __METAL_ACCESS_ONCE(
20014836:	fd842703          	lw	a4,-40(s0)
2001483a:	00771693          	slli	a3,a4,0x7
2001483e:	fec42703          	lw	a4,-20(s0)
20014842:	9736                	add	a4,a4,a3
20014844:	fd442683          	lw	a3,-44(s0)
20014848:	8695                	srai	a3,a3,0x5
2001484a:	068a                	slli	a3,a3,0x2
2001484c:	96ba                	add	a3,a3,a4
2001484e:	6709                	lui	a4,0x2
20014850:	9736                	add	a4,a4,a3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:98
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
20014852:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:102

    return 0;
20014854:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:103
}
20014856:	853e                	mv	a0,a5
20014858:	50b2                	lw	ra,44(sp)
2001485a:	5422                	lw	s0,40(sp)
2001485c:	6145                	addi	sp,sp,48
2001485e:	8082                	ret

20014860 <__metal_plic0_default_handler>:
__metal_plic0_default_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:105

void __metal_plic0_default_handler(int id, void *priv) { metal_shutdown(300); }
20014860:	1101                	addi	sp,sp,-32
20014862:	ce06                	sw	ra,28(sp)
20014864:	cc22                	sw	s0,24(sp)
20014866:	1000                	addi	s0,sp,32
20014868:	fea42623          	sw	a0,-20(s0)
2001486c:	feb42423          	sw	a1,-24(s0)
20014870:	12c00513          	li	a0,300
20014874:	531020ef          	jal	ra,200175a4 <metal_shutdown>

20014878 <__metal_plic0_handler>:
__metal_plic0_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:107

void __metal_plic0_handler(int id, void *priv) {
20014878:	7179                	addi	sp,sp,-48
2001487a:	d606                	sw	ra,44(sp)
2001487c:	d422                	sw	s0,40(sp)
2001487e:	1800                	addi	s0,sp,48
20014880:	fca42e23          	sw	a0,-36(s0)
20014884:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:108
    struct __metal_driver_riscv_plic0 *plic = priv;
20014888:	fd842783          	lw	a5,-40(s0)
2001488c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:110
    int contextid =
        __metal_driver_sifive_plic0_context_ids(__metal_myhart_id());
20014890:	bbcfe0ef          	jal	ra,20012c4c <__metal_myhart_id>
20014894:	87aa                	mv	a5,a0
20014896:	853e                	mv	a0,a5
20014898:	3b85                	jal	20014608 <__metal_driver_sifive_plic0_context_ids>
2001489a:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:111
    unsigned int idx = __metal_plic0_claim_interrupt(plic, contextid);
2001489e:	fe842583          	lw	a1,-24(s0)
200148a2:	fec42503          	lw	a0,-20(s0)
200148a6:	3341                	jal	20014626 <__metal_plic0_claim_interrupt>
200148a8:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:112
    unsigned int num_interrupts = __metal_driver_sifive_plic0_num_interrupts(
200148ac:	fec42503          	lw	a0,-20(s0)
200148b0:	3975                	jal	2001456c <__metal_driver_sifive_plic0_num_interrupts>
200148b2:	87aa                	mv	a5,a0
200148b4:	fef42023          	sw	a5,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:115
        (struct metal_interrupt *)plic);

    if ((idx < num_interrupts) && (plic->metal_exint_table[idx])) {
200148b8:	fe442703          	lw	a4,-28(s0)
200148bc:	fe042783          	lw	a5,-32(s0)
200148c0:	04f77263          	bgeu	a4,a5,20014904 <__metal_plic0_handler+0x8c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:115 (discriminator 1)
200148c4:	fec42703          	lw	a4,-20(s0)
200148c8:	fe442783          	lw	a5,-28(s0)
200148cc:	078a                	slli	a5,a5,0x2
200148ce:	97ba                	add	a5,a5,a4
200148d0:	479c                	lw	a5,8(a5)
200148d2:	cb8d                	beqz	a5,20014904 <__metal_plic0_handler+0x8c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:116
        plic->metal_exint_table[idx](idx,
200148d4:	fec42703          	lw	a4,-20(s0)
200148d8:	fe442783          	lw	a5,-28(s0)
200148dc:	078a                	slli	a5,a5,0x2
200148de:	97ba                	add	a5,a5,a4
200148e0:	0087a803          	lw	a6,8(a5) # 2008 <__heap_size+0x1808>
200148e4:	fe442603          	lw	a2,-28(s0)
200148e8:	fec42683          	lw	a3,-20(s0)
200148ec:	fe442703          	lw	a4,-28(s0)
200148f0:	87ba                	mv	a5,a4
200148f2:	0786                	slli	a5,a5,0x1
200148f4:	97ba                	add	a5,a5,a4
200148f6:	078e                	slli	a5,a5,0x3
200148f8:	97b6                	add	a5,a5,a3
200148fa:	0f07a783          	lw	a5,240(a5)
200148fe:	85be                	mv	a1,a5
20014900:	8532                	mv	a0,a2
20014902:	9802                	jalr	a6
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:120
                                     plic->metal_exdata_table[idx].exint_data);
    }

    __metal_plic0_complete_interrupt(plic, contextid, idx);
20014904:	fe442603          	lw	a2,-28(s0)
20014908:	fe842583          	lw	a1,-24(s0)
2001490c:	fec42503          	lw	a0,-20(s0)
20014910:	3b89                	jal	20014662 <__metal_plic0_complete_interrupt>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:121
}
20014912:	0001                	nop
20014914:	50b2                	lw	ra,44(sp)
20014916:	5422                	lw	s0,40(sp)
20014918:	6145                	addi	sp,sp,48
2001491a:	8082                	ret

2001491c <__metal_driver_riscv_plic0_init>:
__metal_driver_riscv_plic0_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:123

void __metal_driver_riscv_plic0_init(struct metal_interrupt *controller) {
2001491c:	7139                	addi	sp,sp,-64
2001491e:	de06                	sw	ra,60(sp)
20014920:	dc22                	sw	s0,56(sp)
20014922:	0080                	addi	s0,sp,64
20014924:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:124
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20014928:	fcc42783          	lw	a5,-52(s0)
2001492c:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:126

    if (!plic->init_done) {
20014930:	fe442783          	lw	a5,-28(s0)
20014934:	43dc                	lw	a5,4(a5)
20014936:	12079663          	bnez	a5,20014a62 <__metal_driver_riscv_plic0_init+0x146>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:130
        int num_interrupts, line;
        struct metal_interrupt *intc;

        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
2001493a:	fe042623          	sw	zero,-20(s0)
2001493e:	aa11                	j	20014a52 <__metal_driver_riscv_plic0_init+0x136>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:132
            num_interrupts =
                __metal_driver_sifive_plic0_num_interrupts(controller);
20014940:	fcc42503          	lw	a0,-52(s0)
20014944:	3125                	jal	2001456c <__metal_driver_sifive_plic0_num_interrupts>
20014946:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:133
            intc = __metal_driver_sifive_plic0_interrupt_parents(controller,
2001494a:	fec42583          	lw	a1,-20(s0)
2001494e:	fcc42503          	lw	a0,-52(s0)
20014952:	31b5                	jal	200145be <__metal_driver_sifive_plic0_interrupt_parents>
20014954:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:136
                                                                 parent);
            line =
                __metal_driver_sifive_plic0_interrupt_lines(controller, parent);
20014958:	fec42583          	lw	a1,-20(s0)
2001495c:	fcc42503          	lw	a0,-52(s0)
20014960:	3159                	jal	200145e6 <__metal_driver_sifive_plic0_interrupt_lines>
20014962:	fca42c23          	sw	a0,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:139

            /* Initialize ist parent controller, aka cpu_intc. */
            intc->vtable->interrupt_init(intc);
20014966:	fdc42783          	lw	a5,-36(s0)
2001496a:	439c                	lw	a5,0(a5)
2001496c:	439c                	lw	a5,0(a5)
2001496e:	fdc42503          	lw	a0,-36(s0)
20014972:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:141

            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
20014974:	fe042423          	sw	zero,-24(s0)
20014978:	a885                	j	200149e8 <__metal_driver_riscv_plic0_init+0xcc>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:142
                __metal_plic0_enable(plic, parent, i, METAL_DISABLE);
2001497a:	4681                	li	a3,0
2001497c:	fe842603          	lw	a2,-24(s0)
20014980:	fec42583          	lw	a1,-20(s0)
20014984:	fe442503          	lw	a0,-28(s0)
20014988:	3d1d                	jal	200147be <__metal_plic0_enable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:143
                if (i < num_interrupts) {
2001498a:	fe842703          	lw	a4,-24(s0)
2001498e:	fe042783          	lw	a5,-32(s0)
20014992:	04f75663          	bge	a4,a5,200149de <__metal_driver_riscv_plic0_init+0xc2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:144
                    __metal_driver_riscv_plic0_set_priority(controller, i, 0);
20014996:	4601                	li	a2,0
20014998:	fe842583          	lw	a1,-24(s0)
2001499c:	fcc42503          	lw	a0,-52(s0)
200149a0:	3361                	jal	20014728 <__metal_driver_riscv_plic0_set_priority>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:145
                    plic->metal_exint_table[i] = NULL;
200149a2:	fe442703          	lw	a4,-28(s0)
200149a6:	fe842783          	lw	a5,-24(s0)
200149aa:	078a                	slli	a5,a5,0x2
200149ac:	97ba                	add	a5,a5,a4
200149ae:	0007a423          	sw	zero,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:146
                    plic->metal_exdata_table[i].sub_int = NULL;
200149b2:	fe442683          	lw	a3,-28(s0)
200149b6:	fe842703          	lw	a4,-24(s0)
200149ba:	87ba                	mv	a5,a4
200149bc:	0786                	slli	a5,a5,0x1
200149be:	97ba                	add	a5,a5,a4
200149c0:	078e                	slli	a5,a5,0x3
200149c2:	97b6                	add	a5,a5,a3
200149c4:	0e07a623          	sw	zero,236(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:147
                    plic->metal_exdata_table[i].exint_data = NULL;
200149c8:	fe442683          	lw	a3,-28(s0)
200149cc:	fe842703          	lw	a4,-24(s0)
200149d0:	87ba                	mv	a5,a4
200149d2:	0786                	slli	a5,a5,0x1
200149d4:	97ba                	add	a5,a5,a4
200149d6:	078e                	slli	a5,a5,0x3
200149d8:	97b6                	add	a5,a5,a3
200149da:	0e07a823          	sw	zero,240(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 2)
            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
200149de:	fe842783          	lw	a5,-24(s0)
200149e2:	0785                	addi	a5,a5,1
200149e4:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 1)
200149e8:	fe842703          	lw	a4,-24(s0)
200149ec:	3ff00793          	li	a5,1023
200149f0:	f8e7d5e3          	bge	a5,a4,2001497a <__metal_driver_riscv_plic0_init+0x5e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:151 (discriminator 2)
                }
            }

            __metal_plic0_set_threshold(controller, parent, 0);
200149f4:	4601                	li	a2,0
200149f6:	fec42583          	lw	a1,-20(s0)
200149fa:	fcc42503          	lw	a0,-52(s0)
200149fe:	316d                	jal	200146a8 <__metal_plic0_set_threshold>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:154 (discriminator 2)

            /* Register plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_register(intc, line, NULL, plic);
20014a00:	fdc42783          	lw	a5,-36(s0)
20014a04:	439c                	lw	a5,0(a5)
20014a06:	4fdc                	lw	a5,28(a5)
20014a08:	fe442683          	lw	a3,-28(s0)
20014a0c:	4601                	li	a2,0
20014a0e:	fd842583          	lw	a1,-40(s0)
20014a12:	fdc42503          	lw	a0,-36(s0)
20014a16:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:156 (discriminator 2)
            /* Register plic handler for dispatching its device interrupts */
            intc->vtable->interrupt_register(intc, line, __metal_plic0_handler,
20014a18:	fdc42783          	lw	a5,-36(s0)
20014a1c:	439c                	lw	a5,0(a5)
20014a1e:	4fd8                	lw	a4,28(a5)
20014a20:	fe442683          	lw	a3,-28(s0)
20014a24:	200157b7          	lui	a5,0x20015
20014a28:	87878613          	addi	a2,a5,-1928 # 20014878 <__metal_plic0_handler>
20014a2c:	fd842583          	lw	a1,-40(s0)
20014a30:	fdc42503          	lw	a0,-36(s0)
20014a34:	9702                	jalr	a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:159 (discriminator 2)
                                             plic);
            /* Enable plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_enable(intc, line);
20014a36:	fdc42783          	lw	a5,-36(s0)
20014a3a:	439c                	lw	a5,0(a5)
20014a3c:	53dc                	lw	a5,36(a5)
20014a3e:	fd842583          	lw	a1,-40(s0)
20014a42:	fdc42503          	lw	a0,-36(s0)
20014a46:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 2)
        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
20014a48:	fec42783          	lw	a5,-20(s0)
20014a4c:	0785                	addi	a5,a5,1
20014a4e:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 1)
20014a52:	fec42783          	lw	a5,-20(s0)
20014a56:	eef055e3          	blez	a5,20014940 <__metal_driver_riscv_plic0_init+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:161
        }
        plic->init_done = 1;
20014a5a:	fe442783          	lw	a5,-28(s0)
20014a5e:	4705                	li	a4,1
20014a60:	c3d8                	sw	a4,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:163
    }
}
20014a62:	0001                	nop
20014a64:	50f2                	lw	ra,60(sp)
20014a66:	5462                	lw	s0,56(sp)
20014a68:	6121                	addi	sp,sp,64
20014a6a:	8082                	ret

20014a6c <__metal_driver_riscv_plic0_register>:
__metal_driver_riscv_plic0_register():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:167

int __metal_driver_riscv_plic0_register(struct metal_interrupt *controller,
                                        int id, metal_interrupt_handler_t isr,
                                        void *priv) {
20014a6c:	7179                	addi	sp,sp,-48
20014a6e:	d606                	sw	ra,44(sp)
20014a70:	d422                	sw	s0,40(sp)
20014a72:	1800                	addi	s0,sp,48
20014a74:	fca42e23          	sw	a0,-36(s0)
20014a78:	fcb42c23          	sw	a1,-40(s0)
20014a7c:	fcc42a23          	sw	a2,-44(s0)
20014a80:	fcd42823          	sw	a3,-48(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:168
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20014a84:	fdc42783          	lw	a5,-36(s0)
20014a88:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:170

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20014a8c:	fdc42503          	lw	a0,-36(s0)
20014a90:	addff0ef          	jal	ra,2001456c <__metal_driver_sifive_plic0_num_interrupts>
20014a94:	872a                	mv	a4,a0
20014a96:	fd842783          	lw	a5,-40(s0)
20014a9a:	00e7c463          	blt	a5,a4,20014aa2 <__metal_driver_riscv_plic0_register+0x36>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:171
        return -1;
20014a9e:	57fd                	li	a5,-1
20014aa0:	a041                	j	20014b20 <__metal_driver_riscv_plic0_register+0xb4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:174
    }

    if (isr) {
20014aa2:	fd442783          	lw	a5,-44(s0)
20014aa6:	cf95                	beqz	a5,20014ae2 <__metal_driver_riscv_plic0_register+0x76>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:175
        __metal_driver_riscv_plic0_set_priority(controller, id, 2);
20014aa8:	4609                	li	a2,2
20014aaa:	fd842583          	lw	a1,-40(s0)
20014aae:	fdc42503          	lw	a0,-36(s0)
20014ab2:	399d                	jal	20014728 <__metal_driver_riscv_plic0_set_priority>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:176
        plic->metal_exint_table[id] = isr;
20014ab4:	fec42703          	lw	a4,-20(s0)
20014ab8:	fd842783          	lw	a5,-40(s0)
20014abc:	078a                	slli	a5,a5,0x2
20014abe:	97ba                	add	a5,a5,a4
20014ac0:	fd442703          	lw	a4,-44(s0)
20014ac4:	c798                	sw	a4,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:177
        plic->metal_exdata_table[id].exint_data = priv;
20014ac6:	fec42683          	lw	a3,-20(s0)
20014aca:	fd842703          	lw	a4,-40(s0)
20014ace:	87ba                	mv	a5,a4
20014ad0:	0786                	slli	a5,a5,0x1
20014ad2:	97ba                	add	a5,a5,a4
20014ad4:	078e                	slli	a5,a5,0x3
20014ad6:	97b6                	add	a5,a5,a3
20014ad8:	fd042703          	lw	a4,-48(s0)
20014adc:	0ee7a823          	sw	a4,240(a5)
20014ae0:	a83d                	j	20014b1e <__metal_driver_riscv_plic0_register+0xb2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:179
    } else {
        __metal_driver_riscv_plic0_set_priority(controller, id, 1);
20014ae2:	4605                	li	a2,1
20014ae4:	fd842583          	lw	a1,-40(s0)
20014ae8:	fdc42503          	lw	a0,-36(s0)
20014aec:	3935                	jal	20014728 <__metal_driver_riscv_plic0_set_priority>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:180
        plic->metal_exint_table[id] = __metal_plic0_default_handler;
20014aee:	fec42703          	lw	a4,-20(s0)
20014af2:	fd842783          	lw	a5,-40(s0)
20014af6:	078a                	slli	a5,a5,0x2
20014af8:	97ba                	add	a5,a5,a4
20014afa:	20015737          	lui	a4,0x20015
20014afe:	86070713          	addi	a4,a4,-1952 # 20014860 <__metal_plic0_default_handler>
20014b02:	c798                	sw	a4,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:181
        plic->metal_exdata_table[id].sub_int = priv;
20014b04:	fec42683          	lw	a3,-20(s0)
20014b08:	fd842703          	lw	a4,-40(s0)
20014b0c:	87ba                	mv	a5,a4
20014b0e:	0786                	slli	a5,a5,0x1
20014b10:	97ba                	add	a5,a5,a4
20014b12:	078e                	slli	a5,a5,0x3
20014b14:	97b6                	add	a5,a5,a3
20014b16:	fd042703          	lw	a4,-48(s0)
20014b1a:	0ee7a623          	sw	a4,236(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:184
    }

    return 0;
20014b1e:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:185
}
20014b20:	853e                	mv	a0,a5
20014b22:	50b2                	lw	ra,44(sp)
20014b24:	5422                	lw	s0,40(sp)
20014b26:	6145                	addi	sp,sp,48
20014b28:	8082                	ret

20014b2a <__metal_driver_riscv_plic0_enable>:
__metal_driver_riscv_plic0_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:188

int __metal_driver_riscv_plic0_enable(struct metal_interrupt *controller,
                                      int id) {
20014b2a:	7179                	addi	sp,sp,-48
20014b2c:	d606                	sw	ra,44(sp)
20014b2e:	d422                	sw	s0,40(sp)
20014b30:	1800                	addi	s0,sp,48
20014b32:	fca42e23          	sw	a0,-36(s0)
20014b36:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:189
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20014b3a:	fdc42783          	lw	a5,-36(s0)
20014b3e:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:191

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20014b42:	fdc42503          	lw	a0,-36(s0)
20014b46:	a27ff0ef          	jal	ra,2001456c <__metal_driver_sifive_plic0_num_interrupts>
20014b4a:	872a                	mv	a4,a0
20014b4c:	fd842783          	lw	a5,-40(s0)
20014b50:	00e7c463          	blt	a5,a4,20014b58 <__metal_driver_riscv_plic0_enable+0x2e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:192
        return -1;
20014b54:	57fd                	li	a5,-1
20014b56:	a821                	j	20014b6e <__metal_driver_riscv_plic0_enable+0x44>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:195
    }

    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_ENABLE);
20014b58:	8f4fe0ef          	jal	ra,20012c4c <__metal_myhart_id>
20014b5c:	87aa                	mv	a5,a0
20014b5e:	4685                	li	a3,1
20014b60:	fd842603          	lw	a2,-40(s0)
20014b64:	85be                	mv	a1,a5
20014b66:	fec42503          	lw	a0,-20(s0)
20014b6a:	3991                	jal	200147be <__metal_plic0_enable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:196
    return 0;
20014b6c:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:197
}
20014b6e:	853e                	mv	a0,a5
20014b70:	50b2                	lw	ra,44(sp)
20014b72:	5422                	lw	s0,40(sp)
20014b74:	6145                	addi	sp,sp,48
20014b76:	8082                	ret

20014b78 <__metal_driver_riscv_plic0_disable>:
__metal_driver_riscv_plic0_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:200

int __metal_driver_riscv_plic0_disable(struct metal_interrupt *controller,
                                       int id) {
20014b78:	7179                	addi	sp,sp,-48
20014b7a:	d606                	sw	ra,44(sp)
20014b7c:	d422                	sw	s0,40(sp)
20014b7e:	1800                	addi	s0,sp,48
20014b80:	fca42e23          	sw	a0,-36(s0)
20014b84:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:201
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20014b88:	fdc42783          	lw	a5,-36(s0)
20014b8c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:203

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20014b90:	fdc42503          	lw	a0,-36(s0)
20014b94:	9d9ff0ef          	jal	ra,2001456c <__metal_driver_sifive_plic0_num_interrupts>
20014b98:	872a                	mv	a4,a0
20014b9a:	fd842783          	lw	a5,-40(s0)
20014b9e:	00e7c463          	blt	a5,a4,20014ba6 <__metal_driver_riscv_plic0_disable+0x2e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:204
        return -1;
20014ba2:	57fd                	li	a5,-1
20014ba4:	a829                	j	20014bbe <__metal_driver_riscv_plic0_disable+0x46>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:206
    }
    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_DISABLE);
20014ba6:	8a6fe0ef          	jal	ra,20012c4c <__metal_myhart_id>
20014baa:	87aa                	mv	a5,a0
20014bac:	4681                	li	a3,0
20014bae:	fd842603          	lw	a2,-40(s0)
20014bb2:	85be                	mv	a1,a5
20014bb4:	fec42503          	lw	a0,-20(s0)
20014bb8:	c07ff0ef          	jal	ra,200147be <__metal_plic0_enable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:207
    return 0;
20014bbc:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:208
}
20014bbe:	853e                	mv	a0,a5
20014bc0:	50b2                	lw	ra,44(sp)
20014bc2:	5422                	lw	s0,40(sp)
20014bc4:	6145                	addi	sp,sp,48
20014bc6:	8082                	ret

20014bc8 <__metal_driver_riscv_plic0_set_threshold>:
__metal_driver_riscv_plic0_set_threshold():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:211

int __metal_driver_riscv_plic0_set_threshold(struct metal_interrupt *controller,
                                             unsigned int threshold) {
20014bc8:	1101                	addi	sp,sp,-32
20014bca:	ce06                	sw	ra,28(sp)
20014bcc:	cc22                	sw	s0,24(sp)
20014bce:	1000                	addi	s0,sp,32
20014bd0:	fea42623          	sw	a0,-20(s0)
20014bd4:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:212
    return __metal_plic0_set_threshold(controller, __metal_myhart_id(),
20014bd8:	874fe0ef          	jal	ra,20012c4c <__metal_myhart_id>
20014bdc:	87aa                	mv	a5,a0
20014bde:	fe842603          	lw	a2,-24(s0)
20014be2:	85be                	mv	a1,a5
20014be4:	fec42503          	lw	a0,-20(s0)
20014be8:	ac1ff0ef          	jal	ra,200146a8 <__metal_plic0_set_threshold>
20014bec:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:214
                                       threshold);
}
20014bee:	853e                	mv	a0,a5
20014bf0:	40f2                	lw	ra,28(sp)
20014bf2:	4462                	lw	s0,24(sp)
20014bf4:	6105                	addi	sp,sp,32
20014bf6:	8082                	ret

20014bf8 <__metal_driver_riscv_plic0_get_threshold>:
__metal_driver_riscv_plic0_get_threshold():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:217

unsigned int
__metal_driver_riscv_plic0_get_threshold(struct metal_interrupt *controller) {
20014bf8:	1101                	addi	sp,sp,-32
20014bfa:	ce06                	sw	ra,28(sp)
20014bfc:	cc22                	sw	s0,24(sp)
20014bfe:	1000                	addi	s0,sp,32
20014c00:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:218
    return __metal_plic0_get_threshold(controller, __metal_myhart_id());
20014c04:	848fe0ef          	jal	ra,20012c4c <__metal_myhart_id>
20014c08:	87aa                	mv	a5,a0
20014c0a:	85be                	mv	a1,a5
20014c0c:	fec42503          	lw	a0,-20(s0)
20014c10:	adfff0ef          	jal	ra,200146ee <__metal_plic0_get_threshold>
20014c14:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:219
}
20014c16:	853e                	mv	a0,a5
20014c18:	40f2                	lw	ra,28(sp)
20014c1a:	4462                	lw	s0,24(sp)
20014c1c:	6105                	addi	sp,sp,32
20014c1e:	8082                	ret

20014c20 <__metal_driver_riscv_plic0_affinity_enable>:
__metal_driver_riscv_plic0_affinity_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:223

metal_affinity
__metal_driver_riscv_plic0_affinity_enable(struct metal_interrupt *controller,
                                           metal_affinity bitmask, int id) {
20014c20:	7179                	addi	sp,sp,-48
20014c22:	d606                	sw	ra,44(sp)
20014c24:	d422                	sw	s0,40(sp)
20014c26:	1800                	addi	s0,sp,48
20014c28:	fca42e23          	sw	a0,-36(s0)
20014c2c:	fcb42c23          	sw	a1,-40(s0)
20014c30:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:224
    metal_affinity ret = {0};
20014c34:	fe042223          	sw	zero,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:227
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20014c38:	fdc42783          	lw	a5,-36(s0)
20014c3c:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:229

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20014c40:	fdc42503          	lw	a0,-36(s0)
20014c44:	929ff0ef          	jal	ra,2001456c <__metal_driver_sifive_plic0_num_interrupts>
20014c48:	872a                	mv	a4,a0
20014c4a:	fd442783          	lw	a5,-44(s0)
20014c4e:	00e7c863          	blt	a5,a4,20014c5e <__metal_driver_riscv_plic0_affinity_enable+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:230
        metal_affinity_set_val(ret, -1);
20014c52:	57fd                	li	a5,-1
20014c54:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:231
        return ret;
20014c58:	fe442783          	lw	a5,-28(s0)
20014c5c:	a899                	j	20014cb2 <__metal_driver_riscv_plic0_affinity_enable+0x92>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:234
    }

    for_each_metal_affinity(context, bitmask) {
20014c5e:	fe042623          	sw	zero,-20(s0)
20014c62:	a099                	j	20014ca8 <__metal_driver_riscv_plic0_affinity_enable+0x88>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:235
        if (context != 0)
20014c64:	fec42783          	lw	a5,-20(s0)
20014c68:	c795                	beqz	a5,20014c94 <__metal_driver_riscv_plic0_affinity_enable+0x74>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:236
            metal_affinity_set_bit(
20014c6a:	4685                	li	a3,1
20014c6c:	fd442603          	lw	a2,-44(s0)
20014c70:	fec42583          	lw	a1,-20(s0)
20014c74:	fe842503          	lw	a0,-24(s0)
20014c78:	b47ff0ef          	jal	ra,200147be <__metal_plic0_enable>
20014c7c:	87aa                	mv	a5,a0
20014c7e:	0017f713          	andi	a4,a5,1
20014c82:	fec42783          	lw	a5,-20(s0)
20014c86:	00f71733          	sll	a4,a4,a5
20014c8a:	fe442783          	lw	a5,-28(s0)
20014c8e:	8fd9                	or	a5,a5,a4
20014c90:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
20014c94:	fec42783          	lw	a5,-20(s0)
20014c98:	0785                	addi	a5,a5,1
20014c9a:	fef42623          	sw	a5,-20(s0)
20014c9e:	fd842783          	lw	a5,-40(s0)
20014ca2:	8385                	srli	a5,a5,0x1
20014ca4:	fcf42c23          	sw	a5,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 1)
20014ca8:	fd842783          	lw	a5,-40(s0)
20014cac:	ffc5                	bnez	a5,20014c64 <__metal_driver_riscv_plic0_affinity_enable+0x44>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:241
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_ENABLE));
    }

    return ret;
20014cae:	fe442783          	lw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:242 (discriminator 1)
}
20014cb2:	853e                	mv	a0,a5
20014cb4:	50b2                	lw	ra,44(sp)
20014cb6:	5422                	lw	s0,40(sp)
20014cb8:	6145                	addi	sp,sp,48
20014cba:	8082                	ret

20014cbc <__metal_driver_riscv_plic0_affinity_disable>:
__metal_driver_riscv_plic0_affinity_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:246

metal_affinity
__metal_driver_riscv_plic0_affinity_disable(struct metal_interrupt *controller,
                                            metal_affinity bitmask, int id) {
20014cbc:	7179                	addi	sp,sp,-48
20014cbe:	d606                	sw	ra,44(sp)
20014cc0:	d422                	sw	s0,40(sp)
20014cc2:	1800                	addi	s0,sp,48
20014cc4:	fca42e23          	sw	a0,-36(s0)
20014cc8:	fcb42c23          	sw	a1,-40(s0)
20014ccc:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:247
    metal_affinity ret = {0};
20014cd0:	fe042223          	sw	zero,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:250
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20014cd4:	fdc42783          	lw	a5,-36(s0)
20014cd8:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:252

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20014cdc:	fdc42503          	lw	a0,-36(s0)
20014ce0:	88dff0ef          	jal	ra,2001456c <__metal_driver_sifive_plic0_num_interrupts>
20014ce4:	872a                	mv	a4,a0
20014ce6:	fd442783          	lw	a5,-44(s0)
20014cea:	00e7c863          	blt	a5,a4,20014cfa <__metal_driver_riscv_plic0_affinity_disable+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:253
        metal_affinity_set_val(ret, -1);
20014cee:	57fd                	li	a5,-1
20014cf0:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:254
        return ret;
20014cf4:	fe442783          	lw	a5,-28(s0)
20014cf8:	a899                	j	20014d4e <__metal_driver_riscv_plic0_affinity_disable+0x92>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:257
    }

    for_each_metal_affinity(context, bitmask) {
20014cfa:	fe042623          	sw	zero,-20(s0)
20014cfe:	a099                	j	20014d44 <__metal_driver_riscv_plic0_affinity_disable+0x88>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:258
        if (context != 0)
20014d00:	fec42783          	lw	a5,-20(s0)
20014d04:	c795                	beqz	a5,20014d30 <__metal_driver_riscv_plic0_affinity_disable+0x74>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:259
            metal_affinity_set_bit(
20014d06:	4681                	li	a3,0
20014d08:	fd442603          	lw	a2,-44(s0)
20014d0c:	fec42583          	lw	a1,-20(s0)
20014d10:	fe842503          	lw	a0,-24(s0)
20014d14:	aabff0ef          	jal	ra,200147be <__metal_plic0_enable>
20014d18:	87aa                	mv	a5,a0
20014d1a:	0017f713          	andi	a4,a5,1
20014d1e:	fec42783          	lw	a5,-20(s0)
20014d22:	00f71733          	sll	a4,a4,a5
20014d26:	fe442783          	lw	a5,-28(s0)
20014d2a:	8fd9                	or	a5,a5,a4
20014d2c:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
20014d30:	fec42783          	lw	a5,-20(s0)
20014d34:	0785                	addi	a5,a5,1
20014d36:	fef42623          	sw	a5,-20(s0)
20014d3a:	fd842783          	lw	a5,-40(s0)
20014d3e:	8385                	srli	a5,a5,0x1
20014d40:	fcf42c23          	sw	a5,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 1)
20014d44:	fd842783          	lw	a5,-40(s0)
20014d48:	ffc5                	bnez	a5,20014d00 <__metal_driver_riscv_plic0_affinity_disable+0x44>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:264
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_DISABLE));
    }

    return ret;
20014d4a:	fe442783          	lw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:265 (discriminator 1)
}
20014d4e:	853e                	mv	a0,a5
20014d50:	50b2                	lw	ra,44(sp)
20014d52:	5422                	lw	s0,40(sp)
20014d54:	6145                	addi	sp,sp,48
20014d56:	8082                	ret

20014d58 <__metal_driver_riscv_plic0_affinity_set_threshold>:
__metal_driver_riscv_plic0_affinity_set_threshold():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:269

metal_affinity __metal_driver_riscv_plic0_affinity_set_threshold(
    struct metal_interrupt *controller, metal_affinity bitmask,
    unsigned int threshold) {
20014d58:	7179                	addi	sp,sp,-48
20014d5a:	d606                	sw	ra,44(sp)
20014d5c:	d422                	sw	s0,40(sp)
20014d5e:	1800                	addi	s0,sp,48
20014d60:	fca42e23          	sw	a0,-36(s0)
20014d64:	fcb42c23          	sw	a1,-40(s0)
20014d68:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:270
    metal_affinity ret = {0};
20014d6c:	fe042423          	sw	zero,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:273
    int context;

    for_each_metal_affinity(context, bitmask) {
20014d70:	fe042623          	sw	zero,-20(s0)
20014d74:	a091                	j	20014db8 <__metal_driver_riscv_plic0_affinity_set_threshold+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:274
        if (context != 0)
20014d76:	fec42783          	lw	a5,-20(s0)
20014d7a:	c78d                	beqz	a5,20014da4 <__metal_driver_riscv_plic0_affinity_set_threshold+0x4c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:275
            metal_affinity_set_bit(
20014d7c:	fd442603          	lw	a2,-44(s0)
20014d80:	fec42583          	lw	a1,-20(s0)
20014d84:	fdc42503          	lw	a0,-36(s0)
20014d88:	921ff0ef          	jal	ra,200146a8 <__metal_plic0_set_threshold>
20014d8c:	87aa                	mv	a5,a0
20014d8e:	0017f713          	andi	a4,a5,1
20014d92:	fec42783          	lw	a5,-20(s0)
20014d96:	00f71733          	sll	a4,a4,a5
20014d9a:	fe842783          	lw	a5,-24(s0)
20014d9e:	8fd9                	or	a5,a5,a4
20014da0:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
20014da4:	fec42783          	lw	a5,-20(s0)
20014da8:	0785                	addi	a5,a5,1
20014daa:	fef42623          	sw	a5,-20(s0)
20014dae:	fd842783          	lw	a5,-40(s0)
20014db2:	8385                	srli	a5,a5,0x1
20014db4:	fcf42c23          	sw	a5,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 1)
20014db8:	fd842783          	lw	a5,-40(s0)
20014dbc:	ffcd                	bnez	a5,20014d76 <__metal_driver_riscv_plic0_affinity_set_threshold+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:280
                ret, context,
                __metal_plic0_set_threshold(controller, context, threshold));
    }

    return ret;
20014dbe:	fe842783          	lw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:281
}
20014dc2:	853e                	mv	a0,a5
20014dc4:	50b2                	lw	ra,44(sp)
20014dc6:	5422                	lw	s0,40(sp)
20014dc8:	6145                	addi	sp,sp,48
20014dca:	8082                	ret

20014dcc <__metal_driver_riscv_plic0_affinity_get_threshold>:
__metal_driver_riscv_plic0_affinity_get_threshold():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:284

unsigned int __metal_driver_riscv_plic0_affinity_get_threshold(
    struct metal_interrupt *controller, int context_id) {
20014dcc:	1101                	addi	sp,sp,-32
20014dce:	ce06                	sw	ra,28(sp)
20014dd0:	cc22                	sw	s0,24(sp)
20014dd2:	1000                	addi	s0,sp,32
20014dd4:	fea42623          	sw	a0,-20(s0)
20014dd8:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:285
    __metal_plic0_get_threshold(controller, context_id);
20014ddc:	fe842583          	lw	a1,-24(s0)
20014de0:	fec42503          	lw	a0,-20(s0)
20014de4:	90bff0ef          	jal	ra,200146ee <__metal_plic0_get_threshold>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:286
    return 0;
20014de8:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:287
}
20014dea:	853e                	mv	a0,a5
20014dec:	40f2                	lw	ra,28(sp)
20014dee:	4462                	lw	s0,24(sp)
20014df0:	6105                	addi	sp,sp,32
20014df2:	8082                	ret

20014df4 <__metal_driver_sifive_fe310_g000_hfrosc_ref>:
__metal_driver_sifive_fe310_g000_hfrosc_ref():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1242



/* --------------------- sifive_fe310_g000_hfrosc ------------ */
static __inline__ struct metal_clock * __metal_driver_sifive_fe310_g000_hfrosc_ref(const struct metal_clock *clock)
{
20014df4:	1101                	addi	sp,sp,-32
20014df6:	ce22                	sw	s0,28(sp)
20014df8:	1000                	addi	s0,sp,32
20014dfa:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1243
		return (struct metal_clock *)&__metal_dt_clock_2.clock;
20014dfe:	800007b7          	lui	a5,0x80000
20014e02:	06c78793          	addi	a5,a5,108 # 8000006c <metal_segment_heap_target_end+0xffffe8ac>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1244
}
20014e06:	853e                	mv	a0,a5
20014e08:	4472                	lw	s0,28(sp)
20014e0a:	6105                	addi	sp,sp,32
20014e0c:	8082                	ret

20014e0e <__metal_driver_sifive_fe310_g000_hfrosc_config_base>:
__metal_driver_sifive_fe310_g000_hfrosc_config_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1247

static __inline__ struct __metal_driver_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_hfrosc_config_base(const struct metal_clock *clock)
{
20014e0e:	1101                	addi	sp,sp,-32
20014e10:	ce22                	sw	s0,28(sp)
20014e12:	1000                	addi	s0,sp,32
20014e14:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1248
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20014e18:	82418793          	addi	a5,gp,-2012 # 80000ae4 <__metal_dt_prci_10008000>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1249
}
20014e1c:	853e                	mv	a0,a5
20014e1e:	4472                	lw	s0,28(sp)
20014e20:	6105                	addi	sp,sp,32
20014e22:	8082                	ret

20014e24 <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfrosc_config_offset():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1257
{
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
}

static __inline__ long __metal_driver_sifive_fe310_g000_hfrosc_config_offset(const struct metal_clock *clock)
{
20014e24:	1101                	addi	sp,sp,-32
20014e26:	ce22                	sw	s0,28(sp)
20014e28:	1000                	addi	s0,sp,32
20014e2a:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1258
		return METAL_SIFIVE_FE310_G000_PRCI_HFROSCCFG;
20014e2e:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1259
}
20014e30:	853e                	mv	a0,a5
20014e32:	4472                	lw	s0,28(sp)
20014e34:	6105                	addi	sp,sp,32
20014e36:	8082                	ret

20014e38 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1374
{
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_SIZE;
}

static __inline__ const struct __metal_driver_vtable_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_prci_vtable( )
{
20014e38:	1141                	addi	sp,sp,-16
20014e3a:	c622                	sw	s0,12(sp)
20014e3c:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1375
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20014e3e:	83818793          	addi	a5,gp,-1992 # 80000af8 <__metal_driver_vtable_sifive_fe310_g000_prci>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1376
}
20014e42:	853e                	mv	a0,a5
20014e44:	4432                	lw	s0,12(sp)
20014e46:	0141                	addi	sp,sp,16
20014e48:	8082                	ret

20014e4a <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:17
#define CONFIG_TRIM 0x001F0000UL
#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(
    const struct metal_clock *clock) {
20014e4a:	7139                	addi	sp,sp,-64
20014e4c:	de06                	sw	ra,60(sp)
20014e4e:	dc22                	sw	s0,56(sp)
20014e50:	0080                	addi	s0,sp,64
20014e52:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:19
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfrosc_ref(clock);
20014e56:	fcc42503          	lw	a0,-52(s0)
20014e5a:	3f69                	jal	20014df4 <__metal_driver_sifive_fe310_g000_hfrosc_ref>
20014e5c:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:21
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfrosc_config_offset(clock);
20014e60:	fcc42503          	lw	a0,-52(s0)
20014e64:	37c1                	jal	20014e24 <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>
20014e66:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:23
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfrosc_config_base(clock);
20014e6a:	fcc42503          	lw	a0,-52(s0)
20014e6e:	3745                	jal	20014e0e <__metal_driver_sifive_fe310_g000_hfrosc_config_base>
20014e70:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:25
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
20014e74:	37d1                	jal	20014e38 <__metal_driver_sifive_fe310_g000_prci_vtable>
20014e76:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:26
    long cfg = vtable->get_reg(config_base, config_offset);
20014e7a:	fe042783          	lw	a5,-32(s0)
20014e7e:	439c                	lw	a5,0(a5)
20014e80:	fe842583          	lw	a1,-24(s0)
20014e84:	fe442503          	lw	a0,-28(s0)
20014e88:	9782                	jalr	a5
20014e8a:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:28

    if ((cfg & CONFIG_ENABLE) == 0)
20014e8e:	fdc42703          	lw	a4,-36(s0)
20014e92:	400007b7          	lui	a5,0x40000
20014e96:	8ff9                	and	a5,a5,a4
20014e98:	e399                	bnez	a5,20014e9e <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x54>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:29
        return -1;
20014e9a:	57fd                	li	a5,-1
20014e9c:	a025                	j	20014ec4 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:30
    if ((cfg & CONFIG_READY) == 0)
20014e9e:	fdc42783          	lw	a5,-36(s0)
20014ea2:	0007c463          	bltz	a5,20014eaa <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:31
        return -1;
20014ea6:	57fd                	li	a5,-1
20014ea8:	a831                	j	20014ec4 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:32
    return metal_clock_get_rate_hz(ref) / ((cfg & CONFIG_DIVIDER) + 1);
20014eaa:	fec42503          	lw	a0,-20(s0)
20014eae:	444020ef          	jal	ra,200172f2 <metal_clock_get_rate_hz>
20014eb2:	87aa                	mv	a5,a0
20014eb4:	873e                	mv	a4,a5
20014eb6:	fdc42783          	lw	a5,-36(s0)
20014eba:	03f7f793          	andi	a5,a5,63
20014ebe:	0785                	addi	a5,a5,1
20014ec0:	02f757b3          	divu	a5,a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:33
}
20014ec4:	853e                	mv	a0,a5
20014ec6:	50f2                	lw	ra,60(sp)
20014ec8:	5462                	lw	s0,56(sp)
20014eca:	6121                	addi	sp,sp,64
20014ecc:	8082                	ret

20014ece <__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:36

long __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
20014ece:	1101                	addi	sp,sp,-32
20014ed0:	ce06                	sw	ra,28(sp)
20014ed2:	cc22                	sw	s0,24(sp)
20014ed4:	1000                	addi	s0,sp,32
20014ed6:	fea42623          	sw	a0,-20(s0)
20014eda:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:37
    return __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(clock);
20014ede:	fec42503          	lw	a0,-20(s0)
20014ee2:	37a5                	jal	20014e4a <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>
20014ee4:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:38
}
20014ee6:	853e                	mv	a0,a5
20014ee8:	40f2                	lw	ra,28(sp)
20014eea:	4462                	lw	s0,24(sp)
20014eec:	6105                	addi	sp,sp,32
20014eee:	8082                	ret

20014ef0 <__metal_driver_sifive_fe310_g000_hfxosc_ref>:
__metal_driver_sifive_fe310_g000_hfxosc_ref():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1265
{
20014ef0:	1101                	addi	sp,sp,-32
20014ef2:	ce22                	sw	s0,28(sp)
20014ef4:	1000                	addi	s0,sp,32
20014ef6:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1266
		return (struct metal_clock *)&__metal_dt_clock_0.clock;
20014efa:	800007b7          	lui	a5,0x80000
20014efe:	06078793          	addi	a5,a5,96 # 80000060 <metal_segment_heap_target_end+0xffffe8a0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1267
}
20014f02:	853e                	mv	a0,a5
20014f04:	4472                	lw	s0,28(sp)
20014f06:	6105                	addi	sp,sp,32
20014f08:	8082                	ret

20014f0a <__metal_driver_sifive_fe310_g000_hfxosc_config_base>:
__metal_driver_sifive_fe310_g000_hfxosc_config_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1270
{
20014f0a:	1101                	addi	sp,sp,-32
20014f0c:	ce22                	sw	s0,28(sp)
20014f0e:	1000                	addi	s0,sp,32
20014f10:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1271
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20014f14:	82418793          	addi	a5,gp,-2012 # 80000ae4 <__metal_dt_prci_10008000>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1272
}
20014f18:	853e                	mv	a0,a5
20014f1a:	4472                	lw	s0,28(sp)
20014f1c:	6105                	addi	sp,sp,32
20014f1e:	8082                	ret

20014f20 <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfxosc_config_offset():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1275
{
20014f20:	1101                	addi	sp,sp,-32
20014f22:	ce22                	sw	s0,28(sp)
20014f24:	1000                	addi	s0,sp,32
20014f26:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1276
		return METAL_SIFIVE_FE310_G000_PRCI_HFXOSCCFG;
20014f2a:	4791                	li	a5,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1277
}
20014f2c:	853e                	mv	a0,a5
20014f2e:	4472                	lw	s0,28(sp)
20014f30:	6105                	addi	sp,sp,32
20014f32:	8082                	ret

20014f34 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1374
{
20014f34:	1141                	addi	sp,sp,-16
20014f36:	c622                	sw	s0,12(sp)
20014f38:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1375
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20014f3a:	83818793          	addi	a5,gp,-1992 # 80000af8 <__metal_driver_vtable_sifive_fe310_g000_prci>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1376
}
20014f3e:	853e                	mv	a0,a5
20014f40:	4432                	lw	s0,12(sp)
20014f42:	0141                	addi	sp,sp,16
20014f44:	8082                	ret

20014f46 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:15

#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(
    const struct metal_clock *clock) {
20014f46:	7139                	addi	sp,sp,-64
20014f48:	de06                	sw	ra,60(sp)
20014f4a:	dc22                	sw	s0,56(sp)
20014f4c:	0080                	addi	s0,sp,64
20014f4e:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:17
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfxosc_ref(clock);
20014f52:	fcc42503          	lw	a0,-52(s0)
20014f56:	3f69                	jal	20014ef0 <__metal_driver_sifive_fe310_g000_hfxosc_ref>
20014f58:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:19
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfxosc_config_offset(clock);
20014f5c:	fcc42503          	lw	a0,-52(s0)
20014f60:	37c1                	jal	20014f20 <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>
20014f62:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:21
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfxosc_config_base(clock);
20014f66:	fcc42503          	lw	a0,-52(s0)
20014f6a:	3745                	jal	20014f0a <__metal_driver_sifive_fe310_g000_hfxosc_config_base>
20014f6c:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:23
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
20014f70:	37d1                	jal	20014f34 <__metal_driver_sifive_fe310_g000_prci_vtable>
20014f72:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:24
    long cfg = vtable->get_reg(config_base, config_offset);
20014f76:	fe042783          	lw	a5,-32(s0)
20014f7a:	439c                	lw	a5,0(a5)
20014f7c:	fe842583          	lw	a1,-24(s0)
20014f80:	fe442503          	lw	a0,-28(s0)
20014f84:	9782                	jalr	a5
20014f86:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:26

    if ((cfg & CONFIG_ENABLE) == 0)
20014f8a:	fdc42703          	lw	a4,-36(s0)
20014f8e:	400007b7          	lui	a5,0x40000
20014f92:	8ff9                	and	a5,a5,a4
20014f94:	e399                	bnez	a5,20014f9a <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x54>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:27
        return -1;
20014f96:	57fd                	li	a5,-1
20014f98:	a821                	j	20014fb0 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:28
    if ((cfg & CONFIG_READY) == 0)
20014f9a:	fdc42783          	lw	a5,-36(s0)
20014f9e:	0007c463          	bltz	a5,20014fa6 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:29
        return -1;
20014fa2:	57fd                	li	a5,-1
20014fa4:	a031                	j	20014fb0 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:30
    return metal_clock_get_rate_hz(ref);
20014fa6:	fec42503          	lw	a0,-20(s0)
20014faa:	348020ef          	jal	ra,200172f2 <metal_clock_get_rate_hz>
20014fae:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:31
}
20014fb0:	853e                	mv	a0,a5
20014fb2:	50f2                	lw	ra,60(sp)
20014fb4:	5462                	lw	s0,56(sp)
20014fb6:	6121                	addi	sp,sp,64
20014fb8:	8082                	ret

20014fba <__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:34

long __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
20014fba:	1101                	addi	sp,sp,-32
20014fbc:	ce06                	sw	ra,28(sp)
20014fbe:	cc22                	sw	s0,24(sp)
20014fc0:	1000                	addi	s0,sp,32
20014fc2:	fea42623          	sw	a0,-20(s0)
20014fc6:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:35
    return __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(clock);
20014fca:	fec42503          	lw	a0,-20(s0)
20014fce:	3fa5                	jal	20014f46 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>
20014fd0:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:36
}
20014fd2:	853e                	mv	a0,a5
20014fd4:	40f2                	lw	ra,28(sp)
20014fd6:	4462                	lw	s0,24(sp)
20014fd8:	6105                	addi	sp,sp,32
20014fda:	8082                	ret

20014fdc <__metal_driver_sifive_fe310_g000_pll_pllsel0>:
__metal_driver_sifive_fe310_g000_pll_pllsel0():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1326
{
20014fdc:	1101                	addi	sp,sp,-32
20014fde:	ce22                	sw	s0,28(sp)
20014fe0:	1000                	addi	s0,sp,32
20014fe2:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1327
		return (struct metal_clock *)&__metal_dt_clock_3.clock;
20014fe6:	800017b7          	lui	a5,0x80001
20014fea:	a9c78793          	addi	a5,a5,-1380 # 80000a9c <metal_segment_heap_target_end+0xfffff2dc>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1328
}
20014fee:	853e                	mv	a0,a5
20014ff0:	4472                	lw	s0,28(sp)
20014ff2:	6105                	addi	sp,sp,32
20014ff4:	8082                	ret

20014ff6 <__metal_driver_sifive_fe310_g000_pll_pllref>:
__metal_driver_sifive_fe310_g000_pll_pllref():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1331
{
20014ff6:	1101                	addi	sp,sp,-32
20014ff8:	ce22                	sw	s0,28(sp)
20014ffa:	1000                	addi	s0,sp,32
20014ffc:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1332
		return (struct metal_clock *)&__metal_dt_clock_1.clock;
20015000:	800017b7          	lui	a5,0x80001
20015004:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xfffff2e8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1333
}
20015008:	853e                	mv	a0,a5
2001500a:	4472                	lw	s0,28(sp)
2001500c:	6105                	addi	sp,sp,32
2001500e:	8082                	ret

20015010 <__metal_driver_sifive_fe310_g000_pll_divider_base>:
__metal_driver_sifive_fe310_g000_pll_divider_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1336
{
20015010:	1101                	addi	sp,sp,-32
20015012:	ce22                	sw	s0,28(sp)
20015014:	1000                	addi	s0,sp,32
20015016:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1337
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
2001501a:	82418793          	addi	a5,gp,-2012 # 80000ae4 <__metal_dt_prci_10008000>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1338
}
2001501e:	853e                	mv	a0,a5
20015020:	4472                	lw	s0,28(sp)
20015022:	6105                	addi	sp,sp,32
20015024:	8082                	ret

20015026 <__metal_driver_sifive_fe310_g000_pll_divider_offset>:
__metal_driver_sifive_fe310_g000_pll_divider_offset():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1341
{
20015026:	1101                	addi	sp,sp,-32
20015028:	ce22                	sw	s0,28(sp)
2001502a:	1000                	addi	s0,sp,32
2001502c:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1342
		return METAL_SIFIVE_FE310_G000_PRCI_PLLOUTDIV;
20015030:	47b1                	li	a5,12
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1343
}
20015032:	853e                	mv	a0,a5
20015034:	4472                	lw	s0,28(sp)
20015036:	6105                	addi	sp,sp,32
20015038:	8082                	ret

2001503a <__metal_driver_sifive_fe310_g000_pll_config_base>:
__metal_driver_sifive_fe310_g000_pll_config_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1346
{
2001503a:	1141                	addi	sp,sp,-16
2001503c:	c622                	sw	s0,12(sp)
2001503e:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1347
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20015040:	82418793          	addi	a5,gp,-2012 # 80000ae4 <__metal_dt_prci_10008000>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1348
}
20015044:	853e                	mv	a0,a5
20015046:	4432                	lw	s0,12(sp)
20015048:	0141                	addi	sp,sp,16
2001504a:	8082                	ret

2001504c <__metal_driver_sifive_fe310_g000_pll_config_offset>:
__metal_driver_sifive_fe310_g000_pll_config_offset():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1351
{
2001504c:	1141                	addi	sp,sp,-16
2001504e:	c622                	sw	s0,12(sp)
20015050:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1352
		return METAL_SIFIVE_FE310_G000_PRCI_PLLCFG;
20015052:	47a1                	li	a5,8
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1353
}
20015054:	853e                	mv	a0,a5
20015056:	4432                	lw	s0,12(sp)
20015058:	0141                	addi	sp,sp,16
2001505a:	8082                	ret

2001505c <__metal_driver_sifive_fe310_g000_pll_init_rate>:
__metal_driver_sifive_fe310_g000_pll_init_rate():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1356
{
2001505c:	1141                	addi	sp,sp,-16
2001505e:	c622                	sw	s0,12(sp)
20015060:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1357
		return 16000000;
20015062:	00f427b7          	lui	a5,0xf42
20015066:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1358
}
2001506a:	853e                	mv	a0,a5
2001506c:	4432                	lw	s0,12(sp)
2001506e:	0141                	addi	sp,sp,16
20015070:	8082                	ret

20015072 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1364
{
20015072:	1141                	addi	sp,sp,-16
20015074:	c622                	sw	s0,12(sp)
20015076:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1365
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
20015078:	100087b7          	lui	a5,0x10008
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1366
}
2001507c:	853e                	mv	a0,a5
2001507e:	4432                	lw	s0,12(sp)
20015080:	0141                	addi	sp,sp,16
20015082:	8082                	ret

20015084 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1374
{
20015084:	1141                	addi	sp,sp,-16
20015086:	c622                	sw	s0,12(sp)
20015088:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1375
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
2001508a:	83818793          	addi	a5,gp,-1992 # 80000af8 <__metal_driver_vtable_sifive_fe310_g000_prci>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1376
}
2001508e:	853e                	mv	a0,a5
20015090:	4432                	lw	s0,12(sp)
20015092:	0141                	addi	sp,sp,16
20015094:	8082                	ret

20015096 <get_pll_config_freq>:
get_pll_config_freq():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:141
                                const struct pll_config_t *config) {
20015096:	1101                	addi	sp,sp,-32
20015098:	ce22                	sw	s0,28(sp)
2001509a:	1000                	addi	s0,sp,32
2001509c:	fea42623          	sw	a0,-20(s0)
200150a0:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142
    if (pll_input_rate < config->min_input_rate ||
200150a4:	fe842783          	lw	a5,-24(s0)
200150a8:	479c                	lw	a5,8(a5)
200150aa:	fec42703          	lw	a4,-20(s0)
200150ae:	00f76963          	bltu	a4,a5,200150c0 <get_pll_config_freq+0x2a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:143 (discriminator 1)
        pll_input_rate > config->max_input_rate)
200150b2:	fe842783          	lw	a5,-24(s0)
200150b6:	47dc                	lw	a5,12(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142 (discriminator 1)
    if (pll_input_rate < config->min_input_rate ||
200150b8:	fec42703          	lw	a4,-20(s0)
200150bc:	00e7f463          	bgeu	a5,a4,200150c4 <get_pll_config_freq+0x2e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:144
        return PLL_CONFIG_NOT_VALID;
200150c0:	57fd                	li	a5,-1
200150c2:	a829                	j	200150dc <get_pll_config_freq+0x46>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:146
    return pll_input_rate * config->multiplier / config->divisor;
200150c4:	fe842783          	lw	a5,-24(s0)
200150c8:	4398                	lw	a4,0(a5)
200150ca:	fec42783          	lw	a5,-20(s0)
200150ce:	02f70733          	mul	a4,a4,a5
200150d2:	fe842783          	lw	a5,-24(s0)
200150d6:	43dc                	lw	a5,4(a5)
200150d8:	02f757b3          	divu	a5,a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:147
}
200150dc:	853e                	mv	a0,a5
200150de:	4472                	lw	s0,28(sp)
200150e0:	6105                	addi	sp,sp,32
200150e2:	8082                	ret

200150e4 <__metal_driver_sifive_fe310_g000_pll_init>:
__metal_driver_sifive_fe310_g000_pll_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:162
    struct __metal_driver_sifive_fe310_g000_pll *pll) {
200150e4:	7139                	addi	sp,sp,-64
200150e6:	de06                	sw	ra,60(sp)
200150e8:	dc22                	sw	s0,56(sp)
200150ea:	0080                	addi	s0,sp,64
200150ec:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:164
        __metal_driver_sifive_fe310_g000_pll_pllref(&(pll->clock));
200150f0:	fcc42783          	lw	a5,-52(s0)
200150f4:	853e                	mv	a0,a5
200150f6:	3701                	jal	20014ff6 <__metal_driver_sifive_fe310_g000_pll_pllref>
200150f8:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:165
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
200150fc:	3785                	jal	2001505c <__metal_driver_sifive_fe310_g000_pll_init_rate>
200150fe:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:166
    long config_offset = __metal_driver_sifive_fe310_g000_pll_config_offset();
20015102:	37a9                	jal	2001504c <__metal_driver_sifive_fe310_g000_pll_config_offset>
20015104:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:167
    long base = __metal_driver_sifive_fe310_g000_prci_base();
20015108:	37ad                	jal	20015072 <__metal_driver_sifive_fe310_g000_prci_base>
2001510a:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:169
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
2001510e:	fe042703          	lw	a4,-32(s0)
20015112:	fe442783          	lw	a5,-28(s0)
20015116:	97ba                	add	a5,a5,a4
20015118:	fcf42e23          	sw	a5,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:173
    _metal_clock_call_all_callbacks(pll->clock._pre_rate_change_callback);
2001511c:	fcc42783          	lw	a5,-52(s0)
20015120:	43dc                	lw	a5,4(a5)
20015122:	853e                	mv	a0,a5
20015124:	13a020ef          	jal	ra,2001725e <_metal_clock_call_all_callbacks>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:177
    if ((__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL) != 0)
20015128:	fdc42783          	lw	a5,-36(s0)
2001512c:	4398                	lw	a4,0(a5)
2001512e:	67c1                	lui	a5,0x10
20015130:	8ff9                	and	a5,a5,a4
20015132:	cb91                	beqz	a5,20015146 <__metal_driver_sifive_fe310_g000_pll_init+0x62>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:178
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
20015134:	fdc42783          	lw	a5,-36(s0)
20015138:	4398                	lw	a4,0(a5)
2001513a:	77c1                	lui	a5,0xffff0
2001513c:	17fd                	addi	a5,a5,-1
2001513e:	8f7d                	and	a4,a4,a5
20015140:	fdc42783          	lw	a5,-36(s0)
20015144:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:181
    if (pllref != NULL)
20015146:	fec42783          	lw	a5,-20(s0)
2001514a:	cb91                	beqz	a5,2001515e <__metal_driver_sifive_fe310_g000_pll_init+0x7a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:182
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_REFSEL;
2001514c:	fdc42783          	lw	a5,-36(s0)
20015150:	4398                	lw	a4,0(a5)
20015152:	000207b7          	lui	a5,0x20
20015156:	8f5d                	or	a4,a4,a5
20015158:	fdc42783          	lw	a5,-36(s0)
2001515c:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:187
    pll->clock.vtable->set_rate_hz(&(pll->clock), init_rate);
2001515e:	fcc42783          	lw	a5,-52(s0)
20015162:	439c                	lw	a5,0(a5)
20015164:	43d8                	lw	a4,4(a5)
20015166:	fcc42783          	lw	a5,-52(s0)
2001516a:	fe842583          	lw	a1,-24(s0)
2001516e:	853e                	mv	a0,a5
20015170:	9702                	jalr	a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:190
    _metal_clock_call_all_callbacks(pll->clock._post_rate_change_callback);
20015172:	fcc42783          	lw	a5,-52(s0)
20015176:	479c                	lw	a5,8(a5)
20015178:	853e                	mv	a0,a5
2001517a:	0e4020ef          	jal	ra,2001725e <_metal_clock_call_all_callbacks>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:191
}
2001517e:	0001                	nop
20015180:	50f2                	lw	ra,60(sp)
20015182:	5462                	lw	s0,56(sp)
20015184:	6121                	addi	sp,sp,64
20015186:	8082                	ret

20015188 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_get_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:194
    const struct metal_clock *clock) {
20015188:	711d                	addi	sp,sp,-96
2001518a:	ce86                	sw	ra,92(sp)
2001518c:	cca2                	sw	s0,88(sp)
2001518e:	1080                	addi	s0,sp,96
20015190:	faa42623          	sw	a0,-84(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:196
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
20015194:	fac42503          	lw	a0,-84(s0)
20015198:	3db9                	jal	20014ff6 <__metal_driver_sifive_fe310_g000_pll_pllref>
2001519a:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:198
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
2001519e:	fac42503          	lw	a0,-84(s0)
200151a2:	3d2d                	jal	20014fdc <__metal_driver_sifive_fe310_g000_pll_pllsel0>
200151a4:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:200
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
200151a8:	fac42503          	lw	a0,-84(s0)
200151ac:	3545                	jal	2001504c <__metal_driver_sifive_fe310_g000_pll_config_offset>
200151ae:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:202
        __metal_driver_sifive_fe310_g000_pll_config_base(clock);
200151b2:	fac42503          	lw	a0,-84(s0)
200151b6:	3551                	jal	2001503a <__metal_driver_sifive_fe310_g000_pll_config_base>
200151b8:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:204
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
200151bc:	fac42503          	lw	a0,-84(s0)
200151c0:	359d                	jal	20015026 <__metal_driver_sifive_fe310_g000_pll_divider_offset>
200151c2:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:206
        __metal_driver_sifive_fe310_g000_pll_divider_base(clock);
200151c6:	fac42503          	lw	a0,-84(s0)
200151ca:	3599                	jal	20015010 <__metal_driver_sifive_fe310_g000_pll_divider_base>
200151cc:	fca42c23          	sw	a0,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:208
        __metal_driver_sifive_fe310_g000_prci_vtable();
200151d0:	3d55                	jal	20015084 <__metal_driver_sifive_fe310_g000_prci_vtable>
200151d2:	fca42a23          	sw	a0,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:210
    long cfg = vtable->get_reg(config_base, config_offset);
200151d6:	fd442783          	lw	a5,-44(s0)
200151da:	439c                	lw	a5,0(a5)
200151dc:	fe442583          	lw	a1,-28(s0)
200151e0:	fe042503          	lw	a0,-32(s0)
200151e4:	9782                	jalr	a5
200151e6:	fca42823          	sw	a0,-48(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:211
    long div = vtable->get_reg(divider_base, divider_offset);
200151ea:	fd442783          	lw	a5,-44(s0)
200151ee:	439c                	lw	a5,0(a5)
200151f0:	fdc42583          	lw	a1,-36(s0)
200151f4:	fd842503          	lw	a0,-40(s0)
200151f8:	9782                	jalr	a5
200151fa:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:215
    if (__METAL_GET_FIELD(cfg, PLL_SEL) == 0)
200151fe:	fd042703          	lw	a4,-48(s0)
20015202:	67c1                	lui	a5,0x10
20015204:	8f7d                	and	a4,a4,a5
20015206:	67c1                	lui	a5,0x10
20015208:	00f77863          	bgeu	a4,a5,20015218 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x90>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:216
        return metal_clock_get_rate_hz(pllsel0);
2001520c:	fe842503          	lw	a0,-24(s0)
20015210:	0e2020ef          	jal	ra,200172f2 <metal_clock_get_rate_hz>
20015214:	87aa                	mv	a5,a0
20015216:	a8e1                	j	200152ee <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:221
        __METAL_GET_FIELD(cfg, PLL_REFSEL) ? pllref : pllsel0);
20015218:	fd042703          	lw	a4,-48(s0)
2001521c:	000207b7          	lui	a5,0x20
20015220:	8f7d                	and	a4,a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220
    long ref_hz = metal_clock_get_rate_hz(
20015222:	000207b7          	lui	a5,0x20
20015226:	00f76563          	bltu	a4,a5,20015230 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xa8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 1)
2001522a:	fec42783          	lw	a5,-20(s0)
2001522e:	a019                	j	20015234 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xac>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 2)
20015230:	fe842783          	lw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 4)
20015234:	853e                	mv	a0,a5
20015236:	0bc020ef          	jal	ra,200172f2 <metal_clock_get_rate_hz>
2001523a:	fca42423          	sw	a0,-56(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:225 (discriminator 4)
    if (__METAL_GET_FIELD(cfg, PLL_BYPASS))
2001523e:	fd042703          	lw	a4,-48(s0)
20015242:	000407b7          	lui	a5,0x40
20015246:	8f7d                	and	a4,a4,a5
20015248:	000407b7          	lui	a5,0x40
2001524c:	00f76563          	bltu	a4,a5,20015256 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xce>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:226
        return ref_hz;
20015250:	fc842783          	lw	a5,-56(s0)
20015254:	a869                	j	200152ee <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:229
    long div_r = __METAL_GET_FIELD(cfg, PLL_R) + 1;
20015256:	fd042783          	lw	a5,-48(s0)
2001525a:	8b9d                	andi	a5,a5,7
2001525c:	0785                	addi	a5,a5,1
2001525e:	fcf42223          	sw	a5,-60(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:230
    long mul_f = 2 * (__METAL_GET_FIELD(cfg, PLL_F) + 1);
20015262:	fd042783          	lw	a5,-48(s0)
20015266:	3f07f793          	andi	a5,a5,1008
2001526a:	8391                	srli	a5,a5,0x4
2001526c:	0785                	addi	a5,a5,1
2001526e:	0786                	slli	a5,a5,0x1
20015270:	fcf42023          	sw	a5,-64(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:231
    if (__METAL_GET_FIELD(cfg, PLL_Q) == 0)
20015274:	fd042703          	lw	a4,-48(s0)
20015278:	6785                	lui	a5,0x1
2001527a:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
2001527e:	8f7d                	and	a4,a4,a5
20015280:	3ff00793          	li	a5,1023
20015284:	00e7e463          	bltu	a5,a4,2001528c <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x104>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:232
        return -1;
20015288:	57fd                	li	a5,-1
2001528a:	a095                	j	200152ee <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:233
    long div_q = 1 << __METAL_GET_FIELD(cfg, PLL_Q);
2001528c:	fd042703          	lw	a4,-48(s0)
20015290:	6785                	lui	a5,0x1
20015292:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20015296:	8ff9                	and	a5,a5,a4
20015298:	83a9                	srli	a5,a5,0xa
2001529a:	4705                	li	a4,1
2001529c:	00f717b3          	sll	a5,a4,a5
200152a0:	faf42e23          	sw	a5,-68(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:238
    long pllout = (((ref_hz / div_r) * mul_f) / div_q);
200152a4:	fc842703          	lw	a4,-56(s0)
200152a8:	fc442783          	lw	a5,-60(s0)
200152ac:	02f74733          	div	a4,a4,a5
200152b0:	fc042783          	lw	a5,-64(s0)
200152b4:	02f70733          	mul	a4,a4,a5
200152b8:	fbc42783          	lw	a5,-68(s0)
200152bc:	02f747b3          	div	a5,a4,a5
200152c0:	faf42c23          	sw	a5,-72(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:239
    if (__METAL_GET_FIELD(div, DIV_1))
200152c4:	fcc42783          	lw	a5,-52(s0)
200152c8:	1007f713          	andi	a4,a5,256
200152cc:	0ff00793          	li	a5,255
200152d0:	00e7f563          	bgeu	a5,a4,200152da <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x152>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:240
        return pllout;
200152d4:	fb842783          	lw	a5,-72(s0)
200152d8:	a819                	j	200152ee <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:242
    return pllout / (2 * (__METAL_GET_FIELD(div, DIV_DIV) + 1));
200152da:	fb842703          	lw	a4,-72(s0)
200152de:	fcc42783          	lw	a5,-52(s0)
200152e2:	03f7f793          	andi	a5,a5,63
200152e6:	0785                	addi	a5,a5,1
200152e8:	0786                	slli	a5,a5,0x1
200152ea:	02f757b3          	divu	a5,a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:243
}
200152ee:	853e                	mv	a0,a5
200152f0:	40f6                	lw	ra,92(sp)
200152f2:	4466                	lw	s0,88(sp)
200152f4:	6125                	addi	sp,sp,96
200152f6:	8082                	ret

200152f8 <find_closest_config>:
find_closest_config():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:253
static int find_closest_config(long ref_hz, long rate) {
200152f8:	7139                	addi	sp,sp,-64
200152fa:	de06                	sw	ra,60(sp)
200152fc:	dc22                	sw	s0,56(sp)
200152fe:	0080                	addi	s0,sp,64
20015300:	fca42623          	sw	a0,-52(s0)
20015304:	fcb42423          	sw	a1,-56(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:254
    int closest_index = -1;
20015308:	57fd                	li	a5,-1
2001530a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:255
    long closest_diff = LONG_MAX;
2001530e:	800007b7          	lui	a5,0x80000
20015312:	fff7c793          	not	a5,a5
20015316:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
2001531a:	04300793          	li	a5,67
2001531e:	fef42223          	sw	a5,-28(s0)
20015322:	a0ad                	j	2001538c <find_closest_config+0x94>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:261
        long config_freq = get_pll_config_freq(ref_hz, &(pll_configs[i]));
20015324:	fcc42683          	lw	a3,-52(s0)
20015328:	fe442783          	lw	a5,-28(s0)
2001532c:	00579713          	slli	a4,a5,0x5
20015330:	200107b7          	lui	a5,0x20010
20015334:	6ac78793          	addi	a5,a5,1708 # 200106ac <pll_configs>
20015338:	97ba                	add	a5,a5,a4
2001533a:	85be                	mv	a1,a5
2001533c:	8536                	mv	a0,a3
2001533e:	3ba1                	jal	20015096 <get_pll_config_freq>
20015340:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:262
        if (config_freq != PLL_CONFIG_NOT_VALID) {
20015344:	fe042703          	lw	a4,-32(s0)
20015348:	57fd                	li	a5,-1
2001534a:	02f70c63          	beq	a4,a5,20015382 <find_closest_config+0x8a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:263
            long freq_diff = labs(config_freq - rate);
2001534e:	fe042703          	lw	a4,-32(s0)
20015352:	fc842783          	lw	a5,-56(s0)
20015356:	8f1d                	sub	a4,a4,a5
20015358:	41f75793          	srai	a5,a4,0x1f
2001535c:	8f3d                	xor	a4,a4,a5
2001535e:	40f707b3          	sub	a5,a4,a5
20015362:	fcf42e23          	sw	a5,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:265
            if (freq_diff < closest_diff) {
20015366:	fdc42703          	lw	a4,-36(s0)
2001536a:	fe842783          	lw	a5,-24(s0)
2001536e:	00f75a63          	bge	a4,a5,20015382 <find_closest_config+0x8a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:266
                closest_index = i;
20015372:	fe442783          	lw	a5,-28(s0)
20015376:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:267
                closest_diff = freq_diff;
2001537a:	fdc42783          	lw	a5,-36(s0)
2001537e:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:260
         i--) {
20015382:	fe442783          	lw	a5,-28(s0)
20015386:	17fd                	addi	a5,a5,-1
20015388:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259 (discriminator 1)
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
2001538c:	fe442783          	lw	a5,-28(s0)
20015390:	f807dae3          	bgez	a5,20015324 <find_closest_config+0x2c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:272
    return closest_index;
20015394:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:273
}
20015398:	853e                	mv	a0,a5
2001539a:	50f2                	lw	ra,60(sp)
2001539c:	5462                	lw	s0,56(sp)
2001539e:	6121                	addi	sp,sp,64
200153a0:	8082                	ret

200153a2 <configure_pll>:
configure_pll():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:290
                          const struct pll_config_t *config) {
200153a2:	7179                	addi	sp,sp,-48
200153a4:	d606                	sw	ra,44(sp)
200153a6:	d422                	sw	s0,40(sp)
200153a8:	1800                	addi	s0,sp,48
200153aa:	fca42e23          	sw	a0,-36(s0)
200153ae:	fcb42c23          	sw	a1,-40(s0)
200153b2:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:291
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_R);
200153b6:	fdc42783          	lw	a5,-36(s0)
200153ba:	439c                	lw	a5,0(a5)
200153bc:	ff87f713          	andi	a4,a5,-8
200153c0:	fdc42783          	lw	a5,-36(s0)
200153c4:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:292
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_R_SHIFT(config->r);
200153c6:	fdc42783          	lw	a5,-36(s0)
200153ca:	4398                	lw	a4,0(a5)
200153cc:	fd442783          	lw	a5,-44(s0)
200153d0:	4b9c                	lw	a5,16(a5)
200153d2:	8b9d                	andi	a5,a5,7
200153d4:	8f5d                	or	a4,a4,a5
200153d6:	fdc42783          	lw	a5,-36(s0)
200153da:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:294
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_F);
200153dc:	fdc42783          	lw	a5,-36(s0)
200153e0:	439c                	lw	a5,0(a5)
200153e2:	c0f7f713          	andi	a4,a5,-1009
200153e6:	fdc42783          	lw	a5,-36(s0)
200153ea:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:295
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_F_SHIFT(config->f);
200153ec:	fdc42783          	lw	a5,-36(s0)
200153f0:	4398                	lw	a4,0(a5)
200153f2:	fd442783          	lw	a5,-44(s0)
200153f6:	4bdc                	lw	a5,20(a5)
200153f8:	0792                	slli	a5,a5,0x4
200153fa:	3f07f793          	andi	a5,a5,1008
200153fe:	8f5d                	or	a4,a4,a5
20015400:	fdc42783          	lw	a5,-36(s0)
20015404:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:297
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_Q);
20015406:	fdc42783          	lw	a5,-36(s0)
2001540a:	4398                	lw	a4,0(a5)
2001540c:	77fd                	lui	a5,0xfffff
2001540e:	3ff78793          	addi	a5,a5,1023 # fffff3ff <metal_segment_heap_target_end+0x7fffdc3f>
20015412:	8f7d                	and	a4,a4,a5
20015414:	fdc42783          	lw	a5,-36(s0)
20015418:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:298
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_Q_SHIFT(config->q);
2001541a:	fdc42783          	lw	a5,-36(s0)
2001541e:	4398                	lw	a4,0(a5)
20015420:	fd442783          	lw	a5,-44(s0)
20015424:	4f9c                	lw	a5,24(a5)
20015426:	00a79693          	slli	a3,a5,0xa
2001542a:	6785                	lui	a5,0x1
2001542c:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20015430:	8ff5                	and	a5,a5,a3
20015432:	8f5d                	or	a4,a4,a5
20015434:	fdc42783          	lw	a5,-36(s0)
20015438:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:300
    if (config->d < 0) {
2001543a:	fd442783          	lw	a5,-44(s0)
2001543e:	4fdc                	lw	a5,28(a5)
20015440:	0207db63          	bgez	a5,20015476 <configure_pll+0xd4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:302
        __METAL_ACCESS_ONCE(plloutdiv) |= DIV_1;
20015444:	fd842783          	lw	a5,-40(s0)
20015448:	439c                	lw	a5,0(a5)
2001544a:	1007e713          	ori	a4,a5,256
2001544e:	fd842783          	lw	a5,-40(s0)
20015452:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:304
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
20015454:	fd842783          	lw	a5,-40(s0)
20015458:	439c                	lw	a5,0(a5)
2001545a:	fc07f713          	andi	a4,a5,-64
2001545e:	fd842783          	lw	a5,-40(s0)
20015462:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:305
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(1);
20015464:	fd842783          	lw	a5,-40(s0)
20015468:	439c                	lw	a5,0(a5)
2001546a:	0017e713          	ori	a4,a5,1
2001546e:	fd842783          	lw	a5,-40(s0)
20015472:	c398                	sw	a4,0(a5)
20015474:	a82d                	j	200154ae <configure_pll+0x10c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:307
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_1);
20015476:	fd842783          	lw	a5,-40(s0)
2001547a:	439c                	lw	a5,0(a5)
2001547c:	eff7f713          	andi	a4,a5,-257
20015480:	fd842783          	lw	a5,-40(s0)
20015484:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:309
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
20015486:	fd842783          	lw	a5,-40(s0)
2001548a:	439c                	lw	a5,0(a5)
2001548c:	fc07f713          	andi	a4,a5,-64
20015490:	fd842783          	lw	a5,-40(s0)
20015494:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:310
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(config->d);
20015496:	fd842783          	lw	a5,-40(s0)
2001549a:	4398                	lw	a4,0(a5)
2001549c:	fd442783          	lw	a5,-44(s0)
200154a0:	4fdc                	lw	a5,28(a5)
200154a2:	03f7f793          	andi	a5,a5,63
200154a6:	8f5d                	or	a4,a4,a5
200154a8:	fd842783          	lw	a5,-40(s0)
200154ac:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:313
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_BYPASS);
200154ae:	fdc42783          	lw	a5,-36(s0)
200154b2:	4398                	lw	a4,0(a5)
200154b4:	fffc07b7          	lui	a5,0xfffc0
200154b8:	17fd                	addi	a5,a5,-1
200154ba:	8f7d                	and	a4,a4,a5
200154bc:	fdc42783          	lw	a5,-36(s0)
200154c0:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:318
    __metal_driver_riscv_clint0_command_request(__METAL_DT_RISCV_CLINT0_HANDLE,
200154c2:	fe040793          	addi	a5,s0,-32
200154c6:	863e                	mv	a2,a5
200154c8:	4585                	li	a1,1
200154ca:	81018513          	addi	a0,gp,-2032 # 80000ad0 <__metal_dt_clint_2000000>
200154ce:	d18fd0ef          	jal	ra,200129e6 <__metal_driver_riscv_clint0_command_request>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:320
    mtime_end = mtime + PLL_LOCK_WAIT_TICKS;
200154d2:	fe042683          	lw	a3,-32(s0)
200154d6:	fe442703          	lw	a4,-28(s0)
200154da:	4591                	li	a1,4
200154dc:	4601                	li	a2,0
200154de:	00b687b3          	add	a5,a3,a1
200154e2:	853e                	mv	a0,a5
200154e4:	00d53533          	sltu	a0,a0,a3
200154e8:	00c70833          	add	a6,a4,a2
200154ec:	01050733          	add	a4,a0,a6
200154f0:	883a                	mv	a6,a4
200154f2:	fef42423          	sw	a5,-24(s0)
200154f6:	ff042623          	sw	a6,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
200154fa:	a809                	j	2001550c <configure_pll+0x16a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:322
        __metal_driver_riscv_clint0_command_request(
200154fc:	fe040793          	addi	a5,s0,-32
20015500:	863e                	mv	a2,a5
20015502:	4585                	li	a1,1
20015504:	81018513          	addi	a0,gp,-2032 # 80000ad0 <__metal_dt_clint_2000000>
20015508:	cdefd0ef          	jal	ra,200129e6 <__metal_driver_riscv_clint0_command_request>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
2001550c:	fe042783          	lw	a5,-32(s0)
20015510:	fe442803          	lw	a6,-28(s0)
20015514:	fec42703          	lw	a4,-20(s0)
20015518:	86c2                	mv	a3,a6
2001551a:	00d76b63          	bltu	a4,a3,20015530 <configure_pll+0x18e>
2001551e:	fec42703          	lw	a4,-20(s0)
20015522:	86c2                	mv	a3,a6
20015524:	fcd71ce3          	bne	a4,a3,200154fc <configure_pll+0x15a>
20015528:	fe842703          	lw	a4,-24(s0)
2001552c:	fcf778e3          	bgeu	a4,a5,200154fc <configure_pll+0x15a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340
    while ((__METAL_ACCESS_ONCE(pllcfg) & PLL_LOCK) == 0)
20015530:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340 (discriminator 1)
20015532:	fdc42783          	lw	a5,-36(s0)
20015536:	439c                	lw	a5,0(a5)
20015538:	fe07dde3          	bgez	a5,20015532 <configure_pll+0x190>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:342
}
2001553c:	0001                	nop
2001553e:	50b2                	lw	ra,44(sp)
20015540:	5422                	lw	s0,40(sp)
20015542:	6145                	addi	sp,sp,48
20015544:	8082                	ret

20015546 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_set_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:345
                                                      long rate) {
20015546:	715d                	addi	sp,sp,-80
20015548:	c686                	sw	ra,76(sp)
2001554a:	c4a2                	sw	s0,72(sp)
2001554c:	0880                	addi	s0,sp,80
2001554e:	faa42e23          	sw	a0,-68(s0)
20015552:	fab42c23          	sw	a1,-72(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:347
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
20015556:	fbc42503          	lw	a0,-68(s0)
2001555a:	a9dff0ef          	jal	ra,20014ff6 <__metal_driver_sifive_fe310_g000_pll_pllref>
2001555e:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:349
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
20015562:	fbc42503          	lw	a0,-68(s0)
20015566:	a77ff0ef          	jal	ra,20014fdc <__metal_driver_sifive_fe310_g000_pll_pllsel0>
2001556a:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:351
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
2001556e:	fbc42503          	lw	a0,-68(s0)
20015572:	adbff0ef          	jal	ra,2001504c <__metal_driver_sifive_fe310_g000_pll_config_offset>
20015576:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:353
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
2001557a:	fbc42503          	lw	a0,-68(s0)
2001557e:	aa9ff0ef          	jal	ra,20015026 <__metal_driver_sifive_fe310_g000_pll_divider_offset>
20015582:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:354
    long base = __metal_driver_sifive_fe310_g000_prci_base();
20015586:	aedff0ef          	jal	ra,20015072 <__metal_driver_sifive_fe310_g000_prci_base>
2001558a:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:356
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
2001558e:	fdc42703          	lw	a4,-36(s0)
20015592:	fe442783          	lw	a5,-28(s0)
20015596:	97ba                	add	a5,a5,a4
20015598:	fcf42c23          	sw	a5,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:357
    __metal_io_u32 *plloutdiv = (__metal_io_u32 *)(base + divider_offset);
2001559c:	fdc42703          	lw	a4,-36(s0)
200155a0:	fe042783          	lw	a5,-32(s0)
200155a4:	97ba                	add	a5,a5,a4
200155a6:	fcf42a23          	sw	a5,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:360
    if (__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL)
200155aa:	fd842783          	lw	a5,-40(s0)
200155ae:	4398                	lw	a4,0(a5)
200155b0:	67c1                	lui	a5,0x10
200155b2:	8ff9                	and	a5,a5,a4
200155b4:	cb91                	beqz	a5,200155c8 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x82>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:361
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
200155b6:	fd842783          	lw	a5,-40(s0)
200155ba:	4398                	lw	a4,0(a5)
200155bc:	77c1                	lui	a5,0xffff0
200155be:	17fd                	addi	a5,a5,-1
200155c0:	8f7d                	and	a4,a4,a5
200155c2:	fd842783          	lw	a5,-40(s0)
200155c6:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:366
        __METAL_ACCESS_ONCE(pllcfg) & PLL_REFSEL ? pllref : pllsel0);
200155c8:	fd842783          	lw	a5,-40(s0)
200155cc:	4398                	lw	a4,0(a5)
200155ce:	000207b7          	lui	a5,0x20
200155d2:	8ff9                	and	a5,a5,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365
    long ref_hz = metal_clock_get_rate_hz(
200155d4:	c781                	beqz	a5,200155dc <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x96>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 1)
200155d6:	fec42783          	lw	a5,-20(s0)
200155da:	a019                	j	200155e0 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x9a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 2)
200155dc:	fe842783          	lw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 4)
200155e0:	853e                	mv	a0,a5
200155e2:	511010ef          	jal	ra,200172f2 <metal_clock_get_rate_hz>
200155e6:	fca42823          	sw	a0,-48(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 4)
    if ((ref_hz * 3 / 4) <= rate && (ref_hz * 5 / 4) >= rate) {
200155ea:	fd042703          	lw	a4,-48(s0)
200155ee:	87ba                	mv	a5,a4
200155f0:	0786                	slli	a5,a5,0x1
200155f2:	97ba                	add	a5,a5,a4
200155f4:	41f7d713          	srai	a4,a5,0x1f
200155f8:	8b0d                	andi	a4,a4,3
200155fa:	97ba                	add	a5,a5,a4
200155fc:	8789                	srai	a5,a5,0x2
200155fe:	873e                	mv	a4,a5
20015600:	fb842783          	lw	a5,-72(s0)
20015604:	02e7cb63          	blt	a5,a4,2001563a <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 1)
20015608:	fd042703          	lw	a4,-48(s0)
2001560c:	87ba                	mv	a5,a4
2001560e:	078a                	slli	a5,a5,0x2
20015610:	97ba                	add	a5,a5,a4
20015612:	41f7d713          	srai	a4,a5,0x1f
20015616:	8b0d                	andi	a4,a4,3
20015618:	97ba                	add	a5,a5,a4
2001561a:	8789                	srai	a5,a5,0x2
2001561c:	873e                	mv	a4,a5
2001561e:	fb842783          	lw	a5,-72(s0)
20015622:	00f74c63          	blt	a4,a5,2001563a <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:371
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
20015626:	fd842783          	lw	a5,-40(s0)
2001562a:	4398                	lw	a4,0(a5)
2001562c:	000407b7          	lui	a5,0x40
20015630:	8f5d                	or	a4,a4,a5
20015632:	fd842783          	lw	a5,-40(s0)
20015636:	c398                	sw	a4,0(a5)
20015638:	a0b9                	j	20015686 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x140>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:373
        int config_index = find_closest_config(ref_hz, rate);
2001563a:	fb842583          	lw	a1,-72(s0)
2001563e:	fd042503          	lw	a0,-48(s0)
20015642:	cb7ff0ef          	jal	ra,200152f8 <find_closest_config>
20015646:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:374
        if (config_index != -1) {
2001564a:	fcc42703          	lw	a4,-52(s0)
2001564e:	57fd                	li	a5,-1
20015650:	02f70263          	beq	a4,a5,20015674 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x12e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:375
            configure_pll(pllcfg, plloutdiv, &(pll_configs[config_index]));
20015654:	fcc42783          	lw	a5,-52(s0)
20015658:	00579713          	slli	a4,a5,0x5
2001565c:	200107b7          	lui	a5,0x20010
20015660:	6ac78793          	addi	a5,a5,1708 # 200106ac <pll_configs>
20015664:	97ba                	add	a5,a5,a4
20015666:	863e                	mv	a2,a5
20015668:	fd442583          	lw	a1,-44(s0)
2001566c:	fd842503          	lw	a0,-40(s0)
20015670:	3b0d                	jal	200153a2 <configure_pll>
20015672:	a811                	j	20015686 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x140>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:378
            __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
20015674:	fd842783          	lw	a5,-40(s0)
20015678:	4398                	lw	a4,0(a5)
2001567a:	000407b7          	lui	a5,0x40
2001567e:	8f5d                	or	a4,a4,a5
20015680:	fd842783          	lw	a5,-40(s0)
20015684:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:383
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_SEL;
20015686:	fd842783          	lw	a5,-40(s0)
2001568a:	4398                	lw	a4,0(a5)
2001568c:	67c1                	lui	a5,0x10
2001568e:	8f5d                	or	a4,a4,a5
20015690:	fd842783          	lw	a5,-40(s0)
20015694:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:385
    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
20015696:	fbc42503          	lw	a0,-68(s0)
2001569a:	aefff0ef          	jal	ra,20015188 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>
2001569e:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:386
}
200156a0:	853e                	mv	a0,a5
200156a2:	40b6                	lw	ra,76(sp)
200156a4:	4426                	lw	s0,72(sp)
200156a6:	6161                	addi	sp,sp,80
200156a8:	8082                	ret

200156aa <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1364
{
200156aa:	1141                	addi	sp,sp,-16
200156ac:	c622                	sw	s0,12(sp)
200156ae:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1365
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
200156b0:	100087b7          	lui	a5,0x10008
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1366
}
200156b4:	853e                	mv	a0,a5
200156b6:	4432                	lw	s0,12(sp)
200156b8:	0141                	addi	sp,sp,16
200156ba:	8082                	ret

200156bc <__metal_driver_sifive_fe310_g000_prci_get_reg>:
__metal_driver_sifive_fe310_g000_prci_get_reg():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:12

#include <metal/drivers/sifive_fe310-g000_prci.h>
#include <metal/machine.h>

long __metal_driver_sifive_fe310_g000_prci_get_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset) {
200156bc:	7179                	addi	sp,sp,-48
200156be:	d606                	sw	ra,44(sp)
200156c0:	d422                	sw	s0,40(sp)
200156c2:	1800                	addi	s0,sp,48
200156c4:	fca42e23          	sw	a0,-36(s0)
200156c8:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:13
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
200156cc:	3ff9                	jal	200156aa <__metal_driver_sifive_fe310_g000_prci_base>
200156ce:	87aa                	mv	a5,a0
200156d0:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:14
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset));
200156d4:	fd842703          	lw	a4,-40(s0)
200156d8:	fec42783          	lw	a5,-20(s0)
200156dc:	97ba                	add	a5,a5,a4
200156de:	439c                	lw	a5,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:15
}
200156e0:	853e                	mv	a0,a5
200156e2:	50b2                	lw	ra,44(sp)
200156e4:	5422                	lw	s0,40(sp)
200156e6:	6145                	addi	sp,sp,48
200156e8:	8082                	ret

200156ea <__metal_driver_sifive_fe310_g000_prci_set_reg>:
__metal_driver_sifive_fe310_g000_prci_set_reg():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:19

long __metal_driver_sifive_fe310_g000_prci_set_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset,
    long value) {
200156ea:	7179                	addi	sp,sp,-48
200156ec:	d606                	sw	ra,44(sp)
200156ee:	d422                	sw	s0,40(sp)
200156f0:	1800                	addi	s0,sp,48
200156f2:	fca42e23          	sw	a0,-36(s0)
200156f6:	fcb42c23          	sw	a1,-40(s0)
200156fa:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:20
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
200156fe:	3775                	jal	200156aa <__metal_driver_sifive_fe310_g000_prci_base>
20015700:	87aa                	mv	a5,a0
20015702:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:21
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset)) = value;
20015706:	fd842703          	lw	a4,-40(s0)
2001570a:	fec42783          	lw	a5,-20(s0)
2001570e:	97ba                	add	a5,a5,a4
20015710:	873e                	mv	a4,a5
20015712:	fd442783          	lw	a5,-44(s0)
20015716:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:22
}
20015718:	853e                	mv	a0,a5
2001571a:	50b2                	lw	ra,44(sp)
2001571c:	5422                	lw	s0,40(sp)
2001571e:	6145                	addi	sp,sp,48
20015720:	8082                	ret

20015722 <__metal_driver_sifive_gpio0_base>:
__metal_driver_sifive_gpio0_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:430
{
20015722:	1101                	addi	sp,sp,-32
20015724:	ce22                	sw	s0,28(sp)
20015726:	1000                	addi	s0,sp,32
20015728:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:431
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
2001572c:	fec42703          	lw	a4,-20(s0)
20015730:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015734:	00f71563          	bne	a4,a5,2001573e <__metal_driver_sifive_gpio0_base+0x1c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:432
		return METAL_SIFIVE_GPIO0_10012000_BASE_ADDRESS;
20015738:	100127b7          	lui	a5,0x10012
2001573c:	a011                	j	20015740 <__metal_driver_sifive_gpio0_base+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:435
		return 0;
2001573e:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:437
}
20015740:	853e                	mv	a0,a5
20015742:	4472                	lw	s0,28(sp)
20015744:	6105                	addi	sp,sp,32
20015746:	8082                	ret

20015748 <__metal_driver_sifive_gpio0_interrupt_parent>:
__metal_driver_sifive_gpio0_interrupt_parent():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:460
{
20015748:	1101                	addi	sp,sp,-32
2001574a:	ce22                	sw	s0,28(sp)
2001574c:	1000                	addi	s0,sp,32
2001574e:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:461
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
20015752:	fec42703          	lw	a4,-20(s0)
20015756:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
2001575a:	00f71763          	bne	a4,a5,20015768 <__metal_driver_sifive_gpio0_interrupt_parent+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:462
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
2001575e:	800007b7          	lui	a5,0x80000
20015762:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffeca0>
20015766:	a011                	j	2001576a <__metal_driver_sifive_gpio0_interrupt_parent+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:465
		return 0;
20015768:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:467
}
2001576a:	853e                	mv	a0,a5
2001576c:	4472                	lw	s0,28(sp)
2001576e:	6105                	addi	sp,sp,32
20015770:	8082                	ret

20015772 <__metal_driver_sifive_gpio0_interrupt_lines>:
__metal_driver_sifive_gpio0_interrupt_lines():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:470
{
20015772:	1101                	addi	sp,sp,-32
20015774:	ce22                	sw	s0,28(sp)
20015776:	1000                	addi	s0,sp,32
20015778:	fea42623          	sw	a0,-20(s0)
2001577c:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:471
	if (((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 0)) {
20015780:	fec42703          	lw	a4,-20(s0)
20015784:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015788:	00f71763          	bne	a4,a5,20015796 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:471 (discriminator 1)
2001578c:	fe842783          	lw	a5,-24(s0)
20015790:	e399                	bnez	a5,20015796 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:472
		return 8;
20015792:	47a1                	li	a5,8
20015794:	ae15                	j	20015ac8 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:474
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 1))) {
20015796:	fec42703          	lw	a4,-20(s0)
2001579a:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
2001579e:	00f71963          	bne	a4,a5,200157b0 <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:474 (discriminator 1)
200157a2:	fe842703          	lw	a4,-24(s0)
200157a6:	4785                	li	a5,1
200157a8:	00f71463          	bne	a4,a5,200157b0 <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:475
		return 9;
200157ac:	47a5                	li	a5,9
200157ae:	ae29                	j	20015ac8 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:477
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 2))) {
200157b0:	fec42703          	lw	a4,-20(s0)
200157b4:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
200157b8:	00f71963          	bne	a4,a5,200157ca <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:477 (discriminator 1)
200157bc:	fe842703          	lw	a4,-24(s0)
200157c0:	4789                	li	a5,2
200157c2:	00f71463          	bne	a4,a5,200157ca <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:478
		return 10;
200157c6:	47a9                	li	a5,10
200157c8:	a601                	j	20015ac8 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:480
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 3))) {
200157ca:	fec42703          	lw	a4,-20(s0)
200157ce:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
200157d2:	00f71963          	bne	a4,a5,200157e4 <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:480 (discriminator 1)
200157d6:	fe842703          	lw	a4,-24(s0)
200157da:	478d                	li	a5,3
200157dc:	00f71463          	bne	a4,a5,200157e4 <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:481
		return 11;
200157e0:	47ad                	li	a5,11
200157e2:	a4dd                	j	20015ac8 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:483
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 4))) {
200157e4:	fec42703          	lw	a4,-20(s0)
200157e8:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
200157ec:	00f71963          	bne	a4,a5,200157fe <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:483 (discriminator 1)
200157f0:	fe842703          	lw	a4,-24(s0)
200157f4:	4791                	li	a5,4
200157f6:	00f71463          	bne	a4,a5,200157fe <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:484
		return 12;
200157fa:	47b1                	li	a5,12
200157fc:	a4f1                	j	20015ac8 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:486
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 5))) {
200157fe:	fec42703          	lw	a4,-20(s0)
20015802:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015806:	00f71963          	bne	a4,a5,20015818 <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:486 (discriminator 1)
2001580a:	fe842703          	lw	a4,-24(s0)
2001580e:	4795                	li	a5,5
20015810:	00f71463          	bne	a4,a5,20015818 <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:487
		return 13;
20015814:	47b5                	li	a5,13
20015816:	ac4d                	j	20015ac8 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:489
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 6))) {
20015818:	fec42703          	lw	a4,-20(s0)
2001581c:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015820:	00f71963          	bne	a4,a5,20015832 <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:489 (discriminator 1)
20015824:	fe842703          	lw	a4,-24(s0)
20015828:	4799                	li	a5,6
2001582a:	00f71463          	bne	a4,a5,20015832 <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:490
		return 14;
2001582e:	47b9                	li	a5,14
20015830:	ac61                	j	20015ac8 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:492
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 7))) {
20015832:	fec42703          	lw	a4,-20(s0)
20015836:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
2001583a:	00f71963          	bne	a4,a5,2001584c <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:492 (discriminator 1)
2001583e:	fe842703          	lw	a4,-24(s0)
20015842:	479d                	li	a5,7
20015844:	00f71463          	bne	a4,a5,2001584c <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:493
		return 15;
20015848:	47bd                	li	a5,15
2001584a:	acbd                	j	20015ac8 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:495
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 8))) {
2001584c:	fec42703          	lw	a4,-20(s0)
20015850:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015854:	00f71963          	bne	a4,a5,20015866 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:495 (discriminator 1)
20015858:	fe842703          	lw	a4,-24(s0)
2001585c:	47a1                	li	a5,8
2001585e:	00f71463          	bne	a4,a5,20015866 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:496
		return 16;
20015862:	47c1                	li	a5,16
20015864:	a495                	j	20015ac8 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:498
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 9))) {
20015866:	fec42703          	lw	a4,-20(s0)
2001586a:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
2001586e:	00f71963          	bne	a4,a5,20015880 <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:498 (discriminator 1)
20015872:	fe842703          	lw	a4,-24(s0)
20015876:	47a5                	li	a5,9
20015878:	00f71463          	bne	a4,a5,20015880 <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:499
		return 17;
2001587c:	47c5                	li	a5,17
2001587e:	a4a9                	j	20015ac8 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:501
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 10))) {
20015880:	fec42703          	lw	a4,-20(s0)
20015884:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015888:	00f71963          	bne	a4,a5,2001589a <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:501 (discriminator 1)
2001588c:	fe842703          	lw	a4,-24(s0)
20015890:	47a9                	li	a5,10
20015892:	00f71463          	bne	a4,a5,2001589a <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:502
		return 18;
20015896:	47c9                	li	a5,18
20015898:	ac05                	j	20015ac8 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:504
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 11))) {
2001589a:	fec42703          	lw	a4,-20(s0)
2001589e:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
200158a2:	00f71963          	bne	a4,a5,200158b4 <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:504 (discriminator 1)
200158a6:	fe842703          	lw	a4,-24(s0)
200158aa:	47ad                	li	a5,11
200158ac:	00f71463          	bne	a4,a5,200158b4 <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:505
		return 19;
200158b0:	47cd                	li	a5,19
200158b2:	ac19                	j	20015ac8 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:507
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 12))) {
200158b4:	fec42703          	lw	a4,-20(s0)
200158b8:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
200158bc:	00f71963          	bne	a4,a5,200158ce <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:507 (discriminator 1)
200158c0:	fe842703          	lw	a4,-24(s0)
200158c4:	47b1                	li	a5,12
200158c6:	00f71463          	bne	a4,a5,200158ce <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:508
		return 20;
200158ca:	47d1                	li	a5,20
200158cc:	aaf5                	j	20015ac8 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:510
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 13))) {
200158ce:	fec42703          	lw	a4,-20(s0)
200158d2:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
200158d6:	00f71963          	bne	a4,a5,200158e8 <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:510 (discriminator 1)
200158da:	fe842703          	lw	a4,-24(s0)
200158de:	47b5                	li	a5,13
200158e0:	00f71463          	bne	a4,a5,200158e8 <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:511
		return 21;
200158e4:	47d5                	li	a5,21
200158e6:	a2cd                	j	20015ac8 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:513
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 14))) {
200158e8:	fec42703          	lw	a4,-20(s0)
200158ec:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
200158f0:	00f71963          	bne	a4,a5,20015902 <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:513 (discriminator 1)
200158f4:	fe842703          	lw	a4,-24(s0)
200158f8:	47b9                	li	a5,14
200158fa:	00f71463          	bne	a4,a5,20015902 <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:514
		return 22;
200158fe:	47d9                	li	a5,22
20015900:	a2e1                	j	20015ac8 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:516
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 15))) {
20015902:	fec42703          	lw	a4,-20(s0)
20015906:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
2001590a:	00f71963          	bne	a4,a5,2001591c <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:516 (discriminator 1)
2001590e:	fe842703          	lw	a4,-24(s0)
20015912:	47bd                	li	a5,15
20015914:	00f71463          	bne	a4,a5,2001591c <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:517
		return 23;
20015918:	47dd                	li	a5,23
2001591a:	a27d                	j	20015ac8 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:519
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 16))) {
2001591c:	fec42703          	lw	a4,-20(s0)
20015920:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015924:	00f71963          	bne	a4,a5,20015936 <__metal_driver_sifive_gpio0_interrupt_lines+0x1c4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:519 (discriminator 1)
20015928:	fe842703          	lw	a4,-24(s0)
2001592c:	47c1                	li	a5,16
2001592e:	00f71463          	bne	a4,a5,20015936 <__metal_driver_sifive_gpio0_interrupt_lines+0x1c4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:520
		return 24;
20015932:	47e1                	li	a5,24
20015934:	aa51                	j	20015ac8 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:522
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 17))) {
20015936:	fec42703          	lw	a4,-20(s0)
2001593a:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
2001593e:	00f71963          	bne	a4,a5,20015950 <__metal_driver_sifive_gpio0_interrupt_lines+0x1de>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:522 (discriminator 1)
20015942:	fe842703          	lw	a4,-24(s0)
20015946:	47c5                	li	a5,17
20015948:	00f71463          	bne	a4,a5,20015950 <__metal_driver_sifive_gpio0_interrupt_lines+0x1de>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:523
		return 25;
2001594c:	47e5                	li	a5,25
2001594e:	aaad                	j	20015ac8 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:525
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 18))) {
20015950:	fec42703          	lw	a4,-20(s0)
20015954:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015958:	00f71963          	bne	a4,a5,2001596a <__metal_driver_sifive_gpio0_interrupt_lines+0x1f8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:525 (discriminator 1)
2001595c:	fe842703          	lw	a4,-24(s0)
20015960:	47c9                	li	a5,18
20015962:	00f71463          	bne	a4,a5,2001596a <__metal_driver_sifive_gpio0_interrupt_lines+0x1f8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:526
		return 26;
20015966:	47e9                	li	a5,26
20015968:	a285                	j	20015ac8 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:528
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 19))) {
2001596a:	fec42703          	lw	a4,-20(s0)
2001596e:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015972:	00f71963          	bne	a4,a5,20015984 <__metal_driver_sifive_gpio0_interrupt_lines+0x212>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:528 (discriminator 1)
20015976:	fe842703          	lw	a4,-24(s0)
2001597a:	47cd                	li	a5,19
2001597c:	00f71463          	bne	a4,a5,20015984 <__metal_driver_sifive_gpio0_interrupt_lines+0x212>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:529
		return 27;
20015980:	47ed                	li	a5,27
20015982:	a299                	j	20015ac8 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:531
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 20))) {
20015984:	fec42703          	lw	a4,-20(s0)
20015988:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
2001598c:	00f71963          	bne	a4,a5,2001599e <__metal_driver_sifive_gpio0_interrupt_lines+0x22c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:531 (discriminator 1)
20015990:	fe842703          	lw	a4,-24(s0)
20015994:	47d1                	li	a5,20
20015996:	00f71463          	bne	a4,a5,2001599e <__metal_driver_sifive_gpio0_interrupt_lines+0x22c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:532
		return 28;
2001599a:	47f1                	li	a5,28
2001599c:	a235                	j	20015ac8 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:534
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 21))) {
2001599e:	fec42703          	lw	a4,-20(s0)
200159a2:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
200159a6:	00f71963          	bne	a4,a5,200159b8 <__metal_driver_sifive_gpio0_interrupt_lines+0x246>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:534 (discriminator 1)
200159aa:	fe842703          	lw	a4,-24(s0)
200159ae:	47d5                	li	a5,21
200159b0:	00f71463          	bne	a4,a5,200159b8 <__metal_driver_sifive_gpio0_interrupt_lines+0x246>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:535
		return 29;
200159b4:	47f5                	li	a5,29
200159b6:	aa09                	j	20015ac8 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:537
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 22))) {
200159b8:	fec42703          	lw	a4,-20(s0)
200159bc:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
200159c0:	00f71963          	bne	a4,a5,200159d2 <__metal_driver_sifive_gpio0_interrupt_lines+0x260>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:537 (discriminator 1)
200159c4:	fe842703          	lw	a4,-24(s0)
200159c8:	47d9                	li	a5,22
200159ca:	00f71463          	bne	a4,a5,200159d2 <__metal_driver_sifive_gpio0_interrupt_lines+0x260>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:538
		return 30;
200159ce:	47f9                	li	a5,30
200159d0:	a8e5                	j	20015ac8 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:540
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 23))) {
200159d2:	fec42703          	lw	a4,-20(s0)
200159d6:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
200159da:	00f71963          	bne	a4,a5,200159ec <__metal_driver_sifive_gpio0_interrupt_lines+0x27a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:540 (discriminator 1)
200159de:	fe842703          	lw	a4,-24(s0)
200159e2:	47dd                	li	a5,23
200159e4:	00f71463          	bne	a4,a5,200159ec <__metal_driver_sifive_gpio0_interrupt_lines+0x27a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:541
		return 31;
200159e8:	47fd                	li	a5,31
200159ea:	a8f9                	j	20015ac8 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:543
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 24))) {
200159ec:	fec42703          	lw	a4,-20(s0)
200159f0:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
200159f4:	00f71a63          	bne	a4,a5,20015a08 <__metal_driver_sifive_gpio0_interrupt_lines+0x296>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:543 (discriminator 1)
200159f8:	fe842703          	lw	a4,-24(s0)
200159fc:	47e1                	li	a5,24
200159fe:	00f71563          	bne	a4,a5,20015a08 <__metal_driver_sifive_gpio0_interrupt_lines+0x296>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:544
		return 32;
20015a02:	02000793          	li	a5,32
20015a06:	a0c9                	j	20015ac8 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:546
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 25))) {
20015a08:	fec42703          	lw	a4,-20(s0)
20015a0c:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015a10:	00f71a63          	bne	a4,a5,20015a24 <__metal_driver_sifive_gpio0_interrupt_lines+0x2b2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:546 (discriminator 1)
20015a14:	fe842703          	lw	a4,-24(s0)
20015a18:	47e5                	li	a5,25
20015a1a:	00f71563          	bne	a4,a5,20015a24 <__metal_driver_sifive_gpio0_interrupt_lines+0x2b2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:547
		return 33;
20015a1e:	02100793          	li	a5,33
20015a22:	a05d                	j	20015ac8 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:549
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 26))) {
20015a24:	fec42703          	lw	a4,-20(s0)
20015a28:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015a2c:	00f71a63          	bne	a4,a5,20015a40 <__metal_driver_sifive_gpio0_interrupt_lines+0x2ce>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:549 (discriminator 1)
20015a30:	fe842703          	lw	a4,-24(s0)
20015a34:	47e9                	li	a5,26
20015a36:	00f71563          	bne	a4,a5,20015a40 <__metal_driver_sifive_gpio0_interrupt_lines+0x2ce>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:550
		return 34;
20015a3a:	02200793          	li	a5,34
20015a3e:	a069                	j	20015ac8 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:552
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 27))) {
20015a40:	fec42703          	lw	a4,-20(s0)
20015a44:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015a48:	00f71a63          	bne	a4,a5,20015a5c <__metal_driver_sifive_gpio0_interrupt_lines+0x2ea>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:552 (discriminator 1)
20015a4c:	fe842703          	lw	a4,-24(s0)
20015a50:	47ed                	li	a5,27
20015a52:	00f71563          	bne	a4,a5,20015a5c <__metal_driver_sifive_gpio0_interrupt_lines+0x2ea>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:553
		return 35;
20015a56:	02300793          	li	a5,35
20015a5a:	a0bd                	j	20015ac8 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:555
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 28))) {
20015a5c:	fec42703          	lw	a4,-20(s0)
20015a60:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015a64:	00f71a63          	bne	a4,a5,20015a78 <__metal_driver_sifive_gpio0_interrupt_lines+0x306>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:555 (discriminator 1)
20015a68:	fe842703          	lw	a4,-24(s0)
20015a6c:	47f1                	li	a5,28
20015a6e:	00f71563          	bne	a4,a5,20015a78 <__metal_driver_sifive_gpio0_interrupt_lines+0x306>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:556
		return 36;
20015a72:	02400793          	li	a5,36
20015a76:	a889                	j	20015ac8 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:558
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 29))) {
20015a78:	fec42703          	lw	a4,-20(s0)
20015a7c:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015a80:	00f71963          	bne	a4,a5,20015a92 <__metal_driver_sifive_gpio0_interrupt_lines+0x320>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:558 (discriminator 1)
20015a84:	fe842703          	lw	a4,-24(s0)
20015a88:	47f5                	li	a5,29
20015a8a:	00f71463          	bne	a4,a5,20015a92 <__metal_driver_sifive_gpio0_interrupt_lines+0x320>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:559
		return 27;
20015a8e:	47ed                	li	a5,27
20015a90:	a825                	j	20015ac8 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:561
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 30))) {
20015a92:	fec42703          	lw	a4,-20(s0)
20015a96:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015a9a:	00f71963          	bne	a4,a5,20015aac <__metal_driver_sifive_gpio0_interrupt_lines+0x33a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:561 (discriminator 1)
20015a9e:	fe842703          	lw	a4,-24(s0)
20015aa2:	47f9                	li	a5,30
20015aa4:	00f71463          	bne	a4,a5,20015aac <__metal_driver_sifive_gpio0_interrupt_lines+0x33a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:562
		return 28;
20015aa8:	47f1                	li	a5,28
20015aaa:	a839                	j	20015ac8 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:564
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 31))) {
20015aac:	fec42703          	lw	a4,-20(s0)
20015ab0:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015ab4:	00f71963          	bne	a4,a5,20015ac6 <__metal_driver_sifive_gpio0_interrupt_lines+0x354>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:564 (discriminator 1)
20015ab8:	fe842703          	lw	a4,-24(s0)
20015abc:	47fd                	li	a5,31
20015abe:	00f71463          	bne	a4,a5,20015ac6 <__metal_driver_sifive_gpio0_interrupt_lines+0x354>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:565
		return 29;
20015ac2:	47f5                	li	a5,29
20015ac4:	a011                	j	20015ac8 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:568
		return 0;
20015ac6:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:570
}
20015ac8:	853e                	mv	a0,a5
20015aca:	4472                	lw	s0,28(sp)
20015acc:	6105                	addi	sp,sp,32
20015ace:	8082                	ret

20015ad0 <__metal_driver_sifive_gpio0_enable_input>:
__metal_driver_sifive_gpio0_enable_input():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:13
#include <metal/drivers/sifive_gpio0.h>
#include <metal/io.h>
#include <metal/machine.h>

int __metal_driver_sifive_gpio0_enable_input(struct metal_gpio *ggpio,
                                             long source) {
20015ad0:	7179                	addi	sp,sp,-48
20015ad2:	d606                	sw	ra,44(sp)
20015ad4:	d422                	sw	s0,40(sp)
20015ad6:	1800                	addi	s0,sp,48
20015ad8:	fca42e23          	sw	a0,-36(s0)
20015adc:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:14
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015ae0:	fdc42503          	lw	a0,-36(s0)
20015ae4:	c3fff0ef          	jal	ra,20015722 <__metal_driver_sifive_gpio0_base>
20015ae8:	87aa                	mv	a5,a0
20015aea:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:17

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) |= source;
20015aee:	fec42783          	lw	a5,-20(s0)
20015af2:	0791                	addi	a5,a5,4
20015af4:	4398                	lw	a4,0(a5)
20015af6:	fd842783          	lw	a5,-40(s0)
20015afa:	fec42683          	lw	a3,-20(s0)
20015afe:	0691                	addi	a3,a3,4
20015b00:	8fd9                	or	a5,a5,a4
20015b02:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:19

    return 0;
20015b04:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:20
}
20015b06:	853e                	mv	a0,a5
20015b08:	50b2                	lw	ra,44(sp)
20015b0a:	5422                	lw	s0,40(sp)
20015b0c:	6145                	addi	sp,sp,48
20015b0e:	8082                	ret

20015b10 <__metal_driver_sifive_gpio0_disable_input>:
__metal_driver_sifive_gpio0_disable_input():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:23

int __metal_driver_sifive_gpio0_disable_input(struct metal_gpio *ggpio,
                                              long source) {
20015b10:	7179                	addi	sp,sp,-48
20015b12:	d606                	sw	ra,44(sp)
20015b14:	d422                	sw	s0,40(sp)
20015b16:	1800                	addi	s0,sp,48
20015b18:	fca42e23          	sw	a0,-36(s0)
20015b1c:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:24
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015b20:	fdc42503          	lw	a0,-36(s0)
20015b24:	bffff0ef          	jal	ra,20015722 <__metal_driver_sifive_gpio0_base>
20015b28:	87aa                	mv	a5,a0
20015b2a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:27

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) &= ~source;
20015b2e:	fec42783          	lw	a5,-20(s0)
20015b32:	0791                	addi	a5,a5,4
20015b34:	439c                	lw	a5,0(a5)
20015b36:	fd842703          	lw	a4,-40(s0)
20015b3a:	fff74713          	not	a4,a4
20015b3e:	86ba                	mv	a3,a4
20015b40:	fec42703          	lw	a4,-20(s0)
20015b44:	0711                	addi	a4,a4,4
20015b46:	8ff5                	and	a5,a5,a3
20015b48:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:29

    return 0;
20015b4a:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:30
}
20015b4c:	853e                	mv	a0,a5
20015b4e:	50b2                	lw	ra,44(sp)
20015b50:	5422                	lw	s0,40(sp)
20015b52:	6145                	addi	sp,sp,48
20015b54:	8082                	ret

20015b56 <__metal_driver_sifive_gpio0_input>:
__metal_driver_sifive_gpio0_input():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:32

long __metal_driver_sifive_gpio0_input(struct metal_gpio *ggpio) {
20015b56:	7179                	addi	sp,sp,-48
20015b58:	d606                	sw	ra,44(sp)
20015b5a:	d422                	sw	s0,40(sp)
20015b5c:	1800                	addi	s0,sp,48
20015b5e:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:33
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015b62:	fdc42503          	lw	a0,-36(s0)
20015b66:	bbdff0ef          	jal	ra,20015722 <__metal_driver_sifive_gpio0_base>
20015b6a:	87aa                	mv	a5,a0
20015b6c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:35

    return __METAL_ACCESS_ONCE(
20015b70:	fec42783          	lw	a5,-20(s0)
20015b74:	439c                	lw	a5,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:37
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_VALUE));
}
20015b76:	853e                	mv	a0,a5
20015b78:	50b2                	lw	ra,44(sp)
20015b7a:	5422                	lw	s0,40(sp)
20015b7c:	6145                	addi	sp,sp,48
20015b7e:	8082                	ret

20015b80 <__metal_driver_sifive_gpio0_output>:
__metal_driver_sifive_gpio0_output():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:39

long __metal_driver_sifive_gpio0_output(struct metal_gpio *ggpio) {
20015b80:	7179                	addi	sp,sp,-48
20015b82:	d606                	sw	ra,44(sp)
20015b84:	d422                	sw	s0,40(sp)
20015b86:	1800                	addi	s0,sp,48
20015b88:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:40
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015b8c:	fdc42503          	lw	a0,-36(s0)
20015b90:	b93ff0ef          	jal	ra,20015722 <__metal_driver_sifive_gpio0_base>
20015b94:	87aa                	mv	a5,a0
20015b96:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:42

    return __METAL_ACCESS_ONCE(
20015b9a:	fec42783          	lw	a5,-20(s0)
20015b9e:	07b1                	addi	a5,a5,12
20015ba0:	439c                	lw	a5,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:44
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT));
}
20015ba2:	853e                	mv	a0,a5
20015ba4:	50b2                	lw	ra,44(sp)
20015ba6:	5422                	lw	s0,40(sp)
20015ba8:	6145                	addi	sp,sp,48
20015baa:	8082                	ret

20015bac <__metal_driver_sifive_gpio0_disable_output>:
__metal_driver_sifive_gpio0_disable_output():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:47

int __metal_driver_sifive_gpio0_disable_output(struct metal_gpio *ggpio,
                                               long source) {
20015bac:	7179                	addi	sp,sp,-48
20015bae:	d606                	sw	ra,44(sp)
20015bb0:	d422                	sw	s0,40(sp)
20015bb2:	1800                	addi	s0,sp,48
20015bb4:	fca42e23          	sw	a0,-36(s0)
20015bb8:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:48
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015bbc:	fdc42503          	lw	a0,-36(s0)
20015bc0:	b63ff0ef          	jal	ra,20015722 <__metal_driver_sifive_gpio0_base>
20015bc4:	87aa                	mv	a5,a0
20015bc6:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:51

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) &= ~source;
20015bca:	fec42783          	lw	a5,-20(s0)
20015bce:	07a1                	addi	a5,a5,8
20015bd0:	439c                	lw	a5,0(a5)
20015bd2:	fd842703          	lw	a4,-40(s0)
20015bd6:	fff74713          	not	a4,a4
20015bda:	86ba                	mv	a3,a4
20015bdc:	fec42703          	lw	a4,-20(s0)
20015be0:	0721                	addi	a4,a4,8
20015be2:	8ff5                	and	a5,a5,a3
20015be4:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:53

    return 0;
20015be6:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:54
}
20015be8:	853e                	mv	a0,a5
20015bea:	50b2                	lw	ra,44(sp)
20015bec:	5422                	lw	s0,40(sp)
20015bee:	6145                	addi	sp,sp,48
20015bf0:	8082                	ret

20015bf2 <__metal_driver_sifive_gpio0_enable_output>:
__metal_driver_sifive_gpio0_enable_output():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:57

int __metal_driver_sifive_gpio0_enable_output(struct metal_gpio *ggpio,
                                              long source) {
20015bf2:	7179                	addi	sp,sp,-48
20015bf4:	d606                	sw	ra,44(sp)
20015bf6:	d422                	sw	s0,40(sp)
20015bf8:	1800                	addi	s0,sp,48
20015bfa:	fca42e23          	sw	a0,-36(s0)
20015bfe:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:58
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015c02:	fdc42503          	lw	a0,-36(s0)
20015c06:	b1dff0ef          	jal	ra,20015722 <__metal_driver_sifive_gpio0_base>
20015c0a:	87aa                	mv	a5,a0
20015c0c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:61

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) |= source;
20015c10:	fec42783          	lw	a5,-20(s0)
20015c14:	07a1                	addi	a5,a5,8
20015c16:	4398                	lw	a4,0(a5)
20015c18:	fd842783          	lw	a5,-40(s0)
20015c1c:	fec42683          	lw	a3,-20(s0)
20015c20:	06a1                	addi	a3,a3,8
20015c22:	8fd9                	or	a5,a5,a4
20015c24:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:63

    return 0;
20015c26:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:64
}
20015c28:	853e                	mv	a0,a5
20015c2a:	50b2                	lw	ra,44(sp)
20015c2c:	5422                	lw	s0,40(sp)
20015c2e:	6145                	addi	sp,sp,48
20015c30:	8082                	ret

20015c32 <__metal_driver_sifive_gpio0_output_set>:
__metal_driver_sifive_gpio0_output_set():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:67

int __metal_driver_sifive_gpio0_output_set(struct metal_gpio *ggpio,
                                           long value) {
20015c32:	7179                	addi	sp,sp,-48
20015c34:	d606                	sw	ra,44(sp)
20015c36:	d422                	sw	s0,40(sp)
20015c38:	1800                	addi	s0,sp,48
20015c3a:	fca42e23          	sw	a0,-36(s0)
20015c3e:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:68
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015c42:	fdc42503          	lw	a0,-36(s0)
20015c46:	addff0ef          	jal	ra,20015722 <__metal_driver_sifive_gpio0_base>
20015c4a:	87aa                	mv	a5,a0
20015c4c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:70

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) |=
20015c50:	fec42783          	lw	a5,-20(s0)
20015c54:	07b1                	addi	a5,a5,12
20015c56:	4398                	lw	a4,0(a5)
20015c58:	fd842783          	lw	a5,-40(s0)
20015c5c:	fec42683          	lw	a3,-20(s0)
20015c60:	06b1                	addi	a3,a3,12
20015c62:	8fd9                	or	a5,a5,a4
20015c64:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:73
        value;

    return 0;
20015c66:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:74
}
20015c68:	853e                	mv	a0,a5
20015c6a:	50b2                	lw	ra,44(sp)
20015c6c:	5422                	lw	s0,40(sp)
20015c6e:	6145                	addi	sp,sp,48
20015c70:	8082                	ret

20015c72 <__metal_driver_sifive_gpio0_output_clear>:
__metal_driver_sifive_gpio0_output_clear():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:77

int __metal_driver_sifive_gpio0_output_clear(struct metal_gpio *ggpio,
                                             long value) {
20015c72:	7179                	addi	sp,sp,-48
20015c74:	d606                	sw	ra,44(sp)
20015c76:	d422                	sw	s0,40(sp)
20015c78:	1800                	addi	s0,sp,48
20015c7a:	fca42e23          	sw	a0,-36(s0)
20015c7e:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:78
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015c82:	fdc42503          	lw	a0,-36(s0)
20015c86:	a9dff0ef          	jal	ra,20015722 <__metal_driver_sifive_gpio0_base>
20015c8a:	87aa                	mv	a5,a0
20015c8c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:80

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
20015c90:	fec42783          	lw	a5,-20(s0)
20015c94:	07b1                	addi	a5,a5,12
20015c96:	439c                	lw	a5,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:81
        ~value;
20015c98:	fd842703          	lw	a4,-40(s0)
20015c9c:	fff74713          	not	a4,a4
20015ca0:	86ba                	mv	a3,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:80
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
20015ca2:	fec42703          	lw	a4,-20(s0)
20015ca6:	0731                	addi	a4,a4,12
20015ca8:	8ff5                	and	a5,a5,a3
20015caa:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:83

    return 0;
20015cac:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:84
}
20015cae:	853e                	mv	a0,a5
20015cb0:	50b2                	lw	ra,44(sp)
20015cb2:	5422                	lw	s0,40(sp)
20015cb4:	6145                	addi	sp,sp,48
20015cb6:	8082                	ret

20015cb8 <__metal_driver_sifive_gpio0_output_toggle>:
__metal_driver_sifive_gpio0_output_toggle():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:87

int __metal_driver_sifive_gpio0_output_toggle(struct metal_gpio *ggpio,
                                              long value) {
20015cb8:	7179                	addi	sp,sp,-48
20015cba:	d606                	sw	ra,44(sp)
20015cbc:	d422                	sw	s0,40(sp)
20015cbe:	1800                	addi	s0,sp,48
20015cc0:	fca42e23          	sw	a0,-36(s0)
20015cc4:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:88
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015cc8:	fdc42503          	lw	a0,-36(s0)
20015ccc:	a57ff0ef          	jal	ra,20015722 <__metal_driver_sifive_gpio0_base>
20015cd0:	87aa                	mv	a5,a0
20015cd2:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:91

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
        __METAL_ACCESS_ONCE(
20015cd6:	fec42783          	lw	a5,-20(s0)
20015cda:	07b1                	addi	a5,a5,12
20015cdc:	4398                	lw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
20015cde:	fd842783          	lw	a5,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
20015ce2:	fec42683          	lw	a3,-20(s0)
20015ce6:	06b1                	addi	a3,a3,12
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
20015ce8:	8fb9                	xor	a5,a5,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
20015cea:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:95
        value;

    return 0;
20015cec:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:96
}
20015cee:	853e                	mv	a0,a5
20015cf0:	50b2                	lw	ra,44(sp)
20015cf2:	5422                	lw	s0,40(sp)
20015cf4:	6145                	addi	sp,sp,48
20015cf6:	8082                	ret

20015cf8 <__metal_driver_sifive_gpio0_enable_io>:
__metal_driver_sifive_gpio0_enable_io():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:99

int __metal_driver_sifive_gpio0_enable_io(struct metal_gpio *ggpio, long source,
                                          long dest) {
20015cf8:	7179                	addi	sp,sp,-48
20015cfa:	d606                	sw	ra,44(sp)
20015cfc:	d422                	sw	s0,40(sp)
20015cfe:	1800                	addi	s0,sp,48
20015d00:	fca42e23          	sw	a0,-36(s0)
20015d04:	fcb42c23          	sw	a1,-40(s0)
20015d08:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:100
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015d0c:	fdc42503          	lw	a0,-36(s0)
20015d10:	a13ff0ef          	jal	ra,20015722 <__metal_driver_sifive_gpio0_base>
20015d14:	87aa                	mv	a5,a0
20015d16:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:103

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_SEL)) |= source;
20015d1a:	fec42783          	lw	a5,-20(s0)
20015d1e:	03c78793          	addi	a5,a5,60
20015d22:	4398                	lw	a4,0(a5)
20015d24:	fd842783          	lw	a5,-40(s0)
20015d28:	fec42683          	lw	a3,-20(s0)
20015d2c:	03c68693          	addi	a3,a3,60
20015d30:	8fd9                	or	a5,a5,a4
20015d32:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:104
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) |=
20015d34:	fec42783          	lw	a5,-20(s0)
20015d38:	03878793          	addi	a5,a5,56
20015d3c:	4398                	lw	a4,0(a5)
20015d3e:	fd442783          	lw	a5,-44(s0)
20015d42:	fec42683          	lw	a3,-20(s0)
20015d46:	03868693          	addi	a3,a3,56
20015d4a:	8fd9                	or	a5,a5,a4
20015d4c:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:107
        dest;

    return 0;
20015d4e:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:108
}
20015d50:	853e                	mv	a0,a5
20015d52:	50b2                	lw	ra,44(sp)
20015d54:	5422                	lw	s0,40(sp)
20015d56:	6145                	addi	sp,sp,48
20015d58:	8082                	ret

20015d5a <__metal_driver_sifive_gpio0_disable_io>:
__metal_driver_sifive_gpio0_disable_io():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:111

int __metal_driver_sifive_gpio0_disable_io(struct metal_gpio *ggpio,
                                           long source) {
20015d5a:	7179                	addi	sp,sp,-48
20015d5c:	d606                	sw	ra,44(sp)
20015d5e:	d422                	sw	s0,40(sp)
20015d60:	1800                	addi	s0,sp,48
20015d62:	fca42e23          	sw	a0,-36(s0)
20015d66:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:112
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015d6a:	fdc42503          	lw	a0,-36(s0)
20015d6e:	9b5ff0ef          	jal	ra,20015722 <__metal_driver_sifive_gpio0_base>
20015d72:	87aa                	mv	a5,a0
20015d74:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:114

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
20015d78:	fec42783          	lw	a5,-20(s0)
20015d7c:	03878793          	addi	a5,a5,56
20015d80:	439c                	lw	a5,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:115
        ~source;
20015d82:	fd842703          	lw	a4,-40(s0)
20015d86:	fff74713          	not	a4,a4
20015d8a:	86ba                	mv	a3,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:114
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
20015d8c:	fec42703          	lw	a4,-20(s0)
20015d90:	03870713          	addi	a4,a4,56
20015d94:	8ff5                	and	a5,a5,a3
20015d96:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:117

    return 0;
20015d98:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:118
}
20015d9a:	853e                	mv	a0,a5
20015d9c:	50b2                	lw	ra,44(sp)
20015d9e:	5422                	lw	s0,40(sp)
20015da0:	6145                	addi	sp,sp,48
20015da2:	8082                	ret

20015da4 <__metal_driver_sifive_gpio0_config_int>:
__metal_driver_sifive_gpio0_config_int():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:121

int __metal_driver_sifive_gpio0_config_int(struct metal_gpio *ggpio,
                                           long source, int intr_type) {
20015da4:	7179                	addi	sp,sp,-48
20015da6:	d606                	sw	ra,44(sp)
20015da8:	d422                	sw	s0,40(sp)
20015daa:	1800                	addi	s0,sp,48
20015dac:	fca42e23          	sw	a0,-36(s0)
20015db0:	fcb42c23          	sw	a1,-40(s0)
20015db4:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:122
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015db8:	fdc42503          	lw	a0,-36(s0)
20015dbc:	967ff0ef          	jal	ra,20015722 <__metal_driver_sifive_gpio0_base>
20015dc0:	87aa                	mv	a5,a0
20015dc2:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:124

    switch (intr_type) {
20015dc6:	fd442703          	lw	a4,-44(s0)
20015dca:	479d                	li	a5,7
20015dcc:	1ce7e963          	bltu	a5,a4,20015f9e <__metal_driver_sifive_gpio0_config_int+0x1fa>
20015dd0:	fd442783          	lw	a5,-44(s0)
20015dd4:	00279713          	slli	a4,a5,0x2
20015dd8:	200117b7          	lui	a5,0x20011
20015ddc:	f3878793          	addi	a5,a5,-200 # 20010f38 <__metal_driver_vtable_sifive_fe310_g000_pll+0xc>
20015de0:	97ba                	add	a5,a5,a4
20015de2:	439c                	lw	a5,0(a5)
20015de4:	8782                	jr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:127
    case METAL_GPIO_INT_DISABLE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) &= ~source;
20015de6:	fec42783          	lw	a5,-20(s0)
20015dea:	07e1                	addi	a5,a5,24
20015dec:	439c                	lw	a5,0(a5)
20015dee:	fd842703          	lw	a4,-40(s0)
20015df2:	fff74713          	not	a4,a4
20015df6:	86ba                	mv	a3,a4
20015df8:	fec42703          	lw	a4,-20(s0)
20015dfc:	0761                	addi	a4,a4,24
20015dfe:	8ff5                	and	a5,a5,a3
20015e00:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:129
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) &= ~source;
20015e02:	fec42783          	lw	a5,-20(s0)
20015e06:	02078793          	addi	a5,a5,32
20015e0a:	439c                	lw	a5,0(a5)
20015e0c:	fd842703          	lw	a4,-40(s0)
20015e10:	fff74713          	not	a4,a4
20015e14:	86ba                	mv	a3,a4
20015e16:	fec42703          	lw	a4,-20(s0)
20015e1a:	02070713          	addi	a4,a4,32
20015e1e:	8ff5                	and	a5,a5,a3
20015e20:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:131
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) &= ~source;
20015e22:	fec42783          	lw	a5,-20(s0)
20015e26:	02878793          	addi	a5,a5,40
20015e2a:	439c                	lw	a5,0(a5)
20015e2c:	fd842703          	lw	a4,-40(s0)
20015e30:	fff74713          	not	a4,a4
20015e34:	86ba                	mv	a3,a4
20015e36:	fec42703          	lw	a4,-20(s0)
20015e3a:	02870713          	addi	a4,a4,40
20015e3e:	8ff5                	and	a5,a5,a3
20015e40:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:133
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) &= ~source;
20015e42:	fec42783          	lw	a5,-20(s0)
20015e46:	03078793          	addi	a5,a5,48
20015e4a:	439c                	lw	a5,0(a5)
20015e4c:	fd842703          	lw	a4,-40(s0)
20015e50:	fff74713          	not	a4,a4
20015e54:	86ba                	mv	a3,a4
20015e56:	fec42703          	lw	a4,-20(s0)
20015e5a:	03070713          	addi	a4,a4,48
20015e5e:	8ff5                	and	a5,a5,a3
20015e60:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:134
        break;
20015e62:	aa35                	j	20015f9e <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:137
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20015e64:	fec42783          	lw	a5,-20(s0)
20015e68:	07e1                	addi	a5,a5,24
20015e6a:	4398                	lw	a4,0(a5)
20015e6c:	fd842783          	lw	a5,-40(s0)
20015e70:	fec42683          	lw	a3,-20(s0)
20015e74:	06e1                	addi	a3,a3,24
20015e76:	8fd9                	or	a5,a5,a4
20015e78:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:138
        break;
20015e7a:	a215                	j	20015f9e <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:141
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20015e7c:	fec42783          	lw	a5,-20(s0)
20015e80:	02078793          	addi	a5,a5,32
20015e84:	4398                	lw	a4,0(a5)
20015e86:	fd842783          	lw	a5,-40(s0)
20015e8a:	fec42683          	lw	a3,-20(s0)
20015e8e:	02068693          	addi	a3,a3,32
20015e92:	8fd9                	or	a5,a5,a4
20015e94:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:142
        break;
20015e96:	a221                	j	20015f9e <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:145
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20015e98:	fec42783          	lw	a5,-20(s0)
20015e9c:	07e1                	addi	a5,a5,24
20015e9e:	4398                	lw	a4,0(a5)
20015ea0:	fd842783          	lw	a5,-40(s0)
20015ea4:	fec42683          	lw	a3,-20(s0)
20015ea8:	06e1                	addi	a3,a3,24
20015eaa:	8fd9                	or	a5,a5,a4
20015eac:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:147
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20015eae:	fec42783          	lw	a5,-20(s0)
20015eb2:	02078793          	addi	a5,a5,32
20015eb6:	4398                	lw	a4,0(a5)
20015eb8:	fd842783          	lw	a5,-40(s0)
20015ebc:	fec42683          	lw	a3,-20(s0)
20015ec0:	02068693          	addi	a3,a3,32
20015ec4:	8fd9                	or	a5,a5,a4
20015ec6:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:148
        break;
20015ec8:	a8d9                	j	20015f9e <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:151
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20015eca:	fec42783          	lw	a5,-20(s0)
20015ece:	02878793          	addi	a5,a5,40
20015ed2:	4398                	lw	a4,0(a5)
20015ed4:	fd842783          	lw	a5,-40(s0)
20015ed8:	fec42683          	lw	a3,-20(s0)
20015edc:	02868693          	addi	a3,a3,40
20015ee0:	8fd9                	or	a5,a5,a4
20015ee2:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:152
        break;
20015ee4:	a86d                	j	20015f9e <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:155
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20015ee6:	fec42783          	lw	a5,-20(s0)
20015eea:	03078793          	addi	a5,a5,48
20015eee:	4398                	lw	a4,0(a5)
20015ef0:	fd842783          	lw	a5,-40(s0)
20015ef4:	fec42683          	lw	a3,-20(s0)
20015ef8:	03068693          	addi	a3,a3,48
20015efc:	8fd9                	or	a5,a5,a4
20015efe:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:156
        break;
20015f00:	a879                	j	20015f9e <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:159
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20015f02:	fec42783          	lw	a5,-20(s0)
20015f06:	02878793          	addi	a5,a5,40
20015f0a:	4398                	lw	a4,0(a5)
20015f0c:	fd842783          	lw	a5,-40(s0)
20015f10:	fec42683          	lw	a3,-20(s0)
20015f14:	02868693          	addi	a3,a3,40
20015f18:	8fd9                	or	a5,a5,a4
20015f1a:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:161
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20015f1c:	fec42783          	lw	a5,-20(s0)
20015f20:	03078793          	addi	a5,a5,48
20015f24:	4398                	lw	a4,0(a5)
20015f26:	fd842783          	lw	a5,-40(s0)
20015f2a:	fec42683          	lw	a3,-20(s0)
20015f2e:	03068693          	addi	a3,a3,48
20015f32:	8fd9                	or	a5,a5,a4
20015f34:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:162
        break;
20015f36:	a0a5                	j	20015f9e <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:165
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20015f38:	fec42783          	lw	a5,-20(s0)
20015f3c:	07e1                	addi	a5,a5,24
20015f3e:	4398                	lw	a4,0(a5)
20015f40:	fd842783          	lw	a5,-40(s0)
20015f44:	fec42683          	lw	a3,-20(s0)
20015f48:	06e1                	addi	a3,a3,24
20015f4a:	8fd9                	or	a5,a5,a4
20015f4c:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:167
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20015f4e:	fec42783          	lw	a5,-20(s0)
20015f52:	02078793          	addi	a5,a5,32
20015f56:	4398                	lw	a4,0(a5)
20015f58:	fd842783          	lw	a5,-40(s0)
20015f5c:	fec42683          	lw	a3,-20(s0)
20015f60:	02068693          	addi	a3,a3,32
20015f64:	8fd9                	or	a5,a5,a4
20015f66:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:169
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20015f68:	fec42783          	lw	a5,-20(s0)
20015f6c:	02878793          	addi	a5,a5,40
20015f70:	4398                	lw	a4,0(a5)
20015f72:	fd842783          	lw	a5,-40(s0)
20015f76:	fec42683          	lw	a3,-20(s0)
20015f7a:	02868693          	addi	a3,a3,40
20015f7e:	8fd9                	or	a5,a5,a4
20015f80:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:171
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20015f82:	fec42783          	lw	a5,-20(s0)
20015f86:	03078793          	addi	a5,a5,48
20015f8a:	4398                	lw	a4,0(a5)
20015f8c:	fd842783          	lw	a5,-40(s0)
20015f90:	fec42683          	lw	a3,-20(s0)
20015f94:	03068693          	addi	a3,a3,48
20015f98:	8fd9                	or	a5,a5,a4
20015f9a:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:172
        break;
20015f9c:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:174
    }
    return 0;
20015f9e:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:175
}
20015fa0:	853e                	mv	a0,a5
20015fa2:	50b2                	lw	ra,44(sp)
20015fa4:	5422                	lw	s0,40(sp)
20015fa6:	6145                	addi	sp,sp,48
20015fa8:	8082                	ret

20015faa <__metal_driver_sifive_gpio0_clear_int>:
__metal_driver_sifive_gpio0_clear_int():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:178

int __metal_driver_sifive_gpio0_clear_int(struct metal_gpio *ggpio, long source,
                                          int intr_type) {
20015faa:	7179                	addi	sp,sp,-48
20015fac:	d606                	sw	ra,44(sp)
20015fae:	d422                	sw	s0,40(sp)
20015fb0:	1800                	addi	s0,sp,48
20015fb2:	fca42e23          	sw	a0,-36(s0)
20015fb6:	fcb42c23          	sw	a1,-40(s0)
20015fba:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:179
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015fbe:	fdc42503          	lw	a0,-36(s0)
20015fc2:	f60ff0ef          	jal	ra,20015722 <__metal_driver_sifive_gpio0_base>
20015fc6:	87aa                	mv	a5,a0
20015fc8:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:181

    switch (intr_type) {
20015fcc:	fd442703          	lw	a4,-44(s0)
20015fd0:	479d                	li	a5,7
20015fd2:	14e7ea63          	bltu	a5,a4,20016126 <__metal_driver_sifive_gpio0_clear_int+0x17c>
20015fd6:	fd442783          	lw	a5,-44(s0)
20015fda:	00279713          	slli	a4,a5,0x2
20015fde:	200117b7          	lui	a5,0x20011
20015fe2:	f5878793          	addi	a5,a5,-168 # 20010f58 <__metal_driver_vtable_sifive_fe310_g000_pll+0x2c>
20015fe6:	97ba                	add	a5,a5,a4
20015fe8:	439c                	lw	a5,0(a5)
20015fea:	8782                	jr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:184
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20015fec:	fec42783          	lw	a5,-20(s0)
20015ff0:	07f1                	addi	a5,a5,28
20015ff2:	4398                	lw	a4,0(a5)
20015ff4:	fd842783          	lw	a5,-40(s0)
20015ff8:	fec42683          	lw	a3,-20(s0)
20015ffc:	06f1                	addi	a3,a3,28
20015ffe:	8fd9                	or	a5,a5,a4
20016000:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:185
        break;
20016002:	a215                	j	20016126 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:188
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20016004:	fec42783          	lw	a5,-20(s0)
20016008:	02478793          	addi	a5,a5,36
2001600c:	4398                	lw	a4,0(a5)
2001600e:	fd842783          	lw	a5,-40(s0)
20016012:	fec42683          	lw	a3,-20(s0)
20016016:	02468693          	addi	a3,a3,36
2001601a:	8fd9                	or	a5,a5,a4
2001601c:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:189
        break;
2001601e:	a221                	j	20016126 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:192
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20016020:	fec42783          	lw	a5,-20(s0)
20016024:	07f1                	addi	a5,a5,28
20016026:	4398                	lw	a4,0(a5)
20016028:	fd842783          	lw	a5,-40(s0)
2001602c:	fec42683          	lw	a3,-20(s0)
20016030:	06f1                	addi	a3,a3,28
20016032:	8fd9                	or	a5,a5,a4
20016034:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:194
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20016036:	fec42783          	lw	a5,-20(s0)
2001603a:	02478793          	addi	a5,a5,36
2001603e:	4398                	lw	a4,0(a5)
20016040:	fd842783          	lw	a5,-40(s0)
20016044:	fec42683          	lw	a3,-20(s0)
20016048:	02468693          	addi	a3,a3,36
2001604c:	8fd9                	or	a5,a5,a4
2001604e:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:195
        break;
20016050:	a8d9                	j	20016126 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:198
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20016052:	fec42783          	lw	a5,-20(s0)
20016056:	02c78793          	addi	a5,a5,44
2001605a:	4398                	lw	a4,0(a5)
2001605c:	fd842783          	lw	a5,-40(s0)
20016060:	fec42683          	lw	a3,-20(s0)
20016064:	02c68693          	addi	a3,a3,44
20016068:	8fd9                	or	a5,a5,a4
2001606a:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:199
        break;
2001606c:	a86d                	j	20016126 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:202
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
2001606e:	fec42783          	lw	a5,-20(s0)
20016072:	03478793          	addi	a5,a5,52
20016076:	4398                	lw	a4,0(a5)
20016078:	fd842783          	lw	a5,-40(s0)
2001607c:	fec42683          	lw	a3,-20(s0)
20016080:	03468693          	addi	a3,a3,52
20016084:	8fd9                	or	a5,a5,a4
20016086:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:203
        break;
20016088:	a879                	j	20016126 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:206
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
2001608a:	fec42783          	lw	a5,-20(s0)
2001608e:	02c78793          	addi	a5,a5,44
20016092:	4398                	lw	a4,0(a5)
20016094:	fd842783          	lw	a5,-40(s0)
20016098:	fec42683          	lw	a3,-20(s0)
2001609c:	02c68693          	addi	a3,a3,44
200160a0:	8fd9                	or	a5,a5,a4
200160a2:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:208
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
200160a4:	fec42783          	lw	a5,-20(s0)
200160a8:	03478793          	addi	a5,a5,52
200160ac:	4398                	lw	a4,0(a5)
200160ae:	fd842783          	lw	a5,-40(s0)
200160b2:	fec42683          	lw	a3,-20(s0)
200160b6:	03468693          	addi	a3,a3,52
200160ba:	8fd9                	or	a5,a5,a4
200160bc:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:209
        break;
200160be:	a0a5                	j	20016126 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:212
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
200160c0:	fec42783          	lw	a5,-20(s0)
200160c4:	07f1                	addi	a5,a5,28
200160c6:	4398                	lw	a4,0(a5)
200160c8:	fd842783          	lw	a5,-40(s0)
200160cc:	fec42683          	lw	a3,-20(s0)
200160d0:	06f1                	addi	a3,a3,28
200160d2:	8fd9                	or	a5,a5,a4
200160d4:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:214
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
200160d6:	fec42783          	lw	a5,-20(s0)
200160da:	02478793          	addi	a5,a5,36
200160de:	4398                	lw	a4,0(a5)
200160e0:	fd842783          	lw	a5,-40(s0)
200160e4:	fec42683          	lw	a3,-20(s0)
200160e8:	02468693          	addi	a3,a3,36
200160ec:	8fd9                	or	a5,a5,a4
200160ee:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:216
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
200160f0:	fec42783          	lw	a5,-20(s0)
200160f4:	02c78793          	addi	a5,a5,44
200160f8:	4398                	lw	a4,0(a5)
200160fa:	fd842783          	lw	a5,-40(s0)
200160fe:	fec42683          	lw	a3,-20(s0)
20016102:	02c68693          	addi	a3,a3,44
20016106:	8fd9                	or	a5,a5,a4
20016108:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:218
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
2001610a:	fec42783          	lw	a5,-20(s0)
2001610e:	03478793          	addi	a5,a5,52
20016112:	4398                	lw	a4,0(a5)
20016114:	fd842783          	lw	a5,-40(s0)
20016118:	fec42683          	lw	a3,-20(s0)
2001611c:	03468693          	addi	a3,a3,52
20016120:	8fd9                	or	a5,a5,a4
20016122:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:219
        break;
20016124:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:221
    }
    return 0;
20016126:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:222
}
20016128:	853e                	mv	a0,a5
2001612a:	50b2                	lw	ra,44(sp)
2001612c:	5422                	lw	s0,40(sp)
2001612e:	6145                	addi	sp,sp,48
20016130:	8082                	ret

20016132 <__metal_driver_gpio_interrupt_controller>:
__metal_driver_gpio_interrupt_controller():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:225

struct metal_interrupt *
__metal_driver_gpio_interrupt_controller(struct metal_gpio *gpio) {
20016132:	1101                	addi	sp,sp,-32
20016134:	ce06                	sw	ra,28(sp)
20016136:	cc22                	sw	s0,24(sp)
20016138:	1000                	addi	s0,sp,32
2001613a:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:226
    return __metal_driver_sifive_gpio0_interrupt_parent(gpio);
2001613e:	fec42503          	lw	a0,-20(s0)
20016142:	e06ff0ef          	jal	ra,20015748 <__metal_driver_sifive_gpio0_interrupt_parent>
20016146:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:227
}
20016148:	853e                	mv	a0,a5
2001614a:	40f2                	lw	ra,28(sp)
2001614c:	4462                	lw	s0,24(sp)
2001614e:	6105                	addi	sp,sp,32
20016150:	8082                	ret

20016152 <__metal_driver_gpio_get_interrupt_id>:
__metal_driver_gpio_get_interrupt_id():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:229

int __metal_driver_gpio_get_interrupt_id(struct metal_gpio *gpio, int pin) {
20016152:	7179                	addi	sp,sp,-48
20016154:	d606                	sw	ra,44(sp)
20016156:	d422                	sw	s0,40(sp)
20016158:	1800                	addi	s0,sp,48
2001615a:	fca42e23          	sw	a0,-36(s0)
2001615e:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:231
    int irq;
    irq = __metal_driver_sifive_gpio0_interrupt_lines(gpio, pin);
20016162:	fd842583          	lw	a1,-40(s0)
20016166:	fdc42503          	lw	a0,-36(s0)
2001616a:	e08ff0ef          	jal	ra,20015772 <__metal_driver_sifive_gpio0_interrupt_lines>
2001616e:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:232
    return irq;
20016172:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:233
}
20016176:	853e                	mv	a0,a5
20016178:	50b2                	lw	ra,44(sp)
2001617a:	5422                	lw	s0,40(sp)
2001617c:	6145                	addi	sp,sp,48
2001617e:	8082                	ret

20016180 <__metal_driver_sifive_i2c0_control_base>:
__metal_driver_sifive_i2c0_control_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:633
{
20016180:	1101                	addi	sp,sp,-32
20016182:	ce22                	sw	s0,28(sp)
20016184:	1000                	addi	s0,sp,32
20016186:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:634
	if ((uintptr_t)i2c == (uintptr_t)&__metal_dt_i2c_10016000) {
2001618a:	fec42703          	lw	a4,-20(s0)
2001618e:	800017b7          	lui	a5,0x80001
20016192:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xfffff278>
20016196:	00f71563          	bne	a4,a5,200161a0 <__metal_driver_sifive_i2c0_control_base+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:635
		return METAL_SIFIVE_I2C0_10016000_BASE_ADDRESS;
2001619a:	100167b7          	lui	a5,0x10016
2001619e:	a011                	j	200161a2 <__metal_driver_sifive_i2c0_control_base+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:638
		return 0;
200161a0:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:640
}
200161a2:	853e                	mv	a0,a5
200161a4:	4472                	lw	s0,28(sp)
200161a6:	6105                	addi	sp,sp,32
200161a8:	8082                	ret

200161aa <__metal_driver_sifive_i2c0_clock>:
__metal_driver_sifive_i2c0_clock():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:653
{
200161aa:	1101                	addi	sp,sp,-32
200161ac:	ce22                	sw	s0,28(sp)
200161ae:	1000                	addi	s0,sp,32
200161b0:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:654
	if ((uintptr_t)i2c == (uintptr_t)&__metal_dt_i2c_10016000) {
200161b4:	fec42703          	lw	a4,-20(s0)
200161b8:	800017b7          	lui	a5,0x80001
200161bc:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xfffff278>
200161c0:	00f71763          	bne	a4,a5,200161ce <__metal_driver_sifive_i2c0_clock+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:655
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
200161c4:	800017b7          	lui	a5,0x80001
200161c8:	ab478793          	addi	a5,a5,-1356 # 80000ab4 <metal_segment_heap_target_end+0xfffff2f4>
200161cc:	a011                	j	200161d0 <__metal_driver_sifive_i2c0_clock+0x26>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:658
		return NULL;
200161ce:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:660
}
200161d0:	853e                	mv	a0,a5
200161d2:	4472                	lw	s0,28(sp)
200161d4:	6105                	addi	sp,sp,32
200161d6:	8082                	ret

200161d8 <__metal_driver_sifive_i2c0_pinmux>:
__metal_driver_sifive_i2c0_pinmux():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:663
{
200161d8:	1101                	addi	sp,sp,-32
200161da:	ce22                	sw	s0,28(sp)
200161dc:	1000                	addi	s0,sp,32
200161de:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:664
	if ((uintptr_t)i2c == (uintptr_t)&__metal_dt_i2c_10016000) {
200161e2:	fec42703          	lw	a4,-20(s0)
200161e6:	800017b7          	lui	a5,0x80001
200161ea:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xfffff278>
200161ee:	00f71563          	bne	a4,a5,200161f8 <__metal_driver_sifive_i2c0_pinmux+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:665
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
200161f2:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
200161f6:	a011                	j	200161fa <__metal_driver_sifive_i2c0_pinmux+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:668
		return NULL;
200161f8:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:670
}
200161fa:	853e                	mv	a0,a5
200161fc:	4472                	lw	s0,28(sp)
200161fe:	6105                	addi	sp,sp,32
20016200:	8082                	ret

20016202 <__metal_driver_sifive_i2c0_pinmux_output_selector>:
__metal_driver_sifive_i2c0_pinmux_output_selector():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:673
{
20016202:	1101                	addi	sp,sp,-32
20016204:	ce22                	sw	s0,28(sp)
20016206:	1000                	addi	s0,sp,32
20016208:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:674
	if ((uintptr_t)i2c == (uintptr_t)&__metal_dt_i2c_10016000) {
2001620c:	fec42703          	lw	a4,-20(s0)
20016210:	800017b7          	lui	a5,0x80001
20016214:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xfffff278>
20016218:	00f71463          	bne	a4,a5,20016220 <__metal_driver_sifive_i2c0_pinmux_output_selector+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:675
		return 0;
2001621c:	4781                	li	a5,0
2001621e:	a011                	j	20016222 <__metal_driver_sifive_i2c0_pinmux_output_selector+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:678
		return 0;
20016220:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:680
}
20016222:	853e                	mv	a0,a5
20016224:	4472                	lw	s0,28(sp)
20016226:	6105                	addi	sp,sp,32
20016228:	8082                	ret

2001622a <__metal_driver_sifive_i2c0_pinmux_source_selector>:
__metal_driver_sifive_i2c0_pinmux_source_selector():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:683
{
2001622a:	1101                	addi	sp,sp,-32
2001622c:	ce22                	sw	s0,28(sp)
2001622e:	1000                	addi	s0,sp,32
20016230:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:684
	if ((uintptr_t)i2c == (uintptr_t)&__metal_dt_i2c_10016000) {
20016234:	fec42703          	lw	a4,-20(s0)
20016238:	800017b7          	lui	a5,0x80001
2001623c:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xfffff278>
20016240:	00f71463          	bne	a4,a5,20016248 <__metal_driver_sifive_i2c0_pinmux_source_selector+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:685
		return 12288;
20016244:	678d                	lui	a5,0x3
20016246:	a011                	j	2001624a <__metal_driver_sifive_i2c0_pinmux_source_selector+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:688
		return 0;
20016248:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:690
}
2001624a:	853e                	mv	a0,a5
2001624c:	4472                	lw	s0,28(sp)
2001624e:	6105                	addi	sp,sp,32
20016250:	8082                	ret

20016252 <pre_rate_change_callback>:
pre_rate_change_callback():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:77
    ((clock_rate / (baud_rate * 5)) - 1)
#define METAL_I2C_INIT_OK 1
#define METAL_I2C_RET_OK 0
#define METAL_I2C_RET_ERR -1

static void pre_rate_change_callback(void *priv) {
20016252:	7179                	addi	sp,sp,-48
20016254:	d606                	sw	ra,44(sp)
20016256:	d422                	sw	s0,40(sp)
20016258:	1800                	addi	s0,sp,48
2001625a:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:79
    unsigned long base =
        __metal_driver_sifive_i2c0_control_base((struct metal_i2c *)priv);
2001625e:	fdc42503          	lw	a0,-36(s0)
20016262:	3f39                	jal	20016180 <__metal_driver_sifive_i2c0_control_base>
20016264:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:81
    /* Check for any pending transfers */
    while (METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) & METAL_I2C_STATUS_TIP)
20016268:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:81 (discriminator 1)
2001626a:	fec42783          	lw	a5,-20(s0)
2001626e:	07c1                	addi	a5,a5,16
20016270:	0007c783          	lbu	a5,0(a5) # 3000 <__heap_size+0x2800>
20016274:	0ff7f793          	andi	a5,a5,255
20016278:	8b89                	andi	a5,a5,2
2001627a:	fbe5                	bnez	a5,2001626a <pre_rate_change_callback+0x18>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:83
        ;
}
2001627c:	0001                	nop
2001627e:	50b2                	lw	ra,44(sp)
20016280:	5422                	lw	s0,40(sp)
20016282:	6145                	addi	sp,sp,48
20016284:	8082                	ret

20016286 <post_rate_change_callback>:
post_rate_change_callback():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:85

static void post_rate_change_callback(void *priv) {
20016286:	7179                	addi	sp,sp,-48
20016288:	d606                	sw	ra,44(sp)
2001628a:	d422                	sw	s0,40(sp)
2001628c:	1800                	addi	s0,sp,48
2001628e:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:86
    struct __metal_driver_sifive_i2c0 *i2c = priv;
20016292:	fdc42783          	lw	a5,-36(s0)
20016296:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:88
    /* Set baud rate after clock rate change */
    metal_i2c_set_baud_rate(&i2c->i2c, i2c->baud_rate);
2001629a:	fec42703          	lw	a4,-20(s0)
2001629e:	fec42783          	lw	a5,-20(s0)
200162a2:	479c                	lw	a5,8(a5)
200162a4:	85be                	mv	a1,a5
200162a6:	853a                	mv	a0,a4
200162a8:	29e010ef          	jal	ra,20017546 <metal_i2c_set_baud_rate>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:89
}
200162ac:	0001                	nop
200162ae:	50b2                	lw	ra,44(sp)
200162b0:	5422                	lw	s0,40(sp)
200162b2:	6145                	addi	sp,sp,48
200162b4:	8082                	ret

200162b6 <__metal_driver_sifive_i2c0_init>:
__metal_driver_sifive_i2c0_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:93

static void __metal_driver_sifive_i2c0_init(struct metal_i2c *gi2c,
                                            unsigned int baud_rate,
                                            metal_i2c_mode_t mode) {
200162b6:	7179                	addi	sp,sp,-48
200162b8:	d606                	sw	ra,44(sp)
200162ba:	d422                	sw	s0,40(sp)
200162bc:	1800                	addi	s0,sp,48
200162be:	fca42e23          	sw	a0,-36(s0)
200162c2:	fcb42c23          	sw	a1,-40(s0)
200162c6:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:95
    struct __metal_driver_sifive_gpio0 *pinmux =
        __metal_driver_sifive_i2c0_pinmux(gi2c);
200162ca:	fdc42503          	lw	a0,-36(s0)
200162ce:	3729                	jal	200161d8 <__metal_driver_sifive_i2c0_pinmux>
200162d0:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:96
    struct __metal_driver_sifive_i2c0 *i2c = (void *)gi2c;
200162d4:	fdc42783          	lw	a5,-36(s0)
200162d8:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:98

    if ((pinmux != NULL) && (gi2c != NULL)) {
200162dc:	fec42783          	lw	a5,-20(s0)
200162e0:	cfa9                	beqz	a5,2001633a <__metal_driver_sifive_i2c0_init+0x84>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:98 (discriminator 1)
200162e2:	fdc42783          	lw	a5,-36(s0)
200162e6:	cbb1                	beqz	a5,2001633a <__metal_driver_sifive_i2c0_init+0x84>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:101
        /* configure I2C I/O pins */
        long pinmux_output_selector =
            __metal_driver_sifive_i2c0_pinmux_output_selector(gi2c);
200162e8:	fdc42503          	lw	a0,-36(s0)
200162ec:	3f19                	jal	20016202 <__metal_driver_sifive_i2c0_pinmux_output_selector>
200162ee:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:100
        long pinmux_output_selector =
200162f0:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:103
        long pinmux_source_selector =
            __metal_driver_sifive_i2c0_pinmux_source_selector(gi2c);
200162f4:	fdc42503          	lw	a0,-36(s0)
200162f8:	3f0d                	jal	2001622a <__metal_driver_sifive_i2c0_pinmux_source_selector>
200162fa:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:102
        long pinmux_source_selector =
200162fc:	fef42023          	sw	a5,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:104
        pinmux->gpio.vtable->enable_io((struct metal_gpio *)pinmux,
20016300:	fec42783          	lw	a5,-20(s0)
20016304:	439c                	lw	a5,0(a5)
20016306:	53dc                	lw	a5,36(a5)
20016308:	fe042603          	lw	a2,-32(s0)
2001630c:	fe442583          	lw	a1,-28(s0)
20016310:	fec42503          	lw	a0,-20(s0)
20016314:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:109
                                       pinmux_output_selector,
                                       pinmux_source_selector);

        /* 1: Master 0: Slave */
        if (mode == METAL_I2C_MASTER) {
20016316:	fd442703          	lw	a4,-44(s0)
2001631a:	4785                	li	a5,1
2001631c:	00f71f63          	bne	a4,a5,2001633a <__metal_driver_sifive_i2c0_init+0x84>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:111
            /* Set requested baud rate */
            if (metal_i2c_set_baud_rate(gi2c, baud_rate) == METAL_I2C_RET_OK) {
20016320:	fd842783          	lw	a5,-40(s0)
20016324:	85be                	mv	a1,a5
20016326:	fdc42503          	lw	a0,-36(s0)
2001632a:	21c010ef          	jal	ra,20017546 <metal_i2c_set_baud_rate>
2001632e:	87aa                	mv	a5,a0
20016330:	e789                	bnez	a5,2001633a <__metal_driver_sifive_i2c0_init+0x84>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:112
                i2c->init_done = METAL_I2C_INIT_OK;
20016332:	fe842783          	lw	a5,-24(s0)
20016336:	4705                	li	a4,1
20016338:	c3d8                	sw	a4,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:118
            }
        } else {
            /* Nothing to do. slave mode not supported */
        }
    }
}
2001633a:	0001                	nop
2001633c:	50b2                	lw	ra,44(sp)
2001633e:	5422                	lw	s0,40(sp)
20016340:	6145                	addi	sp,sp,48
20016342:	8082                	ret

20016344 <__metal_driver_sifive_i2c0_get_baud_rate>:
__metal_driver_sifive_i2c0_get_baud_rate():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:120

static int __metal_driver_sifive_i2c0_get_baud_rate(struct metal_i2c *gi2c) {
20016344:	7179                	addi	sp,sp,-48
20016346:	d622                	sw	s0,44(sp)
20016348:	1800                	addi	s0,sp,48
2001634a:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:121
    struct __metal_driver_sifive_i2c0 *i2c = (void *)gi2c;
2001634e:	fdc42783          	lw	a5,-36(s0)
20016352:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:122
    return i2c->baud_rate;
20016356:	fec42783          	lw	a5,-20(s0)
2001635a:	479c                	lw	a5,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:123
}
2001635c:	853e                	mv	a0,a5
2001635e:	5432                	lw	s0,44(sp)
20016360:	6145                	addi	sp,sp,48
20016362:	8082                	ret

20016364 <__metal_driver_sifive_i2c0_set_baud_rate>:
__metal_driver_sifive_i2c0_set_baud_rate():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:126

static int __metal_driver_sifive_i2c0_set_baud_rate(struct metal_i2c *gi2c,
                                                    unsigned int baud_rate) {
20016364:	7139                	addi	sp,sp,-64
20016366:	de06                	sw	ra,60(sp)
20016368:	dc22                	sw	s0,56(sp)
2001636a:	0080                	addi	s0,sp,64
2001636c:	fca42623          	sw	a0,-52(s0)
20016370:	fcb42423          	sw	a1,-56(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:127
    struct metal_clock *clock = __metal_driver_sifive_i2c0_clock(gi2c);
20016374:	fcc42503          	lw	a0,-52(s0)
20016378:	e33ff0ef          	jal	ra,200161aa <__metal_driver_sifive_i2c0_clock>
2001637c:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:128
    struct __metal_driver_sifive_i2c0 *i2c = (void *)gi2c;
20016380:	fcc42783          	lw	a5,-52(s0)
20016384:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:129
    unsigned long base = __metal_driver_sifive_i2c0_control_base(gi2c);
20016388:	fcc42503          	lw	a0,-52(s0)
2001638c:	df5ff0ef          	jal	ra,20016180 <__metal_driver_sifive_i2c0_control_base>
20016390:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:130
    int ret = METAL_I2C_RET_ERR;
20016394:	57fd                	li	a5,-1
20016396:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:132

    if ((clock != NULL) && (gi2c != NULL)) {
2001639a:	fe842783          	lw	a5,-24(s0)
2001639e:	10078763          	beqz	a5,200164ac <__metal_driver_sifive_i2c0_set_baud_rate+0x148>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:132 (discriminator 1)
200163a2:	fcc42783          	lw	a5,-52(s0)
200163a6:	10078363          	beqz	a5,200164ac <__metal_driver_sifive_i2c0_set_baud_rate+0x148>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:133
        long clock_rate = clock->vtable->get_rate_hz(clock);
200163aa:	fe842783          	lw	a5,-24(s0)
200163ae:	439c                	lw	a5,0(a5)
200163b0:	439c                	lw	a5,0(a5)
200163b2:	fe842503          	lw	a0,-24(s0)
200163b6:	9782                	jalr	a5
200163b8:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:135

        i2c->pre_rate_change_callback.callback = &pre_rate_change_callback;
200163bc:	fe442783          	lw	a5,-28(s0)
200163c0:	20016737          	lui	a4,0x20016
200163c4:	25270713          	addi	a4,a4,594 # 20016252 <pre_rate_change_callback>
200163c8:	c7d8                	sw	a4,12(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:136
        i2c->pre_rate_change_callback.priv = i2c;
200163ca:	fe442783          	lw	a5,-28(s0)
200163ce:	fe442703          	lw	a4,-28(s0)
200163d2:	cb98                	sw	a4,16(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:137
        metal_clock_register_pre_rate_change_callback(
200163d4:	fe442783          	lw	a5,-28(s0)
200163d8:	07b1                	addi	a5,a5,12
200163da:	85be                	mv	a1,a5
200163dc:	fe842503          	lw	a0,-24(s0)
200163e0:	783000ef          	jal	ra,20017362 <metal_clock_register_pre_rate_change_callback>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:140
            clock, &(i2c->pre_rate_change_callback));

        i2c->post_rate_change_callback.callback = &post_rate_change_callback;
200163e4:	fe442783          	lw	a5,-28(s0)
200163e8:	20016737          	lui	a4,0x20016
200163ec:	28670713          	addi	a4,a4,646 # 20016286 <post_rate_change_callback>
200163f0:	cf98                	sw	a4,24(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:141
        i2c->post_rate_change_callback.priv = i2c;
200163f2:	fe442783          	lw	a5,-28(s0)
200163f6:	fe442703          	lw	a4,-28(s0)
200163fa:	cfd8                	sw	a4,28(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:142
        metal_clock_register_post_rate_change_callback(
200163fc:	fe442783          	lw	a5,-28(s0)
20016400:	07e1                	addi	a5,a5,24
20016402:	85be                	mv	a1,a5
20016404:	fe842503          	lw	a0,-24(s0)
20016408:	78b000ef          	jal	ra,20017392 <metal_clock_register_post_rate_change_callback>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:146
            clock, &(i2c->post_rate_change_callback));

        /* Calculate prescaler value */
        long prescaler = METAL_SIFIVE_I2C_GET_PRESCALER(baud_rate);
2001640c:	fdc42683          	lw	a3,-36(s0)
20016410:	fc842703          	lw	a4,-56(s0)
20016414:	87ba                	mv	a5,a4
20016416:	078a                	slli	a5,a5,0x2
20016418:	97ba                	add	a5,a5,a4
2001641a:	02f6d7b3          	divu	a5,a3,a5
2001641e:	17fd                	addi	a5,a5,-1
20016420:	fcf42c23          	sw	a5,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:148

        if ((prescaler > METAL_I2C_PRESCALE_MAX) || (prescaler < 0)) {
20016424:	fd842703          	lw	a4,-40(s0)
20016428:	67c1                	lui	a5,0x10
2001642a:	08f75163          	bge	a4,a5,200164ac <__metal_driver_sifive_i2c0_set_baud_rate+0x148>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:148 (discriminator 1)
2001642e:	fd842783          	lw	a5,-40(s0)
20016432:	0607cd63          	bltz	a5,200164ac <__metal_driver_sifive_i2c0_set_baud_rate+0x148>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:153
            /* Out of range value, return error */
            METAL_I2C_LOG("I2C Set baud failed.\n");
        } else {
            /* Set pre-scaler value */
            METAL_I2C_REGB(METAL_SIFIVE_I2C0_CONTROL) &= ~METAL_I2C_CONTROL_EN;
20016436:	fe042783          	lw	a5,-32(s0)
2001643a:	07a1                	addi	a5,a5,8
2001643c:	0007c783          	lbu	a5,0(a5) # 10000 <__heap_size+0xf800>
20016440:	0ff7f793          	andi	a5,a5,255
20016444:	fe042703          	lw	a4,-32(s0)
20016448:	0721                	addi	a4,a4,8
2001644a:	07f7f793          	andi	a5,a5,127
2001644e:	0ff7f793          	andi	a5,a5,255
20016452:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:154
            METAL_I2C_REGB(METAL_SIFIVE_I2C0_PRESCALE_LOW) = prescaler & 0xFF;
20016456:	fe042783          	lw	a5,-32(s0)
2001645a:	fd842703          	lw	a4,-40(s0)
2001645e:	0ff77713          	andi	a4,a4,255
20016462:	00e78023          	sb	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:156
            METAL_I2C_REGB(METAL_SIFIVE_I2C0_PRESCALE_HIGH) =
                (prescaler >> 8) & 0xFF;
20016466:	fd842783          	lw	a5,-40(s0)
2001646a:	4087d693          	srai	a3,a5,0x8
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:155
            METAL_I2C_REGB(METAL_SIFIVE_I2C0_PRESCALE_HIGH) =
2001646e:	fe042783          	lw	a5,-32(s0)
20016472:	0791                	addi	a5,a5,4
20016474:	873e                	mv	a4,a5
20016476:	0ff6f793          	andi	a5,a3,255
2001647a:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:157
            METAL_I2C_REGB(METAL_SIFIVE_I2C0_CONTROL) |= METAL_I2C_CONTROL_EN;
2001647e:	fe042783          	lw	a5,-32(s0)
20016482:	07a1                	addi	a5,a5,8
20016484:	0007c783          	lbu	a5,0(a5)
20016488:	0ff7f793          	andi	a5,a5,255
2001648c:	fe042703          	lw	a4,-32(s0)
20016490:	0721                	addi	a4,a4,8
20016492:	f807e793          	ori	a5,a5,-128
20016496:	0ff7f793          	andi	a5,a5,255
2001649a:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:159

            i2c->baud_rate = baud_rate;
2001649e:	fe442783          	lw	a5,-28(s0)
200164a2:	fc842703          	lw	a4,-56(s0)
200164a6:	c798                	sw	a4,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:160
            ret = METAL_I2C_RET_OK;
200164a8:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:166
        }
    } else {
        METAL_I2C_LOG("I2C Set baud failed.\n");
    }

    return ret;
200164ac:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:167
}
200164b0:	853e                	mv	a0,a5
200164b2:	50f2                	lw	ra,60(sp)
200164b4:	5462                	lw	s0,56(sp)
200164b6:	6121                	addi	sp,sp,64
200164b8:	8082                	ret

200164ba <__metal_driver_sifive_i2c0_write_addr>:
__metal_driver_sifive_i2c0_write_addr():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:171

static int __metal_driver_sifive_i2c0_write_addr(unsigned long base,
                                                 unsigned int addr,
                                                 unsigned char rw_flag) {
200164ba:	7179                	addi	sp,sp,-48
200164bc:	d606                	sw	ra,44(sp)
200164be:	d422                	sw	s0,40(sp)
200164c0:	1800                	addi	s0,sp,48
200164c2:	fca42e23          	sw	a0,-36(s0)
200164c6:	fcb42c23          	sw	a1,-40(s0)
200164ca:	87b2                	mv	a5,a2
200164cc:	fcf40ba3          	sb	a5,-41(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:173
    time_t timeout;
    int ret = METAL_I2C_RET_OK;
200164d0:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:175
    /* Reset timeout */
    METAL_I2C_TIMEOUT_RESET(timeout);
200164d4:	1c4010ef          	jal	ra,20017698 <metal_time>
200164d8:	86aa                	mv	a3,a0
200164da:	872e                	mv	a4,a1
200164dc:	4585                	li	a1,1
200164de:	4601                	li	a2,0
200164e0:	00b687b3          	add	a5,a3,a1
200164e4:	853e                	mv	a0,a5
200164e6:	00d53533          	sltu	a0,a0,a3
200164ea:	00c70833          	add	a6,a4,a2
200164ee:	01050733          	add	a4,a0,a6
200164f2:	883a                	mv	a6,a4
200164f4:	fef42023          	sw	a5,-32(s0)
200164f8:	ff042223          	sw	a6,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:178

    /* Check if any transfer is in progress */
    METAL_I2C_REG_CHECK(
200164fc:	a035                	j	20016528 <__metal_driver_sifive_i2c0_write_addr+0x6e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:178 (discriminator 3)
200164fe:	19a010ef          	jal	ra,20017698 <metal_time>
20016502:	87aa                	mv	a5,a0
20016504:	882e                	mv	a6,a1
20016506:	fe442703          	lw	a4,-28(s0)
2001650a:	86c2                	mv	a3,a6
2001650c:	00d74c63          	blt	a4,a3,20016524 <__metal_driver_sifive_i2c0_write_addr+0x6a>
20016510:	fe442703          	lw	a4,-28(s0)
20016514:	86c2                	mv	a3,a6
20016516:	00d71963          	bne	a4,a3,20016528 <__metal_driver_sifive_i2c0_write_addr+0x6e>
2001651a:	fe042703          	lw	a4,-32(s0)
2001651e:	00f76363          	bltu	a4,a5,20016524 <__metal_driver_sifive_i2c0_write_addr+0x6a>
20016522:	a019                	j	20016528 <__metal_driver_sifive_i2c0_write_addr+0x6e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:178 (discriminator 1)
20016524:	57fd                	li	a5,-1
20016526:	a8c9                	j	200165f8 <__metal_driver_sifive_i2c0_write_addr+0x13e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:178 (discriminator 2)
20016528:	fdc42783          	lw	a5,-36(s0)
2001652c:	07c1                	addi	a5,a5,16
2001652e:	0007c783          	lbu	a5,0(a5)
20016532:	0ff7f793          	andi	a5,a5,255
20016536:	8b89                	andi	a5,a5,2
20016538:	f3f9                	bnez	a5,200164fe <__metal_driver_sifive_i2c0_write_addr+0x44>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:184
        (METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) & METAL_I2C_STATUS_TIP),
        timeout);

    /* Set transmit register to given address with read/write flag */
    METAL_I2C_REGB(METAL_SIFIVE_I2C0_TRANSMIT) =
        METAL_SIFIVE_I2C_INSERT_RW_BIT(addr, rw_flag);
2001653a:	fd842783          	lw	a5,-40(s0)
2001653e:	0ff7f793          	andi	a5,a5,255
20016542:	0786                	slli	a5,a5,0x1
20016544:	0ff7f713          	andi	a4,a5,255
20016548:	fd744783          	lbu	a5,-41(s0)
2001654c:	8b85                	andi	a5,a5,1
2001654e:	0ff7f793          	andi	a5,a5,255
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:183
    METAL_I2C_REGB(METAL_SIFIVE_I2C0_TRANSMIT) =
20016552:	fdc42683          	lw	a3,-36(s0)
20016556:	06b1                	addi	a3,a3,12
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:184
        METAL_SIFIVE_I2C_INSERT_RW_BIT(addr, rw_flag);
20016558:	8fd9                	or	a5,a5,a4
2001655a:	0ff7f793          	andi	a5,a5,255
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:183
    METAL_I2C_REGB(METAL_SIFIVE_I2C0_TRANSMIT) =
2001655e:	00f68023          	sb	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:187

    /* Set start flag to trigger the address transfer */
    METAL_I2C_REGB(METAL_SIFIVE_I2C0_COMMAND) =
20016562:	fdc42783          	lw	a5,-36(s0)
20016566:	07c1                	addi	a5,a5,16
20016568:	873e                	mv	a4,a5
2001656a:	f9000793          	li	a5,-112
2001656e:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:190
        METAL_I2C_CMD_WRITE | METAL_I2C_CMD_START;
    /* Reset timeout */
    METAL_I2C_TIMEOUT_RESET(timeout);
20016572:	126010ef          	jal	ra,20017698 <metal_time>
20016576:	86aa                	mv	a3,a0
20016578:	872e                	mv	a4,a1
2001657a:	4585                	li	a1,1
2001657c:	4601                	li	a2,0
2001657e:	00b687b3          	add	a5,a3,a1
20016582:	853e                	mv	a0,a5
20016584:	00d53533          	sltu	a0,a0,a3
20016588:	00c70833          	add	a6,a4,a2
2001658c:	01050733          	add	a4,a0,a6
20016590:	883a                	mv	a6,a4
20016592:	fef42023          	sw	a5,-32(s0)
20016596:	ff042223          	sw	a6,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:193

    /* Check for transmit completion */
    METAL_I2C_REG_CHECK(
2001659a:	a035                	j	200165c6 <__metal_driver_sifive_i2c0_write_addr+0x10c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:193 (discriminator 3)
2001659c:	0fc010ef          	jal	ra,20017698 <metal_time>
200165a0:	87aa                	mv	a5,a0
200165a2:	882e                	mv	a6,a1
200165a4:	fe442703          	lw	a4,-28(s0)
200165a8:	86c2                	mv	a3,a6
200165aa:	00d74c63          	blt	a4,a3,200165c2 <__metal_driver_sifive_i2c0_write_addr+0x108>
200165ae:	fe442703          	lw	a4,-28(s0)
200165b2:	86c2                	mv	a3,a6
200165b4:	00d71963          	bne	a4,a3,200165c6 <__metal_driver_sifive_i2c0_write_addr+0x10c>
200165b8:	fe042703          	lw	a4,-32(s0)
200165bc:	00f76363          	bltu	a4,a5,200165c2 <__metal_driver_sifive_i2c0_write_addr+0x108>
200165c0:	a019                	j	200165c6 <__metal_driver_sifive_i2c0_write_addr+0x10c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:193 (discriminator 1)
200165c2:	57fd                	li	a5,-1
200165c4:	a815                	j	200165f8 <__metal_driver_sifive_i2c0_write_addr+0x13e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:193 (discriminator 2)
200165c6:	fdc42783          	lw	a5,-36(s0)
200165ca:	07c1                	addi	a5,a5,16
200165cc:	0007c783          	lbu	a5,0(a5)
200165d0:	0ff7f793          	andi	a5,a5,255
200165d4:	8b89                	andi	a5,a5,2
200165d6:	f3f9                	bnez	a5,2001659c <__metal_driver_sifive_i2c0_write_addr+0xe2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:198
        (METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) & METAL_I2C_STATUS_TIP),
        timeout);

    /* Check for ACK from slave */
    if ((METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) & METAL_I2C_STATUS_RXACK)) {
200165d8:	fdc42783          	lw	a5,-36(s0)
200165dc:	07c1                	addi	a5,a5,16
200165de:	0007c783          	lbu	a5,0(a5)
200165e2:	0ff7f793          	andi	a5,a5,255
200165e6:	07e2                	slli	a5,a5,0x18
200165e8:	87e1                	srai	a5,a5,0x18
200165ea:	0007d563          	bgez	a5,200165f4 <__metal_driver_sifive_i2c0_write_addr+0x13a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:201
        /* No ACK, return error */
        METAL_I2C_LOG("I2C RX ACK failed.\n");
        ret = METAL_I2C_RET_ERR;
200165ee:	57fd                	li	a5,-1
200165f0:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:204
    }

    return ret;
200165f4:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:205
}
200165f8:	853e                	mv	a0,a5
200165fa:	50b2                	lw	ra,44(sp)
200165fc:	5422                	lw	s0,40(sp)
200165fe:	6145                	addi	sp,sp,48
20016600:	8082                	ret

20016602 <__metal_driver_sifive_i2c0_write>:
__metal_driver_sifive_i2c0_write():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:210

static int __metal_driver_sifive_i2c0_write(struct metal_i2c *i2c,
                                            unsigned int addr, unsigned int len,
                                            unsigned char buf[],
                                            metal_i2c_stop_bit_t stop_bit) {
20016602:	715d                	addi	sp,sp,-80
20016604:	c686                	sw	ra,76(sp)
20016606:	c4a2                	sw	s0,72(sp)
20016608:	0880                	addi	s0,sp,80
2001660a:	fca42623          	sw	a0,-52(s0)
2001660e:	fcb42423          	sw	a1,-56(s0)
20016612:	fcc42223          	sw	a2,-60(s0)
20016616:	fcd42023          	sw	a3,-64(s0)
2001661a:	fae42e23          	sw	a4,-68(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:214
    __metal_io_u8 command;
    time_t timeout;
    int ret;
    unsigned long base = __metal_driver_sifive_i2c0_control_base(i2c);
2001661e:	fcc42503          	lw	a0,-52(s0)
20016622:	b5fff0ef          	jal	ra,20016180 <__metal_driver_sifive_i2c0_control_base>
20016626:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:217
    unsigned int i;

    if ((i2c != NULL) &&
2001662a:	fcc42783          	lw	a5,-52(s0)
2001662e:	12078363          	beqz	a5,20016754 <__metal_driver_sifive_i2c0_write+0x152>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:218 (discriminator 1)
        ((struct __metal_driver_sifive_i2c0 *)i2c)->init_done) {
20016632:	fcc42783          	lw	a5,-52(s0)
20016636:	43dc                	lw	a5,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:217 (discriminator 1)
    if ((i2c != NULL) &&
20016638:	10078e63          	beqz	a5,20016754 <__metal_driver_sifive_i2c0_write+0x152>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:223

        /* Send address over I2C bus, current driver supports only 7bit
         * addressing */
        ret =
            __metal_driver_sifive_i2c0_write_addr(base, addr, METAL_I2C_WRITE);
2001663c:	4601                	li	a2,0
2001663e:	fc842583          	lw	a1,-56(s0)
20016642:	fe042503          	lw	a0,-32(s0)
20016646:	3d95                	jal	200164ba <__metal_driver_sifive_i2c0_write_addr>
20016648:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:225

        if (ret != METAL_I2C_RET_OK) {
2001664c:	fe842783          	lw	a5,-24(s0)
20016650:	10079563          	bnez	a5,2001675a <__metal_driver_sifive_i2c0_write+0x158>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:230
            /* Write address failed */
            METAL_I2C_LOG("I2C Address Write failed.\n");
        } else {
            /* Set command flags */
            command = METAL_I2C_CMD_WRITE;
20016654:	47c1                	li	a5,16
20016656:	fef407a3          	sb	a5,-17(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:232

            for (i = 0; i < len; i++) {
2001665a:	fe042223          	sw	zero,-28(s0)
2001665e:	a0e5                	j	20016746 <__metal_driver_sifive_i2c0_write+0x144>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:234
                /* Copy into transmit register */
                METAL_I2C_REGB(METAL_SIFIVE_I2C0_TRANSMIT) = buf[i];
20016660:	fc042703          	lw	a4,-64(s0)
20016664:	fe442783          	lw	a5,-28(s0)
20016668:	97ba                	add	a5,a5,a4
2001666a:	fe042703          	lw	a4,-32(s0)
2001666e:	0731                	addi	a4,a4,12
20016670:	0007c783          	lbu	a5,0(a5)
20016674:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:238

                /* for last byte transfer, check if stop condition is requested
                 */
                if (i == (len - 1)) {
20016678:	fc442783          	lw	a5,-60(s0)
2001667c:	17fd                	addi	a5,a5,-1
2001667e:	fe442703          	lw	a4,-28(s0)
20016682:	02f71263          	bne	a4,a5,200166a6 <__metal_driver_sifive_i2c0_write+0xa4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:239
                    command |= METAL_SIFIVE_I2C_INSERT_STOP(stop_bit);
20016686:	fbc42783          	lw	a5,-68(s0)
2001668a:	0ff7f793          	andi	a5,a5,255
2001668e:	079a                	slli	a5,a5,0x6
20016690:	0ff7f793          	andi	a5,a5,255
20016694:	0407f793          	andi	a5,a5,64
20016698:	0ff7f713          	andi	a4,a5,255
2001669c:	fef44783          	lbu	a5,-17(s0)
200166a0:	8fd9                	or	a5,a5,a4
200166a2:	fef407a3          	sb	a5,-17(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:242
                }
                /* Write command register */
                METAL_I2C_REGB(METAL_SIFIVE_I2C0_COMMAND) = command;
200166a6:	fe042783          	lw	a5,-32(s0)
200166aa:	07c1                	addi	a5,a5,16
200166ac:	873e                	mv	a4,a5
200166ae:	fef44783          	lbu	a5,-17(s0)
200166b2:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:244
                /* Reset timeout */
                METAL_I2C_TIMEOUT_RESET(timeout);
200166b6:	7e3000ef          	jal	ra,20017698 <metal_time>
200166ba:	86aa                	mv	a3,a0
200166bc:	872e                	mv	a4,a1
200166be:	4585                	li	a1,1
200166c0:	4601                	li	a2,0
200166c2:	00b687b3          	add	a5,a3,a1
200166c6:	853e                	mv	a0,a5
200166c8:	00d53533          	sltu	a0,a0,a3
200166cc:	00c70833          	add	a6,a4,a2
200166d0:	01050733          	add	a4,a0,a6
200166d4:	883a                	mv	a6,a4
200166d6:	fcf42c23          	sw	a5,-40(s0)
200166da:	fd042e23          	sw	a6,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:247

                /* Check for transfer completion */
                METAL_I2C_REG_CHECK((METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) &
200166de:	a035                	j	2001670a <__metal_driver_sifive_i2c0_write+0x108>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:247 (discriminator 3)
200166e0:	7b9000ef          	jal	ra,20017698 <metal_time>
200166e4:	87aa                	mv	a5,a0
200166e6:	882e                	mv	a6,a1
200166e8:	fdc42703          	lw	a4,-36(s0)
200166ec:	86c2                	mv	a3,a6
200166ee:	00d74c63          	blt	a4,a3,20016706 <__metal_driver_sifive_i2c0_write+0x104>
200166f2:	fdc42703          	lw	a4,-36(s0)
200166f6:	86c2                	mv	a3,a6
200166f8:	00d71963          	bne	a4,a3,2001670a <__metal_driver_sifive_i2c0_write+0x108>
200166fc:	fd842703          	lw	a4,-40(s0)
20016700:	00f76363          	bltu	a4,a5,20016706 <__metal_driver_sifive_i2c0_write+0x104>
20016704:	a019                	j	2001670a <__metal_driver_sifive_i2c0_write+0x108>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:247 (discriminator 1)
20016706:	57fd                	li	a5,-1
20016708:	a899                	j	2001675e <__metal_driver_sifive_i2c0_write+0x15c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:247 (discriminator 2)
2001670a:	fe042783          	lw	a5,-32(s0)
2001670e:	07c1                	addi	a5,a5,16
20016710:	0007c783          	lbu	a5,0(a5)
20016714:	0ff7f793          	andi	a5,a5,255
20016718:	8b89                	andi	a5,a5,2
2001671a:	f3f9                	bnez	a5,200166e0 <__metal_driver_sifive_i2c0_write+0xde>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:252
                                     METAL_I2C_STATUS_TIP),
                                    timeout);

                /* Check for ACK from slave */
                if ((METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) &
2001671c:	fe042783          	lw	a5,-32(s0)
20016720:	07c1                	addi	a5,a5,16
20016722:	0007c783          	lbu	a5,0(a5)
20016726:	0ff7f793          	andi	a5,a5,255
2001672a:	07e2                	slli	a5,a5,0x18
2001672c:	87e1                	srai	a5,a5,0x18
2001672e:	0007d763          	bgez	a5,2001673c <__metal_driver_sifive_i2c0_write+0x13a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:256
                     METAL_I2C_STATUS_RXACK)) {
                    /* No ACK, return error */
                    METAL_I2C_LOG("I2C RX ACK failed.\n");
                    ret = METAL_I2C_RET_ERR;
20016732:	57fd                	li	a5,-1
20016734:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:257
                    break;
20016738:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:225
        if (ret != METAL_I2C_RET_OK) {
2001673a:	a005                	j	2001675a <__metal_driver_sifive_i2c0_write+0x158>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:232 (discriminator 2)
            for (i = 0; i < len; i++) {
2001673c:	fe442783          	lw	a5,-28(s0)
20016740:	0785                	addi	a5,a5,1
20016742:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:232 (discriminator 1)
20016746:	fe442703          	lw	a4,-28(s0)
2001674a:	fc442783          	lw	a5,-60(s0)
2001674e:	f0f769e3          	bltu	a4,a5,20016660 <__metal_driver_sifive_i2c0_write+0x5e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:225
        if (ret != METAL_I2C_RET_OK) {
20016752:	a021                	j	2001675a <__metal_driver_sifive_i2c0_write+0x158>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:265
        }

    } else {
        /* I2C device not initialized, return error */
        METAL_I2C_LOG("I2C device not initialized.\n");
        ret = METAL_I2C_RET_ERR;
20016754:	57fd                	li	a5,-1
20016756:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:268
    }

    return ret;
2001675a:	fe842783          	lw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:269
}
2001675e:	853e                	mv	a0,a5
20016760:	40b6                	lw	ra,76(sp)
20016762:	4426                	lw	s0,72(sp)
20016764:	6161                	addi	sp,sp,80
20016766:	8082                	ret

20016768 <__metal_driver_sifive_i2c0_read>:
__metal_driver_sifive_i2c0_read():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:273
static int __metal_driver_sifive_i2c0_read(struct metal_i2c *i2c,
                                           unsigned int addr, unsigned int len,
                                           unsigned char buf[],
                                           metal_i2c_stop_bit_t stop_bit) {
20016768:	715d                	addi	sp,sp,-80
2001676a:	c686                	sw	ra,76(sp)
2001676c:	c4a2                	sw	s0,72(sp)
2001676e:	0880                	addi	s0,sp,80
20016770:	fca42623          	sw	a0,-52(s0)
20016774:	fcb42423          	sw	a1,-56(s0)
20016778:	fcc42223          	sw	a2,-60(s0)
2001677c:	fcd42023          	sw	a3,-64(s0)
20016780:	fae42e23          	sw	a4,-68(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:278
    int ret;
    __metal_io_u8 command;
    time_t timeout;
    unsigned int i;
    unsigned long base = __metal_driver_sifive_i2c0_control_base(i2c);
20016784:	fcc42503          	lw	a0,-52(s0)
20016788:	9f9ff0ef          	jal	ra,20016180 <__metal_driver_sifive_i2c0_control_base>
2001678c:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:280

    if ((i2c != NULL) &&
20016790:	fcc42783          	lw	a5,-52(s0)
20016794:	10078c63          	beqz	a5,200168ac <__metal_driver_sifive_i2c0_read+0x144>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:281 (discriminator 1)
        ((struct __metal_driver_sifive_i2c0 *)i2c)->init_done) {
20016798:	fcc42783          	lw	a5,-52(s0)
2001679c:	43dc                	lw	a5,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:280 (discriminator 1)
    if ((i2c != NULL) &&
2001679e:	10078763          	beqz	a5,200168ac <__metal_driver_sifive_i2c0_read+0x144>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:285

        /* Send address over I2C bus, current driver supports only 7bit
         * addressing */
        ret = __metal_driver_sifive_i2c0_write_addr(base, addr, METAL_I2C_READ);
200167a2:	4605                	li	a2,1
200167a4:	fc842583          	lw	a1,-56(s0)
200167a8:	fe042503          	lw	a0,-32(s0)
200167ac:	d0fff0ef          	jal	ra,200164ba <__metal_driver_sifive_i2c0_write_addr>
200167b0:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:287

        if (ret != METAL_I2C_RET_OK) {
200167b4:	fec42783          	lw	a5,-20(s0)
200167b8:	0e079d63          	bnez	a5,200168b2 <__metal_driver_sifive_i2c0_read+0x14a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:292
            /* Write address failed */
            METAL_I2C_LOG("I2C Read failed.\n");
        } else {
            /* Set command flags */
            command = METAL_I2C_CMD_READ;
200167bc:	02000793          	li	a5,32
200167c0:	fef405a3          	sb	a5,-21(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:294

            for (i = 0; i < len; i++) {
200167c4:	fe042223          	sw	zero,-28(s0)
200167c8:	a8d9                	j	2001689e <__metal_driver_sifive_i2c0_read+0x136>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:296
                /* check for last transfer */
                if (i == (len - 1)) {
200167ca:	fc442783          	lw	a5,-60(s0)
200167ce:	17fd                	addi	a5,a5,-1
200167d0:	fe442703          	lw	a4,-28(s0)
200167d4:	02f71663          	bne	a4,a5,20016800 <__metal_driver_sifive_i2c0_read+0x98>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:300
                    /* Set NACK to end read, if requested generate STOP
                     * condition */
                    command |= (METAL_I2C_CMD_ACK |
                                METAL_SIFIVE_I2C_INSERT_STOP(stop_bit));
200167d8:	fbc42783          	lw	a5,-68(s0)
200167dc:	0ff7f793          	andi	a5,a5,255
200167e0:	079a                	slli	a5,a5,0x6
200167e2:	0ff7f793          	andi	a5,a5,255
200167e6:	0407f793          	andi	a5,a5,64
200167ea:	0ff7f713          	andi	a4,a5,255
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:299
                    command |= (METAL_I2C_CMD_ACK |
200167ee:	feb44783          	lbu	a5,-21(s0)
200167f2:	8fd9                	or	a5,a5,a4
200167f4:	0ff7f793          	andi	a5,a5,255
200167f8:	0087e793          	ori	a5,a5,8
200167fc:	fef405a3          	sb	a5,-21(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:303
                }
                /* Write command register */
                METAL_I2C_REGB(METAL_SIFIVE_I2C0_COMMAND) = command;
20016800:	fe042783          	lw	a5,-32(s0)
20016804:	07c1                	addi	a5,a5,16
20016806:	873e                	mv	a4,a5
20016808:	feb44783          	lbu	a5,-21(s0)
2001680c:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:305
                /* Reset timeout */
                METAL_I2C_TIMEOUT_RESET(timeout);
20016810:	689000ef          	jal	ra,20017698 <metal_time>
20016814:	86aa                	mv	a3,a0
20016816:	872e                	mv	a4,a1
20016818:	4585                	li	a1,1
2001681a:	4601                	li	a2,0
2001681c:	00b687b3          	add	a5,a3,a1
20016820:	853e                	mv	a0,a5
20016822:	00d53533          	sltu	a0,a0,a3
20016826:	00c70833          	add	a6,a4,a2
2001682a:	01050733          	add	a4,a0,a6
2001682e:	883a                	mv	a6,a4
20016830:	fcf42c23          	sw	a5,-40(s0)
20016834:	fd042e23          	sw	a6,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:308

                /* Wait for the read to complete */
                METAL_I2C_REG_CHECK((METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) &
20016838:	a035                	j	20016864 <__metal_driver_sifive_i2c0_read+0xfc>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:308 (discriminator 3)
2001683a:	65f000ef          	jal	ra,20017698 <metal_time>
2001683e:	87aa                	mv	a5,a0
20016840:	882e                	mv	a6,a1
20016842:	fdc42703          	lw	a4,-36(s0)
20016846:	86c2                	mv	a3,a6
20016848:	00d74c63          	blt	a4,a3,20016860 <__metal_driver_sifive_i2c0_read+0xf8>
2001684c:	fdc42703          	lw	a4,-36(s0)
20016850:	86c2                	mv	a3,a6
20016852:	00d71963          	bne	a4,a3,20016864 <__metal_driver_sifive_i2c0_read+0xfc>
20016856:	fd842703          	lw	a4,-40(s0)
2001685a:	00f76363          	bltu	a4,a5,20016860 <__metal_driver_sifive_i2c0_read+0xf8>
2001685e:	a019                	j	20016864 <__metal_driver_sifive_i2c0_read+0xfc>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:308 (discriminator 1)
20016860:	57fd                	li	a5,-1
20016862:	a891                	j	200168b6 <__metal_driver_sifive_i2c0_read+0x14e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:308 (discriminator 2)
20016864:	fe042783          	lw	a5,-32(s0)
20016868:	07c1                	addi	a5,a5,16
2001686a:	0007c783          	lbu	a5,0(a5)
2001686e:	0ff7f793          	andi	a5,a5,255
20016872:	8b89                	andi	a5,a5,2
20016874:	f3f9                	bnez	a5,2001683a <__metal_driver_sifive_i2c0_read+0xd2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:312 (discriminator 2)
                                     METAL_I2C_STATUS_TIP),
                                    timeout);
                /* Store the received byte */
                buf[i] = METAL_I2C_REGB(METAL_SIFIVE_I2C0_TRANSMIT);
20016876:	fe042783          	lw	a5,-32(s0)
2001687a:	07b1                	addi	a5,a5,12
2001687c:	86be                	mv	a3,a5
2001687e:	fc042703          	lw	a4,-64(s0)
20016882:	fe442783          	lw	a5,-28(s0)
20016886:	97ba                	add	a5,a5,a4
20016888:	0006c703          	lbu	a4,0(a3)
2001688c:	0ff77713          	andi	a4,a4,255
20016890:	00e78023          	sb	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:294 (discriminator 2)
            for (i = 0; i < len; i++) {
20016894:	fe442783          	lw	a5,-28(s0)
20016898:	0785                	addi	a5,a5,1
2001689a:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:294 (discriminator 1)
2001689e:	fe442703          	lw	a4,-28(s0)
200168a2:	fc442783          	lw	a5,-60(s0)
200168a6:	f2f762e3          	bltu	a4,a5,200167ca <__metal_driver_sifive_i2c0_read+0x62>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:287
        if (ret != METAL_I2C_RET_OK) {
200168aa:	a021                	j	200168b2 <__metal_driver_sifive_i2c0_read+0x14a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:318
            }
        }
    } else {
        /* I2C device not initialized, return error */
        METAL_I2C_LOG("I2C device not initialized.\n");
        ret = METAL_I2C_RET_ERR;
200168ac:	57fd                	li	a5,-1
200168ae:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:321
    }

    return ret;
200168b2:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:322
}
200168b6:	853e                	mv	a0,a5
200168b8:	40b6                	lw	ra,76(sp)
200168ba:	4426                	lw	s0,72(sp)
200168bc:	6161                	addi	sp,sp,80
200168be:	8082                	ret

200168c0 <__metal_driver_sifive_i2c0_transfer>:
__metal_driver_sifive_i2c0_transfer():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:327

static int
__metal_driver_sifive_i2c0_transfer(struct metal_i2c *i2c, unsigned int addr,
                                    unsigned char txbuf[], unsigned int txlen,
                                    unsigned char rxbuf[], unsigned int rxlen) {
200168c0:	715d                	addi	sp,sp,-80
200168c2:	c686                	sw	ra,76(sp)
200168c4:	c4a2                	sw	s0,72(sp)
200168c6:	0880                	addi	s0,sp,80
200168c8:	fca42623          	sw	a0,-52(s0)
200168cc:	fcb42423          	sw	a1,-56(s0)
200168d0:	fcc42223          	sw	a2,-60(s0)
200168d4:	fcd42023          	sw	a3,-64(s0)
200168d8:	fae42e23          	sw	a4,-68(s0)
200168dc:	faf42c23          	sw	a5,-72(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:332
    __metal_io_u8 command;
    time_t timeout;
    int ret;
    unsigned int i;
    unsigned long base = __metal_driver_sifive_i2c0_control_base(i2c);
200168e0:	fcc42503          	lw	a0,-52(s0)
200168e4:	89dff0ef          	jal	ra,20016180 <__metal_driver_sifive_i2c0_control_base>
200168e8:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:334

    if ((i2c != NULL) &&
200168ec:	fcc42783          	lw	a5,-52(s0)
200168f0:	20078e63          	beqz	a5,20016b0c <__metal_driver_sifive_i2c0_transfer+0x24c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:335 (discriminator 1)
        ((struct __metal_driver_sifive_i2c0 *)i2c)->init_done) {
200168f4:	fcc42783          	lw	a5,-52(s0)
200168f8:	43dc                	lw	a5,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:334 (discriminator 1)
    if ((i2c != NULL) &&
200168fa:	20078963          	beqz	a5,20016b0c <__metal_driver_sifive_i2c0_transfer+0x24c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:336
        if (txlen) {
200168fe:	fc042783          	lw	a5,-64(s0)
20016902:	10078863          	beqz	a5,20016a12 <__metal_driver_sifive_i2c0_transfer+0x152>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:338
            /* Set command flags */
            command = METAL_I2C_CMD_WRITE;
20016906:	47c1                	li	a5,16
20016908:	fef407a3          	sb	a5,-17(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:341
            /* Send address over I2C bus, current driver supports only 7bit
             * addressing */
            ret = __metal_driver_sifive_i2c0_write_addr(base, addr,
2001690c:	4601                	li	a2,0
2001690e:	fc842583          	lw	a1,-56(s0)
20016912:	fe042503          	lw	a0,-32(s0)
20016916:	ba5ff0ef          	jal	ra,200164ba <__metal_driver_sifive_i2c0_write_addr>
2001691a:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:344
                                                        METAL_I2C_WRITE);

            if (ret != METAL_I2C_RET_OK) {
2001691e:	fe842783          	lw	a5,-24(s0)
20016922:	c781                	beqz	a5,2001692a <__metal_driver_sifive_i2c0_transfer+0x6a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:347
                /* Write address failed */
                METAL_I2C_LOG("I2C Write failed.\n");
                return ret;
20016924:	fe842783          	lw	a5,-24(s0)
20016928:	a2fd                	j	20016b16 <__metal_driver_sifive_i2c0_transfer+0x256>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:349
            }
            for (i = 0; i < txlen; i++) {
2001692a:	fe042223          	sw	zero,-28(s0)
2001692e:	a8e1                	j	20016a06 <__metal_driver_sifive_i2c0_transfer+0x146>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:351
                /* Copy into transmit register */
                METAL_I2C_REGB(METAL_SIFIVE_I2C0_TRANSMIT) = txbuf[i];
20016930:	fc442703          	lw	a4,-60(s0)
20016934:	fe442783          	lw	a5,-28(s0)
20016938:	97ba                	add	a5,a5,a4
2001693a:	fe042703          	lw	a4,-32(s0)
2001693e:	0731                	addi	a4,a4,12
20016940:	0007c783          	lbu	a5,0(a5)
20016944:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:353

                if (i == (txlen - 1) && (rxlen == 0)) {
20016948:	fc042783          	lw	a5,-64(s0)
2001694c:	17fd                	addi	a5,a5,-1
2001694e:	fe442703          	lw	a4,-28(s0)
20016952:	00f71b63          	bne	a4,a5,20016968 <__metal_driver_sifive_i2c0_transfer+0xa8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:353 (discriminator 1)
20016956:	fb842783          	lw	a5,-72(s0)
2001695a:	e799                	bnez	a5,20016968 <__metal_driver_sifive_i2c0_transfer+0xa8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:355
                    /* Insert stop condition to end transfer */
                    command |= METAL_I2C_CMD_STOP;
2001695c:	fef44783          	lbu	a5,-17(s0)
20016960:	0407e793          	ori	a5,a5,64
20016964:	fef407a3          	sb	a5,-17(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:358
                }
                /* Write command register */
                METAL_I2C_REGB(METAL_SIFIVE_I2C0_COMMAND) = command;
20016968:	fe042783          	lw	a5,-32(s0)
2001696c:	07c1                	addi	a5,a5,16
2001696e:	873e                	mv	a4,a5
20016970:	fef44783          	lbu	a5,-17(s0)
20016974:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:360
                /* Reset timeout */
                METAL_I2C_TIMEOUT_RESET(timeout);
20016978:	521000ef          	jal	ra,20017698 <metal_time>
2001697c:	86aa                	mv	a3,a0
2001697e:	872e                	mv	a4,a1
20016980:	4585                	li	a1,1
20016982:	4601                	li	a2,0
20016984:	00b687b3          	add	a5,a3,a1
20016988:	853e                	mv	a0,a5
2001698a:	00d53533          	sltu	a0,a0,a3
2001698e:	00c70833          	add	a6,a4,a2
20016992:	01050733          	add	a4,a0,a6
20016996:	883a                	mv	a6,a4
20016998:	fcf42c23          	sw	a5,-40(s0)
2001699c:	fd042e23          	sw	a6,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:363

                /* Check for transfer completion. */
                METAL_I2C_REG_CHECK((METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) &
200169a0:	a035                	j	200169cc <__metal_driver_sifive_i2c0_transfer+0x10c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:363 (discriminator 3)
200169a2:	4f7000ef          	jal	ra,20017698 <metal_time>
200169a6:	87aa                	mv	a5,a0
200169a8:	882e                	mv	a6,a1
200169aa:	fdc42703          	lw	a4,-36(s0)
200169ae:	86c2                	mv	a3,a6
200169b0:	00d74c63          	blt	a4,a3,200169c8 <__metal_driver_sifive_i2c0_transfer+0x108>
200169b4:	fdc42703          	lw	a4,-36(s0)
200169b8:	86c2                	mv	a3,a6
200169ba:	00d71963          	bne	a4,a3,200169cc <__metal_driver_sifive_i2c0_transfer+0x10c>
200169be:	fd842703          	lw	a4,-40(s0)
200169c2:	00f76363          	bltu	a4,a5,200169c8 <__metal_driver_sifive_i2c0_transfer+0x108>
200169c6:	a019                	j	200169cc <__metal_driver_sifive_i2c0_transfer+0x10c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:363 (discriminator 1)
200169c8:	57fd                	li	a5,-1
200169ca:	a2b1                	j	20016b16 <__metal_driver_sifive_i2c0_transfer+0x256>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:363 (discriminator 2)
200169cc:	fe042783          	lw	a5,-32(s0)
200169d0:	07c1                	addi	a5,a5,16
200169d2:	0007c783          	lbu	a5,0(a5)
200169d6:	0ff7f793          	andi	a5,a5,255
200169da:	8b89                	andi	a5,a5,2
200169dc:	f3f9                	bnez	a5,200169a2 <__metal_driver_sifive_i2c0_transfer+0xe2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:368
                                     METAL_I2C_STATUS_TIP),
                                    timeout);

                /* Check for ACK from slave. */
                if ((METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) &
200169de:	fe042783          	lw	a5,-32(s0)
200169e2:	07c1                	addi	a5,a5,16
200169e4:	0007c783          	lbu	a5,0(a5)
200169e8:	0ff7f793          	andi	a5,a5,255
200169ec:	07e2                	slli	a5,a5,0x18
200169ee:	87e1                	srai	a5,a5,0x18
200169f0:	0007d663          	bgez	a5,200169fc <__metal_driver_sifive_i2c0_transfer+0x13c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:372
                     METAL_I2C_STATUS_RXACK)) {
                    /* No ACK, return error */
                    METAL_I2C_LOG("I2C RX ACK failed.\n");
                    ret = METAL_I2C_RET_ERR;
200169f4:	57fd                	li	a5,-1
200169f6:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:373
                    break;
200169fa:	a821                	j	20016a12 <__metal_driver_sifive_i2c0_transfer+0x152>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:349 (discriminator 2)
            for (i = 0; i < txlen; i++) {
200169fc:	fe442783          	lw	a5,-28(s0)
20016a00:	0785                	addi	a5,a5,1
20016a02:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:349 (discriminator 1)
20016a06:	fe442703          	lw	a4,-28(s0)
20016a0a:	fc042783          	lw	a5,-64(s0)
20016a0e:	f2f761e3          	bltu	a4,a5,20016930 <__metal_driver_sifive_i2c0_transfer+0x70>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:377
                }
            }
        }
        if (rxlen) {
20016a12:	fb842783          	lw	a5,-72(s0)
20016a16:	0e078e63          	beqz	a5,20016b12 <__metal_driver_sifive_i2c0_transfer+0x252>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:378
            command = METAL_I2C_CMD_READ; /* Set command flags */
20016a1a:	02000793          	li	a5,32
20016a1e:	fef407a3          	sb	a5,-17(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:381
            /* Send address over I2C bus, current driver supports only 7bit
             * addressing */
            ret = __metal_driver_sifive_i2c0_write_addr(base, addr,
20016a22:	4605                	li	a2,1
20016a24:	fc842583          	lw	a1,-56(s0)
20016a28:	fe042503          	lw	a0,-32(s0)
20016a2c:	a8fff0ef          	jal	ra,200164ba <__metal_driver_sifive_i2c0_write_addr>
20016a30:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:384
                                                        METAL_I2C_READ);

            if (ret != METAL_I2C_RET_OK) {
20016a34:	fe842783          	lw	a5,-24(s0)
20016a38:	c781                	beqz	a5,20016a40 <__metal_driver_sifive_i2c0_transfer+0x180>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:387
                /* Return error */
                METAL_I2C_LOG("I2C Read failed.\n");
                return ret;
20016a3a:	fe842783          	lw	a5,-24(s0)
20016a3e:	a8e1                	j	20016b16 <__metal_driver_sifive_i2c0_transfer+0x256>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:389
            }
            for (i = 0; i < rxlen; i++) {
20016a40:	fe042223          	sw	zero,-28(s0)
20016a44:	a86d                	j	20016afe <__metal_driver_sifive_i2c0_transfer+0x23e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:391
                /* check for last transfer */
                if (i == (rxlen - 1)) {
20016a46:	fb842783          	lw	a5,-72(s0)
20016a4a:	17fd                	addi	a5,a5,-1
20016a4c:	fe442703          	lw	a4,-28(s0)
20016a50:	00f71863          	bne	a4,a5,20016a60 <__metal_driver_sifive_i2c0_transfer+0x1a0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:393
                    /* Set NACK to end read, generate STOP condition */
                    command |= (METAL_I2C_CMD_ACK | METAL_I2C_CMD_STOP);
20016a54:	fef44783          	lbu	a5,-17(s0)
20016a58:	0487e793          	ori	a5,a5,72
20016a5c:	fef407a3          	sb	a5,-17(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:396
                }
                /* Write command register */
                METAL_I2C_REGB(METAL_SIFIVE_I2C0_COMMAND) = command;
20016a60:	fe042783          	lw	a5,-32(s0)
20016a64:	07c1                	addi	a5,a5,16
20016a66:	873e                	mv	a4,a5
20016a68:	fef44783          	lbu	a5,-17(s0)
20016a6c:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:398
                /* Reset timeout */
                METAL_I2C_TIMEOUT_RESET(timeout);
20016a70:	429000ef          	jal	ra,20017698 <metal_time>
20016a74:	86aa                	mv	a3,a0
20016a76:	872e                	mv	a4,a1
20016a78:	4585                	li	a1,1
20016a7a:	4601                	li	a2,0
20016a7c:	00b687b3          	add	a5,a3,a1
20016a80:	853e                	mv	a0,a5
20016a82:	00d53533          	sltu	a0,a0,a3
20016a86:	00c70833          	add	a6,a4,a2
20016a8a:	01050733          	add	a4,a0,a6
20016a8e:	883a                	mv	a6,a4
20016a90:	fcf42c23          	sw	a5,-40(s0)
20016a94:	fd042e23          	sw	a6,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:401

                /* Wait for the read to complete */
                METAL_I2C_REG_CHECK((METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) &
20016a98:	a035                	j	20016ac4 <__metal_driver_sifive_i2c0_transfer+0x204>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:401 (discriminator 3)
20016a9a:	3ff000ef          	jal	ra,20017698 <metal_time>
20016a9e:	87aa                	mv	a5,a0
20016aa0:	882e                	mv	a6,a1
20016aa2:	fdc42703          	lw	a4,-36(s0)
20016aa6:	86c2                	mv	a3,a6
20016aa8:	00d74c63          	blt	a4,a3,20016ac0 <__metal_driver_sifive_i2c0_transfer+0x200>
20016aac:	fdc42703          	lw	a4,-36(s0)
20016ab0:	86c2                	mv	a3,a6
20016ab2:	00d71963          	bne	a4,a3,20016ac4 <__metal_driver_sifive_i2c0_transfer+0x204>
20016ab6:	fd842703          	lw	a4,-40(s0)
20016aba:	00f76363          	bltu	a4,a5,20016ac0 <__metal_driver_sifive_i2c0_transfer+0x200>
20016abe:	a019                	j	20016ac4 <__metal_driver_sifive_i2c0_transfer+0x204>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:401 (discriminator 1)
20016ac0:	57fd                	li	a5,-1
20016ac2:	a891                	j	20016b16 <__metal_driver_sifive_i2c0_transfer+0x256>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:401 (discriminator 2)
20016ac4:	fe042783          	lw	a5,-32(s0)
20016ac8:	07c1                	addi	a5,a5,16
20016aca:	0007c783          	lbu	a5,0(a5)
20016ace:	0ff7f793          	andi	a5,a5,255
20016ad2:	8b89                	andi	a5,a5,2
20016ad4:	f3f9                	bnez	a5,20016a9a <__metal_driver_sifive_i2c0_transfer+0x1da>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:405 (discriminator 2)
                                     METAL_I2C_STATUS_TIP),
                                    timeout);
                /* Store the received byte */
                rxbuf[i] = METAL_I2C_REGB(METAL_SIFIVE_I2C0_TRANSMIT);
20016ad6:	fe042783          	lw	a5,-32(s0)
20016ada:	07b1                	addi	a5,a5,12
20016adc:	86be                	mv	a3,a5
20016ade:	fbc42703          	lw	a4,-68(s0)
20016ae2:	fe442783          	lw	a5,-28(s0)
20016ae6:	97ba                	add	a5,a5,a4
20016ae8:	0006c703          	lbu	a4,0(a3)
20016aec:	0ff77713          	andi	a4,a4,255
20016af0:	00e78023          	sb	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:389 (discriminator 2)
            for (i = 0; i < rxlen; i++) {
20016af4:	fe442783          	lw	a5,-28(s0)
20016af8:	0785                	addi	a5,a5,1
20016afa:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:389 (discriminator 1)
20016afe:	fe442703          	lw	a4,-28(s0)
20016b02:	fb842783          	lw	a5,-72(s0)
20016b06:	f4f760e3          	bltu	a4,a5,20016a46 <__metal_driver_sifive_i2c0_transfer+0x186>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:377
        if (rxlen) {
20016b0a:	a021                	j	20016b12 <__metal_driver_sifive_i2c0_transfer+0x252>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:411
            }
        }
    } else {
        /* I2C device not initialized, return error */
        METAL_I2C_LOG("I2C device not initialized.\n");
        ret = METAL_I2C_RET_ERR;
20016b0c:	57fd                	li	a5,-1
20016b0e:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:414
    }

    return ret;
20016b12:	fe842783          	lw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:415
}
20016b16:	853e                	mv	a0,a5
20016b18:	40b6                	lw	ra,76(sp)
20016b1a:	4426                	lw	s0,72(sp)
20016b1c:	6161                	addi	sp,sp,80
20016b1e:	8082                	ret

20016b20 <__metal_driver_sifive_uart0_control_base>:
__metal_driver_sifive_uart0_control_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1066
{
20016b20:	1101                	addi	sp,sp,-32
20016b22:	ce22                	sw	s0,28(sp)
20016b24:	1000                	addi	s0,sp,32
20016b26:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1067
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20016b2a:	fec42703          	lw	a4,-20(s0)
20016b2e:	800017b7          	lui	a5,0x80001
20016b32:	a5c78793          	addi	a5,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
20016b36:	00f71563          	bne	a4,a5,20016b40 <__metal_driver_sifive_uart0_control_base+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1068
		return METAL_SIFIVE_UART0_10013000_BASE_ADDRESS;
20016b3a:	100137b7          	lui	a5,0x10013
20016b3e:	a829                	j	20016b58 <__metal_driver_sifive_uart0_control_base+0x38>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1070
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20016b40:	fec42703          	lw	a4,-20(s0)
20016b44:	800017b7          	lui	a5,0x80001
20016b48:	a7c78793          	addi	a5,a5,-1412 # 80000a7c <metal_segment_heap_target_end+0xfffff2bc>
20016b4c:	00f71563          	bne	a4,a5,20016b56 <__metal_driver_sifive_uart0_control_base+0x36>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1071
		return METAL_SIFIVE_UART0_10023000_BASE_ADDRESS;
20016b50:	100237b7          	lui	a5,0x10023
20016b54:	a011                	j	20016b58 <__metal_driver_sifive_uart0_control_base+0x38>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1074
		return 0;
20016b56:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1076
}
20016b58:	853e                	mv	a0,a5
20016b5a:	4472                	lw	s0,28(sp)
20016b5c:	6105                	addi	sp,sp,32
20016b5e:	8082                	ret

20016b60 <__metal_driver_sifive_uart0_interrupt_parent>:
__metal_driver_sifive_uart0_interrupt_parent():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1105
{
20016b60:	1101                	addi	sp,sp,-32
20016b62:	ce22                	sw	s0,28(sp)
20016b64:	1000                	addi	s0,sp,32
20016b66:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1106
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20016b6a:	fec42703          	lw	a4,-20(s0)
20016b6e:	800017b7          	lui	a5,0x80001
20016b72:	a5c78793          	addi	a5,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
20016b76:	00f71763          	bne	a4,a5,20016b84 <__metal_driver_sifive_uart0_interrupt_parent+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1107
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20016b7a:	800007b7          	lui	a5,0x80000
20016b7e:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffeca0>
20016b82:	a839                	j	20016ba0 <__metal_driver_sifive_uart0_interrupt_parent+0x40>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1109
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20016b84:	fec42703          	lw	a4,-20(s0)
20016b88:	800017b7          	lui	a5,0x80001
20016b8c:	a7c78793          	addi	a5,a5,-1412 # 80000a7c <metal_segment_heap_target_end+0xfffff2bc>
20016b90:	00f71763          	bne	a4,a5,20016b9e <__metal_driver_sifive_uart0_interrupt_parent+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1110
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20016b94:	800007b7          	lui	a5,0x80000
20016b98:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffeca0>
20016b9c:	a011                	j	20016ba0 <__metal_driver_sifive_uart0_interrupt_parent+0x40>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1113
		return 0;
20016b9e:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1115
}
20016ba0:	853e                	mv	a0,a5
20016ba2:	4472                	lw	s0,28(sp)
20016ba4:	6105                	addi	sp,sp,32
20016ba6:	8082                	ret

20016ba8 <__metal_driver_sifive_uart0_interrupt_line>:
__metal_driver_sifive_uart0_interrupt_line():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1118
{
20016ba8:	1101                	addi	sp,sp,-32
20016baa:	ce22                	sw	s0,28(sp)
20016bac:	1000                	addi	s0,sp,32
20016bae:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1119
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20016bb2:	fec42703          	lw	a4,-20(s0)
20016bb6:	800017b7          	lui	a5,0x80001
20016bba:	a5c78793          	addi	a5,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
20016bbe:	00f71463          	bne	a4,a5,20016bc6 <__metal_driver_sifive_uart0_interrupt_line+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1120
		return 3;
20016bc2:	478d                	li	a5,3
20016bc4:	a821                	j	20016bdc <__metal_driver_sifive_uart0_interrupt_line+0x34>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1122
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20016bc6:	fec42703          	lw	a4,-20(s0)
20016bca:	800017b7          	lui	a5,0x80001
20016bce:	a7c78793          	addi	a5,a5,-1412 # 80000a7c <metal_segment_heap_target_end+0xfffff2bc>
20016bd2:	00f71463          	bne	a4,a5,20016bda <__metal_driver_sifive_uart0_interrupt_line+0x32>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1123
		return 4;
20016bd6:	4791                	li	a5,4
20016bd8:	a011                	j	20016bdc <__metal_driver_sifive_uart0_interrupt_line+0x34>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1126
		return 0;
20016bda:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1128
}
20016bdc:	853e                	mv	a0,a5
20016bde:	4472                	lw	s0,28(sp)
20016be0:	6105                	addi	sp,sp,32
20016be2:	8082                	ret

20016be4 <__metal_driver_sifive_uart0_clock>:
__metal_driver_sifive_uart0_clock():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1131
{
20016be4:	1101                	addi	sp,sp,-32
20016be6:	ce22                	sw	s0,28(sp)
20016be8:	1000                	addi	s0,sp,32
20016bea:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1132
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20016bee:	fec42703          	lw	a4,-20(s0)
20016bf2:	800017b7          	lui	a5,0x80001
20016bf6:	a5c78793          	addi	a5,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
20016bfa:	00f71763          	bne	a4,a5,20016c08 <__metal_driver_sifive_uart0_clock+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1133
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
20016bfe:	800017b7          	lui	a5,0x80001
20016c02:	ab478793          	addi	a5,a5,-1356 # 80000ab4 <metal_segment_heap_target_end+0xfffff2f4>
20016c06:	a839                	j	20016c24 <__metal_driver_sifive_uart0_clock+0x40>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1135
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20016c08:	fec42703          	lw	a4,-20(s0)
20016c0c:	800017b7          	lui	a5,0x80001
20016c10:	a7c78793          	addi	a5,a5,-1412 # 80000a7c <metal_segment_heap_target_end+0xfffff2bc>
20016c14:	00f71763          	bne	a4,a5,20016c22 <__metal_driver_sifive_uart0_clock+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1136
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
20016c18:	800017b7          	lui	a5,0x80001
20016c1c:	ab478793          	addi	a5,a5,-1356 # 80000ab4 <metal_segment_heap_target_end+0xfffff2f4>
20016c20:	a011                	j	20016c24 <__metal_driver_sifive_uart0_clock+0x40>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1139
		return 0;
20016c22:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1141
}
20016c24:	853e                	mv	a0,a5
20016c26:	4472                	lw	s0,28(sp)
20016c28:	6105                	addi	sp,sp,32
20016c2a:	8082                	ret

20016c2c <__metal_driver_sifive_uart0_pinmux>:
__metal_driver_sifive_uart0_pinmux():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1144
{
20016c2c:	1101                	addi	sp,sp,-32
20016c2e:	ce22                	sw	s0,28(sp)
20016c30:	1000                	addi	s0,sp,32
20016c32:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1145
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20016c36:	fec42703          	lw	a4,-20(s0)
20016c3a:	800017b7          	lui	a5,0x80001
20016c3e:	a5c78793          	addi	a5,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
20016c42:	00f71563          	bne	a4,a5,20016c4c <__metal_driver_sifive_uart0_pinmux+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1146
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
20016c46:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20016c4a:	a829                	j	20016c64 <__metal_driver_sifive_uart0_pinmux+0x38>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1148
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20016c4c:	fec42703          	lw	a4,-20(s0)
20016c50:	800017b7          	lui	a5,0x80001
20016c54:	a7c78793          	addi	a5,a5,-1412 # 80000a7c <metal_segment_heap_target_end+0xfffff2bc>
20016c58:	00f71563          	bne	a4,a5,20016c62 <__metal_driver_sifive_uart0_pinmux+0x36>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1149
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
20016c5c:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20016c60:	a011                	j	20016c64 <__metal_driver_sifive_uart0_pinmux+0x38>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1152
		return 0;
20016c62:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1154
}
20016c64:	853e                	mv	a0,a5
20016c66:	4472                	lw	s0,28(sp)
20016c68:	6105                	addi	sp,sp,32
20016c6a:	8082                	ret

20016c6c <__metal_driver_sifive_uart0_pinmux_output_selector>:
__metal_driver_sifive_uart0_pinmux_output_selector():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1157
{
20016c6c:	1101                	addi	sp,sp,-32
20016c6e:	ce22                	sw	s0,28(sp)
20016c70:	1000                	addi	s0,sp,32
20016c72:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1158
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20016c76:	fec42703          	lw	a4,-20(s0)
20016c7a:	800017b7          	lui	a5,0x80001
20016c7e:	a5c78793          	addi	a5,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
20016c82:	00f71463          	bne	a4,a5,20016c8a <__metal_driver_sifive_uart0_pinmux_output_selector+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1159
		return 0;
20016c86:	4781                	li	a5,0
20016c88:	a821                	j	20016ca0 <__metal_driver_sifive_uart0_pinmux_output_selector+0x34>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1161
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20016c8a:	fec42703          	lw	a4,-20(s0)
20016c8e:	800017b7          	lui	a5,0x80001
20016c92:	a7c78793          	addi	a5,a5,-1412 # 80000a7c <metal_segment_heap_target_end+0xfffff2bc>
20016c96:	00f71463          	bne	a4,a5,20016c9e <__metal_driver_sifive_uart0_pinmux_output_selector+0x32>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1162
		return 0;
20016c9a:	4781                	li	a5,0
20016c9c:	a011                	j	20016ca0 <__metal_driver_sifive_uart0_pinmux_output_selector+0x34>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1165
		return 0;
20016c9e:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1167
}
20016ca0:	853e                	mv	a0,a5
20016ca2:	4472                	lw	s0,28(sp)
20016ca4:	6105                	addi	sp,sp,32
20016ca6:	8082                	ret

20016ca8 <__metal_driver_sifive_uart0_pinmux_source_selector>:
__metal_driver_sifive_uart0_pinmux_source_selector():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1170
{
20016ca8:	1101                	addi	sp,sp,-32
20016caa:	ce22                	sw	s0,28(sp)
20016cac:	1000                	addi	s0,sp,32
20016cae:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1171
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20016cb2:	fec42703          	lw	a4,-20(s0)
20016cb6:	800017b7          	lui	a5,0x80001
20016cba:	a5c78793          	addi	a5,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
20016cbe:	00f71563          	bne	a4,a5,20016cc8 <__metal_driver_sifive_uart0_pinmux_source_selector+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1172
		return 196608;
20016cc2:	000307b7          	lui	a5,0x30
20016cc6:	a829                	j	20016ce0 <__metal_driver_sifive_uart0_pinmux_source_selector+0x38>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1174
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20016cc8:	fec42703          	lw	a4,-20(s0)
20016ccc:	800017b7          	lui	a5,0x80001
20016cd0:	a7c78793          	addi	a5,a5,-1412 # 80000a7c <metal_segment_heap_target_end+0xfffff2bc>
20016cd4:	00f71563          	bne	a4,a5,20016cde <__metal_driver_sifive_uart0_pinmux_source_selector+0x36>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1175
		return 8650752;
20016cd8:	008407b7          	lui	a5,0x840
20016cdc:	a011                	j	20016ce0 <__metal_driver_sifive_uart0_pinmux_source_selector+0x38>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1178
		return 0;
20016cde:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1180
}
20016ce0:	853e                	mv	a0,a5
20016ce2:	4472                	lw	s0,28(sp)
20016ce4:	6105                	addi	sp,sp,32
20016ce6:	8082                	ret

20016ce8 <__metal_driver_sifive_uart0_interrupt_controller>:
__metal_driver_sifive_uart0_interrupt_controller():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:37
    (__METAL_ACCESS_ONCE((__metal_io_u8 *)UART_REG(offset)))
#define UART_REGW(offset)                                                      \
    (__METAL_ACCESS_ONCE((__metal_io_u32 *)UART_REG(offset)))

struct metal_interrupt *
__metal_driver_sifive_uart0_interrupt_controller(struct metal_uart *uart) {
20016ce8:	1101                	addi	sp,sp,-32
20016cea:	ce06                	sw	ra,28(sp)
20016cec:	cc22                	sw	s0,24(sp)
20016cee:	1000                	addi	s0,sp,32
20016cf0:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:38
    return __metal_driver_sifive_uart0_interrupt_parent(uart);
20016cf4:	fec42503          	lw	a0,-20(s0)
20016cf8:	e69ff0ef          	jal	ra,20016b60 <__metal_driver_sifive_uart0_interrupt_parent>
20016cfc:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:39
}
20016cfe:	853e                	mv	a0,a5
20016d00:	40f2                	lw	ra,28(sp)
20016d02:	4462                	lw	s0,24(sp)
20016d04:	6105                	addi	sp,sp,32
20016d06:	8082                	ret

20016d08 <__metal_driver_sifive_uart0_get_interrupt_id>:
__metal_driver_sifive_uart0_get_interrupt_id():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:41

int __metal_driver_sifive_uart0_get_interrupt_id(struct metal_uart *uart) {
20016d08:	1101                	addi	sp,sp,-32
20016d0a:	ce06                	sw	ra,28(sp)
20016d0c:	cc22                	sw	s0,24(sp)
20016d0e:	1000                	addi	s0,sp,32
20016d10:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:42
    return __metal_driver_sifive_uart0_interrupt_line(uart);
20016d14:	fec42503          	lw	a0,-20(s0)
20016d18:	e91ff0ef          	jal	ra,20016ba8 <__metal_driver_sifive_uart0_interrupt_line>
20016d1c:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:43
}
20016d1e:	853e                	mv	a0,a5
20016d20:	40f2                	lw	ra,28(sp)
20016d22:	4462                	lw	s0,24(sp)
20016d24:	6105                	addi	sp,sp,32
20016d26:	8082                	ret

20016d28 <__metal_driver_sifive_uart0_tx_interrupt_enable>:
__metal_driver_sifive_uart0_tx_interrupt_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:45

int __metal_driver_sifive_uart0_tx_interrupt_enable(struct metal_uart *uart) {
20016d28:	7179                	addi	sp,sp,-48
20016d2a:	d606                	sw	ra,44(sp)
20016d2c:	d422                	sw	s0,40(sp)
20016d2e:	1800                	addi	s0,sp,48
20016d30:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:46
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20016d34:	fdc42503          	lw	a0,-36(s0)
20016d38:	de9ff0ef          	jal	ra,20016b20 <__metal_driver_sifive_uart0_control_base>
20016d3c:	87aa                	mv	a5,a0
20016d3e:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:48

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_TXWM;
20016d42:	fec42783          	lw	a5,-20(s0)
20016d46:	07c1                	addi	a5,a5,16
20016d48:	439c                	lw	a5,0(a5)
20016d4a:	fec42703          	lw	a4,-20(s0)
20016d4e:	0741                	addi	a4,a4,16
20016d50:	0017e793          	ori	a5,a5,1
20016d54:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:49
    return 0;
20016d56:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:50
}
20016d58:	853e                	mv	a0,a5
20016d5a:	50b2                	lw	ra,44(sp)
20016d5c:	5422                	lw	s0,40(sp)
20016d5e:	6145                	addi	sp,sp,48
20016d60:	8082                	ret

20016d62 <__metal_driver_sifive_uart0_tx_interrupt_disable>:
__metal_driver_sifive_uart0_tx_interrupt_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:52

int __metal_driver_sifive_uart0_tx_interrupt_disable(struct metal_uart *uart) {
20016d62:	7179                	addi	sp,sp,-48
20016d64:	d606                	sw	ra,44(sp)
20016d66:	d422                	sw	s0,40(sp)
20016d68:	1800                	addi	s0,sp,48
20016d6a:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:53
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20016d6e:	fdc42503          	lw	a0,-36(s0)
20016d72:	dafff0ef          	jal	ra,20016b20 <__metal_driver_sifive_uart0_control_base>
20016d76:	87aa                	mv	a5,a0
20016d78:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:55

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_TXWM;
20016d7c:	fec42783          	lw	a5,-20(s0)
20016d80:	07c1                	addi	a5,a5,16
20016d82:	439c                	lw	a5,0(a5)
20016d84:	fec42703          	lw	a4,-20(s0)
20016d88:	0741                	addi	a4,a4,16
20016d8a:	9bf9                	andi	a5,a5,-2
20016d8c:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:56
    return 0;
20016d8e:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:57
}
20016d90:	853e                	mv	a0,a5
20016d92:	50b2                	lw	ra,44(sp)
20016d94:	5422                	lw	s0,40(sp)
20016d96:	6145                	addi	sp,sp,48
20016d98:	8082                	ret

20016d9a <__metal_driver_sifive_uart0_rx_interrupt_enable>:
__metal_driver_sifive_uart0_rx_interrupt_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:59

int __metal_driver_sifive_uart0_rx_interrupt_enable(struct metal_uart *uart) {
20016d9a:	7179                	addi	sp,sp,-48
20016d9c:	d606                	sw	ra,44(sp)
20016d9e:	d422                	sw	s0,40(sp)
20016da0:	1800                	addi	s0,sp,48
20016da2:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:60
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20016da6:	fdc42503          	lw	a0,-36(s0)
20016daa:	d77ff0ef          	jal	ra,20016b20 <__metal_driver_sifive_uart0_control_base>
20016dae:	87aa                	mv	a5,a0
20016db0:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:62

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_RXWM;
20016db4:	fec42783          	lw	a5,-20(s0)
20016db8:	07c1                	addi	a5,a5,16
20016dba:	439c                	lw	a5,0(a5)
20016dbc:	fec42703          	lw	a4,-20(s0)
20016dc0:	0741                	addi	a4,a4,16
20016dc2:	0027e793          	ori	a5,a5,2
20016dc6:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:63
    return 0;
20016dc8:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:64
}
20016dca:	853e                	mv	a0,a5
20016dcc:	50b2                	lw	ra,44(sp)
20016dce:	5422                	lw	s0,40(sp)
20016dd0:	6145                	addi	sp,sp,48
20016dd2:	8082                	ret

20016dd4 <__metal_driver_sifive_uart0_rx_interrupt_disable>:
__metal_driver_sifive_uart0_rx_interrupt_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:66

int __metal_driver_sifive_uart0_rx_interrupt_disable(struct metal_uart *uart) {
20016dd4:	7179                	addi	sp,sp,-48
20016dd6:	d606                	sw	ra,44(sp)
20016dd8:	d422                	sw	s0,40(sp)
20016dda:	1800                	addi	s0,sp,48
20016ddc:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:67
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20016de0:	fdc42503          	lw	a0,-36(s0)
20016de4:	d3dff0ef          	jal	ra,20016b20 <__metal_driver_sifive_uart0_control_base>
20016de8:	87aa                	mv	a5,a0
20016dea:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:69

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_RXWM;
20016dee:	fec42783          	lw	a5,-20(s0)
20016df2:	07c1                	addi	a5,a5,16
20016df4:	439c                	lw	a5,0(a5)
20016df6:	fec42703          	lw	a4,-20(s0)
20016dfa:	0741                	addi	a4,a4,16
20016dfc:	9bf5                	andi	a5,a5,-3
20016dfe:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:70
    return 0;
20016e00:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:71
}
20016e02:	853e                	mv	a0,a5
20016e04:	50b2                	lw	ra,44(sp)
20016e06:	5422                	lw	s0,40(sp)
20016e08:	6145                	addi	sp,sp,48
20016e0a:	8082                	ret

20016e0c <__metal_driver_sifive_uart0_txready>:
__metal_driver_sifive_uart0_txready():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:73

int __metal_driver_sifive_uart0_txready(struct metal_uart *uart) {
20016e0c:	7179                	addi	sp,sp,-48
20016e0e:	d606                	sw	ra,44(sp)
20016e10:	d422                	sw	s0,40(sp)
20016e12:	1800                	addi	s0,sp,48
20016e14:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:74
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20016e18:	fdc42503          	lw	a0,-36(s0)
20016e1c:	d05ff0ef          	jal	ra,20016b20 <__metal_driver_sifive_uart0_control_base>
20016e20:	87aa                	mv	a5,a0
20016e22:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:76

    return !!((UART_REGW(METAL_SIFIVE_UART0_TXDATA) & UART_TXFULL));
20016e26:	fec42783          	lw	a5,-20(s0)
20016e2a:	439c                	lw	a5,0(a5)
20016e2c:	83fd                	srli	a5,a5,0x1f
20016e2e:	0ff7f793          	andi	a5,a5,255
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:77
}
20016e32:	853e                	mv	a0,a5
20016e34:	50b2                	lw	ra,44(sp)
20016e36:	5422                	lw	s0,40(sp)
20016e38:	6145                	addi	sp,sp,48
20016e3a:	8082                	ret

20016e3c <__metal_driver_sifive_uart0_set_tx_watermark>:
__metal_driver_sifive_uart0_set_tx_watermark():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:80

int __metal_driver_sifive_uart0_set_tx_watermark(struct metal_uart *uart,
                                                 size_t level) {
20016e3c:	7179                	addi	sp,sp,-48
20016e3e:	d606                	sw	ra,44(sp)
20016e40:	d422                	sw	s0,40(sp)
20016e42:	1800                	addi	s0,sp,48
20016e44:	fca42e23          	sw	a0,-36(s0)
20016e48:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:81
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20016e4c:	fdc42503          	lw	a0,-36(s0)
20016e50:	cd1ff0ef          	jal	ra,20016b20 <__metal_driver_sifive_uart0_control_base>
20016e54:	87aa                	mv	a5,a0
20016e56:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:83

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(level);
20016e5a:	fec42783          	lw	a5,-20(s0)
20016e5e:	07a1                	addi	a5,a5,8
20016e60:	4398                	lw	a4,0(a5)
20016e62:	fd842783          	lw	a5,-40(s0)
20016e66:	01079693          	slli	a3,a5,0x10
20016e6a:	000707b7          	lui	a5,0x70
20016e6e:	8ff5                	and	a5,a5,a3
20016e70:	fec42683          	lw	a3,-20(s0)
20016e74:	06a1                	addi	a3,a3,8
20016e76:	8fd9                	or	a5,a5,a4
20016e78:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:84
    return 0;
20016e7a:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:85
}
20016e7c:	853e                	mv	a0,a5
20016e7e:	50b2                	lw	ra,44(sp)
20016e80:	5422                	lw	s0,40(sp)
20016e82:	6145                	addi	sp,sp,48
20016e84:	8082                	ret

20016e86 <__metal_driver_sifive_uart0_get_tx_watermark>:
__metal_driver_sifive_uart0_get_tx_watermark():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:87

size_t __metal_driver_sifive_uart0_get_tx_watermark(struct metal_uart *uart) {
20016e86:	7179                	addi	sp,sp,-48
20016e88:	d606                	sw	ra,44(sp)
20016e8a:	d422                	sw	s0,40(sp)
20016e8c:	1800                	addi	s0,sp,48
20016e8e:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:88
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20016e92:	fdc42503          	lw	a0,-36(s0)
20016e96:	c8bff0ef          	jal	ra,20016b20 <__metal_driver_sifive_uart0_control_base>
20016e9a:	87aa                	mv	a5,a0
20016e9c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:90

    return ((UART_REGW(METAL_SIFIVE_UART0_TXCTRL) >> 16) & 0x7);
20016ea0:	fec42783          	lw	a5,-20(s0)
20016ea4:	07a1                	addi	a5,a5,8
20016ea6:	439c                	lw	a5,0(a5)
20016ea8:	83c1                	srli	a5,a5,0x10
20016eaa:	8b9d                	andi	a5,a5,7
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:91
}
20016eac:	853e                	mv	a0,a5
20016eae:	50b2                	lw	ra,44(sp)
20016eb0:	5422                	lw	s0,40(sp)
20016eb2:	6145                	addi	sp,sp,48
20016eb4:	8082                	ret

20016eb6 <__metal_driver_sifive_uart0_set_rx_watermark>:
__metal_driver_sifive_uart0_set_rx_watermark():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:94

int __metal_driver_sifive_uart0_set_rx_watermark(struct metal_uart *uart,
                                                 size_t level) {
20016eb6:	7179                	addi	sp,sp,-48
20016eb8:	d606                	sw	ra,44(sp)
20016eba:	d422                	sw	s0,40(sp)
20016ebc:	1800                	addi	s0,sp,48
20016ebe:	fca42e23          	sw	a0,-36(s0)
20016ec2:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:95
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20016ec6:	fdc42503          	lw	a0,-36(s0)
20016eca:	c57ff0ef          	jal	ra,20016b20 <__metal_driver_sifive_uart0_control_base>
20016ece:	87aa                	mv	a5,a0
20016ed0:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:97

    UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXCNT(level);
20016ed4:	fec42783          	lw	a5,-20(s0)
20016ed8:	07b1                	addi	a5,a5,12
20016eda:	4398                	lw	a4,0(a5)
20016edc:	fd842783          	lw	a5,-40(s0)
20016ee0:	01079693          	slli	a3,a5,0x10
20016ee4:	000707b7          	lui	a5,0x70
20016ee8:	8ff5                	and	a5,a5,a3
20016eea:	fec42683          	lw	a3,-20(s0)
20016eee:	06b1                	addi	a3,a3,12
20016ef0:	8fd9                	or	a5,a5,a4
20016ef2:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:98
    return 0;
20016ef4:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:99
}
20016ef6:	853e                	mv	a0,a5
20016ef8:	50b2                	lw	ra,44(sp)
20016efa:	5422                	lw	s0,40(sp)
20016efc:	6145                	addi	sp,sp,48
20016efe:	8082                	ret

20016f00 <__metal_driver_sifive_uart0_get_rx_watermark>:
__metal_driver_sifive_uart0_get_rx_watermark():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:101

size_t __metal_driver_sifive_uart0_get_rx_watermark(struct metal_uart *uart) {
20016f00:	7179                	addi	sp,sp,-48
20016f02:	d606                	sw	ra,44(sp)
20016f04:	d422                	sw	s0,40(sp)
20016f06:	1800                	addi	s0,sp,48
20016f08:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:102
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20016f0c:	fdc42503          	lw	a0,-36(s0)
20016f10:	c11ff0ef          	jal	ra,20016b20 <__metal_driver_sifive_uart0_control_base>
20016f14:	87aa                	mv	a5,a0
20016f16:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:104

    return ((UART_REGW(METAL_SIFIVE_UART0_RXCTRL) >> 16) & 0x7);
20016f1a:	fec42783          	lw	a5,-20(s0)
20016f1e:	07b1                	addi	a5,a5,12
20016f20:	439c                	lw	a5,0(a5)
20016f22:	83c1                	srli	a5,a5,0x10
20016f24:	8b9d                	andi	a5,a5,7
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:105
}
20016f26:	853e                	mv	a0,a5
20016f28:	50b2                	lw	ra,44(sp)
20016f2a:	5422                	lw	s0,40(sp)
20016f2c:	6145                	addi	sp,sp,48
20016f2e:	8082                	ret

20016f30 <__metal_driver_sifive_uart0_putc>:
__metal_driver_sifive_uart0_putc():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:107

int __metal_driver_sifive_uart0_putc(struct metal_uart *uart, int c) {
20016f30:	7179                	addi	sp,sp,-48
20016f32:	d606                	sw	ra,44(sp)
20016f34:	d422                	sw	s0,40(sp)
20016f36:	1800                	addi	s0,sp,48
20016f38:	fca42e23          	sw	a0,-36(s0)
20016f3c:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:108
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20016f40:	fdc42503          	lw	a0,-36(s0)
20016f44:	bddff0ef          	jal	ra,20016b20 <__metal_driver_sifive_uart0_control_base>
20016f48:	87aa                	mv	a5,a0
20016f4a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:110

    while (__metal_driver_sifive_uart0_txready(uart) != 0) {
20016f4e:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:110 (discriminator 1)
20016f50:	fdc42503          	lw	a0,-36(s0)
20016f54:	eb9ff0ef          	jal	ra,20016e0c <__metal_driver_sifive_uart0_txready>
20016f58:	87aa                	mv	a5,a0
20016f5a:	fbfd                	bnez	a5,20016f50 <__metal_driver_sifive_uart0_putc+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:113
        /* wait */
    }
    UART_REGW(METAL_SIFIVE_UART0_TXDATA) = c;
20016f5c:	fec42783          	lw	a5,-20(s0)
20016f60:	fd842703          	lw	a4,-40(s0)
20016f64:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:114
    return 0;
20016f66:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:115
}
20016f68:	853e                	mv	a0,a5
20016f6a:	50b2                	lw	ra,44(sp)
20016f6c:	5422                	lw	s0,40(sp)
20016f6e:	6145                	addi	sp,sp,48
20016f70:	8082                	ret

20016f72 <__metal_driver_sifive_uart0_getc>:
__metal_driver_sifive_uart0_getc():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:117

int __metal_driver_sifive_uart0_getc(struct metal_uart *uart, int *c) {
20016f72:	7179                	addi	sp,sp,-48
20016f74:	d606                	sw	ra,44(sp)
20016f76:	d422                	sw	s0,40(sp)
20016f78:	1800                	addi	s0,sp,48
20016f7a:	fca42e23          	sw	a0,-36(s0)
20016f7e:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:119
    uint32_t ch;
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20016f82:	fdc42503          	lw	a0,-36(s0)
20016f86:	b9bff0ef          	jal	ra,20016b20 <__metal_driver_sifive_uart0_control_base>
20016f8a:	87aa                	mv	a5,a0
20016f8c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:121
    /* No seperate status register, we get status and the byte at same time */
    ch = UART_REGW(METAL_SIFIVE_UART0_RXDATA);
20016f90:	fec42783          	lw	a5,-20(s0)
20016f94:	0791                	addi	a5,a5,4
20016f96:	439c                	lw	a5,0(a5)
20016f98:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:123
    ;
    if (ch & UART_RXEMPTY) {
20016f9c:	fe842783          	lw	a5,-24(s0)
20016fa0:	0007d763          	bgez	a5,20016fae <__metal_driver_sifive_uart0_getc+0x3c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:124
        *c = -1; /* aka: EOF in most of the world */
20016fa4:	fd842783          	lw	a5,-40(s0)
20016fa8:	577d                	li	a4,-1
20016faa:	c398                	sw	a4,0(a5)
20016fac:	a801                	j	20016fbc <__metal_driver_sifive_uart0_getc+0x4a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:126
    } else {
        *c = ch & 0x0ff;
20016fae:	fe842783          	lw	a5,-24(s0)
20016fb2:	0ff7f713          	andi	a4,a5,255
20016fb6:	fd842783          	lw	a5,-40(s0)
20016fba:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:128
    }
    return 0;
20016fbc:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:129
}
20016fbe:	853e                	mv	a0,a5
20016fc0:	50b2                	lw	ra,44(sp)
20016fc2:	5422                	lw	s0,40(sp)
20016fc4:	6145                	addi	sp,sp,48
20016fc6:	8082                	ret

20016fc8 <__metal_driver_sifive_uart0_get_baud_rate>:
__metal_driver_sifive_uart0_get_baud_rate():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:131

int __metal_driver_sifive_uart0_get_baud_rate(struct metal_uart *guart) {
20016fc8:	7179                	addi	sp,sp,-48
20016fca:	d622                	sw	s0,44(sp)
20016fcc:	1800                	addi	s0,sp,48
20016fce:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:132
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
20016fd2:	fdc42783          	lw	a5,-36(s0)
20016fd6:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:133
    return uart->baud_rate;
20016fda:	fec42783          	lw	a5,-20(s0)
20016fde:	43dc                	lw	a5,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:134
}
20016fe0:	853e                	mv	a0,a5
20016fe2:	5432                	lw	s0,44(sp)
20016fe4:	6145                	addi	sp,sp,48
20016fe6:	8082                	ret

20016fe8 <__metal_driver_sifive_uart0_set_baud_rate>:
__metal_driver_sifive_uart0_set_baud_rate():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:137

int __metal_driver_sifive_uart0_set_baud_rate(struct metal_uart *guart,
                                              int baud_rate) {
20016fe8:	7179                	addi	sp,sp,-48
20016fea:	d606                	sw	ra,44(sp)
20016fec:	d422                	sw	s0,40(sp)
20016fee:	1800                	addi	s0,sp,48
20016ff0:	fca42e23          	sw	a0,-36(s0)
20016ff4:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:138
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
20016ff8:	fdc42783          	lw	a5,-36(s0)
20016ffc:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:139
    long control_base = __metal_driver_sifive_uart0_control_base(guart);
20017000:	fdc42503          	lw	a0,-36(s0)
20017004:	b1dff0ef          	jal	ra,20016b20 <__metal_driver_sifive_uart0_control_base>
20017008:	87aa                	mv	a5,a0
2001700a:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:140
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
2001700e:	fdc42503          	lw	a0,-36(s0)
20017012:	bd3ff0ef          	jal	ra,20016be4 <__metal_driver_sifive_uart0_clock>
20017016:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:142

    uart->baud_rate = baud_rate;
2001701a:	fd842703          	lw	a4,-40(s0)
2001701e:	fec42783          	lw	a5,-20(s0)
20017022:	c3d8                	sw	a4,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:144

    if (clock != NULL) {
20017024:	fe442783          	lw	a5,-28(s0)
20017028:	cbb1                	beqz	a5,2001707c <__metal_driver_sifive_uart0_set_baud_rate+0x94>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:145
        long clock_rate = clock->vtable->get_rate_hz(clock);
2001702a:	fe442783          	lw	a5,-28(s0)
2001702e:	439c                	lw	a5,0(a5)
20017030:	439c                	lw	a5,0(a5)
20017032:	fe442503          	lw	a0,-28(s0)
20017036:	9782                	jalr	a5
20017038:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:146
        UART_REGW(METAL_SIFIVE_UART0_DIV) = clock_rate / baud_rate - 1;
2001703c:	fe042703          	lw	a4,-32(s0)
20017040:	fd842783          	lw	a5,-40(s0)
20017044:	02f747b3          	div	a5,a4,a5
20017048:	fff78713          	addi	a4,a5,-1 # 6ffff <__heap_size+0x6f7ff>
2001704c:	fe842783          	lw	a5,-24(s0)
20017050:	07e1                	addi	a5,a5,24
20017052:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:147
        UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXEN;
20017054:	fe842783          	lw	a5,-24(s0)
20017058:	07a1                	addi	a5,a5,8
2001705a:	439c                	lw	a5,0(a5)
2001705c:	fe842703          	lw	a4,-24(s0)
20017060:	0721                	addi	a4,a4,8
20017062:	0017e793          	ori	a5,a5,1
20017066:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:148
        UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXEN;
20017068:	fe842783          	lw	a5,-24(s0)
2001706c:	07b1                	addi	a5,a5,12
2001706e:	439c                	lw	a5,0(a5)
20017070:	fe842703          	lw	a4,-24(s0)
20017074:	0731                	addi	a4,a4,12
20017076:	0017e793          	ori	a5,a5,1
2001707a:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:150
    }
    return 0;
2001707c:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:151
}
2001707e:	853e                	mv	a0,a5
20017080:	50b2                	lw	ra,44(sp)
20017082:	5422                	lw	s0,40(sp)
20017084:	6145                	addi	sp,sp,48
20017086:	8082                	ret

20017088 <pre_rate_change_callback_func>:
pre_rate_change_callback_func():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:153

static void pre_rate_change_callback_func(void *priv) {
20017088:	7139                	addi	sp,sp,-64
2001708a:	de06                	sw	ra,60(sp)
2001708c:	dc22                	sw	s0,56(sp)
2001708e:	0080                	addi	s0,sp,64
20017090:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:154
    struct __metal_driver_sifive_uart0 *uart = priv;
20017094:	fcc42783          	lw	a5,-52(s0)
20017098:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:156
    long control_base =
        __metal_driver_sifive_uart0_control_base((struct metal_uart *)priv);
2001709c:	fcc42503          	lw	a0,-52(s0)
200170a0:	a81ff0ef          	jal	ra,20016b20 <__metal_driver_sifive_uart0_control_base>
200170a4:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:155
    long control_base =
200170a6:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:158
    struct metal_clock *clock =
        __metal_driver_sifive_uart0_clock((struct metal_uart *)priv);
200170aa:	fcc42503          	lw	a0,-52(s0)
200170ae:	b37ff0ef          	jal	ra,20016be4 <__metal_driver_sifive_uart0_clock>
200170b2:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:163

    /* Detect when the TXDATA is empty by setting the transmit watermark count
     * to one and waiting until an interrupt is pending */

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) &= ~(UART_TXCNT(0x7));
200170b6:	fe842783          	lw	a5,-24(s0)
200170ba:	07a1                	addi	a5,a5,8
200170bc:	4398                	lw	a4,0(a5)
200170be:	fe842783          	lw	a5,-24(s0)
200170c2:	07a1                	addi	a5,a5,8
200170c4:	86be                	mv	a3,a5
200170c6:	fff907b7          	lui	a5,0xfff90
200170ca:	17fd                	addi	a5,a5,-1
200170cc:	8ff9                	and	a5,a5,a4
200170ce:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:164
    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(1);
200170d0:	fe842783          	lw	a5,-24(s0)
200170d4:	07a1                	addi	a5,a5,8
200170d6:	4398                	lw	a4,0(a5)
200170d8:	fe842783          	lw	a5,-24(s0)
200170dc:	07a1                	addi	a5,a5,8
200170de:	86be                	mv	a3,a5
200170e0:	67c1                	lui	a5,0x10
200170e2:	8fd9                	or	a5,a5,a4
200170e4:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:166

    while ((UART_REGW(METAL_SIFIVE_UART0_IP) & UART_TXWM) == 0)
200170e6:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:166 (discriminator 1)
200170e8:	fe842783          	lw	a5,-24(s0)
200170ec:	07d1                	addi	a5,a5,20
200170ee:	439c                	lw	a5,0(a5)
200170f0:	8b85                	andi	a5,a5,1
200170f2:	dbfd                	beqz	a5,200170e8 <pre_rate_change_callback_func+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:174
    /* When the TXDATA clears, the UART is still shifting out the last byte.
     * Calculate the time we must drain to finish transmitting and then wait
     * that long. */

    long bits_per_symbol =
        (UART_REGW(METAL_SIFIVE_UART0_TXCTRL) & (1 << 1)) ? 9 : 10;
200170f4:	fe842783          	lw	a5,-24(s0)
200170f8:	07a1                	addi	a5,a5,8
200170fa:	439c                	lw	a5,0(a5)
200170fc:	8b89                	andi	a5,a5,2
200170fe:	c399                	beqz	a5,20017104 <pre_rate_change_callback_func+0x7c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 1)
20017100:	47a5                	li	a5,9
20017102:	a011                	j	20017106 <pre_rate_change_callback_func+0x7e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 2)
20017104:	47a9                	li	a5,10
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:173
    long bits_per_symbol =
20017106:	fef42023          	sw	a5,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:175
    long clk_freq = clock->vtable->get_rate_hz(clock);
2001710a:	fe442783          	lw	a5,-28(s0)
2001710e:	439c                	lw	a5,0(a5)
20017110:	439c                	lw	a5,0(a5)
20017112:	fe442503          	lw	a0,-28(s0)
20017116:	9782                	jalr	a5
20017118:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:176
    long cycles_to_wait = bits_per_symbol * clk_freq / uart->baud_rate;
2001711c:	fe042703          	lw	a4,-32(s0)
20017120:	fdc42783          	lw	a5,-36(s0)
20017124:	02f707b3          	mul	a5,a4,a5
20017128:	873e                	mv	a4,a5
2001712a:	fec42783          	lw	a5,-20(s0)
2001712e:	43dc                	lw	a5,4(a5)
20017130:	02f757b3          	divu	a5,a4,a5
20017134:	fcf42c23          	sw	a5,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:178

    for (volatile long x = 0; x < cycles_to_wait; x++)
20017138:	fc042a23          	sw	zero,-44(s0)
2001713c:	a039                	j	2001714a <pre_rate_change_callback_func+0xc2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:179 (discriminator 3)
        __asm__("nop");
2001713e:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 3)
    for (volatile long x = 0; x < cycles_to_wait; x++)
20017140:	fd442783          	lw	a5,-44(s0)
20017144:	0785                	addi	a5,a5,1
20017146:	fcf42a23          	sw	a5,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 1)
2001714a:	fd442783          	lw	a5,-44(s0)
2001714e:	fd842703          	lw	a4,-40(s0)
20017152:	fee7c6e3          	blt	a5,a4,2001713e <pre_rate_change_callback_func+0xb6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:180
}
20017156:	0001                	nop
20017158:	50f2                	lw	ra,60(sp)
2001715a:	5462                	lw	s0,56(sp)
2001715c:	6121                	addi	sp,sp,64
2001715e:	8082                	ret

20017160 <post_rate_change_callback_func>:
post_rate_change_callback_func():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:182

static void post_rate_change_callback_func(void *priv) {
20017160:	7179                	addi	sp,sp,-48
20017162:	d606                	sw	ra,44(sp)
20017164:	d422                	sw	s0,40(sp)
20017166:	1800                	addi	s0,sp,48
20017168:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:183
    struct __metal_driver_sifive_uart0 *uart = priv;
2001716c:	fdc42783          	lw	a5,-36(s0)
20017170:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:184
    metal_uart_set_baud_rate(&uart->uart, uart->baud_rate);
20017174:	fec42703          	lw	a4,-20(s0)
20017178:	fec42783          	lw	a5,-20(s0)
2001717c:	43dc                	lw	a5,4(a5)
2001717e:	85be                	mv	a1,a5
20017180:	853a                	mv	a0,a4
20017182:	236d                	jal	2001772c <metal_uart_set_baud_rate>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:185
}
20017184:	0001                	nop
20017186:	50b2                	lw	ra,44(sp)
20017188:	5422                	lw	s0,40(sp)
2001718a:	6145                	addi	sp,sp,48
2001718c:	8082                	ret

2001718e <__metal_driver_sifive_uart0_init>:
__metal_driver_sifive_uart0_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:187

void __metal_driver_sifive_uart0_init(struct metal_uart *guart, int baud_rate) {
2001718e:	7139                	addi	sp,sp,-64
20017190:	de06                	sw	ra,60(sp)
20017192:	dc22                	sw	s0,56(sp)
20017194:	0080                	addi	s0,sp,64
20017196:	fca42623          	sw	a0,-52(s0)
2001719a:	fcb42423          	sw	a1,-56(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:188
    struct __metal_driver_sifive_uart0 *uart = (void *)(guart);
2001719e:	fcc42783          	lw	a5,-52(s0)
200171a2:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:189
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
200171a6:	fcc42503          	lw	a0,-52(s0)
200171aa:	a3bff0ef          	jal	ra,20016be4 <__metal_driver_sifive_uart0_clock>
200171ae:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:191
    struct __metal_driver_sifive_gpio0 *pinmux =
        __metal_driver_sifive_uart0_pinmux(guart);
200171b2:	fcc42503          	lw	a0,-52(s0)
200171b6:	a77ff0ef          	jal	ra,20016c2c <__metal_driver_sifive_uart0_pinmux>
200171ba:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:193

    if (clock != NULL) {
200171be:	fe842783          	lw	a5,-24(s0)
200171c2:	c7b9                	beqz	a5,20017210 <__metal_driver_sifive_uart0_init+0x82>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:194
        uart->pre_rate_change_callback.callback =
200171c4:	fec42783          	lw	a5,-20(s0)
200171c8:	20017737          	lui	a4,0x20017
200171cc:	08870713          	addi	a4,a4,136 # 20017088 <pre_rate_change_callback_func>
200171d0:	c798                	sw	a4,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:196
            &pre_rate_change_callback_func;
        uart->pre_rate_change_callback.priv = guart;
200171d2:	fec42783          	lw	a5,-20(s0)
200171d6:	fcc42703          	lw	a4,-52(s0)
200171da:	c7d8                	sw	a4,12(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:197
        metal_clock_register_pre_rate_change_callback(
200171dc:	fec42783          	lw	a5,-20(s0)
200171e0:	07a1                	addi	a5,a5,8
200171e2:	85be                	mv	a1,a5
200171e4:	fe842503          	lw	a0,-24(s0)
200171e8:	2aad                	jal	20017362 <metal_clock_register_pre_rate_change_callback>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:200
            clock, &(uart->pre_rate_change_callback));

        uart->post_rate_change_callback.callback =
200171ea:	fec42783          	lw	a5,-20(s0)
200171ee:	20017737          	lui	a4,0x20017
200171f2:	16070713          	addi	a4,a4,352 # 20017160 <post_rate_change_callback_func>
200171f6:	cbd8                	sw	a4,20(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:202
            &post_rate_change_callback_func;
        uart->post_rate_change_callback.priv = guart;
200171f8:	fec42783          	lw	a5,-20(s0)
200171fc:	fcc42703          	lw	a4,-52(s0)
20017200:	cf98                	sw	a4,24(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:203
        metal_clock_register_post_rate_change_callback(
20017202:	fec42783          	lw	a5,-20(s0)
20017206:	07d1                	addi	a5,a5,20
20017208:	85be                	mv	a1,a5
2001720a:	fe842503          	lw	a0,-24(s0)
2001720e:	2251                	jal	20017392 <metal_clock_register_post_rate_change_callback>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:207
            clock, &(uart->post_rate_change_callback));
    }

    metal_uart_set_baud_rate(&(uart->uart), baud_rate);
20017210:	fec42783          	lw	a5,-20(s0)
20017214:	fc842583          	lw	a1,-56(s0)
20017218:	853e                	mv	a0,a5
2001721a:	2b09                	jal	2001772c <metal_uart_set_baud_rate>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:209

    if (pinmux != NULL) {
2001721c:	fe442783          	lw	a5,-28(s0)
20017220:	cb95                	beqz	a5,20017254 <__metal_driver_sifive_uart0_init+0xc6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:211
        long pinmux_output_selector =
            __metal_driver_sifive_uart0_pinmux_output_selector(guart);
20017222:	fcc42503          	lw	a0,-52(s0)
20017226:	a47ff0ef          	jal	ra,20016c6c <__metal_driver_sifive_uart0_pinmux_output_selector>
2001722a:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:210
        long pinmux_output_selector =
2001722c:	fef42023          	sw	a5,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:213
        long pinmux_source_selector =
            __metal_driver_sifive_uart0_pinmux_source_selector(guart);
20017230:	fcc42503          	lw	a0,-52(s0)
20017234:	a75ff0ef          	jal	ra,20016ca8 <__metal_driver_sifive_uart0_pinmux_source_selector>
20017238:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:212
        long pinmux_source_selector =
2001723a:	fcf42e23          	sw	a5,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:214
        pinmux->gpio.vtable->enable_io((struct metal_gpio *)pinmux,
2001723e:	fe442783          	lw	a5,-28(s0)
20017242:	439c                	lw	a5,0(a5)
20017244:	53dc                	lw	a5,36(a5)
20017246:	fdc42603          	lw	a2,-36(s0)
2001724a:	fe042583          	lw	a1,-32(s0)
2001724e:	fe442503          	lw	a0,-28(s0)
20017252:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:218
                                       pinmux_output_selector,
                                       pinmux_source_selector);
    }
}
20017254:	0001                	nop
20017256:	50f2                	lw	ra,60(sp)
20017258:	5462                	lw	s0,56(sp)
2001725a:	6121                	addi	sp,sp,64
2001725c:	8082                	ret

2001725e <_metal_clock_call_all_callbacks>:
_metal_clock_call_all_callbacks():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:50

/*!
 * @brief Call all callbacks in the linked list, if any are registered
 */
__inline__ void
_metal_clock_call_all_callbacks(const metal_clock_callback *const list) {
2001725e:	7179                	addi	sp,sp,-48
20017260:	d606                	sw	ra,44(sp)
20017262:	d422                	sw	s0,40(sp)
20017264:	1800                	addi	s0,sp,48
20017266:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:51
    const metal_clock_callback *current = list;
2001726a:	fdc42783          	lw	a5,-36(s0)
2001726e:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:52
    while (current) {
20017272:	a831                	j	2001728e <_metal_clock_call_all_callbacks+0x30>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:53
        current->callback(current->priv);
20017274:	fec42783          	lw	a5,-20(s0)
20017278:	4398                	lw	a4,0(a5)
2001727a:	fec42783          	lw	a5,-20(s0)
2001727e:	43dc                	lw	a5,4(a5)
20017280:	853e                	mv	a0,a5
20017282:	9702                	jalr	a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:54
        current = current->_next;
20017284:	fec42783          	lw	a5,-20(s0)
20017288:	479c                	lw	a5,8(a5)
2001728a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:52
    while (current) {
2001728e:	fec42783          	lw	a5,-20(s0)
20017292:	f3ed                	bnez	a5,20017274 <_metal_clock_call_all_callbacks+0x16>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:56
    }
}
20017294:	0001                	nop
20017296:	50b2                	lw	ra,44(sp)
20017298:	5422                	lw	s0,40(sp)
2001729a:	6145                	addi	sp,sp,48
2001729c:	8082                	ret

2001729e <_metal_clock_append_to_callbacks>:
_metal_clock_append_to_callbacks():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:63
/*!
 * @brief Append a callback to the linked list and return the head of the list
 */
__inline__ metal_clock_callback *
_metal_clock_append_to_callbacks(metal_clock_callback *list,
                                 metal_clock_callback *const cb) {
2001729e:	7179                	addi	sp,sp,-48
200172a0:	d622                	sw	s0,44(sp)
200172a2:	1800                	addi	s0,sp,48
200172a4:	fca42e23          	sw	a0,-36(s0)
200172a8:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:64
    cb->_next = NULL;
200172ac:	fd842783          	lw	a5,-40(s0)
200172b0:	0007a423          	sw	zero,8(a5) # 10008 <__heap_size+0xf808>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:66

    if (!list) {
200172b4:	fdc42783          	lw	a5,-36(s0)
200172b8:	e781                	bnez	a5,200172c0 <_metal_clock_append_to_callbacks+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:67
        return cb;
200172ba:	fd842783          	lw	a5,-40(s0)
200172be:	a035                	j	200172ea <_metal_clock_append_to_callbacks+0x4c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:70
    }

    metal_clock_callback *current = list;
200172c0:	fdc42783          	lw	a5,-36(s0)
200172c4:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:72

    while ((current->_next) != NULL) {
200172c8:	a031                	j	200172d4 <_metal_clock_append_to_callbacks+0x36>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:73
        current = current->_next;
200172ca:	fec42783          	lw	a5,-20(s0)
200172ce:	479c                	lw	a5,8(a5)
200172d0:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:72
    while ((current->_next) != NULL) {
200172d4:	fec42783          	lw	a5,-20(s0)
200172d8:	479c                	lw	a5,8(a5)
200172da:	fbe5                	bnez	a5,200172ca <_metal_clock_append_to_callbacks+0x2c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:76
    }

    current->_next = cb;
200172dc:	fec42783          	lw	a5,-20(s0)
200172e0:	fd842703          	lw	a4,-40(s0)
200172e4:	c798                	sw	a4,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:78

    return list;
200172e6:	fdc42783          	lw	a5,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:79
}
200172ea:	853e                	mv	a0,a5
200172ec:	5432                	lw	s0,44(sp)
200172ee:	6145                	addi	sp,sp,48
200172f0:	8082                	ret

200172f2 <metal_clock_get_rate_hz>:
metal_clock_get_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:110
 * @brief Returns the current rate of the given clock
 *
 * @param clk The handle for the clock
 * @return The current rate of the clock in Hz
 */
__inline__ long metal_clock_get_rate_hz(const struct metal_clock *clk) {
200172f2:	1101                	addi	sp,sp,-32
200172f4:	ce06                	sw	ra,28(sp)
200172f6:	cc22                	sw	s0,24(sp)
200172f8:	1000                	addi	s0,sp,32
200172fa:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:111
    return clk->vtable->get_rate_hz(clk);
200172fe:	fec42783          	lw	a5,-20(s0)
20017302:	439c                	lw	a5,0(a5)
20017304:	439c                	lw	a5,0(a5)
20017306:	fec42503          	lw	a0,-20(s0)
2001730a:	9782                	jalr	a5
2001730c:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:112
}
2001730e:	853e                	mv	a0,a5
20017310:	40f2                	lw	ra,28(sp)
20017312:	4462                	lw	s0,24(sp)
20017314:	6105                	addi	sp,sp,32
20017316:	8082                	ret

20017318 <metal_clock_set_rate_hz>:
metal_clock_set_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:128
 * could be anything!
 *
 * Prior to and after the rate change of the clock, this will call the
 * registered pre- and post-rate change callbacks.
 */
__inline__ long metal_clock_set_rate_hz(struct metal_clock *clk, long hz) {
20017318:	7179                	addi	sp,sp,-48
2001731a:	d606                	sw	ra,44(sp)
2001731c:	d422                	sw	s0,40(sp)
2001731e:	1800                	addi	s0,sp,48
20017320:	fca42e23          	sw	a0,-36(s0)
20017324:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:129
    _metal_clock_call_all_callbacks(clk->_pre_rate_change_callback);
20017328:	fdc42783          	lw	a5,-36(s0)
2001732c:	43dc                	lw	a5,4(a5)
2001732e:	853e                	mv	a0,a5
20017330:	373d                	jal	2001725e <_metal_clock_call_all_callbacks>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:131

    long out = clk->vtable->set_rate_hz(clk, hz);
20017332:	fdc42783          	lw	a5,-36(s0)
20017336:	439c                	lw	a5,0(a5)
20017338:	43dc                	lw	a5,4(a5)
2001733a:	fd842583          	lw	a1,-40(s0)
2001733e:	fdc42503          	lw	a0,-36(s0)
20017342:	9782                	jalr	a5
20017344:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:133

    _metal_clock_call_all_callbacks(clk->_post_rate_change_callback);
20017348:	fdc42783          	lw	a5,-36(s0)
2001734c:	479c                	lw	a5,8(a5)
2001734e:	853e                	mv	a0,a5
20017350:	f0fff0ef          	jal	ra,2001725e <_metal_clock_call_all_callbacks>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:135

    return out;
20017354:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:136
}
20017358:	853e                	mv	a0,a5
2001735a:	50b2                	lw	ra,44(sp)
2001735c:	5422                	lw	s0,40(sp)
2001735e:	6145                	addi	sp,sp,48
20017360:	8082                	ret

20017362 <metal_clock_register_pre_rate_change_callback>:
metal_clock_register_pre_rate_change_callback():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:146
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_pre_rate_change_callback(struct metal_clock *clk,
                                              metal_clock_callback *cb) {
20017362:	1101                	addi	sp,sp,-32
20017364:	ce06                	sw	ra,28(sp)
20017366:	cc22                	sw	s0,24(sp)
20017368:	1000                	addi	s0,sp,32
2001736a:	fea42623          	sw	a0,-20(s0)
2001736e:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:148
    clk->_pre_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_pre_rate_change_callback, cb);
20017372:	fec42783          	lw	a5,-20(s0)
20017376:	43dc                	lw	a5,4(a5)
20017378:	fe842583          	lw	a1,-24(s0)
2001737c:	853e                	mv	a0,a5
2001737e:	3705                	jal	2001729e <_metal_clock_append_to_callbacks>
20017380:	872a                	mv	a4,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:147
    clk->_pre_rate_change_callback =
20017382:	fec42783          	lw	a5,-20(s0)
20017386:	c3d8                	sw	a4,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:149
}
20017388:	0001                	nop
2001738a:	40f2                	lw	ra,28(sp)
2001738c:	4462                	lw	s0,24(sp)
2001738e:	6105                	addi	sp,sp,32
20017390:	8082                	ret

20017392 <metal_clock_register_post_rate_change_callback>:
metal_clock_register_post_rate_change_callback():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:159
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_post_rate_change_callback(struct metal_clock *clk,
                                               metal_clock_callback *cb) {
20017392:	1101                	addi	sp,sp,-32
20017394:	ce06                	sw	ra,28(sp)
20017396:	cc22                	sw	s0,24(sp)
20017398:	1000                	addi	s0,sp,32
2001739a:	fea42623          	sw	a0,-20(s0)
2001739e:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:161
    clk->_post_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_post_rate_change_callback, cb);
200173a2:	fec42783          	lw	a5,-20(s0)
200173a6:	479c                	lw	a5,8(a5)
200173a8:	fe842583          	lw	a1,-24(s0)
200173ac:	853e                	mv	a0,a5
200173ae:	ef1ff0ef          	jal	ra,2001729e <_metal_clock_append_to_callbacks>
200173b2:	872a                	mv	a4,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:160
    clk->_post_rate_change_callback =
200173b4:	fec42783          	lw	a5,-20(s0)
200173b8:	c798                	sw	a4,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:162
}
200173ba:	0001                	nop
200173bc:	40f2                	lw	ra,28(sp)
200173be:	4462                	lw	s0,24(sp)
200173c0:	6105                	addi	sp,sp,32
200173c2:	8082                	ret

200173c4 <metal_cpu_get_timer>:
metal_cpu_get_timer():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:73
 * Get the value of the cycle count timer for a given CPU
 *
 * @param cpu The CPU device handle
 * @return The value of the CPU cycle count timer
 */
__inline__ unsigned long long metal_cpu_get_timer(struct metal_cpu *cpu) {
200173c4:	1101                	addi	sp,sp,-32
200173c6:	ce06                	sw	ra,28(sp)
200173c8:	cc22                	sw	s0,24(sp)
200173ca:	1000                	addi	s0,sp,32
200173cc:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:74
    return cpu->vtable->mcycle_get(cpu);
200173d0:	fec42783          	lw	a5,-20(s0)
200173d4:	439c                	lw	a5,0(a5)
200173d6:	439c                	lw	a5,0(a5)
200173d8:	fec42503          	lw	a0,-20(s0)
200173dc:	9782                	jalr	a5
200173de:	87aa                	mv	a5,a0
200173e0:	882e                	mv	a6,a1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:75
}
200173e2:	853e                	mv	a0,a5
200173e4:	85c2                	mv	a1,a6
200173e6:	40f2                	lw	ra,28(sp)
200173e8:	4462                	lw	s0,24(sp)
200173ea:	6105                	addi	sp,sp,32
200173ec:	8082                	ret

200173ee <metal_cpu_get_timebase>:
metal_cpu_get_timebase():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:84
 * Get the value of the timebase of the cycle count timer
 *
 * @param cpu The CPU device handle
 * @return The value of the cycle count timer timebase
 */
__inline__ unsigned long long metal_cpu_get_timebase(struct metal_cpu *cpu) {
200173ee:	1101                	addi	sp,sp,-32
200173f0:	ce06                	sw	ra,28(sp)
200173f2:	cc22                	sw	s0,24(sp)
200173f4:	1000                	addi	s0,sp,32
200173f6:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:85
    return cpu->vtable->timebase_get(cpu);
200173fa:	fec42783          	lw	a5,-20(s0)
200173fe:	439c                	lw	a5,0(a5)
20017400:	43dc                	lw	a5,4(a5)
20017402:	fec42503          	lw	a0,-20(s0)
20017406:	9782                	jalr	a5
20017408:	87aa                	mv	a5,a0
2001740a:	882e                	mv	a6,a1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:86
}
2001740c:	853e                	mv	a0,a5
2001740e:	85c2                	mv	a1,a6
20017410:	40f2                	lw	ra,28(sp)
20017412:	4462                	lw	s0,24(sp)
20017414:	6105                	addi	sp,sp,32
20017416:	8082                	ret

20017418 <metal_cpu_interrupt_controller>:
metal_cpu_interrupt_controller():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:224
 *
 * @param cpu The CPU device handle
 * @return The handle for the CPU interrupt controller
 */
__inline__ struct metal_interrupt *
metal_cpu_interrupt_controller(struct metal_cpu *cpu) {
20017418:	1101                	addi	sp,sp,-32
2001741a:	ce06                	sw	ra,28(sp)
2001741c:	cc22                	sw	s0,24(sp)
2001741e:	1000                	addi	s0,sp,32
20017420:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:225
    return cpu->vtable->controller_interrupt(cpu);
20017424:	fec42783          	lw	a5,-20(s0)
20017428:	439c                	lw	a5,0(a5)
2001742a:	57dc                	lw	a5,44(a5)
2001742c:	fec42503          	lw	a0,-20(s0)
20017430:	9782                	jalr	a5
20017432:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:226
}
20017434:	853e                	mv	a0,a5
20017436:	40f2                	lw	ra,28(sp)
20017438:	4462                	lw	s0,24(sp)
2001743a:	6105                	addi	sp,sp,32
2001743c:	8082                	ret

2001743e <metal_cpu_get>:
metal_cpu_get():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:7
/* SPDX-License-Identifier: Apache-2.0 */

#include <metal/cpu.h>
#include <metal/machine.h>

struct metal_cpu *metal_cpu_get(unsigned int hartid) {
2001743e:	1101                	addi	sp,sp,-32
20017440:	ce22                	sw	s0,28(sp)
20017442:	1000                	addi	s0,sp,32
20017444:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:8
    if (hartid < __METAL_DT_MAX_HARTS) {
20017448:	fec42783          	lw	a5,-20(s0)
2001744c:	eb99                	bnez	a5,20017462 <metal_cpu_get+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:9
        return (struct metal_cpu *)__metal_cpu_table[hartid];
2001744e:	800017b7          	lui	a5,0x80001
20017452:	fec42703          	lw	a4,-20(s0)
20017456:	070a                	slli	a4,a4,0x2
20017458:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
2001745c:	97ba                	add	a5,a5,a4
2001745e:	439c                	lw	a5,0(a5)
20017460:	a011                	j	20017464 <metal_cpu_get+0x26>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:11
    }
    return NULL;
20017462:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:12
}
20017464:	853e                	mv	a0,a5
20017466:	4472                	lw	s0,28(sp)
20017468:	6105                	addi	sp,sp,32
2001746a:	8082                	ret

2001746c <metal_cpu_get_current_hartid>:
metal_cpu_get_current_hartid():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:14

int metal_cpu_get_current_hartid() {
2001746c:	1101                	addi	sp,sp,-32
2001746e:	ce22                	sw	s0,28(sp)
20017470:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:17
#ifdef __riscv
    int mhartid;
    __asm__ volatile("csrr %0, mhartid" : "=r"(mhartid));
20017472:	f14027f3          	csrr	a5,mhartid
20017476:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:18
    return mhartid;
2001747a:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:20
#endif
}
2001747e:	853e                	mv	a0,a5
20017480:	4472                	lw	s0,28(sp)
20017482:	6105                	addi	sp,sp,32
20017484:	8082                	ret

20017486 <metal_i2c_init>:
metal_i2c_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:48
 * @param i2c The handle for the I2C device to initialize.
 * @param baud_rate The baud rate for the I2C device to operate at.
 * @param mode I2C operation mode.
 */
inline void metal_i2c_init(struct metal_i2c *i2c, unsigned int baud_rate,
                           metal_i2c_mode_t mode) {
20017486:	1101                	addi	sp,sp,-32
20017488:	ce06                	sw	ra,28(sp)
2001748a:	cc22                	sw	s0,24(sp)
2001748c:	1000                	addi	s0,sp,32
2001748e:	fea42623          	sw	a0,-20(s0)
20017492:	feb42423          	sw	a1,-24(s0)
20017496:	fec42223          	sw	a2,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:49
    i2c->vtable->init(i2c, baud_rate, mode);
2001749a:	fec42783          	lw	a5,-20(s0)
2001749e:	439c                	lw	a5,0(a5)
200174a0:	439c                	lw	a5,0(a5)
200174a2:	fe442603          	lw	a2,-28(s0)
200174a6:	fe842583          	lw	a1,-24(s0)
200174aa:	fec42503          	lw	a0,-20(s0)
200174ae:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:50
}
200174b0:	0001                	nop
200174b2:	40f2                	lw	ra,28(sp)
200174b4:	4462                	lw	s0,24(sp)
200174b6:	6105                	addi	sp,sp,32
200174b8:	8082                	ret

200174ba <metal_i2c_write>:
metal_i2c_write():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:62
 * @param stop_bit Enable / Disable STOP condition.
 * @return 0 if the write succeeds.
 */
inline int metal_i2c_write(struct metal_i2c *i2c, unsigned int addr,
                           unsigned int len, unsigned char buf[],
                           metal_i2c_stop_bit_t stop_bit) {
200174ba:	7179                	addi	sp,sp,-48
200174bc:	d606                	sw	ra,44(sp)
200174be:	d422                	sw	s0,40(sp)
200174c0:	1800                	addi	s0,sp,48
200174c2:	fea42623          	sw	a0,-20(s0)
200174c6:	feb42423          	sw	a1,-24(s0)
200174ca:	fec42223          	sw	a2,-28(s0)
200174ce:	fed42023          	sw	a3,-32(s0)
200174d2:	fce42e23          	sw	a4,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:63
    return i2c->vtable->write(i2c, addr, len, buf, stop_bit);
200174d6:	fec42783          	lw	a5,-20(s0)
200174da:	439c                	lw	a5,0(a5)
200174dc:	43dc                	lw	a5,4(a5)
200174de:	fdc42703          	lw	a4,-36(s0)
200174e2:	fe042683          	lw	a3,-32(s0)
200174e6:	fe442603          	lw	a2,-28(s0)
200174ea:	fe842583          	lw	a1,-24(s0)
200174ee:	fec42503          	lw	a0,-20(s0)
200174f2:	9782                	jalr	a5
200174f4:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:64
}
200174f6:	853e                	mv	a0,a5
200174f8:	50b2                	lw	ra,44(sp)
200174fa:	5422                	lw	s0,40(sp)
200174fc:	6145                	addi	sp,sp,48
200174fe:	8082                	ret

20017500 <metal_i2c_read>:
metal_i2c_read():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:76
 * @param stop_bit Enable / Disable STOP condition.
 * @return 0 if the read succeeds.
 */
inline int metal_i2c_read(struct metal_i2c *i2c, unsigned int addr,
                          unsigned int len, unsigned char buf[],
                          metal_i2c_stop_bit_t stop_bit) {
20017500:	7179                	addi	sp,sp,-48
20017502:	d606                	sw	ra,44(sp)
20017504:	d422                	sw	s0,40(sp)
20017506:	1800                	addi	s0,sp,48
20017508:	fea42623          	sw	a0,-20(s0)
2001750c:	feb42423          	sw	a1,-24(s0)
20017510:	fec42223          	sw	a2,-28(s0)
20017514:	fed42023          	sw	a3,-32(s0)
20017518:	fce42e23          	sw	a4,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:77
    return i2c->vtable->read(i2c, addr, len, buf, stop_bit);
2001751c:	fec42783          	lw	a5,-20(s0)
20017520:	439c                	lw	a5,0(a5)
20017522:	479c                	lw	a5,8(a5)
20017524:	fdc42703          	lw	a4,-36(s0)
20017528:	fe042683          	lw	a3,-32(s0)
2001752c:	fe442603          	lw	a2,-28(s0)
20017530:	fe842583          	lw	a1,-24(s0)
20017534:	fec42503          	lw	a0,-20(s0)
20017538:	9782                	jalr	a5
2001753a:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:78
}
2001753c:	853e                	mv	a0,a5
2001753e:	50b2                	lw	ra,44(sp)
20017540:	5422                	lw	s0,40(sp)
20017542:	6145                	addi	sp,sp,48
20017544:	8082                	ret

20017546 <metal_i2c_set_baud_rate>:
metal_i2c_set_baud_rate():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:108
/*! @brief Set the current baud rate of the I2C device.
 * @param i2c The handle for the I2C device.
 * @param baud_rate The desired baud rate of the I2C device.
 * @return 0 If the baud rate is successfully changed.
 */
inline int metal_i2c_set_baud_rate(struct metal_i2c *i2c, int baud_rate) {
20017546:	1101                	addi	sp,sp,-32
20017548:	ce06                	sw	ra,28(sp)
2001754a:	cc22                	sw	s0,24(sp)
2001754c:	1000                	addi	s0,sp,32
2001754e:	fea42623          	sw	a0,-20(s0)
20017552:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:109
    return i2c->vtable->set_baud_rate(i2c, baud_rate);
20017556:	fec42783          	lw	a5,-20(s0)
2001755a:	439c                	lw	a5,0(a5)
2001755c:	4bd8                	lw	a4,20(a5)
2001755e:	fe842783          	lw	a5,-24(s0)
20017562:	85be                	mv	a1,a5
20017564:	fec42503          	lw	a0,-20(s0)
20017568:	9702                	jalr	a4
2001756a:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:110
}
2001756c:	853e                	mv	a0,a5
2001756e:	40f2                	lw	ra,28(sp)
20017570:	4462                	lw	s0,24(sp)
20017572:	6105                	addi	sp,sp,32
20017574:	8082                	ret

20017576 <metal_i2c_get_device>:
metal_i2c_get_device():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/i2c.c:21
                                     unsigned char txbuf[], unsigned int txlen,
                                     unsigned char rxbuf[], unsigned int rxlen);
extern inline int metal_i2c_get_baud_rate(struct metal_i2c *i2c);
extern inline int metal_i2c_set_baud_rate(struct metal_i2c *i2c, int baud_rate);

struct metal_i2c *metal_i2c_get_device(unsigned int device_num) {
20017576:	1101                	addi	sp,sp,-32
20017578:	ce22                	sw	s0,28(sp)
2001757a:	1000                	addi	s0,sp,32
2001757c:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/i2c.c:23
#if __METAL_DT_MAX_I2CS > 0
    if (device_num < __METAL_DT_MAX_I2CS) {
20017580:	fec42783          	lw	a5,-20(s0)
20017584:	eb99                	bnez	a5,2001759a <metal_i2c_get_device+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/i2c.c:24
        return (struct metal_i2c *)__metal_i2c_table[device_num];
20017586:	800017b7          	lui	a5,0x80001
2001758a:	fec42703          	lw	a4,-20(s0)
2001758e:	070a                	slli	a4,a4,0x2
20017590:	ac478793          	addi	a5,a5,-1340 # 80000ac4 <metal_segment_heap_target_end+0xfffff304>
20017594:	97ba                	add	a5,a5,a4
20017596:	439c                	lw	a5,0(a5)
20017598:	a011                	j	2001759c <metal_i2c_get_device+0x26>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/i2c.c:27
    }
#endif
    return NULL;
2001759a:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/i2c.c:28
}
2001759c:	853e                	mv	a0,a5
2001759e:	4472                	lw	s0,28(sp)
200175a0:	6105                	addi	sp,sp,32
200175a2:	8082                	ret

200175a4 <metal_shutdown>:
metal_shutdown():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/shutdown.c:17
    __metal_shutdown_exit(__METAL_DT_SHUTDOWN_HANDLE, code);
}
#else
#pragma message(                                                               \
    "There is no defined shutdown mechanism, metal_shutdown() will spin.")
void metal_shutdown(int code) {
200175a4:	1101                	addi	sp,sp,-32
200175a6:	ce22                	sw	s0,28(sp)
200175a8:	1000                	addi	s0,sp,32
200175aa:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/shutdown.c:19 (discriminator 1)
    while (1) {
        __asm__ volatile("nop");
200175ae:	0001                	nop
200175b0:	bffd                	j	200175ae <metal_shutdown+0xa>

200175b2 <metal_gettimeofday>:
metal_gettimeofday():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:9
#include <metal/time.h>
#include <metal/timer.h>

#include <stddef.h>

int metal_gettimeofday(struct timeval *tp, void *tzp) {
200175b2:	7139                	addi	sp,sp,-64
200175b4:	de06                	sw	ra,60(sp)
200175b6:	dc22                	sw	s0,56(sp)
200175b8:	da4a                	sw	s2,52(sp)
200175ba:	d84e                	sw	s3,48(sp)
200175bc:	0080                	addi	s0,sp,64
200175be:	fca42623          	sw	a0,-52(s0)
200175c2:	fcb42423          	sw	a1,-56(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:12
    int rv;
    unsigned long long mcc, timebase;
    rv = metal_timer_get_cyclecount(0, &mcc);
200175c6:	fe040793          	addi	a5,s0,-32
200175ca:	85be                	mv	a1,a5
200175cc:	4501                	li	a0,0
200175ce:	24cd                	jal	200178b0 <metal_timer_get_cyclecount>
200175d0:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:13
    if (rv != 0) {
200175d4:	fec42783          	lw	a5,-20(s0)
200175d8:	c399                	beqz	a5,200175de <metal_gettimeofday+0x2c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:14
        return -1;
200175da:	57fd                	li	a5,-1
200175dc:	a07d                	j	2001768a <metal_gettimeofday+0xd8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:16
    }
    rv = metal_timer_get_timebase_frequency(0, &timebase);
200175de:	fd840793          	addi	a5,s0,-40
200175e2:	85be                	mv	a1,a5
200175e4:	4501                	li	a0,0
200175e6:	2e11                	jal	200178fa <metal_timer_get_timebase_frequency>
200175e8:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:17
    if (rv != 0) {
200175ec:	fec42783          	lw	a5,-20(s0)
200175f0:	c399                	beqz	a5,200175f6 <metal_gettimeofday+0x44>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:18
        return -1;
200175f2:	57fd                	li	a5,-1
200175f4:	a859                	j	2001768a <metal_gettimeofday+0xd8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:20
    }
    tp->tv_sec = mcc / timebase;
200175f6:	fe042783          	lw	a5,-32(s0)
200175fa:	fe442803          	lw	a6,-28(s0)
200175fe:	fd842683          	lw	a3,-40(s0)
20017602:	fdc42703          	lw	a4,-36(s0)
20017606:	8636                	mv	a2,a3
20017608:	86ba                	mv	a3,a4
2001760a:	853e                	mv	a0,a5
2001760c:	85c2                	mv	a1,a6
2001760e:	2df5                	jal	20017d0a <__udivdi3>
20017610:	87aa                	mv	a5,a0
20017612:	882e                	mv	a6,a1
20017614:	fcc42703          	lw	a4,-52(s0)
20017618:	c31c                	sw	a5,0(a4)
2001761a:	01072223          	sw	a6,4(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:21
    tp->tv_usec = mcc % timebase * 1000000 / timebase;
2001761e:	fe042783          	lw	a5,-32(s0)
20017622:	fe442803          	lw	a6,-28(s0)
20017626:	fd842683          	lw	a3,-40(s0)
2001762a:	fdc42703          	lw	a4,-36(s0)
2001762e:	8636                	mv	a2,a3
20017630:	86ba                	mv	a3,a4
20017632:	853e                	mv	a0,a5
20017634:	85c2                	mv	a1,a6
20017636:	233000ef          	jal	ra,20018068 <__umoddi3>
2001763a:	87aa                	mv	a5,a0
2001763c:	882e                	mv	a6,a1
2001763e:	000f4737          	lui	a4,0xf4
20017642:	24070713          	addi	a4,a4,576 # f4240 <__heap_size+0xf3a40>
20017646:	02e806b3          	mul	a3,a6,a4
2001764a:	4701                	li	a4,0
2001764c:	02e78733          	mul	a4,a5,a4
20017650:	96ba                	add	a3,a3,a4
20017652:	000f4737          	lui	a4,0xf4
20017656:	24070713          	addi	a4,a4,576 # f4240 <__heap_size+0xf3a40>
2001765a:	02e78633          	mul	a2,a5,a4
2001765e:	02e7b9b3          	mulhu	s3,a5,a4
20017662:	8932                	mv	s2,a2
20017664:	013687b3          	add	a5,a3,s3
20017668:	89be                	mv	s3,a5
2001766a:	fd842783          	lw	a5,-40(s0)
2001766e:	fdc42803          	lw	a6,-36(s0)
20017672:	863e                	mv	a2,a5
20017674:	86c2                	mv	a3,a6
20017676:	854a                	mv	a0,s2
20017678:	85ce                	mv	a1,s3
2001767a:	2d41                	jal	20017d0a <__udivdi3>
2001767c:	87aa                	mv	a5,a0
2001767e:	882e                	mv	a6,a1
20017680:	873e                	mv	a4,a5
20017682:	fcc42783          	lw	a5,-52(s0)
20017686:	c798                	sw	a4,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:22
    return 0;
20017688:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:23 (discriminator 1)
}
2001768a:	853e                	mv	a0,a5
2001768c:	50f2                	lw	ra,60(sp)
2001768e:	5462                	lw	s0,56(sp)
20017690:	5952                	lw	s2,52(sp)
20017692:	59c2                	lw	s3,48(sp)
20017694:	6121                	addi	sp,sp,64
20017696:	8082                	ret

20017698 <metal_time>:
metal_time():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:25

time_t metal_time(void) {
20017698:	1101                	addi	sp,sp,-32
2001769a:	ce06                	sw	ra,28(sp)
2001769c:	cc22                	sw	s0,24(sp)
2001769e:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:28
    struct timeval now;

    if (metal_gettimeofday(&now, NULL) < 0)
200176a0:	fe040793          	addi	a5,s0,-32
200176a4:	4581                	li	a1,0
200176a6:	853e                	mv	a0,a5
200176a8:	f0bff0ef          	jal	ra,200175b2 <metal_gettimeofday>
200176ac:	87aa                	mv	a5,a0
200176ae:	0007d863          	bgez	a5,200176be <metal_time+0x26>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:29
        now.tv_sec = (time_t)-1;
200176b2:	57fd                	li	a5,-1
200176b4:	587d                	li	a6,-1
200176b6:	fef42023          	sw	a5,-32(s0)
200176ba:	ff042223          	sw	a6,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:31

    return now.tv_sec;
200176be:	fe042783          	lw	a5,-32(s0)
200176c2:	fe442803          	lw	a6,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:32
}
200176c6:	853e                	mv	a0,a5
200176c8:	85c2                	mv	a1,a6
200176ca:	40f2                	lw	ra,28(sp)
200176cc:	4462                	lw	s0,24(sp)
200176ce:	6105                	addi	sp,sp,32
200176d0:	8082                	ret

200176d2 <metal_uart_init>:
metal_uart_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:59
 more than once.
 *
 * @param uart The UART device handle
 * @param baud_rate the baud rate to set the UART to
 */
__inline__ void metal_uart_init(struct metal_uart *uart, int baud_rate) {
200176d2:	1101                	addi	sp,sp,-32
200176d4:	ce06                	sw	ra,28(sp)
200176d6:	cc22                	sw	s0,24(sp)
200176d8:	1000                	addi	s0,sp,32
200176da:	fea42623          	sw	a0,-20(s0)
200176de:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:60
    uart->vtable->init(uart, baud_rate);
200176e2:	fec42783          	lw	a5,-20(s0)
200176e6:	439c                	lw	a5,0(a5)
200176e8:	439c                	lw	a5,0(a5)
200176ea:	fe842583          	lw	a1,-24(s0)
200176ee:	fec42503          	lw	a0,-20(s0)
200176f2:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:61
}
200176f4:	0001                	nop
200176f6:	40f2                	lw	ra,28(sp)
200176f8:	4462                	lw	s0,24(sp)
200176fa:	6105                	addi	sp,sp,32
200176fc:	8082                	ret

200176fe <metal_uart_putc>:
metal_uart_putc():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:69
 * @brief Output a character over the UART
 * @param uart The UART device handle
 * @param c The character to send over the UART
 * @return 0 upon success
 */
__inline__ int metal_uart_putc(struct metal_uart *uart, int c) {
200176fe:	1101                	addi	sp,sp,-32
20017700:	ce06                	sw	ra,28(sp)
20017702:	cc22                	sw	s0,24(sp)
20017704:	1000                	addi	s0,sp,32
20017706:	fea42623          	sw	a0,-20(s0)
2001770a:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:70
    return uart->vtable->putc(uart, c);
2001770e:	fec42783          	lw	a5,-20(s0)
20017712:	439c                	lw	a5,0(a5)
20017714:	43dc                	lw	a5,4(a5)
20017716:	fe842583          	lw	a1,-24(s0)
2001771a:	fec42503          	lw	a0,-20(s0)
2001771e:	9782                	jalr	a5
20017720:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:71
}
20017722:	853e                	mv	a0,a5
20017724:	40f2                	lw	ra,28(sp)
20017726:	4462                	lw	s0,24(sp)
20017728:	6105                	addi	sp,sp,32
2001772a:	8082                	ret

2001772c <metal_uart_set_baud_rate>:
metal_uart_set_baud_rate():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:111
 * @param uart The UART device handle
 * @param baud_rate The baud rate to configure
 * @return the new baud rate of the UART
 */
__inline__ int metal_uart_set_baud_rate(struct metal_uart *uart,
                                        int baud_rate) {
2001772c:	1101                	addi	sp,sp,-32
2001772e:	ce06                	sw	ra,28(sp)
20017730:	cc22                	sw	s0,24(sp)
20017732:	1000                	addi	s0,sp,32
20017734:	fea42623          	sw	a0,-20(s0)
20017738:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:112
    return uart->vtable->set_baud_rate(uart, baud_rate);
2001773c:	fec42783          	lw	a5,-20(s0)
20017740:	439c                	lw	a5,0(a5)
20017742:	4bdc                	lw	a5,20(a5)
20017744:	fe842583          	lw	a1,-24(s0)
20017748:	fec42503          	lw	a0,-20(s0)
2001774c:	9782                	jalr	a5
2001774e:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:113
}
20017750:	853e                	mv	a0,a5
20017752:	40f2                	lw	ra,28(sp)
20017754:	4462                	lw	s0,24(sp)
20017756:	6105                	addi	sp,sp,32
20017758:	8082                	ret
	...

20017780 <__metal_vector_table>:
IRQ_0():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:96
#endif
.option norvc
.global __metal_vector_table
__metal_vector_table:
IRQ_0:
        j metal_interrupt_vector_handler
20017780:	e3afb06f          	j	20012dba <metal_interrupt_vector_handler>

20017784 <IRQ_1>:
IRQ_1():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:98
IRQ_1:
        j metal_interrupt_vector_handler
20017784:	e36fb06f          	j	20012dba <metal_interrupt_vector_handler>

20017788 <IRQ_2>:
IRQ_2():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:100
IRQ_2:
        j metal_interrupt_vector_handler
20017788:	e32fb06f          	j	20012dba <metal_interrupt_vector_handler>

2001778c <IRQ_3>:
IRQ_3():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:102
IRQ_3:
        j metal_software_interrupt_vector_handler
2001778c:	e5cfb06f          	j	20012de8 <metal_software_interrupt_vector_handler>

20017790 <IRQ_4>:
IRQ_4():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:104
IRQ_4:
        j metal_interrupt_vector_handler
20017790:	e2afb06f          	j	20012dba <metal_interrupt_vector_handler>

20017794 <IRQ_5>:
IRQ_5():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:106
IRQ_5:
        j metal_interrupt_vector_handler
20017794:	e26fb06f          	j	20012dba <metal_interrupt_vector_handler>

20017798 <IRQ_6>:
IRQ_6():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:108
IRQ_6:
        j metal_interrupt_vector_handler
20017798:	e22fb06f          	j	20012dba <metal_interrupt_vector_handler>

2001779c <IRQ_7>:
IRQ_7():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:110
IRQ_7:
        j metal_timer_interrupt_vector_handler
2001779c:	f46fb06f          	j	20012ee2 <metal_timer_interrupt_vector_handler>

200177a0 <IRQ_8>:
IRQ_8():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:112
IRQ_8:
        j metal_interrupt_vector_handler
200177a0:	e1afb06f          	j	20012dba <metal_interrupt_vector_handler>

200177a4 <IRQ_9>:
IRQ_9():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:114
IRQ_9:
        j metal_interrupt_vector_handler
200177a4:	e16fb06f          	j	20012dba <metal_interrupt_vector_handler>

200177a8 <IRQ_10>:
IRQ_10():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:116
IRQ_10:
        j metal_interrupt_vector_handler
200177a8:	e12fb06f          	j	20012dba <metal_interrupt_vector_handler>

200177ac <IRQ_11>:
IRQ_11():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:118
IRQ_11:
        j metal_interrupt_vector_handler
200177ac:	e0efb06f          	j	20012dba <metal_interrupt_vector_handler>

200177b0 <IRQ_12>:
IRQ_12():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:120
IRQ_12:
        j metal_interrupt_vector_handler
200177b0:	e0afb06f          	j	20012dba <metal_interrupt_vector_handler>

200177b4 <IRQ_13>:
IRQ_13():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:122
IRQ_13:
        j metal_interrupt_vector_handler
200177b4:	e06fb06f          	j	20012dba <metal_interrupt_vector_handler>

200177b8 <IRQ_14>:
IRQ_14():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:124
IRQ_14:
        j metal_interrupt_vector_handler
200177b8:	e02fb06f          	j	20012dba <metal_interrupt_vector_handler>

200177bc <IRQ_15>:
IRQ_15():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:126
IRQ_15:
        j metal_interrupt_vector_handler
200177bc:	dfefb06f          	j	20012dba <metal_interrupt_vector_handler>

200177c0 <IRQ_LC0>:
IRQ_LC0():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:128
IRQ_LC0:
        j metal_lc0_interrupt_vector_handler
200177c0:	a37fb06f          	j	200131f6 <metal_lc0_interrupt_vector_handler>

200177c4 <IRQ_LC1>:
IRQ_LC1():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:130
IRQ_LC1:
        j metal_lc1_interrupt_vector_handler
200177c4:	ac9fb06f          	j	2001328c <metal_lc1_interrupt_vector_handler>

200177c8 <IRQ_LC2>:
IRQ_LC2():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:132
IRQ_LC2:
        j metal_lc2_interrupt_vector_handler
200177c8:	b5bfb06f          	j	20013322 <metal_lc2_interrupt_vector_handler>

200177cc <IRQ_LC3>:
IRQ_LC3():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:134
IRQ_LC3:
        j metal_lc3_interrupt_vector_handler
200177cc:	bedfb06f          	j	200133b8 <metal_lc3_interrupt_vector_handler>

200177d0 <IRQ_LC4>:
IRQ_LC4():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:136
IRQ_LC4:
        j metal_lc4_interrupt_vector_handler
200177d0:	c7ffb06f          	j	2001344e <metal_lc4_interrupt_vector_handler>

200177d4 <IRQ_LC5>:
IRQ_LC5():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:138
IRQ_LC5:
        j metal_lc5_interrupt_vector_handler
200177d4:	d11fb06f          	j	200134e4 <metal_lc5_interrupt_vector_handler>

200177d8 <IRQ_LC6>:
IRQ_LC6():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:140
IRQ_LC6:
        j metal_lc6_interrupt_vector_handler
200177d8:	da3fb06f          	j	2001357a <metal_lc6_interrupt_vector_handler>

200177dc <IRQ_LC7>:
IRQ_LC7():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:142
IRQ_LC7:
        j metal_lc7_interrupt_vector_handler
200177dc:	e35fb06f          	j	20013610 <metal_lc7_interrupt_vector_handler>

200177e0 <IRQ_LC8>:
IRQ_LC8():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:144
IRQ_LC8:
        j metal_lc8_interrupt_vector_handler
200177e0:	ec7fb06f          	j	200136a6 <metal_lc8_interrupt_vector_handler>

200177e4 <IRQ_LC9>:
IRQ_LC9():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:146
IRQ_LC9:
        j metal_lc9_interrupt_vector_handler
200177e4:	f59fb06f          	j	2001373c <metal_lc9_interrupt_vector_handler>

200177e8 <IRQ_LC10>:
IRQ_LC10():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:148
IRQ_LC10:
        j metal_lc10_interrupt_vector_handler
200177e8:	febfb06f          	j	200137d2 <metal_lc10_interrupt_vector_handler>

200177ec <IRQ_LC11>:
IRQ_LC11():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:150
IRQ_LC11:
        j metal_lc11_interrupt_vector_handler
200177ec:	87cfc06f          	j	20013868 <metal_lc11_interrupt_vector_handler>

200177f0 <IRQ_LC12>:
IRQ_LC12():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:152
IRQ_LC12:
        j metal_lc12_interrupt_vector_handler
200177f0:	90efc06f          	j	200138fe <metal_lc12_interrupt_vector_handler>

200177f4 <IRQ_LC13>:
IRQ_LC13():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:154
IRQ_LC13:
        j metal_lc13_interrupt_vector_handler
200177f4:	9a0fc06f          	j	20013994 <metal_lc13_interrupt_vector_handler>

200177f8 <IRQ_LC14>:
IRQ_LC14():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:156
IRQ_LC14:
        j metal_lc14_interrupt_vector_handler
200177f8:	a32fc06f          	j	20013a2a <metal_lc14_interrupt_vector_handler>

200177fc <IRQ_LC15>:
IRQ_LC15():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:158
IRQ_LC15:
        j metal_lc15_interrupt_vector_handler
200177fc:	ac4fc06f          	j	20013ac0 <metal_lc15_interrupt_vector_handler>

20017800 <__metal_driver_fixed_clock_rate>:
__metal_driver_fixed_clock_rate():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:208
{
20017800:	1101                	addi	sp,sp,-32
20017802:	ce22                	sw	s0,28(sp)
20017804:	1000                	addi	s0,sp,32
20017806:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:209
	if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_0) {
2001780a:	fec42703          	lw	a4,-20(s0)
2001780e:	800007b7          	lui	a5,0x80000
20017812:	06078793          	addi	a5,a5,96 # 80000060 <metal_segment_heap_target_end+0xffffe8a0>
20017816:	00f71763          	bne	a4,a5,20017824 <__metal_driver_fixed_clock_rate+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:210
		return METAL_FIXED_CLOCK_0_CLOCK_FREQUENCY;
2001781a:	00f427b7          	lui	a5,0xf42
2001781e:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
20017822:	a099                	j	20017868 <__metal_driver_fixed_clock_rate+0x68>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:212
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_2) {
20017824:	fec42703          	lw	a4,-20(s0)
20017828:	800007b7          	lui	a5,0x80000
2001782c:	06c78793          	addi	a5,a5,108 # 8000006c <metal_segment_heap_target_end+0xffffe8ac>
20017830:	00f71763          	bne	a4,a5,2001783e <__metal_driver_fixed_clock_rate+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:213
		return METAL_FIXED_CLOCK_2_CLOCK_FREQUENCY;
20017834:	044aa7b7          	lui	a5,0x44aa
20017838:	20078793          	addi	a5,a5,512 # 44aa200 <__heap_size+0x44a9a00>
2001783c:	a035                	j	20017868 <__metal_driver_fixed_clock_rate+0x68>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:215
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_5) {
2001783e:	fec42703          	lw	a4,-20(s0)
20017842:	800007b7          	lui	a5,0x80000
20017846:	07878793          	addi	a5,a5,120 # 80000078 <metal_segment_heap_target_end+0xffffe8b8>
2001784a:	00f71463          	bne	a4,a5,20017852 <__metal_driver_fixed_clock_rate+0x52>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:216
		return METAL_FIXED_CLOCK_5_CLOCK_FREQUENCY;
2001784e:	67a1                	lui	a5,0x8
20017850:	a821                	j	20017868 <__metal_driver_fixed_clock_rate+0x68>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:218
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_6) {
20017852:	fec42703          	lw	a4,-20(s0)
20017856:	800007b7          	lui	a5,0x80000
2001785a:	08478793          	addi	a5,a5,132 # 80000084 <metal_segment_heap_target_end+0xffffe8c4>
2001785e:	00f71463          	bne	a4,a5,20017866 <__metal_driver_fixed_clock_rate+0x66>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:219
		return METAL_FIXED_CLOCK_6_CLOCK_FREQUENCY;
20017862:	67a1                	lui	a5,0x8
20017864:	a011                	j	20017868 <__metal_driver_fixed_clock_rate+0x68>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:222
		return 0;
20017866:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:224
}
20017868:	853e                	mv	a0,a5
2001786a:	4472                	lw	s0,28(sp)
2001786c:	6105                	addi	sp,sp,32
2001786e:	8082                	ret

20017870 <__metal_driver_fixed_clock_get_rate_hz>:
__metal_driver_fixed_clock_get_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/fixed-clock.c:12

#include <metal/drivers/fixed-clock.h>
#include <metal/machine.h>
#include <stddef.h>

long __metal_driver_fixed_clock_get_rate_hz(const struct metal_clock *gclk) {
20017870:	1101                	addi	sp,sp,-32
20017872:	ce06                	sw	ra,28(sp)
20017874:	cc22                	sw	s0,24(sp)
20017876:	1000                	addi	s0,sp,32
20017878:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/fixed-clock.c:13
    return __metal_driver_fixed_clock_rate(gclk);
2001787c:	fec42503          	lw	a0,-20(s0)
20017880:	3741                	jal	20017800 <__metal_driver_fixed_clock_rate>
20017882:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/fixed-clock.c:14
}
20017884:	853e                	mv	a0,a5
20017886:	40f2                	lw	ra,28(sp)
20017888:	4462                	lw	s0,24(sp)
2001788a:	6105                	addi	sp,sp,32
2001788c:	8082                	ret

2001788e <__metal_driver_fixed_clock_set_rate_hz>:
__metal_driver_fixed_clock_set_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/fixed-clock.c:17

long __metal_driver_fixed_clock_set_rate_hz(struct metal_clock *gclk,
                                            long target_hz) {
2001788e:	1101                	addi	sp,sp,-32
20017890:	ce06                	sw	ra,28(sp)
20017892:	cc22                	sw	s0,24(sp)
20017894:	1000                	addi	s0,sp,32
20017896:	fea42623          	sw	a0,-20(s0)
2001789a:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/fixed-clock.c:18
    return __metal_driver_fixed_clock_get_rate_hz(gclk);
2001789e:	fec42503          	lw	a0,-20(s0)
200178a2:	37f9                	jal	20017870 <__metal_driver_fixed_clock_get_rate_hz>
200178a4:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/fixed-clock.c:19
}
200178a6:	853e                	mv	a0,a5
200178a8:	40f2                	lw	ra,28(sp)
200178aa:	4462                	lw	s0,24(sp)
200178ac:	6105                	addi	sp,sp,32
200178ae:	8082                	ret

200178b0 <metal_timer_get_cyclecount>:
metal_timer_get_cyclecount():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:15
#endif

#if defined(__METAL_DT_MAX_HARTS)
/* This implementation serves as a small shim that interfaces with the first
 * timer on a system. */
int metal_timer_get_cyclecount(int hartid, unsigned long long *mcc) {
200178b0:	7179                	addi	sp,sp,-48
200178b2:	d606                	sw	ra,44(sp)
200178b4:	d422                	sw	s0,40(sp)
200178b6:	1800                	addi	s0,sp,48
200178b8:	fca42e23          	sw	a0,-36(s0)
200178bc:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:16
    struct metal_cpu *cpu = metal_cpu_get(hartid);
200178c0:	fdc42783          	lw	a5,-36(s0)
200178c4:	853e                	mv	a0,a5
200178c6:	b79ff0ef          	jal	ra,2001743e <metal_cpu_get>
200178ca:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:18

    if (cpu) {
200178ce:	fec42783          	lw	a5,-20(s0)
200178d2:	cf91                	beqz	a5,200178ee <metal_timer_get_cyclecount+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:19
        *mcc = metal_cpu_get_timer(cpu);
200178d4:	fec42503          	lw	a0,-20(s0)
200178d8:	aedff0ef          	jal	ra,200173c4 <metal_cpu_get_timer>
200178dc:	87aa                	mv	a5,a0
200178de:	882e                	mv	a6,a1
200178e0:	fd842703          	lw	a4,-40(s0)
200178e4:	c31c                	sw	a5,0(a4)
200178e6:	01072223          	sw	a6,4(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:20
        return 0;
200178ea:	4781                	li	a5,0
200178ec:	a011                	j	200178f0 <metal_timer_get_cyclecount+0x40>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:22
    }
    return -1;
200178ee:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:23
}
200178f0:	853e                	mv	a0,a5
200178f2:	50b2                	lw	ra,44(sp)
200178f4:	5422                	lw	s0,40(sp)
200178f6:	6145                	addi	sp,sp,48
200178f8:	8082                	ret

200178fa <metal_timer_get_timebase_frequency>:
metal_timer_get_timebase_frequency():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:26

int metal_timer_get_timebase_frequency(int hartid,
                                       unsigned long long *timebase) {
200178fa:	7179                	addi	sp,sp,-48
200178fc:	d606                	sw	ra,44(sp)
200178fe:	d422                	sw	s0,40(sp)
20017900:	1800                	addi	s0,sp,48
20017902:	fca42e23          	sw	a0,-36(s0)
20017906:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:27
    struct metal_cpu *cpu = metal_cpu_get(hartid);
2001790a:	fdc42783          	lw	a5,-36(s0)
2001790e:	853e                	mv	a0,a5
20017910:	b2fff0ef          	jal	ra,2001743e <metal_cpu_get>
20017914:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:29

    if (cpu) {
20017918:	fec42783          	lw	a5,-20(s0)
2001791c:	cf91                	beqz	a5,20017938 <metal_timer_get_timebase_frequency+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:30
        *timebase = metal_cpu_get_timebase(cpu);
2001791e:	fec42503          	lw	a0,-20(s0)
20017922:	acdff0ef          	jal	ra,200173ee <metal_cpu_get_timebase>
20017926:	87aa                	mv	a5,a0
20017928:	882e                	mv	a6,a1
2001792a:	fd842703          	lw	a4,-40(s0)
2001792e:	c31c                	sw	a5,0(a4)
20017930:	01072223          	sw	a6,4(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:31
        return 0;
20017934:	4781                	li	a5,0
20017936:	a011                	j	2001793a <metal_timer_get_timebase_frequency+0x40>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:33
    }
    return -1;
20017938:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:34
}
2001793a:	853e                	mv	a0,a5
2001793c:	50b2                	lw	ra,44(sp)
2001793e:	5422                	lw	s0,40(sp)
20017940:	6145                	addi	sp,sp,48
20017942:	8082                	ret

20017944 <_close>:
_close():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_close.c:3
#include <errno.h>

int _close(int file) {
20017944:	1101                	addi	sp,sp,-32
20017946:	ce06                	sw	ra,28(sp)
20017948:	cc22                	sw	s0,24(sp)
2001794a:	1000                	addi	s0,sp,32
2001794c:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_close.c:4
    errno = ENOSYS;
20017950:	2a51                	jal	20017ae4 <__errno>
20017952:	872a                	mv	a4,a0
20017954:	05800793          	li	a5,88
20017958:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_close.c:5
    return -1;
2001795a:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_close.c:6
}
2001795c:	853e                	mv	a0,a5
2001795e:	40f2                	lw	ra,28(sp)
20017960:	4462                	lw	s0,24(sp)
20017962:	6105                	addi	sp,sp,32
20017964:	8082                	ret

20017966 <_fstat>:
_fstat():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_fstat.c:4
#include <errno.h>
#include <sys/stat.h>

int _fstat(int file, struct stat *st) {
20017966:	1101                	addi	sp,sp,-32
20017968:	ce06                	sw	ra,28(sp)
2001796a:	cc22                	sw	s0,24(sp)
2001796c:	1000                	addi	s0,sp,32
2001796e:	fea42623          	sw	a0,-20(s0)
20017972:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_fstat.c:5
    errno = -ENOSYS;
20017976:	22bd                	jal	20017ae4 <__errno>
20017978:	872a                	mv	a4,a0
2001797a:	fa800793          	li	a5,-88
2001797e:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_fstat.c:6
    return -1;
20017980:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_fstat.c:7
}
20017982:	853e                	mv	a0,a5
20017984:	40f2                	lw	ra,28(sp)
20017986:	4462                	lw	s0,24(sp)
20017988:	6105                	addi	sp,sp,32
2001798a:	8082                	ret

2001798c <_isatty>:
_isatty():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_isatty.c:3
#include <unistd.h>

int _isatty(int file) { return (file == STDOUT_FILENO); }
2001798c:	1101                	addi	sp,sp,-32
2001798e:	ce22                	sw	s0,28(sp)
20017990:	1000                	addi	s0,sp,32
20017992:	fea42623          	sw	a0,-20(s0)
20017996:	fec42783          	lw	a5,-20(s0)
2001799a:	17fd                	addi	a5,a5,-1
2001799c:	0017b793          	seqz	a5,a5
200179a0:	0ff7f793          	andi	a5,a5,255
200179a4:	853e                	mv	a0,a5
200179a6:	4472                	lw	s0,28(sp)
200179a8:	6105                	addi	sp,sp,32
200179aa:	8082                	ret

200179ac <_lseek>:
_lseek():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_lseek.c:4
#include <errno.h>
#include <sys/types.h>

off_t _lseek(int file, off_t ptr, int dir) {
200179ac:	1101                	addi	sp,sp,-32
200179ae:	ce06                	sw	ra,28(sp)
200179b0:	cc22                	sw	s0,24(sp)
200179b2:	1000                	addi	s0,sp,32
200179b4:	fea42623          	sw	a0,-20(s0)
200179b8:	feb42423          	sw	a1,-24(s0)
200179bc:	fec42223          	sw	a2,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_lseek.c:5
    errno = ENOSYS;
200179c0:	2215                	jal	20017ae4 <__errno>
200179c2:	872a                	mv	a4,a0
200179c4:	05800793          	li	a5,88
200179c8:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_lseek.c:6
    return -1;
200179ca:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_lseek.c:7
}
200179cc:	853e                	mv	a0,a5
200179ce:	40f2                	lw	ra,28(sp)
200179d0:	4462                	lw	s0,24(sp)
200179d2:	6105                	addi	sp,sp,32
200179d4:	8082                	ret

200179d6 <_read>:
_read():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_read.c:4
#include <errno.h>
#include <sys/types.h>

ssize_t _read(int file, void *ptr, size_t len) {
200179d6:	1101                	addi	sp,sp,-32
200179d8:	ce06                	sw	ra,28(sp)
200179da:	cc22                	sw	s0,24(sp)
200179dc:	1000                	addi	s0,sp,32
200179de:	fea42623          	sw	a0,-20(s0)
200179e2:	feb42423          	sw	a1,-24(s0)
200179e6:	fec42223          	sw	a2,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_read.c:5
    errno = ENOSYS;
200179ea:	28ed                	jal	20017ae4 <__errno>
200179ec:	872a                	mv	a4,a0
200179ee:	05800793          	li	a5,88
200179f2:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_read.c:6
    return -1;
200179f4:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_read.c:7
}
200179f6:	853e                	mv	a0,a5
200179f8:	40f2                	lw	ra,28(sp)
200179fa:	4462                	lw	s0,24(sp)
200179fc:	6105                	addi	sp,sp,32
200179fe:	8082                	ret

20017a00 <_sbrk>:
_sbrk():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:24
int _brk(void *addr) {
    __brk = addr;
    return 0;
}

char *_sbrk(ptrdiff_t incr) {
20017a00:	7179                	addi	sp,sp,-48
20017a02:	d606                	sw	ra,44(sp)
20017a04:	d422                	sw	s0,40(sp)
20017a06:	1800                	addi	s0,sp,48
20017a08:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:25
    char *old = __brk;
20017a0c:	8481a783          	lw	a5,-1976(gp) # 80000b08 <__brk>
20017a10:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:28

    /* If __heap_size == 0, we can't allocate memory on the heap */
    if (&metal_segment_heap_target_start == &metal_segment_heap_target_end) {
20017a14:	d0018713          	addi	a4,gp,-768 # 80000fc0 <_sp>
20017a18:	50018793          	addi	a5,gp,1280 # 800017c0 <metal_segment_heap_target_end>
20017a1c:	00f71463          	bne	a4,a5,20017a24 <_sbrk+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:29
        return (void *)-1;
20017a20:	57fd                	li	a5,-1
20017a22:	a83d                	j	20017a60 <_sbrk+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:33
    }

    /* Don't move the break past the end of the heap */
    if ((__brk + incr) < &metal_segment_heap_target_end) {
20017a24:	8481a703          	lw	a4,-1976(gp) # 80000b08 <__brk>
20017a28:	fdc42783          	lw	a5,-36(s0)
20017a2c:	973e                	add	a4,a4,a5
20017a2e:	50018793          	addi	a5,gp,1280 # 800017c0 <metal_segment_heap_target_end>
20017a32:	02f77263          	bgeu	a4,a5,20017a56 <_sbrk+0x56>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:34
        __brk += incr;
20017a36:	8481a703          	lw	a4,-1976(gp) # 80000b08 <__brk>
20017a3a:	fdc42783          	lw	a5,-36(s0)
20017a3e:	973e                	add	a4,a4,a5
20017a40:	84e1a423          	sw	a4,-1976(gp) # 80000b08 <__brk>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:40
    } else {
        __brk = &metal_segment_heap_target_end;
        return (void *)-1;
    }
    /* Scrub out allocated memory to avoid spurious ECC errors */
    metal_mem_scrub(old, incr);
20017a44:	fdc42583          	lw	a1,-36(s0)
20017a48:	fec42503          	lw	a0,-20(s0)
20017a4c:	e46f80ef          	jal	ra,20010092 <metal_mem_scrub>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:42

    return old;
20017a50:	fec42783          	lw	a5,-20(s0)
20017a54:	a031                	j	20017a60 <_sbrk+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:36
        __brk = &metal_segment_heap_target_end;
20017a56:	50018713          	addi	a4,gp,1280 # 800017c0 <metal_segment_heap_target_end>
20017a5a:	84e1a423          	sw	a4,-1976(gp) # 80000b08 <__brk>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:37
        return (void *)-1;
20017a5e:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:43
}
20017a60:	853e                	mv	a0,a5
20017a62:	50b2                	lw	ra,44(sp)
20017a64:	5422                	lw	s0,40(sp)
20017a66:	6145                	addi	sp,sp,48
20017a68:	8082                	ret

20017a6a <_write>:
_write():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:7
#include <metal/tty.h>
#include <sys/types.h>
#include <unistd.h>

/* Write to a file.  */
ssize_t _write(int file, const void *ptr, size_t len) {
20017a6a:	7179                	addi	sp,sp,-48
20017a6c:	d606                	sw	ra,44(sp)
20017a6e:	d422                	sw	s0,40(sp)
20017a70:	1800                	addi	s0,sp,48
20017a72:	fca42e23          	sw	a0,-36(s0)
20017a76:	fcb42c23          	sw	a1,-40(s0)
20017a7a:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:8
    if (file != STDOUT_FILENO) {
20017a7e:	fdc42703          	lw	a4,-36(s0)
20017a82:	4785                	li	a5,1
20017a84:	00f70963          	beq	a4,a5,20017a96 <_write+0x2c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:9
        errno = ENOSYS;
20017a88:	28b1                	jal	20017ae4 <__errno>
20017a8a:	872a                	mv	a4,a0
20017a8c:	05800793          	li	a5,88
20017a90:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:10
        return -1;
20017a92:	57fd                	li	a5,-1
20017a94:	a835                	j	20017ad0 <_write+0x66>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:13
    }

    const char *bptr = ptr;
20017a96:	fd842783          	lw	a5,-40(s0)
20017a9a:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:14
    for (size_t i = 0; i < len; ++i)
20017a9e:	fe042623          	sw	zero,-20(s0)
20017aa2:	a005                	j	20017ac2 <_write+0x58>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:15 (discriminator 3)
        metal_tty_putc(bptr[i]);
20017aa4:	fe842703          	lw	a4,-24(s0)
20017aa8:	fec42783          	lw	a5,-20(s0)
20017aac:	97ba                	add	a5,a5,a4
20017aae:	0007c783          	lbu	a5,0(a5) # 8000 <__heap_size+0x7800>
20017ab2:	853e                	mv	a0,a5
20017ab4:	223000ef          	jal	ra,200184d6 <metal_tty_putc>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:14 (discriminator 3)
    for (size_t i = 0; i < len; ++i)
20017ab8:	fec42783          	lw	a5,-20(s0)
20017abc:	0785                	addi	a5,a5,1
20017abe:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:14 (discriminator 1)
20017ac2:	fec42703          	lw	a4,-20(s0)
20017ac6:	fd442783          	lw	a5,-44(s0)
20017aca:	fcf76de3          	bltu	a4,a5,20017aa4 <_write+0x3a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:16
    return 0;
20017ace:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:17
}
20017ad0:	853e                	mv	a0,a5
20017ad2:	50b2                	lw	ra,44(sp)
20017ad4:	5422                	lw	s0,40(sp)
20017ad6:	6145                	addi	sp,sp,48
20017ad8:	8082                	ret

20017ada <atexit>:
atexit():
20017ada:	85aa                	mv	a1,a0
20017adc:	4681                	li	a3,0
20017ade:	4601                	li	a2,0
20017ae0:	4501                	li	a0,0
20017ae2:	a8e1                	j	20017bba <__register_exitproc>

20017ae4 <__errno>:
__errno():
20017ae4:	5ffe9797          	auipc	a5,0x5ffe9
20017ae8:	fe478793          	addi	a5,a5,-28 # 80000ac8 <_impure_ptr>
20017aec:	4388                	lw	a0,0(a5)
20017aee:	8082                	ret

20017af0 <exit>:
exit():
20017af0:	1141                	addi	sp,sp,-16
20017af2:	c422                	sw	s0,8(sp)
20017af4:	c606                	sw	ra,12(sp)
20017af6:	00000797          	auipc	a5,0x0
20017afa:	14c78793          	addi	a5,a5,332 # 20017c42 <__call_exitprocs>
20017afe:	842a                	mv	s0,a0
20017b00:	c399                	beqz	a5,20017b06 <exit+0x16>
20017b02:	4581                	li	a1,0
20017b04:	2a3d                	jal	20017c42 <__call_exitprocs>
20017b06:	80c18793          	addi	a5,gp,-2036 # 80000acc <_global_impure_ptr>
20017b0a:	4388                	lw	a0,0(a5)
20017b0c:	551c                	lw	a5,40(a0)
20017b0e:	c391                	beqz	a5,20017b12 <exit+0x22>
20017b10:	9782                	jalr	a5
20017b12:	8522                	mv	a0,s0
20017b14:	1eb000ef          	jal	ra,200184fe <_exit>

20017b18 <__libc_fini_array>:
__libc_fini_array():
20017b18:	1141                	addi	sp,sp,-16
20017b1a:	ffff8797          	auipc	a5,0xffff8
20017b1e:	7de78793          	addi	a5,a5,2014 # 200102f8 <__fini_array_end>
20017b22:	c422                	sw	s0,8(sp)
20017b24:	ffff8417          	auipc	s0,0xffff8
20017b28:	7d440413          	addi	s0,s0,2004 # 200102f8 <__fini_array_end>
20017b2c:	8c1d                	sub	s0,s0,a5
20017b2e:	c226                	sw	s1,4(sp)
20017b30:	c606                	sw	ra,12(sp)
20017b32:	8409                	srai	s0,s0,0x2
20017b34:	84be                	mv	s1,a5
20017b36:	e411                	bnez	s0,20017b42 <__libc_fini_array+0x2a>
20017b38:	40b2                	lw	ra,12(sp)
20017b3a:	4422                	lw	s0,8(sp)
20017b3c:	4492                	lw	s1,4(sp)
20017b3e:	0141                	addi	sp,sp,16
20017b40:	8082                	ret
20017b42:	147d                	addi	s0,s0,-1
20017b44:	00241793          	slli	a5,s0,0x2
20017b48:	97a6                	add	a5,a5,s1
20017b4a:	439c                	lw	a5,0(a5)
20017b4c:	9782                	jalr	a5
20017b4e:	b7e5                	j	20017b36 <__libc_fini_array+0x1e>

20017b50 <__libc_init_array>:
__libc_init_array():
20017b50:	1141                	addi	sp,sp,-16
20017b52:	ffff8797          	auipc	a5,0xffff8
20017b56:	79678793          	addi	a5,a5,1942 # 200102e8 <_metal_sifive_fe310_g000_pll_init_ptr>
20017b5a:	c422                	sw	s0,8(sp)
20017b5c:	ffff8417          	auipc	s0,0xffff8
20017b60:	78c40413          	addi	s0,s0,1932 # 200102e8 <_metal_sifive_fe310_g000_pll_init_ptr>
20017b64:	8c1d                	sub	s0,s0,a5
20017b66:	c226                	sw	s1,4(sp)
20017b68:	c04a                	sw	s2,0(sp)
20017b6a:	c606                	sw	ra,12(sp)
20017b6c:	8409                	srai	s0,s0,0x2
20017b6e:	4481                	li	s1,0
20017b70:	893e                	mv	s2,a5
20017b72:	02849663          	bne	s1,s0,20017b9e <__libc_init_array+0x4e>
20017b76:	ffff8797          	auipc	a5,0xffff8
20017b7a:	77278793          	addi	a5,a5,1906 # 200102e8 <_metal_sifive_fe310_g000_pll_init_ptr>
20017b7e:	ffff8417          	auipc	s0,0xffff8
20017b82:	76a40413          	addi	s0,s0,1898 # 200102e8 <_metal_sifive_fe310_g000_pll_init_ptr>
20017b86:	8c1d                	sub	s0,s0,a5
20017b88:	8409                	srai	s0,s0,0x2
20017b8a:	4481                	li	s1,0
20017b8c:	893e                	mv	s2,a5
20017b8e:	00849f63          	bne	s1,s0,20017bac <__libc_init_array+0x5c>
20017b92:	40b2                	lw	ra,12(sp)
20017b94:	4422                	lw	s0,8(sp)
20017b96:	4492                	lw	s1,4(sp)
20017b98:	4902                	lw	s2,0(sp)
20017b9a:	0141                	addi	sp,sp,16
20017b9c:	8082                	ret
20017b9e:	00249793          	slli	a5,s1,0x2
20017ba2:	97ca                	add	a5,a5,s2
20017ba4:	439c                	lw	a5,0(a5)
20017ba6:	0485                	addi	s1,s1,1
20017ba8:	9782                	jalr	a5
20017baa:	b7e1                	j	20017b72 <__libc_init_array+0x22>
20017bac:	00249793          	slli	a5,s1,0x2
20017bb0:	97ca                	add	a5,a5,s2
20017bb2:	439c                	lw	a5,0(a5)
20017bb4:	0485                	addi	s1,s1,1
20017bb6:	9782                	jalr	a5
20017bb8:	bfd9                	j	20017b8e <__libc_init_array+0x3e>

20017bba <__register_exitproc>:
__register_exitproc():
20017bba:	5ffe9797          	auipc	a5,0x5ffe9
20017bbe:	f5e78793          	addi	a5,a5,-162 # 80000b18 <_global_atexit>
20017bc2:	439c                	lw	a5,0(a5)
20017bc4:	8e2a                	mv	t3,a0
20017bc6:	e39d                	bnez	a5,20017bec <__register_exitproc+0x32>
20017bc8:	5ffe9717          	auipc	a4,0x5ffe9
20017bcc:	f5c70713          	addi	a4,a4,-164 # 80000b24 <_global_atexit0>
20017bd0:	5ffe9797          	auipc	a5,0x5ffe9
20017bd4:	f4e7a423          	sw	a4,-184(a5) # 80000b18 <_global_atexit>
20017bd8:	dffe8517          	auipc	a0,0xdffe8
20017bdc:	42850513          	addi	a0,a0,1064 # 0 <__metal_boot_hart>
20017be0:	87ba                	mv	a5,a4
20017be2:	c509                	beqz	a0,20017bec <__register_exitproc+0x32>
20017be4:	411c                	lw	a5,0(a0)
20017be6:	8ef1a623          	sw	a5,-1812(gp) # 80000bac <_global_atexit0+0x88>
20017bea:	87ba                	mv	a5,a4
20017bec:	43d8                	lw	a4,4(a5)
20017bee:	487d                	li	a6,31
20017bf0:	557d                	li	a0,-1
20017bf2:	04e84763          	blt	a6,a4,20017c40 <__register_exitproc+0x86>
20017bf6:	020e0e63          	beqz	t3,20017c32 <__register_exitproc+0x78>
20017bfa:	0887a803          	lw	a6,136(a5)
20017bfe:	04080163          	beqz	a6,20017c40 <__register_exitproc+0x86>
20017c02:	00271893          	slli	a7,a4,0x2
20017c06:	98c2                	add	a7,a7,a6
20017c08:	00c8a023          	sw	a2,0(a7)
20017c0c:	10082303          	lw	t1,256(a6)
20017c10:	4605                	li	a2,1
20017c12:	00e61633          	sll	a2,a2,a4
20017c16:	00c36333          	or	t1,t1,a2
20017c1a:	10682023          	sw	t1,256(a6)
20017c1e:	08d8a023          	sw	a3,128(a7)
20017c22:	4689                	li	a3,2
20017c24:	00de1763          	bne	t3,a3,20017c32 <__register_exitproc+0x78>
20017c28:	10482683          	lw	a3,260(a6)
20017c2c:	8e55                	or	a2,a2,a3
20017c2e:	10c82223          	sw	a2,260(a6)
20017c32:	00170693          	addi	a3,a4,1
20017c36:	070a                	slli	a4,a4,0x2
20017c38:	c3d4                	sw	a3,4(a5)
20017c3a:	97ba                	add	a5,a5,a4
20017c3c:	c78c                	sw	a1,8(a5)
20017c3e:	4501                	li	a0,0
20017c40:	8082                	ret

20017c42 <__call_exitprocs>:
__call_exitprocs():
20017c42:	7179                	addi	sp,sp,-48
20017c44:	cc52                	sw	s4,24(sp)
20017c46:	ca56                	sw	s5,20(sp)
20017c48:	c85a                	sw	s6,16(sp)
20017c4a:	c65e                	sw	s7,12(sp)
20017c4c:	d606                	sw	ra,44(sp)
20017c4e:	d422                	sw	s0,40(sp)
20017c50:	d226                	sw	s1,36(sp)
20017c52:	d04a                	sw	s2,32(sp)
20017c54:	ce4e                	sw	s3,28(sp)
20017c56:	c462                	sw	s8,8(sp)
20017c58:	8b2a                	mv	s6,a0
20017c5a:	8a2e                	mv	s4,a1
20017c5c:	5ffe9a97          	auipc	s5,0x5ffe9
20017c60:	ebca8a93          	addi	s5,s5,-324 # 80000b18 <_global_atexit>
20017c64:	4b85                	li	s7,1
20017c66:	000aa403          	lw	s0,0(s5)
20017c6a:	c811                	beqz	s0,20017c7e <__call_exitprocs+0x3c>
20017c6c:	4044                	lw	s1,4(s0)
20017c6e:	08842983          	lw	s3,136(s0)
20017c72:	fff48913          	addi	s2,s1,-1
20017c76:	048a                	slli	s1,s1,0x2
20017c78:	94a2                	add	s1,s1,s0
20017c7a:	00095e63          	bgez	s2,20017c96 <__call_exitprocs+0x54>
20017c7e:	50b2                	lw	ra,44(sp)
20017c80:	5422                	lw	s0,40(sp)
20017c82:	5492                	lw	s1,36(sp)
20017c84:	5902                	lw	s2,32(sp)
20017c86:	49f2                	lw	s3,28(sp)
20017c88:	4a62                	lw	s4,24(sp)
20017c8a:	4ad2                	lw	s5,20(sp)
20017c8c:	4b42                	lw	s6,16(sp)
20017c8e:	4bb2                	lw	s7,12(sp)
20017c90:	4c22                	lw	s8,8(sp)
20017c92:	6145                	addi	sp,sp,48
20017c94:	8082                	ret
20017c96:	000a0e63          	beqz	s4,20017cb2 <__call_exitprocs+0x70>
20017c9a:	00099563          	bnez	s3,20017ca4 <__call_exitprocs+0x62>
20017c9e:	197d                	addi	s2,s2,-1
20017ca0:	14f1                	addi	s1,s1,-4
20017ca2:	bfe1                	j	20017c7a <__call_exitprocs+0x38>
20017ca4:	00291793          	slli	a5,s2,0x2
20017ca8:	97ce                	add	a5,a5,s3
20017caa:	0807a783          	lw	a5,128(a5)
20017cae:	ff4798e3          	bne	a5,s4,20017c9e <__call_exitprocs+0x5c>
20017cb2:	4058                	lw	a4,4(s0)
20017cb4:	40dc                	lw	a5,4(s1)
20017cb6:	177d                	addi	a4,a4,-1
20017cb8:	03271863          	bne	a4,s2,20017ce8 <__call_exitprocs+0xa6>
20017cbc:	01242223          	sw	s2,4(s0)
20017cc0:	dff9                	beqz	a5,20017c9e <__call_exitprocs+0x5c>
20017cc2:	00442c03          	lw	s8,4(s0)
20017cc6:	00098863          	beqz	s3,20017cd6 <__call_exitprocs+0x94>
20017cca:	1009a683          	lw	a3,256(s3)
20017cce:	012b9733          	sll	a4,s7,s2
20017cd2:	8ef9                	and	a3,a3,a4
20017cd4:	ee89                	bnez	a3,20017cee <__call_exitprocs+0xac>
20017cd6:	9782                	jalr	a5
20017cd8:	4058                	lw	a4,4(s0)
20017cda:	000aa783          	lw	a5,0(s5)
20017cde:	f98714e3          	bne	a4,s8,20017c66 <__call_exitprocs+0x24>
20017ce2:	faf40ee3          	beq	s0,a5,20017c9e <__call_exitprocs+0x5c>
20017ce6:	b741                	j	20017c66 <__call_exitprocs+0x24>
20017ce8:	0004a223          	sw	zero,4(s1)
20017cec:	bfd1                	j	20017cc0 <__call_exitprocs+0x7e>
20017cee:	00291693          	slli	a3,s2,0x2
20017cf2:	96ce                	add	a3,a3,s3
20017cf4:	428c                	lw	a1,0(a3)
20017cf6:	1049a683          	lw	a3,260(s3)
20017cfa:	8f75                	and	a4,a4,a3
20017cfc:	e701                	bnez	a4,20017d04 <__call_exitprocs+0xc2>
20017cfe:	855a                	mv	a0,s6
20017d00:	9782                	jalr	a5
20017d02:	bfd9                	j	20017cd8 <__call_exitprocs+0x96>
20017d04:	852e                	mv	a0,a1
20017d06:	9782                	jalr	a5
20017d08:	bfc1                	j	20017cd8 <__call_exitprocs+0x96>

20017d0a <__udivdi3>:
__udivdi3():
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1319
20017d0a:	87ae                	mv	a5,a1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1024
20017d0c:	8832                	mv	a6,a2
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1025
20017d0e:	8736                	mv	a4,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1026
20017d10:	832a                	mv	t1,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1064
20017d12:	20069663          	bnez	a3,20017f1e <__udivdi3+0x214>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1066
20017d16:	ffff9897          	auipc	a7,0xffff9
20017d1a:	30a88893          	addi	a7,a7,778 # 20011020 <__clz_tab>
20017d1e:	0ac5fe63          	bgeu	a1,a2,20017dda <__udivdi3+0xd0>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
20017d22:	6741                	lui	a4,0x10
20017d24:	0ae67463          	bgeu	a2,a4,20017dcc <__udivdi3+0xc2>
20017d28:	0ff00713          	li	a4,255
20017d2c:	00c73733          	sltu	a4,a4,a2
20017d30:	070e                	slli	a4,a4,0x3
20017d32:	00e656b3          	srl	a3,a2,a4
20017d36:	98b6                	add	a7,a7,a3
20017d38:	0008c683          	lbu	a3,0(a7)
20017d3c:	9736                	add	a4,a4,a3
20017d3e:	02000693          	li	a3,32
20017d42:	8e99                	sub	a3,a3,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1072
20017d44:	ca99                	beqz	a3,20017d5a <__udivdi3+0x50>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
20017d46:	00d797b3          	sll	a5,a5,a3
20017d4a:	00e55733          	srl	a4,a0,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1077
20017d4e:	00d61833          	sll	a6,a2,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
20017d52:	00f765b3          	or	a1,a4,a5
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1079
20017d56:	00d51333          	sll	t1,a0,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1082
20017d5a:	01085513          	srli	a0,a6,0x10
20017d5e:	02a5f733          	remu	a4,a1,a0
20017d62:	01081613          	slli	a2,a6,0x10
20017d66:	8241                	srli	a2,a2,0x10
20017d68:	01035693          	srli	a3,t1,0x10
20017d6c:	02a5d5b3          	divu	a1,a1,a0
20017d70:	0742                	slli	a4,a4,0x10
20017d72:	8ed9                	or	a3,a3,a4
20017d74:	02b607b3          	mul	a5,a2,a1
20017d78:	872e                	mv	a4,a1
20017d7a:	00f6fc63          	bgeu	a3,a5,20017d92 <__udivdi3+0x88>
20017d7e:	96c2                	add	a3,a3,a6
20017d80:	fff58713          	addi	a4,a1,-1
20017d84:	0106e763          	bltu	a3,a6,20017d92 <__udivdi3+0x88>
20017d88:	00f6f563          	bgeu	a3,a5,20017d92 <__udivdi3+0x88>
20017d8c:	ffe58713          	addi	a4,a1,-2
20017d90:	96c2                	add	a3,a3,a6
20017d92:	8e9d                	sub	a3,a3,a5
20017d94:	02a6f7b3          	remu	a5,a3,a0
20017d98:	0342                	slli	t1,t1,0x10
20017d9a:	01035313          	srli	t1,t1,0x10
20017d9e:	02a6d6b3          	divu	a3,a3,a0
20017da2:	07c2                	slli	a5,a5,0x10
20017da4:	0067e333          	or	t1,a5,t1
20017da8:	02d605b3          	mul	a1,a2,a3
20017dac:	8536                	mv	a0,a3
20017dae:	00b37b63          	bgeu	t1,a1,20017dc4 <__udivdi3+0xba>
20017db2:	9342                	add	t1,t1,a6
20017db4:	fff68513          	addi	a0,a3,-1
20017db8:	01036663          	bltu	t1,a6,20017dc4 <__udivdi3+0xba>
20017dbc:	00b37463          	bgeu	t1,a1,20017dc4 <__udivdi3+0xba>
20017dc0:	ffe68513          	addi	a0,a3,-2
20017dc4:	0742                	slli	a4,a4,0x10
20017dc6:	8f49                	or	a4,a4,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1209
20017dc8:	4581                	li	a1,0
20017dca:	a84d                	j	20017e7c <__udivdi3+0x172>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
20017dcc:	010006b7          	lui	a3,0x1000
20017dd0:	4741                	li	a4,16
20017dd2:	f6d660e3          	bltu	a2,a3,20017d32 <__udivdi3+0x28>
20017dd6:	4761                	li	a4,24
20017dd8:	bfa9                	j	20017d32 <__udivdi3+0x28>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1091
20017dda:	e601                	bnez	a2,20017de2 <__udivdi3+0xd8>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1092
20017ddc:	4685                	li	a3,1
20017dde:	02c6d833          	divu	a6,a3,a2
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
20017de2:	66c1                	lui	a3,0x10
20017de4:	08d87e63          	bgeu	a6,a3,20017e80 <__udivdi3+0x176>
20017de8:	0ff00693          	li	a3,255
20017dec:	0106f363          	bgeu	a3,a6,20017df2 <__udivdi3+0xe8>
20017df0:	4721                	li	a4,8
20017df2:	00e856b3          	srl	a3,a6,a4
20017df6:	98b6                	add	a7,a7,a3
20017df8:	0008c683          	lbu	a3,0(a7)
20017dfc:	96ba                	add	a3,a3,a4
20017dfe:	02000713          	li	a4,32
20017e02:	8f15                	sub	a4,a4,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1096
20017e04:	e749                	bnez	a4,20017e8e <__udivdi3+0x184>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1105
20017e06:	410787b3          	sub	a5,a5,a6
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1106
20017e0a:	4585                	li	a1,1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1124
20017e0c:	01085613          	srli	a2,a6,0x10
20017e10:	01081893          	slli	a7,a6,0x10
20017e14:	0108d893          	srli	a7,a7,0x10
20017e18:	01035693          	srli	a3,t1,0x10
20017e1c:	02c7f733          	remu	a4,a5,a2
20017e20:	02c7d7b3          	divu	a5,a5,a2
20017e24:	0742                	slli	a4,a4,0x10
20017e26:	8ed9                	or	a3,a3,a4
20017e28:	02f88533          	mul	a0,a7,a5
20017e2c:	873e                	mv	a4,a5
20017e2e:	00a6fc63          	bgeu	a3,a0,20017e46 <__udivdi3+0x13c>
20017e32:	96c2                	add	a3,a3,a6
20017e34:	fff78713          	addi	a4,a5,-1
20017e38:	0106e763          	bltu	a3,a6,20017e46 <__udivdi3+0x13c>
20017e3c:	00a6f563          	bgeu	a3,a0,20017e46 <__udivdi3+0x13c>
20017e40:	ffe78713          	addi	a4,a5,-2
20017e44:	96c2                	add	a3,a3,a6
20017e46:	8e89                	sub	a3,a3,a0
20017e48:	02c6f7b3          	remu	a5,a3,a2
20017e4c:	0342                	slli	t1,t1,0x10
20017e4e:	01035313          	srli	t1,t1,0x10
20017e52:	02c6d6b3          	divu	a3,a3,a2
20017e56:	07c2                	slli	a5,a5,0x10
20017e58:	0067e333          	or	t1,a5,t1
20017e5c:	02d888b3          	mul	a7,a7,a3
20017e60:	8536                	mv	a0,a3
20017e62:	01137b63          	bgeu	t1,a7,20017e78 <__udivdi3+0x16e>
20017e66:	9342                	add	t1,t1,a6
20017e68:	fff68513          	addi	a0,a3,-1 # ffff <__heap_size+0xf7ff>
20017e6c:	01036663          	bltu	t1,a6,20017e78 <__udivdi3+0x16e>
20017e70:	01137463          	bgeu	t1,a7,20017e78 <__udivdi3+0x16e>
20017e74:	ffe68513          	addi	a0,a3,-2
20017e78:	0742                	slli	a4,a4,0x10
20017e7a:	8f49                	or	a4,a4,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1321
20017e7c:	853a                	mv	a0,a4
20017e7e:	8082                	ret
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
20017e80:	010006b7          	lui	a3,0x1000
20017e84:	4741                	li	a4,16
20017e86:	f6d866e3          	bltu	a6,a3,20017df2 <__udivdi3+0xe8>
20017e8a:	4761                	li	a4,24
20017e8c:	b79d                	j	20017df2 <__udivdi3+0xe8>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1114
20017e8e:	00e81833          	sll	a6,a6,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1115
20017e92:	00d7d5b3          	srl	a1,a5,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1117
20017e96:	00e51333          	sll	t1,a0,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
20017e9a:	00d556b3          	srl	a3,a0,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
20017e9e:	01085513          	srli	a0,a6,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
20017ea2:	00e797b3          	sll	a5,a5,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
20017ea6:	02a5f733          	remu	a4,a1,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
20017eaa:	00f6e8b3          	or	a7,a3,a5
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
20017eae:	01081793          	slli	a5,a6,0x10
20017eb2:	83c1                	srli	a5,a5,0x10
20017eb4:	0108d613          	srli	a2,a7,0x10
20017eb8:	02a5d5b3          	divu	a1,a1,a0
20017ebc:	0742                	slli	a4,a4,0x10
20017ebe:	8f51                	or	a4,a4,a2
20017ec0:	02b786b3          	mul	a3,a5,a1
20017ec4:	862e                	mv	a2,a1
20017ec6:	00d77c63          	bgeu	a4,a3,20017ede <__udivdi3+0x1d4>
20017eca:	9742                	add	a4,a4,a6
20017ecc:	fff58613          	addi	a2,a1,-1
20017ed0:	01076763          	bltu	a4,a6,20017ede <__udivdi3+0x1d4>
20017ed4:	00d77563          	bgeu	a4,a3,20017ede <__udivdi3+0x1d4>
20017ed8:	ffe58613          	addi	a2,a1,-2
20017edc:	9742                	add	a4,a4,a6
20017ede:	40d706b3          	sub	a3,a4,a3
20017ee2:	02a6f733          	remu	a4,a3,a0
20017ee6:	08c2                	slli	a7,a7,0x10
20017ee8:	0108d893          	srli	a7,a7,0x10
20017eec:	02a6d6b3          	divu	a3,a3,a0
20017ef0:	0742                	slli	a4,a4,0x10
20017ef2:	02d785b3          	mul	a1,a5,a3
20017ef6:	011767b3          	or	a5,a4,a7
20017efa:	8736                	mv	a4,a3
20017efc:	00b7fc63          	bgeu	a5,a1,20017f14 <__udivdi3+0x20a>
20017f00:	97c2                	add	a5,a5,a6
20017f02:	fff68713          	addi	a4,a3,-1 # ffffff <__heap_size+0xfff7ff>
20017f06:	0107e763          	bltu	a5,a6,20017f14 <__udivdi3+0x20a>
20017f0a:	00b7f563          	bgeu	a5,a1,20017f14 <__udivdi3+0x20a>
20017f0e:	ffe68713          	addi	a4,a3,-2
20017f12:	97c2                	add	a5,a5,a6
20017f14:	8f8d                	sub	a5,a5,a1
20017f16:	01061593          	slli	a1,a2,0x10
20017f1a:	8dd9                	or	a1,a1,a4
20017f1c:	bdc5                	j	20017e0c <__udivdi3+0x102>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1140
20017f1e:	14d5e263          	bltu	a1,a3,20018062 <__udivdi3+0x358>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
20017f22:	6741                	lui	a4,0x10
20017f24:	02e6fe63          	bgeu	a3,a4,20017f60 <__udivdi3+0x256>
20017f28:	0ff00813          	li	a6,255
20017f2c:	00d83733          	sltu	a4,a6,a3
20017f30:	070e                	slli	a4,a4,0x3
20017f32:	00e6d833          	srl	a6,a3,a4
20017f36:	ffff9597          	auipc	a1,0xffff9
20017f3a:	0ea58593          	addi	a1,a1,234 # 20011020 <__clz_tab>
20017f3e:	95c2                	add	a1,a1,a6
20017f40:	0005c803          	lbu	a6,0(a1)
20017f44:	02000593          	li	a1,32
20017f48:	983a                	add	a6,a6,a4
20017f4a:	410585b3          	sub	a1,a1,a6
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1160
20017f4e:	e185                	bnez	a1,20017f6e <__udivdi3+0x264>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1172
20017f50:	4705                	li	a4,1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1170
20017f52:	f2f6e5e3          	bltu	a3,a5,20017e7c <__udivdi3+0x172>
20017f56:	00c53533          	sltu	a0,a0,a2
20017f5a:	00154713          	xori	a4,a0,1
20017f5e:	bf39                	j	20017e7c <__udivdi3+0x172>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
20017f60:	010005b7          	lui	a1,0x1000
20017f64:	4741                	li	a4,16
20017f66:	fcb6e6e3          	bltu	a3,a1,20017f32 <__udivdi3+0x228>
20017f6a:	4761                	li	a4,24
20017f6c:	b7d9                	j	20017f32 <__udivdi3+0x228>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1194
20017f6e:	01065733          	srl	a4,a2,a6
20017f72:	00b696b3          	sll	a3,a3,a1
20017f76:	8ed9                	or	a3,a3,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20017f78:	0106de93          	srli	t4,a3,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1196
20017f7c:	0107d733          	srl	a4,a5,a6
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20017f80:	03d778b3          	remu	a7,a4,t4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1197
20017f84:	00b797b3          	sll	a5,a5,a1
20017f88:	01055833          	srl	a6,a0,a6
20017f8c:	00f86333          	or	t1,a6,a5
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20017f90:	01069793          	slli	a5,a3,0x10
20017f94:	83c1                	srli	a5,a5,0x10
20017f96:	01035813          	srli	a6,t1,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1195
20017f9a:	00b61633          	sll	a2,a2,a1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20017f9e:	03d75733          	divu	a4,a4,t4
20017fa2:	08c2                	slli	a7,a7,0x10
20017fa4:	0108e833          	or	a6,a7,a6
20017fa8:	02e78f33          	mul	t5,a5,a4
20017fac:	8e3a                	mv	t3,a4
20017fae:	01e87c63          	bgeu	a6,t5,20017fc6 <__udivdi3+0x2bc>
20017fb2:	9836                	add	a6,a6,a3
20017fb4:	fff70e13          	addi	t3,a4,-1 # ffff <__heap_size+0xf7ff>
20017fb8:	00d86763          	bltu	a6,a3,20017fc6 <__udivdi3+0x2bc>
20017fbc:	01e87563          	bgeu	a6,t5,20017fc6 <__udivdi3+0x2bc>
20017fc0:	ffe70e13          	addi	t3,a4,-2
20017fc4:	9836                	add	a6,a6,a3
20017fc6:	41e80833          	sub	a6,a6,t5
20017fca:	03d878b3          	remu	a7,a6,t4
20017fce:	03d85833          	divu	a6,a6,t4
20017fd2:	08c2                	slli	a7,a7,0x10
20017fd4:	03078eb3          	mul	t4,a5,a6
20017fd8:	01031793          	slli	a5,t1,0x10
20017fdc:	83c1                	srli	a5,a5,0x10
20017fde:	00f8e7b3          	or	a5,a7,a5
20017fe2:	8742                	mv	a4,a6
20017fe4:	01d7fc63          	bgeu	a5,t4,20017ffc <__udivdi3+0x2f2>
20017fe8:	97b6                	add	a5,a5,a3
20017fea:	fff80713          	addi	a4,a6,-1
20017fee:	00d7e763          	bltu	a5,a3,20017ffc <__udivdi3+0x2f2>
20017ff2:	01d7f563          	bgeu	a5,t4,20017ffc <__udivdi3+0x2f2>
20017ff6:	ffe80713          	addi	a4,a6,-2
20017ffa:	97b6                	add	a5,a5,a3
20017ffc:	0e42                	slli	t3,t3,0x10
20017ffe:	41d787b3          	sub	a5,a5,t4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
20018002:	6ec1                	lui	t4,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20018004:	00ee6733          	or	a4,t3,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
20018008:	fffe8813          	addi	a6,t4,-1 # ffff <__heap_size+0xf7ff>
2001800c:	01077333          	and	t1,a4,a6
20018010:	01075893          	srli	a7,a4,0x10
20018014:	01067833          	and	a6,a2,a6
20018018:	8241                	srli	a2,a2,0x10
2001801a:	03030e33          	mul	t3,t1,a6
2001801e:	03088833          	mul	a6,a7,a6
20018022:	010e5693          	srli	a3,t3,0x10
20018026:	02c30333          	mul	t1,t1,a2
2001802a:	9342                	add	t1,t1,a6
2001802c:	969a                	add	a3,a3,t1
2001802e:	02c888b3          	mul	a7,a7,a2
20018032:	0106f363          	bgeu	a3,a6,20018038 <__udivdi3+0x32e>
20018036:	98f6                	add	a7,a7,t4
20018038:	0106d613          	srli	a2,a3,0x10
2001803c:	98b2                	add	a7,a7,a2
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1203
2001803e:	0317e063          	bltu	a5,a7,2001805e <__udivdi3+0x354>
20018042:	d91793e3          	bne	a5,a7,20017dc8 <__udivdi3+0xbe>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
20018046:	67c1                	lui	a5,0x10
20018048:	17fd                	addi	a5,a5,-1
2001804a:	8efd                	and	a3,a3,a5
2001804c:	06c2                	slli	a3,a3,0x10
2001804e:	00fe7e33          	and	t3,t3,a5
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1198
20018052:	00b51533          	sll	a0,a0,a1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
20018056:	96f2                	add	a3,a3,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1209
20018058:	4581                	li	a1,0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1203
2001805a:	e2d571e3          	bgeu	a0,a3,20017e7c <__udivdi3+0x172>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1205
2001805e:	177d                	addi	a4,a4,-1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1206
20018060:	b3a5                	j	20017dc8 <__udivdi3+0xbe>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1145
20018062:	4581                	li	a1,0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1144
20018064:	4701                	li	a4,0
20018066:	bd19                	j	20017e7c <__udivdi3+0x172>

20018068 <__umoddi3>:
__udivmoddi4():
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1024
20018068:	88b2                	mv	a7,a2
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1025
2001806a:	8736                	mv	a4,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1026
2001806c:	87aa                	mv	a5,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1027
2001806e:	882e                	mv	a6,a1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1064
20018070:	1c069863          	bnez	a3,20018240 <__umoddi3+0x1d8>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1066
20018074:	ffff9697          	auipc	a3,0xffff9
20018078:	fac68693          	addi	a3,a3,-84 # 20011020 <__clz_tab>
2001807c:	0ac5f863          	bgeu	a1,a2,2001812c <__umoddi3+0xc4>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
20018080:	6341                	lui	t1,0x10
20018082:	08667e63          	bgeu	a2,t1,2001811e <__umoddi3+0xb6>
20018086:	0ff00313          	li	t1,255
2001808a:	00c37363          	bgeu	t1,a2,20018090 <__umoddi3+0x28>
2001808e:	4721                	li	a4,8
20018090:	00e65333          	srl	t1,a2,a4
20018094:	969a                	add	a3,a3,t1
20018096:	0006ce03          	lbu	t3,0(a3)
2001809a:	02000313          	li	t1,32
2001809e:	9e3a                	add	t3,t3,a4
200180a0:	41c30333          	sub	t1,t1,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1072
200180a4:	00030c63          	beqz	t1,200180bc <__umoddi3+0x54>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
200180a8:	006595b3          	sll	a1,a1,t1
200180ac:	01c55e33          	srl	t3,a0,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1077
200180b0:	006618b3          	sll	a7,a2,t1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
200180b4:	00be6833          	or	a6,t3,a1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1079
200180b8:	006517b3          	sll	a5,a0,t1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1082
200180bc:	0108d613          	srli	a2,a7,0x10
200180c0:	02c87733          	remu	a4,a6,a2
200180c4:	01089513          	slli	a0,a7,0x10
200180c8:	8141                	srli	a0,a0,0x10
200180ca:	0107d693          	srli	a3,a5,0x10
200180ce:	02c85833          	divu	a6,a6,a2
200180d2:	0742                	slli	a4,a4,0x10
200180d4:	8ed9                	or	a3,a3,a4
200180d6:	03050833          	mul	a6,a0,a6
200180da:	0106f863          	bgeu	a3,a6,200180ea <__umoddi3+0x82>
200180de:	96c6                	add	a3,a3,a7
200180e0:	0116e563          	bltu	a3,a7,200180ea <__umoddi3+0x82>
200180e4:	0106f363          	bgeu	a3,a6,200180ea <__umoddi3+0x82>
200180e8:	96c6                	add	a3,a3,a7
200180ea:	410686b3          	sub	a3,a3,a6
200180ee:	02c6f733          	remu	a4,a3,a2
200180f2:	07c2                	slli	a5,a5,0x10
200180f4:	83c1                	srli	a5,a5,0x10
200180f6:	02c6d6b3          	divu	a3,a3,a2
200180fa:	02d506b3          	mul	a3,a0,a3
200180fe:	01071513          	slli	a0,a4,0x10
20018102:	8fc9                	or	a5,a5,a0
20018104:	00d7f863          	bgeu	a5,a3,20018114 <__umoddi3+0xac>
20018108:	97c6                	add	a5,a5,a7
2001810a:	0117e563          	bltu	a5,a7,20018114 <__umoddi3+0xac>
2001810e:	00d7f363          	bgeu	a5,a3,20018114 <__umoddi3+0xac>
20018112:	97c6                	add	a5,a5,a7
20018114:	8f95                	sub	a5,a5,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1131
20018116:	0067d533          	srl	a0,a5,t1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1133
2001811a:	4581                	li	a1,0
__umoddi3():
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1313
2001811c:	8082                	ret
__udivmoddi4():
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
2001811e:	01000337          	lui	t1,0x1000
20018122:	4741                	li	a4,16
20018124:	f66666e3          	bltu	a2,t1,20018090 <__umoddi3+0x28>
20018128:	4761                	li	a4,24
2001812a:	b79d                	j	20018090 <__umoddi3+0x28>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1091
2001812c:	e601                	bnez	a2,20018134 <__umoddi3+0xcc>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1092
2001812e:	4605                	li	a2,1
20018130:	031658b3          	divu	a7,a2,a7
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
20018134:	6641                	lui	a2,0x10
20018136:	08c8f363          	bgeu	a7,a2,200181bc <__umoddi3+0x154>
2001813a:	0ff00613          	li	a2,255
2001813e:	01167363          	bgeu	a2,a7,20018144 <__umoddi3+0xdc>
20018142:	4721                	li	a4,8
20018144:	00e8d633          	srl	a2,a7,a4
20018148:	96b2                	add	a3,a3,a2
2001814a:	0006ce03          	lbu	t3,0(a3)
2001814e:	02000313          	li	t1,32
20018152:	9e3a                	add	t3,t3,a4
20018154:	41c30333          	sub	t1,t1,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1096
20018158:	06031963          	bnez	t1,200181ca <__umoddi3+0x162>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1105
2001815c:	411585b3          	sub	a1,a1,a7
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1124
20018160:	0108d713          	srli	a4,a7,0x10
20018164:	01089513          	slli	a0,a7,0x10
20018168:	8141                	srli	a0,a0,0x10
2001816a:	0107d613          	srli	a2,a5,0x10
2001816e:	02e5f6b3          	remu	a3,a1,a4
20018172:	02e5d5b3          	divu	a1,a1,a4
20018176:	06c2                	slli	a3,a3,0x10
20018178:	8ed1                	or	a3,a3,a2
2001817a:	02b505b3          	mul	a1,a0,a1
2001817e:	00b6f863          	bgeu	a3,a1,2001818e <__umoddi3+0x126>
20018182:	96c6                	add	a3,a3,a7
20018184:	0116e563          	bltu	a3,a7,2001818e <__umoddi3+0x126>
20018188:	00b6f363          	bgeu	a3,a1,2001818e <__umoddi3+0x126>
2001818c:	96c6                	add	a3,a3,a7
2001818e:	40b685b3          	sub	a1,a3,a1
20018192:	02e5f6b3          	remu	a3,a1,a4
20018196:	07c2                	slli	a5,a5,0x10
20018198:	83c1                	srli	a5,a5,0x10
2001819a:	02e5d5b3          	divu	a1,a1,a4
2001819e:	02b505b3          	mul	a1,a0,a1
200181a2:	01069513          	slli	a0,a3,0x10
200181a6:	8fc9                	or	a5,a5,a0
200181a8:	00b7f863          	bgeu	a5,a1,200181b8 <__umoddi3+0x150>
200181ac:	97c6                	add	a5,a5,a7
200181ae:	0117e563          	bltu	a5,a7,200181b8 <__umoddi3+0x150>
200181b2:	00b7f363          	bgeu	a5,a1,200181b8 <__umoddi3+0x150>
200181b6:	97c6                	add	a5,a5,a7
200181b8:	8f8d                	sub	a5,a5,a1
200181ba:	bfb1                	j	20018116 <__umoddi3+0xae>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
200181bc:	01000637          	lui	a2,0x1000
200181c0:	4741                	li	a4,16
200181c2:	f8c8e1e3          	bltu	a7,a2,20018144 <__umoddi3+0xdc>
200181c6:	4761                	li	a4,24
200181c8:	bfb5                	j	20018144 <__umoddi3+0xdc>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1114
200181ca:	006898b3          	sll	a7,a7,t1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1115
200181ce:	01c5d733          	srl	a4,a1,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1117
200181d2:	006517b3          	sll	a5,a0,t1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
200181d6:	01c55e33          	srl	t3,a0,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
200181da:	0108d513          	srli	a0,a7,0x10
200181de:	02a776b3          	remu	a3,a4,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
200181e2:	006595b3          	sll	a1,a1,t1
200181e6:	00be6e33          	or	t3,t3,a1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
200181ea:	01089593          	slli	a1,a7,0x10
200181ee:	81c1                	srli	a1,a1,0x10
200181f0:	010e5613          	srli	a2,t3,0x10
200181f4:	02a75733          	divu	a4,a4,a0
200181f8:	06c2                	slli	a3,a3,0x10
200181fa:	8ed1                	or	a3,a3,a2
200181fc:	02e58733          	mul	a4,a1,a4
20018200:	00e6f863          	bgeu	a3,a4,20018210 <__umoddi3+0x1a8>
20018204:	96c6                	add	a3,a3,a7
20018206:	0116e563          	bltu	a3,a7,20018210 <__umoddi3+0x1a8>
2001820a:	00e6f363          	bgeu	a3,a4,20018210 <__umoddi3+0x1a8>
2001820e:	96c6                	add	a3,a3,a7
20018210:	40e68633          	sub	a2,a3,a4
20018214:	02a676b3          	remu	a3,a2,a0
20018218:	0e42                	slli	t3,t3,0x10
2001821a:	010e5e13          	srli	t3,t3,0x10
2001821e:	02a65633          	divu	a2,a2,a0
20018222:	06c2                	slli	a3,a3,0x10
20018224:	02c58633          	mul	a2,a1,a2
20018228:	01c6e5b3          	or	a1,a3,t3
2001822c:	00c5f863          	bgeu	a1,a2,2001823c <__umoddi3+0x1d4>
20018230:	95c6                	add	a1,a1,a7
20018232:	0115e563          	bltu	a1,a7,2001823c <__umoddi3+0x1d4>
20018236:	00c5f363          	bgeu	a1,a2,2001823c <__umoddi3+0x1d4>
2001823a:	95c6                	add	a1,a1,a7
2001823c:	8d91                	sub	a1,a1,a2
2001823e:	b70d                	j	20018160 <__umoddi3+0xf8>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1140
20018240:	ecd5eee3          	bltu	a1,a3,2001811c <__umoddi3+0xb4>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
20018244:	6741                	lui	a4,0x10
20018246:	04e6f563          	bgeu	a3,a4,20018290 <__umoddi3+0x228>
2001824a:	0ff00e93          	li	t4,255
2001824e:	00deb733          	sltu	a4,t4,a3
20018252:	070e                	slli	a4,a4,0x3
20018254:	00e6d333          	srl	t1,a3,a4
20018258:	ffff9897          	auipc	a7,0xffff9
2001825c:	dc888893          	addi	a7,a7,-568 # 20011020 <__clz_tab>
20018260:	989a                	add	a7,a7,t1
20018262:	0008ce83          	lbu	t4,0(a7)
20018266:	02000e13          	li	t3,32
2001826a:	9eba                	add	t4,t4,a4
2001826c:	41de0e33          	sub	t3,t3,t4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1160
20018270:	020e1763          	bnez	t3,2001829e <__umoddi3+0x236>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1170
20018274:	00b6e463          	bltu	a3,a1,2001827c <__umoddi3+0x214>
20018278:	00c56963          	bltu	a0,a2,2001828a <__umoddi3+0x222>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1173
2001827c:	40c507b3          	sub	a5,a0,a2
20018280:	8d95                	sub	a1,a1,a3
20018282:	00f53533          	sltu	a0,a0,a5
20018286:	40a58833          	sub	a6,a1,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1184
2001828a:	853e                	mv	a0,a5
2001828c:	85c2                	mv	a1,a6
2001828e:	b579                	j	2001811c <__umoddi3+0xb4>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
20018290:	010008b7          	lui	a7,0x1000
20018294:	4741                	li	a4,16
20018296:	fb16efe3          	bltu	a3,a7,20018254 <__umoddi3+0x1ec>
2001829a:	4761                	li	a4,24
2001829c:	bf65                	j	20018254 <__umoddi3+0x1ec>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1194
2001829e:	01d65733          	srl	a4,a2,t4
200182a2:	01c696b3          	sll	a3,a3,t3
200182a6:	8ed9                	or	a3,a3,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
200182a8:	0106d813          	srli	a6,a3,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1196
200182ac:	01d5d733          	srl	a4,a1,t4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
200182b0:	03077333          	remu	t1,a4,a6
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1197
200182b4:	01c595b3          	sll	a1,a1,t3
200182b8:	01d557b3          	srl	a5,a0,t4
200182bc:	8fcd                	or	a5,a5,a1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
200182be:	01069593          	slli	a1,a3,0x10
200182c2:	81c1                	srli	a1,a1,0x10
200182c4:	0107d893          	srli	a7,a5,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1195
200182c8:	01c61633          	sll	a2,a2,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1198
200182cc:	01c51533          	sll	a0,a0,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
200182d0:	03075733          	divu	a4,a4,a6
200182d4:	0342                	slli	t1,t1,0x10
200182d6:	011368b3          	or	a7,t1,a7
200182da:	02e58f33          	mul	t5,a1,a4
200182de:	833a                	mv	t1,a4
200182e0:	01e8fc63          	bgeu	a7,t5,200182f8 <__umoddi3+0x290>
200182e4:	98b6                	add	a7,a7,a3
200182e6:	fff70313          	addi	t1,a4,-1 # ffff <__heap_size+0xf7ff>
200182ea:	00d8e763          	bltu	a7,a3,200182f8 <__umoddi3+0x290>
200182ee:	01e8f563          	bgeu	a7,t5,200182f8 <__umoddi3+0x290>
200182f2:	ffe70313          	addi	t1,a4,-2
200182f6:	98b6                	add	a7,a7,a3
200182f8:	41e888b3          	sub	a7,a7,t5
200182fc:	0308ff33          	remu	t5,a7,a6
20018300:	0308d8b3          	divu	a7,a7,a6
20018304:	0f42                	slli	t5,t5,0x10
20018306:	03158833          	mul	a6,a1,a7
2001830a:	01079593          	slli	a1,a5,0x10
2001830e:	81c1                	srli	a1,a1,0x10
20018310:	00bf65b3          	or	a1,t5,a1
20018314:	87c6                	mv	a5,a7
20018316:	0105fc63          	bgeu	a1,a6,2001832e <__umoddi3+0x2c6>
2001831a:	95b6                	add	a1,a1,a3
2001831c:	fff88793          	addi	a5,a7,-1 # ffffff <__heap_size+0xfff7ff>
20018320:	00d5e763          	bltu	a1,a3,2001832e <__umoddi3+0x2c6>
20018324:	0105f563          	bgeu	a1,a6,2001832e <__umoddi3+0x2c6>
20018328:	ffe88793          	addi	a5,a7,-2
2001832c:	95b6                	add	a1,a1,a3
2001832e:	0342                	slli	t1,t1,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
20018330:	6f41                	lui	t5,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20018332:	00f36333          	or	t1,t1,a5
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
20018336:	ffff0793          	addi	a5,t5,-1 # ffff <__heap_size+0xf7ff>
2001833a:	00f378b3          	and	a7,t1,a5
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
2001833e:	410585b3          	sub	a1,a1,a6
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
20018342:	01035313          	srli	t1,t1,0x10
20018346:	01065813          	srli	a6,a2,0x10
2001834a:	8ff1                	and	a5,a5,a2
2001834c:	02f88733          	mul	a4,a7,a5
20018350:	02f307b3          	mul	a5,t1,a5
20018354:	030888b3          	mul	a7,a7,a6
20018358:	03030333          	mul	t1,t1,a6
2001835c:	98be                	add	a7,a7,a5
2001835e:	01075813          	srli	a6,a4,0x10
20018362:	9846                	add	a6,a6,a7
20018364:	00f87363          	bgeu	a6,a5,2001836a <__umoddi3+0x302>
20018368:	937a                	add	t1,t1,t5
2001836a:	01085793          	srli	a5,a6,0x10
2001836e:	933e                	add	t1,t1,a5
20018370:	67c1                	lui	a5,0x10
20018372:	17fd                	addi	a5,a5,-1
20018374:	00f87833          	and	a6,a6,a5
20018378:	0842                	slli	a6,a6,0x10
2001837a:	8f7d                	and	a4,a4,a5
2001837c:	9742                	add	a4,a4,a6
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1203
2001837e:	0065e663          	bltu	a1,t1,2001838a <__umoddi3+0x322>
20018382:	00659c63          	bne	a1,t1,2001839a <__umoddi3+0x332>
20018386:	00e57a63          	bgeu	a0,a4,2001839a <__umoddi3+0x332>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1206
2001838a:	40c70633          	sub	a2,a4,a2
2001838e:	00c73733          	sltu	a4,a4,a2
20018392:	9736                	add	a4,a4,a3
20018394:	40e30333          	sub	t1,t1,a4
20018398:	8732                	mv	a4,a2
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1214
2001839a:	40e50733          	sub	a4,a0,a4
2001839e:	00e53533          	sltu	a0,a0,a4
200183a2:	406585b3          	sub	a1,a1,t1
200183a6:	8d89                	sub	a1,a1,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1215
200183a8:	01d597b3          	sll	a5,a1,t4
200183ac:	01c75733          	srl	a4,a4,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1217
200183b0:	00e7e533          	or	a0,a5,a4
200183b4:	01c5d5b3          	srl	a1,a1,t3
__umoddi3():
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1312
200183b8:	b395                	j	2001811c <__umoddi3+0xb4>

200183ba <metal_init>:
metal_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:17
extern metal_constructor_t metal_constructors_start;
extern metal_constructor_t metal_constructors_end;
extern metal_destructor_t metal_destructors_start;
extern metal_destructor_t metal_destructors_end;

void metal_init(void) {
200183ba:	1101                	addi	sp,sp,-32
200183bc:	ce06                	sw	ra,28(sp)
200183be:	cc22                	sw	s0,24(sp)
200183c0:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:20
    /* Make sure the constructors only run once */
    static int init_done = 0;
    if (init_done) {
200183c2:	800017b7          	lui	a5,0x80001
200183c6:	b1c7a783          	lw	a5,-1252(a5) # 80000b1c <metal_segment_heap_target_end+0xfffff35c>
200183ca:	efa9                	bnez	a5,20018424 <metal_init+0x6a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:23
        return;
    }
    init_done = 1;
200183cc:	800017b7          	lui	a5,0x80001
200183d0:	4705                	li	a4,1
200183d2:	b0e7ae23          	sw	a4,-1252(a5) # 80000b1c <metal_segment_heap_target_end+0xfffff35c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:25

    if (&metal_constructors_end <= &metal_constructors_start) {
200183d6:	200107b7          	lui	a5,0x20010
200183da:	2f478713          	addi	a4,a5,756 # 200102f4 <metal_constructors_end>
200183de:	200107b7          	lui	a5,0x20010
200183e2:	2e878793          	addi	a5,a5,744 # 200102e8 <_metal_sifive_fe310_g000_pll_init_ptr>
200183e6:	04e7f163          	bgeu	a5,a4,20018428 <metal_init+0x6e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:29
        return;
    }

    metal_constructor_t *funcptr = &metal_constructors_start;
200183ea:	200107b7          	lui	a5,0x20010
200183ee:	2e878793          	addi	a5,a5,744 # 200102e8 <_metal_sifive_fe310_g000_pll_init_ptr>
200183f2:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
200183f6:	a831                	j	20018412 <metal_init+0x58>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:31
        metal_constructor_t func = *funcptr;
200183f8:	fec42783          	lw	a5,-20(s0)
200183fc:	439c                	lw	a5,0(a5)
200183fe:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:33

        func();
20018402:	fe842783          	lw	a5,-24(s0)
20018406:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:35

        funcptr += 1;
20018408:	fec42783          	lw	a5,-20(s0)
2001840c:	0791                	addi	a5,a5,4
2001840e:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
20018412:	fec42703          	lw	a4,-20(s0)
20018416:	200107b7          	lui	a5,0x20010
2001841a:	2f478793          	addi	a5,a5,756 # 200102f4 <metal_constructors_end>
2001841e:	fcf71de3          	bne	a4,a5,200183f8 <metal_init+0x3e>
20018422:	a021                	j	2001842a <metal_init+0x70>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:21
        return;
20018424:	0001                	nop
20018426:	a011                	j	2001842a <metal_init+0x70>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:26
        return;
20018428:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:37
    }
}
2001842a:	40f2                	lw	ra,28(sp)
2001842c:	4462                	lw	s0,24(sp)
2001842e:	6105                	addi	sp,sp,32
20018430:	8082                	ret

20018432 <metal_fini>:
metal_fini():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:39

void metal_fini(void) {
20018432:	1101                	addi	sp,sp,-32
20018434:	ce06                	sw	ra,28(sp)
20018436:	cc22                	sw	s0,24(sp)
20018438:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:42
    /* Make sure the destructors only run once */
    static int fini_done = 0;
    if (fini_done) {
2001843a:	800017b7          	lui	a5,0x80001
2001843e:	b207a783          	lw	a5,-1248(a5) # 80000b20 <metal_segment_heap_target_end+0xfffff360>
20018442:	efa9                	bnez	a5,2001849c <metal_fini+0x6a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:45
        return;
    }
    fini_done = 1;
20018444:	800017b7          	lui	a5,0x80001
20018448:	4705                	li	a4,1
2001844a:	b2e7a023          	sw	a4,-1248(a5) # 80000b20 <metal_segment_heap_target_end+0xfffff360>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:47

    if (&metal_destructors_end <= &metal_destructors_start) {
2001844e:	200107b7          	lui	a5,0x20010
20018452:	2f878713          	addi	a4,a5,760 # 200102f8 <__fini_array_end>
20018456:	200107b7          	lui	a5,0x20010
2001845a:	2f878793          	addi	a5,a5,760 # 200102f8 <__fini_array_end>
2001845e:	04e7f163          	bgeu	a5,a4,200184a0 <metal_fini+0x6e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:51
        return;
    }

    metal_destructor_t *funcptr = &metal_destructors_start;
20018462:	200107b7          	lui	a5,0x20010
20018466:	2f878793          	addi	a5,a5,760 # 200102f8 <__fini_array_end>
2001846a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
2001846e:	a831                	j	2001848a <metal_fini+0x58>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:53
        metal_destructor_t func = *funcptr;
20018470:	fec42783          	lw	a5,-20(s0)
20018474:	439c                	lw	a5,0(a5)
20018476:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:55

        func();
2001847a:	fe842783          	lw	a5,-24(s0)
2001847e:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:57

        funcptr += 1;
20018480:	fec42783          	lw	a5,-20(s0)
20018484:	0791                	addi	a5,a5,4
20018486:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
2001848a:	fec42703          	lw	a4,-20(s0)
2001848e:	200107b7          	lui	a5,0x20010
20018492:	2f878793          	addi	a5,a5,760 # 200102f8 <__fini_array_end>
20018496:	fcf71de3          	bne	a4,a5,20018470 <metal_fini+0x3e>
2001849a:	a021                	j	200184a2 <metal_fini+0x70>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:43
        return;
2001849c:	0001                	nop
2001849e:	a011                	j	200184a2 <metal_fini+0x70>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:48
        return;
200184a0:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:59
    }
}
200184a2:	40f2                	lw	ra,28(sp)
200184a4:	4462                	lw	s0,24(sp)
200184a6:	6105                	addi	sp,sp,32
200184a8:	8082                	ret

200184aa <metal_init_run>:
metal_init_run():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:69
 * in the case that users don't want the metal constructors or
 * destructors to run.
 */

void metal_init_run(void) __attribute__((weak));
void metal_init_run(void) { metal_init(); }
200184aa:	1141                	addi	sp,sp,-16
200184ac:	c606                	sw	ra,12(sp)
200184ae:	c422                	sw	s0,8(sp)
200184b0:	0800                	addi	s0,sp,16
200184b2:	f09ff0ef          	jal	ra,200183ba <metal_init>
200184b6:	0001                	nop
200184b8:	40b2                	lw	ra,12(sp)
200184ba:	4422                	lw	s0,8(sp)
200184bc:	0141                	addi	sp,sp,16
200184be:	8082                	ret

200184c0 <metal_fini_run>:
metal_fini_run():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:72

void metal_fini_run(void) __attribute__((weak));
void metal_fini_run(void) { metal_fini(); }
200184c0:	1141                	addi	sp,sp,-16
200184c2:	c606                	sw	ra,12(sp)
200184c4:	c422                	sw	s0,8(sp)
200184c6:	0800                	addi	s0,sp,16
200184c8:	f6bff0ef          	jal	ra,20018432 <metal_fini>
200184cc:	0001                	nop
200184ce:	40b2                	lw	ra,12(sp)
200184d0:	4422                	lw	s0,8(sp)
200184d2:	0141                	addi	sp,sp,16
200184d4:	8082                	ret

200184d6 <metal_tty_putc>:
metal_tty_putc():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/tty.c:12
int metal_tty_putc(int c) {
200184d6:	1101                	addi	sp,sp,-32
200184d8:	ce06                	sw	ra,28(sp)
200184da:	cc22                	sw	s0,24(sp)
200184dc:	1000                	addi	s0,sp,32
200184de:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/tty.c:13
    return metal_uart_putc(__METAL_DT_STDOUT_UART_HANDLE, c);
200184e2:	fec42583          	lw	a1,-20(s0)
200184e6:	800017b7          	lui	a5,0x80001
200184ea:	a5c78513          	addi	a0,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
200184ee:	a10ff0ef          	jal	ra,200176fe <metal_uart_putc>
200184f2:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/tty.c:14
}
200184f4:	853e                	mv	a0,a5
200184f6:	40f2                	lw	ra,28(sp)
200184f8:	4462                	lw	s0,24(sp)
200184fa:	6105                	addi	sp,sp,32
200184fc:	8082                	ret

200184fe <_exit>:
_exit():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_exit.c:3
#include <metal/shutdown.h>

void _exit(int exit_status) {
200184fe:	1101                	addi	sp,sp,-32
20018500:	ce06                	sw	ra,28(sp)
20018502:	cc22                	sw	s0,24(sp)
20018504:	1000                	addi	s0,sp,32
20018506:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_exit.c:4
    metal_shutdown(exit_status);
2001850a:	fec42503          	lw	a0,-20(s0)
2001850e:	896ff0ef          	jal	ra,200175a4 <metal_shutdown>
