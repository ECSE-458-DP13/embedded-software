
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/debug/empty.elf:     file format elf32-littleriscv
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/debug/empty.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x20010000

Program Header:
    LOAD off    0x00001000 vaddr 0x20010000 paddr 0x20010000 align 2**12
         filesz 0x000011ec memsz 0x000011ec flags rwx
    LOAD off    0x00003000 vaddr 0x80000000 paddr 0x20018898 align 2**12
         filesz 0x00000b0c memsz 0x00000b0c flags rw-
     TLS off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**2
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00003b10 vaddr 0x80000b10 paddr 0x80000b10 align 2**12
         filesz 0x00000000 memsz 0x00000cb0 flags rw-
    LOAD off    0x00003b0c vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00004200 vaddr 0x20011200 paddr 0x20011200 align 2**12
         filesz 0x00007696 memsz 0x00007696 flags r-x
    LOAD off    0x0000b896 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .init             000002e6  20010000  20010000  00001000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .init_array       0000000c  200102e8  200102e8  000012e8  2**3  CONTENTS, ALLOC, LOAD, DATA
  2 .ctors            0000007a  200102f4  200102f4  000012f4  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata           00000e7c  20010370  20010370  00001370  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .text             00007696  20011200  20011200  00004200  2**7  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .data             00000b0c  80000000  20018898  00003000  2**3  CONTENTS, ALLOC, LOAD, DATA
  6 .bss              000000a4  80000b10  80000b10  00003b10  2**3  ALLOC
  7 .stack            00000400  80000bc0  80000bc0  00003b10  2**4  ALLOC
  8 .heap             00000800  80000fc0  80000fc0  00003b10  2**3  ALLOC
  9 .debug_info       0003680e  00000000  00000000  0000b896  2**0  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev     00004326  00000000  00000000  000420a4  2**0  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges    00000ce0  00000000  00000000  000463d0  2**3  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges     00000c38  00000000  00000000  000470b0  2**3  CONTENTS, READONLY, DEBUGGING
 13 .debug_line       0000f1a3  00000000  00000000  00047ce8  2**0  CONTENTS, READONLY, DEBUGGING
 14 .debug_str        00005942  00000000  00000000  00056e8b  2**0  CONTENTS, READONLY, DEBUGGING
 15 .comment          00000028  00000000  00000000  0005c7cd  2**0  CONTENTS, READONLY
 16 .riscv.attributes 0000002b  00000000  00000000  0005c7f5  2**0  CONTENTS, READONLY
 17 .debug_frame      000031ec  00000000  00000000  0005c820  2**2  CONTENTS, READONLY, DEBUGGING
 18 .debug_loc        00001539  00000000  00000000  0005fa0c  2**0  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
20010000 l    d  .init	00000000 .init
200102e8 l    d  .init_array	00000000 .init_array
200102f4 l    d  .ctors	00000000 .ctors
20010370 l    d  .rodata	00000000 .rodata
20011200 l    d  .text	00000000 .text
80000000 l    d  .data	00000000 .data
80000b10 l    d  .bss	00000000 .bss
80000bc0 l    d  .stack	00000000 .stack
80000fc0 l    d  .heap	00000000 .heap
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    df *ABS*	00000000 scrub.o
200100ca l     F .init	00000000 __metal_memory_scrub
20010138 l       .init	00000000 skip_scrub
00000000 l    df *ABS*	00000000 synchronize_harts.c
00000000 l    df *ABS*	00000000 crt0.o
20010248 l       .init	00000000 _skip_init
200110cc l       .rodata	00000000 argv
200110d0 l       .rodata	00000000 envp
200110d4 l       .rodata	00000000 name
00000000 l    df *ABS*	00000000 sifive_fe310-g000_pll.c
20015372 l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllsel0
2001538c l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllref
200153a6 l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_divider_base
200153bc l     F .text	00000014 __metal_driver_sifive_fe310_g000_pll_divider_offset
200153d0 l     F .text	00000012 __metal_driver_sifive_fe310_g000_pll_config_base
200153e2 l     F .text	00000010 __metal_driver_sifive_fe310_g000_pll_config_offset
200153f2 l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_init_rate
20015408 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
2001541a l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
2001076c l     O .rodata	00000880 pll_configs
2001542c l     F .text	0000004e get_pll_config_freq
2001568e l     F .text	000000ac find_closest_config
2001573a l     F .text	000001a4 configure_pll
00000000 l    df *ABS*	00000000 tty.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 findfp.c
20011a3e l     F .text	00000068 std
00000000 l    df *ABS*	00000000 nano-vfprintf.c
20011eee l     F .text	0000002a __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 riscv_clint0.c
200127ac l     F .text	00000026 __metal_driver_sifive_clint0_control_base
200127d2 l     F .text	00000024 __metal_driver_sifive_clint0_num_interrupts
200127f6 l     F .text	0000003c __metal_driver_sifive_clint0_interrupt_parents
20012832 l     F .text	00000030 __metal_driver_sifive_clint0_interrupt_lines
20012992 l     F .text	00000036 _get_cpu_intc
00000000 l    df *ABS*	00000000 riscv_cpu.c
20012ec6 l     F .text	00000024 __metal_driver_cpu_hartid
20012eea l     F .text	0000002a __metal_driver_cpu_timebase
20012f14 l     F .text	0000002a __metal_driver_cpu_interrupt_controller
20012f3e l     F .text	00000024 __metal_driver_cpu_buserror
00000000 l    df *ABS*	00000000 riscv_plic0.c
200148c8 l     F .text	0000002a __metal_driver_sifive_plic0_control_base
200148f2 l     F .text	0000002a __metal_driver_sifive_plic0_num_interrupts
2001491c l     F .text	00000028 __metal_driver_sifive_plic0_max_priority
20014944 l     F .text	00000028 __metal_driver_sifive_plic0_interrupt_parents
2001496c l     F .text	00000022 __metal_driver_sifive_plic0_interrupt_lines
2001498e l     F .text	0000001e __metal_driver_sifive_plic0_context_ids
00000000 l    df *ABS*	00000000 sifive_gpio0.c
20015abc l     F .text	00000026 __metal_driver_sifive_gpio0_base
20015ae2 l     F .text	0000002a __metal_driver_sifive_gpio0_interrupt_parent
20015b0c l     F .text	0000035e __metal_driver_sifive_gpio0_interrupt_lines
00000000 l    df *ABS*	00000000 sifive_i2c0.c
2001651a l     F .text	0000002a __metal_driver_sifive_i2c0_control_base
20016544 l     F .text	0000002e __metal_driver_sifive_i2c0_clock
20016572 l     F .text	0000002a __metal_driver_sifive_i2c0_pinmux
2001659c l     F .text	00000028 __metal_driver_sifive_i2c0_pinmux_output_selector
200165c4 l     F .text	00000028 __metal_driver_sifive_i2c0_pinmux_source_selector
200165ec l     F .text	00000034 pre_rate_change_callback
20016620 l     F .text	00000030 post_rate_change_callback
20016650 l     F .text	0000008e __metal_driver_sifive_i2c0_init
200166de l     F .text	00000020 __metal_driver_sifive_i2c0_get_baud_rate
200166fe l     F .text	00000156 __metal_driver_sifive_i2c0_set_baud_rate
20016854 l     F .text	00000148 __metal_driver_sifive_i2c0_write_addr
2001699c l     F .text	00000168 __metal_driver_sifive_i2c0_write
20016b04 l     F .text	00000158 __metal_driver_sifive_i2c0_read
20016c5c l     F .text	00000260 __metal_driver_sifive_i2c0_transfer
00000000 l    df *ABS*	00000000 sifive_uart0.c
20016ebc l     F .text	00000040 __metal_driver_sifive_uart0_control_base
20016efc l     F .text	00000048 __metal_driver_sifive_uart0_interrupt_parent
20016f44 l     F .text	0000003c __metal_driver_sifive_uart0_interrupt_line
20016f80 l     F .text	00000048 __metal_driver_sifive_uart0_clock
20016fc8 l     F .text	00000040 __metal_driver_sifive_uart0_pinmux
20017008 l     F .text	0000003c __metal_driver_sifive_uart0_pinmux_output_selector
20017044 l     F .text	00000040 __metal_driver_sifive_uart0_pinmux_source_selector
20017424 l     F .text	000000d8 pre_rate_change_callback_func
200174fc l     F .text	0000002e post_rate_change_callback_func
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfrosc.c
2001518a l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfrosc_ref
200151a4 l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfrosc_config_base
200151ba l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfrosc_config_offset
200151ce l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfxosc.c
20015286 l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfxosc_ref
200152a0 l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfxosc_config_base
200152b6 l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfxosc_config_offset
200152ca l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_prci.c
20015a44 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 cpu.c
00000000 l    df *ABS*	00000000 i2c.c
00000000 l    df *ABS*	00000000 shutdown.c
00000000 l    df *ABS*	00000000 time.c
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 vector.o
20017b00 l       .text	00000000 IRQ_0
20017b04 l       .text	00000000 IRQ_1
20017b08 l       .text	00000000 IRQ_2
20017b0c l       .text	00000000 IRQ_3
20017b10 l       .text	00000000 IRQ_4
20017b14 l       .text	00000000 IRQ_5
20017b18 l       .text	00000000 IRQ_6
20017b1c l       .text	00000000 IRQ_7
20017b20 l       .text	00000000 IRQ_8
20017b24 l       .text	00000000 IRQ_9
20017b28 l       .text	00000000 IRQ_10
20017b2c l       .text	00000000 IRQ_11
20017b30 l       .text	00000000 IRQ_12
20017b34 l       .text	00000000 IRQ_13
20017b38 l       .text	00000000 IRQ_14
20017b3c l       .text	00000000 IRQ_15
20017b40 l       .text	00000000 IRQ_LC0
20017b44 l       .text	00000000 IRQ_LC1
20017b48 l       .text	00000000 IRQ_LC2
20017b4c l       .text	00000000 IRQ_LC3
20017b50 l       .text	00000000 IRQ_LC4
20017b54 l       .text	00000000 IRQ_LC5
20017b58 l       .text	00000000 IRQ_LC6
20017b5c l       .text	00000000 IRQ_LC7
20017b60 l       .text	00000000 IRQ_LC8
20017b64 l       .text	00000000 IRQ_LC9
20017b68 l       .text	00000000 IRQ_LC10
20017b6c l       .text	00000000 IRQ_LC11
20017b70 l       .text	00000000 IRQ_LC12
20017b74 l       .text	00000000 IRQ_LC13
20017b78 l       .text	00000000 IRQ_LC14
20017b7c l       .text	00000000 IRQ_LC15
00000000 l    df *ABS*	00000000 fixed-clock.c
20017b80 l     F .text	00000070 __metal_driver_fixed_clock_rate
00000000 l    df *ABS*	00000000 timer.c
00000000 l    df *ABS*	00000000 sys_close.c
00000000 l    df *ABS*	00000000 sys_fstat.c
00000000 l    df *ABS*	00000000 sys_isatty.c
00000000 l    df *ABS*	00000000 sys_lseek.c
00000000 l    df *ABS*	00000000 sys_read.c
00000000 l    df *ABS*	00000000 sys_sbrk.c
80000b08 l     O .data	00000004 __brk
00000000 l    df *ABS*	00000000 sys_write.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 __atexit.c
80000b24 l     O .bss	0000008c _global_atexit0
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 init.c
80000b1c l     O .bss	00000004 init_done.1531
80000b20 l     O .bss	00000004 fini_done.1540
00000000 l    df *ABS*	00000000 sys_exit.c
00000000 l    df *ABS*	00000000 impure.c
80000000 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 inline.c
00000000 l    df *ABS*	00000000 
200102f4 l       .init_array	00000000 metal_constructors_end
200102f8 l       .init_array	00000000 __fini_array_end
200102f8 l       .init_array	00000000 metal_destructors_end
200102f8 l       .init_array	00000000 metal_destructors_start
200102f8 l       .init_array	00000000 __fini_array_start
200102e8 l       .init_array	00000000 __init_array_end
200102e8 l       .init_array	00000000 __preinit_array_end
200102e8 l       .init_array	00000000 __init_array_start
200102e8 l       .init_array	00000000 metal_constructors_start
200102e8 l       .init_array	00000000 __preinit_array_start
2001108c g     O .rodata	00000040 __metal_driver_vtable_sifive_uart0
2001235a g     F .text	0000002a _isatty_r
200137d0  w    F .text	00000096 metal_lc4_interrupt_vector_handler
200115d8 g     F .text	000000da _puts_r
2001785a g     F .text	00000046 metal_i2c_write
20012384 g     F .text	0000002e _lseek_r
2001768e g     F .text	00000026 metal_clock_get_rate_hz
20017384 g     F .text	000000a0 __metal_driver_sifive_uart0_set_baud_rate
20012b6e g     F .text	00000058 __metal_driver_riscv_clint0_set_vector_mode
200171d8 g     F .text	0000004a __metal_driver_sifive_uart0_set_tx_watermark
2001373a  w    F .text	00000096 metal_lc3_interrupt_vector_handler
20013fc0 g     F .text	00000064 __metal_valid_interrupt_id
20011594 g     F .text	00000044 printf
800012c0 g       .data	00000000 __global_pointer$
200102ec g     O .init_array	00000004 _use_hfxosc_ptr
2001443e g     F .text	0000001c __metal_driver_riscv_cpu_controller_get_vector_mode
2001034a g     F .ctors	00000024 metal_tty_init
2001763a g     F .text	00000054 _metal_clock_append_to_callbacks
200149e8 g     F .text	00000046 __metal_plic0_complete_interrupt
20014210 g     F .text	000001d6 __metal_driver_riscv_cpu_controller_interrupt_register
200102e8 g     O .init_array	00000004 _metal_sifive_fe310_g000_pll_init_ptr
2001229a g     F .text	00000036 __sseek
20011af4 g     F .text	00000066 __sinit
80000ac4  w    O .data	00000004 __metal_i2c_table
200116c0 g     F .text	000000c0 __swbuf_r
80000b10 g       .data	00000000 __tls_base
20011ab0 g     F .text	00000044 __sfmoreglue
200123ce g     F .text	00000002 __malloc_unlock
20017826 g     F .text	00000034 metal_i2c_init
200177de g     F .text	0000002e metal_cpu_get
80000a5c g     O .data	00000020 __metal_dt_serial_10013000
200160f4 g     F .text	0000004a __metal_driver_sifive_gpio0_disable_io
20010568 g     O .rodata	00000064 __metal_driver_vtable_riscv_clint0
80000bb4 g       .bss	00000000 metal_segment_bss_target_end
20012862 g     F .text	0000009a __metal_clint0_mtime_get
2001483c g     F .text	0000002e __metal_driver_cpu_get_instruction_length
00000001 g       *ABS*	00000000 __metal_chicken_bit
2001729c g     F .text	00000030 __metal_driver_sifive_uart0_get_rx_watermark
20015eaa g     F .text	00000046 __metal_driver_sifive_gpio0_disable_input
20017e68 g     F .text	0000000c __errno
08000000 g       .rodata	00000000 metal_segment_itim_target_start
2001778e g     F .text	0000002a metal_cpu_get_timebase
200171a8 g     F .text	00000030 __metal_driver_sifive_uart0_txready
20017136 g     F .text	0000003a __metal_driver_sifive_uart0_rx_interrupt_enable
2001014a g     F .init	0000000e __metal_synchronize_harts
80000b10 g       .data	00000000 metal_segment_bss_target_start
200128fc g     F .text	00000096 __metal_driver_riscv_clint0_mtimecmp_set
2001232e g     F .text	0000002c _fstat_r
20016344 g     F .text	00000188 __metal_driver_sifive_gpio0_clear_int
80000bb0 g     O .bss	00000004 errno
2001551e g     F .text	00000170 __metal_driver_sifive_fe310_g000_pll_get_rate_hz
00000400 g       *ABS*	00000000 __stack_size
20017700 g     F .text	00000032 metal_clock_register_pre_rate_change_callback
20013abe  w    F .text	00000096 metal_lc9_interrupt_vector_handler
200100d6  w    F .init	00000000 __metal_before_start
2001882e  w    F .text	00000016 metal_init_run
80000a7c g     O .data	00000020 __metal_dt_serial_10023000
20010708 g     O .rodata	00000064 __metal_driver_vtable_riscv_plic0
200106c4 g     O .rodata	00000044 __metal_driver_vtable_cpu
20017acc g     F .text	0000002e metal_uart_set_baud_rate
2001752a g     F .text	000000d0 __metal_driver_sifive_uart0_init
00000000 g       *ABS*	00000000 __metal_eccscrub_bit
80000a38 g     O .data	00000024 __metal_dt_i2c_10016000
200144ca g     F .text	00000072 __metal_driver_cpu_mcycle_get
20010fec g     O .rodata	0000000c __metal_driver_vtable_sifive_fe310_g000_pll
80000fc0 g       .heap	00000000 metal_segment_heap_target_start
20011aa6 g     F .text	0000000a _cleanup_r
80000ad8 g     O .data	00000008 __metal_dt_cpu_0
20013a28  w    F .text	00000096 metal_lc8_interrupt_vector_handler
200158de g     F .text	00000166 __metal_driver_sifive_fe310_g000_pll_set_rate_hz
20017c7e g     F .text	0000004a metal_timer_get_timebase_frequency
200150ee g     F .text	00000074 __metal_driver_riscv_plic0_affinity_set_threshold
200116b2 g     F .text	0000000e puts
20013d16  w    F .text	00000096 metal_lc13_interrupt_vector_handler
200130d0 g     F .text	00000018 __metal_default_exception_handler
20017cea g     F .text	00000026 _fstat
20012e92 g     F .text	00000034 __metal_driver_riscv_clint0_set_interrupt
2001445a g     F .text	00000054 __metal_driver_riscv_cpu_controller_set_vector_mode
20012f62 g     F .text	00000030 __metal_driver_cpu_get
20010660 g     O .rodata	00000064 __metal_driver_vtable_riscv_cpu_intc
20012fc4 g     F .text	00000018 __metal_interrupt_global_disable
20015162 g     F .text	00000028 __metal_driver_riscv_plic0_affinity_get_threshold
20013992  w    F .text	00000096 metal_lc7_interrupt_vector_handler
20013b54  w    F .text	00000096 metal_lc10_interrupt_vector_handler
200121f2 g     F .text	0000002a _sbrk_r
20014f0e g     F .text	00000050 __metal_driver_riscv_plic0_disable
200140e0 g     F .text	0000004e __metal_exception_register
2001873e g     F .text	00000078 metal_init
2001277e g     F .text	0000002e _read_r
2001465e g     F .text	00000016 __metal_driver_cpu_timer_controller_interrupt
20015f8c g     F .text	00000040 __metal_driver_sifive_gpio0_enable_output
80000000 g       .rodata	00000000 metal_segment_lim_target_end
200131c0 g     F .text	00000068 __metal_default_sw_handler
20017732 g     F .text	00000032 metal_clock_register_post_rate_change_callback
8000006c g     O .data	0000000c __metal_dt_clock_2
20017084 g     F .text	00000020 __metal_driver_sifive_uart0_interrupt_controller
200183ec g     F .text	00000352 .hidden __umoddi3
20017d10 g     F .text	00000020 _isatty
20016052 g     F .text	00000040 __metal_driver_sifive_gpio0_output_toggle
200170c4 g     F .text	0000003a __metal_driver_sifive_uart0_tx_interrupt_enable
80000b00 g     O .data	00000008 __metal_driver_vtable_fixed_clock
80000acc g     O .data	00000004 _global_impure_ptr
20013228  w    F .text	00000092 metal_timer_interrupt_vector_handler
20017ed4 g     F .text	0000006a __libc_init_array
20015fcc g     F .text	00000040 __metal_driver_sifive_gpio0_output_set
20013bea  w    F .text	00000096 metal_lc11_interrupt_vector_handler
2001808e g     F .text	0000035e .hidden __udivdi3
20011074 g     O .rodata	00000018 __metal_driver_vtable_sifive_i2c0
20015350 g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz
200143e6 g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_enable
20017d84 g     F .text	0000006a _sbrk
20015f46 g     F .text	00000046 __metal_driver_sifive_gpio0_disable_output
200175fa g     F .text	00000040 _metal_clock_call_all_callbacks
200102c4 g     F .init	00000002 _init
20013026 g     F .text	0000001a __metal_interrupt_timer_disable
2001613e g     F .text	00000206 __metal_driver_sifive_gpio0_config_int
20014714 g     F .text	00000062 __metal_driver_cpu_clear_sw_ipi
20011038 g     O .rodata	0000003c __metal_driver_vtable_sifive_gpio0
200170fe g     F .text	00000038 __metal_driver_sifive_uart0_tx_interrupt_disable
20016092 g     F .text	00000062 __metal_driver_sifive_gpio0_enable_io
20017e9c g     F .text	00000038 __libc_fini_array
80000ab4 g     O .data	0000000c __metal_dt_clock_4
200187b6 g     F .text	00000078 metal_fini
200164cc g     F .text	00000020 __metal_driver_gpio_interrupt_controller
2001469e g     F .text	00000014 __metal_driver_cpu_get_sw_interrupt_id
200148a8 g     F .text	00000020 __metal_driver_cpu_get_buserror
80000000 g       .data	00000000 metal_segment_data_target_start
20013078 g     F .text	0000002c __metal_interrupt_local_enable
20012e5e g     F .text	00000034 __metal_driver_riscv_clint0_clear_interrupt
2001885a g     F .text	00000028 metal_tty_putc
20014be6 g     F .text	00000018 __metal_plic0_default_handler
20017dee  w    F .text	00000070 write
00000000 g       *ABS*	00000000 __tbss_size
80000060 g     O .data	0000000c __metal_dt_clock_0
20017952 g     F .text	000000e6 metal_gettimeofday
00000800 g       *ABS*	00000000 __heap_size
20014f5e g     F .text	00000030 __metal_driver_riscv_plic0_set_threshold
200132ba g     F .text	00000016 __metal_default_beu_handler
200104cc g     O .rodata	00000020 __sf_fake_stderr
2001305c g     F .text	0000001c __metal_interrupt_external_disable
200170a4 g     F .text	00000020 __metal_driver_sifive_uart0_get_interrupt_id
200178a0 g     F .text	00000046 metal_i2c_read
200144ae g     F .text	0000001c __metal_driver_riscv_cpu_controller_command_request
2001412e g     F .text	000000e2 __metal_driver_riscv_cpu_controller_interrupt_init
20011f18 g     F .text	00000042 __sfputs_r
200147f6 g     F .text	00000046 __metal_driver_cpu_exception_register
20012fdc g     F .text	00000018 __metal_interrupt_software_enable
2001360e  w    F .text	00000096 metal_lc1_interrupt_vector_handler
200123b2 g     F .text	0000001a memchr
200178e6 g     F .text	00000030 metal_i2c_set_baud_rate
20011d64 g     F .text	000000ac _free_r
80000b18 g     O .bss	00000004 _global_atexit
20014aae g     F .text	00000062 __metal_driver_riscv_plic0_set_priority
20013ed8 g     F .text	00000050 __metal_controller_interrupt_vector_mode
20017fc6 g     F .text	000000c8 __call_exitprocs
80000fc0 g       .stack	00000000 _sp
200102f0 g     O .init_array	00000004 _metal_tty_init_ptr
20010158 g     F .init	00000000 _start
200151e0 g     F .text	00000084 __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz
20017c34 g     F .text	0000004a metal_timer_get_cyclecount
20017d30 g     F .text	0000002a _lseek
200147d6 g     F .text	00000020 __metal_driver_cpu_controller_interrupt
2001486a g     F .text	0000001e __metal_driver_cpu_get_exception_pc
20013040 g     F .text	0000001c __metal_interrupt_external_enable
20017f3e g     F .text	00000088 __register_exitproc
200172cc g     F .text	00000042 __metal_driver_sifive_uart0_putc
20014ca4 g     F .text	00000158 __metal_driver_riscv_plic0_init
20014ebe g     F .text	00000050 __metal_driver_riscv_plic0_enable
20015f1a g     F .text	0000002c __metal_driver_sifive_gpio0_output
200138fc  w    F .text	00000096 metal_lc6_interrupt_vector_handler
20012f92 g     F .text	0000001a __metal_myhart_id
200164ec g     F .text	0000002e __metal_driver_gpio_get_interrupt_id
2001312e  w    F .text	00000092 metal_software_interrupt_vector_handler
20014412 g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_disable
20012304 g     F .text	0000002a _close_r
20017764 g     F .text	0000002a metal_cpu_get_timer
20017364 g     F .text	00000020 __metal_driver_sifive_uart0_get_baud_rate
20012a50 g     F .text	000000da __metal_driver_riscv_clint0_register
80000ad0 g     O .data	00000008 __metal_dt_clint_2000000
20011780 g     F .text	00000110 __swsetup_r
20011b5a g     F .text	0000009a __sfp
200176b4 g     F .text	0000004c metal_clock_set_rate_hz
2001221c g     F .text	00000030 __sread
20015e6a g     F .text	00000040 __metal_driver_sifive_gpio0_enable_input
200102c6  w    F .init	00000000 secondary_main
20013100  w    F .text	0000002e metal_interrupt_vector_handler
200123cc g     F .text	00000002 __malloc_lock
20017170 g     F .text	00000038 __metal_driver_sifive_uart0_rx_interrupt_disable
200119da g     F .text	00000064 _fflush_r
20014a74 g     F .text	0000003a __metal_plic0_get_threshold
20015a56 g     F .text	0000002e __metal_driver_sifive_fe310_g000_prci_get_reg
200104ec g     O .rodata	00000020 __sf_fake_stdin
20014024 g     F .text	000000bc __metal_local_interrupt_enable
20012d2a g     F .text	00000134 __metal_driver_riscv_clint0_command_request
20011d54 g     F .text	00000010 memset
20013866  w    F .text	00000096 metal_lc5_interrupt_vector_handler
20011200 g     F .text	00000394 main
80000b10 g       .data	00000000 metal_segment_data_target_end
20017252 g     F .text	0000004a __metal_driver_sifive_uart0_set_rx_watermark
80000ae8 g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_hfrosc
200146b2 g     F .text	00000062 __metal_driver_cpu_set_sw_ipi
20014776 g     F .text	00000060 __metal_driver_cpu_get_msip
20017944 g     F .text	0000000e metal_shutdown
08000000 g       .rodata	00000000 metal_segment_itim_target_end
20014888 g     F .text	00000020 __metal_driver_cpu_set_exception_pc
200149ac g     F .text	0000003c __metal_plic0_claim_interrupt
20017222 g     F .text	00000030 __metal_driver_sifive_uart0_get_tx_watermark
200122d0 g     F .text	00000006 __sclose
20013c80  w    F .text	00000096 metal_lc12_interrupt_vector_handler
20010092 g     F .init	00000000 metal_mem_scrub
20011e10 g     F .text	000000de _malloc_r
20012b52 g     F .text	0000001c __metal_driver_riscv_clint0_get_vector_mode
80000ae4 g     O .data	00000004 __metal_dt_prci_10008000
2001453c g     F .text	00000046 __metal_driver_cpu_timebase_get
20015052 g     F .text	0000009c __metal_driver_riscv_plic0_affinity_disable
20010000 g       .init	00000000 _enter
2001780c g     F .text	0000001a metal_cpu_get_current_hartid
200152dc g     F .text	00000074 __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz
20017b00 g       .text	00000000 __metal_vector_table
200111f0 g       *ABS*	00000000 metal_segment_itim_source_start
80000ac0  w    O .data	00000004 __metal_cpu_table
80000090 g     O .data	000003d0 __metal_dt_cpu_0_interrupt_controller
200102c4 g     F .init	00000002 _fini
20011594 g     F .text	00000044 iprintf
80000000 g       .rodata	00000000 metal_segment_lim_target_start
200110e0 g     O .rodata	00000100 .hidden __clz_tab
20014b10 g     F .text	00000034 __metal_driver_riscv_plic0_get_priority
20010320 g     F .ctors	0000002a use_hfxosc
20012fac g     F .text	00000018 __metal_interrupt_global_enable
20017e5e g     F .text	0000000a atexit
200122d6 g     F .text	0000002e _write_r
2001300c g     F .text	0000001a __metal_interrupt_timer_enable
2001730e g     F .text	00000056 __metal_driver_sifive_uart0_getc
20012c78 g     F .text	000000b2 __metal_driver_riscv_clint0_disable
200123d0 g     F .text	0000010c _printf_common
80000ac8 g     O .data	00000004 _impure_ptr
200145e8 g     F .text	00000076 __metal_driver_cpu_mtimecmp_set
20011890 g     F .text	0000014a __sflush_r
20014f8e g     F .text	00000028 __metal_driver_riscv_plic0_get_threshold
2001547a g     F .text	000000a4 __metal_driver_sifive_fe310_g000_pll_init
80000078 g     O .data	0000000c __metal_dt_clock_5
20015a84 g     F .text	00000038 __metal_driver_sifive_fe310_g000_prci_set_reg
20017bf0 g     F .text	00000020 __metal_driver_fixed_clock_get_rate_hz
20012bc6 g     F .text	000000b2 __metal_driver_riscv_clint0_enable
20018898 g       *ABS*	00000000 metal_segment_data_source_start
2001013c g       .init	00000000 early_trap_vector
800017c0 g       .heap	00000000 metal_segment_heap_target_end
20013f28 g     F .text	00000098 __metal_controller_interrupt_vector
80000aa8 g     O .data	0000000c __metal_dt_clock_1
80000460 g     O .data	000005d8 __metal_dt_interrupt_controller_c000000
20011c60 g     F .text	00000058 __swhatbuf_r
2001600c g     F .text	00000046 __metal_driver_sifive_gpio0_output_clear
200132d0 g     F .text	00000066 __metal_default_timer_handler
20017dee g     F .text	00000070 _write
20014bfe g     F .text	000000a6 __metal_plic0_handler
200136a4  w    F .text	00000096 metal_lc2_interrupt_vector_handler
20013e42  w    F .text	00000096 metal_lc15_interrupt_vector_handler
200177b8 g     F .text	00000026 metal_cpu_interrupt_controller
2001224c g     F .text	0000004e __swrite
20017e74 g     F .text	00000028 exit
20011f5a g     F .text	00000298 _vfiprintf_r
20011bf4 g     F .text	0000006c _fwalk_reent
20017c10 g     F .text	00000024 __metal_driver_fixed_clock_set_rate_hz
200111f0 g       *ABS*	00000000 metal_segment_lim_source_start
2001050c g     O .rodata	00000020 __sf_fake_stdout
80000ae0 g     O .data	00000004 __metal_dt_gpio_10012000
200130e8 g     F .text	00000018 __metal_default_interrupt_handler
20017a9e g     F .text	0000002e metal_uart_putc
20017d5a g     F .text	0000002a _read
20018844  w    F .text	00000016 metal_fini_run
20015ef0 g     F .text	0000002a __metal_driver_sifive_gpio0_input
20013380 g     F .text	0000017e __metal_exception_handler
20013578  w    F .text	00000096 metal_lc0_interrupt_vector_handler
20018882 g     F .text	00000014 _exit
20017916 g     F .text	0000002e metal_i2c_get_device
20014582 g     F .text	00000066 __metal_driver_cpu_mtime_get
20011cb8 g     F .text	0000009c __smakebuf_r
20012b2a g     F .text	00000028 __metal_driver_riscv_clint0_vector_register
200124dc g     F .text	000002a2 _printf_i
80000b14 g     O .bss	00000004 __malloc_sbrk_start
20013dac  w    F .text	00000096 metal_lc14_interrupt_vector_handler
80000af0 g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_hfxosc
200129c8 g     F .text	00000088 __metal_driver_riscv_clint0_init
80000b10 g     O .bss	00000004 __malloc_free_list
200102f4 g     F .ctors	0000002c metal_sifive_fe310_g000_pll_init
20011f5a g     F .text	00000298 _vfprintf_r
20014674 g     F .text	00000014 __metal_driver_cpu_get_timer_interrupt_id
20014b44 g     F .text	000000a2 __metal_plic0_enable
20010090  w      .init	00000000 __register_frame_info
20015264 g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz
20014688 g     F .text	00000016 __metal_driver_cpu_sw_controller_interrupt
200130a4 g     F .text	0000002c __metal_interrupt_local_disable
20012ff4 g     F .text	00000018 __metal_interrupt_software_disable
20017a38 g     F .text	0000003a metal_time
20017a72 g     F .text	0000002c metal_uart_init
80000a9c g     O .data	0000000c __metal_dt_clock_3
80000084 g     O .data	0000000c __metal_dt_clock_6
20014a2e g     F .text	00000046 __metal_plic0_set_threshold
20014fb6 g     F .text	0000009c __metal_driver_riscv_plic0_affinity_enable
20017cc8 g     F .text	00000022 _close
80000af8 g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_prci
00000000 g       *ABS*	00000000 __metal_boot_hart
20014dfc g     F .text	000000c2 __metal_driver_riscv_plic0_register



Disassembly of section .init:

20010000 <_enter>:
_enter():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:24
     * it's not valid to obtain the address of any symbol without GP
     * configured.  The C environment might go ahead and do this again, but
     * that's safe as it's a fixed register. */
.option push
.option norelax
    la gp, __global_pointer$
20010000:	5fff1197          	auipc	gp,0x5fff1
20010004:	2c018193          	addi	gp,gp,704 # 800012c0 <__global_pointer$>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:28
.option pop

    /* trap over the chicken bit register clearing, aloe & fe310 dont have it */
    la t0, 1f
20010008:	00000297          	auipc	t0,0x0
2001000c:	01828293          	addi	t0,t0,24 # 20010020 <_enter+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:29
    csrw mtvec, t0
20010010:	30529073          	csrw	mtvec,t0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:31
    /* chicken bit is enable if core are sifive series. */
    la t0, __metal_chicken_bit
20010014:	00100293          	li	t0,1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:32
    beqz t0, 1f
20010018:	00028463          	beqz	t0,20010020 <_enter+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:34
    /* If set, always clear the feature disable register for all cores series */
    csrwi 0x7C1, 0
2001001c:	7c105073          	csrwi	0x7c1,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:39
.align 4
1:
    /* Set up a simple trap vector to catch anything that goes wrong early in
     * the boot process. */
    la t0, early_trap_vector
20010020:	00000297          	auipc	t0,0x0
20010024:	11c28293          	addi	t0,t0,284 # 2001013c <early_trap_vector>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:40
    csrw mtvec, t0
20010028:	30529073          	csrw	mtvec,t0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:48
     * C, so here we set up a C environment. First we set up a stack pointer,
     * which is left as a weak reference in order to allow initialization
     * routines that do not need a stack to be set up to transparently be
     * called. */
    .weak __metal_stack_pointer
    la sp, __metal_stack_pointer
2001002c:	dfff0117          	auipc	sp,0xdfff0
20010030:	fd410113          	addi	sp,sp,-44 # 0 <__metal_boot_hart>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:55
   /* The METAL is designed for a bare-metal environment and therefore is expected
    * to define its own stack pointer. We also align the stack pointer here
    * because the only RISC-V ABI that's currently defined, mandates 16-byte
    * stack alignment. */

    bne sp, zero, 1f
20010034:	00011463          	bnez	sp,2001003c <_enter+0x3c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:56
    la sp, _sp
20010038:	d0018113          	addi	sp,gp,-768 # 80000fc0 <_sp>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:59
1:
    /* Increment by hartid number of stack sizes */
    csrr a0, mhartid
2001003c:	f1402573          	csrr	a0,mhartid
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:60
    li t0, 0
20010040:	4281                	li	t0,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:61
    la t1, __stack_size
20010042:	40000313          	li	t1,1024
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:63
1:
    andi sp, sp, -16
20010046:	ff017113          	andi	sp,sp,-16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:64
    beq t0, a0, 1f
2001004a:	00a28563          	beq	t0,a0,20010054 <_enter+0x54>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:65
    add sp, sp, t1
2001004e:	911a                	add	sp,sp,t1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:66
    addi t0, t0, 1
20010050:	0285                	addi	t0,t0,1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:67
    j 1b
20010052:	bfd5                	j	20010046 <_enter+0x46>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:76
     * just skip over the call entirely.   Note that __metal_initialize isn't
     * actually a full C function, as it doesn't end up with the .bss or .data
     * segments having been initialized.  This is done to avoid putting a
     * burden on systems that can be initialized without having a C environment
     * set up. */
    la ra, __metal_before_start
20010054:	00000097          	auipc	ra,0x0
20010058:	08208093          	addi	ra,ra,130 # 200100d6 <__metal_before_start>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:77
    beqz ra, 1f
2001005c:	00008363          	beqz	ra,20010062 <_enter+0x62>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:78
    jalr ra
20010060:	9082                	jalr	ra
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:84
1:

    /* At this point we can enter the C runtime's startup file.  The arguments
     * to this function are designed to match those provided to the SEE, just
     * so we don't have to write another ABI. */
    csrr a0, mhartid
20010062:	f1402573          	csrr	a0,mhartid
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:85
    li a1, 0
20010066:	4581                	li	a1,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:86
    li a2, 0
20010068:	4601                	li	a2,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:87
    call _start
2001006a:	20fd                	jal	20010158 <_start>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:92

    /* If we've made it back here then there's probably something wrong.  We
     * allow the METAL to register a handler here. */
    .weak __metal_after_main
    la ra, __metal_after_main
2001006c:	dfff0097          	auipc	ra,0xdfff0
20010070:	f9408093          	addi	ra,ra,-108 # 0 <__metal_boot_hart>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:93
    beqz ra, 1f
20010074:	00008363          	beqz	ra,2001007a <_enter+0x7a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:94
    jalr ra
20010078:	9082                	jalr	ra
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:99
1:

    /* If that handler returns then there's not a whole lot we can do.  Just
     * try to make some noise. */
     la t0, 1f
2001007a:	00000297          	auipc	t0,0x0
2001007e:	00c28293          	addi	t0,t0,12 # 20010086 <_enter+0x86>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:100
     csrw mtvec, t0
20010082:	30529073          	csrw	mtvec,t0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:102
1:
     lw t1, 0(x0)
20010086:	00002303          	lw	t1,0(zero) # 0 <__metal_boot_hart>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:103
     j 1b
2001008a:	bff5                	j	20010086 <_enter+0x86>
2001008c:	0000                	unimp
	...

20010090 <__register_frame_info>:
__register_frame_info():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:117
.weak __register_frame_info
.global __register_frame_info
.section .text.metal.init.__register_frame_info
__register_frame_info:
    .cfi_startproc
    ret
20010090:	8082                	ret

20010092 <metal_mem_scrub>:
metal_mem_scrub():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:24
.type metal_mem_scrub, @function
metal_mem_scrub:

    /* Disable machine interrupts,
    restore previous mstatus value at exit */
    li      a3, 8
20010092:	46a1                	li	a3,8
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:25
    csrrc   t1, mstatus, a3
20010094:	3006b373          	csrrc	t1,mstatus,a3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:28

#if __riscv_xlen == 32
    addi    t0, x0, 4
20010098:	00400293          	li	t0,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:30
1:
    blt     a1, t0, 2f
2001009c:	0055c563          	blt	a1,t0,200100a6 <metal_mem_scrub+0x14>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:31
    andi    a2, a0, 3
200100a0:	00357613          	andi	a2,a0,3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:32
    beqz    a2, 3f
200100a4:	ca11                	beqz	a2,200100b8 <metal_mem_scrub+0x26>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:34
2:
    sb      x0, 0(a0)
200100a6:	00050023          	sb	zero,0(a0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:35
    addi    a0, a0, 1
200100aa:	0505                	addi	a0,a0,1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:36
    addi    a1, a1, -1
200100ac:	15fd                	addi	a1,a1,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:37
    bgtz    a1, 1b
200100ae:	feb047e3          	bgtz	a1,2001009c <metal_mem_scrub+0xa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:38
    csrw    mstatus, t1
200100b2:	30031073          	csrw	mstatus,t1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:39
    ret
200100b6:	8082                	ret
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:41
3:
    sw      x0, 0(a0)
200100b8:	00052023          	sw	zero,0(a0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:42
    addi    a0, a0, 4
200100bc:	0511                	addi	a0,a0,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:43
    addi    a1, a1, -4
200100be:	15f1                	addi	a1,a1,-4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:44
    bgtz    a1, 1b
200100c0:	fcb04ee3          	bgtz	a1,2001009c <metal_mem_scrub+0xa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:45
    csrw    mstatus, t1
200100c4:	30031073          	csrw	mstatus,t1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:46
    ret
200100c8:	8082                	ret

200100ca <__metal_memory_scrub>:
__metal_memory_scrub():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:74
.type __metal_memory_scrub, @function
__metal_memory_scrub:
/* Zero out specified memory regions */
1:
#if __riscv_xlen == 32
    sw      x0, 0(t1)
200100ca:	00032023          	sw	zero,0(t1)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:75
    addi    t1, t1, 4
200100ce:	0311                	addi	t1,t1,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:76
    blt     t1, t2, 1b
200100d0:	fe734de3          	blt	t1,t2,200100ca <__metal_memory_scrub>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:82
#else
    sd      x0, 0(t1)
    addi    t1, t1, 8
    blt     t1, t2, 1b
#endif
    ret
200100d4:	8082                	ret

200100d6 <__metal_before_start>:
__metal_before_start():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:94
.weak __metal_before_start
.global __metal_before_start
.type __metal_before_start, @function
__metal_before_start:
    /* Save caller ra */
    mv      s0, ra
200100d6:	8406                	mv	s0,ra
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:96

    la      t0, __metal_eccscrub_bit
200100d8:	dfff0297          	auipc	t0,0xdfff0
200100dc:	f2828293          	addi	t0,t0,-216 # 0 <__metal_boot_hart>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:97
    beqz    t0, skip_scrub
200100e0:	04028c63          	beqz	t0,20010138 <skip_scrub>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:99

    la      t0, __metal_boot_hart
200100e4:	dfff0297          	auipc	t0,0xdfff0
200100e8:	f1c28293          	addi	t0,t0,-228 # 0 <__metal_boot_hart>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:100
    csrr    a5, mhartid
200100ec:	f14027f3          	csrr	a5,mhartid
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:103

    /* Disable machine interrupts to be safe */
    li      a3, 8
200100f0:	46a1                	li	a3,8
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:104
    csrc    mstatus, a3
200100f2:	3006b073          	csrc	mstatus,a3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:107

    /* Zero out per hart stack */
    mv      t1, sp
200100f6:	830a                	mv	t1,sp
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:108
    la      t2, __stack_size
200100f8:	dfff0397          	auipc	t2,0xdfff0
200100fc:	30838393          	addi	t2,t2,776 # 400 <__stack_size>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:109
    add     t2, t2, sp
20010100:	938a                	add	t2,t2,sp
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:110
    beq     t1, t2, 1f
20010102:	00730363          	beq	t1,t2,20010108 <__metal_before_start+0x32>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:111
    jal     __metal_memory_scrub
20010106:	37d1                	jal	200100ca <__metal_memory_scrub>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:113
1:
    bne     a5, t0, skip_scrub
20010108:	02579863          	bne	a5,t0,20010138 <skip_scrub>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:116

    /* Zero out data segment */
    la      t1, metal_segment_data_target_start
2001010c:	5fff0317          	auipc	t1,0x5fff0
20010110:	ef430313          	addi	t1,t1,-268 # 80000000 <metal_segment_lim_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:117
    la      t2, metal_segment_data_target_end
20010114:	5fff1397          	auipc	t2,0x5fff1
20010118:	9fc38393          	addi	t2,t2,-1540 # 80000b10 <__tls_base>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:118
    beq     t1, t2, 1f
2001011c:	00730363          	beq	t1,t2,20010122 <__metal_before_start+0x4c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:119
    jal     __metal_memory_scrub
20010120:	376d                	jal	200100ca <__metal_memory_scrub>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:122
1:
    /* Zero out itim memory */
    la      t1, metal_segment_itim_target_start
20010122:	e7ff0317          	auipc	t1,0xe7ff0
20010126:	ede30313          	addi	t1,t1,-290 # 8000000 <metal_segment_itim_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:123
    la      t2, metal_segment_itim_target_end
2001012a:	e7ff0397          	auipc	t2,0xe7ff0
2001012e:	ed638393          	addi	t2,t2,-298 # 8000000 <metal_segment_itim_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:124
    beq     t1, t2, skip_scrub
20010132:	00730363          	beq	t1,t2,20010138 <skip_scrub>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:125
    jal     __metal_memory_scrub
20010136:	3f51                	jal	200100ca <__metal_memory_scrub>

20010138 <skip_scrub>:
skip_scrub():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:129

skip_scrub:
    /* Restore caller ra */
    mv      ra, s0
20010138:	80a2                	mv	ra,s0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:130
    ret
2001013a:	8082                	ret

2001013c <early_trap_vector>:
early_trap_vector():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/trap.S:64
.section .text.metal.init.trapvec
.global early_trap_vector
.align 2
early_trap_vector:
    .cfi_startproc
    csrr t0, mcause
2001013c:	342022f3          	csrr	t0,mcause
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/trap.S:65
    csrr t1, mepc
20010140:	34102373          	csrr	t1,mepc
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/trap.S:66
    csrr t2, mtval
20010144:	343023f3          	csrr	t2,mtval
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/trap.S:67
    j early_trap_vector
20010148:	bfd5                	j	2001013c <early_trap_vector>

2001014a <__metal_synchronize_harts>:
__metal_synchronize_harts():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/synchronize_harts.c:19
/*
 * _synchronize_harts() is called by crt0.S to cause harts > 0 to wait for
 * hart 0 to finish copying the datat section, zeroing the BSS, and running
 * the libc contstructors.
 */
__attribute__((section(".init"))) void __metal_synchronize_harts() {
2001014a:	1141                	addi	sp,sp,-16
2001014c:	c622                	sw	s0,12(sp)
2001014e:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/synchronize_harts.c:66
        while (METAL_MSIP(msip_base, hart) == 1)
            ;
    }

#endif /* __METAL_DT_MAX_HARTS > 1 */
}
20010150:	0001                	nop
20010152:	4432                	lw	s0,12(sp)
20010154:	0141                	addi	sp,sp,16
20010156:	8082                	ret

20010158 <_start>:
_start():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:36
.cfi_startproc
.cfi_undefined ra

  /* This is a bit funky: it's not usually sane for _start to return, but in
   * this case we actually want to in order to signal an error to the METAL. */
  mv s0, ra
20010158:	8406                	mv	s0,ra
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:44
   * safely perform any access that may be relaxed without GP being set.  This
   * is done with relaxation disabled to avoid relaxing the address calculation
   * to just "addi gp, gp, 0". */
.option push
.option norelax
  la gp, __global_pointer$
2001015a:	5fff1197          	auipc	gp,0x5fff1
2001015e:	16618193          	addi	gp,gp,358 # 800012c0 <__global_pointer$>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:50
.option pop

  /* Stack pointer is expected to be initialized before _start */

  /* If we're not hart 0, skip the initialization work */
  la t0, __metal_boot_hart
20010162:	00000293          	li	t0,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:51
  bne a0, t0, _skip_init
20010166:	0e551163          	bne	a0,t0,20010248 <_skip_init>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:60
   * boot and then need to get relocated into a non-persistant writable memory
   * before C code can execute.  If this is the case we do so here.  This step
   * is optional: if the METAL provides an environment in which this relocation
   * is not necessary then it must simply set metal_segment_data_source_start to
   * be equal to metal_segment_data_target_start. */
  la t0, metal_segment_data_source_start
2001016a:	00008297          	auipc	t0,0x8
2001016e:	72e28293          	addi	t0,t0,1838 # 20018898 <metal_segment_data_source_start>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:61
  la t1, metal_segment_data_target_start
20010172:	5fff0317          	auipc	t1,0x5fff0
20010176:	e8e30313          	addi	t1,t1,-370 # 80000000 <metal_segment_lim_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:62
  la t2, metal_segment_data_target_end
2001017a:	5fff1397          	auipc	t2,0x5fff1
2001017e:	99638393          	addi	t2,t2,-1642 # 80000b10 <__tls_base>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:64

  beq t0, t1, 2f
20010182:	00628c63          	beq	t0,t1,2001019a <_start+0x42>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:65
  bge t1, t2, 2f
20010186:	00735a63          	bge	t1,t2,2001019a <_start+0x42>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:69

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
2001018a:	0002a503          	lw	a0,0(t0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:70
  addi t0, t0, 4
2001018e:	0291                	addi	t0,t0,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:71
  sw   a0, 0(t1)
20010190:	00a32023          	sw	a0,0(t1)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:72
  addi t1, t1, 4
20010194:	0311                	addi	t1,t1,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:73
  blt  t1, t2, 1b
20010196:	fe734ae3          	blt	t1,t2,2001018a <_start+0x32>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:84
  blt  t1, t2, 1b
#endif
2:

  /* Copy the ITIM section */
  la t0, metal_segment_itim_source_start
2001019a:	00001297          	auipc	t0,0x1
2001019e:	05628293          	addi	t0,t0,86 # 200111f0 <metal_segment_itim_source_start>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:85
  la t1, metal_segment_itim_target_start
200101a2:	e7ff0317          	auipc	t1,0xe7ff0
200101a6:	e5e30313          	addi	t1,t1,-418 # 8000000 <metal_segment_itim_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:86
  la t2, metal_segment_itim_target_end
200101aa:	e7ff0397          	auipc	t2,0xe7ff0
200101ae:	e5638393          	addi	t2,t2,-426 # 8000000 <metal_segment_itim_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:88

  beq t0, t1, 2f
200101b2:	00628c63          	beq	t0,t1,200101ca <_start+0x72>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:89
  bge t1, t2, 2f
200101b6:	00735a63          	bge	t1,t2,200101ca <_start+0x72>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:93

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
200101ba:	0002a503          	lw	a0,0(t0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:94
  addi t0, t0, 4
200101be:	0291                	addi	t0,t0,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:95
  sw   a0, 0(t1)
200101c0:	00a32023          	sw	a0,0(t1)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:96
  addi t1, t1, 4
200101c4:	0311                	addi	t1,t1,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:97
  blt  t1, t2, 1b
200101c6:	fe734ae3          	blt	t1,t2,200101ba <_start+0x62>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:109
#endif
2:

  /* Fence all subsequent instruction fetches until after the ITIM writes
     complete */
  fence.i
200101ca:	0000100f          	fence.i
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:114

2:

  /* Copy the LIM section */
  la t0, metal_segment_lim_source_start
200101ce:	00001297          	auipc	t0,0x1
200101d2:	02228293          	addi	t0,t0,34 # 200111f0 <metal_segment_itim_source_start>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:115
  la t1, metal_segment_lim_target_start
200101d6:	5fff0317          	auipc	t1,0x5fff0
200101da:	e2a30313          	addi	t1,t1,-470 # 80000000 <metal_segment_lim_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:116
  la t2, metal_segment_lim_target_end
200101de:	5fff0397          	auipc	t2,0x5fff0
200101e2:	e2238393          	addi	t2,t2,-478 # 80000000 <metal_segment_lim_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:118

  beq t0, t1, 2f
200101e6:	00628c63          	beq	t0,t1,200101fe <_start+0xa6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:119
  bge t1, t2, 2f
200101ea:	00735a63          	bge	t1,t2,200101fe <_start+0xa6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:123

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
200101ee:	0002a503          	lw	a0,0(t0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:124
  addi t0, t0, 4
200101f2:	0291                	addi	t0,t0,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:125
  sw   a0, 0(t1)
200101f4:	00a32023          	sw	a0,0(t1)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:126
  addi t1, t1, 4
200101f8:	0311                	addi	t1,t1,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:127
  blt  t1, t2, 1b
200101fa:	fe734ae3          	blt	t1,t2,200101ee <_start+0x96>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:139
#endif
2:

  /* Fence all subsequent instruction fetches until after the LIM writes
     complete */
  fence.i
200101fe:	0000100f          	fence.i
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:142

  /* Zero the BSS segment. */
  la t1, metal_segment_bss_target_start
20010202:	5fff1317          	auipc	t1,0x5fff1
20010206:	90e30313          	addi	t1,t1,-1778 # 80000b10 <__tls_base>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:143
  la t2, metal_segment_bss_target_end
2001020a:	8f418393          	addi	t2,gp,-1804 # 80000bb4 <metal_segment_bss_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:145

  bge t1, t2, 2f
2001020e:	00735763          	bge	t1,t2,2001021c <_start+0xc4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:149

1:
#if __riscv_xlen == 32
  sw   x0, 0(t1)
20010212:	00032023          	sw	zero,0(t1)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:150
  addi t1, t1, 4
20010216:	0311                	addi	t1,t1,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:151
  blt  t1, t2, 1b
20010218:	fe734de3          	blt	t1,t2,20010212 <_start+0xba>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:161
#endif
2:

  /* Set TLS pointer */
  .weak __tls_base	
  la tp, __tls_base
2001021c:	5fff1217          	auipc	tp,0x5fff1
20010220:	8f420213          	addi	tp,tp,-1804 # 80000b10 <__tls_base>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:166

  /* At this point we're in an environment that can execute C code.  The first
   * thing to do is to make the callback to the parent environment if it's been
   * requested to do so. */
  beqz a2, 1f
20010224:	c211                	beqz	a2,20010228 <_start+0xd0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:167
  jalr a2
20010226:	9602                	jalr	a2
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:171
1:

  /* The RISC-V port only uses new-style constructors and destructors. */
  la a0, __libc_fini_array
20010228:	00008517          	auipc	a0,0x8
2001022c:	c7450513          	addi	a0,a0,-908 # 20017e9c <__libc_fini_array>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:172
  call atexit
20010230:	42f070ef          	jal	ra,20017e5e <atexit>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:173
  call __libc_init_array
20010234:	4a1070ef          	jal	ra,20017ed4 <__libc_init_array>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:177

  /* Register metal_fini_run as a destructor and call metal_init_run to
   * run and setup Metal constructors */
  la a0, metal_fini_run
20010238:	00008517          	auipc	a0,0x8
2001023c:	60c50513          	addi	a0,a0,1548 # 20018844 <metal_fini_run>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:178
  call atexit
20010240:	41f070ef          	jal	ra,20017e5e <atexit>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:179
  call metal_init_run
20010244:	5ea080ef          	jal	ra,2001882e <metal_init_run>

20010248 <_skip_init>:
_skip_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:185

_skip_init:

  /* Synchronize harts so that secondary harts wait until hart 0 finishes
     initializing */
  call __metal_synchronize_harts
20010248:	3709                	jal	2001014a <__metal_synchronize_harts>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:188

  /* Disable and clear all interrupt sources */
  li   a3, -1
2001024a:	56fd                	li	a3,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:189
  csrc mie, a3
2001024c:	3046b073          	csrc	mie,a3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:190
  csrc mip, a3
20010250:	3446b073          	csrc	mip,a3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:194

  /* The delegation CSRs exist if user mode interrupts (N extension) or
   * supervisor mode (S extension) are supported */
  csrr a5, misa
20010254:	301027f3          	csrr	a5,misa
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:195
  lui  a4, 0x42
20010258:	00042737          	lui	a4,0x42
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:196
  and  a4, a4, a5
2001025c:	8f7d                	and	a4,a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:197
  beqz a4, 1f
2001025e:	c709                	beqz	a4,20010268 <_skip_init+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:198
  csrc mideleg, a3
20010260:	3036b073          	csrc	mideleg,a3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:199
  csrc medeleg, a3
20010264:	3026b073          	csrc	medeleg,a3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:203
1:

  /* The satp CSR exists if supervisor mode (S extension) is supported */
  lui  a4, 0x40
20010268:	00040737          	lui	a4,0x40
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:204
  and  a4, a4, a5
2001026c:	8f7d                	and	a4,a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:205
  beqz a4, 1f
2001026e:	c319                	beqz	a4,20010274 <_skip_init+0x2c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:206
  csrc satp, a3
20010270:	1806b073          	csrc	satp,a3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:210
1:

  /* Check RISC-V isa and enable FS bits if Floating Point architecture. */
  li   a4, 0x10028
20010274:	00010737          	lui	a4,0x10
20010278:	02870713          	addi	a4,a4,40 # 10028 <__heap_size+0xf828>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:211
  and  a5, a5, a4
2001027c:	8ff9                	and	a5,a5,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:212
  beqz a5, 1f
2001027e:	cb89                	beqz	a5,20010290 <_skip_init+0x48>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:213
  csrr a5, mstatus
20010280:	300027f3          	csrr	a5,mstatus
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:214
  lui  a4, 0x2
20010284:	6709                	lui	a4,0x2
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:215
  or   a5, a5, a4
20010286:	8fd9                	or	a5,a5,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:216
  csrw mstatus, a5
20010288:	30079073          	csrw	mstatus,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:217
  csrwi fcsr, 0
2001028c:	00305073          	csrwi	fcsr,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:221
1:

  /* Check for vector extension support and enable it if found */
  csrr a5, misa
20010290:	301027f3          	csrr	a5,misa
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:222
  li a4, 0x200000
20010294:	00200737          	lui	a4,0x200
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:223
  and a5, a5, a4
20010298:	8ff9                	and	a5,a5,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:224
  beqz a5, 1f
2001029a:	c799                	beqz	a5,200102a8 <_skip_init+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:225
  csrr a5, mstatus
2001029c:	300027f3          	csrr	a5,mstatus
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:226
  ori a5, a5, 0x200
200102a0:	2007e793          	ori	a5,a5,512
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:227
  csrw mstatus, a5
200102a4:	30079073          	csrw	mstatus,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:233
1:

  /* This is a C runtime, so main() is defined to have some arguments.  Since
   * there's nothing sane the METAL can pass we don't bother with that but
   * instead just setup as close to a NOP as we can. */
  li a0, 1     /* argc=1 */
200102a8:	4505                	li	a0,1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:234
  la a1, argv  /* argv = {"libgloss", NULL} */
200102aa:	00001597          	auipc	a1,0x1
200102ae:	e2258593          	addi	a1,a1,-478 # 200110cc <argv>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:235
  la a2, envp  /* envp = {NULL} */
200102b2:	00001617          	auipc	a2,0x1
200102b6:	e1e60613          	addi	a2,a2,-482 # 200110d0 <envp>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:236
  call secondary_main
200102ba:	2031                	jal	200102c6 <secondary_main>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:242

  /* Call exit to handle libc's cleanup routines.  Under normal contains this
   * shouldn't even get called, but I'm still not using a tail call here
   * because returning to the METAL is the right thing to do in pathological
   * situations. */
  call exit
200102bc:	3b9070ef          	jal	ra,20017e74 <exit>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:247

  /* And here's where we return.  Again, it's a bit odd but the METAL defines
   * this as a bad idea (ie, as opposed to leaving it undefined) and at this
   * point it's really the only thing left to do. */
  mv ra, s0
200102c0:	80a2                	mv	ra,s0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:248
  ret
200102c2:	8082                	ret

200102c4 <_fini>:
_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:260
.type   _init, @function
.global _fini
.type   _fini, @function
_init:
_fini:
  ret
200102c4:	8082                	ret

200102c6 <secondary_main>:
secondary_main():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:271
.weak   secondary_main
.global secondary_main
.type   secondary_main, @function

secondary_main:
  addi sp, sp, -16
200102c6:	1141                	addi	sp,sp,-16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:273
#if __riscv_xlen == 32
  sw ra, 4(sp)
200102c8:	c206                	sw	ra,4(sp)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:277
#else
  sd ra, 8(sp)
#endif
  csrr t0, mhartid
200102ca:	f14022f3          	csrr	t0,mhartid
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:278
  la t1, __metal_boot_hart
200102ce:	00000313          	li	t1,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:279
  beq t0, t1, 2f
200102d2:	00628563          	beq	t0,t1,200102dc <secondary_main+0x16>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:281
1:
  wfi
200102d6:	10500073          	wfi
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:282
  j 1b
200102da:	bff5                	j	200102d6 <secondary_main+0x10>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:284
2:
  call main
200102dc:	725000ef          	jal	ra,20011200 <main>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:286
#if __riscv_xlen == 32
  lw ra, 4(sp)
200102e0:	4092                	lw	ra,4(sp)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:290
#else
  ld ra, 8(sp)
#endif
  addi sp, sp, 16
200102e2:	0141                	addi	sp,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:291
  ret
200102e4:	8082                	ret

Disassembly of section .ctors:

200102f4 <metal_sifive_fe310_g000_pll_init>:
metal_sifive_fe310_g000_pll_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:151
    return pll_input_rate * config->multiplier / config->divisor;
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE

METAL_CONSTRUCTOR(metal_sifive_fe310_g000_pll_init) {
200102f4:	1101                	addi	sp,sp,-32
200102f6:	ce06                	sw	ra,28(sp)
200102f8:	cc22                	sw	s0,24(sp)
200102fa:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:152
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
200102fc:	0f6050ef          	jal	ra,200153f2 <__metal_driver_sifive_fe310_g000_pll_init_rate>
20010300:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:154
    /* If the PLL init_rate is zero, don't initialize the PLL */
    if (init_rate != 0)
20010304:	fec42783          	lw	a5,-20(s0)
20010308:	c799                	beqz	a5,20010316 <__fini_array_end+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:155
        __metal_driver_sifive_fe310_g000_pll_init(
2001030a:	800017b7          	lui	a5,0x80001
2001030e:	ab478513          	addi	a0,a5,-1356 # 80000ab4 <metal_segment_heap_target_end+0xfffff2f4>
20010312:	168050ef          	jal	ra,2001547a <__metal_driver_sifive_fe310_g000_pll_init>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:157
            __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE);
}
20010316:	0001                	nop
20010318:	40f2                	lw	ra,28(sp)
2001031a:	4462                	lw	s0,24(sp)
2001031c:	6105                	addi	sp,sp,32
2001031e:	8082                	ret

20010320 <use_hfxosc>:
use_hfxosc():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:389

    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE
METAL_CONSTRUCTOR(use_hfxosc) {
20010320:	1101                	addi	sp,sp,-32
20010322:	ce06                	sw	ra,28(sp)
20010324:	cc22                	sw	s0,24(sp)
20010326:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:390
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20010328:	0ca050ef          	jal	ra,200153f2 <__metal_driver_sifive_fe310_g000_pll_init_rate>
2001032c:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:391
    metal_clock_set_rate_hz(&__METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE->clock,
20010330:	fec42583          	lw	a1,-20(s0)
20010334:	800017b7          	lui	a5,0x80001
20010338:	ab478513          	addi	a0,a5,-1356 # 80000ab4 <metal_segment_heap_target_end+0xfffff2f4>
2001033c:	378070ef          	jal	ra,200176b4 <metal_clock_set_rate_hz>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:393
                            init_rate);
}
20010340:	0001                	nop
20010342:	40f2                	lw	ra,28(sp)
20010344:	4462                	lw	s0,24(sp)
20010346:	6105                	addi	sp,sp,32
20010348:	8082                	ret

2001034a <metal_tty_init>:
metal_tty_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/tty.c:28

#ifndef __METAL_DT_STDOUT_UART_BAUD
#define __METAL_DT_STDOUT_UART_BAUD 115200
#endif

METAL_CONSTRUCTOR(metal_tty_init) {
2001034a:	1141                	addi	sp,sp,-16
2001034c:	c606                	sw	ra,12(sp)
2001034e:	c422                	sw	s0,8(sp)
20010350:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/tty.c:29
    metal_uart_init(__METAL_DT_STDOUT_UART_HANDLE, __METAL_DT_STDOUT_UART_BAUD);
20010352:	67f1                	lui	a5,0x1c
20010354:	20078593          	addi	a1,a5,512 # 1c200 <__heap_size+0x1ba00>
20010358:	800017b7          	lui	a5,0x80001
2001035c:	a5c78513          	addi	a0,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
20010360:	712070ef          	jal	ra,20017a72 <metal_uart_init>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/tty.c:30
}
20010364:	0001                	nop
20010366:	40b2                	lw	ra,12(sp)
20010368:	4422                	lw	s0,8(sp)
2001036a:	0141                	addi	sp,sp,16
2001036c:	8082                	ret

Disassembly of section .text:

20011200 <main>:
main():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:54
#define WAIT_1S(timeout)                                                       \
  timeout = time(NULL) + 1;                                                    \
  while (timeout > time(NULL))                                                 \
    ;

int main() {
20011200:	7179                	addi	sp,sp,-48
20011202:	d606                	sw	ra,44(sp)
20011204:	d422                	sw	s0,40(sp)
20011206:	1800                	addi	s0,sp,48
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:66
	 * [4] accelero x-axis MSB
	 * [5] accelero x-axis LSB
	 * [6] accelero y-axis MSB
	 * [7] accelero y-axis LSB
	 * */
	unsigned char imu_addr_buf[LEN8] = { IMU_WHO_AM_I_SUBADDR, IMU_STATUS_REG_SUBADDR,
20011208:	200117b7          	lui	a5,0x20011
2001120c:	1e078793          	addi	a5,a5,480 # 200111e0 <__clz_tab+0x100>
20011210:	4398                	lw	a4,0(a5)
20011212:	fce42e23          	sw	a4,-36(s0)
20011216:	43dc                	lw	a5,4(a5)
20011218:	fef42023          	sw	a5,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:75
	unsigned char imu_buf[LEN8];
	time_t timeout;
	struct metal_i2c *i2c;
//	struct metal_gpio *gpio;

	i2c = metal_i2c_get_device(0);
2001121c:	4501                	li	a0,0
2001121e:	6f8060ef          	jal	ra,20017916 <metal_i2c_get_device>
20011222:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:78
//	gpio = metal_gpio_get_device(0);

	if (i2c == NULL) {
20011226:	fec42783          	lw	a5,-20(s0)
2001122a:	eb81                	bnez	a5,2001123a <main+0x3a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:79
		printf("I2C not available \n");
2001122c:	200107b7          	lui	a5,0x20010
20011230:	37078513          	addi	a0,a5,880 # 20010370 <metal_tty_init+0x26>
20011234:	29bd                	jal	200116b2 <puts>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:80
		return RET_NOK;
20011236:	4785                	li	a5,1
20011238:	ae89                	j	2001158a <main+0x38a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:87
//	if (gpio == NULL) {
//		printf("GPIO not available \n");
//		return RET_NOK;
//	}

	metal_i2c_init(i2c, I2C_BAUDRATE, METAL_I2C_MASTER);
2001123a:	4605                	li	a2,1
2001123c:	67e1                	lui	a5,0x18
2001123e:	6a078593          	addi	a1,a5,1696 # 186a0 <__heap_size+0x17ea0>
20011242:	fec42503          	lw	a0,-20(s0)
20011246:	5e0060ef          	jal	ra,20017826 <metal_i2c_init>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:90

	/* Read IMU Chip ID */
	if (metal_i2c_write(i2c, IMU_I2C_ADDR, LEN1, imu_addr_buf, METAL_I2C_STOP_DISABLE) == RET_OK) {
2001124a:	fdc40793          	addi	a5,s0,-36
2001124e:	4701                	li	a4,0
20011250:	86be                	mv	a3,a5
20011252:	4605                	li	a2,1
20011254:	06a00593          	li	a1,106
20011258:	fec42503          	lw	a0,-20(s0)
2001125c:	5fe060ef          	jal	ra,2001785a <metal_i2c_write>
20011260:	87aa                	mv	a5,a0
20011262:	e795                	bnez	a5,2001128e <main+0x8e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:91
		if (metal_i2c_read(i2c, IMU_I2C_ADDR, LEN1, imu_buf, METAL_I2C_STOP_ENABLE) == RET_OK) {
20011264:	fd440793          	addi	a5,s0,-44
20011268:	4705                	li	a4,1
2001126a:	86be                	mv	a3,a5
2001126c:	4605                	li	a2,1
2001126e:	06a00593          	li	a1,106
20011272:	fec42503          	lw	a0,-20(s0)
20011276:	62a060ef          	jal	ra,200178a0 <metal_i2c_read>
2001127a:	87aa                	mv	a5,a0
2001127c:	eb89                	bnez	a5,2001128e <main+0x8e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:92
			printf("Data read = %X\n", imu_buf[0]);
2001127e:	fd444783          	lbu	a5,-44(s0)
20011282:	85be                	mv	a1,a5
20011284:	200107b7          	lui	a5,0x20010
20011288:	38478513          	addi	a0,a5,900 # 20010384 <metal_tty_init+0x3a>
2001128c:	2621                	jal	20011594 <iprintf>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:97
		}
	}

	/* Verify IMU Chip ID */
	if (imu_buf[0] == IMU_SENSOR_ID) {
2001128e:	fd444703          	lbu	a4,-44(s0)
20011292:	06900793          	li	a5,105
20011296:	00f71863          	bne	a4,a5,200112a6 <main+0xa6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:98
		printf("IMU module detected!\n");
2001129a:	200107b7          	lui	a5,0x20010
2001129e:	39478513          	addi	a0,a5,916 # 20010394 <metal_tty_init+0x4a>
200112a2:	2901                	jal	200116b2 <puts>
200112a4:	a031                	j	200112b0 <main+0xb0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:100
	} else {
		printf("Failed to detect IMU module!\n");
200112a6:	200107b7          	lui	a5,0x20010
200112aa:	3ac78513          	addi	a0,a5,940 # 200103ac <metal_tty_init+0x62>
200112ae:	2111                	jal	200116b2 <puts>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:105
		//return RET_NOK;
	}

	/* Enable IMU */
	unsigned char imu_ctrl_buf[LEN4] = { IMU_CTRL1_XL_SUBADDR, 0xA0,
200112b0:	200117b7          	lui	a5,0x20011
200112b4:	1e87a783          	lw	a5,488(a5) # 200111e8 <__clz_tab+0x108>
200112b8:	fcf42823          	sw	a5,-48(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:107
										IMU_CTRL2_G_SUBADDR, 0x80 };
	if (metal_i2c_write(i2c, IMU_I2C_ADDR, LEN2, imu_ctrl_buf, METAL_I2C_STOP_ENABLE) == RET_OK) {
200112bc:	fd040793          	addi	a5,s0,-48
200112c0:	4705                	li	a4,1
200112c2:	86be                	mv	a3,a5
200112c4:	4609                	li	a2,2
200112c6:	06a00593          	li	a1,106
200112ca:	fec42503          	lw	a0,-20(s0)
200112ce:	58c060ef          	jal	ra,2001785a <metal_i2c_write>
200112d2:	87aa                	mv	a5,a0
200112d4:	e791                	bnez	a5,200112e0 <main+0xe0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:108
		printf("IMU accelero enabled!\n");
200112d6:	200107b7          	lui	a5,0x20010
200112da:	3cc78513          	addi	a0,a5,972 # 200103cc <metal_tty_init+0x82>
200112de:	2ed1                	jal	200116b2 <puts>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:110
	}
	if (metal_i2c_write(i2c, IMU_I2C_ADDR, LEN2, imu_ctrl_buf + 2, METAL_I2C_STOP_ENABLE) == RET_OK) {
200112e0:	fd040793          	addi	a5,s0,-48
200112e4:	0789                	addi	a5,a5,2
200112e6:	4705                	li	a4,1
200112e8:	86be                	mv	a3,a5
200112ea:	4609                	li	a2,2
200112ec:	06a00593          	li	a1,106
200112f0:	fec42503          	lw	a0,-20(s0)
200112f4:	566060ef          	jal	ra,2001785a <metal_i2c_write>
200112f8:	87aa                	mv	a5,a0
200112fa:	e791                	bnez	a5,20011306 <main+0x106>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:111
		printf("IMU gyro enabled!\n");
200112fc:	200107b7          	lui	a5,0x20010
20011300:	3e478513          	addi	a0,a5,996 # 200103e4 <metal_tty_init+0x9a>
20011304:	267d                	jal	200116b2 <puts>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:114
	}

	short rawGyroZ = 0;
20011306:	fe041523          	sh	zero,-22(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:115
	short rawAcceleroX = 0;
2001130a:	fe041423          	sh	zero,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:116
	short rawAcceleroY = 0;
2001130e:	fe041323          	sh	zero,-26(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:121

	while(1) {

		/* Read IMU Status Register */
		if (metal_i2c_write(i2c, IMU_I2C_ADDR, LEN1, imu_addr_buf + 1, METAL_I2C_STOP_DISABLE) == RET_OK) {
20011312:	fdc40793          	addi	a5,s0,-36
20011316:	0785                	addi	a5,a5,1
20011318:	4701                	li	a4,0
2001131a:	86be                	mv	a3,a5
2001131c:	4605                	li	a2,1
2001131e:	06a00593          	li	a1,106
20011322:	fec42503          	lw	a0,-20(s0)
20011326:	534060ef          	jal	ra,2001785a <metal_i2c_write>
2001132a:	87aa                	mv	a5,a0
2001132c:	e79d                	bnez	a5,2001135a <main+0x15a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:122
			if (metal_i2c_read(i2c, IMU_I2C_ADDR, LEN1, imu_buf + 1, METAL_I2C_STOP_ENABLE) == RET_OK) {
2001132e:	fd440793          	addi	a5,s0,-44
20011332:	0785                	addi	a5,a5,1
20011334:	4705                	li	a4,1
20011336:	86be                	mv	a3,a5
20011338:	4605                	li	a2,1
2001133a:	06a00593          	li	a1,106
2001133e:	fec42503          	lw	a0,-20(s0)
20011342:	55e060ef          	jal	ra,200178a0 <metal_i2c_read>
20011346:	87aa                	mv	a5,a0
20011348:	eb89                	bnez	a5,2001135a <main+0x15a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:123
				printf("Status Reg = %X\n", imu_buf[1]);
2001134a:	fd544783          	lbu	a5,-43(s0)
2001134e:	85be                	mv	a1,a5
20011350:	200107b7          	lui	a5,0x20010
20011354:	3f878513          	addi	a0,a5,1016 # 200103f8 <metal_tty_init+0xae>
20011358:	2c35                	jal	20011594 <iprintf>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:128
			}
		}

		/* Read IMU Gyro (z-axis) */
		if (metal_i2c_write(i2c, IMU_I2C_ADDR, LEN1, imu_addr_buf + 2, METAL_I2C_STOP_DISABLE) == RET_OK) {
2001135a:	fdc40793          	addi	a5,s0,-36
2001135e:	0789                	addi	a5,a5,2
20011360:	4701                	li	a4,0
20011362:	86be                	mv	a3,a5
20011364:	4605                	li	a2,1
20011366:	06a00593          	li	a1,106
2001136a:	fec42503          	lw	a0,-20(s0)
2001136e:	4ec060ef          	jal	ra,2001785a <metal_i2c_write>
20011372:	87aa                	mv	a5,a0
20011374:	e79d                	bnez	a5,200113a2 <main+0x1a2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:129
			if (metal_i2c_read(i2c, IMU_I2C_ADDR, LEN1, imu_buf + 2, METAL_I2C_STOP_ENABLE) == RET_OK) {
20011376:	fd440793          	addi	a5,s0,-44
2001137a:	0789                	addi	a5,a5,2
2001137c:	4705                	li	a4,1
2001137e:	86be                	mv	a3,a5
20011380:	4605                	li	a2,1
20011382:	06a00593          	li	a1,106
20011386:	fec42503          	lw	a0,-20(s0)
2001138a:	516060ef          	jal	ra,200178a0 <metal_i2c_read>
2001138e:	87aa                	mv	a5,a0
20011390:	eb89                	bnez	a5,200113a2 <main+0x1a2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:130
				printf("Gyro Z MSB = %X\n", imu_buf[2]);
20011392:	fd644783          	lbu	a5,-42(s0)
20011396:	85be                	mv	a1,a5
20011398:	200107b7          	lui	a5,0x20010
2001139c:	40c78513          	addi	a0,a5,1036 # 2001040c <metal_tty_init+0xc2>
200113a0:	2ad5                	jal	20011594 <iprintf>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:133
			}
		}
		if (metal_i2c_write(i2c, IMU_I2C_ADDR, LEN1, imu_addr_buf + 3, METAL_I2C_STOP_DISABLE) == RET_OK) {
200113a2:	fdc40793          	addi	a5,s0,-36
200113a6:	078d                	addi	a5,a5,3
200113a8:	4701                	li	a4,0
200113aa:	86be                	mv	a3,a5
200113ac:	4605                	li	a2,1
200113ae:	06a00593          	li	a1,106
200113b2:	fec42503          	lw	a0,-20(s0)
200113b6:	4a4060ef          	jal	ra,2001785a <metal_i2c_write>
200113ba:	87aa                	mv	a5,a0
200113bc:	e79d                	bnez	a5,200113ea <main+0x1ea>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:134
			if (metal_i2c_read(i2c, IMU_I2C_ADDR, LEN1, imu_buf + 3, METAL_I2C_STOP_ENABLE) == RET_OK) {
200113be:	fd440793          	addi	a5,s0,-44
200113c2:	078d                	addi	a5,a5,3
200113c4:	4705                	li	a4,1
200113c6:	86be                	mv	a3,a5
200113c8:	4605                	li	a2,1
200113ca:	06a00593          	li	a1,106
200113ce:	fec42503          	lw	a0,-20(s0)
200113d2:	4ce060ef          	jal	ra,200178a0 <metal_i2c_read>
200113d6:	87aa                	mv	a5,a0
200113d8:	eb89                	bnez	a5,200113ea <main+0x1ea>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:135
				printf("Gyro Z LSB = %X\n", imu_buf[3]);
200113da:	fd744783          	lbu	a5,-41(s0)
200113de:	85be                	mv	a1,a5
200113e0:	200107b7          	lui	a5,0x20010
200113e4:	42078513          	addi	a0,a5,1056 # 20010420 <metal_tty_init+0xd6>
200113e8:	2275                	jal	20011594 <iprintf>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:138
			}
		}
		rawGyroZ = (short) ((imu_buf[2] << 8) | imu_buf[3]);
200113ea:	fd644783          	lbu	a5,-42(s0)
200113ee:	07a2                	slli	a5,a5,0x8
200113f0:	01079713          	slli	a4,a5,0x10
200113f4:	8741                	srai	a4,a4,0x10
200113f6:	fd744783          	lbu	a5,-41(s0)
200113fa:	07c2                	slli	a5,a5,0x10
200113fc:	87c1                	srai	a5,a5,0x10
200113fe:	8fd9                	or	a5,a5,a4
20011400:	fef41523          	sh	a5,-22(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:139
		printf("Gyro Z = %d\n", rawGyroZ);
20011404:	fea41783          	lh	a5,-22(s0)
20011408:	85be                	mv	a1,a5
2001140a:	200107b7          	lui	a5,0x20010
2001140e:	43478513          	addi	a0,a5,1076 # 20010434 <metal_tty_init+0xea>
20011412:	2249                	jal	20011594 <iprintf>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:142

		/* Read IMU Accelero (x-y plane) */
		if (metal_i2c_write(i2c, IMU_I2C_ADDR, LEN1, imu_addr_buf + 4, METAL_I2C_STOP_DISABLE) == RET_OK) {
20011414:	fdc40793          	addi	a5,s0,-36
20011418:	0791                	addi	a5,a5,4
2001141a:	4701                	li	a4,0
2001141c:	86be                	mv	a3,a5
2001141e:	4605                	li	a2,1
20011420:	06a00593          	li	a1,106
20011424:	fec42503          	lw	a0,-20(s0)
20011428:	432060ef          	jal	ra,2001785a <metal_i2c_write>
2001142c:	87aa                	mv	a5,a0
2001142e:	e79d                	bnez	a5,2001145c <main+0x25c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:143
			if (metal_i2c_read(i2c, IMU_I2C_ADDR, LEN1, imu_buf + 4, METAL_I2C_STOP_ENABLE) == RET_OK) {
20011430:	fd440793          	addi	a5,s0,-44
20011434:	0791                	addi	a5,a5,4
20011436:	4705                	li	a4,1
20011438:	86be                	mv	a3,a5
2001143a:	4605                	li	a2,1
2001143c:	06a00593          	li	a1,106
20011440:	fec42503          	lw	a0,-20(s0)
20011444:	45c060ef          	jal	ra,200178a0 <metal_i2c_read>
20011448:	87aa                	mv	a5,a0
2001144a:	eb89                	bnez	a5,2001145c <main+0x25c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:144
				printf("Accelero X MSB = %X\n", imu_buf[4]);
2001144c:	fd844783          	lbu	a5,-40(s0)
20011450:	85be                	mv	a1,a5
20011452:	200107b7          	lui	a5,0x20010
20011456:	44478513          	addi	a0,a5,1092 # 20010444 <metal_tty_init+0xfa>
2001145a:	2a2d                	jal	20011594 <iprintf>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:147
			}
		}
		if (metal_i2c_write(i2c, IMU_I2C_ADDR, LEN1, imu_addr_buf + 5, METAL_I2C_STOP_DISABLE) == RET_OK) {
2001145c:	fdc40793          	addi	a5,s0,-36
20011460:	0795                	addi	a5,a5,5
20011462:	4701                	li	a4,0
20011464:	86be                	mv	a3,a5
20011466:	4605                	li	a2,1
20011468:	06a00593          	li	a1,106
2001146c:	fec42503          	lw	a0,-20(s0)
20011470:	3ea060ef          	jal	ra,2001785a <metal_i2c_write>
20011474:	87aa                	mv	a5,a0
20011476:	e79d                	bnez	a5,200114a4 <main+0x2a4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:148
			if (metal_i2c_read(i2c, IMU_I2C_ADDR, LEN1, imu_buf + 5, METAL_I2C_STOP_ENABLE) == RET_OK) {
20011478:	fd440793          	addi	a5,s0,-44
2001147c:	0795                	addi	a5,a5,5
2001147e:	4705                	li	a4,1
20011480:	86be                	mv	a3,a5
20011482:	4605                	li	a2,1
20011484:	06a00593          	li	a1,106
20011488:	fec42503          	lw	a0,-20(s0)
2001148c:	414060ef          	jal	ra,200178a0 <metal_i2c_read>
20011490:	87aa                	mv	a5,a0
20011492:	eb89                	bnez	a5,200114a4 <main+0x2a4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:149
				printf("Accelero X LSB = %X\n", imu_buf[5]);
20011494:	fd944783          	lbu	a5,-39(s0)
20011498:	85be                	mv	a1,a5
2001149a:	200107b7          	lui	a5,0x20010
2001149e:	45c78513          	addi	a0,a5,1116 # 2001045c <metal_tty_init+0x112>
200114a2:	28cd                	jal	20011594 <iprintf>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:152
			}
		}
		rawAcceleroX = (short) ((imu_buf[4] << 8) | imu_buf[5]);
200114a4:	fd844783          	lbu	a5,-40(s0)
200114a8:	07a2                	slli	a5,a5,0x8
200114aa:	01079713          	slli	a4,a5,0x10
200114ae:	8741                	srai	a4,a4,0x10
200114b0:	fd944783          	lbu	a5,-39(s0)
200114b4:	07c2                	slli	a5,a5,0x10
200114b6:	87c1                	srai	a5,a5,0x10
200114b8:	8fd9                	or	a5,a5,a4
200114ba:	fef41423          	sh	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:153
		printf("Accelero X = %d\n", rawAcceleroX);
200114be:	fe841783          	lh	a5,-24(s0)
200114c2:	85be                	mv	a1,a5
200114c4:	200107b7          	lui	a5,0x20010
200114c8:	47478513          	addi	a0,a5,1140 # 20010474 <metal_tty_init+0x12a>
200114cc:	20e1                	jal	20011594 <iprintf>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:155

		if (metal_i2c_write(i2c, IMU_I2C_ADDR, LEN1, imu_addr_buf + 6, METAL_I2C_STOP_DISABLE) == RET_OK) {
200114ce:	fdc40793          	addi	a5,s0,-36
200114d2:	0799                	addi	a5,a5,6
200114d4:	4701                	li	a4,0
200114d6:	86be                	mv	a3,a5
200114d8:	4605                	li	a2,1
200114da:	06a00593          	li	a1,106
200114de:	fec42503          	lw	a0,-20(s0)
200114e2:	378060ef          	jal	ra,2001785a <metal_i2c_write>
200114e6:	87aa                	mv	a5,a0
200114e8:	e79d                	bnez	a5,20011516 <main+0x316>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:156
			if (metal_i2c_read(i2c, IMU_I2C_ADDR, LEN1, imu_buf + 6, METAL_I2C_STOP_ENABLE) == RET_OK) {
200114ea:	fd440793          	addi	a5,s0,-44
200114ee:	0799                	addi	a5,a5,6
200114f0:	4705                	li	a4,1
200114f2:	86be                	mv	a3,a5
200114f4:	4605                	li	a2,1
200114f6:	06a00593          	li	a1,106
200114fa:	fec42503          	lw	a0,-20(s0)
200114fe:	3a2060ef          	jal	ra,200178a0 <metal_i2c_read>
20011502:	87aa                	mv	a5,a0
20011504:	eb89                	bnez	a5,20011516 <main+0x316>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:157
				printf("Accelero Y MSB = %X\n", imu_buf[6]);
20011506:	fda44783          	lbu	a5,-38(s0)
2001150a:	85be                	mv	a1,a5
2001150c:	200107b7          	lui	a5,0x20010
20011510:	48878513          	addi	a0,a5,1160 # 20010488 <metal_tty_init+0x13e>
20011514:	2041                	jal	20011594 <iprintf>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:160
			}
		}
		if (metal_i2c_write(i2c, IMU_I2C_ADDR, LEN1, imu_addr_buf + 7, METAL_I2C_STOP_DISABLE) == RET_OK) {
20011516:	fdc40793          	addi	a5,s0,-36
2001151a:	079d                	addi	a5,a5,7
2001151c:	4701                	li	a4,0
2001151e:	86be                	mv	a3,a5
20011520:	4605                	li	a2,1
20011522:	06a00593          	li	a1,106
20011526:	fec42503          	lw	a0,-20(s0)
2001152a:	330060ef          	jal	ra,2001785a <metal_i2c_write>
2001152e:	87aa                	mv	a5,a0
20011530:	e79d                	bnez	a5,2001155e <main+0x35e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:161
			if (metal_i2c_read(i2c, IMU_I2C_ADDR, LEN1, imu_buf + 7, METAL_I2C_STOP_ENABLE) == RET_OK) {
20011532:	fd440793          	addi	a5,s0,-44
20011536:	079d                	addi	a5,a5,7
20011538:	4705                	li	a4,1
2001153a:	86be                	mv	a3,a5
2001153c:	4605                	li	a2,1
2001153e:	06a00593          	li	a1,106
20011542:	fec42503          	lw	a0,-20(s0)
20011546:	35a060ef          	jal	ra,200178a0 <metal_i2c_read>
2001154a:	87aa                	mv	a5,a0
2001154c:	eb89                	bnez	a5,2001155e <main+0x35e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:162
				printf("Accelero Y LSB = %X\n", imu_buf[7]);
2001154e:	fdb44783          	lbu	a5,-37(s0)
20011552:	85be                	mv	a1,a5
20011554:	200107b7          	lui	a5,0x20010
20011558:	4a078513          	addi	a0,a5,1184 # 200104a0 <metal_tty_init+0x156>
2001155c:	2825                	jal	20011594 <iprintf>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:165
			}
		}
		rawAcceleroY = (short) ((imu_buf[6] << 8) | imu_buf[7]);
2001155e:	fda44783          	lbu	a5,-38(s0)
20011562:	07a2                	slli	a5,a5,0x8
20011564:	01079713          	slli	a4,a5,0x10
20011568:	8741                	srai	a4,a4,0x10
2001156a:	fdb44783          	lbu	a5,-37(s0)
2001156e:	07c2                	slli	a5,a5,0x10
20011570:	87c1                	srai	a5,a5,0x10
20011572:	8fd9                	or	a5,a5,a4
20011574:	fef41323          	sh	a5,-26(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:166
		printf("Accelero Y = %d\n", rawAcceleroY);
20011578:	fe641783          	lh	a5,-26(s0)
2001157c:	85be                	mv	a1,a5
2001157e:	200107b7          	lui	a5,0x20010
20011582:	4b878513          	addi	a0,a5,1208 # 200104b8 <metal_tty_init+0x16e>
20011586:	2039                	jal	20011594 <iprintf>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:121
		if (metal_i2c_write(i2c, IMU_I2C_ADDR, LEN1, imu_addr_buf + 1, METAL_I2C_STOP_DISABLE) == RET_OK) {
20011588:	b369                	j	20011312 <main+0x112>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:179 (discriminator 1)

	}


	return 0;
}
2001158a:	853e                	mv	a0,a5
2001158c:	50b2                	lw	ra,44(sp)
2001158e:	5422                	lw	s0,40(sp)
20011590:	6145                	addi	sp,sp,48
20011592:	8082                	ret

20011594 <iprintf>:
printf():
20011594:	7139                	addi	sp,sp,-64
20011596:	da3e                	sw	a5,52(sp)
20011598:	d22e                	sw	a1,36(sp)
2001159a:	d432                	sw	a2,40(sp)
2001159c:	d636                	sw	a3,44(sp)
2001159e:	d83a                	sw	a4,48(sp)
200115a0:	dc42                	sw	a6,56(sp)
200115a2:	de46                	sw	a7,60(sp)
200115a4:	5ffef797          	auipc	a5,0x5ffef
200115a8:	52478793          	addi	a5,a5,1316 # 80000ac8 <_impure_ptr>
200115ac:	cc22                	sw	s0,24(sp)
200115ae:	4380                	lw	s0,0(a5)
200115b0:	ca26                	sw	s1,20(sp)
200115b2:	ce06                	sw	ra,28(sp)
200115b4:	84aa                	mv	s1,a0
200115b6:	c409                	beqz	s0,200115c0 <iprintf+0x2c>
200115b8:	4c1c                	lw	a5,24(s0)
200115ba:	e399                	bnez	a5,200115c0 <iprintf+0x2c>
200115bc:	8522                	mv	a0,s0
200115be:	2b1d                	jal	20011af4 <__sinit>
200115c0:	440c                	lw	a1,8(s0)
200115c2:	1054                	addi	a3,sp,36
200115c4:	8626                	mv	a2,s1
200115c6:	8522                	mv	a0,s0
200115c8:	c636                	sw	a3,12(sp)
200115ca:	191000ef          	jal	ra,20011f5a <_vfiprintf_r>
200115ce:	40f2                	lw	ra,28(sp)
200115d0:	4462                	lw	s0,24(sp)
200115d2:	44d2                	lw	s1,20(sp)
200115d4:	6121                	addi	sp,sp,64
200115d6:	8082                	ret

200115d8 <_puts_r>:
_puts_r():
200115d8:	1101                	addi	sp,sp,-32
200115da:	ca26                	sw	s1,20(sp)
200115dc:	c84a                	sw	s2,16(sp)
200115de:	ce06                	sw	ra,28(sp)
200115e0:	cc22                	sw	s0,24(sp)
200115e2:	c64e                	sw	s3,12(sp)
200115e4:	c452                	sw	s4,8(sp)
200115e6:	84aa                	mv	s1,a0
200115e8:	892e                	mv	s2,a1
200115ea:	c501                	beqz	a0,200115f2 <_puts_r+0x1a>
200115ec:	4d1c                	lw	a5,24(a0)
200115ee:	e391                	bnez	a5,200115f2 <_puts_r+0x1a>
200115f0:	2311                	jal	20011af4 <__sinit>
200115f2:	4c9c                	lw	a5,24(s1)
200115f4:	4480                	lw	s0,8(s1)
200115f6:	e399                	bnez	a5,200115fc <_puts_r+0x24>
200115f8:	8526                	mv	a0,s1
200115fa:	29ed                	jal	20011af4 <__sinit>
200115fc:	fffff797          	auipc	a5,0xfffff
20011600:	ef078793          	addi	a5,a5,-272 # 200104ec <__sf_fake_stdin>
20011604:	02f41c63          	bne	s0,a5,2001163c <_puts_r+0x64>
20011608:	40c0                	lw	s0,4(s1)
2001160a:	00c45783          	lhu	a5,12(s0)
2001160e:	8ba1                	andi	a5,a5,8
20011610:	c7b1                	beqz	a5,2001165c <_puts_r+0x84>
20011612:	481c                	lw	a5,16(s0)
20011614:	c7a1                	beqz	a5,2001165c <_puts_r+0x84>
20011616:	59fd                	li	s3,-1
20011618:	4a29                	li	s4,10
2001161a:	441c                	lw	a5,8(s0)
2001161c:	00094583          	lbu	a1,0(s2)
20011620:	17fd                	addi	a5,a5,-1
20011622:	e9b1                	bnez	a1,20011676 <_puts_r+0x9e>
20011624:	c41c                	sw	a5,8(s0)
20011626:	0607de63          	bgez	a5,200116a2 <_puts_r+0xca>
2001162a:	8622                	mv	a2,s0
2001162c:	45a9                	li	a1,10
2001162e:	8526                	mv	a0,s1
20011630:	2841                	jal	200116c0 <__swbuf_r>
20011632:	57fd                	li	a5,-1
20011634:	02f50863          	beq	a0,a5,20011664 <_puts_r+0x8c>
20011638:	4529                	li	a0,10
2001163a:	a035                	j	20011666 <_puts_r+0x8e>
2001163c:	fffff797          	auipc	a5,0xfffff
20011640:	ed078793          	addi	a5,a5,-304 # 2001050c <__sf_fake_stdout>
20011644:	00f41463          	bne	s0,a5,2001164c <_puts_r+0x74>
20011648:	4480                	lw	s0,8(s1)
2001164a:	b7c1                	j	2001160a <_puts_r+0x32>
2001164c:	fffff797          	auipc	a5,0xfffff
20011650:	e8078793          	addi	a5,a5,-384 # 200104cc <__sf_fake_stderr>
20011654:	faf41be3          	bne	s0,a5,2001160a <_puts_r+0x32>
20011658:	44c0                	lw	s0,12(s1)
2001165a:	bf45                	j	2001160a <_puts_r+0x32>
2001165c:	85a2                	mv	a1,s0
2001165e:	8526                	mv	a0,s1
20011660:	2205                	jal	20011780 <__swsetup_r>
20011662:	d955                	beqz	a0,20011616 <_puts_r+0x3e>
20011664:	557d                	li	a0,-1
20011666:	40f2                	lw	ra,28(sp)
20011668:	4462                	lw	s0,24(sp)
2001166a:	44d2                	lw	s1,20(sp)
2001166c:	4942                	lw	s2,16(sp)
2001166e:	49b2                	lw	s3,12(sp)
20011670:	4a22                	lw	s4,8(sp)
20011672:	6105                	addi	sp,sp,32
20011674:	8082                	ret
20011676:	c41c                	sw	a5,8(s0)
20011678:	0905                	addi	s2,s2,1
2001167a:	0007d763          	bgez	a5,20011688 <_puts_r+0xb0>
2001167e:	4c18                	lw	a4,24(s0)
20011680:	00e7cb63          	blt	a5,a4,20011696 <_puts_r+0xbe>
20011684:	01458963          	beq	a1,s4,20011696 <_puts_r+0xbe>
20011688:	401c                	lw	a5,0(s0)
2001168a:	00178713          	addi	a4,a5,1
2001168e:	c018                	sw	a4,0(s0)
20011690:	00b78023          	sb	a1,0(a5)
20011694:	b759                	j	2001161a <_puts_r+0x42>
20011696:	8622                	mv	a2,s0
20011698:	8526                	mv	a0,s1
2001169a:	201d                	jal	200116c0 <__swbuf_r>
2001169c:	f7351fe3          	bne	a0,s3,2001161a <_puts_r+0x42>
200116a0:	b7d1                	j	20011664 <_puts_r+0x8c>
200116a2:	401c                	lw	a5,0(s0)
200116a4:	00178713          	addi	a4,a5,1
200116a8:	c018                	sw	a4,0(s0)
200116aa:	4729                	li	a4,10
200116ac:	00e78023          	sb	a4,0(a5)
200116b0:	b761                	j	20011638 <_puts_r+0x60>

200116b2 <puts>:
puts():
200116b2:	5ffef797          	auipc	a5,0x5ffef
200116b6:	41678793          	addi	a5,a5,1046 # 80000ac8 <_impure_ptr>
200116ba:	85aa                	mv	a1,a0
200116bc:	4388                	lw	a0,0(a5)
200116be:	bf29                	j	200115d8 <_puts_r>

200116c0 <__swbuf_r>:
__swbuf_r():
200116c0:	1101                	addi	sp,sp,-32
200116c2:	cc22                	sw	s0,24(sp)
200116c4:	ca26                	sw	s1,20(sp)
200116c6:	c84a                	sw	s2,16(sp)
200116c8:	ce06                	sw	ra,28(sp)
200116ca:	c64e                	sw	s3,12(sp)
200116cc:	84aa                	mv	s1,a0
200116ce:	892e                	mv	s2,a1
200116d0:	8432                	mv	s0,a2
200116d2:	c501                	beqz	a0,200116da <__swbuf_r+0x1a>
200116d4:	4d1c                	lw	a5,24(a0)
200116d6:	e391                	bnez	a5,200116da <__swbuf_r+0x1a>
200116d8:	2931                	jal	20011af4 <__sinit>
200116da:	fffff797          	auipc	a5,0xfffff
200116de:	e1278793          	addi	a5,a5,-494 # 200104ec <__sf_fake_stdin>
200116e2:	06f41963          	bne	s0,a5,20011754 <__swbuf_r+0x94>
200116e6:	40c0                	lw	s0,4(s1)
200116e8:	4c1c                	lw	a5,24(s0)
200116ea:	c41c                	sw	a5,8(s0)
200116ec:	00c45783          	lhu	a5,12(s0)
200116f0:	8ba1                	andi	a5,a5,8
200116f2:	c3c9                	beqz	a5,20011774 <__swbuf_r+0xb4>
200116f4:	481c                	lw	a5,16(s0)
200116f6:	cfbd                	beqz	a5,20011774 <__swbuf_r+0xb4>
200116f8:	481c                	lw	a5,16(s0)
200116fa:	4008                	lw	a0,0(s0)
200116fc:	0ff97993          	andi	s3,s2,255
20011700:	0ff97913          	andi	s2,s2,255
20011704:	8d1d                	sub	a0,a0,a5
20011706:	485c                	lw	a5,20(s0)
20011708:	00f54663          	blt	a0,a5,20011714 <__swbuf_r+0x54>
2001170c:	85a2                	mv	a1,s0
2001170e:	8526                	mv	a0,s1
20011710:	24e9                	jal	200119da <_fflush_r>
20011712:	e52d                	bnez	a0,2001177c <__swbuf_r+0xbc>
20011714:	441c                	lw	a5,8(s0)
20011716:	0505                	addi	a0,a0,1
20011718:	17fd                	addi	a5,a5,-1
2001171a:	c41c                	sw	a5,8(s0)
2001171c:	401c                	lw	a5,0(s0)
2001171e:	00178713          	addi	a4,a5,1
20011722:	c018                	sw	a4,0(s0)
20011724:	01378023          	sb	s3,0(a5)
20011728:	485c                	lw	a5,20(s0)
2001172a:	00a78963          	beq	a5,a0,2001173c <__swbuf_r+0x7c>
2001172e:	00c45783          	lhu	a5,12(s0)
20011732:	8b85                	andi	a5,a5,1
20011734:	cb81                	beqz	a5,20011744 <__swbuf_r+0x84>
20011736:	47a9                	li	a5,10
20011738:	00f91663          	bne	s2,a5,20011744 <__swbuf_r+0x84>
2001173c:	85a2                	mv	a1,s0
2001173e:	8526                	mv	a0,s1
20011740:	2c69                	jal	200119da <_fflush_r>
20011742:	ed0d                	bnez	a0,2001177c <__swbuf_r+0xbc>
20011744:	40f2                	lw	ra,28(sp)
20011746:	4462                	lw	s0,24(sp)
20011748:	854a                	mv	a0,s2
2001174a:	44d2                	lw	s1,20(sp)
2001174c:	4942                	lw	s2,16(sp)
2001174e:	49b2                	lw	s3,12(sp)
20011750:	6105                	addi	sp,sp,32
20011752:	8082                	ret
20011754:	fffff797          	auipc	a5,0xfffff
20011758:	db878793          	addi	a5,a5,-584 # 2001050c <__sf_fake_stdout>
2001175c:	00f41463          	bne	s0,a5,20011764 <__swbuf_r+0xa4>
20011760:	4480                	lw	s0,8(s1)
20011762:	b759                	j	200116e8 <__swbuf_r+0x28>
20011764:	fffff797          	auipc	a5,0xfffff
20011768:	d6878793          	addi	a5,a5,-664 # 200104cc <__sf_fake_stderr>
2001176c:	f6f41ee3          	bne	s0,a5,200116e8 <__swbuf_r+0x28>
20011770:	44c0                	lw	s0,12(s1)
20011772:	bf9d                	j	200116e8 <__swbuf_r+0x28>
20011774:	85a2                	mv	a1,s0
20011776:	8526                	mv	a0,s1
20011778:	2021                	jal	20011780 <__swsetup_r>
2001177a:	dd3d                	beqz	a0,200116f8 <__swbuf_r+0x38>
2001177c:	597d                	li	s2,-1
2001177e:	b7d9                	j	20011744 <__swbuf_r+0x84>

20011780 <__swsetup_r>:
__swsetup_r():
20011780:	1141                	addi	sp,sp,-16
20011782:	5ffef797          	auipc	a5,0x5ffef
20011786:	34678793          	addi	a5,a5,838 # 80000ac8 <_impure_ptr>
2001178a:	c226                	sw	s1,4(sp)
2001178c:	4384                	lw	s1,0(a5)
2001178e:	c422                	sw	s0,8(sp)
20011790:	c04a                	sw	s2,0(sp)
20011792:	c606                	sw	ra,12(sp)
20011794:	892a                	mv	s2,a0
20011796:	842e                	mv	s0,a1
20011798:	c489                	beqz	s1,200117a2 <__swsetup_r+0x22>
2001179a:	4c9c                	lw	a5,24(s1)
2001179c:	e399                	bnez	a5,200117a2 <__swsetup_r+0x22>
2001179e:	8526                	mv	a0,s1
200117a0:	2e91                	jal	20011af4 <__sinit>
200117a2:	fffff797          	auipc	a5,0xfffff
200117a6:	d4a78793          	addi	a5,a5,-694 # 200104ec <__sf_fake_stdin>
200117aa:	02f41c63          	bne	s0,a5,200117e2 <__swsetup_r+0x62>
200117ae:	40c0                	lw	s0,4(s1)
200117b0:	00c41703          	lh	a4,12(s0)
200117b4:	01071793          	slli	a5,a4,0x10
200117b8:	83c1                	srli	a5,a5,0x10
200117ba:	0087f693          	andi	a3,a5,8
200117be:	eeb5                	bnez	a3,2001183a <__swsetup_r+0xba>
200117c0:	0107f693          	andi	a3,a5,16
200117c4:	ee9d                	bnez	a3,20011802 <__swsetup_r+0x82>
200117c6:	47a5                	li	a5,9
200117c8:	00f92023          	sw	a5,0(s2)
200117cc:	04076713          	ori	a4,a4,64
200117d0:	00e41623          	sh	a4,12(s0)
200117d4:	557d                	li	a0,-1
200117d6:	40b2                	lw	ra,12(sp)
200117d8:	4422                	lw	s0,8(sp)
200117da:	4492                	lw	s1,4(sp)
200117dc:	4902                	lw	s2,0(sp)
200117de:	0141                	addi	sp,sp,16
200117e0:	8082                	ret
200117e2:	fffff797          	auipc	a5,0xfffff
200117e6:	d2a78793          	addi	a5,a5,-726 # 2001050c <__sf_fake_stdout>
200117ea:	00f41463          	bne	s0,a5,200117f2 <__swsetup_r+0x72>
200117ee:	4480                	lw	s0,8(s1)
200117f0:	b7c1                	j	200117b0 <__swsetup_r+0x30>
200117f2:	fffff797          	auipc	a5,0xfffff
200117f6:	cda78793          	addi	a5,a5,-806 # 200104cc <__sf_fake_stderr>
200117fa:	faf41be3          	bne	s0,a5,200117b0 <__swsetup_r+0x30>
200117fe:	44c0                	lw	s0,12(s1)
20011800:	bf45                	j	200117b0 <__swsetup_r+0x30>
20011802:	8b91                	andi	a5,a5,4
20011804:	c78d                	beqz	a5,2001182e <__swsetup_r+0xae>
20011806:	584c                	lw	a1,52(s0)
20011808:	c989                	beqz	a1,2001181a <__swsetup_r+0x9a>
2001180a:	04440793          	addi	a5,s0,68
2001180e:	00f58463          	beq	a1,a5,20011816 <__swsetup_r+0x96>
20011812:	854a                	mv	a0,s2
20011814:	2b81                	jal	20011d64 <_free_r>
20011816:	02042a23          	sw	zero,52(s0)
2001181a:	00c45783          	lhu	a5,12(s0)
2001181e:	00042223          	sw	zero,4(s0)
20011822:	fdb7f793          	andi	a5,a5,-37
20011826:	00f41623          	sh	a5,12(s0)
2001182a:	481c                	lw	a5,16(s0)
2001182c:	c01c                	sw	a5,0(s0)
2001182e:	00c45783          	lhu	a5,12(s0)
20011832:	0087e793          	ori	a5,a5,8
20011836:	00f41623          	sh	a5,12(s0)
2001183a:	481c                	lw	a5,16(s0)
2001183c:	ef81                	bnez	a5,20011854 <__swsetup_r+0xd4>
2001183e:	00c45783          	lhu	a5,12(s0)
20011842:	20000713          	li	a4,512
20011846:	2807f793          	andi	a5,a5,640
2001184a:	00e78563          	beq	a5,a4,20011854 <__swsetup_r+0xd4>
2001184e:	85a2                	mv	a1,s0
20011850:	854a                	mv	a0,s2
20011852:	219d                	jal	20011cb8 <__smakebuf_r>
20011854:	00c45783          	lhu	a5,12(s0)
20011858:	0017f713          	andi	a4,a5,1
2001185c:	c705                	beqz	a4,20011884 <__swsetup_r+0x104>
2001185e:	485c                	lw	a5,20(s0)
20011860:	00042423          	sw	zero,8(s0)
20011864:	40f007b3          	neg	a5,a5
20011868:	cc1c                	sw	a5,24(s0)
2001186a:	481c                	lw	a5,16(s0)
2001186c:	4501                	li	a0,0
2001186e:	f7a5                	bnez	a5,200117d6 <__swsetup_r+0x56>
20011870:	00c41783          	lh	a5,12(s0)
20011874:	0807f713          	andi	a4,a5,128
20011878:	df39                	beqz	a4,200117d6 <__swsetup_r+0x56>
2001187a:	0407e793          	ori	a5,a5,64
2001187e:	00f41623          	sh	a5,12(s0)
20011882:	bf89                	j	200117d4 <__swsetup_r+0x54>
20011884:	8b89                	andi	a5,a5,2
20011886:	4701                	li	a4,0
20011888:	e391                	bnez	a5,2001188c <__swsetup_r+0x10c>
2001188a:	4858                	lw	a4,20(s0)
2001188c:	c418                	sw	a4,8(s0)
2001188e:	bff1                	j	2001186a <__swsetup_r+0xea>

20011890 <__sflush_r>:
__sflush_r():
20011890:	00c5d783          	lhu	a5,12(a1)
20011894:	1101                	addi	sp,sp,-32
20011896:	cc22                	sw	s0,24(sp)
20011898:	ca26                	sw	s1,20(sp)
2001189a:	ce06                	sw	ra,28(sp)
2001189c:	c84a                	sw	s2,16(sp)
2001189e:	c64e                	sw	s3,12(sp)
200118a0:	0087f713          	andi	a4,a5,8
200118a4:	84aa                	mv	s1,a0
200118a6:	842e                	mv	s0,a1
200118a8:	e765                	bnez	a4,20011990 <__sflush_r+0x100>
200118aa:	41d8                	lw	a4,4(a1)
200118ac:	00e04763          	bgtz	a4,200118ba <__sflush_r+0x2a>
200118b0:	41b8                	lw	a4,64(a1)
200118b2:	00e04463          	bgtz	a4,200118ba <__sflush_r+0x2a>
200118b6:	4501                	li	a0,0
200118b8:	a0c1                	j	20011978 <__sflush_r+0xe8>
200118ba:	5458                	lw	a4,44(s0)
200118bc:	df6d                	beqz	a4,200118b6 <__sflush_r+0x26>
200118be:	0004a903          	lw	s2,0(s1)
200118c2:	01379693          	slli	a3,a5,0x13
200118c6:	0004a023          	sw	zero,0(s1)
200118ca:	0606de63          	bgez	a3,20011946 <__sflush_r+0xb6>
200118ce:	4868                	lw	a0,84(s0)
200118d0:	00c45783          	lhu	a5,12(s0)
200118d4:	8b91                	andi	a5,a5,4
200118d6:	c799                	beqz	a5,200118e4 <__sflush_r+0x54>
200118d8:	405c                	lw	a5,4(s0)
200118da:	8d1d                	sub	a0,a0,a5
200118dc:	585c                	lw	a5,52(s0)
200118de:	c399                	beqz	a5,200118e4 <__sflush_r+0x54>
200118e0:	403c                	lw	a5,64(s0)
200118e2:	8d1d                	sub	a0,a0,a5
200118e4:	545c                	lw	a5,44(s0)
200118e6:	500c                	lw	a1,32(s0)
200118e8:	862a                	mv	a2,a0
200118ea:	4681                	li	a3,0
200118ec:	8526                	mv	a0,s1
200118ee:	9782                	jalr	a5
200118f0:	57fd                	li	a5,-1
200118f2:	00c45703          	lhu	a4,12(s0)
200118f6:	00f51d63          	bne	a0,a5,20011910 <__sflush_r+0x80>
200118fa:	4094                	lw	a3,0(s1)
200118fc:	47f5                	li	a5,29
200118fe:	08d7e463          	bltu	a5,a3,20011986 <__sflush_r+0xf6>
20011902:	204007b7          	lui	a5,0x20400
20011906:	0785                	addi	a5,a5,1
20011908:	00d7d7b3          	srl	a5,a5,a3
2001190c:	8b85                	andi	a5,a5,1
2001190e:	cfa5                	beqz	a5,20011986 <__sflush_r+0xf6>
20011910:	481c                	lw	a5,16(s0)
20011912:	00042223          	sw	zero,4(s0)
20011916:	c01c                	sw	a5,0(s0)
20011918:	01371793          	slli	a5,a4,0x13
2001191c:	0007d863          	bgez	a5,2001192c <__sflush_r+0x9c>
20011920:	57fd                	li	a5,-1
20011922:	00f51463          	bne	a0,a5,2001192a <__sflush_r+0x9a>
20011926:	409c                	lw	a5,0(s1)
20011928:	e391                	bnez	a5,2001192c <__sflush_r+0x9c>
2001192a:	c868                	sw	a0,84(s0)
2001192c:	584c                	lw	a1,52(s0)
2001192e:	0124a023          	sw	s2,0(s1)
20011932:	d1d1                	beqz	a1,200118b6 <__sflush_r+0x26>
20011934:	04440793          	addi	a5,s0,68
20011938:	00f58463          	beq	a1,a5,20011940 <__sflush_r+0xb0>
2001193c:	8526                	mv	a0,s1
2001193e:	211d                	jal	20011d64 <_free_r>
20011940:	02042a23          	sw	zero,52(s0)
20011944:	bf8d                	j	200118b6 <__sflush_r+0x26>
20011946:	500c                	lw	a1,32(s0)
20011948:	4685                	li	a3,1
2001194a:	4601                	li	a2,0
2001194c:	8526                	mv	a0,s1
2001194e:	9702                	jalr	a4
20011950:	57fd                	li	a5,-1
20011952:	f6f51fe3          	bne	a0,a5,200118d0 <__sflush_r+0x40>
20011956:	409c                	lw	a5,0(s1)
20011958:	dfa5                	beqz	a5,200118d0 <__sflush_r+0x40>
2001195a:	4775                	li	a4,29
2001195c:	00e78563          	beq	a5,a4,20011966 <__sflush_r+0xd6>
20011960:	4759                	li	a4,22
20011962:	00e79563          	bne	a5,a4,2001196c <__sflush_r+0xdc>
20011966:	0124a023          	sw	s2,0(s1)
2001196a:	b7b1                	j	200118b6 <__sflush_r+0x26>
2001196c:	00c45783          	lhu	a5,12(s0)
20011970:	0407e793          	ori	a5,a5,64
20011974:	00f41623          	sh	a5,12(s0)
20011978:	40f2                	lw	ra,28(sp)
2001197a:	4462                	lw	s0,24(sp)
2001197c:	44d2                	lw	s1,20(sp)
2001197e:	4942                	lw	s2,16(sp)
20011980:	49b2                	lw	s3,12(sp)
20011982:	6105                	addi	sp,sp,32
20011984:	8082                	ret
20011986:	04076713          	ori	a4,a4,64
2001198a:	00e41623          	sh	a4,12(s0)
2001198e:	b7ed                	j	20011978 <__sflush_r+0xe8>
20011990:	0105a983          	lw	s3,16(a1)
20011994:	f20981e3          	beqz	s3,200118b6 <__sflush_r+0x26>
20011998:	0005a903          	lw	s2,0(a1)
2001199c:	8b8d                	andi	a5,a5,3
2001199e:	0135a023          	sw	s3,0(a1)
200119a2:	41390933          	sub	s2,s2,s3
200119a6:	4701                	li	a4,0
200119a8:	e391                	bnez	a5,200119ac <__sflush_r+0x11c>
200119aa:	49d8                	lw	a4,20(a1)
200119ac:	c418                	sw	a4,8(s0)
200119ae:	f12054e3          	blez	s2,200118b6 <__sflush_r+0x26>
200119b2:	541c                	lw	a5,40(s0)
200119b4:	500c                	lw	a1,32(s0)
200119b6:	86ca                	mv	a3,s2
200119b8:	864e                	mv	a2,s3
200119ba:	8526                	mv	a0,s1
200119bc:	9782                	jalr	a5
200119be:	00a04a63          	bgtz	a0,200119d2 <__sflush_r+0x142>
200119c2:	00c45783          	lhu	a5,12(s0)
200119c6:	557d                	li	a0,-1
200119c8:	0407e793          	ori	a5,a5,64
200119cc:	00f41623          	sh	a5,12(s0)
200119d0:	b765                	j	20011978 <__sflush_r+0xe8>
200119d2:	99aa                	add	s3,s3,a0
200119d4:	40a90933          	sub	s2,s2,a0
200119d8:	bfd9                	j	200119ae <__sflush_r+0x11e>

200119da <_fflush_r>:
_fflush_r():
200119da:	499c                	lw	a5,16(a1)
200119dc:	cfb9                	beqz	a5,20011a3a <_fflush_r+0x60>
200119de:	1101                	addi	sp,sp,-32
200119e0:	cc22                	sw	s0,24(sp)
200119e2:	ce06                	sw	ra,28(sp)
200119e4:	842a                	mv	s0,a0
200119e6:	c511                	beqz	a0,200119f2 <_fflush_r+0x18>
200119e8:	4d1c                	lw	a5,24(a0)
200119ea:	e781                	bnez	a5,200119f2 <_fflush_r+0x18>
200119ec:	c62e                	sw	a1,12(sp)
200119ee:	2219                	jal	20011af4 <__sinit>
200119f0:	45b2                	lw	a1,12(sp)
200119f2:	fffff797          	auipc	a5,0xfffff
200119f6:	afa78793          	addi	a5,a5,-1286 # 200104ec <__sf_fake_stdin>
200119fa:	00f59b63          	bne	a1,a5,20011a10 <_fflush_r+0x36>
200119fe:	404c                	lw	a1,4(s0)
20011a00:	00c59783          	lh	a5,12(a1)
20011a04:	c795                	beqz	a5,20011a30 <_fflush_r+0x56>
20011a06:	8522                	mv	a0,s0
20011a08:	4462                	lw	s0,24(sp)
20011a0a:	40f2                	lw	ra,28(sp)
20011a0c:	6105                	addi	sp,sp,32
20011a0e:	b549                	j	20011890 <__sflush_r>
20011a10:	fffff797          	auipc	a5,0xfffff
20011a14:	afc78793          	addi	a5,a5,-1284 # 2001050c <__sf_fake_stdout>
20011a18:	00f59463          	bne	a1,a5,20011a20 <_fflush_r+0x46>
20011a1c:	440c                	lw	a1,8(s0)
20011a1e:	b7cd                	j	20011a00 <_fflush_r+0x26>
20011a20:	fffff797          	auipc	a5,0xfffff
20011a24:	aac78793          	addi	a5,a5,-1364 # 200104cc <__sf_fake_stderr>
20011a28:	fcf59ce3          	bne	a1,a5,20011a00 <_fflush_r+0x26>
20011a2c:	444c                	lw	a1,12(s0)
20011a2e:	bfc9                	j	20011a00 <_fflush_r+0x26>
20011a30:	40f2                	lw	ra,28(sp)
20011a32:	4462                	lw	s0,24(sp)
20011a34:	4501                	li	a0,0
20011a36:	6105                	addi	sp,sp,32
20011a38:	8082                	ret
20011a3a:	4501                	li	a0,0
20011a3c:	8082                	ret

20011a3e <std>:
std():
20011a3e:	1141                	addi	sp,sp,-16
20011a40:	c422                	sw	s0,8(sp)
20011a42:	c606                	sw	ra,12(sp)
20011a44:	842a                	mv	s0,a0
20011a46:	00b51623          	sh	a1,12(a0)
20011a4a:	00c51723          	sh	a2,14(a0)
20011a4e:	00052023          	sw	zero,0(a0)
20011a52:	00052223          	sw	zero,4(a0)
20011a56:	00052423          	sw	zero,8(a0)
20011a5a:	06052223          	sw	zero,100(a0)
20011a5e:	00052823          	sw	zero,16(a0)
20011a62:	00052a23          	sw	zero,20(a0)
20011a66:	00052c23          	sw	zero,24(a0)
20011a6a:	4621                	li	a2,8
20011a6c:	4581                	li	a1,0
20011a6e:	05c50513          	addi	a0,a0,92
20011a72:	24cd                	jal	20011d54 <memset>
20011a74:	00000797          	auipc	a5,0x0
20011a78:	7a878793          	addi	a5,a5,1960 # 2001221c <__sread>
20011a7c:	d05c                	sw	a5,36(s0)
20011a7e:	00000797          	auipc	a5,0x0
20011a82:	7ce78793          	addi	a5,a5,1998 # 2001224c <__swrite>
20011a86:	d41c                	sw	a5,40(s0)
20011a88:	00001797          	auipc	a5,0x1
20011a8c:	81278793          	addi	a5,a5,-2030 # 2001229a <__sseek>
20011a90:	d45c                	sw	a5,44(s0)
20011a92:	00001797          	auipc	a5,0x1
20011a96:	83e78793          	addi	a5,a5,-1986 # 200122d0 <__sclose>
20011a9a:	d000                	sw	s0,32(s0)
20011a9c:	d81c                	sw	a5,48(s0)
20011a9e:	40b2                	lw	ra,12(sp)
20011aa0:	4422                	lw	s0,8(sp)
20011aa2:	0141                	addi	sp,sp,16
20011aa4:	8082                	ret

20011aa6 <_cleanup_r>:
_cleanup_r():
20011aa6:	00000597          	auipc	a1,0x0
20011aaa:	f3458593          	addi	a1,a1,-204 # 200119da <_fflush_r>
20011aae:	a299                	j	20011bf4 <_fwalk_reent>

20011ab0 <__sfmoreglue>:
__sfmoreglue():
20011ab0:	1141                	addi	sp,sp,-16
20011ab2:	c226                	sw	s1,4(sp)
20011ab4:	06800613          	li	a2,104
20011ab8:	fff58493          	addi	s1,a1,-1
20011abc:	02c484b3          	mul	s1,s1,a2
20011ac0:	c04a                	sw	s2,0(sp)
20011ac2:	892e                	mv	s2,a1
20011ac4:	c422                	sw	s0,8(sp)
20011ac6:	c606                	sw	ra,12(sp)
20011ac8:	07448593          	addi	a1,s1,116
20011acc:	2691                	jal	20011e10 <_malloc_r>
20011ace:	842a                	mv	s0,a0
20011ad0:	c919                	beqz	a0,20011ae6 <__sfmoreglue+0x36>
20011ad2:	00052023          	sw	zero,0(a0)
20011ad6:	01252223          	sw	s2,4(a0)
20011ada:	0531                	addi	a0,a0,12
20011adc:	c408                	sw	a0,8(s0)
20011ade:	06848613          	addi	a2,s1,104
20011ae2:	4581                	li	a1,0
20011ae4:	2c85                	jal	20011d54 <memset>
20011ae6:	8522                	mv	a0,s0
20011ae8:	40b2                	lw	ra,12(sp)
20011aea:	4422                	lw	s0,8(sp)
20011aec:	4492                	lw	s1,4(sp)
20011aee:	4902                	lw	s2,0(sp)
20011af0:	0141                	addi	sp,sp,16
20011af2:	8082                	ret

20011af4 <__sinit>:
__sinit():
20011af4:	4d1c                	lw	a5,24(a0)
20011af6:	e3ad                	bnez	a5,20011b58 <__sinit+0x64>
20011af8:	1141                	addi	sp,sp,-16
20011afa:	c606                	sw	ra,12(sp)
20011afc:	c422                	sw	s0,8(sp)
20011afe:	00000797          	auipc	a5,0x0
20011b02:	fa878793          	addi	a5,a5,-88 # 20011aa6 <_cleanup_r>
20011b06:	d51c                	sw	a5,40(a0)
20011b08:	80c18793          	addi	a5,gp,-2036 # 80000acc <_global_impure_ptr>
20011b0c:	439c                	lw	a5,0(a5)
20011b0e:	04052423          	sw	zero,72(a0)
20011b12:	04052623          	sw	zero,76(a0)
20011b16:	04052823          	sw	zero,80(a0)
20011b1a:	00f51463          	bne	a0,a5,20011b22 <__sinit+0x2e>
20011b1e:	4785                	li	a5,1
20011b20:	cd1c                	sw	a5,24(a0)
20011b22:	842a                	mv	s0,a0
20011b24:	281d                	jal	20011b5a <__sfp>
20011b26:	c048                	sw	a0,4(s0)
20011b28:	8522                	mv	a0,s0
20011b2a:	2805                	jal	20011b5a <__sfp>
20011b2c:	c408                	sw	a0,8(s0)
20011b2e:	8522                	mv	a0,s0
20011b30:	202d                	jal	20011b5a <__sfp>
20011b32:	c448                	sw	a0,12(s0)
20011b34:	4048                	lw	a0,4(s0)
20011b36:	4601                	li	a2,0
20011b38:	4591                	li	a1,4
20011b3a:	3711                	jal	20011a3e <std>
20011b3c:	4408                	lw	a0,8(s0)
20011b3e:	4605                	li	a2,1
20011b40:	45a5                	li	a1,9
20011b42:	3df5                	jal	20011a3e <std>
20011b44:	4448                	lw	a0,12(s0)
20011b46:	4609                	li	a2,2
20011b48:	45c9                	li	a1,18
20011b4a:	3dd5                	jal	20011a3e <std>
20011b4c:	4785                	li	a5,1
20011b4e:	cc1c                	sw	a5,24(s0)
20011b50:	40b2                	lw	ra,12(sp)
20011b52:	4422                	lw	s0,8(sp)
20011b54:	0141                	addi	sp,sp,16
20011b56:	8082                	ret
20011b58:	8082                	ret

20011b5a <__sfp>:
__sfp():
20011b5a:	1141                	addi	sp,sp,-16
20011b5c:	80c18793          	addi	a5,gp,-2036 # 80000acc <_global_impure_ptr>
20011b60:	c226                	sw	s1,4(sp)
20011b62:	4384                	lw	s1,0(a5)
20011b64:	c04a                	sw	s2,0(sp)
20011b66:	c606                	sw	ra,12(sp)
20011b68:	4c9c                	lw	a5,24(s1)
20011b6a:	c422                	sw	s0,8(sp)
20011b6c:	892a                	mv	s2,a0
20011b6e:	e399                	bnez	a5,20011b74 <__sfp+0x1a>
20011b70:	8526                	mv	a0,s1
20011b72:	3749                	jal	20011af4 <__sinit>
20011b74:	04848493          	addi	s1,s1,72
20011b78:	4480                	lw	s0,8(s1)
20011b7a:	40dc                	lw	a5,4(s1)
20011b7c:	17fd                	addi	a5,a5,-1
20011b7e:	0007d663          	bgez	a5,20011b8a <__sfp+0x30>
20011b82:	409c                	lw	a5,0(s1)
20011b84:	cfb1                	beqz	a5,20011be0 <__sfp+0x86>
20011b86:	4084                	lw	s1,0(s1)
20011b88:	bfc5                	j	20011b78 <__sfp+0x1e>
20011b8a:	00c41703          	lh	a4,12(s0)
20011b8e:	e731                	bnez	a4,20011bda <__sfp+0x80>
20011b90:	77c1                	lui	a5,0xffff0
20011b92:	0785                	addi	a5,a5,1
20011b94:	06042223          	sw	zero,100(s0)
20011b98:	00042023          	sw	zero,0(s0)
20011b9c:	00042223          	sw	zero,4(s0)
20011ba0:	00042423          	sw	zero,8(s0)
20011ba4:	c45c                	sw	a5,12(s0)
20011ba6:	00042823          	sw	zero,16(s0)
20011baa:	00042a23          	sw	zero,20(s0)
20011bae:	00042c23          	sw	zero,24(s0)
20011bb2:	4621                	li	a2,8
20011bb4:	4581                	li	a1,0
20011bb6:	05c40513          	addi	a0,s0,92
20011bba:	2a69                	jal	20011d54 <memset>
20011bbc:	02042a23          	sw	zero,52(s0)
20011bc0:	02042c23          	sw	zero,56(s0)
20011bc4:	04042423          	sw	zero,72(s0)
20011bc8:	04042623          	sw	zero,76(s0)
20011bcc:	8522                	mv	a0,s0
20011bce:	40b2                	lw	ra,12(sp)
20011bd0:	4422                	lw	s0,8(sp)
20011bd2:	4492                	lw	s1,4(sp)
20011bd4:	4902                	lw	s2,0(sp)
20011bd6:	0141                	addi	sp,sp,16
20011bd8:	8082                	ret
20011bda:	06840413          	addi	s0,s0,104
20011bde:	bf79                	j	20011b7c <__sfp+0x22>
20011be0:	4591                	li	a1,4
20011be2:	854a                	mv	a0,s2
20011be4:	35f1                	jal	20011ab0 <__sfmoreglue>
20011be6:	c088                	sw	a0,0(s1)
20011be8:	842a                	mv	s0,a0
20011bea:	fd51                	bnez	a0,20011b86 <__sfp+0x2c>
20011bec:	47b1                	li	a5,12
20011bee:	00f92023          	sw	a5,0(s2)
20011bf2:	bfe9                	j	20011bcc <__sfp+0x72>

20011bf4 <_fwalk_reent>:
_fwalk_reent():
20011bf4:	7179                	addi	sp,sp,-48
20011bf6:	d422                	sw	s0,40(sp)
20011bf8:	d04a                	sw	s2,32(sp)
20011bfa:	cc52                	sw	s4,24(sp)
20011bfc:	ca56                	sw	s5,20(sp)
20011bfe:	c85a                	sw	s6,16(sp)
20011c00:	c65e                	sw	s7,12(sp)
20011c02:	d606                	sw	ra,44(sp)
20011c04:	d226                	sw	s1,36(sp)
20011c06:	ce4e                	sw	s3,28(sp)
20011c08:	8a2a                	mv	s4,a0
20011c0a:	8aae                	mv	s5,a1
20011c0c:	04850413          	addi	s0,a0,72
20011c10:	4901                	li	s2,0
20011c12:	4b05                	li	s6,1
20011c14:	5bfd                	li	s7,-1
20011c16:	ec09                	bnez	s0,20011c30 <_fwalk_reent+0x3c>
20011c18:	50b2                	lw	ra,44(sp)
20011c1a:	5422                	lw	s0,40(sp)
20011c1c:	854a                	mv	a0,s2
20011c1e:	5492                	lw	s1,36(sp)
20011c20:	5902                	lw	s2,32(sp)
20011c22:	49f2                	lw	s3,28(sp)
20011c24:	4a62                	lw	s4,24(sp)
20011c26:	4ad2                	lw	s5,20(sp)
20011c28:	4b42                	lw	s6,16(sp)
20011c2a:	4bb2                	lw	s7,12(sp)
20011c2c:	6145                	addi	sp,sp,48
20011c2e:	8082                	ret
20011c30:	4404                	lw	s1,8(s0)
20011c32:	00442983          	lw	s3,4(s0)
20011c36:	19fd                	addi	s3,s3,-1
20011c38:	0009d463          	bgez	s3,20011c40 <_fwalk_reent+0x4c>
20011c3c:	4000                	lw	s0,0(s0)
20011c3e:	bfe1                	j	20011c16 <_fwalk_reent+0x22>
20011c40:	00c4d783          	lhu	a5,12(s1)
20011c44:	00fb7b63          	bgeu	s6,a5,20011c5a <_fwalk_reent+0x66>
20011c48:	00e49783          	lh	a5,14(s1)
20011c4c:	01778763          	beq	a5,s7,20011c5a <_fwalk_reent+0x66>
20011c50:	85a6                	mv	a1,s1
20011c52:	8552                	mv	a0,s4
20011c54:	9a82                	jalr	s5
20011c56:	00a96933          	or	s2,s2,a0
20011c5a:	06848493          	addi	s1,s1,104
20011c5e:	bfe1                	j	20011c36 <_fwalk_reent+0x42>

20011c60 <__swhatbuf_r>:
__swhatbuf_r():
20011c60:	7119                	addi	sp,sp,-128
20011c62:	daa6                	sw	s1,116(sp)
20011c64:	84ae                	mv	s1,a1
20011c66:	00e59583          	lh	a1,14(a1)
20011c6a:	dca2                	sw	s0,120(sp)
20011c6c:	de86                	sw	ra,124(sp)
20011c6e:	8432                	mv	s0,a2
20011c70:	0005dc63          	bgez	a1,20011c88 <__swhatbuf_r+0x28>
20011c74:	00c4d783          	lhu	a5,12(s1)
20011c78:	0006a023          	sw	zero,0(a3)
20011c7c:	0807f793          	andi	a5,a5,128
20011c80:	e39d                	bnez	a5,20011ca6 <__swhatbuf_r+0x46>
20011c82:	40000793          	li	a5,1024
20011c86:	a015                	j	20011caa <__swhatbuf_r+0x4a>
20011c88:	0830                	addi	a2,sp,24
20011c8a:	c636                	sw	a3,12(sp)
20011c8c:	254d                	jal	2001232e <_fstat_r>
20011c8e:	46b2                	lw	a3,12(sp)
20011c90:	fe0542e3          	bltz	a0,20011c74 <__swhatbuf_r+0x14>
20011c94:	4772                	lw	a4,28(sp)
20011c96:	67bd                	lui	a5,0xf
20011c98:	8ff9                	and	a5,a5,a4
20011c9a:	7779                	lui	a4,0xffffe
20011c9c:	97ba                	add	a5,a5,a4
20011c9e:	0017b793          	seqz	a5,a5
20011ca2:	c29c                	sw	a5,0(a3)
20011ca4:	bff9                	j	20011c82 <__swhatbuf_r+0x22>
20011ca6:	04000793          	li	a5,64
20011caa:	c01c                	sw	a5,0(s0)
20011cac:	50f6                	lw	ra,124(sp)
20011cae:	5466                	lw	s0,120(sp)
20011cb0:	54d6                	lw	s1,116(sp)
20011cb2:	4501                	li	a0,0
20011cb4:	6109                	addi	sp,sp,128
20011cb6:	8082                	ret

20011cb8 <__smakebuf_r>:
__smakebuf_r():
20011cb8:	00c5d783          	lhu	a5,12(a1)
20011cbc:	1101                	addi	sp,sp,-32
20011cbe:	cc22                	sw	s0,24(sp)
20011cc0:	ce06                	sw	ra,28(sp)
20011cc2:	ca26                	sw	s1,20(sp)
20011cc4:	c84a                	sw	s2,16(sp)
20011cc6:	8b89                	andi	a5,a5,2
20011cc8:	842e                	mv	s0,a1
20011cca:	cf89                	beqz	a5,20011ce4 <__smakebuf_r+0x2c>
20011ccc:	04740793          	addi	a5,s0,71
20011cd0:	c01c                	sw	a5,0(s0)
20011cd2:	c81c                	sw	a5,16(s0)
20011cd4:	4785                	li	a5,1
20011cd6:	c85c                	sw	a5,20(s0)
20011cd8:	40f2                	lw	ra,28(sp)
20011cda:	4462                	lw	s0,24(sp)
20011cdc:	44d2                	lw	s1,20(sp)
20011cde:	4942                	lw	s2,16(sp)
20011ce0:	6105                	addi	sp,sp,32
20011ce2:	8082                	ret
20011ce4:	0074                	addi	a3,sp,12
20011ce6:	0030                	addi	a2,sp,8
20011ce8:	84aa                	mv	s1,a0
20011cea:	3f9d                	jal	20011c60 <__swhatbuf_r>
20011cec:	45a2                	lw	a1,8(sp)
20011cee:	892a                	mv	s2,a0
20011cf0:	8526                	mv	a0,s1
20011cf2:	2a39                	jal	20011e10 <_malloc_r>
20011cf4:	ed01                	bnez	a0,20011d0c <__smakebuf_r+0x54>
20011cf6:	00c41783          	lh	a5,12(s0)
20011cfa:	2007f713          	andi	a4,a5,512
20011cfe:	ff69                	bnez	a4,20011cd8 <__smakebuf_r+0x20>
20011d00:	9bf1                	andi	a5,a5,-4
20011d02:	0027e793          	ori	a5,a5,2
20011d06:	00f41623          	sh	a5,12(s0)
20011d0a:	b7c9                	j	20011ccc <__smakebuf_r+0x14>
20011d0c:	00000797          	auipc	a5,0x0
20011d10:	d9a78793          	addi	a5,a5,-614 # 20011aa6 <_cleanup_r>
20011d14:	d49c                	sw	a5,40(s1)
20011d16:	00c45783          	lhu	a5,12(s0)
20011d1a:	c008                	sw	a0,0(s0)
20011d1c:	c808                	sw	a0,16(s0)
20011d1e:	0807e793          	ori	a5,a5,128
20011d22:	00f41623          	sh	a5,12(s0)
20011d26:	47a2                	lw	a5,8(sp)
20011d28:	c85c                	sw	a5,20(s0)
20011d2a:	47b2                	lw	a5,12(sp)
20011d2c:	cf89                	beqz	a5,20011d46 <__smakebuf_r+0x8e>
20011d2e:	00e41583          	lh	a1,14(s0)
20011d32:	8526                	mv	a0,s1
20011d34:	251d                	jal	2001235a <_isatty_r>
20011d36:	c901                	beqz	a0,20011d46 <__smakebuf_r+0x8e>
20011d38:	00c45783          	lhu	a5,12(s0)
20011d3c:	9bf1                	andi	a5,a5,-4
20011d3e:	0017e793          	ori	a5,a5,1
20011d42:	00f41623          	sh	a5,12(s0)
20011d46:	00c45783          	lhu	a5,12(s0)
20011d4a:	00f96933          	or	s2,s2,a5
20011d4e:	01241623          	sh	s2,12(s0)
20011d52:	b759                	j	20011cd8 <__smakebuf_r+0x20>

20011d54 <memset>:
memset():
20011d54:	832a                	mv	t1,a0
20011d56:	c611                	beqz	a2,20011d62 <memset+0xe>
20011d58:	00b30023          	sb	a1,0(t1)
20011d5c:	167d                	addi	a2,a2,-1
20011d5e:	0305                	addi	t1,t1,1
20011d60:	fe65                	bnez	a2,20011d58 <memset+0x4>
20011d62:	8082                	ret

20011d64 <_free_r>:
_free_r():
20011d64:	c5cd                	beqz	a1,20011e0e <_free_r+0xaa>
20011d66:	ffc5a783          	lw	a5,-4(a1)
20011d6a:	1141                	addi	sp,sp,-16
20011d6c:	c422                	sw	s0,8(sp)
20011d6e:	c606                	sw	ra,12(sp)
20011d70:	c226                	sw	s1,4(sp)
20011d72:	ffc58413          	addi	s0,a1,-4
20011d76:	0007d363          	bgez	a5,20011d7c <_free_r+0x18>
20011d7a:	943e                	add	s0,s0,a5
20011d7c:	84aa                	mv	s1,a0
20011d7e:	25b9                	jal	200123cc <__malloc_lock>
20011d80:	5ffef797          	auipc	a5,0x5ffef
20011d84:	d9078793          	addi	a5,a5,-624 # 80000b10 <__tls_base>
20011d88:	439c                	lw	a5,0(a5)
20011d8a:	ef89                	bnez	a5,20011da4 <_free_r+0x40>
20011d8c:	00042223          	sw	zero,4(s0)
20011d90:	5ffef797          	auipc	a5,0x5ffef
20011d94:	d887a023          	sw	s0,-640(a5) # 80000b10 <__tls_base>
20011d98:	4422                	lw	s0,8(sp)
20011d9a:	40b2                	lw	ra,12(sp)
20011d9c:	8526                	mv	a0,s1
20011d9e:	4492                	lw	s1,4(sp)
20011da0:	0141                	addi	sp,sp,16
20011da2:	a535                	j	200123ce <__malloc_unlock>
20011da4:	00f47e63          	bgeu	s0,a5,20011dc0 <_free_r+0x5c>
20011da8:	4014                	lw	a3,0(s0)
20011daa:	00d40733          	add	a4,s0,a3
20011dae:	00e79663          	bne	a5,a4,20011dba <_free_r+0x56>
20011db2:	4398                	lw	a4,0(a5)
20011db4:	43dc                	lw	a5,4(a5)
20011db6:	9736                	add	a4,a4,a3
20011db8:	c018                	sw	a4,0(s0)
20011dba:	c05c                	sw	a5,4(s0)
20011dbc:	bfd1                	j	20011d90 <_free_r+0x2c>
20011dbe:	87ba                	mv	a5,a4
20011dc0:	43d8                	lw	a4,4(a5)
20011dc2:	c319                	beqz	a4,20011dc8 <_free_r+0x64>
20011dc4:	fee47de3          	bgeu	s0,a4,20011dbe <_free_r+0x5a>
20011dc8:	4394                	lw	a3,0(a5)
20011dca:	00d78633          	add	a2,a5,a3
20011dce:	00861f63          	bne	a2,s0,20011dec <_free_r+0x88>
20011dd2:	4010                	lw	a2,0(s0)
20011dd4:	96b2                	add	a3,a3,a2
20011dd6:	c394                	sw	a3,0(a5)
20011dd8:	00d78633          	add	a2,a5,a3
20011ddc:	fac71ee3          	bne	a4,a2,20011d98 <_free_r+0x34>
20011de0:	4310                	lw	a2,0(a4)
20011de2:	4358                	lw	a4,4(a4)
20011de4:	96b2                	add	a3,a3,a2
20011de6:	c394                	sw	a3,0(a5)
20011de8:	c3d8                	sw	a4,4(a5)
20011dea:	b77d                	j	20011d98 <_free_r+0x34>
20011dec:	00c47563          	bgeu	s0,a2,20011df6 <_free_r+0x92>
20011df0:	47b1                	li	a5,12
20011df2:	c09c                	sw	a5,0(s1)
20011df4:	b755                	j	20011d98 <_free_r+0x34>
20011df6:	4010                	lw	a2,0(s0)
20011df8:	00c406b3          	add	a3,s0,a2
20011dfc:	00d71663          	bne	a4,a3,20011e08 <_free_r+0xa4>
20011e00:	4314                	lw	a3,0(a4)
20011e02:	4358                	lw	a4,4(a4)
20011e04:	96b2                	add	a3,a3,a2
20011e06:	c014                	sw	a3,0(s0)
20011e08:	c058                	sw	a4,4(s0)
20011e0a:	c3c0                	sw	s0,4(a5)
20011e0c:	b771                	j	20011d98 <_free_r+0x34>
20011e0e:	8082                	ret

20011e10 <_malloc_r>:
_malloc_r():
20011e10:	1101                	addi	sp,sp,-32
20011e12:	ca26                	sw	s1,20(sp)
20011e14:	00358493          	addi	s1,a1,3
20011e18:	98f1                	andi	s1,s1,-4
20011e1a:	ce06                	sw	ra,28(sp)
20011e1c:	cc22                	sw	s0,24(sp)
20011e1e:	c84a                	sw	s2,16(sp)
20011e20:	c64e                	sw	s3,12(sp)
20011e22:	04a1                	addi	s1,s1,8
20011e24:	47b1                	li	a5,12
20011e26:	04f4f763          	bgeu	s1,a5,20011e74 <_malloc_r+0x64>
20011e2a:	44b1                	li	s1,12
20011e2c:	04b4e663          	bltu	s1,a1,20011e78 <_malloc_r+0x68>
20011e30:	892a                	mv	s2,a0
20011e32:	2b69                	jal	200123cc <__malloc_lock>
20011e34:	5ffef797          	auipc	a5,0x5ffef
20011e38:	cdc78793          	addi	a5,a5,-804 # 80000b10 <__tls_base>
20011e3c:	4398                	lw	a4,0(a5)
20011e3e:	843a                	mv	s0,a4
20011e40:	e431                	bnez	s0,20011e8c <_malloc_r+0x7c>
20011e42:	5ffef797          	auipc	a5,0x5ffef
20011e46:	cd278793          	addi	a5,a5,-814 # 80000b14 <__malloc_sbrk_start>
20011e4a:	439c                	lw	a5,0(a5)
20011e4c:	eb81                	bnez	a5,20011e5c <_malloc_r+0x4c>
20011e4e:	4581                	li	a1,0
20011e50:	854a                	mv	a0,s2
20011e52:	2645                	jal	200121f2 <_sbrk_r>
20011e54:	5ffef797          	auipc	a5,0x5ffef
20011e58:	cca7a023          	sw	a0,-832(a5) # 80000b14 <__malloc_sbrk_start>
20011e5c:	85a6                	mv	a1,s1
20011e5e:	854a                	mv	a0,s2
20011e60:	2e49                	jal	200121f2 <_sbrk_r>
20011e62:	59fd                	li	s3,-1
20011e64:	07351963          	bne	a0,s3,20011ed6 <_malloc_r+0xc6>
20011e68:	47b1                	li	a5,12
20011e6a:	00f92023          	sw	a5,0(s2)
20011e6e:	854a                	mv	a0,s2
20011e70:	2bb9                	jal	200123ce <__malloc_unlock>
20011e72:	a029                	j	20011e7c <_malloc_r+0x6c>
20011e74:	fa04dce3          	bgez	s1,20011e2c <_malloc_r+0x1c>
20011e78:	47b1                	li	a5,12
20011e7a:	c11c                	sw	a5,0(a0)
20011e7c:	4501                	li	a0,0
20011e7e:	40f2                	lw	ra,28(sp)
20011e80:	4462                	lw	s0,24(sp)
20011e82:	44d2                	lw	s1,20(sp)
20011e84:	4942                	lw	s2,16(sp)
20011e86:	49b2                	lw	s3,12(sp)
20011e88:	6105                	addi	sp,sp,32
20011e8a:	8082                	ret
20011e8c:	401c                	lw	a5,0(s0)
20011e8e:	8f85                	sub	a5,a5,s1
20011e90:	0407c063          	bltz	a5,20011ed0 <_malloc_r+0xc0>
20011e94:	46ad                	li	a3,11
20011e96:	00f6f663          	bgeu	a3,a5,20011ea2 <_malloc_r+0x92>
20011e9a:	c01c                	sw	a5,0(s0)
20011e9c:	943e                	add	s0,s0,a5
20011e9e:	c004                	sw	s1,0(s0)
20011ea0:	a801                	j	20011eb0 <_malloc_r+0xa0>
20011ea2:	405c                	lw	a5,4(s0)
20011ea4:	02871463          	bne	a4,s0,20011ecc <_malloc_r+0xbc>
20011ea8:	5ffef717          	auipc	a4,0x5ffef
20011eac:	c6f72423          	sw	a5,-920(a4) # 80000b10 <__tls_base>
20011eb0:	854a                	mv	a0,s2
20011eb2:	2b31                	jal	200123ce <__malloc_unlock>
20011eb4:	00b40513          	addi	a0,s0,11
20011eb8:	00440793          	addi	a5,s0,4
20011ebc:	9961                	andi	a0,a0,-8
20011ebe:	40f50733          	sub	a4,a0,a5
20011ec2:	df55                	beqz	a4,20011e7e <_malloc_r+0x6e>
20011ec4:	943a                	add	s0,s0,a4
20011ec6:	8f89                	sub	a5,a5,a0
20011ec8:	c01c                	sw	a5,0(s0)
20011eca:	bf55                	j	20011e7e <_malloc_r+0x6e>
20011ecc:	c35c                	sw	a5,4(a4)
20011ece:	b7cd                	j	20011eb0 <_malloc_r+0xa0>
20011ed0:	8722                	mv	a4,s0
20011ed2:	4040                	lw	s0,4(s0)
20011ed4:	b7b5                	j	20011e40 <_malloc_r+0x30>
20011ed6:	00350413          	addi	s0,a0,3
20011eda:	9871                	andi	s0,s0,-4
20011edc:	fc8501e3          	beq	a0,s0,20011e9e <_malloc_r+0x8e>
20011ee0:	40a405b3          	sub	a1,s0,a0
20011ee4:	854a                	mv	a0,s2
20011ee6:	2631                	jal	200121f2 <_sbrk_r>
20011ee8:	fb351be3          	bne	a0,s3,20011e9e <_malloc_r+0x8e>
20011eec:	bfb5                	j	20011e68 <_malloc_r+0x58>

20011eee <__sfputc_r>:
__sfputc_r():
20011eee:	461c                	lw	a5,8(a2)
20011ef0:	17fd                	addi	a5,a5,-1
20011ef2:	c61c                	sw	a5,8(a2)
20011ef4:	0007da63          	bgez	a5,20011f08 <__sfputc_r+0x1a>
20011ef8:	4e18                	lw	a4,24(a2)
20011efa:	00e7c563          	blt	a5,a4,20011f04 <__sfputc_r+0x16>
20011efe:	47a9                	li	a5,10
20011f00:	00f59463          	bne	a1,a5,20011f08 <__sfputc_r+0x1a>
20011f04:	fbcff06f          	j	200116c0 <__swbuf_r>
20011f08:	421c                	lw	a5,0(a2)
20011f0a:	852e                	mv	a0,a1
20011f0c:	00178713          	addi	a4,a5,1
20011f10:	c218                	sw	a4,0(a2)
20011f12:	00b78023          	sb	a1,0(a5)
20011f16:	8082                	ret

20011f18 <__sfputs_r>:
__sfputs_r():
20011f18:	1101                	addi	sp,sp,-32
20011f1a:	cc22                	sw	s0,24(sp)
20011f1c:	ca26                	sw	s1,20(sp)
20011f1e:	c84a                	sw	s2,16(sp)
20011f20:	c64e                	sw	s3,12(sp)
20011f22:	c452                	sw	s4,8(sp)
20011f24:	ce06                	sw	ra,28(sp)
20011f26:	892a                	mv	s2,a0
20011f28:	89ae                	mv	s3,a1
20011f2a:	8432                	mv	s0,a2
20011f2c:	00d604b3          	add	s1,a2,a3
20011f30:	5a7d                	li	s4,-1
20011f32:	00941463          	bne	s0,s1,20011f3a <__sfputs_r+0x22>
20011f36:	4501                	li	a0,0
20011f38:	a809                	j	20011f4a <__sfputs_r+0x32>
20011f3a:	00044583          	lbu	a1,0(s0)
20011f3e:	864e                	mv	a2,s3
20011f40:	854a                	mv	a0,s2
20011f42:	3775                	jal	20011eee <__sfputc_r>
20011f44:	0405                	addi	s0,s0,1
20011f46:	ff4516e3          	bne	a0,s4,20011f32 <__sfputs_r+0x1a>
20011f4a:	40f2                	lw	ra,28(sp)
20011f4c:	4462                	lw	s0,24(sp)
20011f4e:	44d2                	lw	s1,20(sp)
20011f50:	4942                	lw	s2,16(sp)
20011f52:	49b2                	lw	s3,12(sp)
20011f54:	4a22                	lw	s4,8(sp)
20011f56:	6105                	addi	sp,sp,32
20011f58:	8082                	ret

20011f5a <_vfiprintf_r>:
_vfiprintf_r():
20011f5a:	7135                	addi	sp,sp,-160
20011f5c:	cd22                	sw	s0,152(sp)
20011f5e:	cb26                	sw	s1,148(sp)
20011f60:	c94a                	sw	s2,144(sp)
20011f62:	c74e                	sw	s3,140(sp)
20011f64:	cf06                	sw	ra,156(sp)
20011f66:	c552                	sw	s4,136(sp)
20011f68:	c356                	sw	s5,132(sp)
20011f6a:	c15a                	sw	s6,128(sp)
20011f6c:	dede                	sw	s7,124(sp)
20011f6e:	dce2                	sw	s8,120(sp)
20011f70:	dae6                	sw	s9,116(sp)
20011f72:	89aa                	mv	s3,a0
20011f74:	84ae                	mv	s1,a1
20011f76:	8932                	mv	s2,a2
20011f78:	8436                	mv	s0,a3
20011f7a:	c501                	beqz	a0,20011f82 <_vfiprintf_r+0x28>
20011f7c:	4d1c                	lw	a5,24(a0)
20011f7e:	e391                	bnez	a5,20011f82 <_vfiprintf_r+0x28>
20011f80:	3e95                	jal	20011af4 <__sinit>
20011f82:	ffffe797          	auipc	a5,0xffffe
20011f86:	56a78793          	addi	a5,a5,1386 # 200104ec <__sf_fake_stdin>
20011f8a:	0cf49b63          	bne	s1,a5,20012060 <_vfiprintf_r+0x106>
20011f8e:	0049a483          	lw	s1,4(s3)
20011f92:	00c4d783          	lhu	a5,12(s1)
20011f96:	8ba1                	andi	a5,a5,8
20011f98:	c7f5                	beqz	a5,20012084 <_vfiprintf_r+0x12a>
20011f9a:	489c                	lw	a5,16(s1)
20011f9c:	c7e5                	beqz	a5,20012084 <_vfiprintf_r+0x12a>
20011f9e:	02000793          	li	a5,32
20011fa2:	02f104a3          	sb	a5,41(sp)
20011fa6:	03000793          	li	a5,48
20011faa:	d202                	sw	zero,36(sp)
20011fac:	02f10523          	sb	a5,42(sp)
20011fb0:	c622                	sw	s0,12(sp)
20011fb2:	02500b93          	li	s7,37
20011fb6:	ffffea97          	auipc	s5,0xffffe
20011fba:	576a8a93          	addi	s5,s5,1398 # 2001052c <__sf_fake_stdout+0x20>
20011fbe:	4c05                	li	s8,1
20011fc0:	4b29                	li	s6,10
20011fc2:	844a                	mv	s0,s2
20011fc4:	00044783          	lbu	a5,0(s0)
20011fc8:	c399                	beqz	a5,20011fce <_vfiprintf_r+0x74>
20011fca:	0f779063          	bne	a5,s7,200120aa <_vfiprintf_r+0x150>
20011fce:	41240cb3          	sub	s9,s0,s2
20011fd2:	000c8d63          	beqz	s9,20011fec <_vfiprintf_r+0x92>
20011fd6:	86e6                	mv	a3,s9
20011fd8:	864a                	mv	a2,s2
20011fda:	85a6                	mv	a1,s1
20011fdc:	854e                	mv	a0,s3
20011fde:	3f2d                	jal	20011f18 <__sfputs_r>
20011fe0:	57fd                	li	a5,-1
20011fe2:	1ef50663          	beq	a0,a5,200121ce <_vfiprintf_r+0x274>
20011fe6:	5692                	lw	a3,36(sp)
20011fe8:	96e6                	add	a3,a3,s9
20011fea:	d236                	sw	a3,36(sp)
20011fec:	00044783          	lbu	a5,0(s0)
20011ff0:	1c078f63          	beqz	a5,200121ce <_vfiprintf_r+0x274>
20011ff4:	57fd                	li	a5,-1
20011ff6:	00140913          	addi	s2,s0,1
20011ffa:	c802                	sw	zero,16(sp)
20011ffc:	ce02                	sw	zero,28(sp)
20011ffe:	ca3e                	sw	a5,20(sp)
20012000:	cc02                	sw	zero,24(sp)
20012002:	040109a3          	sb	zero,83(sp)
20012006:	d482                	sw	zero,104(sp)
20012008:	00094583          	lbu	a1,0(s2)
2001200c:	4615                	li	a2,5
2001200e:	8556                	mv	a0,s5
20012010:	264d                	jal	200123b2 <memchr>
20012012:	00190413          	addi	s0,s2,1
20012016:	47c2                	lw	a5,16(sp)
20012018:	e959                	bnez	a0,200120ae <_vfiprintf_r+0x154>
2001201a:	0107f713          	andi	a4,a5,16
2001201e:	c709                	beqz	a4,20012028 <_vfiprintf_r+0xce>
20012020:	02000713          	li	a4,32
20012024:	04e109a3          	sb	a4,83(sp)
20012028:	0087f713          	andi	a4,a5,8
2001202c:	c709                	beqz	a4,20012036 <_vfiprintf_r+0xdc>
2001202e:	02b00713          	li	a4,43
20012032:	04e109a3          	sb	a4,83(sp)
20012036:	00094683          	lbu	a3,0(s2)
2001203a:	02a00713          	li	a4,42
2001203e:	08e68063          	beq	a3,a4,200120be <_vfiprintf_r+0x164>
20012042:	47f2                	lw	a5,28(sp)
20012044:	844a                	mv	s0,s2
20012046:	4681                	li	a3,0
20012048:	4625                	li	a2,9
2001204a:	00044703          	lbu	a4,0(s0)
2001204e:	00140593          	addi	a1,s0,1
20012052:	fd070713          	addi	a4,a4,-48
20012056:	0ae67963          	bgeu	a2,a4,20012108 <_vfiprintf_r+0x1ae>
2001205a:	cab5                	beqz	a3,200120ce <_vfiprintf_r+0x174>
2001205c:	ce3e                	sw	a5,28(sp)
2001205e:	a885                	j	200120ce <_vfiprintf_r+0x174>
20012060:	ffffe797          	auipc	a5,0xffffe
20012064:	4ac78793          	addi	a5,a5,1196 # 2001050c <__sf_fake_stdout>
20012068:	00f49563          	bne	s1,a5,20012072 <_vfiprintf_r+0x118>
2001206c:	0089a483          	lw	s1,8(s3)
20012070:	b70d                	j	20011f92 <_vfiprintf_r+0x38>
20012072:	ffffe797          	auipc	a5,0xffffe
20012076:	45a78793          	addi	a5,a5,1114 # 200104cc <__sf_fake_stderr>
2001207a:	f0f49ce3          	bne	s1,a5,20011f92 <_vfiprintf_r+0x38>
2001207e:	00c9a483          	lw	s1,12(s3)
20012082:	bf01                	j	20011f92 <_vfiprintf_r+0x38>
20012084:	85a6                	mv	a1,s1
20012086:	854e                	mv	a0,s3
20012088:	ef8ff0ef          	jal	ra,20011780 <__swsetup_r>
2001208c:	d909                	beqz	a0,20011f9e <_vfiprintf_r+0x44>
2001208e:	557d                	li	a0,-1
20012090:	40fa                	lw	ra,156(sp)
20012092:	446a                	lw	s0,152(sp)
20012094:	44da                	lw	s1,148(sp)
20012096:	494a                	lw	s2,144(sp)
20012098:	49ba                	lw	s3,140(sp)
2001209a:	4a2a                	lw	s4,136(sp)
2001209c:	4a9a                	lw	s5,132(sp)
2001209e:	4b0a                	lw	s6,128(sp)
200120a0:	5bf6                	lw	s7,124(sp)
200120a2:	5c66                	lw	s8,120(sp)
200120a4:	5cd6                	lw	s9,116(sp)
200120a6:	610d                	addi	sp,sp,160
200120a8:	8082                	ret
200120aa:	0405                	addi	s0,s0,1
200120ac:	bf21                	j	20011fc4 <_vfiprintf_r+0x6a>
200120ae:	41550533          	sub	a0,a0,s5
200120b2:	00ac1533          	sll	a0,s8,a0
200120b6:	8fc9                	or	a5,a5,a0
200120b8:	c83e                	sw	a5,16(sp)
200120ba:	8922                	mv	s2,s0
200120bc:	b7b1                	j	20012008 <_vfiprintf_r+0xae>
200120be:	4732                	lw	a4,12(sp)
200120c0:	00470693          	addi	a3,a4,4
200120c4:	4318                	lw	a4,0(a4)
200120c6:	c636                	sw	a3,12(sp)
200120c8:	02074963          	bltz	a4,200120fa <_vfiprintf_r+0x1a0>
200120cc:	ce3a                	sw	a4,28(sp)
200120ce:	00044703          	lbu	a4,0(s0)
200120d2:	02e00793          	li	a5,46
200120d6:	04f71f63          	bne	a4,a5,20012134 <_vfiprintf_r+0x1da>
200120da:	00144703          	lbu	a4,1(s0)
200120de:	02a00793          	li	a5,42
200120e2:	02f71b63          	bne	a4,a5,20012118 <_vfiprintf_r+0x1be>
200120e6:	47b2                	lw	a5,12(sp)
200120e8:	0409                	addi	s0,s0,2
200120ea:	00478713          	addi	a4,a5,4
200120ee:	439c                	lw	a5,0(a5)
200120f0:	c63a                	sw	a4,12(sp)
200120f2:	0207c163          	bltz	a5,20012114 <_vfiprintf_r+0x1ba>
200120f6:	ca3e                	sw	a5,20(sp)
200120f8:	a835                	j	20012134 <_vfiprintf_r+0x1da>
200120fa:	40e00733          	neg	a4,a4
200120fe:	0027e793          	ori	a5,a5,2
20012102:	ce3a                	sw	a4,28(sp)
20012104:	c83e                	sw	a5,16(sp)
20012106:	b7e1                	j	200120ce <_vfiprintf_r+0x174>
20012108:	036787b3          	mul	a5,a5,s6
2001210c:	4685                	li	a3,1
2001210e:	842e                	mv	s0,a1
20012110:	97ba                	add	a5,a5,a4
20012112:	bf25                	j	2001204a <_vfiprintf_r+0xf0>
20012114:	57fd                	li	a5,-1
20012116:	b7c5                	j	200120f6 <_vfiprintf_r+0x19c>
20012118:	0405                	addi	s0,s0,1
2001211a:	ca02                	sw	zero,20(sp)
2001211c:	4681                	li	a3,0
2001211e:	4781                	li	a5,0
20012120:	4625                	li	a2,9
20012122:	00044703          	lbu	a4,0(s0)
20012126:	00140593          	addi	a1,s0,1
2001212a:	fd070713          	addi	a4,a4,-48
2001212e:	06e67663          	bgeu	a2,a4,2001219a <_vfiprintf_r+0x240>
20012132:	f2f1                	bnez	a3,200120f6 <_vfiprintf_r+0x19c>
20012134:	00044583          	lbu	a1,0(s0)
20012138:	460d                	li	a2,3
2001213a:	ffffe517          	auipc	a0,0xffffe
2001213e:	3fa50513          	addi	a0,a0,1018 # 20010534 <__sf_fake_stdout+0x28>
20012142:	2c85                	jal	200123b2 <memchr>
20012144:	cd11                	beqz	a0,20012160 <_vfiprintf_r+0x206>
20012146:	ffffe797          	auipc	a5,0xffffe
2001214a:	3ee78793          	addi	a5,a5,1006 # 20010534 <__sf_fake_stdout+0x28>
2001214e:	8d1d                	sub	a0,a0,a5
20012150:	04000793          	li	a5,64
20012154:	00a797b3          	sll	a5,a5,a0
20012158:	4542                	lw	a0,16(sp)
2001215a:	0405                	addi	s0,s0,1
2001215c:	8d5d                	or	a0,a0,a5
2001215e:	c82a                	sw	a0,16(sp)
20012160:	00044583          	lbu	a1,0(s0)
20012164:	4619                	li	a2,6
20012166:	ffffe517          	auipc	a0,0xffffe
2001216a:	3d250513          	addi	a0,a0,978 # 20010538 <__sf_fake_stdout+0x2c>
2001216e:	00140913          	addi	s2,s0,1
20012172:	02b10423          	sb	a1,40(sp)
20012176:	2c35                	jal	200123b2 <memchr>
20012178:	c13d                	beqz	a0,200121de <_vfiprintf_r+0x284>
2001217a:	dffee797          	auipc	a5,0xdffee
2001217e:	e8678793          	addi	a5,a5,-378 # 0 <__metal_boot_hart>
20012182:	e795                	bnez	a5,200121ae <_vfiprintf_r+0x254>
20012184:	4742                	lw	a4,16(sp)
20012186:	47b2                	lw	a5,12(sp)
20012188:	10077713          	andi	a4,a4,256
2001218c:	cf09                	beqz	a4,200121a6 <_vfiprintf_r+0x24c>
2001218e:	0791                	addi	a5,a5,4
20012190:	c63e                	sw	a5,12(sp)
20012192:	5792                	lw	a5,36(sp)
20012194:	97d2                	add	a5,a5,s4
20012196:	d23e                	sw	a5,36(sp)
20012198:	b52d                	j	20011fc2 <_vfiprintf_r+0x68>
2001219a:	036787b3          	mul	a5,a5,s6
2001219e:	4685                	li	a3,1
200121a0:	842e                	mv	s0,a1
200121a2:	97ba                	add	a5,a5,a4
200121a4:	bfbd                	j	20012122 <_vfiprintf_r+0x1c8>
200121a6:	079d                	addi	a5,a5,7
200121a8:	9be1                	andi	a5,a5,-8
200121aa:	07a1                	addi	a5,a5,8
200121ac:	b7d5                	j	20012190 <_vfiprintf_r+0x236>
200121ae:	0078                	addi	a4,sp,12
200121b0:	00000697          	auipc	a3,0x0
200121b4:	d6868693          	addi	a3,a3,-664 # 20011f18 <__sfputs_r>
200121b8:	8626                	mv	a2,s1
200121ba:	080c                	addi	a1,sp,16
200121bc:	854e                	mv	a0,s3
200121be:	00000097          	auipc	ra,0x0
200121c2:	000000e7          	jalr	zero # 0 <__metal_boot_hart>
200121c6:	57fd                	li	a5,-1
200121c8:	8a2a                	mv	s4,a0
200121ca:	fcf514e3          	bne	a0,a5,20012192 <_vfiprintf_r+0x238>
200121ce:	00c4d783          	lhu	a5,12(s1)
200121d2:	0407f793          	andi	a5,a5,64
200121d6:	ea079ce3          	bnez	a5,2001208e <_vfiprintf_r+0x134>
200121da:	5512                	lw	a0,36(sp)
200121dc:	bd55                	j	20012090 <_vfiprintf_r+0x136>
200121de:	0078                	addi	a4,sp,12
200121e0:	00000697          	auipc	a3,0x0
200121e4:	d3868693          	addi	a3,a3,-712 # 20011f18 <__sfputs_r>
200121e8:	8626                	mv	a2,s1
200121ea:	080c                	addi	a1,sp,16
200121ec:	854e                	mv	a0,s3
200121ee:	24fd                	jal	200124dc <_printf_i>
200121f0:	bfd9                	j	200121c6 <_vfiprintf_r+0x26c>

200121f2 <_sbrk_r>:
_sbrk_r():
200121f2:	1141                	addi	sp,sp,-16
200121f4:	c422                	sw	s0,8(sp)
200121f6:	842a                	mv	s0,a0
200121f8:	852e                	mv	a0,a1
200121fa:	8e01a823          	sw	zero,-1808(gp) # 80000bb0 <errno>
200121fe:	c606                	sw	ra,12(sp)
20012200:	385050ef          	jal	ra,20017d84 <_sbrk>
20012204:	57fd                	li	a5,-1
20012206:	00f51763          	bne	a0,a5,20012214 <_sbrk_r+0x22>
2001220a:	8f018793          	addi	a5,gp,-1808 # 80000bb0 <errno>
2001220e:	439c                	lw	a5,0(a5)
20012210:	c391                	beqz	a5,20012214 <_sbrk_r+0x22>
20012212:	c01c                	sw	a5,0(s0)
20012214:	40b2                	lw	ra,12(sp)
20012216:	4422                	lw	s0,8(sp)
20012218:	0141                	addi	sp,sp,16
2001221a:	8082                	ret

2001221c <__sread>:
__sread():
2001221c:	1141                	addi	sp,sp,-16
2001221e:	c422                	sw	s0,8(sp)
20012220:	842e                	mv	s0,a1
20012222:	00e59583          	lh	a1,14(a1)
20012226:	c606                	sw	ra,12(sp)
20012228:	2b99                	jal	2001277e <_read_r>
2001222a:	00054963          	bltz	a0,2001223c <__sread+0x20>
2001222e:	487c                	lw	a5,84(s0)
20012230:	97aa                	add	a5,a5,a0
20012232:	c87c                	sw	a5,84(s0)
20012234:	40b2                	lw	ra,12(sp)
20012236:	4422                	lw	s0,8(sp)
20012238:	0141                	addi	sp,sp,16
2001223a:	8082                	ret
2001223c:	00c45783          	lhu	a5,12(s0)
20012240:	777d                	lui	a4,0xfffff
20012242:	177d                	addi	a4,a4,-1
20012244:	8ff9                	and	a5,a5,a4
20012246:	00f41623          	sh	a5,12(s0)
2001224a:	b7ed                	j	20012234 <__sread+0x18>

2001224c <__swrite>:
__swrite():
2001224c:	00c5d783          	lhu	a5,12(a1)
20012250:	1101                	addi	sp,sp,-32
20012252:	cc22                	sw	s0,24(sp)
20012254:	ca26                	sw	s1,20(sp)
20012256:	c84a                	sw	s2,16(sp)
20012258:	c64e                	sw	s3,12(sp)
2001225a:	ce06                	sw	ra,28(sp)
2001225c:	1007f793          	andi	a5,a5,256
20012260:	84aa                	mv	s1,a0
20012262:	842e                	mv	s0,a1
20012264:	8932                	mv	s2,a2
20012266:	89b6                	mv	s3,a3
20012268:	c791                	beqz	a5,20012274 <__swrite+0x28>
2001226a:	00e59583          	lh	a1,14(a1)
2001226e:	4689                	li	a3,2
20012270:	4601                	li	a2,0
20012272:	2a09                	jal	20012384 <_lseek_r>
20012274:	00c45783          	lhu	a5,12(s0)
20012278:	777d                	lui	a4,0xfffff
2001227a:	177d                	addi	a4,a4,-1
2001227c:	8ff9                	and	a5,a5,a4
2001227e:	00f41623          	sh	a5,12(s0)
20012282:	00e41583          	lh	a1,14(s0)
20012286:	4462                	lw	s0,24(sp)
20012288:	40f2                	lw	ra,28(sp)
2001228a:	86ce                	mv	a3,s3
2001228c:	864a                	mv	a2,s2
2001228e:	49b2                	lw	s3,12(sp)
20012290:	4942                	lw	s2,16(sp)
20012292:	8526                	mv	a0,s1
20012294:	44d2                	lw	s1,20(sp)
20012296:	6105                	addi	sp,sp,32
20012298:	a83d                	j	200122d6 <_write_r>

2001229a <__sseek>:
__sseek():
2001229a:	1141                	addi	sp,sp,-16
2001229c:	c422                	sw	s0,8(sp)
2001229e:	842e                	mv	s0,a1
200122a0:	00e59583          	lh	a1,14(a1)
200122a4:	c606                	sw	ra,12(sp)
200122a6:	28f9                	jal	20012384 <_lseek_r>
200122a8:	57fd                	li	a5,-1
200122aa:	00c45703          	lhu	a4,12(s0)
200122ae:	00f51b63          	bne	a0,a5,200122c4 <__sseek+0x2a>
200122b2:	77fd                	lui	a5,0xfffff
200122b4:	17fd                	addi	a5,a5,-1
200122b6:	8ff9                	and	a5,a5,a4
200122b8:	00f41623          	sh	a5,12(s0)
200122bc:	40b2                	lw	ra,12(sp)
200122be:	4422                	lw	s0,8(sp)
200122c0:	0141                	addi	sp,sp,16
200122c2:	8082                	ret
200122c4:	6785                	lui	a5,0x1
200122c6:	8fd9                	or	a5,a5,a4
200122c8:	00f41623          	sh	a5,12(s0)
200122cc:	c868                	sw	a0,84(s0)
200122ce:	b7fd                	j	200122bc <__sseek+0x22>

200122d0 <__sclose>:
__sclose():
200122d0:	00e59583          	lh	a1,14(a1)
200122d4:	a805                	j	20012304 <_close_r>

200122d6 <_write_r>:
_write_r():
200122d6:	1141                	addi	sp,sp,-16
200122d8:	c422                	sw	s0,8(sp)
200122da:	842a                	mv	s0,a0
200122dc:	852e                	mv	a0,a1
200122de:	85b2                	mv	a1,a2
200122e0:	8636                	mv	a2,a3
200122e2:	8e01a823          	sw	zero,-1808(gp) # 80000bb0 <errno>
200122e6:	c606                	sw	ra,12(sp)
200122e8:	307050ef          	jal	ra,20017dee <_write>
200122ec:	57fd                	li	a5,-1
200122ee:	00f51763          	bne	a0,a5,200122fc <_write_r+0x26>
200122f2:	8f018793          	addi	a5,gp,-1808 # 80000bb0 <errno>
200122f6:	439c                	lw	a5,0(a5)
200122f8:	c391                	beqz	a5,200122fc <_write_r+0x26>
200122fa:	c01c                	sw	a5,0(s0)
200122fc:	40b2                	lw	ra,12(sp)
200122fe:	4422                	lw	s0,8(sp)
20012300:	0141                	addi	sp,sp,16
20012302:	8082                	ret

20012304 <_close_r>:
_close_r():
20012304:	1141                	addi	sp,sp,-16
20012306:	c422                	sw	s0,8(sp)
20012308:	842a                	mv	s0,a0
2001230a:	852e                	mv	a0,a1
2001230c:	8e01a823          	sw	zero,-1808(gp) # 80000bb0 <errno>
20012310:	c606                	sw	ra,12(sp)
20012312:	1b7050ef          	jal	ra,20017cc8 <_close>
20012316:	57fd                	li	a5,-1
20012318:	00f51763          	bne	a0,a5,20012326 <_close_r+0x22>
2001231c:	8f018793          	addi	a5,gp,-1808 # 80000bb0 <errno>
20012320:	439c                	lw	a5,0(a5)
20012322:	c391                	beqz	a5,20012326 <_close_r+0x22>
20012324:	c01c                	sw	a5,0(s0)
20012326:	40b2                	lw	ra,12(sp)
20012328:	4422                	lw	s0,8(sp)
2001232a:	0141                	addi	sp,sp,16
2001232c:	8082                	ret

2001232e <_fstat_r>:
_fstat_r():
2001232e:	1141                	addi	sp,sp,-16
20012330:	c422                	sw	s0,8(sp)
20012332:	842a                	mv	s0,a0
20012334:	852e                	mv	a0,a1
20012336:	85b2                	mv	a1,a2
20012338:	8e01a823          	sw	zero,-1808(gp) # 80000bb0 <errno>
2001233c:	c606                	sw	ra,12(sp)
2001233e:	1ad050ef          	jal	ra,20017cea <_fstat>
20012342:	57fd                	li	a5,-1
20012344:	00f51763          	bne	a0,a5,20012352 <_fstat_r+0x24>
20012348:	8f018793          	addi	a5,gp,-1808 # 80000bb0 <errno>
2001234c:	439c                	lw	a5,0(a5)
2001234e:	c391                	beqz	a5,20012352 <_fstat_r+0x24>
20012350:	c01c                	sw	a5,0(s0)
20012352:	40b2                	lw	ra,12(sp)
20012354:	4422                	lw	s0,8(sp)
20012356:	0141                	addi	sp,sp,16
20012358:	8082                	ret

2001235a <_isatty_r>:
_isatty_r():
2001235a:	1141                	addi	sp,sp,-16
2001235c:	c422                	sw	s0,8(sp)
2001235e:	842a                	mv	s0,a0
20012360:	852e                	mv	a0,a1
20012362:	8e01a823          	sw	zero,-1808(gp) # 80000bb0 <errno>
20012366:	c606                	sw	ra,12(sp)
20012368:	1a9050ef          	jal	ra,20017d10 <_isatty>
2001236c:	57fd                	li	a5,-1
2001236e:	00f51763          	bne	a0,a5,2001237c <_isatty_r+0x22>
20012372:	8f018793          	addi	a5,gp,-1808 # 80000bb0 <errno>
20012376:	439c                	lw	a5,0(a5)
20012378:	c391                	beqz	a5,2001237c <_isatty_r+0x22>
2001237a:	c01c                	sw	a5,0(s0)
2001237c:	40b2                	lw	ra,12(sp)
2001237e:	4422                	lw	s0,8(sp)
20012380:	0141                	addi	sp,sp,16
20012382:	8082                	ret

20012384 <_lseek_r>:
_lseek_r():
20012384:	1141                	addi	sp,sp,-16
20012386:	c422                	sw	s0,8(sp)
20012388:	842a                	mv	s0,a0
2001238a:	852e                	mv	a0,a1
2001238c:	85b2                	mv	a1,a2
2001238e:	8636                	mv	a2,a3
20012390:	8e01a823          	sw	zero,-1808(gp) # 80000bb0 <errno>
20012394:	c606                	sw	ra,12(sp)
20012396:	19b050ef          	jal	ra,20017d30 <_lseek>
2001239a:	57fd                	li	a5,-1
2001239c:	00f51763          	bne	a0,a5,200123aa <_lseek_r+0x26>
200123a0:	8f018793          	addi	a5,gp,-1808 # 80000bb0 <errno>
200123a4:	439c                	lw	a5,0(a5)
200123a6:	c391                	beqz	a5,200123aa <_lseek_r+0x26>
200123a8:	c01c                	sw	a5,0(s0)
200123aa:	40b2                	lw	ra,12(sp)
200123ac:	4422                	lw	s0,8(sp)
200123ae:	0141                	addi	sp,sp,16
200123b0:	8082                	ret

200123b2 <memchr>:
memchr():
200123b2:	0ff5f593          	andi	a1,a1,255
200123b6:	962a                	add	a2,a2,a0
200123b8:	00c51463          	bne	a0,a2,200123c0 <memchr+0xe>
200123bc:	4501                	li	a0,0
200123be:	8082                	ret
200123c0:	00054783          	lbu	a5,0(a0)
200123c4:	feb78de3          	beq	a5,a1,200123be <memchr+0xc>
200123c8:	0505                	addi	a0,a0,1
200123ca:	b7fd                	j	200123b8 <memchr+0x6>

200123cc <__malloc_lock>:
__malloc_lock():
200123cc:	8082                	ret

200123ce <__malloc_unlock>:
__malloc_unlock():
200123ce:	8082                	ret

200123d0 <_printf_common>:
_printf_common():
200123d0:	7179                	addi	sp,sp,-48
200123d2:	ca56                	sw	s5,20(sp)
200123d4:	499c                	lw	a5,16(a1)
200123d6:	8aba                	mv	s5,a4
200123d8:	4598                	lw	a4,8(a1)
200123da:	d422                	sw	s0,40(sp)
200123dc:	d226                	sw	s1,36(sp)
200123de:	ce4e                	sw	s3,28(sp)
200123e0:	cc52                	sw	s4,24(sp)
200123e2:	d606                	sw	ra,44(sp)
200123e4:	d04a                	sw	s2,32(sp)
200123e6:	c85a                	sw	s6,16(sp)
200123e8:	c65e                	sw	s7,12(sp)
200123ea:	89aa                	mv	s3,a0
200123ec:	842e                	mv	s0,a1
200123ee:	84b2                	mv	s1,a2
200123f0:	8a36                	mv	s4,a3
200123f2:	00e7d363          	bge	a5,a4,200123f8 <_printf_common+0x28>
200123f6:	87ba                	mv	a5,a4
200123f8:	c09c                	sw	a5,0(s1)
200123fa:	04344703          	lbu	a4,67(s0)
200123fe:	c319                	beqz	a4,20012404 <_printf_common+0x34>
20012400:	0785                	addi	a5,a5,1
20012402:	c09c                	sw	a5,0(s1)
20012404:	401c                	lw	a5,0(s0)
20012406:	0207f793          	andi	a5,a5,32
2001240a:	c781                	beqz	a5,20012412 <_printf_common+0x42>
2001240c:	409c                	lw	a5,0(s1)
2001240e:	0789                	addi	a5,a5,2
20012410:	c09c                	sw	a5,0(s1)
20012412:	00042903          	lw	s2,0(s0)
20012416:	00697913          	andi	s2,s2,6
2001241a:	00091a63          	bnez	s2,2001242e <_printf_common+0x5e>
2001241e:	01940b13          	addi	s6,s0,25
20012422:	5bfd                	li	s7,-1
20012424:	445c                	lw	a5,12(s0)
20012426:	4098                	lw	a4,0(s1)
20012428:	8f99                	sub	a5,a5,a4
2001242a:	04f94c63          	blt	s2,a5,20012482 <_printf_common+0xb2>
2001242e:	401c                	lw	a5,0(s0)
20012430:	04344683          	lbu	a3,67(s0)
20012434:	0207f793          	andi	a5,a5,32
20012438:	00d036b3          	snez	a3,a3
2001243c:	eba5                	bnez	a5,200124ac <_printf_common+0xdc>
2001243e:	04340613          	addi	a2,s0,67
20012442:	85d2                	mv	a1,s4
20012444:	854e                	mv	a0,s3
20012446:	9a82                	jalr	s5
20012448:	57fd                	li	a5,-1
2001244a:	04f50363          	beq	a0,a5,20012490 <_printf_common+0xc0>
2001244e:	401c                	lw	a5,0(s0)
20012450:	4611                	li	a2,4
20012452:	4098                	lw	a4,0(s1)
20012454:	8b99                	andi	a5,a5,6
20012456:	4454                	lw	a3,12(s0)
20012458:	4481                	li	s1,0
2001245a:	00c79763          	bne	a5,a2,20012468 <_printf_common+0x98>
2001245e:	40e684b3          	sub	s1,a3,a4
20012462:	0004d363          	bgez	s1,20012468 <_printf_common+0x98>
20012466:	4481                	li	s1,0
20012468:	441c                	lw	a5,8(s0)
2001246a:	4818                	lw	a4,16(s0)
2001246c:	00f75463          	bge	a4,a5,20012474 <_printf_common+0xa4>
20012470:	8f99                	sub	a5,a5,a4
20012472:	94be                	add	s1,s1,a5
20012474:	4901                	li	s2,0
20012476:	0469                	addi	s0,s0,26
20012478:	5b7d                	li	s6,-1
2001247a:	05249863          	bne	s1,s2,200124ca <_printf_common+0xfa>
2001247e:	4501                	li	a0,0
20012480:	a809                	j	20012492 <_printf_common+0xc2>
20012482:	4685                	li	a3,1
20012484:	865a                	mv	a2,s6
20012486:	85d2                	mv	a1,s4
20012488:	854e                	mv	a0,s3
2001248a:	9a82                	jalr	s5
2001248c:	01751e63          	bne	a0,s7,200124a8 <_printf_common+0xd8>
20012490:	557d                	li	a0,-1
20012492:	50b2                	lw	ra,44(sp)
20012494:	5422                	lw	s0,40(sp)
20012496:	5492                	lw	s1,36(sp)
20012498:	5902                	lw	s2,32(sp)
2001249a:	49f2                	lw	s3,28(sp)
2001249c:	4a62                	lw	s4,24(sp)
2001249e:	4ad2                	lw	s5,20(sp)
200124a0:	4b42                	lw	s6,16(sp)
200124a2:	4bb2                	lw	s7,12(sp)
200124a4:	6145                	addi	sp,sp,48
200124a6:	8082                	ret
200124a8:	0905                	addi	s2,s2,1
200124aa:	bfad                	j	20012424 <_printf_common+0x54>
200124ac:	00d40733          	add	a4,s0,a3
200124b0:	03000613          	li	a2,48
200124b4:	04c701a3          	sb	a2,67(a4) # fffff043 <metal_segment_heap_target_end+0x7fffd883>
200124b8:	04544703          	lbu	a4,69(s0)
200124bc:	00168793          	addi	a5,a3,1
200124c0:	97a2                	add	a5,a5,s0
200124c2:	0689                	addi	a3,a3,2
200124c4:	04e781a3          	sb	a4,67(a5) # 1043 <__heap_size+0x843>
200124c8:	bf9d                	j	2001243e <_printf_common+0x6e>
200124ca:	4685                	li	a3,1
200124cc:	8622                	mv	a2,s0
200124ce:	85d2                	mv	a1,s4
200124d0:	854e                	mv	a0,s3
200124d2:	9a82                	jalr	s5
200124d4:	fb650ee3          	beq	a0,s6,20012490 <_printf_common+0xc0>
200124d8:	0905                	addi	s2,s2,1
200124da:	b745                	j	2001247a <_printf_common+0xaa>

200124dc <_printf_i>:
_printf_i():
200124dc:	7179                	addi	sp,sp,-48
200124de:	d422                	sw	s0,40(sp)
200124e0:	d226                	sw	s1,36(sp)
200124e2:	d04a                	sw	s2,32(sp)
200124e4:	ce4e                	sw	s3,28(sp)
200124e6:	d606                	sw	ra,44(sp)
200124e8:	cc52                	sw	s4,24(sp)
200124ea:	ca56                	sw	s5,20(sp)
200124ec:	c85a                	sw	s6,16(sp)
200124ee:	89b6                	mv	s3,a3
200124f0:	0185c683          	lbu	a3,24(a1)
200124f4:	06e00793          	li	a5,110
200124f8:	8932                	mv	s2,a2
200124fa:	84aa                	mv	s1,a0
200124fc:	842e                	mv	s0,a1
200124fe:	04358613          	addi	a2,a1,67
20012502:	1ef68063          	beq	a3,a5,200126e2 <_printf_i+0x206>
20012506:	06d7e263          	bltu	a5,a3,2001256a <_printf_i+0x8e>
2001250a:	06300793          	li	a5,99
2001250e:	0af68263          	beq	a3,a5,200125b2 <_printf_i+0xd6>
20012512:	00d7ed63          	bltu	a5,a3,2001252c <_printf_i+0x50>
20012516:	1e068a63          	beqz	a3,2001270a <_printf_i+0x22e>
2001251a:	05800793          	li	a5,88
2001251e:	16f68663          	beq	a3,a5,2001268a <_printf_i+0x1ae>
20012522:	04240a93          	addi	s5,s0,66
20012526:	04d40123          	sb	a3,66(s0)
2001252a:	a869                	j	200125c4 <_printf_i+0xe8>
2001252c:	06400793          	li	a5,100
20012530:	00f68663          	beq	a3,a5,2001253c <_printf_i+0x60>
20012534:	06900793          	li	a5,105
20012538:	fef695e3          	bne	a3,a5,20012522 <_printf_i+0x46>
2001253c:	401c                	lw	a5,0(s0)
2001253e:	4308                	lw	a0,0(a4)
20012540:	0807f693          	andi	a3,a5,128
20012544:	00450593          	addi	a1,a0,4
20012548:	c2c1                	beqz	a3,200125c8 <_printf_i+0xec>
2001254a:	411c                	lw	a5,0(a0)
2001254c:	c30c                	sw	a1,0(a4)
2001254e:	0007d863          	bgez	a5,2001255e <_printf_i+0x82>
20012552:	02d00713          	li	a4,45
20012556:	40f007b3          	neg	a5,a5
2001255a:	04e401a3          	sb	a4,67(s0)
2001255e:	ffffe697          	auipc	a3,0xffffe
20012562:	fe268693          	addi	a3,a3,-30 # 20010540 <__sf_fake_stdout+0x34>
20012566:	4729                	li	a4,10
20012568:	a065                	j	20012610 <_printf_i+0x134>
2001256a:	07300793          	li	a5,115
2001256e:	1af68263          	beq	a3,a5,20012712 <_printf_i+0x236>
20012572:	00d7ef63          	bltu	a5,a3,20012590 <_printf_i+0xb4>
20012576:	06f00793          	li	a5,111
2001257a:	04f68f63          	beq	a3,a5,200125d8 <_printf_i+0xfc>
2001257e:	07000793          	li	a5,112
20012582:	faf690e3          	bne	a3,a5,20012522 <_printf_i+0x46>
20012586:	419c                	lw	a5,0(a1)
20012588:	0207e793          	ori	a5,a5,32
2001258c:	c19c                	sw	a5,0(a1)
2001258e:	a809                	j	200125a0 <_printf_i+0xc4>
20012590:	07500793          	li	a5,117
20012594:	04f68263          	beq	a3,a5,200125d8 <_printf_i+0xfc>
20012598:	07800793          	li	a5,120
2001259c:	f8f693e3          	bne	a3,a5,20012522 <_printf_i+0x46>
200125a0:	07800793          	li	a5,120
200125a4:	04f402a3          	sb	a5,69(s0)
200125a8:	ffffe697          	auipc	a3,0xffffe
200125ac:	fac68693          	addi	a3,a3,-84 # 20010554 <__sf_fake_stdout+0x48>
200125b0:	a0dd                	j	20012696 <_printf_i+0x1ba>
200125b2:	431c                	lw	a5,0(a4)
200125b4:	04258a93          	addi	s5,a1,66
200125b8:	00478693          	addi	a3,a5,4
200125bc:	439c                	lw	a5,0(a5)
200125be:	c314                	sw	a3,0(a4)
200125c0:	04f58123          	sb	a5,66(a1)
200125c4:	4785                	li	a5,1
200125c6:	a2ad                	j	20012730 <_printf_i+0x254>
200125c8:	0407f693          	andi	a3,a5,64
200125cc:	411c                	lw	a5,0(a0)
200125ce:	c30c                	sw	a1,0(a4)
200125d0:	debd                	beqz	a3,2001254e <_printf_i+0x72>
200125d2:	07c2                	slli	a5,a5,0x10
200125d4:	87c1                	srai	a5,a5,0x10
200125d6:	bfa5                	j	2001254e <_printf_i+0x72>
200125d8:	400c                	lw	a1,0(s0)
200125da:	431c                	lw	a5,0(a4)
200125dc:	0805f813          	andi	a6,a1,128
200125e0:	00478513          	addi	a0,a5,4
200125e4:	00080563          	beqz	a6,200125ee <_printf_i+0x112>
200125e8:	c308                	sw	a0,0(a4)
200125ea:	439c                	lw	a5,0(a5)
200125ec:	a039                	j	200125fa <_printf_i+0x11e>
200125ee:	0405f593          	andi	a1,a1,64
200125f2:	c308                	sw	a0,0(a4)
200125f4:	d9fd                	beqz	a1,200125ea <_printf_i+0x10e>
200125f6:	0007d783          	lhu	a5,0(a5)
200125fa:	06f00713          	li	a4,111
200125fe:	0ce68a63          	beq	a3,a4,200126d2 <_printf_i+0x1f6>
20012602:	ffffe697          	auipc	a3,0xffffe
20012606:	f3e68693          	addi	a3,a3,-194 # 20010540 <__sf_fake_stdout+0x34>
2001260a:	4729                	li	a4,10
2001260c:	040401a3          	sb	zero,67(s0)
20012610:	404c                	lw	a1,4(s0)
20012612:	c40c                	sw	a1,8(s0)
20012614:	0005c563          	bltz	a1,2001261e <_printf_i+0x142>
20012618:	4008                	lw	a0,0(s0)
2001261a:	996d                	andi	a0,a0,-5
2001261c:	c008                	sw	a0,0(s0)
2001261e:	e399                	bnez	a5,20012624 <_printf_i+0x148>
20012620:	8ab2                	mv	s5,a2
20012622:	cd91                	beqz	a1,2001263e <_printf_i+0x162>
20012624:	8ab2                	mv	s5,a2
20012626:	02e7f5b3          	remu	a1,a5,a4
2001262a:	1afd                	addi	s5,s5,-1
2001262c:	95b6                	add	a1,a1,a3
2001262e:	0005c583          	lbu	a1,0(a1)
20012632:	00ba8023          	sb	a1,0(s5)
20012636:	02e7d5b3          	divu	a1,a5,a4
2001263a:	0ae7f263          	bgeu	a5,a4,200126de <_printf_i+0x202>
2001263e:	47a1                	li	a5,8
20012640:	00f71e63          	bne	a4,a5,2001265c <_printf_i+0x180>
20012644:	401c                	lw	a5,0(s0)
20012646:	8b85                	andi	a5,a5,1
20012648:	cb91                	beqz	a5,2001265c <_printf_i+0x180>
2001264a:	4058                	lw	a4,4(s0)
2001264c:	481c                	lw	a5,16(s0)
2001264e:	00e7c763          	blt	a5,a4,2001265c <_printf_i+0x180>
20012652:	03000793          	li	a5,48
20012656:	fefa8fa3          	sb	a5,-1(s5)
2001265a:	1afd                	addi	s5,s5,-1
2001265c:	41560633          	sub	a2,a2,s5
20012660:	c810                	sw	a2,16(s0)
20012662:	874e                	mv	a4,s3
20012664:	86ca                	mv	a3,s2
20012666:	0070                	addi	a2,sp,12
20012668:	85a2                	mv	a1,s0
2001266a:	8526                	mv	a0,s1
2001266c:	3395                	jal	200123d0 <_printf_common>
2001266e:	5a7d                	li	s4,-1
20012670:	0d451463          	bne	a0,s4,20012738 <_printf_i+0x25c>
20012674:	557d                	li	a0,-1
20012676:	50b2                	lw	ra,44(sp)
20012678:	5422                	lw	s0,40(sp)
2001267a:	5492                	lw	s1,36(sp)
2001267c:	5902                	lw	s2,32(sp)
2001267e:	49f2                	lw	s3,28(sp)
20012680:	4a62                	lw	s4,24(sp)
20012682:	4ad2                	lw	s5,20(sp)
20012684:	4b42                	lw	s6,16(sp)
20012686:	6145                	addi	sp,sp,48
20012688:	8082                	ret
2001268a:	04d582a3          	sb	a3,69(a1)
2001268e:	ffffe697          	auipc	a3,0xffffe
20012692:	eb268693          	addi	a3,a3,-334 # 20010540 <__sf_fake_stdout+0x34>
20012696:	400c                	lw	a1,0(s0)
20012698:	4308                	lw	a0,0(a4)
2001269a:	0805f813          	andi	a6,a1,128
2001269e:	411c                	lw	a5,0(a0)
200126a0:	0511                	addi	a0,a0,4
200126a2:	02080063          	beqz	a6,200126c2 <_printf_i+0x1e6>
200126a6:	c308                	sw	a0,0(a4)
200126a8:	0015f713          	andi	a4,a1,1
200126ac:	c701                	beqz	a4,200126b4 <_printf_i+0x1d8>
200126ae:	0205e593          	ori	a1,a1,32
200126b2:	c00c                	sw	a1,0(s0)
200126b4:	4741                	li	a4,16
200126b6:	fbb9                	bnez	a5,2001260c <_printf_i+0x130>
200126b8:	400c                	lw	a1,0(s0)
200126ba:	fdf5f593          	andi	a1,a1,-33
200126be:	c00c                	sw	a1,0(s0)
200126c0:	b7b1                	j	2001260c <_printf_i+0x130>
200126c2:	0405f813          	andi	a6,a1,64
200126c6:	c308                	sw	a0,0(a4)
200126c8:	fe0800e3          	beqz	a6,200126a8 <_printf_i+0x1cc>
200126cc:	07c2                	slli	a5,a5,0x10
200126ce:	83c1                	srli	a5,a5,0x10
200126d0:	bfe1                	j	200126a8 <_printf_i+0x1cc>
200126d2:	ffffe697          	auipc	a3,0xffffe
200126d6:	e6e68693          	addi	a3,a3,-402 # 20010540 <__sf_fake_stdout+0x34>
200126da:	4721                	li	a4,8
200126dc:	bf05                	j	2001260c <_printf_i+0x130>
200126de:	87ae                	mv	a5,a1
200126e0:	b799                	j	20012626 <_printf_i+0x14a>
200126e2:	4194                	lw	a3,0(a1)
200126e4:	431c                	lw	a5,0(a4)
200126e6:	49cc                	lw	a1,20(a1)
200126e8:	0806f813          	andi	a6,a3,128
200126ec:	00478513          	addi	a0,a5,4
200126f0:	00080663          	beqz	a6,200126fc <_printf_i+0x220>
200126f4:	c308                	sw	a0,0(a4)
200126f6:	439c                	lw	a5,0(a5)
200126f8:	c38c                	sw	a1,0(a5)
200126fa:	a801                	j	2001270a <_printf_i+0x22e>
200126fc:	c308                	sw	a0,0(a4)
200126fe:	0406f693          	andi	a3,a3,64
20012702:	439c                	lw	a5,0(a5)
20012704:	daf5                	beqz	a3,200126f8 <_printf_i+0x21c>
20012706:	00b79023          	sh	a1,0(a5)
2001270a:	00042823          	sw	zero,16(s0)
2001270e:	8ab2                	mv	s5,a2
20012710:	bf89                	j	20012662 <_printf_i+0x186>
20012712:	431c                	lw	a5,0(a4)
20012714:	41d0                	lw	a2,4(a1)
20012716:	4581                	li	a1,0
20012718:	00478693          	addi	a3,a5,4
2001271c:	c314                	sw	a3,0(a4)
2001271e:	0007aa83          	lw	s5,0(a5)
20012722:	8556                	mv	a0,s5
20012724:	3179                	jal	200123b2 <memchr>
20012726:	c501                	beqz	a0,2001272e <_printf_i+0x252>
20012728:	41550533          	sub	a0,a0,s5
2001272c:	c048                	sw	a0,4(s0)
2001272e:	405c                	lw	a5,4(s0)
20012730:	c81c                	sw	a5,16(s0)
20012732:	040401a3          	sb	zero,67(s0)
20012736:	b735                	j	20012662 <_printf_i+0x186>
20012738:	4814                	lw	a3,16(s0)
2001273a:	8656                	mv	a2,s5
2001273c:	85ca                	mv	a1,s2
2001273e:	8526                	mv	a0,s1
20012740:	9982                	jalr	s3
20012742:	f34509e3          	beq	a0,s4,20012674 <_printf_i+0x198>
20012746:	401c                	lw	a5,0(s0)
20012748:	8b89                	andi	a5,a5,2
2001274a:	e78d                	bnez	a5,20012774 <_printf_i+0x298>
2001274c:	47b2                	lw	a5,12(sp)
2001274e:	4448                	lw	a0,12(s0)
20012750:	f2f553e3          	bge	a0,a5,20012676 <_printf_i+0x19a>
20012754:	853e                	mv	a0,a5
20012756:	b705                	j	20012676 <_printf_i+0x19a>
20012758:	4685                	li	a3,1
2001275a:	8656                	mv	a2,s5
2001275c:	85ca                	mv	a1,s2
2001275e:	8526                	mv	a0,s1
20012760:	9982                	jalr	s3
20012762:	f16509e3          	beq	a0,s6,20012674 <_printf_i+0x198>
20012766:	0a05                	addi	s4,s4,1
20012768:	445c                	lw	a5,12(s0)
2001276a:	4732                	lw	a4,12(sp)
2001276c:	8f99                	sub	a5,a5,a4
2001276e:	fefa45e3          	blt	s4,a5,20012758 <_printf_i+0x27c>
20012772:	bfe9                	j	2001274c <_printf_i+0x270>
20012774:	4a01                	li	s4,0
20012776:	01940a93          	addi	s5,s0,25
2001277a:	5b7d                	li	s6,-1
2001277c:	b7f5                	j	20012768 <_printf_i+0x28c>

2001277e <_read_r>:
_read_r():
2001277e:	1141                	addi	sp,sp,-16
20012780:	c422                	sw	s0,8(sp)
20012782:	842a                	mv	s0,a0
20012784:	852e                	mv	a0,a1
20012786:	85b2                	mv	a1,a2
20012788:	8636                	mv	a2,a3
2001278a:	8e01a823          	sw	zero,-1808(gp) # 80000bb0 <errno>
2001278e:	c606                	sw	ra,12(sp)
20012790:	5ca050ef          	jal	ra,20017d5a <_read>
20012794:	57fd                	li	a5,-1
20012796:	00f51763          	bne	a0,a5,200127a4 <_read_r+0x26>
2001279a:	8f018793          	addi	a5,gp,-1808 # 80000bb0 <errno>
2001279e:	439c                	lw	a5,0(a5)
200127a0:	c391                	beqz	a5,200127a4 <_read_r+0x26>
200127a2:	c01c                	sw	a5,0(s0)
200127a4:	40b2                	lw	ra,12(sp)
200127a6:	4422                	lw	s0,8(sp)
200127a8:	0141                	addi	sp,sp,16
200127aa:	8082                	ret

200127ac <__metal_driver_sifive_clint0_control_base>:
__metal_driver_sifive_clint0_control_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:233
/* --------------------- fixed_factor_clock ------------ */


/* --------------------- sifive_clint0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_clint0_control_base(struct metal_interrupt *controller)
{
200127ac:	1101                	addi	sp,sp,-32
200127ae:	ce22                	sw	s0,28(sp)
200127b0:	1000                	addi	s0,sp,32
200127b2:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:234
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
200127b6:	fec42703          	lw	a4,-20(s0)
200127ba:	81018793          	addi	a5,gp,-2032 # 80000ad0 <__metal_dt_clint_2000000>
200127be:	00f71563          	bne	a4,a5,200127c8 <__metal_driver_sifive_clint0_control_base+0x1c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:235
		return METAL_RISCV_CLINT0_2000000_BASE_ADDRESS;
200127c2:	020007b7          	lui	a5,0x2000
200127c6:	a011                	j	200127ca <__metal_driver_sifive_clint0_control_base+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:238
	}
	else {
		return 0;
200127c8:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:240
	}
}
200127ca:	853e                	mv	a0,a5
200127cc:	4472                	lw	s0,28(sp)
200127ce:	6105                	addi	sp,sp,32
200127d0:	8082                	ret

200127d2 <__metal_driver_sifive_clint0_num_interrupts>:
__metal_driver_sifive_clint0_num_interrupts():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:253
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_clint0_num_interrupts(struct metal_interrupt *controller)
{
200127d2:	1101                	addi	sp,sp,-32
200127d4:	ce22                	sw	s0,28(sp)
200127d6:	1000                	addi	s0,sp,32
200127d8:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:254
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
200127dc:	fec42703          	lw	a4,-20(s0)
200127e0:	81018793          	addi	a5,gp,-2032 # 80000ad0 <__metal_dt_clint_2000000>
200127e4:	00f71463          	bne	a4,a5,200127ec <__metal_driver_sifive_clint0_num_interrupts+0x1a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:255
		return METAL_MAX_CLINT_INTERRUPTS;
200127e8:	4789                	li	a5,2
200127ea:	a011                	j	200127ee <__metal_driver_sifive_clint0_num_interrupts+0x1c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:258
	}
	else {
		return 0;
200127ec:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:260
	}
}
200127ee:	853e                	mv	a0,a5
200127f0:	4472                	lw	s0,28(sp)
200127f2:	6105                	addi	sp,sp,32
200127f4:	8082                	ret

200127f6 <__metal_driver_sifive_clint0_interrupt_parents>:
__metal_driver_sifive_clint0_interrupt_parents():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:263

static __inline__ struct metal_interrupt * __metal_driver_sifive_clint0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
200127f6:	1101                	addi	sp,sp,-32
200127f8:	ce22                	sw	s0,28(sp)
200127fa:	1000                	addi	s0,sp,32
200127fc:	fea42623          	sw	a0,-20(s0)
20012800:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:264
	if (idx == 0) {
20012804:	fe842783          	lw	a5,-24(s0)
20012808:	e791                	bnez	a5,20012814 <__metal_driver_sifive_clint0_interrupt_parents+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:265
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
2001280a:	800007b7          	lui	a5,0x80000
2001280e:	09078793          	addi	a5,a5,144 # 80000090 <metal_segment_heap_target_end+0xffffe8d0>
20012812:	a821                	j	2001282a <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:267
	}
	else if (idx == 1) {
20012814:	fe842703          	lw	a4,-24(s0)
20012818:	4785                	li	a5,1
2001281a:	00f71763          	bne	a4,a5,20012828 <__metal_driver_sifive_clint0_interrupt_parents+0x32>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:268
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
2001281e:	800007b7          	lui	a5,0x80000
20012822:	09078793          	addi	a5,a5,144 # 80000090 <metal_segment_heap_target_end+0xffffe8d0>
20012826:	a011                	j	2001282a <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:271
	}
	else {
		return NULL;
20012828:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:273
	}
}
2001282a:	853e                	mv	a0,a5
2001282c:	4472                	lw	s0,28(sp)
2001282e:	6105                	addi	sp,sp,32
20012830:	8082                	ret

20012832 <__metal_driver_sifive_clint0_interrupt_lines>:
__metal_driver_sifive_clint0_interrupt_lines():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:276

static __inline__ int __metal_driver_sifive_clint0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
20012832:	1101                	addi	sp,sp,-32
20012834:	ce22                	sw	s0,28(sp)
20012836:	1000                	addi	s0,sp,32
20012838:	fea42623          	sw	a0,-20(s0)
2001283c:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:277
	if (idx == 0) {
20012840:	fe842783          	lw	a5,-24(s0)
20012844:	e399                	bnez	a5,2001284a <__metal_driver_sifive_clint0_interrupt_lines+0x18>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:278
		return 3;
20012846:	478d                	li	a5,3
20012848:	a809                	j	2001285a <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:280
	}
	else if (idx == 1) {
2001284a:	fe842703          	lw	a4,-24(s0)
2001284e:	4785                	li	a5,1
20012850:	00f71463          	bne	a4,a5,20012858 <__metal_driver_sifive_clint0_interrupt_lines+0x26>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:281
		return 7;
20012854:	479d                	li	a5,7
20012856:	a011                	j	2001285a <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:284
	}
	else {
		return 0;
20012858:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:286
	}
}
2001285a:	853e                	mv	a0,a5
2001285c:	4472                	lw	s0,28(sp)
2001285e:	6105                	addi	sp,sp,32
20012860:	8082                	ret

20012862 <__metal_clint0_mtime_get>:
__metal_clint0_mtime_get():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:14
#include <metal/drivers/riscv_clint0.h>
#include <metal/io.h>
#include <metal/machine.h>

unsigned long long
__metal_clint0_mtime_get(struct __metal_driver_riscv_clint0 *clint) {
20012862:	715d                	addi	sp,sp,-80
20012864:	c686                	sw	ra,76(sp)
20012866:	c4a2                	sw	s0,72(sp)
20012868:	c2ca                	sw	s2,68(sp)
2001286a:	c0ce                	sw	s3,64(sp)
2001286c:	de52                	sw	s4,60(sp)
2001286e:	dc56                	sw	s5,56(sp)
20012870:	da5a                	sw	s6,52(sp)
20012872:	d85e                	sw	s7,48(sp)
20012874:	d662                	sw	s8,44(sp)
20012876:	d466                	sw	s9,40(sp)
20012878:	0880                	addi	s0,sp,80
2001287a:	faa42e23          	sw	a0,-68(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:17
    __metal_io_u32 lo, hi;
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
2001287e:	fbc42783          	lw	a5,-68(s0)
20012882:	853e                	mv	a0,a5
20012884:	3725                	jal	200127ac <__metal_driver_sifive_clint0_control_base>
20012886:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:21 (discriminator 1)

    /* Guard against rollover when reading */
    do {
        hi = __METAL_ACCESS_ONCE(
2001288a:	fcc42703          	lw	a4,-52(s0)
2001288e:	67b1                	lui	a5,0xc
20012890:	17f1                	addi	a5,a5,-4
20012892:	97ba                	add	a5,a5,a4
20012894:	439c                	lw	a5,0(a5)
20012896:	fcf42423          	sw	a5,-56(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:23 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4));
        lo = __METAL_ACCESS_ONCE(
2001289a:	fcc42703          	lw	a4,-52(s0)
2001289e:	67b1                	lui	a5,0xc
200128a0:	17e1                	addi	a5,a5,-8
200128a2:	97ba                	add	a5,a5,a4
200128a4:	439c                	lw	a5,0(a5)
200128a6:	fcf42223          	sw	a5,-60(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:25 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME));
    } while (__METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
200128aa:	fcc42703          	lw	a4,-52(s0)
200128ae:	67b1                	lui	a5,0xc
200128b0:	17f1                	addi	a5,a5,-4
200128b2:	97ba                	add	a5,a5,a4
200128b4:	439c                	lw	a5,0(a5)
200128b6:	fc842703          	lw	a4,-56(s0)
200128ba:	fcf718e3          	bne	a4,a5,2001288a <__metal_clint0_mtime_get+0x28>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:29
                                                    METAL_RISCV_CLINT0_MTIME +
                                                    4)) != hi);

    return (((unsigned long long)hi) << 32) | lo;
200128be:	fc842783          	lw	a5,-56(s0)
200128c2:	8c3e                	mv	s8,a5
200128c4:	4c81                	li	s9,0
200128c6:	000c1993          	slli	s3,s8,0x0
200128ca:	4901                	li	s2,0
200128cc:	fc442783          	lw	a5,-60(s0)
200128d0:	8a3e                	mv	s4,a5
200128d2:	4a81                	li	s5,0
200128d4:	01496b33          	or	s6,s2,s4
200128d8:	0159ebb3          	or	s7,s3,s5
200128dc:	87da                	mv	a5,s6
200128de:	885e                	mv	a6,s7
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:30
}
200128e0:	853e                	mv	a0,a5
200128e2:	85c2                	mv	a1,a6
200128e4:	40b6                	lw	ra,76(sp)
200128e6:	4426                	lw	s0,72(sp)
200128e8:	4916                	lw	s2,68(sp)
200128ea:	4986                	lw	s3,64(sp)
200128ec:	5a72                	lw	s4,60(sp)
200128ee:	5ae2                	lw	s5,56(sp)
200128f0:	5b52                	lw	s6,52(sp)
200128f2:	5bc2                	lw	s7,48(sp)
200128f4:	5c32                	lw	s8,44(sp)
200128f6:	5ca2                	lw	s9,40(sp)
200128f8:	6161                	addi	sp,sp,80
200128fa:	8082                	ret

200128fc <__metal_driver_riscv_clint0_mtimecmp_set>:
__metal_driver_riscv_clint0_mtimecmp_set():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:34

int __metal_driver_riscv_clint0_mtimecmp_set(struct metal_interrupt *controller,
                                             int hartid,
                                             unsigned long long time) {
200128fc:	7179                	addi	sp,sp,-48
200128fe:	d606                	sw	ra,44(sp)
20012900:	d422                	sw	s0,40(sp)
20012902:	d24a                	sw	s2,36(sp)
20012904:	d04e                	sw	s3,32(sp)
20012906:	1800                	addi	s0,sp,48
20012908:	fca42e23          	sw	a0,-36(s0)
2001290c:	fcb42c23          	sw	a1,-40(s0)
20012910:	fcc42823          	sw	a2,-48(s0)
20012914:	fcd42a23          	sw	a3,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:35
    struct __metal_driver_riscv_clint0 *clint =
20012918:	fdc42783          	lw	a5,-36(s0)
2001291c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:38
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
20012920:	fec42783          	lw	a5,-20(s0)
20012924:	853e                	mv	a0,a5
20012926:	3559                	jal	200127ac <__metal_driver_sifive_clint0_control_base>
20012928:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:45
     * and are NOT internally latched for multiword transfers.
     * Need to be careful about sequencing to avoid triggering
     * spurious interrupts: For that set the high word to a max
     * value first.
     */
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
2001292c:	fd842783          	lw	a5,-40(s0)
20012930:	078e                	slli	a5,a5,0x3
20012932:	873e                	mv	a4,a5
20012934:	fe842783          	lw	a5,-24(s0)
20012938:	973e                	add	a4,a4,a5
2001293a:	6791                	lui	a5,0x4
2001293c:	0791                	addi	a5,a5,4
2001293e:	97ba                	add	a5,a5,a4
20012940:	873e                	mv	a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:47
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = 0xFFFFFFFF;
20012942:	57fd                	li	a5,-1
20012944:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:48
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
20012946:	fd842783          	lw	a5,-40(s0)
2001294a:	078e                	slli	a5,a5,0x3
2001294c:	873e                	mv	a4,a5
2001294e:	fe842783          	lw	a5,-24(s0)
20012952:	973e                	add	a4,a4,a5
20012954:	6791                	lui	a5,0x4
20012956:	97ba                	add	a5,a5,a4
20012958:	873e                	mv	a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:50
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
        (__metal_io_u32)time;
2001295a:	fd042783          	lw	a5,-48(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:49
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
2001295e:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:53
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = (__metal_io_u32)(time >> 32);
20012960:	fd442783          	lw	a5,-44(s0)
20012964:	0007d913          	srli	s2,a5,0x0
20012968:	4981                	li	s3,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:51
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
2001296a:	fd842783          	lw	a5,-40(s0)
2001296e:	078e                	slli	a5,a5,0x3
20012970:	873e                	mv	a4,a5
20012972:	fe842783          	lw	a5,-24(s0)
20012976:	973e                	add	a4,a4,a5
20012978:	6791                	lui	a5,0x4
2001297a:	0791                	addi	a5,a5,4
2001297c:	97ba                	add	a5,a5,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:53
                                           4)) = (__metal_io_u32)(time >> 32);
2001297e:	874a                	mv	a4,s2
20012980:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:54
    return 0;
20012982:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:55
}
20012984:	853e                	mv	a0,a5
20012986:	50b2                	lw	ra,44(sp)
20012988:	5422                	lw	s0,40(sp)
2001298a:	5912                	lw	s2,36(sp)
2001298c:	5982                	lw	s3,32(sp)
2001298e:	6145                	addi	sp,sp,48
20012990:	8082                	ret

20012992 <_get_cpu_intc>:
_get_cpu_intc():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:57

static struct metal_interrupt *_get_cpu_intc() {
20012992:	1101                	addi	sp,sp,-32
20012994:	ce06                	sw	ra,28(sp)
20012996:	cc22                	sw	s0,24(sp)
20012998:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:58
    int hartid = 0;
2001299a:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:59
    __asm__ volatile("csrr %[hartid], mhartid"
2001299e:	f14027f3          	csrr	a5,mhartid
200129a2:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:62
                     : [hartid] "=r"(hartid)::"memory");

    struct metal_cpu *cpu = metal_cpu_get(hartid);
200129a6:	fec42783          	lw	a5,-20(s0)
200129aa:	853e                	mv	a0,a5
200129ac:	633040ef          	jal	ra,200177de <metal_cpu_get>
200129b0:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:64

    return metal_cpu_interrupt_controller(cpu);
200129b4:	fe842503          	lw	a0,-24(s0)
200129b8:	601040ef          	jal	ra,200177b8 <metal_cpu_interrupt_controller>
200129bc:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:65
}
200129be:	853e                	mv	a0,a5
200129c0:	40f2                	lw	ra,28(sp)
200129c2:	4462                	lw	s0,24(sp)
200129c4:	6105                	addi	sp,sp,32
200129c6:	8082                	ret

200129c8 <__metal_driver_riscv_clint0_init>:
__metal_driver_riscv_clint0_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:67

void __metal_driver_riscv_clint0_init(struct metal_interrupt *controller) {
200129c8:	7139                	addi	sp,sp,-64
200129ca:	de06                	sw	ra,60(sp)
200129cc:	dc22                	sw	s0,56(sp)
200129ce:	0080                	addi	s0,sp,64
200129d0:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:69
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
200129d4:	fcc42503          	lw	a0,-52(s0)
200129d8:	3bed                	jal	200127d2 <__metal_driver_sifive_clint0_num_interrupts>
200129da:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:70
    struct __metal_driver_riscv_clint0 *clint =
200129de:	fcc42783          	lw	a5,-52(s0)
200129e2:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:73
        (struct __metal_driver_riscv_clint0 *)(controller);

    if (!clint->init_done) {
200129e6:	fe442783          	lw	a5,-28(s0)
200129ea:	43dc                	lw	a5,4(a5)
200129ec:	efa9                	bnez	a5,20012a46 <__metal_driver_riscv_clint0_init+0x7e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:76
        /* Register its interrupts with with parent controller, aka sw and
         * timerto its default isr */
        for (int i = 0; i < num_interrupts; i++) {
200129ee:	fe042623          	sw	zero,-20(s0)
200129f2:	a081                	j	20012a32 <__metal_driver_riscv_clint0_init+0x6a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:78 (discriminator 3)
            struct metal_interrupt *intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
200129f4:	fec42583          	lw	a1,-20(s0)
200129f8:	fcc42503          	lw	a0,-52(s0)
200129fc:	3bed                	jal	200127f6 <__metal_driver_sifive_clint0_interrupt_parents>
200129fe:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:80 (discriminator 3)
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20012a02:	fec42583          	lw	a1,-20(s0)
20012a06:	fcc42503          	lw	a0,-52(s0)
20012a0a:	3525                	jal	20012832 <__metal_driver_sifive_clint0_interrupt_lines>
20012a0c:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:81 (discriminator 3)
            intc->vtable->interrupt_register(intc, line, NULL, controller);
20012a10:	fe042783          	lw	a5,-32(s0)
20012a14:	439c                	lw	a5,0(a5)
20012a16:	4fdc                	lw	a5,28(a5)
20012a18:	fcc42683          	lw	a3,-52(s0)
20012a1c:	4601                	li	a2,0
20012a1e:	fdc42583          	lw	a1,-36(s0)
20012a22:	fe042503          	lw	a0,-32(s0)
20012a26:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 3)
        for (int i = 0; i < num_interrupts; i++) {
20012a28:	fec42783          	lw	a5,-20(s0)
20012a2c:	0785                	addi	a5,a5,1
20012a2e:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 1)
20012a32:	fec42703          	lw	a4,-20(s0)
20012a36:	fe842783          	lw	a5,-24(s0)
20012a3a:	faf74de3          	blt	a4,a5,200129f4 <__metal_driver_riscv_clint0_init+0x2c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:83
        }
        clint->init_done = 1;
20012a3e:	fe442783          	lw	a5,-28(s0)
20012a42:	4705                	li	a4,1
20012a44:	c3d8                	sw	a4,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:85
    }
}
20012a46:	0001                	nop
20012a48:	50f2                	lw	ra,60(sp)
20012a4a:	5462                	lw	s0,56(sp)
20012a4c:	6121                	addi	sp,sp,64
20012a4e:	8082                	ret

20012a50 <__metal_driver_riscv_clint0_register>:
__metal_driver_riscv_clint0_register():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:89

int __metal_driver_riscv_clint0_register(struct metal_interrupt *controller,
                                         int id, metal_interrupt_handler_t isr,
                                         void *priv) {
20012a50:	7139                	addi	sp,sp,-64
20012a52:	de06                	sw	ra,60(sp)
20012a54:	dc22                	sw	s0,56(sp)
20012a56:	0080                	addi	s0,sp,64
20012a58:	fca42623          	sw	a0,-52(s0)
20012a5c:	fcb42423          	sw	a1,-56(s0)
20012a60:	fcc42223          	sw	a2,-60(s0)
20012a64:	fcd42023          	sw	a3,-64(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:90
    int rc = -1;
20012a68:	57fd                	li	a5,-1
20012a6a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:91
    metal_vector_mode mode = __metal_controller_interrupt_vector_mode();
20012a6e:	46a010ef          	jal	ra,20013ed8 <__metal_controller_interrupt_vector_mode>
20012a72:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:92
    struct metal_interrupt *intc = NULL;
20012a76:	fe042423          	sw	zero,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:93
    struct metal_interrupt *cpu_intc = _get_cpu_intc();
20012a7a:	3f21                	jal	20012992 <_get_cpu_intc>
20012a7c:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:95
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
20012a80:	fcc42503          	lw	a0,-52(s0)
20012a84:	33b9                	jal	200127d2 <__metal_driver_sifive_clint0_num_interrupts>
20012a86:	fca42c23          	sw	a0,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:97

    if ((mode != METAL_VECTOR_MODE) && (mode != METAL_DIRECT_MODE)) {
20012a8a:	fe042703          	lw	a4,-32(s0)
20012a8e:	4785                	li	a5,1
20012a90:	00f70863          	beq	a4,a5,20012aa0 <__metal_driver_riscv_clint0_register+0x50>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:97 (discriminator 1)
20012a94:	fe042783          	lw	a5,-32(s0)
20012a98:	c781                	beqz	a5,20012aa0 <__metal_driver_riscv_clint0_register+0x50>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:98
        return rc;
20012a9a:	fec42783          	lw	a5,-20(s0)
20012a9e:	a049                	j	20012b20 <__metal_driver_riscv_clint0_register+0xd0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:101
    }

    for (int i = 0; i < num_interrupts; i++) {
20012aa0:	fe042223          	sw	zero,-28(s0)
20012aa4:	a091                	j	20012ae8 <__metal_driver_riscv_clint0_register+0x98>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:102
        int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20012aa6:	fe442583          	lw	a1,-28(s0)
20012aaa:	fcc42503          	lw	a0,-52(s0)
20012aae:	3351                	jal	20012832 <__metal_driver_sifive_clint0_interrupt_lines>
20012ab0:	fca42a23          	sw	a0,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:103
        intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20012ab4:	fe442583          	lw	a1,-28(s0)
20012ab8:	fcc42503          	lw	a0,-52(s0)
20012abc:	3b2d                	jal	200127f6 <__metal_driver_sifive_clint0_interrupt_parents>
20012abe:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:104
        if (cpu_intc == intc && id == line) {
20012ac2:	fdc42703          	lw	a4,-36(s0)
20012ac6:	fe842783          	lw	a5,-24(s0)
20012aca:	00f71863          	bne	a4,a5,20012ada <__metal_driver_riscv_clint0_register+0x8a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:104 (discriminator 1)
20012ace:	fc842703          	lw	a4,-56(s0)
20012ad2:	fd442783          	lw	a5,-44(s0)
20012ad6:	02f70063          	beq	a4,a5,20012af6 <__metal_driver_riscv_clint0_register+0xa6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:107 (discriminator 2)
            break;
        }
        intc = NULL;
20012ada:	fe042423          	sw	zero,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 2)
    for (int i = 0; i < num_interrupts; i++) {
20012ade:	fe442783          	lw	a5,-28(s0)
20012ae2:	0785                	addi	a5,a5,1
20012ae4:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 1)
20012ae8:	fe442703          	lw	a4,-28(s0)
20012aec:	fd842783          	lw	a5,-40(s0)
20012af0:	faf74be3          	blt	a4,a5,20012aa6 <__metal_driver_riscv_clint0_register+0x56>
20012af4:	a011                	j	20012af8 <__metal_driver_riscv_clint0_register+0xa8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:105
            break;
20012af6:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:111
    }

    /* Register its interrupts with parent controller */
    if (intc) {
20012af8:	fe842783          	lw	a5,-24(s0)
20012afc:	c385                	beqz	a5,20012b1c <__metal_driver_riscv_clint0_register+0xcc>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:112
        rc = intc->vtable->interrupt_register(intc, id, isr, priv);
20012afe:	fe842783          	lw	a5,-24(s0)
20012b02:	439c                	lw	a5,0(a5)
20012b04:	4fdc                	lw	a5,28(a5)
20012b06:	fc042683          	lw	a3,-64(s0)
20012b0a:	fc442603          	lw	a2,-60(s0)
20012b0e:	fc842583          	lw	a1,-56(s0)
20012b12:	fe842503          	lw	a0,-24(s0)
20012b16:	9782                	jalr	a5
20012b18:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:114
    }
    return rc;
20012b1c:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:115
}
20012b20:	853e                	mv	a0,a5
20012b22:	50f2                	lw	ra,60(sp)
20012b24:	5462                	lw	s0,56(sp)
20012b26:	6121                	addi	sp,sp,64
20012b28:	8082                	ret

20012b2a <__metal_driver_riscv_clint0_vector_register>:
__metal_driver_riscv_clint0_vector_register():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:119

int __metal_driver_riscv_clint0_vector_register(
    struct metal_interrupt *controller, int id,
    metal_interrupt_vector_handler_t isr, void *priv) {
20012b2a:	7179                	addi	sp,sp,-48
20012b2c:	d622                	sw	s0,44(sp)
20012b2e:	1800                	addi	s0,sp,48
20012b30:	fca42e23          	sw	a0,-36(s0)
20012b34:	fcb42c23          	sw	a1,-40(s0)
20012b38:	fcc42a23          	sw	a2,-44(s0)
20012b3c:	fcd42823          	sw	a3,-48(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:121
    /* Not supported. User can override the 'weak' handler with their own */
    int rc = -1;
20012b40:	57fd                	li	a5,-1
20012b42:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:122
    return rc;
20012b46:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:123
}
20012b4a:	853e                	mv	a0,a5
20012b4c:	5432                	lw	s0,44(sp)
20012b4e:	6145                	addi	sp,sp,48
20012b50:	8082                	ret

20012b52 <__metal_driver_riscv_clint0_get_vector_mode>:
__metal_driver_riscv_clint0_get_vector_mode():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:126

metal_vector_mode __metal_driver_riscv_clint0_get_vector_mode(
    struct metal_interrupt *controller) {
20012b52:	1101                	addi	sp,sp,-32
20012b54:	ce06                	sw	ra,28(sp)
20012b56:	cc22                	sw	s0,24(sp)
20012b58:	1000                	addi	s0,sp,32
20012b5a:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:127
    return __metal_controller_interrupt_vector_mode();
20012b5e:	37a010ef          	jal	ra,20013ed8 <__metal_controller_interrupt_vector_mode>
20012b62:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:128
}
20012b64:	853e                	mv	a0,a5
20012b66:	40f2                	lw	ra,28(sp)
20012b68:	4462                	lw	s0,24(sp)
20012b6a:	6105                	addi	sp,sp,32
20012b6c:	8082                	ret

20012b6e <__metal_driver_riscv_clint0_set_vector_mode>:
__metal_driver_riscv_clint0_set_vector_mode():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:131

int __metal_driver_riscv_clint0_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
20012b6e:	7179                	addi	sp,sp,-48
20012b70:	d606                	sw	ra,44(sp)
20012b72:	d422                	sw	s0,40(sp)
20012b74:	1800                	addi	s0,sp,48
20012b76:	fca42e23          	sw	a0,-36(s0)
20012b7a:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:132
    int rc = -1;
20012b7e:	57fd                	li	a5,-1
20012b80:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:133
    struct metal_interrupt *intc = _get_cpu_intc();
20012b84:	3539                	jal	20012992 <_get_cpu_intc>
20012b86:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:135

    if (intc) {
20012b8a:	fe842783          	lw	a5,-24(s0)
20012b8e:	c395                	beqz	a5,20012bb2 <__metal_driver_riscv_clint0_set_vector_mode+0x44>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:138
        /* Valid vector modes are VECTOR and DIRECT, anything else is invalid
         * (-1) */
        switch (mode) {
20012b90:	fd842703          	lw	a4,-40(s0)
20012b94:	4785                	li	a5,1
20012b96:	02e7e063          	bltu	a5,a4,20012bb6 <__metal_driver_riscv_clint0_set_vector_mode+0x48>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:141
        case METAL_VECTOR_MODE:
        case METAL_DIRECT_MODE:
            rc = intc->vtable->interrupt_set_vector_mode(intc, mode);
20012b9a:	fe842783          	lw	a5,-24(s0)
20012b9e:	439c                	lw	a5,0(a5)
20012ba0:	43dc                	lw	a5,4(a5)
20012ba2:	fd842583          	lw	a1,-40(s0)
20012ba6:	fe842503          	lw	a0,-24(s0)
20012baa:	9782                	jalr	a5
20012bac:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:142
            break;
20012bb0:	a021                	j	20012bb8 <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:146
        default:
            break;
        }
    }
20012bb2:	0001                	nop
20012bb4:	a011                	j	20012bb8 <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:144
            break;
20012bb6:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:147
    return rc;
20012bb8:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:148
}
20012bbc:	853e                	mv	a0,a5
20012bbe:	50b2                	lw	ra,44(sp)
20012bc0:	5422                	lw	s0,40(sp)
20012bc2:	6145                	addi	sp,sp,48
20012bc4:	8082                	ret

20012bc6 <__metal_driver_riscv_clint0_enable>:
__metal_driver_riscv_clint0_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:151

int __metal_driver_riscv_clint0_enable(struct metal_interrupt *controller,
                                       int id) {
20012bc6:	7139                	addi	sp,sp,-64
20012bc8:	de06                	sw	ra,60(sp)
20012bca:	dc22                	sw	s0,56(sp)
20012bcc:	0080                	addi	s0,sp,64
20012bce:	fca42623          	sw	a0,-52(s0)
20012bd2:	fcb42423          	sw	a1,-56(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:152
    int rc = -1;
20012bd6:	57fd                	li	a5,-1
20012bd8:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:154

    if (id) {
20012bdc:	fc842783          	lw	a5,-56(s0)
20012be0:	c7c9                	beqz	a5,20012c6a <__metal_driver_riscv_clint0_enable+0xa4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:155
        struct metal_interrupt *intc = NULL;
20012be2:	fe042423          	sw	zero,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:156
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
20012be6:	3375                	jal	20012992 <_get_cpu_intc>
20012be8:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:158
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
20012bec:	fcc42503          	lw	a0,-52(s0)
20012bf0:	36cd                	jal	200127d2 <__metal_driver_sifive_clint0_num_interrupts>
20012bf2:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:160

        for (int i = 0; i < num_interrupts; i++) {
20012bf6:	fe042223          	sw	zero,-28(s0)
20012bfa:	a091                	j	20012c3e <__metal_driver_riscv_clint0_enable+0x78>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:162
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20012bfc:	fe442583          	lw	a1,-28(s0)
20012c00:	fcc42503          	lw	a0,-52(s0)
20012c04:	313d                	jal	20012832 <__metal_driver_sifive_clint0_interrupt_lines>
20012c06:	fca42c23          	sw	a0,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:164
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20012c0a:	fe442583          	lw	a1,-28(s0)
20012c0e:	fcc42503          	lw	a0,-52(s0)
20012c12:	36d5                	jal	200127f6 <__metal_driver_sifive_clint0_interrupt_parents>
20012c14:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:165
            if (cpu_intc == intc && id == line) {
20012c18:	fe042703          	lw	a4,-32(s0)
20012c1c:	fe842783          	lw	a5,-24(s0)
20012c20:	00f71863          	bne	a4,a5,20012c30 <__metal_driver_riscv_clint0_enable+0x6a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:165 (discriminator 1)
20012c24:	fc842703          	lw	a4,-56(s0)
20012c28:	fd842783          	lw	a5,-40(s0)
20012c2c:	02f70063          	beq	a4,a5,20012c4c <__metal_driver_riscv_clint0_enable+0x86>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:168 (discriminator 2)
                break;
            }
            intc = NULL;
20012c30:	fe042423          	sw	zero,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
20012c34:	fe442783          	lw	a5,-28(s0)
20012c38:	0785                	addi	a5,a5,1
20012c3a:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 1)
20012c3e:	fe442703          	lw	a4,-28(s0)
20012c42:	fdc42783          	lw	a5,-36(s0)
20012c46:	faf74be3          	blt	a4,a5,20012bfc <__metal_driver_riscv_clint0_enable+0x36>
20012c4a:	a011                	j	20012c4e <__metal_driver_riscv_clint0_enable+0x88>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:166
                break;
20012c4c:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:172
        }

        /* Enable its interrupts with parent controller */
        if (intc) {
20012c4e:	fe842783          	lw	a5,-24(s0)
20012c52:	cf81                	beqz	a5,20012c6a <__metal_driver_riscv_clint0_enable+0xa4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:173
            rc = intc->vtable->interrupt_enable(intc, id);
20012c54:	fe842783          	lw	a5,-24(s0)
20012c58:	439c                	lw	a5,0(a5)
20012c5a:	53dc                	lw	a5,36(a5)
20012c5c:	fc842583          	lw	a1,-56(s0)
20012c60:	fe842503          	lw	a0,-24(s0)
20012c64:	9782                	jalr	a5
20012c66:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:177
        }
    }

    return rc;
20012c6a:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:178
}
20012c6e:	853e                	mv	a0,a5
20012c70:	50f2                	lw	ra,60(sp)
20012c72:	5462                	lw	s0,56(sp)
20012c74:	6121                	addi	sp,sp,64
20012c76:	8082                	ret

20012c78 <__metal_driver_riscv_clint0_disable>:
__metal_driver_riscv_clint0_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:181

int __metal_driver_riscv_clint0_disable(struct metal_interrupt *controller,
                                        int id) {
20012c78:	7139                	addi	sp,sp,-64
20012c7a:	de06                	sw	ra,60(sp)
20012c7c:	dc22                	sw	s0,56(sp)
20012c7e:	0080                	addi	s0,sp,64
20012c80:	fca42623          	sw	a0,-52(s0)
20012c84:	fcb42423          	sw	a1,-56(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:182
    int rc = -1;
20012c88:	57fd                	li	a5,-1
20012c8a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:184

    if (id) {
20012c8e:	fc842783          	lw	a5,-56(s0)
20012c92:	c7c9                	beqz	a5,20012d1c <__metal_driver_riscv_clint0_disable+0xa4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:185
        struct metal_interrupt *intc = NULL;
20012c94:	fe042423          	sw	zero,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:186
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
20012c98:	39ed                	jal	20012992 <_get_cpu_intc>
20012c9a:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:188
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
20012c9e:	fcc42503          	lw	a0,-52(s0)
20012ca2:	3e05                	jal	200127d2 <__metal_driver_sifive_clint0_num_interrupts>
20012ca4:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:190

        for (int i = 0; i < num_interrupts; i++) {
20012ca8:	fe042223          	sw	zero,-28(s0)
20012cac:	a091                	j	20012cf0 <__metal_driver_riscv_clint0_disable+0x78>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:192
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20012cae:	fe442583          	lw	a1,-28(s0)
20012cb2:	fcc42503          	lw	a0,-52(s0)
20012cb6:	3eb5                	jal	20012832 <__metal_driver_sifive_clint0_interrupt_lines>
20012cb8:	fca42c23          	sw	a0,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:194
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20012cbc:	fe442583          	lw	a1,-28(s0)
20012cc0:	fcc42503          	lw	a0,-52(s0)
20012cc4:	3e0d                	jal	200127f6 <__metal_driver_sifive_clint0_interrupt_parents>
20012cc6:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:195
            if (cpu_intc == intc && id == line) {
20012cca:	fe042703          	lw	a4,-32(s0)
20012cce:	fe842783          	lw	a5,-24(s0)
20012cd2:	00f71863          	bne	a4,a5,20012ce2 <__metal_driver_riscv_clint0_disable+0x6a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:195 (discriminator 1)
20012cd6:	fc842703          	lw	a4,-56(s0)
20012cda:	fd842783          	lw	a5,-40(s0)
20012cde:	02f70063          	beq	a4,a5,20012cfe <__metal_driver_riscv_clint0_disable+0x86>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:198 (discriminator 2)
                break;
            }
            intc = NULL;
20012ce2:	fe042423          	sw	zero,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
20012ce6:	fe442783          	lw	a5,-28(s0)
20012cea:	0785                	addi	a5,a5,1
20012cec:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 1)
20012cf0:	fe442703          	lw	a4,-28(s0)
20012cf4:	fdc42783          	lw	a5,-36(s0)
20012cf8:	faf74be3          	blt	a4,a5,20012cae <__metal_driver_riscv_clint0_disable+0x36>
20012cfc:	a011                	j	20012d00 <__metal_driver_riscv_clint0_disable+0x88>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:196
                break;
20012cfe:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:202
        }

        /* Disable its interrupts with parent controller */
        if (intc) {
20012d00:	fe842783          	lw	a5,-24(s0)
20012d04:	cf81                	beqz	a5,20012d1c <__metal_driver_riscv_clint0_disable+0xa4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:203
            rc = intc->vtable->interrupt_disable(intc, id);
20012d06:	fe842783          	lw	a5,-24(s0)
20012d0a:	439c                	lw	a5,0(a5)
20012d0c:	579c                	lw	a5,40(a5)
20012d0e:	fc842583          	lw	a1,-56(s0)
20012d12:	fe842503          	lw	a0,-24(s0)
20012d16:	9782                	jalr	a5
20012d18:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:207
        }
    }

    return rc;
20012d1c:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:208
}
20012d20:	853e                	mv	a0,a5
20012d22:	50f2                	lw	ra,60(sp)
20012d24:	5462                	lw	s0,56(sp)
20012d26:	6121                	addi	sp,sp,64
20012d28:	8082                	ret

20012d2a <__metal_driver_riscv_clint0_command_request>:
__metal_driver_riscv_clint0_command_request():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:211

int __metal_driver_riscv_clint0_command_request(
    struct metal_interrupt *controller, int command, void *data) {
20012d2a:	7179                	addi	sp,sp,-48
20012d2c:	d606                	sw	ra,44(sp)
20012d2e:	d422                	sw	s0,40(sp)
20012d30:	1800                	addi	s0,sp,48
20012d32:	fca42e23          	sw	a0,-36(s0)
20012d36:	fcb42c23          	sw	a1,-40(s0)
20012d3a:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:213
    int hartid;
    int rc = -1;
20012d3e:	57fd                	li	a5,-1
20012d40:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:214
    struct __metal_driver_riscv_clint0 *clint =
20012d44:	fdc42783          	lw	a5,-36(s0)
20012d48:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:217
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(controller);
20012d4c:	fdc42503          	lw	a0,-36(s0)
20012d50:	a5dff0ef          	jal	ra,200127ac <__metal_driver_sifive_clint0_control_base>
20012d54:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:219

    switch (command) {
20012d58:	fd842703          	lw	a4,-40(s0)
20012d5c:	4789                	li	a5,2
20012d5e:	04f70863          	beq	a4,a5,20012dae <__metal_driver_riscv_clint0_command_request+0x84>
20012d62:	fd842703          	lw	a4,-40(s0)
20012d66:	4789                	li	a5,2
20012d68:	00e7c863          	blt	a5,a4,20012d78 <__metal_driver_riscv_clint0_command_request+0x4e>
20012d6c:	fd842703          	lw	a4,-40(s0)
20012d70:	4785                	li	a5,1
20012d72:	00f70e63          	beq	a4,a5,20012d8e <__metal_driver_riscv_clint0_command_request+0x64>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:263
            rc = __METAL_ACCESS_ONCE(
                (__metal_io_u32 *)(control_base + (hartid * 4)));
        }
        break;
    default:
        break;
20012d76:	a8e9                	j	20012e50 <__metal_driver_riscv_clint0_command_request+0x126>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:219
    switch (command) {
20012d78:	fd842703          	lw	a4,-40(s0)
20012d7c:	478d                	li	a5,3
20012d7e:	04f70c63          	beq	a4,a5,20012dd6 <__metal_driver_riscv_clint0_command_request+0xac>
20012d82:	fd842703          	lw	a4,-40(s0)
20012d86:	4791                	li	a5,4
20012d88:	08f70863          	beq	a4,a5,20012e18 <__metal_driver_riscv_clint0_command_request+0xee>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:263
        break;
20012d8c:	a0d1                	j	20012e50 <__metal_driver_riscv_clint0_command_request+0x126>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:221
        if (data) {
20012d8e:	fd442783          	lw	a5,-44(s0)
20012d92:	cbc5                	beqz	a5,20012e42 <__metal_driver_riscv_clint0_command_request+0x118>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:222
            *(unsigned long long *)data = __metal_clint0_mtime_get(clint);
20012d94:	fe842503          	lw	a0,-24(s0)
20012d98:	34e9                	jal	20012862 <__metal_clint0_mtime_get>
20012d9a:	87aa                	mv	a5,a0
20012d9c:	882e                	mv	a6,a1
20012d9e:	fd442703          	lw	a4,-44(s0)
20012da2:	c31c                	sw	a5,0(a4)
20012da4:	01072223          	sw	a6,4(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:223
            rc = 0;
20012da8:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
20012dac:	a859                	j	20012e42 <__metal_driver_riscv_clint0_command_request+0x118>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:227
        if (data) {
20012dae:	fd442783          	lw	a5,-44(s0)
20012db2:	cbd1                	beqz	a5,20012e46 <__metal_driver_riscv_clint0_command_request+0x11c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:228
            hartid = *(int *)data;
20012db4:	fd442783          	lw	a5,-44(s0)
20012db8:	439c                	lw	a5,0(a5)
20012dba:	fef42023          	sw	a5,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:229
            __METAL_ACCESS_ONCE((
20012dbe:	fe042783          	lw	a5,-32(s0)
20012dc2:	078a                	slli	a5,a5,0x2
20012dc4:	873e                	mv	a4,a5
20012dc6:	fe442783          	lw	a5,-28(s0)
20012dca:	97ba                	add	a5,a5,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:230
                __metal_io_u32 *)(control_base + (hartid * 4))) = METAL_DISABLE;
20012dcc:	0007a023          	sw	zero,0(a5) # 4000 <__heap_size+0x3800>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:231
            rc = 0;
20012dd0:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
20012dd4:	a88d                	j	20012e46 <__metal_driver_riscv_clint0_command_request+0x11c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:235
        if (data) {
20012dd6:	fd442783          	lw	a5,-44(s0)
20012dda:	cba5                	beqz	a5,20012e4a <__metal_driver_riscv_clint0_command_request+0x120>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:236
            hartid = *(int *)data;
20012ddc:	fd442783          	lw	a5,-44(s0)
20012de0:	439c                	lw	a5,0(a5)
20012de2:	fef42023          	sw	a5,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:237
            __METAL_ACCESS_ONCE(
20012de6:	fe042783          	lw	a5,-32(s0)
20012dea:	078a                	slli	a5,a5,0x2
20012dec:	873e                	mv	a4,a5
20012dee:	fe442783          	lw	a5,-28(s0)
20012df2:	97ba                	add	a5,a5,a4
20012df4:	873e                	mv	a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:238
                (__metal_io_u32 *)(control_base + (hartid * 4))) = METAL_ENABLE;
20012df6:	4785                	li	a5,1
20012df8:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:248
            __METAL_IO_FENCE(o, i);
20012dfa:	0480000f          	fence	o,i
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:249
            rc = __METAL_ACCESS_ONCE(
20012dfe:	fe042783          	lw	a5,-32(s0)
20012e02:	078a                	slli	a5,a5,0x2
20012e04:	873e                	mv	a4,a5
20012e06:	fe442783          	lw	a5,-28(s0)
20012e0a:	97ba                	add	a5,a5,a4
20012e0c:	439c                	lw	a5,0(a5)
20012e0e:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:251
            rc = 0;
20012e12:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
20012e16:	a815                	j	20012e4a <__metal_driver_riscv_clint0_command_request+0x120>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:255
        rc = 0;
20012e18:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:256
        if (data) {
20012e1c:	fd442783          	lw	a5,-44(s0)
20012e20:	c79d                	beqz	a5,20012e4e <__metal_driver_riscv_clint0_command_request+0x124>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:257
            hartid = *(int *)data;
20012e22:	fd442783          	lw	a5,-44(s0)
20012e26:	439c                	lw	a5,0(a5)
20012e28:	fef42023          	sw	a5,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:258
            rc = __METAL_ACCESS_ONCE(
20012e2c:	fe042783          	lw	a5,-32(s0)
20012e30:	078a                	slli	a5,a5,0x2
20012e32:	873e                	mv	a4,a5
20012e34:	fe442783          	lw	a5,-28(s0)
20012e38:	97ba                	add	a5,a5,a4
20012e3a:	439c                	lw	a5,0(a5)
20012e3c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
20012e40:	a039                	j	20012e4e <__metal_driver_riscv_clint0_command_request+0x124>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
20012e42:	0001                	nop
20012e44:	a031                	j	20012e50 <__metal_driver_riscv_clint0_command_request+0x126>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
20012e46:	0001                	nop
20012e48:	a021                	j	20012e50 <__metal_driver_riscv_clint0_command_request+0x126>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
20012e4a:	0001                	nop
20012e4c:	a011                	j	20012e50 <__metal_driver_riscv_clint0_command_request+0x126>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
20012e4e:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:266
    }

    return rc;
20012e50:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:267
}
20012e54:	853e                	mv	a0,a5
20012e56:	50b2                	lw	ra,44(sp)
20012e58:	5422                	lw	s0,40(sp)
20012e5a:	6145                	addi	sp,sp,48
20012e5c:	8082                	ret

20012e5e <__metal_driver_riscv_clint0_clear_interrupt>:
__metal_driver_riscv_clint0_clear_interrupt():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:270

int __metal_driver_riscv_clint0_clear_interrupt(
    struct metal_interrupt *controller, int id) {
20012e5e:	7179                	addi	sp,sp,-48
20012e60:	d606                	sw	ra,44(sp)
20012e62:	d422                	sw	s0,40(sp)
20012e64:	1800                	addi	s0,sp,48
20012e66:	fca42e23          	sw	a0,-36(s0)
20012e6a:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:271
    int hartid = metal_cpu_get_current_hartid();
20012e6e:	19f040ef          	jal	ra,2001780c <metal_cpu_get_current_hartid>
20012e72:	87aa                	mv	a5,a0
20012e74:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:272
    return __metal_driver_riscv_clint0_command_request(
20012e78:	fec40793          	addi	a5,s0,-20
20012e7c:	863e                	mv	a2,a5
20012e7e:	4589                	li	a1,2
20012e80:	fdc42503          	lw	a0,-36(s0)
20012e84:	355d                	jal	20012d2a <__metal_driver_riscv_clint0_command_request>
20012e86:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:274
        controller, METAL_SOFTWARE_IPI_CLEAR, &hartid);
}
20012e88:	853e                	mv	a0,a5
20012e8a:	50b2                	lw	ra,44(sp)
20012e8c:	5422                	lw	s0,40(sp)
20012e8e:	6145                	addi	sp,sp,48
20012e90:	8082                	ret

20012e92 <__metal_driver_riscv_clint0_set_interrupt>:
__metal_driver_riscv_clint0_set_interrupt():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:277

int __metal_driver_riscv_clint0_set_interrupt(
    struct metal_interrupt *controller, int id) {
20012e92:	7179                	addi	sp,sp,-48
20012e94:	d606                	sw	ra,44(sp)
20012e96:	d422                	sw	s0,40(sp)
20012e98:	1800                	addi	s0,sp,48
20012e9a:	fca42e23          	sw	a0,-36(s0)
20012e9e:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:278
    int hartid = metal_cpu_get_current_hartid();
20012ea2:	16b040ef          	jal	ra,2001780c <metal_cpu_get_current_hartid>
20012ea6:	87aa                	mv	a5,a0
20012ea8:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:279
    return __metal_driver_riscv_clint0_command_request(
20012eac:	fec40793          	addi	a5,s0,-20
20012eb0:	863e                	mv	a2,a5
20012eb2:	458d                	li	a1,3
20012eb4:	fdc42503          	lw	a0,-36(s0)
20012eb8:	3d8d                	jal	20012d2a <__metal_driver_riscv_clint0_command_request>
20012eba:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:281
        controller, METAL_SOFTWARE_IPI_SET, &hartid);
}
20012ebc:	853e                	mv	a0,a5
20012ebe:	50b2                	lw	ra,44(sp)
20012ec0:	5422                	lw	s0,40(sp)
20012ec2:	6145                	addi	sp,sp,48
20012ec4:	8082                	ret

20012ec6 <__metal_driver_cpu_hartid>:
__metal_driver_cpu_hartid():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:292



/* --------------------- cpu ------------ */
static __inline__ int __metal_driver_cpu_hartid(struct metal_cpu *cpu)
{
20012ec6:	1101                	addi	sp,sp,-32
20012ec8:	ce22                	sw	s0,28(sp)
20012eca:	1000                	addi	s0,sp,32
20012ecc:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:293
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20012ed0:	fec42703          	lw	a4,-20(s0)
20012ed4:	81818793          	addi	a5,gp,-2024 # 80000ad8 <__metal_dt_cpu_0>
20012ed8:	00f71463          	bne	a4,a5,20012ee0 <__metal_driver_cpu_hartid+0x1a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:294
		return 0;
20012edc:	4781                	li	a5,0
20012ede:	a011                	j	20012ee2 <__metal_driver_cpu_hartid+0x1c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:297
	}
	else {
		return -1;
20012ee0:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:299
	}
}
20012ee2:	853e                	mv	a0,a5
20012ee4:	4472                	lw	s0,28(sp)
20012ee6:	6105                	addi	sp,sp,32
20012ee8:	8082                	ret

20012eea <__metal_driver_cpu_timebase>:
__metal_driver_cpu_timebase():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:302

static __inline__ int __metal_driver_cpu_timebase(struct metal_cpu *cpu)
{
20012eea:	1101                	addi	sp,sp,-32
20012eec:	ce22                	sw	s0,28(sp)
20012eee:	1000                	addi	s0,sp,32
20012ef0:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:303
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20012ef4:	fec42703          	lw	a4,-20(s0)
20012ef8:	81818793          	addi	a5,gp,-2024 # 80000ad8 <__metal_dt_cpu_0>
20012efc:	00f71763          	bne	a4,a5,20012f0a <__metal_driver_cpu_timebase+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:304
		return 16000000;
20012f00:	00f427b7          	lui	a5,0xf42
20012f04:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
20012f08:	a011                	j	20012f0c <__metal_driver_cpu_timebase+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:307
	}
	else {
		return 0;
20012f0a:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:309
	}
}
20012f0c:	853e                	mv	a0,a5
20012f0e:	4472                	lw	s0,28(sp)
20012f10:	6105                	addi	sp,sp,32
20012f12:	8082                	ret

20012f14 <__metal_driver_cpu_interrupt_controller>:
__metal_driver_cpu_interrupt_controller():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:312

static __inline__ struct metal_interrupt * __metal_driver_cpu_interrupt_controller(struct metal_cpu *cpu)
{
20012f14:	1101                	addi	sp,sp,-32
20012f16:	ce22                	sw	s0,28(sp)
20012f18:	1000                	addi	s0,sp,32
20012f1a:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:313
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20012f1e:	fec42703          	lw	a4,-20(s0)
20012f22:	81818793          	addi	a5,gp,-2024 # 80000ad8 <__metal_dt_cpu_0>
20012f26:	00f71763          	bne	a4,a5,20012f34 <__metal_driver_cpu_interrupt_controller+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:314
		return &__metal_dt_cpu_0_interrupt_controller.controller;
20012f2a:	800007b7          	lui	a5,0x80000
20012f2e:	09078793          	addi	a5,a5,144 # 80000090 <metal_segment_heap_target_end+0xffffe8d0>
20012f32:	a011                	j	20012f36 <__metal_driver_cpu_interrupt_controller+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:317
	}
	else {
		return NULL;
20012f34:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:319
	}
}
20012f36:	853e                	mv	a0,a5
20012f38:	4472                	lw	s0,28(sp)
20012f3a:	6105                	addi	sp,sp,32
20012f3c:	8082                	ret

20012f3e <__metal_driver_cpu_buserror>:
__metal_driver_cpu_buserror():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:332
		return 0;
	}
}

static __inline__ struct metal_buserror * __metal_driver_cpu_buserror(struct metal_cpu *cpu)
{
20012f3e:	1101                	addi	sp,sp,-32
20012f40:	ce22                	sw	s0,28(sp)
20012f42:	1000                	addi	s0,sp,32
20012f44:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:333
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20012f48:	fec42703          	lw	a4,-20(s0)
20012f4c:	81818793          	addi	a5,gp,-2024 # 80000ad8 <__metal_dt_cpu_0>
20012f50:	00f71463          	bne	a4,a5,20012f58 <__metal_driver_cpu_buserror+0x1a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:334
		return NULL;
20012f54:	4781                	li	a5,0
20012f56:	a011                	j	20012f5a <__metal_driver_cpu_buserror+0x1c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:337
	}
	else {
		return NULL;
20012f58:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:339
	}
}
20012f5a:	853e                	mv	a0,a5
20012f5c:	4472                	lw	s0,28(sp)
20012f5e:	6105                	addi	sp,sp,32
20012f60:	8082                	ret

20012f62 <__metal_driver_cpu_get>:
__metal_driver_cpu_get():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:25
extern void __metal_vector_table();
unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu);
int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time);

struct metal_cpu *__metal_driver_cpu_get(int hartid) {
20012f62:	1101                	addi	sp,sp,-32
20012f64:	ce22                	sw	s0,28(sp)
20012f66:	1000                	addi	s0,sp,32
20012f68:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:26
    if (hartid < __METAL_DT_MAX_HARTS) {
20012f6c:	fec42783          	lw	a5,-20(s0)
20012f70:	00f04c63          	bgtz	a5,20012f88 <__metal_driver_cpu_get+0x26>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:27
        return &(__metal_cpu_table[hartid]->cpu);
20012f74:	800017b7          	lui	a5,0x80001
20012f78:	fec42703          	lw	a4,-20(s0)
20012f7c:	070a                	slli	a4,a4,0x2
20012f7e:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20012f82:	97ba                	add	a5,a5,a4
20012f84:	439c                	lw	a5,0(a5)
20012f86:	a011                	j	20012f8a <__metal_driver_cpu_get+0x28>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:29
    }
    return (struct metal_cpu *)NULL;
20012f88:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:30
}
20012f8a:	853e                	mv	a0,a5
20012f8c:	4472                	lw	s0,28(sp)
20012f8e:	6105                	addi	sp,sp,32
20012f90:	8082                	ret

20012f92 <__metal_myhart_id>:
__metal_myhart_id():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:32

uintptr_t __metal_myhart_id(void) {
20012f92:	1101                	addi	sp,sp,-32
20012f94:	ce22                	sw	s0,28(sp)
20012f96:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:34
    uintptr_t myhart;
    __asm__ volatile("csrr %0, mhartid" : "=r"(myhart));
20012f98:	f14027f3          	csrr	a5,mhartid
20012f9c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:35
    return myhart;
20012fa0:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:36
}
20012fa4:	853e                	mv	a0,a5
20012fa6:	4472                	lw	s0,28(sp)
20012fa8:	6105                	addi	sp,sp,32
20012faa:	8082                	ret

20012fac <__metal_interrupt_global_enable>:
__metal_interrupt_global_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:45
    for (ptr = base; ptr < (base + size); ptr++) {
        *ptr = 0;
    }
}

void __metal_interrupt_global_enable(void) {
20012fac:	1101                	addi	sp,sp,-32
20012fae:	ce22                	sw	s0,28(sp)
20012fb0:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:47
    uintptr_t m;
    __asm__ volatile("csrrs %0, mstatus, %1"
20012fb2:	47a1                	li	a5,8
20012fb4:	3007a7f3          	csrrs	a5,mstatus,a5
20012fb8:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:50
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
20012fbc:	0001                	nop
20012fbe:	4472                	lw	s0,28(sp)
20012fc0:	6105                	addi	sp,sp,32
20012fc2:	8082                	ret

20012fc4 <__metal_interrupt_global_disable>:
__metal_interrupt_global_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:52

void __metal_interrupt_global_disable(void) {
20012fc4:	1101                	addi	sp,sp,-32
20012fc6:	ce22                	sw	s0,28(sp)
20012fc8:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:54
    uintptr_t m;
    __asm__ volatile("csrrc %0, mstatus, %1"
20012fca:	47a1                	li	a5,8
20012fcc:	3007b7f3          	csrrc	a5,mstatus,a5
20012fd0:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:57
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
20012fd4:	0001                	nop
20012fd6:	4472                	lw	s0,28(sp)
20012fd8:	6105                	addi	sp,sp,32
20012fda:	8082                	ret

20012fdc <__metal_interrupt_software_enable>:
__metal_interrupt_software_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:59

void __metal_interrupt_software_enable(void) {
20012fdc:	1101                	addi	sp,sp,-32
20012fde:	ce22                	sw	s0,28(sp)
20012fe0:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:61
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20012fe2:	47a1                	li	a5,8
20012fe4:	3047a7f3          	csrrs	a5,mie,a5
20012fe8:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:64
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
20012fec:	0001                	nop
20012fee:	4472                	lw	s0,28(sp)
20012ff0:	6105                	addi	sp,sp,32
20012ff2:	8082                	ret

20012ff4 <__metal_interrupt_software_disable>:
__metal_interrupt_software_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:66

void __metal_interrupt_software_disable(void) {
20012ff4:	1101                	addi	sp,sp,-32
20012ff6:	ce22                	sw	s0,28(sp)
20012ff8:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:68
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
20012ffa:	47a1                	li	a5,8
20012ffc:	3047b7f3          	csrrc	a5,mie,a5
20013000:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:71
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
20013004:	0001                	nop
20013006:	4472                	lw	s0,28(sp)
20013008:	6105                	addi	sp,sp,32
2001300a:	8082                	ret

2001300c <__metal_interrupt_timer_enable>:
__metal_interrupt_timer_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:73

void __metal_interrupt_timer_enable(void) {
2001300c:	1101                	addi	sp,sp,-32
2001300e:	ce22                	sw	s0,28(sp)
20013010:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:75
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20013012:	08000793          	li	a5,128
20013016:	3047a7f3          	csrrs	a5,mie,a5
2001301a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:78
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
2001301e:	0001                	nop
20013020:	4472                	lw	s0,28(sp)
20013022:	6105                	addi	sp,sp,32
20013024:	8082                	ret

20013026 <__metal_interrupt_timer_disable>:
__metal_interrupt_timer_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:80

void __metal_interrupt_timer_disable(void) {
20013026:	1101                	addi	sp,sp,-32
20013028:	ce22                	sw	s0,28(sp)
2001302a:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:82
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
2001302c:	08000793          	li	a5,128
20013030:	3047b7f3          	csrrc	a5,mie,a5
20013034:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:85
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
20013038:	0001                	nop
2001303a:	4472                	lw	s0,28(sp)
2001303c:	6105                	addi	sp,sp,32
2001303e:	8082                	ret

20013040 <__metal_interrupt_external_enable>:
__metal_interrupt_external_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:87

void __metal_interrupt_external_enable(void) {
20013040:	1101                	addi	sp,sp,-32
20013042:	ce22                	sw	s0,28(sp)
20013044:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:89
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20013046:	6785                	lui	a5,0x1
20013048:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
2001304c:	3047a7f3          	csrrs	a5,mie,a5
20013050:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:92
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
20013054:	0001                	nop
20013056:	4472                	lw	s0,28(sp)
20013058:	6105                	addi	sp,sp,32
2001305a:	8082                	ret

2001305c <__metal_interrupt_external_disable>:
__metal_interrupt_external_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:94

void __metal_interrupt_external_disable(void) {
2001305c:	1101                	addi	sp,sp,-32
2001305e:	ce22                	sw	s0,28(sp)
20013060:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:96
    unsigned long m;
    __asm__ volatile("csrrc %0, mie, %1"
20013062:	6785                	lui	a5,0x1
20013064:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20013068:	3047b7f3          	csrrc	a5,mie,a5
2001306c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:99
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
20013070:	0001                	nop
20013072:	4472                	lw	s0,28(sp)
20013074:	6105                	addi	sp,sp,32
20013076:	8082                	ret

20013078 <__metal_interrupt_local_enable>:
__metal_interrupt_local_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:101

void __metal_interrupt_local_enable(int id) {
20013078:	7179                	addi	sp,sp,-48
2001307a:	d622                	sw	s0,44(sp)
2001307c:	1800                	addi	s0,sp,48
2001307e:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:102
    uintptr_t b = 1 << id;
20013082:	fdc42783          	lw	a5,-36(s0)
20013086:	4705                	li	a4,1
20013088:	00f717b3          	sll	a5,a4,a5
2001308c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:104
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1" : "=r"(m) : "r"(b));
20013090:	fec42783          	lw	a5,-20(s0)
20013094:	3047a7f3          	csrrs	a5,mie,a5
20013098:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:105
}
2001309c:	0001                	nop
2001309e:	5432                	lw	s0,44(sp)
200130a0:	6145                	addi	sp,sp,48
200130a2:	8082                	ret

200130a4 <__metal_interrupt_local_disable>:
__metal_interrupt_local_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:107

void __metal_interrupt_local_disable(int id) {
200130a4:	7179                	addi	sp,sp,-48
200130a6:	d622                	sw	s0,44(sp)
200130a8:	1800                	addi	s0,sp,48
200130aa:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:108
    uintptr_t b = 1 << id;
200130ae:	fdc42783          	lw	a5,-36(s0)
200130b2:	4705                	li	a4,1
200130b4:	00f717b3          	sll	a5,a4,a5
200130b8:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:110
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1" : "=r"(m) : "r"(b));
200130bc:	fec42783          	lw	a5,-20(s0)
200130c0:	3047b7f3          	csrrc	a5,mie,a5
200130c4:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:111
}
200130c8:	0001                	nop
200130ca:	5432                	lw	s0,44(sp)
200130cc:	6145                	addi	sp,sp,48
200130ce:	8082                	ret

200130d0 <__metal_default_exception_handler>:
__metal_default_exception_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:113

void __metal_default_exception_handler(struct metal_cpu *cpu, int ecode) {
200130d0:	1101                	addi	sp,sp,-32
200130d2:	ce06                	sw	ra,28(sp)
200130d4:	cc22                	sw	s0,24(sp)
200130d6:	1000                	addi	s0,sp,32
200130d8:	fea42623          	sw	a0,-20(s0)
200130dc:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:114
    metal_shutdown(100);
200130e0:	06400513          	li	a0,100
200130e4:	061040ef          	jal	ra,20017944 <metal_shutdown>

200130e8 <__metal_default_interrupt_handler>:
__metal_default_interrupt_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:117
}

void __metal_default_interrupt_handler(int id, void *priv) {
200130e8:	1101                	addi	sp,sp,-32
200130ea:	ce06                	sw	ra,28(sp)
200130ec:	cc22                	sw	s0,24(sp)
200130ee:	1000                	addi	s0,sp,32
200130f0:	fea42623          	sw	a0,-20(s0)
200130f4:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:118
    metal_shutdown(200);
200130f8:	0c800513          	li	a0,200
200130fc:	049040ef          	jal	ra,20017944 <metal_shutdown>

20013100 <metal_interrupt_vector_handler>:
metal_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:122
}

/* The metal_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_interrupt_vector_handler(void) {
20013100:	715d                	addi	sp,sp,-80
20013102:	c686                	sw	ra,76(sp)
20013104:	c496                	sw	t0,72(sp)
20013106:	c29a                	sw	t1,68(sp)
20013108:	c09e                	sw	t2,64(sp)
2001310a:	de22                	sw	s0,60(sp)
2001310c:	dc2a                	sw	a0,56(sp)
2001310e:	da2e                	sw	a1,52(sp)
20013110:	d832                	sw	a2,48(sp)
20013112:	d636                	sw	a3,44(sp)
20013114:	d43a                	sw	a4,40(sp)
20013116:	d23e                	sw	a5,36(sp)
20013118:	d042                	sw	a6,32(sp)
2001311a:	ce46                	sw	a7,28(sp)
2001311c:	cc72                	sw	t3,24(sp)
2001311e:	ca76                	sw	t4,20(sp)
20013120:	c87a                	sw	t5,16(sp)
20013122:	c67e                	sw	t6,12(sp)
20013124:	0880                	addi	s0,sp,80
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:123
    metal_shutdown(300);
20013126:	12c00513          	li	a0,300
2001312a:	01b040ef          	jal	ra,20017944 <metal_shutdown>

2001312e <metal_software_interrupt_vector_handler>:
metal_software_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:128
}

/* The metal_software_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_software_interrupt_vector_handler(void) {
2001312e:	711d                	addi	sp,sp,-96
20013130:	ce86                	sw	ra,92(sp)
20013132:	cc96                	sw	t0,88(sp)
20013134:	ca9a                	sw	t1,84(sp)
20013136:	c89e                	sw	t2,80(sp)
20013138:	c6a2                	sw	s0,76(sp)
2001313a:	c4aa                	sw	a0,72(sp)
2001313c:	c2ae                	sw	a1,68(sp)
2001313e:	c0b2                	sw	a2,64(sp)
20013140:	de36                	sw	a3,60(sp)
20013142:	dc3a                	sw	a4,56(sp)
20013144:	da3e                	sw	a5,52(sp)
20013146:	d842                	sw	a6,48(sp)
20013148:	d646                	sw	a7,44(sp)
2001314a:	d472                	sw	t3,40(sp)
2001314c:	d276                	sw	t4,36(sp)
2001314e:	d07a                	sw	t5,32(sp)
20013150:	ce7e                	sw	t6,28(sp)
20013152:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:129
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_SW);
20013154:	3d3d                	jal	20012f92 <__metal_myhart_id>
20013156:	872a                	mv	a4,a0
20013158:	800017b7          	lui	a5,0x80001
2001315c:	070a                	slli	a4,a4,0x2
2001315e:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20013162:	97ba                	add	a5,a5,a4
20013164:	439c                	lw	a5,0(a5)
20013166:	faf42623          	sw	a5,-84(s0)
2001316a:	fac42783          	lw	a5,-84(s0)
2001316e:	c785                	beqz	a5,20013196 <metal_software_interrupt_vector_handler+0x68>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:129 (discriminator 1)
20013170:	fac42503          	lw	a0,-84(s0)
20013174:	3345                	jal	20012f14 <__metal_driver_cpu_interrupt_controller>
20013176:	faa42423          	sw	a0,-88(s0)
2001317a:	fa842783          	lw	a5,-88(s0)
2001317e:	0e07a783          	lw	a5,224(a5)
20013182:	faf42223          	sw	a5,-92(s0)
20013186:	fa842783          	lw	a5,-88(s0)
2001318a:	0d87a783          	lw	a5,216(a5)
2001318e:	fa442583          	lw	a1,-92(s0)
20013192:	450d                	li	a0,3
20013194:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:130
}
20013196:	0001                	nop
20013198:	40f6                	lw	ra,92(sp)
2001319a:	42e6                	lw	t0,88(sp)
2001319c:	4356                	lw	t1,84(sp)
2001319e:	43c6                	lw	t2,80(sp)
200131a0:	4436                	lw	s0,76(sp)
200131a2:	4526                	lw	a0,72(sp)
200131a4:	4596                	lw	a1,68(sp)
200131a6:	4606                	lw	a2,64(sp)
200131a8:	56f2                	lw	a3,60(sp)
200131aa:	5762                	lw	a4,56(sp)
200131ac:	57d2                	lw	a5,52(sp)
200131ae:	5842                	lw	a6,48(sp)
200131b0:	58b2                	lw	a7,44(sp)
200131b2:	5e22                	lw	t3,40(sp)
200131b4:	5e92                	lw	t4,36(sp)
200131b6:	5f02                	lw	t5,32(sp)
200131b8:	4ff2                	lw	t6,28(sp)
200131ba:	6125                	addi	sp,sp,96
200131bc:	30200073          	mret

200131c0 <__metal_default_sw_handler>:
__metal_default_sw_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:132

void __metal_default_sw_handler(int id, void *priv) {
200131c0:	7179                	addi	sp,sp,-48
200131c2:	d606                	sw	ra,44(sp)
200131c4:	d422                	sw	s0,40(sp)
200131c6:	1800                	addi	s0,sp,48
200131c8:	fca42e23          	sw	a0,-36(s0)
200131cc:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:135
    uintptr_t mcause;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
200131d0:	33c9                	jal	20012f92 <__metal_myhart_id>
200131d2:	872a                	mv	a4,a0
200131d4:	800017b7          	lui	a5,0x80001
200131d8:	070a                	slli	a4,a4,0x2
200131da:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
200131de:	97ba                	add	a5,a5,a4
200131e0:	439c                	lw	a5,0(a5)
200131e2:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:137

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
200131e6:	342027f3          	csrr	a5,mcause
200131ea:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:138
    if (cpu) {
200131ee:	fec42783          	lw	a5,-20(s0)
200131f2:	c795                	beqz	a5,2001321e <__metal_default_sw_handler+0x5e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:140
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
200131f4:	fec42503          	lw	a0,-20(s0)
200131f8:	3b31                	jal	20012f14 <__metal_driver_cpu_interrupt_controller>
200131fa:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:141
        intc->metal_exception_table[mcause & METAL_MCAUSE_CAUSE](
200131fe:	fe842783          	lw	a5,-24(s0)
20013202:	3ff7f793          	andi	a5,a5,1023
20013206:	fe442703          	lw	a4,-28(s0)
2001320a:	0e878793          	addi	a5,a5,232
2001320e:	078a                	slli	a5,a5,0x2
20013210:	97ba                	add	a5,a5,a4
20013212:	439c                	lw	a5,0(a5)
20013214:	fdc42583          	lw	a1,-36(s0)
20013218:	fec42503          	lw	a0,-20(s0)
2001321c:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:144
            (struct metal_cpu *)cpu, id);
    }
}
2001321e:	0001                	nop
20013220:	50b2                	lw	ra,44(sp)
20013222:	5422                	lw	s0,40(sp)
20013224:	6145                	addi	sp,sp,48
20013226:	8082                	ret

20013228 <metal_timer_interrupt_vector_handler>:
metal_timer_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:148

/* The metal_timer_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_timer_interrupt_vector_handler(void) {
20013228:	711d                	addi	sp,sp,-96
2001322a:	ce86                	sw	ra,92(sp)
2001322c:	cc96                	sw	t0,88(sp)
2001322e:	ca9a                	sw	t1,84(sp)
20013230:	c89e                	sw	t2,80(sp)
20013232:	c6a2                	sw	s0,76(sp)
20013234:	c4aa                	sw	a0,72(sp)
20013236:	c2ae                	sw	a1,68(sp)
20013238:	c0b2                	sw	a2,64(sp)
2001323a:	de36                	sw	a3,60(sp)
2001323c:	dc3a                	sw	a4,56(sp)
2001323e:	da3e                	sw	a5,52(sp)
20013240:	d842                	sw	a6,48(sp)
20013242:	d646                	sw	a7,44(sp)
20013244:	d472                	sw	t3,40(sp)
20013246:	d276                	sw	t4,36(sp)
20013248:	d07a                	sw	t5,32(sp)
2001324a:	ce7e                	sw	t6,28(sp)
2001324c:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:149
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_TMR);
2001324e:	3391                	jal	20012f92 <__metal_myhart_id>
20013250:	872a                	mv	a4,a0
20013252:	800017b7          	lui	a5,0x80001
20013256:	070a                	slli	a4,a4,0x2
20013258:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
2001325c:	97ba                	add	a5,a5,a4
2001325e:	439c                	lw	a5,0(a5)
20013260:	faf42623          	sw	a5,-84(s0)
20013264:	fac42783          	lw	a5,-84(s0)
20013268:	c785                	beqz	a5,20013290 <metal_timer_interrupt_vector_handler+0x68>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:149 (discriminator 1)
2001326a:	fac42503          	lw	a0,-84(s0)
2001326e:	315d                	jal	20012f14 <__metal_driver_cpu_interrupt_controller>
20013270:	faa42423          	sw	a0,-88(s0)
20013274:	fa842783          	lw	a5,-88(s0)
20013278:	1407a783          	lw	a5,320(a5)
2001327c:	faf42223          	sw	a5,-92(s0)
20013280:	fa842783          	lw	a5,-88(s0)
20013284:	1387a783          	lw	a5,312(a5)
20013288:	fa442583          	lw	a1,-92(s0)
2001328c:	451d                	li	a0,7
2001328e:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:150
}
20013290:	0001                	nop
20013292:	40f6                	lw	ra,92(sp)
20013294:	42e6                	lw	t0,88(sp)
20013296:	4356                	lw	t1,84(sp)
20013298:	43c6                	lw	t2,80(sp)
2001329a:	4436                	lw	s0,76(sp)
2001329c:	4526                	lw	a0,72(sp)
2001329e:	4596                	lw	a1,68(sp)
200132a0:	4606                	lw	a2,64(sp)
200132a2:	56f2                	lw	a3,60(sp)
200132a4:	5762                	lw	a4,56(sp)
200132a6:	57d2                	lw	a5,52(sp)
200132a8:	5842                	lw	a6,48(sp)
200132aa:	58b2                	lw	a7,44(sp)
200132ac:	5e22                	lw	t3,40(sp)
200132ae:	5e92                	lw	t4,36(sp)
200132b0:	5f02                	lw	t5,32(sp)
200132b2:	4ff2                	lw	t6,28(sp)
200132b4:	6125                	addi	sp,sp,96
200132b6:	30200073          	mret

200132ba <__metal_default_beu_handler>:
__metal_default_beu_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:152

void __metal_default_beu_handler(int id, void *priv) {}
200132ba:	1101                	addi	sp,sp,-32
200132bc:	ce22                	sw	s0,28(sp)
200132be:	1000                	addi	s0,sp,32
200132c0:	fea42623          	sw	a0,-20(s0)
200132c4:	feb42423          	sw	a1,-24(s0)
200132c8:	0001                	nop
200132ca:	4472                	lw	s0,28(sp)
200132cc:	6105                	addi	sp,sp,32
200132ce:	8082                	ret

200132d0 <__metal_default_timer_handler>:
__metal_default_timer_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:154

void __metal_default_timer_handler(int id, void *priv) {
200132d0:	7179                	addi	sp,sp,-48
200132d2:	d606                	sw	ra,44(sp)
200132d4:	d422                	sw	s0,40(sp)
200132d6:	1800                	addi	s0,sp,48
200132d8:	fca42e23          	sw	a0,-36(s0)
200132dc:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:155
    struct metal_cpu *cpu = __metal_driver_cpu_get(__metal_myhart_id());
200132e0:	394d                	jal	20012f92 <__metal_myhart_id>
200132e2:	87aa                	mv	a5,a0
200132e4:	853e                	mv	a0,a5
200132e6:	39b5                	jal	20012f62 <__metal_driver_cpu_get>
200132e8:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:156
    unsigned long long time = __metal_driver_cpu_mtime_get(cpu);
200132ec:	fec42503          	lw	a0,-20(s0)
200132f0:	292010ef          	jal	ra,20014582 <__metal_driver_cpu_mtime_get>
200132f4:	fea42023          	sw	a0,-32(s0)
200132f8:	feb42223          	sw	a1,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:159

    /* Set a 10 cycle timer */
    __metal_driver_cpu_mtimecmp_set(cpu, time + 10);
200132fc:	fe042783          	lw	a5,-32(s0)
20013300:	fe442803          	lw	a6,-28(s0)
20013304:	45a9                	li	a1,10
20013306:	4601                	li	a2,0
20013308:	00b786b3          	add	a3,a5,a1
2001330c:	8536                	mv	a0,a3
2001330e:	00f53533          	sltu	a0,a0,a5
20013312:	00c80733          	add	a4,a6,a2
20013316:	00e507b3          	add	a5,a0,a4
2001331a:	873e                	mv	a4,a5
2001331c:	87b6                	mv	a5,a3
2001331e:	883a                	mv	a6,a4
20013320:	85be                	mv	a1,a5
20013322:	8642                	mv	a2,a6
20013324:	fec42503          	lw	a0,-20(s0)
20013328:	2c0010ef          	jal	ra,200145e8 <__metal_driver_cpu_mtimecmp_set>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:160
}
2001332c:	0001                	nop
2001332e:	50b2                	lw	ra,44(sp)
20013330:	5422                	lw	s0,40(sp)
20013332:	6145                	addi	sp,sp,48
20013334:	8082                	ret
	...

20013380 <__metal_exception_handler>:
__metal_exception_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:169
metal_external_interrupt_vector_handler(void) {
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_EXT);
}

void __metal_exception_handler(void) __attribute__((interrupt, aligned(128)));
void __metal_exception_handler(void) {
20013380:	7119                	addi	sp,sp,-128
20013382:	de86                	sw	ra,124(sp)
20013384:	dc96                	sw	t0,120(sp)
20013386:	da9a                	sw	t1,116(sp)
20013388:	d89e                	sw	t2,112(sp)
2001338a:	d6a2                	sw	s0,108(sp)
2001338c:	d4aa                	sw	a0,104(sp)
2001338e:	d2ae                	sw	a1,100(sp)
20013390:	d0b2                	sw	a2,96(sp)
20013392:	ceb6                	sw	a3,92(sp)
20013394:	ccba                	sw	a4,88(sp)
20013396:	cabe                	sw	a5,84(sp)
20013398:	c8c2                	sw	a6,80(sp)
2001339a:	c6c6                	sw	a7,76(sp)
2001339c:	c4f2                	sw	t3,72(sp)
2001339e:	c2f6                	sw	t4,68(sp)
200133a0:	c0fa                	sw	t5,64(sp)
200133a2:	de7e                	sw	t6,60(sp)
200133a4:	0100                	addi	s0,sp,128
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:174
    int id;
    void *priv;
    uintptr_t mcause, mepc, mtval, mtvec;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
200133a6:	36f5                	jal	20012f92 <__metal_myhart_id>
200133a8:	872a                	mv	a4,a0
200133aa:	800017b7          	lui	a5,0x80001
200133ae:	070a                	slli	a4,a4,0x2
200133b0:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
200133b4:	97ba                	add	a5,a5,a4
200133b6:	439c                	lw	a5,0(a5)
200133b8:	faf42623          	sw	a5,-84(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:176

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
200133bc:	342027f3          	csrr	a5,mcause
200133c0:	faf42423          	sw	a5,-88(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:177
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
200133c4:	341027f3          	csrr	a5,mepc
200133c8:	faf42223          	sw	a5,-92(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:178
    __asm__ volatile("csrr %0, mtval" : "=r"(mtval));
200133cc:	343027f3          	csrr	a5,mtval
200133d0:	faf42023          	sw	a5,-96(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:179
    __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
200133d4:	305027f3          	csrr	a5,mtvec
200133d8:	f8f42e23          	sw	a5,-100(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:181

    if (cpu) {
200133dc:	fac42783          	lw	a5,-84(s0)
200133e0:	cbfd                	beqz	a5,200134d6 <__metal_exception_handler+0x156>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:183
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
200133e2:	fac42503          	lw	a0,-84(s0)
200133e6:	b2fff0ef          	jal	ra,20012f14 <__metal_driver_cpu_interrupt_controller>
200133ea:	f8a42c23          	sw	a0,-104(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:184
        id = mcause & METAL_MCAUSE_CAUSE;
200133ee:	fa842783          	lw	a5,-88(s0)
200133f2:	3ff7f793          	andi	a5,a5,1023
200133f6:	f8f42a23          	sw	a5,-108(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:185
        if (mcause & METAL_MCAUSE_INTR) {
200133fa:	fa842783          	lw	a5,-88(s0)
200133fe:	0a07de63          	bgez	a5,200134ba <__metal_exception_handler+0x13a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:186
            if (id == METAL_INTERRUPT_ID_BEU) {
20013402:	f9442703          	lw	a4,-108(s0)
20013406:	08000793          	li	a5,128
2001340a:	02f71263          	bne	a4,a5,2001342e <__metal_exception_handler+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:187
                priv = intc->metal_int_beu.exint_data;
2001340e:	f9842783          	lw	a5,-104(s0)
20013412:	3987a783          	lw	a5,920(a5)
20013416:	f8f42823          	sw	a5,-112(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:188
                intc->metal_int_beu.handler(id, priv);
2001341a:	f9842783          	lw	a5,-104(s0)
2001341e:	3907a783          	lw	a5,912(a5)
20013422:	f9042583          	lw	a1,-112(s0)
20013426:	f9442503          	lw	a0,-108(s0)
2001342a:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:189
                return;
2001342c:	a06d                	j	200134d6 <__metal_exception_handler+0x156>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:191
            }
            if ((id < METAL_INTERRUPT_ID_CSW) ||
2001342e:	f9442703          	lw	a4,-108(s0)
20013432:	47ad                	li	a5,11
20013434:	00e7d763          	bge	a5,a4,20013442 <__metal_exception_handler+0xc2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:192 (discriminator 1)
                ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_DIRECT)) {
20013438:	f9c42783          	lw	a5,-100(s0)
2001343c:	03f7f793          	andi	a5,a5,63
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:191 (discriminator 1)
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20013440:	ef9d                	bnez	a5,2001347e <__metal_exception_handler+0xfe>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:193
                priv = intc->metal_int_table[id].exint_data;
20013442:	f9842683          	lw	a3,-104(s0)
20013446:	f9442703          	lw	a4,-108(s0)
2001344a:	87ba                	mv	a5,a4
2001344c:	0786                	slli	a5,a5,0x1
2001344e:	97ba                	add	a5,a5,a4
20013450:	078e                	slli	a5,a5,0x3
20013452:	97b6                	add	a5,a5,a3
20013454:	0987a783          	lw	a5,152(a5)
20013458:	f8f42823          	sw	a5,-112(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:194
                intc->metal_int_table[id].handler(id, priv);
2001345c:	f9842683          	lw	a3,-104(s0)
20013460:	f9442703          	lw	a4,-108(s0)
20013464:	87ba                	mv	a5,a4
20013466:	0786                	slli	a5,a5,0x1
20013468:	97ba                	add	a5,a5,a4
2001346a:	078e                	slli	a5,a5,0x3
2001346c:	97b6                	add	a5,a5,a3
2001346e:	0907a783          	lw	a5,144(a5)
20013472:	f9042583          	lw	a1,-112(s0)
20013476:	f9442503          	lw	a0,-108(s0)
2001347a:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:195
                return;
2001347c:	a8a9                	j	200134d6 <__metal_exception_handler+0x156>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:197
            }
            if ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_CLIC) {
2001347e:	f9c42783          	lw	a5,-100(s0)
20013482:	03f7f713          	andi	a4,a5,63
20013486:	4789                	li	a5,2
20013488:	04f71763          	bne	a4,a5,200134d6 <__metal_exception_handler+0x156>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:201
                uintptr_t mtvt;
                metal_interrupt_handler_t mtvt_handler;

                __asm__ volatile("csrr %0, 0x307" : "=r"(mtvt));
2001348c:	307027f3          	csrr	a5,mtvt
20013490:	f8f42623          	sw	a5,-116(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:202
                priv = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20013494:	f9842783          	lw	a5,-104(s0)
20013498:	0dc7a783          	lw	a5,220(a5)
2001349c:	f8f42823          	sw	a5,-112(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:203
                mtvt_handler = (metal_interrupt_handler_t) * (uintptr_t *)mtvt;
200134a0:	f8c42783          	lw	a5,-116(s0)
200134a4:	439c                	lw	a5,0(a5)
200134a6:	f8f42423          	sw	a5,-120(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:204
                mtvt_handler(id, priv);
200134aa:	f8842783          	lw	a5,-120(s0)
200134ae:	f9042583          	lw	a1,-112(s0)
200134b2:	f9442503          	lw	a0,-108(s0)
200134b6:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:205
                return;
200134b8:	a839                	j	200134d6 <__metal_exception_handler+0x156>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:208
            }
        } else {
            intc->metal_exception_table[id]((struct metal_cpu *)cpu, id);
200134ba:	f9842703          	lw	a4,-104(s0)
200134be:	f9442783          	lw	a5,-108(s0)
200134c2:	0e878793          	addi	a5,a5,232
200134c6:	078a                	slli	a5,a5,0x2
200134c8:	97ba                	add	a5,a5,a4
200134ca:	439c                	lw	a5,0(a5)
200134cc:	f9442583          	lw	a1,-108(s0)
200134d0:	fac42503          	lw	a0,-84(s0)
200134d4:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:211
        }
    }
}
200134d6:	50f6                	lw	ra,124(sp)
200134d8:	52e6                	lw	t0,120(sp)
200134da:	5356                	lw	t1,116(sp)
200134dc:	53c6                	lw	t2,112(sp)
200134de:	5436                	lw	s0,108(sp)
200134e0:	5526                	lw	a0,104(sp)
200134e2:	5596                	lw	a1,100(sp)
200134e4:	5606                	lw	a2,96(sp)
200134e6:	46f6                	lw	a3,92(sp)
200134e8:	4766                	lw	a4,88(sp)
200134ea:	47d6                	lw	a5,84(sp)
200134ec:	4846                	lw	a6,80(sp)
200134ee:	48b6                	lw	a7,76(sp)
200134f0:	4e26                	lw	t3,72(sp)
200134f2:	4e96                	lw	t4,68(sp)
200134f4:	4f06                	lw	t5,64(sp)
200134f6:	5ff2                	lw	t6,60(sp)
200134f8:	6109                	addi	sp,sp,128
200134fa:	30200073          	mret
	...

20013578 <metal_lc0_interrupt_vector_handler>:
metal_lc0_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:214

/* The metal_lc0_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc0_interrupt_vector_handler(void) {
20013578:	711d                	addi	sp,sp,-96
2001357a:	ce86                	sw	ra,92(sp)
2001357c:	cc96                	sw	t0,88(sp)
2001357e:	ca9a                	sw	t1,84(sp)
20013580:	c89e                	sw	t2,80(sp)
20013582:	c6a2                	sw	s0,76(sp)
20013584:	c4aa                	sw	a0,72(sp)
20013586:	c2ae                	sw	a1,68(sp)
20013588:	c0b2                	sw	a2,64(sp)
2001358a:	de36                	sw	a3,60(sp)
2001358c:	dc3a                	sw	a4,56(sp)
2001358e:	da3e                	sw	a5,52(sp)
20013590:	d842                	sw	a6,48(sp)
20013592:	d646                	sw	a7,44(sp)
20013594:	d472                	sw	t3,40(sp)
20013596:	d276                	sw	t4,36(sp)
20013598:	d07a                	sw	t5,32(sp)
2001359a:	ce7e                	sw	t6,28(sp)
2001359c:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:215
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC0);
2001359e:	9f5ff0ef          	jal	ra,20012f92 <__metal_myhart_id>
200135a2:	872a                	mv	a4,a0
200135a4:	800017b7          	lui	a5,0x80001
200135a8:	070a                	slli	a4,a4,0x2
200135aa:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
200135ae:	97ba                	add	a5,a5,a4
200135b0:	439c                	lw	a5,0(a5)
200135b2:	faf42623          	sw	a5,-84(s0)
200135b6:	fac42783          	lw	a5,-84(s0)
200135ba:	c78d                	beqz	a5,200135e4 <metal_lc0_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:215 (discriminator 1)
200135bc:	fac42503          	lw	a0,-84(s0)
200135c0:	955ff0ef          	jal	ra,20012f14 <__metal_driver_cpu_interrupt_controller>
200135c4:	faa42423          	sw	a0,-88(s0)
200135c8:	fa842783          	lw	a5,-88(s0)
200135cc:	2187a783          	lw	a5,536(a5)
200135d0:	faf42223          	sw	a5,-92(s0)
200135d4:	fa842783          	lw	a5,-88(s0)
200135d8:	2107a783          	lw	a5,528(a5)
200135dc:	fa442583          	lw	a1,-92(s0)
200135e0:	4541                	li	a0,16
200135e2:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:216
}
200135e4:	0001                	nop
200135e6:	40f6                	lw	ra,92(sp)
200135e8:	42e6                	lw	t0,88(sp)
200135ea:	4356                	lw	t1,84(sp)
200135ec:	43c6                	lw	t2,80(sp)
200135ee:	4436                	lw	s0,76(sp)
200135f0:	4526                	lw	a0,72(sp)
200135f2:	4596                	lw	a1,68(sp)
200135f4:	4606                	lw	a2,64(sp)
200135f6:	56f2                	lw	a3,60(sp)
200135f8:	5762                	lw	a4,56(sp)
200135fa:	57d2                	lw	a5,52(sp)
200135fc:	5842                	lw	a6,48(sp)
200135fe:	58b2                	lw	a7,44(sp)
20013600:	5e22                	lw	t3,40(sp)
20013602:	5e92                	lw	t4,36(sp)
20013604:	5f02                	lw	t5,32(sp)
20013606:	4ff2                	lw	t6,28(sp)
20013608:	6125                	addi	sp,sp,96
2001360a:	30200073          	mret

2001360e <metal_lc1_interrupt_vector_handler>:
metal_lc1_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:219

/* The metal_lc1_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc1_interrupt_vector_handler(void) {
2001360e:	711d                	addi	sp,sp,-96
20013610:	ce86                	sw	ra,92(sp)
20013612:	cc96                	sw	t0,88(sp)
20013614:	ca9a                	sw	t1,84(sp)
20013616:	c89e                	sw	t2,80(sp)
20013618:	c6a2                	sw	s0,76(sp)
2001361a:	c4aa                	sw	a0,72(sp)
2001361c:	c2ae                	sw	a1,68(sp)
2001361e:	c0b2                	sw	a2,64(sp)
20013620:	de36                	sw	a3,60(sp)
20013622:	dc3a                	sw	a4,56(sp)
20013624:	da3e                	sw	a5,52(sp)
20013626:	d842                	sw	a6,48(sp)
20013628:	d646                	sw	a7,44(sp)
2001362a:	d472                	sw	t3,40(sp)
2001362c:	d276                	sw	t4,36(sp)
2001362e:	d07a                	sw	t5,32(sp)
20013630:	ce7e                	sw	t6,28(sp)
20013632:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:220
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC1);
20013634:	95fff0ef          	jal	ra,20012f92 <__metal_myhart_id>
20013638:	872a                	mv	a4,a0
2001363a:	800017b7          	lui	a5,0x80001
2001363e:	070a                	slli	a4,a4,0x2
20013640:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20013644:	97ba                	add	a5,a5,a4
20013646:	439c                	lw	a5,0(a5)
20013648:	faf42623          	sw	a5,-84(s0)
2001364c:	fac42783          	lw	a5,-84(s0)
20013650:	c78d                	beqz	a5,2001367a <metal_lc1_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:220 (discriminator 1)
20013652:	fac42503          	lw	a0,-84(s0)
20013656:	8bfff0ef          	jal	ra,20012f14 <__metal_driver_cpu_interrupt_controller>
2001365a:	faa42423          	sw	a0,-88(s0)
2001365e:	fa842783          	lw	a5,-88(s0)
20013662:	2307a783          	lw	a5,560(a5)
20013666:	faf42223          	sw	a5,-92(s0)
2001366a:	fa842783          	lw	a5,-88(s0)
2001366e:	2287a783          	lw	a5,552(a5)
20013672:	fa442583          	lw	a1,-92(s0)
20013676:	4545                	li	a0,17
20013678:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:221
}
2001367a:	0001                	nop
2001367c:	40f6                	lw	ra,92(sp)
2001367e:	42e6                	lw	t0,88(sp)
20013680:	4356                	lw	t1,84(sp)
20013682:	43c6                	lw	t2,80(sp)
20013684:	4436                	lw	s0,76(sp)
20013686:	4526                	lw	a0,72(sp)
20013688:	4596                	lw	a1,68(sp)
2001368a:	4606                	lw	a2,64(sp)
2001368c:	56f2                	lw	a3,60(sp)
2001368e:	5762                	lw	a4,56(sp)
20013690:	57d2                	lw	a5,52(sp)
20013692:	5842                	lw	a6,48(sp)
20013694:	58b2                	lw	a7,44(sp)
20013696:	5e22                	lw	t3,40(sp)
20013698:	5e92                	lw	t4,36(sp)
2001369a:	5f02                	lw	t5,32(sp)
2001369c:	4ff2                	lw	t6,28(sp)
2001369e:	6125                	addi	sp,sp,96
200136a0:	30200073          	mret

200136a4 <metal_lc2_interrupt_vector_handler>:
metal_lc2_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:224

/* The metal_lc2_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc2_interrupt_vector_handler(void) {
200136a4:	711d                	addi	sp,sp,-96
200136a6:	ce86                	sw	ra,92(sp)
200136a8:	cc96                	sw	t0,88(sp)
200136aa:	ca9a                	sw	t1,84(sp)
200136ac:	c89e                	sw	t2,80(sp)
200136ae:	c6a2                	sw	s0,76(sp)
200136b0:	c4aa                	sw	a0,72(sp)
200136b2:	c2ae                	sw	a1,68(sp)
200136b4:	c0b2                	sw	a2,64(sp)
200136b6:	de36                	sw	a3,60(sp)
200136b8:	dc3a                	sw	a4,56(sp)
200136ba:	da3e                	sw	a5,52(sp)
200136bc:	d842                	sw	a6,48(sp)
200136be:	d646                	sw	a7,44(sp)
200136c0:	d472                	sw	t3,40(sp)
200136c2:	d276                	sw	t4,36(sp)
200136c4:	d07a                	sw	t5,32(sp)
200136c6:	ce7e                	sw	t6,28(sp)
200136c8:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:225
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC2);
200136ca:	8c9ff0ef          	jal	ra,20012f92 <__metal_myhart_id>
200136ce:	872a                	mv	a4,a0
200136d0:	800017b7          	lui	a5,0x80001
200136d4:	070a                	slli	a4,a4,0x2
200136d6:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
200136da:	97ba                	add	a5,a5,a4
200136dc:	439c                	lw	a5,0(a5)
200136de:	faf42623          	sw	a5,-84(s0)
200136e2:	fac42783          	lw	a5,-84(s0)
200136e6:	c78d                	beqz	a5,20013710 <metal_lc2_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:225 (discriminator 1)
200136e8:	fac42503          	lw	a0,-84(s0)
200136ec:	829ff0ef          	jal	ra,20012f14 <__metal_driver_cpu_interrupt_controller>
200136f0:	faa42423          	sw	a0,-88(s0)
200136f4:	fa842783          	lw	a5,-88(s0)
200136f8:	2487a783          	lw	a5,584(a5)
200136fc:	faf42223          	sw	a5,-92(s0)
20013700:	fa842783          	lw	a5,-88(s0)
20013704:	2407a783          	lw	a5,576(a5)
20013708:	fa442583          	lw	a1,-92(s0)
2001370c:	4549                	li	a0,18
2001370e:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:226
}
20013710:	0001                	nop
20013712:	40f6                	lw	ra,92(sp)
20013714:	42e6                	lw	t0,88(sp)
20013716:	4356                	lw	t1,84(sp)
20013718:	43c6                	lw	t2,80(sp)
2001371a:	4436                	lw	s0,76(sp)
2001371c:	4526                	lw	a0,72(sp)
2001371e:	4596                	lw	a1,68(sp)
20013720:	4606                	lw	a2,64(sp)
20013722:	56f2                	lw	a3,60(sp)
20013724:	5762                	lw	a4,56(sp)
20013726:	57d2                	lw	a5,52(sp)
20013728:	5842                	lw	a6,48(sp)
2001372a:	58b2                	lw	a7,44(sp)
2001372c:	5e22                	lw	t3,40(sp)
2001372e:	5e92                	lw	t4,36(sp)
20013730:	5f02                	lw	t5,32(sp)
20013732:	4ff2                	lw	t6,28(sp)
20013734:	6125                	addi	sp,sp,96
20013736:	30200073          	mret

2001373a <metal_lc3_interrupt_vector_handler>:
metal_lc3_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:229

/* The metal_lc3_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc3_interrupt_vector_handler(void) {
2001373a:	711d                	addi	sp,sp,-96
2001373c:	ce86                	sw	ra,92(sp)
2001373e:	cc96                	sw	t0,88(sp)
20013740:	ca9a                	sw	t1,84(sp)
20013742:	c89e                	sw	t2,80(sp)
20013744:	c6a2                	sw	s0,76(sp)
20013746:	c4aa                	sw	a0,72(sp)
20013748:	c2ae                	sw	a1,68(sp)
2001374a:	c0b2                	sw	a2,64(sp)
2001374c:	de36                	sw	a3,60(sp)
2001374e:	dc3a                	sw	a4,56(sp)
20013750:	da3e                	sw	a5,52(sp)
20013752:	d842                	sw	a6,48(sp)
20013754:	d646                	sw	a7,44(sp)
20013756:	d472                	sw	t3,40(sp)
20013758:	d276                	sw	t4,36(sp)
2001375a:	d07a                	sw	t5,32(sp)
2001375c:	ce7e                	sw	t6,28(sp)
2001375e:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:230
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC3);
20013760:	833ff0ef          	jal	ra,20012f92 <__metal_myhart_id>
20013764:	872a                	mv	a4,a0
20013766:	800017b7          	lui	a5,0x80001
2001376a:	070a                	slli	a4,a4,0x2
2001376c:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20013770:	97ba                	add	a5,a5,a4
20013772:	439c                	lw	a5,0(a5)
20013774:	faf42623          	sw	a5,-84(s0)
20013778:	fac42783          	lw	a5,-84(s0)
2001377c:	c78d                	beqz	a5,200137a6 <metal_lc3_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:230 (discriminator 1)
2001377e:	fac42503          	lw	a0,-84(s0)
20013782:	f92ff0ef          	jal	ra,20012f14 <__metal_driver_cpu_interrupt_controller>
20013786:	faa42423          	sw	a0,-88(s0)
2001378a:	fa842783          	lw	a5,-88(s0)
2001378e:	2607a783          	lw	a5,608(a5)
20013792:	faf42223          	sw	a5,-92(s0)
20013796:	fa842783          	lw	a5,-88(s0)
2001379a:	2587a783          	lw	a5,600(a5)
2001379e:	fa442583          	lw	a1,-92(s0)
200137a2:	454d                	li	a0,19
200137a4:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:231
}
200137a6:	0001                	nop
200137a8:	40f6                	lw	ra,92(sp)
200137aa:	42e6                	lw	t0,88(sp)
200137ac:	4356                	lw	t1,84(sp)
200137ae:	43c6                	lw	t2,80(sp)
200137b0:	4436                	lw	s0,76(sp)
200137b2:	4526                	lw	a0,72(sp)
200137b4:	4596                	lw	a1,68(sp)
200137b6:	4606                	lw	a2,64(sp)
200137b8:	56f2                	lw	a3,60(sp)
200137ba:	5762                	lw	a4,56(sp)
200137bc:	57d2                	lw	a5,52(sp)
200137be:	5842                	lw	a6,48(sp)
200137c0:	58b2                	lw	a7,44(sp)
200137c2:	5e22                	lw	t3,40(sp)
200137c4:	5e92                	lw	t4,36(sp)
200137c6:	5f02                	lw	t5,32(sp)
200137c8:	4ff2                	lw	t6,28(sp)
200137ca:	6125                	addi	sp,sp,96
200137cc:	30200073          	mret

200137d0 <metal_lc4_interrupt_vector_handler>:
metal_lc4_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:234

/* The metal_lc4_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc4_interrupt_vector_handler(void) {
200137d0:	711d                	addi	sp,sp,-96
200137d2:	ce86                	sw	ra,92(sp)
200137d4:	cc96                	sw	t0,88(sp)
200137d6:	ca9a                	sw	t1,84(sp)
200137d8:	c89e                	sw	t2,80(sp)
200137da:	c6a2                	sw	s0,76(sp)
200137dc:	c4aa                	sw	a0,72(sp)
200137de:	c2ae                	sw	a1,68(sp)
200137e0:	c0b2                	sw	a2,64(sp)
200137e2:	de36                	sw	a3,60(sp)
200137e4:	dc3a                	sw	a4,56(sp)
200137e6:	da3e                	sw	a5,52(sp)
200137e8:	d842                	sw	a6,48(sp)
200137ea:	d646                	sw	a7,44(sp)
200137ec:	d472                	sw	t3,40(sp)
200137ee:	d276                	sw	t4,36(sp)
200137f0:	d07a                	sw	t5,32(sp)
200137f2:	ce7e                	sw	t6,28(sp)
200137f4:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:235
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC4);
200137f6:	f9cff0ef          	jal	ra,20012f92 <__metal_myhart_id>
200137fa:	872a                	mv	a4,a0
200137fc:	800017b7          	lui	a5,0x80001
20013800:	070a                	slli	a4,a4,0x2
20013802:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20013806:	97ba                	add	a5,a5,a4
20013808:	439c                	lw	a5,0(a5)
2001380a:	faf42623          	sw	a5,-84(s0)
2001380e:	fac42783          	lw	a5,-84(s0)
20013812:	c78d                	beqz	a5,2001383c <metal_lc4_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:235 (discriminator 1)
20013814:	fac42503          	lw	a0,-84(s0)
20013818:	efcff0ef          	jal	ra,20012f14 <__metal_driver_cpu_interrupt_controller>
2001381c:	faa42423          	sw	a0,-88(s0)
20013820:	fa842783          	lw	a5,-88(s0)
20013824:	2787a783          	lw	a5,632(a5)
20013828:	faf42223          	sw	a5,-92(s0)
2001382c:	fa842783          	lw	a5,-88(s0)
20013830:	2707a783          	lw	a5,624(a5)
20013834:	fa442583          	lw	a1,-92(s0)
20013838:	4551                	li	a0,20
2001383a:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:236
}
2001383c:	0001                	nop
2001383e:	40f6                	lw	ra,92(sp)
20013840:	42e6                	lw	t0,88(sp)
20013842:	4356                	lw	t1,84(sp)
20013844:	43c6                	lw	t2,80(sp)
20013846:	4436                	lw	s0,76(sp)
20013848:	4526                	lw	a0,72(sp)
2001384a:	4596                	lw	a1,68(sp)
2001384c:	4606                	lw	a2,64(sp)
2001384e:	56f2                	lw	a3,60(sp)
20013850:	5762                	lw	a4,56(sp)
20013852:	57d2                	lw	a5,52(sp)
20013854:	5842                	lw	a6,48(sp)
20013856:	58b2                	lw	a7,44(sp)
20013858:	5e22                	lw	t3,40(sp)
2001385a:	5e92                	lw	t4,36(sp)
2001385c:	5f02                	lw	t5,32(sp)
2001385e:	4ff2                	lw	t6,28(sp)
20013860:	6125                	addi	sp,sp,96
20013862:	30200073          	mret

20013866 <metal_lc5_interrupt_vector_handler>:
metal_lc5_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:239

/* The metal_lc5_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc5_interrupt_vector_handler(void) {
20013866:	711d                	addi	sp,sp,-96
20013868:	ce86                	sw	ra,92(sp)
2001386a:	cc96                	sw	t0,88(sp)
2001386c:	ca9a                	sw	t1,84(sp)
2001386e:	c89e                	sw	t2,80(sp)
20013870:	c6a2                	sw	s0,76(sp)
20013872:	c4aa                	sw	a0,72(sp)
20013874:	c2ae                	sw	a1,68(sp)
20013876:	c0b2                	sw	a2,64(sp)
20013878:	de36                	sw	a3,60(sp)
2001387a:	dc3a                	sw	a4,56(sp)
2001387c:	da3e                	sw	a5,52(sp)
2001387e:	d842                	sw	a6,48(sp)
20013880:	d646                	sw	a7,44(sp)
20013882:	d472                	sw	t3,40(sp)
20013884:	d276                	sw	t4,36(sp)
20013886:	d07a                	sw	t5,32(sp)
20013888:	ce7e                	sw	t6,28(sp)
2001388a:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:240
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC5);
2001388c:	f06ff0ef          	jal	ra,20012f92 <__metal_myhart_id>
20013890:	872a                	mv	a4,a0
20013892:	800017b7          	lui	a5,0x80001
20013896:	070a                	slli	a4,a4,0x2
20013898:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
2001389c:	97ba                	add	a5,a5,a4
2001389e:	439c                	lw	a5,0(a5)
200138a0:	faf42623          	sw	a5,-84(s0)
200138a4:	fac42783          	lw	a5,-84(s0)
200138a8:	c78d                	beqz	a5,200138d2 <metal_lc5_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:240 (discriminator 1)
200138aa:	fac42503          	lw	a0,-84(s0)
200138ae:	e66ff0ef          	jal	ra,20012f14 <__metal_driver_cpu_interrupt_controller>
200138b2:	faa42423          	sw	a0,-88(s0)
200138b6:	fa842783          	lw	a5,-88(s0)
200138ba:	2907a783          	lw	a5,656(a5)
200138be:	faf42223          	sw	a5,-92(s0)
200138c2:	fa842783          	lw	a5,-88(s0)
200138c6:	2887a783          	lw	a5,648(a5)
200138ca:	fa442583          	lw	a1,-92(s0)
200138ce:	4555                	li	a0,21
200138d0:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:241
}
200138d2:	0001                	nop
200138d4:	40f6                	lw	ra,92(sp)
200138d6:	42e6                	lw	t0,88(sp)
200138d8:	4356                	lw	t1,84(sp)
200138da:	43c6                	lw	t2,80(sp)
200138dc:	4436                	lw	s0,76(sp)
200138de:	4526                	lw	a0,72(sp)
200138e0:	4596                	lw	a1,68(sp)
200138e2:	4606                	lw	a2,64(sp)
200138e4:	56f2                	lw	a3,60(sp)
200138e6:	5762                	lw	a4,56(sp)
200138e8:	57d2                	lw	a5,52(sp)
200138ea:	5842                	lw	a6,48(sp)
200138ec:	58b2                	lw	a7,44(sp)
200138ee:	5e22                	lw	t3,40(sp)
200138f0:	5e92                	lw	t4,36(sp)
200138f2:	5f02                	lw	t5,32(sp)
200138f4:	4ff2                	lw	t6,28(sp)
200138f6:	6125                	addi	sp,sp,96
200138f8:	30200073          	mret

200138fc <metal_lc6_interrupt_vector_handler>:
metal_lc6_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:244

/* The metal_lc6_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc6_interrupt_vector_handler(void) {
200138fc:	711d                	addi	sp,sp,-96
200138fe:	ce86                	sw	ra,92(sp)
20013900:	cc96                	sw	t0,88(sp)
20013902:	ca9a                	sw	t1,84(sp)
20013904:	c89e                	sw	t2,80(sp)
20013906:	c6a2                	sw	s0,76(sp)
20013908:	c4aa                	sw	a0,72(sp)
2001390a:	c2ae                	sw	a1,68(sp)
2001390c:	c0b2                	sw	a2,64(sp)
2001390e:	de36                	sw	a3,60(sp)
20013910:	dc3a                	sw	a4,56(sp)
20013912:	da3e                	sw	a5,52(sp)
20013914:	d842                	sw	a6,48(sp)
20013916:	d646                	sw	a7,44(sp)
20013918:	d472                	sw	t3,40(sp)
2001391a:	d276                	sw	t4,36(sp)
2001391c:	d07a                	sw	t5,32(sp)
2001391e:	ce7e                	sw	t6,28(sp)
20013920:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:245
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC6);
20013922:	e70ff0ef          	jal	ra,20012f92 <__metal_myhart_id>
20013926:	872a                	mv	a4,a0
20013928:	800017b7          	lui	a5,0x80001
2001392c:	070a                	slli	a4,a4,0x2
2001392e:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20013932:	97ba                	add	a5,a5,a4
20013934:	439c                	lw	a5,0(a5)
20013936:	faf42623          	sw	a5,-84(s0)
2001393a:	fac42783          	lw	a5,-84(s0)
2001393e:	c78d                	beqz	a5,20013968 <metal_lc6_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:245 (discriminator 1)
20013940:	fac42503          	lw	a0,-84(s0)
20013944:	dd0ff0ef          	jal	ra,20012f14 <__metal_driver_cpu_interrupt_controller>
20013948:	faa42423          	sw	a0,-88(s0)
2001394c:	fa842783          	lw	a5,-88(s0)
20013950:	2a87a783          	lw	a5,680(a5)
20013954:	faf42223          	sw	a5,-92(s0)
20013958:	fa842783          	lw	a5,-88(s0)
2001395c:	2a07a783          	lw	a5,672(a5)
20013960:	fa442583          	lw	a1,-92(s0)
20013964:	4559                	li	a0,22
20013966:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:246
}
20013968:	0001                	nop
2001396a:	40f6                	lw	ra,92(sp)
2001396c:	42e6                	lw	t0,88(sp)
2001396e:	4356                	lw	t1,84(sp)
20013970:	43c6                	lw	t2,80(sp)
20013972:	4436                	lw	s0,76(sp)
20013974:	4526                	lw	a0,72(sp)
20013976:	4596                	lw	a1,68(sp)
20013978:	4606                	lw	a2,64(sp)
2001397a:	56f2                	lw	a3,60(sp)
2001397c:	5762                	lw	a4,56(sp)
2001397e:	57d2                	lw	a5,52(sp)
20013980:	5842                	lw	a6,48(sp)
20013982:	58b2                	lw	a7,44(sp)
20013984:	5e22                	lw	t3,40(sp)
20013986:	5e92                	lw	t4,36(sp)
20013988:	5f02                	lw	t5,32(sp)
2001398a:	4ff2                	lw	t6,28(sp)
2001398c:	6125                	addi	sp,sp,96
2001398e:	30200073          	mret

20013992 <metal_lc7_interrupt_vector_handler>:
metal_lc7_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:249

/* The metal_lc7_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc7_interrupt_vector_handler(void) {
20013992:	711d                	addi	sp,sp,-96
20013994:	ce86                	sw	ra,92(sp)
20013996:	cc96                	sw	t0,88(sp)
20013998:	ca9a                	sw	t1,84(sp)
2001399a:	c89e                	sw	t2,80(sp)
2001399c:	c6a2                	sw	s0,76(sp)
2001399e:	c4aa                	sw	a0,72(sp)
200139a0:	c2ae                	sw	a1,68(sp)
200139a2:	c0b2                	sw	a2,64(sp)
200139a4:	de36                	sw	a3,60(sp)
200139a6:	dc3a                	sw	a4,56(sp)
200139a8:	da3e                	sw	a5,52(sp)
200139aa:	d842                	sw	a6,48(sp)
200139ac:	d646                	sw	a7,44(sp)
200139ae:	d472                	sw	t3,40(sp)
200139b0:	d276                	sw	t4,36(sp)
200139b2:	d07a                	sw	t5,32(sp)
200139b4:	ce7e                	sw	t6,28(sp)
200139b6:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:250
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC7);
200139b8:	ddaff0ef          	jal	ra,20012f92 <__metal_myhart_id>
200139bc:	872a                	mv	a4,a0
200139be:	800017b7          	lui	a5,0x80001
200139c2:	070a                	slli	a4,a4,0x2
200139c4:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
200139c8:	97ba                	add	a5,a5,a4
200139ca:	439c                	lw	a5,0(a5)
200139cc:	faf42623          	sw	a5,-84(s0)
200139d0:	fac42783          	lw	a5,-84(s0)
200139d4:	c78d                	beqz	a5,200139fe <metal_lc7_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:250 (discriminator 1)
200139d6:	fac42503          	lw	a0,-84(s0)
200139da:	d3aff0ef          	jal	ra,20012f14 <__metal_driver_cpu_interrupt_controller>
200139de:	faa42423          	sw	a0,-88(s0)
200139e2:	fa842783          	lw	a5,-88(s0)
200139e6:	2c07a783          	lw	a5,704(a5)
200139ea:	faf42223          	sw	a5,-92(s0)
200139ee:	fa842783          	lw	a5,-88(s0)
200139f2:	2b87a783          	lw	a5,696(a5)
200139f6:	fa442583          	lw	a1,-92(s0)
200139fa:	455d                	li	a0,23
200139fc:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:251
}
200139fe:	0001                	nop
20013a00:	40f6                	lw	ra,92(sp)
20013a02:	42e6                	lw	t0,88(sp)
20013a04:	4356                	lw	t1,84(sp)
20013a06:	43c6                	lw	t2,80(sp)
20013a08:	4436                	lw	s0,76(sp)
20013a0a:	4526                	lw	a0,72(sp)
20013a0c:	4596                	lw	a1,68(sp)
20013a0e:	4606                	lw	a2,64(sp)
20013a10:	56f2                	lw	a3,60(sp)
20013a12:	5762                	lw	a4,56(sp)
20013a14:	57d2                	lw	a5,52(sp)
20013a16:	5842                	lw	a6,48(sp)
20013a18:	58b2                	lw	a7,44(sp)
20013a1a:	5e22                	lw	t3,40(sp)
20013a1c:	5e92                	lw	t4,36(sp)
20013a1e:	5f02                	lw	t5,32(sp)
20013a20:	4ff2                	lw	t6,28(sp)
20013a22:	6125                	addi	sp,sp,96
20013a24:	30200073          	mret

20013a28 <metal_lc8_interrupt_vector_handler>:
metal_lc8_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:254

/* The metal_lc8_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc8_interrupt_vector_handler(void) {
20013a28:	711d                	addi	sp,sp,-96
20013a2a:	ce86                	sw	ra,92(sp)
20013a2c:	cc96                	sw	t0,88(sp)
20013a2e:	ca9a                	sw	t1,84(sp)
20013a30:	c89e                	sw	t2,80(sp)
20013a32:	c6a2                	sw	s0,76(sp)
20013a34:	c4aa                	sw	a0,72(sp)
20013a36:	c2ae                	sw	a1,68(sp)
20013a38:	c0b2                	sw	a2,64(sp)
20013a3a:	de36                	sw	a3,60(sp)
20013a3c:	dc3a                	sw	a4,56(sp)
20013a3e:	da3e                	sw	a5,52(sp)
20013a40:	d842                	sw	a6,48(sp)
20013a42:	d646                	sw	a7,44(sp)
20013a44:	d472                	sw	t3,40(sp)
20013a46:	d276                	sw	t4,36(sp)
20013a48:	d07a                	sw	t5,32(sp)
20013a4a:	ce7e                	sw	t6,28(sp)
20013a4c:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:255
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC8);
20013a4e:	d44ff0ef          	jal	ra,20012f92 <__metal_myhart_id>
20013a52:	872a                	mv	a4,a0
20013a54:	800017b7          	lui	a5,0x80001
20013a58:	070a                	slli	a4,a4,0x2
20013a5a:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20013a5e:	97ba                	add	a5,a5,a4
20013a60:	439c                	lw	a5,0(a5)
20013a62:	faf42623          	sw	a5,-84(s0)
20013a66:	fac42783          	lw	a5,-84(s0)
20013a6a:	c78d                	beqz	a5,20013a94 <metal_lc8_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:255 (discriminator 1)
20013a6c:	fac42503          	lw	a0,-84(s0)
20013a70:	ca4ff0ef          	jal	ra,20012f14 <__metal_driver_cpu_interrupt_controller>
20013a74:	faa42423          	sw	a0,-88(s0)
20013a78:	fa842783          	lw	a5,-88(s0)
20013a7c:	2d87a783          	lw	a5,728(a5)
20013a80:	faf42223          	sw	a5,-92(s0)
20013a84:	fa842783          	lw	a5,-88(s0)
20013a88:	2d07a783          	lw	a5,720(a5)
20013a8c:	fa442583          	lw	a1,-92(s0)
20013a90:	4561                	li	a0,24
20013a92:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:256
}
20013a94:	0001                	nop
20013a96:	40f6                	lw	ra,92(sp)
20013a98:	42e6                	lw	t0,88(sp)
20013a9a:	4356                	lw	t1,84(sp)
20013a9c:	43c6                	lw	t2,80(sp)
20013a9e:	4436                	lw	s0,76(sp)
20013aa0:	4526                	lw	a0,72(sp)
20013aa2:	4596                	lw	a1,68(sp)
20013aa4:	4606                	lw	a2,64(sp)
20013aa6:	56f2                	lw	a3,60(sp)
20013aa8:	5762                	lw	a4,56(sp)
20013aaa:	57d2                	lw	a5,52(sp)
20013aac:	5842                	lw	a6,48(sp)
20013aae:	58b2                	lw	a7,44(sp)
20013ab0:	5e22                	lw	t3,40(sp)
20013ab2:	5e92                	lw	t4,36(sp)
20013ab4:	5f02                	lw	t5,32(sp)
20013ab6:	4ff2                	lw	t6,28(sp)
20013ab8:	6125                	addi	sp,sp,96
20013aba:	30200073          	mret

20013abe <metal_lc9_interrupt_vector_handler>:
metal_lc9_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:259

/* The metal_lc9_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc9_interrupt_vector_handler(void) {
20013abe:	711d                	addi	sp,sp,-96
20013ac0:	ce86                	sw	ra,92(sp)
20013ac2:	cc96                	sw	t0,88(sp)
20013ac4:	ca9a                	sw	t1,84(sp)
20013ac6:	c89e                	sw	t2,80(sp)
20013ac8:	c6a2                	sw	s0,76(sp)
20013aca:	c4aa                	sw	a0,72(sp)
20013acc:	c2ae                	sw	a1,68(sp)
20013ace:	c0b2                	sw	a2,64(sp)
20013ad0:	de36                	sw	a3,60(sp)
20013ad2:	dc3a                	sw	a4,56(sp)
20013ad4:	da3e                	sw	a5,52(sp)
20013ad6:	d842                	sw	a6,48(sp)
20013ad8:	d646                	sw	a7,44(sp)
20013ada:	d472                	sw	t3,40(sp)
20013adc:	d276                	sw	t4,36(sp)
20013ade:	d07a                	sw	t5,32(sp)
20013ae0:	ce7e                	sw	t6,28(sp)
20013ae2:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:260
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC9);
20013ae4:	caeff0ef          	jal	ra,20012f92 <__metal_myhart_id>
20013ae8:	872a                	mv	a4,a0
20013aea:	800017b7          	lui	a5,0x80001
20013aee:	070a                	slli	a4,a4,0x2
20013af0:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20013af4:	97ba                	add	a5,a5,a4
20013af6:	439c                	lw	a5,0(a5)
20013af8:	faf42623          	sw	a5,-84(s0)
20013afc:	fac42783          	lw	a5,-84(s0)
20013b00:	c78d                	beqz	a5,20013b2a <metal_lc9_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:260 (discriminator 1)
20013b02:	fac42503          	lw	a0,-84(s0)
20013b06:	c0eff0ef          	jal	ra,20012f14 <__metal_driver_cpu_interrupt_controller>
20013b0a:	faa42423          	sw	a0,-88(s0)
20013b0e:	fa842783          	lw	a5,-88(s0)
20013b12:	2f07a783          	lw	a5,752(a5)
20013b16:	faf42223          	sw	a5,-92(s0)
20013b1a:	fa842783          	lw	a5,-88(s0)
20013b1e:	2e87a783          	lw	a5,744(a5)
20013b22:	fa442583          	lw	a1,-92(s0)
20013b26:	4565                	li	a0,25
20013b28:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:261
}
20013b2a:	0001                	nop
20013b2c:	40f6                	lw	ra,92(sp)
20013b2e:	42e6                	lw	t0,88(sp)
20013b30:	4356                	lw	t1,84(sp)
20013b32:	43c6                	lw	t2,80(sp)
20013b34:	4436                	lw	s0,76(sp)
20013b36:	4526                	lw	a0,72(sp)
20013b38:	4596                	lw	a1,68(sp)
20013b3a:	4606                	lw	a2,64(sp)
20013b3c:	56f2                	lw	a3,60(sp)
20013b3e:	5762                	lw	a4,56(sp)
20013b40:	57d2                	lw	a5,52(sp)
20013b42:	5842                	lw	a6,48(sp)
20013b44:	58b2                	lw	a7,44(sp)
20013b46:	5e22                	lw	t3,40(sp)
20013b48:	5e92                	lw	t4,36(sp)
20013b4a:	5f02                	lw	t5,32(sp)
20013b4c:	4ff2                	lw	t6,28(sp)
20013b4e:	6125                	addi	sp,sp,96
20013b50:	30200073          	mret

20013b54 <metal_lc10_interrupt_vector_handler>:
metal_lc10_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:265

/* The metal_lc10_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc10_interrupt_vector_handler(void) {
20013b54:	711d                	addi	sp,sp,-96
20013b56:	ce86                	sw	ra,92(sp)
20013b58:	cc96                	sw	t0,88(sp)
20013b5a:	ca9a                	sw	t1,84(sp)
20013b5c:	c89e                	sw	t2,80(sp)
20013b5e:	c6a2                	sw	s0,76(sp)
20013b60:	c4aa                	sw	a0,72(sp)
20013b62:	c2ae                	sw	a1,68(sp)
20013b64:	c0b2                	sw	a2,64(sp)
20013b66:	de36                	sw	a3,60(sp)
20013b68:	dc3a                	sw	a4,56(sp)
20013b6a:	da3e                	sw	a5,52(sp)
20013b6c:	d842                	sw	a6,48(sp)
20013b6e:	d646                	sw	a7,44(sp)
20013b70:	d472                	sw	t3,40(sp)
20013b72:	d276                	sw	t4,36(sp)
20013b74:	d07a                	sw	t5,32(sp)
20013b76:	ce7e                	sw	t6,28(sp)
20013b78:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:266
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC10);
20013b7a:	c18ff0ef          	jal	ra,20012f92 <__metal_myhart_id>
20013b7e:	872a                	mv	a4,a0
20013b80:	800017b7          	lui	a5,0x80001
20013b84:	070a                	slli	a4,a4,0x2
20013b86:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20013b8a:	97ba                	add	a5,a5,a4
20013b8c:	439c                	lw	a5,0(a5)
20013b8e:	faf42623          	sw	a5,-84(s0)
20013b92:	fac42783          	lw	a5,-84(s0)
20013b96:	c78d                	beqz	a5,20013bc0 <metal_lc10_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:266 (discriminator 1)
20013b98:	fac42503          	lw	a0,-84(s0)
20013b9c:	b78ff0ef          	jal	ra,20012f14 <__metal_driver_cpu_interrupt_controller>
20013ba0:	faa42423          	sw	a0,-88(s0)
20013ba4:	fa842783          	lw	a5,-88(s0)
20013ba8:	3087a783          	lw	a5,776(a5)
20013bac:	faf42223          	sw	a5,-92(s0)
20013bb0:	fa842783          	lw	a5,-88(s0)
20013bb4:	3007a783          	lw	a5,768(a5)
20013bb8:	fa442583          	lw	a1,-92(s0)
20013bbc:	4569                	li	a0,26
20013bbe:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:267
}
20013bc0:	0001                	nop
20013bc2:	40f6                	lw	ra,92(sp)
20013bc4:	42e6                	lw	t0,88(sp)
20013bc6:	4356                	lw	t1,84(sp)
20013bc8:	43c6                	lw	t2,80(sp)
20013bca:	4436                	lw	s0,76(sp)
20013bcc:	4526                	lw	a0,72(sp)
20013bce:	4596                	lw	a1,68(sp)
20013bd0:	4606                	lw	a2,64(sp)
20013bd2:	56f2                	lw	a3,60(sp)
20013bd4:	5762                	lw	a4,56(sp)
20013bd6:	57d2                	lw	a5,52(sp)
20013bd8:	5842                	lw	a6,48(sp)
20013bda:	58b2                	lw	a7,44(sp)
20013bdc:	5e22                	lw	t3,40(sp)
20013bde:	5e92                	lw	t4,36(sp)
20013be0:	5f02                	lw	t5,32(sp)
20013be2:	4ff2                	lw	t6,28(sp)
20013be4:	6125                	addi	sp,sp,96
20013be6:	30200073          	mret

20013bea <metal_lc11_interrupt_vector_handler>:
metal_lc11_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:271

/* The metal_lc11_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc11_interrupt_vector_handler(void) {
20013bea:	711d                	addi	sp,sp,-96
20013bec:	ce86                	sw	ra,92(sp)
20013bee:	cc96                	sw	t0,88(sp)
20013bf0:	ca9a                	sw	t1,84(sp)
20013bf2:	c89e                	sw	t2,80(sp)
20013bf4:	c6a2                	sw	s0,76(sp)
20013bf6:	c4aa                	sw	a0,72(sp)
20013bf8:	c2ae                	sw	a1,68(sp)
20013bfa:	c0b2                	sw	a2,64(sp)
20013bfc:	de36                	sw	a3,60(sp)
20013bfe:	dc3a                	sw	a4,56(sp)
20013c00:	da3e                	sw	a5,52(sp)
20013c02:	d842                	sw	a6,48(sp)
20013c04:	d646                	sw	a7,44(sp)
20013c06:	d472                	sw	t3,40(sp)
20013c08:	d276                	sw	t4,36(sp)
20013c0a:	d07a                	sw	t5,32(sp)
20013c0c:	ce7e                	sw	t6,28(sp)
20013c0e:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:272
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC11);
20013c10:	b82ff0ef          	jal	ra,20012f92 <__metal_myhart_id>
20013c14:	872a                	mv	a4,a0
20013c16:	800017b7          	lui	a5,0x80001
20013c1a:	070a                	slli	a4,a4,0x2
20013c1c:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20013c20:	97ba                	add	a5,a5,a4
20013c22:	439c                	lw	a5,0(a5)
20013c24:	faf42623          	sw	a5,-84(s0)
20013c28:	fac42783          	lw	a5,-84(s0)
20013c2c:	c78d                	beqz	a5,20013c56 <metal_lc11_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:272 (discriminator 1)
20013c2e:	fac42503          	lw	a0,-84(s0)
20013c32:	ae2ff0ef          	jal	ra,20012f14 <__metal_driver_cpu_interrupt_controller>
20013c36:	faa42423          	sw	a0,-88(s0)
20013c3a:	fa842783          	lw	a5,-88(s0)
20013c3e:	3207a783          	lw	a5,800(a5)
20013c42:	faf42223          	sw	a5,-92(s0)
20013c46:	fa842783          	lw	a5,-88(s0)
20013c4a:	3187a783          	lw	a5,792(a5)
20013c4e:	fa442583          	lw	a1,-92(s0)
20013c52:	456d                	li	a0,27
20013c54:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:273
}
20013c56:	0001                	nop
20013c58:	40f6                	lw	ra,92(sp)
20013c5a:	42e6                	lw	t0,88(sp)
20013c5c:	4356                	lw	t1,84(sp)
20013c5e:	43c6                	lw	t2,80(sp)
20013c60:	4436                	lw	s0,76(sp)
20013c62:	4526                	lw	a0,72(sp)
20013c64:	4596                	lw	a1,68(sp)
20013c66:	4606                	lw	a2,64(sp)
20013c68:	56f2                	lw	a3,60(sp)
20013c6a:	5762                	lw	a4,56(sp)
20013c6c:	57d2                	lw	a5,52(sp)
20013c6e:	5842                	lw	a6,48(sp)
20013c70:	58b2                	lw	a7,44(sp)
20013c72:	5e22                	lw	t3,40(sp)
20013c74:	5e92                	lw	t4,36(sp)
20013c76:	5f02                	lw	t5,32(sp)
20013c78:	4ff2                	lw	t6,28(sp)
20013c7a:	6125                	addi	sp,sp,96
20013c7c:	30200073          	mret

20013c80 <metal_lc12_interrupt_vector_handler>:
metal_lc12_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:277

/* The metal_lc12_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc12_interrupt_vector_handler(void) {
20013c80:	711d                	addi	sp,sp,-96
20013c82:	ce86                	sw	ra,92(sp)
20013c84:	cc96                	sw	t0,88(sp)
20013c86:	ca9a                	sw	t1,84(sp)
20013c88:	c89e                	sw	t2,80(sp)
20013c8a:	c6a2                	sw	s0,76(sp)
20013c8c:	c4aa                	sw	a0,72(sp)
20013c8e:	c2ae                	sw	a1,68(sp)
20013c90:	c0b2                	sw	a2,64(sp)
20013c92:	de36                	sw	a3,60(sp)
20013c94:	dc3a                	sw	a4,56(sp)
20013c96:	da3e                	sw	a5,52(sp)
20013c98:	d842                	sw	a6,48(sp)
20013c9a:	d646                	sw	a7,44(sp)
20013c9c:	d472                	sw	t3,40(sp)
20013c9e:	d276                	sw	t4,36(sp)
20013ca0:	d07a                	sw	t5,32(sp)
20013ca2:	ce7e                	sw	t6,28(sp)
20013ca4:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:278
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC12);
20013ca6:	aecff0ef          	jal	ra,20012f92 <__metal_myhart_id>
20013caa:	872a                	mv	a4,a0
20013cac:	800017b7          	lui	a5,0x80001
20013cb0:	070a                	slli	a4,a4,0x2
20013cb2:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20013cb6:	97ba                	add	a5,a5,a4
20013cb8:	439c                	lw	a5,0(a5)
20013cba:	faf42623          	sw	a5,-84(s0)
20013cbe:	fac42783          	lw	a5,-84(s0)
20013cc2:	c78d                	beqz	a5,20013cec <metal_lc12_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:278 (discriminator 1)
20013cc4:	fac42503          	lw	a0,-84(s0)
20013cc8:	a4cff0ef          	jal	ra,20012f14 <__metal_driver_cpu_interrupt_controller>
20013ccc:	faa42423          	sw	a0,-88(s0)
20013cd0:	fa842783          	lw	a5,-88(s0)
20013cd4:	3387a783          	lw	a5,824(a5)
20013cd8:	faf42223          	sw	a5,-92(s0)
20013cdc:	fa842783          	lw	a5,-88(s0)
20013ce0:	3307a783          	lw	a5,816(a5)
20013ce4:	fa442583          	lw	a1,-92(s0)
20013ce8:	4571                	li	a0,28
20013cea:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:279
}
20013cec:	0001                	nop
20013cee:	40f6                	lw	ra,92(sp)
20013cf0:	42e6                	lw	t0,88(sp)
20013cf2:	4356                	lw	t1,84(sp)
20013cf4:	43c6                	lw	t2,80(sp)
20013cf6:	4436                	lw	s0,76(sp)
20013cf8:	4526                	lw	a0,72(sp)
20013cfa:	4596                	lw	a1,68(sp)
20013cfc:	4606                	lw	a2,64(sp)
20013cfe:	56f2                	lw	a3,60(sp)
20013d00:	5762                	lw	a4,56(sp)
20013d02:	57d2                	lw	a5,52(sp)
20013d04:	5842                	lw	a6,48(sp)
20013d06:	58b2                	lw	a7,44(sp)
20013d08:	5e22                	lw	t3,40(sp)
20013d0a:	5e92                	lw	t4,36(sp)
20013d0c:	5f02                	lw	t5,32(sp)
20013d0e:	4ff2                	lw	t6,28(sp)
20013d10:	6125                	addi	sp,sp,96
20013d12:	30200073          	mret

20013d16 <metal_lc13_interrupt_vector_handler>:
metal_lc13_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:283

/* The metal_lc13_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc13_interrupt_vector_handler(void) {
20013d16:	711d                	addi	sp,sp,-96
20013d18:	ce86                	sw	ra,92(sp)
20013d1a:	cc96                	sw	t0,88(sp)
20013d1c:	ca9a                	sw	t1,84(sp)
20013d1e:	c89e                	sw	t2,80(sp)
20013d20:	c6a2                	sw	s0,76(sp)
20013d22:	c4aa                	sw	a0,72(sp)
20013d24:	c2ae                	sw	a1,68(sp)
20013d26:	c0b2                	sw	a2,64(sp)
20013d28:	de36                	sw	a3,60(sp)
20013d2a:	dc3a                	sw	a4,56(sp)
20013d2c:	da3e                	sw	a5,52(sp)
20013d2e:	d842                	sw	a6,48(sp)
20013d30:	d646                	sw	a7,44(sp)
20013d32:	d472                	sw	t3,40(sp)
20013d34:	d276                	sw	t4,36(sp)
20013d36:	d07a                	sw	t5,32(sp)
20013d38:	ce7e                	sw	t6,28(sp)
20013d3a:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:284
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC13);
20013d3c:	a56ff0ef          	jal	ra,20012f92 <__metal_myhart_id>
20013d40:	872a                	mv	a4,a0
20013d42:	800017b7          	lui	a5,0x80001
20013d46:	070a                	slli	a4,a4,0x2
20013d48:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20013d4c:	97ba                	add	a5,a5,a4
20013d4e:	439c                	lw	a5,0(a5)
20013d50:	faf42623          	sw	a5,-84(s0)
20013d54:	fac42783          	lw	a5,-84(s0)
20013d58:	c78d                	beqz	a5,20013d82 <metal_lc13_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:284 (discriminator 1)
20013d5a:	fac42503          	lw	a0,-84(s0)
20013d5e:	9b6ff0ef          	jal	ra,20012f14 <__metal_driver_cpu_interrupt_controller>
20013d62:	faa42423          	sw	a0,-88(s0)
20013d66:	fa842783          	lw	a5,-88(s0)
20013d6a:	3507a783          	lw	a5,848(a5)
20013d6e:	faf42223          	sw	a5,-92(s0)
20013d72:	fa842783          	lw	a5,-88(s0)
20013d76:	3487a783          	lw	a5,840(a5)
20013d7a:	fa442583          	lw	a1,-92(s0)
20013d7e:	4575                	li	a0,29
20013d80:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:285
}
20013d82:	0001                	nop
20013d84:	40f6                	lw	ra,92(sp)
20013d86:	42e6                	lw	t0,88(sp)
20013d88:	4356                	lw	t1,84(sp)
20013d8a:	43c6                	lw	t2,80(sp)
20013d8c:	4436                	lw	s0,76(sp)
20013d8e:	4526                	lw	a0,72(sp)
20013d90:	4596                	lw	a1,68(sp)
20013d92:	4606                	lw	a2,64(sp)
20013d94:	56f2                	lw	a3,60(sp)
20013d96:	5762                	lw	a4,56(sp)
20013d98:	57d2                	lw	a5,52(sp)
20013d9a:	5842                	lw	a6,48(sp)
20013d9c:	58b2                	lw	a7,44(sp)
20013d9e:	5e22                	lw	t3,40(sp)
20013da0:	5e92                	lw	t4,36(sp)
20013da2:	5f02                	lw	t5,32(sp)
20013da4:	4ff2                	lw	t6,28(sp)
20013da6:	6125                	addi	sp,sp,96
20013da8:	30200073          	mret

20013dac <metal_lc14_interrupt_vector_handler>:
metal_lc14_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:289

/* The metal_lc14_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc14_interrupt_vector_handler(void) {
20013dac:	711d                	addi	sp,sp,-96
20013dae:	ce86                	sw	ra,92(sp)
20013db0:	cc96                	sw	t0,88(sp)
20013db2:	ca9a                	sw	t1,84(sp)
20013db4:	c89e                	sw	t2,80(sp)
20013db6:	c6a2                	sw	s0,76(sp)
20013db8:	c4aa                	sw	a0,72(sp)
20013dba:	c2ae                	sw	a1,68(sp)
20013dbc:	c0b2                	sw	a2,64(sp)
20013dbe:	de36                	sw	a3,60(sp)
20013dc0:	dc3a                	sw	a4,56(sp)
20013dc2:	da3e                	sw	a5,52(sp)
20013dc4:	d842                	sw	a6,48(sp)
20013dc6:	d646                	sw	a7,44(sp)
20013dc8:	d472                	sw	t3,40(sp)
20013dca:	d276                	sw	t4,36(sp)
20013dcc:	d07a                	sw	t5,32(sp)
20013dce:	ce7e                	sw	t6,28(sp)
20013dd0:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:290
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC14);
20013dd2:	9c0ff0ef          	jal	ra,20012f92 <__metal_myhart_id>
20013dd6:	872a                	mv	a4,a0
20013dd8:	800017b7          	lui	a5,0x80001
20013ddc:	070a                	slli	a4,a4,0x2
20013dde:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20013de2:	97ba                	add	a5,a5,a4
20013de4:	439c                	lw	a5,0(a5)
20013de6:	faf42623          	sw	a5,-84(s0)
20013dea:	fac42783          	lw	a5,-84(s0)
20013dee:	c78d                	beqz	a5,20013e18 <metal_lc14_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:290 (discriminator 1)
20013df0:	fac42503          	lw	a0,-84(s0)
20013df4:	920ff0ef          	jal	ra,20012f14 <__metal_driver_cpu_interrupt_controller>
20013df8:	faa42423          	sw	a0,-88(s0)
20013dfc:	fa842783          	lw	a5,-88(s0)
20013e00:	3687a783          	lw	a5,872(a5)
20013e04:	faf42223          	sw	a5,-92(s0)
20013e08:	fa842783          	lw	a5,-88(s0)
20013e0c:	3607a783          	lw	a5,864(a5)
20013e10:	fa442583          	lw	a1,-92(s0)
20013e14:	4579                	li	a0,30
20013e16:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:291
}
20013e18:	0001                	nop
20013e1a:	40f6                	lw	ra,92(sp)
20013e1c:	42e6                	lw	t0,88(sp)
20013e1e:	4356                	lw	t1,84(sp)
20013e20:	43c6                	lw	t2,80(sp)
20013e22:	4436                	lw	s0,76(sp)
20013e24:	4526                	lw	a0,72(sp)
20013e26:	4596                	lw	a1,68(sp)
20013e28:	4606                	lw	a2,64(sp)
20013e2a:	56f2                	lw	a3,60(sp)
20013e2c:	5762                	lw	a4,56(sp)
20013e2e:	57d2                	lw	a5,52(sp)
20013e30:	5842                	lw	a6,48(sp)
20013e32:	58b2                	lw	a7,44(sp)
20013e34:	5e22                	lw	t3,40(sp)
20013e36:	5e92                	lw	t4,36(sp)
20013e38:	5f02                	lw	t5,32(sp)
20013e3a:	4ff2                	lw	t6,28(sp)
20013e3c:	6125                	addi	sp,sp,96
20013e3e:	30200073          	mret

20013e42 <metal_lc15_interrupt_vector_handler>:
metal_lc15_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:295

/* The metal_lc15_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc15_interrupt_vector_handler(void) {
20013e42:	711d                	addi	sp,sp,-96
20013e44:	ce86                	sw	ra,92(sp)
20013e46:	cc96                	sw	t0,88(sp)
20013e48:	ca9a                	sw	t1,84(sp)
20013e4a:	c89e                	sw	t2,80(sp)
20013e4c:	c6a2                	sw	s0,76(sp)
20013e4e:	c4aa                	sw	a0,72(sp)
20013e50:	c2ae                	sw	a1,68(sp)
20013e52:	c0b2                	sw	a2,64(sp)
20013e54:	de36                	sw	a3,60(sp)
20013e56:	dc3a                	sw	a4,56(sp)
20013e58:	da3e                	sw	a5,52(sp)
20013e5a:	d842                	sw	a6,48(sp)
20013e5c:	d646                	sw	a7,44(sp)
20013e5e:	d472                	sw	t3,40(sp)
20013e60:	d276                	sw	t4,36(sp)
20013e62:	d07a                	sw	t5,32(sp)
20013e64:	ce7e                	sw	t6,28(sp)
20013e66:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:296
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC15);
20013e68:	92aff0ef          	jal	ra,20012f92 <__metal_myhart_id>
20013e6c:	872a                	mv	a4,a0
20013e6e:	800017b7          	lui	a5,0x80001
20013e72:	070a                	slli	a4,a4,0x2
20013e74:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20013e78:	97ba                	add	a5,a5,a4
20013e7a:	439c                	lw	a5,0(a5)
20013e7c:	faf42623          	sw	a5,-84(s0)
20013e80:	fac42783          	lw	a5,-84(s0)
20013e84:	c78d                	beqz	a5,20013eae <metal_lc15_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:296 (discriminator 1)
20013e86:	fac42503          	lw	a0,-84(s0)
20013e8a:	88aff0ef          	jal	ra,20012f14 <__metal_driver_cpu_interrupt_controller>
20013e8e:	faa42423          	sw	a0,-88(s0)
20013e92:	fa842783          	lw	a5,-88(s0)
20013e96:	3807a783          	lw	a5,896(a5)
20013e9a:	faf42223          	sw	a5,-92(s0)
20013e9e:	fa842783          	lw	a5,-88(s0)
20013ea2:	3787a783          	lw	a5,888(a5)
20013ea6:	fa442583          	lw	a1,-92(s0)
20013eaa:	457d                	li	a0,31
20013eac:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:297
}
20013eae:	0001                	nop
20013eb0:	40f6                	lw	ra,92(sp)
20013eb2:	42e6                	lw	t0,88(sp)
20013eb4:	4356                	lw	t1,84(sp)
20013eb6:	43c6                	lw	t2,80(sp)
20013eb8:	4436                	lw	s0,76(sp)
20013eba:	4526                	lw	a0,72(sp)
20013ebc:	4596                	lw	a1,68(sp)
20013ebe:	4606                	lw	a2,64(sp)
20013ec0:	56f2                	lw	a3,60(sp)
20013ec2:	5762                	lw	a4,56(sp)
20013ec4:	57d2                	lw	a5,52(sp)
20013ec6:	5842                	lw	a6,48(sp)
20013ec8:	58b2                	lw	a7,44(sp)
20013eca:	5e22                	lw	t3,40(sp)
20013ecc:	5e92                	lw	t4,36(sp)
20013ece:	5f02                	lw	t5,32(sp)
20013ed0:	4ff2                	lw	t6,28(sp)
20013ed2:	6125                	addi	sp,sp,96
20013ed4:	30200073          	mret

20013ed8 <__metal_controller_interrupt_vector_mode>:
__metal_controller_interrupt_vector_mode():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:299

metal_vector_mode __metal_controller_interrupt_vector_mode(void) {
20013ed8:	1101                	addi	sp,sp,-32
20013eda:	ce22                	sw	s0,28(sp)
20013edc:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:302
    uintptr_t val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
20013ede:	305027f3          	csrr	a5,mtvec
20013ee2:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:303
    val &= METAL_MTVEC_MASK;
20013ee6:	fec42783          	lw	a5,-20(s0)
20013eea:	03f7f793          	andi	a5,a5,63
20013eee:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:305

    switch (val) {
20013ef2:	fec42703          	lw	a4,-20(s0)
20013ef6:	4789                	li	a5,2
20013ef8:	00f70d63          	beq	a4,a5,20013f12 <__metal_controller_interrupt_vector_mode+0x3a>
20013efc:	fec42703          	lw	a4,-20(s0)
20013f00:	478d                	li	a5,3
20013f02:	00f70a63          	beq	a4,a5,20013f16 <__metal_controller_interrupt_vector_mode+0x3e>
20013f06:	fec42703          	lw	a4,-20(s0)
20013f0a:	4785                	li	a5,1
20013f0c:	00f70763          	beq	a4,a5,20013f1a <__metal_controller_interrupt_vector_mode+0x42>
20013f10:	a039                	j	20013f1e <__metal_controller_interrupt_vector_mode+0x46>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:307
    case METAL_MTVEC_CLIC:
        return METAL_SELECTIVE_VECTOR_MODE;
20013f12:	478d                	li	a5,3
20013f14:	a031                	j	20013f20 <__metal_controller_interrupt_vector_mode+0x48>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:309
    case METAL_MTVEC_CLIC_VECTORED:
        return METAL_HARDWARE_VECTOR_MODE;
20013f16:	4791                	li	a5,4
20013f18:	a021                	j	20013f20 <__metal_controller_interrupt_vector_mode+0x48>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:311
    case METAL_MTVEC_VECTORED:
        return METAL_VECTOR_MODE;
20013f1a:	4785                	li	a5,1
20013f1c:	a011                	j	20013f20 <__metal_controller_interrupt_vector_mode+0x48>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:313
    }
    return METAL_DIRECT_MODE;
20013f1e:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:314
}
20013f20:	853e                	mv	a0,a5
20013f22:	4472                	lw	s0,28(sp)
20013f24:	6105                	addi	sp,sp,32
20013f26:	8082                	ret

20013f28 <__metal_controller_interrupt_vector>:
__metal_controller_interrupt_vector():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:317

void __metal_controller_interrupt_vector(metal_vector_mode mode,
                                         void *vec_table) {
20013f28:	7179                	addi	sp,sp,-48
20013f2a:	d622                	sw	s0,44(sp)
20013f2c:	1800                	addi	s0,sp,48
20013f2e:	fca42e23          	sw	a0,-36(s0)
20013f32:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:320
    uintptr_t trap_entry, val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
20013f36:	305027f3          	csrr	a5,mtvec
20013f3a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:321
    val &= ~(METAL_MTVEC_CLIC_VECTORED | METAL_MTVEC_CLIC_RESERVED);
20013f3e:	fec42783          	lw	a5,-20(s0)
20013f42:	fc07f793          	andi	a5,a5,-64
20013f46:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:322
    trap_entry = (uintptr_t)vec_table;
20013f4a:	fd842783          	lw	a5,-40(s0)
20013f4e:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:324

    switch (mode) {
20013f52:	fdc42703          	lw	a4,-36(s0)
20013f56:	4791                	li	a5,4
20013f58:	06e7e063          	bltu	a5,a4,20013fb8 <__metal_controller_interrupt_vector+0x90>
20013f5c:	fdc42783          	lw	a5,-36(s0)
20013f60:	00279713          	slli	a4,a5,0x2
20013f64:	200107b7          	lui	a5,0x20010
20013f68:	5cc78793          	addi	a5,a5,1484 # 200105cc <__metal_driver_vtable_riscv_clint0+0x64>
20013f6c:	97ba                	add	a5,a5,a4
20013f6e:	439c                	lw	a5,0(a5)
20013f70:	8782                	jr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:327
    case METAL_SELECTIVE_NONVECTOR_MODE:
    case METAL_SELECTIVE_VECTOR_MODE:
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
20013f72:	fe842783          	lw	a5,-24(s0)
20013f76:	30779073          	csrw	mtvt,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:328
        __asm__ volatile("csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC));
20013f7a:	fec42783          	lw	a5,-20(s0)
20013f7e:	0027e793          	ori	a5,a5,2
20013f82:	30579073          	csrw	mtvec,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:329
        break;
20013f86:	a80d                	j	20013fb8 <__metal_controller_interrupt_vector+0x90>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:331
    case METAL_HARDWARE_VECTOR_MODE:
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
20013f88:	fe842783          	lw	a5,-24(s0)
20013f8c:	30779073          	csrw	mtvt,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:333
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC_VECTORED));
20013f90:	fec42783          	lw	a5,-20(s0)
20013f94:	0037e793          	ori	a5,a5,3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:332
        __asm__ volatile(
20013f98:	30579073          	csrw	mtvec,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:334
        break;
20013f9c:	a831                	j	20013fb8 <__metal_controller_interrupt_vector+0x90>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:337
    case METAL_VECTOR_MODE:
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(trap_entry | METAL_MTVEC_VECTORED));
20013f9e:	fe842783          	lw	a5,-24(s0)
20013fa2:	0017e793          	ori	a5,a5,1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:336
        __asm__ volatile(
20013fa6:	30579073          	csrw	mtvec,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:338
        break;
20013faa:	a039                	j	20013fb8 <__metal_controller_interrupt_vector+0x90>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:341
    case METAL_DIRECT_MODE:
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
20013fac:	fe842783          	lw	a5,-24(s0)
20013fb0:	9bf1                	andi	a5,a5,-4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:340
        __asm__ volatile(
20013fb2:	30579073          	csrw	mtvec,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:342
        break;
20013fb6:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:344
    }
}
20013fb8:	0001                	nop
20013fba:	5432                	lw	s0,44(sp)
20013fbc:	6145                	addi	sp,sp,48
20013fbe:	8082                	ret

20013fc0 <__metal_valid_interrupt_id>:
__metal_valid_interrupt_id():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:346

int __metal_valid_interrupt_id(int id) {
20013fc0:	1101                	addi	sp,sp,-32
20013fc2:	ce22                	sw	s0,28(sp)
20013fc4:	1000                	addi	s0,sp,32
20013fc6:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
20013fca:	fec42703          	lw	a4,-20(s0)
20013fce:	47ad                	li	a5,11
20013fd0:	04f70263          	beq	a4,a5,20014014 <__metal_valid_interrupt_id+0x54>
20013fd4:	fec42703          	lw	a4,-20(s0)
20013fd8:	47ad                	li	a5,11
20013fda:	00e7cd63          	blt	a5,a4,20013ff4 <__metal_valid_interrupt_id+0x34>
20013fde:	fec42703          	lw	a4,-20(s0)
20013fe2:	478d                	li	a5,3
20013fe4:	02f70863          	beq	a4,a5,20014014 <__metal_valid_interrupt_id+0x54>
20013fe8:	fec42703          	lw	a4,-20(s0)
20013fec:	479d                	li	a5,7
20013fee:	02f70363          	beq	a4,a5,20014014 <__metal_valid_interrupt_id+0x54>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:370
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
    case METAL_INTERRUPT_ID_BEU:
        return 1;
    default:
        break;
20013ff2:	a01d                	j	20014018 <__metal_valid_interrupt_id+0x58>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
20013ff4:	fec42703          	lw	a4,-20(s0)
20013ff8:	47c1                	li	a5,16
20013ffa:	00f74f63          	blt	a4,a5,20014018 <__metal_valid_interrupt_id+0x58>
20013ffe:	fec42703          	lw	a4,-20(s0)
20014002:	47fd                	li	a5,31
20014004:	00e7d863          	bge	a5,a4,20014014 <__metal_valid_interrupt_id+0x54>
20014008:	fec42703          	lw	a4,-20(s0)
2001400c:	08000793          	li	a5,128
20014010:	00f71463          	bne	a4,a5,20014018 <__metal_valid_interrupt_id+0x58>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:368
        return 1;
20014014:	4785                	li	a5,1
20014016:	a019                	j	2001401c <__metal_valid_interrupt_id+0x5c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:370
        break;
20014018:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:373
    }

    return 0;
2001401a:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:374
}
2001401c:	853e                	mv	a0,a5
2001401e:	4472                	lw	s0,28(sp)
20014020:	6105                	addi	sp,sp,32
20014022:	8082                	ret

20014024 <__metal_local_interrupt_enable>:
__metal_local_interrupt_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:377

int __metal_local_interrupt_enable(struct metal_interrupt *controller,
                                   metal_interrupt_id_e id, int enable) {
20014024:	7179                	addi	sp,sp,-48
20014026:	d606                	sw	ra,44(sp)
20014028:	d422                	sw	s0,40(sp)
2001402a:	1800                	addi	s0,sp,48
2001402c:	fca42e23          	sw	a0,-36(s0)
20014030:	fcb42c23          	sw	a1,-40(s0)
20014034:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:378
    int rc = 0;
20014038:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:380

    if (!controller) {
2001403c:	fdc42783          	lw	a5,-36(s0)
20014040:	e399                	bnez	a5,20014046 <__metal_local_interrupt_enable+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:381
        return -1;
20014042:	57fd                	li	a5,-1
20014044:	a849                	j	200140d6 <__metal_local_interrupt_enable+0xb2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:384
    }

    switch (id) {
20014046:	fd842703          	lw	a4,-40(s0)
2001404a:	47fd                	li	a5,31
2001404c:	08e7e063          	bltu	a5,a4,200140cc <__metal_local_interrupt_enable+0xa8>
20014050:	fd842783          	lw	a5,-40(s0)
20014054:	00279713          	slli	a4,a5,0x2
20014058:	200107b7          	lui	a5,0x20010
2001405c:	5e078793          	addi	a5,a5,1504 # 200105e0 <__metal_driver_vtable_riscv_clint0+0x78>
20014060:	97ba                	add	a5,a5,a4
20014062:	439c                	lw	a5,0(a5)
20014064:	8782                	jr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:386
    case METAL_INTERRUPT_ID_BASE:
        if (enable) {
20014066:	fd442783          	lw	a5,-44(s0)
2001406a:	c781                	beqz	a5,20014072 <__metal_local_interrupt_enable+0x4e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:387
            __metal_interrupt_global_enable();
2001406c:	f41fe0ef          	jal	ra,20012fac <__metal_interrupt_global_enable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:391
        } else {
            __metal_interrupt_global_disable();
        }
        break;
20014070:	a08d                	j	200140d2 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:389
            __metal_interrupt_global_disable();
20014072:	f53fe0ef          	jal	ra,20012fc4 <__metal_interrupt_global_disable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:391
        break;
20014076:	a8b1                	j	200140d2 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:393
    case METAL_INTERRUPT_ID_SW:
        if (enable) {
20014078:	fd442783          	lw	a5,-44(s0)
2001407c:	c781                	beqz	a5,20014084 <__metal_local_interrupt_enable+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:394
            __metal_interrupt_software_enable();
2001407e:	f5ffe0ef          	jal	ra,20012fdc <__metal_interrupt_software_enable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:398
        } else {
            __metal_interrupt_software_disable();
        }
        break;
20014082:	a881                	j	200140d2 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:396
            __metal_interrupt_software_disable();
20014084:	f71fe0ef          	jal	ra,20012ff4 <__metal_interrupt_software_disable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:398
        break;
20014088:	a0a9                	j	200140d2 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:400
    case METAL_INTERRUPT_ID_TMR:
        if (enable) {
2001408a:	fd442783          	lw	a5,-44(s0)
2001408e:	c781                	beqz	a5,20014096 <__metal_local_interrupt_enable+0x72>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:401
            __metal_interrupt_timer_enable();
20014090:	f7dfe0ef          	jal	ra,2001300c <__metal_interrupt_timer_enable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:405
        } else {
            __metal_interrupt_timer_disable();
        }
        break;
20014094:	a83d                	j	200140d2 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:403
            __metal_interrupt_timer_disable();
20014096:	f91fe0ef          	jal	ra,20013026 <__metal_interrupt_timer_disable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:405
        break;
2001409a:	a825                	j	200140d2 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:407
    case METAL_INTERRUPT_ID_EXT:
        if (enable) {
2001409c:	fd442783          	lw	a5,-44(s0)
200140a0:	c781                	beqz	a5,200140a8 <__metal_local_interrupt_enable+0x84>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:408
            __metal_interrupt_external_enable();
200140a2:	f9ffe0ef          	jal	ra,20013040 <__metal_interrupt_external_enable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:412
        } else {
            __metal_interrupt_external_disable();
        }
        break;
200140a6:	a035                	j	200140d2 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:410
            __metal_interrupt_external_disable();
200140a8:	fb5fe0ef          	jal	ra,2001305c <__metal_interrupt_external_disable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:412
        break;
200140ac:	a01d                	j	200140d2 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:429
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        if (enable) {
200140ae:	fd442783          	lw	a5,-44(s0)
200140b2:	c799                	beqz	a5,200140c0 <__metal_local_interrupt_enable+0x9c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:430
            __metal_interrupt_local_enable(id);
200140b4:	fd842783          	lw	a5,-40(s0)
200140b8:	853e                	mv	a0,a5
200140ba:	fbffe0ef          	jal	ra,20013078 <__metal_interrupt_local_enable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:434
        } else {
            __metal_interrupt_local_disable(id);
        }
        break;
200140be:	a811                	j	200140d2 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:432
            __metal_interrupt_local_disable(id);
200140c0:	fd842783          	lw	a5,-40(s0)
200140c4:	853e                	mv	a0,a5
200140c6:	fdffe0ef          	jal	ra,200130a4 <__metal_interrupt_local_disable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:434
        break;
200140ca:	a021                	j	200140d2 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:436
    default:
        rc = -1;
200140cc:	57fd                	li	a5,-1
200140ce:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:438
    }
    return rc;
200140d2:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:439
}
200140d6:	853e                	mv	a0,a5
200140d8:	50b2                	lw	ra,44(sp)
200140da:	5422                	lw	s0,40(sp)
200140dc:	6145                	addi	sp,sp,48
200140de:	8082                	ret

200140e0 <__metal_exception_register>:
__metal_exception_register():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:442

int __metal_exception_register(struct metal_interrupt *controller, int ecode,
                               metal_exception_handler_t isr) {
200140e0:	7179                	addi	sp,sp,-48
200140e2:	d622                	sw	s0,44(sp)
200140e4:	1800                	addi	s0,sp,48
200140e6:	fca42e23          	sw	a0,-36(s0)
200140ea:	fcb42c23          	sw	a1,-40(s0)
200140ee:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:443
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
200140f2:	fdc42783          	lw	a5,-36(s0)
200140f6:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:445

    if ((ecode < METAL_MAX_EXCEPTION_CODE) && isr) {
200140fa:	fd842703          	lw	a4,-40(s0)
200140fe:	47ad                	li	a5,11
20014100:	02e7c263          	blt	a5,a4,20014124 <__metal_exception_register+0x44>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:445 (discriminator 1)
20014104:	fd442783          	lw	a5,-44(s0)
20014108:	cf91                	beqz	a5,20014124 <__metal_exception_register+0x44>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:446
        intc->metal_exception_table[ecode] = isr;
2001410a:	fec42703          	lw	a4,-20(s0)
2001410e:	fd842783          	lw	a5,-40(s0)
20014112:	0e878793          	addi	a5,a5,232
20014116:	078a                	slli	a5,a5,0x2
20014118:	97ba                	add	a5,a5,a4
2001411a:	fd442703          	lw	a4,-44(s0)
2001411e:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:447
        return 0;
20014120:	4781                	li	a5,0
20014122:	a011                	j	20014126 <__metal_exception_register+0x46>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:449
    }
    return -1;
20014124:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:450
}
20014126:	853e                	mv	a0,a5
20014128:	5432                	lw	s0,44(sp)
2001412a:	6145                	addi	sp,sp,48
2001412c:	8082                	ret

2001412e <__metal_driver_riscv_cpu_controller_interrupt_init>:
__metal_driver_riscv_cpu_controller_interrupt_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:454

extern void early_trap_vector(void);
void __metal_driver_riscv_cpu_controller_interrupt_init(
    struct metal_interrupt *controller) {
2001412e:	7179                	addi	sp,sp,-48
20014130:	d606                	sw	ra,44(sp)
20014132:	d422                	sw	s0,40(sp)
20014134:	1800                	addi	s0,sp,48
20014136:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:455
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
2001413a:	fdc42783          	lw	a5,-36(s0)
2001413e:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:457

    if (!intc->init_done) {
20014142:	fe442783          	lw	a5,-28(s0)
20014146:	43dc                	lw	a5,4(a5)
20014148:	efdd                	bnez	a5,20014206 <__metal_driver_riscv_cpu_controller_interrupt_init+0xd8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:459
        /* Default to use direct interrupt, setup sw cb table*/
        for (int i = 0; i < METAL_MAX_MI; i++) {
2001414a:	fe042623          	sw	zero,-20(s0)
2001414e:	a0b9                	j	2001419c <__metal_driver_riscv_cpu_controller_interrupt_init+0x6e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:460 (discriminator 3)
            intc->metal_int_table[i].handler = NULL;
20014150:	fe442683          	lw	a3,-28(s0)
20014154:	fec42703          	lw	a4,-20(s0)
20014158:	87ba                	mv	a5,a4
2001415a:	0786                	slli	a5,a5,0x1
2001415c:	97ba                	add	a5,a5,a4
2001415e:	078e                	slli	a5,a5,0x3
20014160:	97b6                	add	a5,a5,a3
20014162:	0807a823          	sw	zero,144(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:461 (discriminator 3)
            intc->metal_int_table[i].sub_int = NULL;
20014166:	fe442683          	lw	a3,-28(s0)
2001416a:	fec42703          	lw	a4,-20(s0)
2001416e:	87ba                	mv	a5,a4
20014170:	0786                	slli	a5,a5,0x1
20014172:	97ba                	add	a5,a5,a4
20014174:	078e                	slli	a5,a5,0x3
20014176:	97b6                	add	a5,a5,a3
20014178:	0807aa23          	sw	zero,148(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:462 (discriminator 3)
            intc->metal_int_table[i].exint_data = NULL;
2001417c:	fe442683          	lw	a3,-28(s0)
20014180:	fec42703          	lw	a4,-20(s0)
20014184:	87ba                	mv	a5,a4
20014186:	0786                	slli	a5,a5,0x1
20014188:	97ba                	add	a5,a5,a4
2001418a:	078e                	slli	a5,a5,0x3
2001418c:	97b6                	add	a5,a5,a3
2001418e:	0807ac23          	sw	zero,152(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 3)
        for (int i = 0; i < METAL_MAX_MI; i++) {
20014192:	fec42783          	lw	a5,-20(s0)
20014196:	0785                	addi	a5,a5,1
20014198:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 1)
2001419c:	fec42703          	lw	a4,-20(s0)
200141a0:	47fd                	li	a5,31
200141a2:	fae7d7e3          	bge	a5,a4,20014150 <__metal_driver_riscv_cpu_controller_interrupt_init+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:465
        }

        for (int i = 0; i < METAL_MAX_ME; i++) {
200141a6:	fe042423          	sw	zero,-24(s0)
200141aa:	a01d                	j	200141d0 <__metal_driver_riscv_cpu_controller_interrupt_init+0xa2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:466 (discriminator 3)
            intc->metal_exception_table[i] = __metal_default_exception_handler;
200141ac:	fe442703          	lw	a4,-28(s0)
200141b0:	fe842783          	lw	a5,-24(s0)
200141b4:	0e878793          	addi	a5,a5,232
200141b8:	078a                	slli	a5,a5,0x2
200141ba:	97ba                	add	a5,a5,a4
200141bc:	20013737          	lui	a4,0x20013
200141c0:	0d070713          	addi	a4,a4,208 # 200130d0 <__metal_default_exception_handler>
200141c4:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 3)
        for (int i = 0; i < METAL_MAX_ME; i++) {
200141c6:	fe842783          	lw	a5,-24(s0)
200141ca:	0785                	addi	a5,a5,1
200141cc:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 1)
200141d0:	fe842703          	lw	a4,-24(s0)
200141d4:	47ad                	li	a5,11
200141d6:	fce7dbe3          	bge	a5,a4,200141ac <__metal_driver_riscv_cpu_controller_interrupt_init+0x7e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:475
         * Set the real trap handler if the value of mtvec is equal to
         * early_trap_vector. If mtvec is not equal to early_trap_vector,
         * that means user has own trap handler, then we don't overwrite it.
         */
        uintptr_t mtvec;
        __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
200141da:	305027f3          	csrr	a5,mtvec
200141de:	fef42023          	sw	a5,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:476
        if (mtvec == (uintptr_t)&early_trap_vector) {
200141e2:	200107b7          	lui	a5,0x20010
200141e6:	13c78793          	addi	a5,a5,316 # 2001013c <early_trap_vector>
200141ea:	fe042703          	lw	a4,-32(s0)
200141ee:	00f71863          	bne	a4,a5,200141fe <__metal_driver_riscv_cpu_controller_interrupt_init+0xd0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:477
            __metal_controller_interrupt_vector(
200141f2:	200137b7          	lui	a5,0x20013
200141f6:	38078593          	addi	a1,a5,896 # 20013380 <__metal_exception_handler>
200141fa:	4501                	li	a0,0
200141fc:	3335                	jal	20013f28 <__metal_controller_interrupt_vector>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:481
                METAL_DIRECT_MODE,
                (void *)(uintptr_t)&__metal_exception_handler);
        }
        intc->init_done = 1;
200141fe:	fe442783          	lw	a5,-28(s0)
20014202:	4705                	li	a4,1
20014204:	c3d8                	sw	a4,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:483
    }
}
20014206:	0001                	nop
20014208:	50b2                	lw	ra,44(sp)
2001420a:	5422                	lw	s0,40(sp)
2001420c:	6145                	addi	sp,sp,48
2001420e:	8082                	ret

20014210 <__metal_driver_riscv_cpu_controller_interrupt_register>:
__metal_driver_riscv_cpu_controller_interrupt_register():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:487

int __metal_driver_riscv_cpu_controller_interrupt_register(
    struct metal_interrupt *controller, int id, metal_interrupt_handler_t isr,
    void *priv) {
20014210:	7179                	addi	sp,sp,-48
20014212:	d606                	sw	ra,44(sp)
20014214:	d422                	sw	s0,40(sp)
20014216:	1800                	addi	s0,sp,48
20014218:	fca42e23          	sw	a0,-36(s0)
2001421c:	fcb42c23          	sw	a1,-40(s0)
20014220:	fcc42a23          	sw	a2,-44(s0)
20014224:	fcd42823          	sw	a3,-48(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:488
    int rc = 0;
20014228:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:489
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
2001422c:	fdc42783          	lw	a5,-36(s0)
20014230:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:491

    if (!__metal_valid_interrupt_id(id)) {
20014234:	fd842503          	lw	a0,-40(s0)
20014238:	3361                	jal	20013fc0 <__metal_valid_interrupt_id>
2001423a:	87aa                	mv	a5,a0
2001423c:	e399                	bnez	a5,20014242 <__metal_driver_riscv_cpu_controller_interrupt_register+0x32>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:492
        return -11;
2001423e:	57d5                	li	a5,-11
20014240:	aa71                	j	200143dc <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:494
    }
    if ((id == METAL_INTERRUPT_ID_BEU) &&
20014242:	fd842703          	lw	a4,-40(s0)
20014246:	08000793          	li	a5,128
2001424a:	00f71763          	bne	a4,a5,20014258 <__metal_driver_riscv_cpu_controller_interrupt_register+0x48>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:495 (discriminator 1)
        (__metal_controller_interrupt_vector_mode() != METAL_DIRECT_MODE)) {
2001424e:	3169                	jal	20013ed8 <__metal_controller_interrupt_vector_mode>
20014250:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:494 (discriminator 1)
    if ((id == METAL_INTERRUPT_ID_BEU) &&
20014252:	c399                	beqz	a5,20014258 <__metal_driver_riscv_cpu_controller_interrupt_register+0x48>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:498
        /* Only allow registration of the bus error unit interrupt if
         * interrupt vectoring if off */
        return -13;
20014254:	57cd                	li	a5,-13
20014256:	a259                	j	200143dc <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:501
    }

    if (isr) {
20014258:	fd442783          	lw	a5,-44(s0)
2001425c:	cfb9                	beqz	a5,200142ba <__metal_driver_riscv_cpu_controller_interrupt_register+0xaa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:502
        if (id == METAL_INTERRUPT_ID_BEU) {
2001425e:	fd842703          	lw	a4,-40(s0)
20014262:	08000793          	li	a5,128
20014266:	00f71f63          	bne	a4,a5,20014284 <__metal_driver_riscv_cpu_controller_interrupt_register+0x74>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:503
            intc->metal_int_beu.handler = isr;
2001426a:	fe842783          	lw	a5,-24(s0)
2001426e:	fd442703          	lw	a4,-44(s0)
20014272:	38e7a823          	sw	a4,912(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:504
            intc->metal_int_beu.exint_data = priv;
20014276:	fe842783          	lw	a5,-24(s0)
2001427a:	fd042703          	lw	a4,-48(s0)
2001427e:	38e7ac23          	sw	a4,920(a5)
20014282:	aa99                	j	200143d8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:506
        } else {
            intc->metal_int_table[id].handler = isr;
20014284:	fe842683          	lw	a3,-24(s0)
20014288:	fd842703          	lw	a4,-40(s0)
2001428c:	87ba                	mv	a5,a4
2001428e:	0786                	slli	a5,a5,0x1
20014290:	97ba                	add	a5,a5,a4
20014292:	078e                	slli	a5,a5,0x3
20014294:	97b6                	add	a5,a5,a3
20014296:	fd442703          	lw	a4,-44(s0)
2001429a:	08e7a823          	sw	a4,144(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:507
            intc->metal_int_table[id].exint_data = priv;
2001429e:	fe842683          	lw	a3,-24(s0)
200142a2:	fd842703          	lw	a4,-40(s0)
200142a6:	87ba                	mv	a5,a4
200142a8:	0786                	slli	a5,a5,0x1
200142aa:	97ba                	add	a5,a5,a4
200142ac:	078e                	slli	a5,a5,0x3
200142ae:	97b6                	add	a5,a5,a3
200142b0:	fd042703          	lw	a4,-48(s0)
200142b4:	08e7ac23          	sw	a4,152(a5)
200142b8:	a205                	j	200143d8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:510
        }
    } else {
        switch (id) {
200142ba:	fd842703          	lw	a4,-40(s0)
200142be:	47ad                	li	a5,11
200142c0:	0cf70c63          	beq	a4,a5,20014398 <__metal_driver_riscv_cpu_controller_interrupt_register+0x188>
200142c4:	fd842703          	lw	a4,-40(s0)
200142c8:	47ad                	li	a5,11
200142ca:	00e7cd63          	blt	a5,a4,200142e4 <__metal_driver_riscv_cpu_controller_interrupt_register+0xd4>
200142ce:	fd842703          	lw	a4,-40(s0)
200142d2:	478d                	li	a5,3
200142d4:	02f70963          	beq	a4,a5,20014306 <__metal_driver_riscv_cpu_controller_interrupt_register+0xf6>
200142d8:	fd842703          	lw	a4,-40(s0)
200142dc:	479d                	li	a5,7
200142de:	06f70163          	beq	a4,a5,20014340 <__metal_driver_riscv_cpu_controller_interrupt_register+0x130>
200142e2:	a8c5                	j	200143d2 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c2>
200142e4:	fd842703          	lw	a4,-40(s0)
200142e8:	47c1                	li	a5,16
200142ea:	0ef74463          	blt	a4,a5,200143d2 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c2>
200142ee:	fd842703          	lw	a4,-40(s0)
200142f2:	47fd                	li	a5,31
200142f4:	0ae7d263          	bge	a5,a4,20014398 <__metal_driver_riscv_cpu_controller_interrupt_register+0x188>
200142f8:	fd842703          	lw	a4,-40(s0)
200142fc:	08000793          	li	a5,128
20014300:	06f70d63          	beq	a4,a5,2001437a <__metal_driver_riscv_cpu_controller_interrupt_register+0x16a>
20014304:	a0f9                	j	200143d2 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:512
        case METAL_INTERRUPT_ID_SW:
            intc->metal_int_table[id].handler = __metal_default_sw_handler;
20014306:	fe842683          	lw	a3,-24(s0)
2001430a:	fd842703          	lw	a4,-40(s0)
2001430e:	87ba                	mv	a5,a4
20014310:	0786                	slli	a5,a5,0x1
20014312:	97ba                	add	a5,a5,a4
20014314:	078e                	slli	a5,a5,0x3
20014316:	97b6                	add	a5,a5,a3
20014318:	20013737          	lui	a4,0x20013
2001431c:	1c070713          	addi	a4,a4,448 # 200131c0 <__metal_default_sw_handler>
20014320:	08e7a823          	sw	a4,144(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:513
            intc->metal_int_table[id].sub_int = priv;
20014324:	fe842683          	lw	a3,-24(s0)
20014328:	fd842703          	lw	a4,-40(s0)
2001432c:	87ba                	mv	a5,a4
2001432e:	0786                	slli	a5,a5,0x1
20014330:	97ba                	add	a5,a5,a4
20014332:	078e                	slli	a5,a5,0x3
20014334:	97b6                	add	a5,a5,a3
20014336:	fd042703          	lw	a4,-48(s0)
2001433a:	08e7aa23          	sw	a4,148(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:514
            break;
2001433e:	a869                	j	200143d8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:516
        case METAL_INTERRUPT_ID_TMR:
            intc->metal_int_table[id].handler = __metal_default_timer_handler;
20014340:	fe842683          	lw	a3,-24(s0)
20014344:	fd842703          	lw	a4,-40(s0)
20014348:	87ba                	mv	a5,a4
2001434a:	0786                	slli	a5,a5,0x1
2001434c:	97ba                	add	a5,a5,a4
2001434e:	078e                	slli	a5,a5,0x3
20014350:	97b6                	add	a5,a5,a3
20014352:	20013737          	lui	a4,0x20013
20014356:	2d070713          	addi	a4,a4,720 # 200132d0 <__metal_default_timer_handler>
2001435a:	08e7a823          	sw	a4,144(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:517
            intc->metal_int_table[id].sub_int = priv;
2001435e:	fe842683          	lw	a3,-24(s0)
20014362:	fd842703          	lw	a4,-40(s0)
20014366:	87ba                	mv	a5,a4
20014368:	0786                	slli	a5,a5,0x1
2001436a:	97ba                	add	a5,a5,a4
2001436c:	078e                	slli	a5,a5,0x3
2001436e:	97b6                	add	a5,a5,a3
20014370:	fd042703          	lw	a4,-48(s0)
20014374:	08e7aa23          	sw	a4,148(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:518
            break;
20014378:	a085                	j	200143d8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:520
        case METAL_INTERRUPT_ID_BEU:
            intc->metal_int_beu.handler = __metal_default_beu_handler;
2001437a:	fe842783          	lw	a5,-24(s0)
2001437e:	20013737          	lui	a4,0x20013
20014382:	2ba70713          	addi	a4,a4,698 # 200132ba <__metal_default_beu_handler>
20014386:	38e7a823          	sw	a4,912(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:521
            intc->metal_int_beu.exint_data = priv;
2001438a:	fe842783          	lw	a5,-24(s0)
2001438e:	fd042703          	lw	a4,-48(s0)
20014392:	38e7ac23          	sw	a4,920(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:522
            break;
20014396:	a089                	j	200143d8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:540
        case METAL_INTERRUPT_ID_LC11:
        case METAL_INTERRUPT_ID_LC12:
        case METAL_INTERRUPT_ID_LC13:
        case METAL_INTERRUPT_ID_LC14:
        case METAL_INTERRUPT_ID_LC15:
            intc->metal_int_table[id].handler =
20014398:	fe842683          	lw	a3,-24(s0)
2001439c:	fd842703          	lw	a4,-40(s0)
200143a0:	87ba                	mv	a5,a4
200143a2:	0786                	slli	a5,a5,0x1
200143a4:	97ba                	add	a5,a5,a4
200143a6:	078e                	slli	a5,a5,0x3
200143a8:	97b6                	add	a5,a5,a3
200143aa:	20013737          	lui	a4,0x20013
200143ae:	0e870713          	addi	a4,a4,232 # 200130e8 <__metal_default_interrupt_handler>
200143b2:	08e7a823          	sw	a4,144(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:542
                __metal_default_interrupt_handler;
            intc->metal_int_table[id].sub_int = priv;
200143b6:	fe842683          	lw	a3,-24(s0)
200143ba:	fd842703          	lw	a4,-40(s0)
200143be:	87ba                	mv	a5,a4
200143c0:	0786                	slli	a5,a5,0x1
200143c2:	97ba                	add	a5,a5,a4
200143c4:	078e                	slli	a5,a5,0x3
200143c6:	97b6                	add	a5,a5,a3
200143c8:	fd042703          	lw	a4,-48(s0)
200143cc:	08e7aa23          	sw	a4,148(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:543
            break;
200143d0:	a021                	j	200143d8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:545
        default:
            rc = -12;
200143d2:	57d1                	li	a5,-12
200143d4:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:548
        }
    }
    return rc;
200143d8:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:549
}
200143dc:	853e                	mv	a0,a5
200143de:	50b2                	lw	ra,44(sp)
200143e0:	5422                	lw	s0,40(sp)
200143e2:	6145                	addi	sp,sp,48
200143e4:	8082                	ret

200143e6 <__metal_driver_riscv_cpu_controller_interrupt_enable>:
__metal_driver_riscv_cpu_controller_interrupt_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:552

int __metal_driver_riscv_cpu_controller_interrupt_enable(
    struct metal_interrupt *controller, int id) {
200143e6:	1101                	addi	sp,sp,-32
200143e8:	ce06                	sw	ra,28(sp)
200143ea:	cc22                	sw	s0,24(sp)
200143ec:	1000                	addi	s0,sp,32
200143ee:	fea42623          	sw	a0,-20(s0)
200143f2:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:553
    return __metal_local_interrupt_enable(controller, id, METAL_ENABLE);
200143f6:	fe842783          	lw	a5,-24(s0)
200143fa:	4605                	li	a2,1
200143fc:	85be                	mv	a1,a5
200143fe:	fec42503          	lw	a0,-20(s0)
20014402:	c23ff0ef          	jal	ra,20014024 <__metal_local_interrupt_enable>
20014406:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:554
}
20014408:	853e                	mv	a0,a5
2001440a:	40f2                	lw	ra,28(sp)
2001440c:	4462                	lw	s0,24(sp)
2001440e:	6105                	addi	sp,sp,32
20014410:	8082                	ret

20014412 <__metal_driver_riscv_cpu_controller_interrupt_disable>:
__metal_driver_riscv_cpu_controller_interrupt_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:557

int __metal_driver_riscv_cpu_controller_interrupt_disable(
    struct metal_interrupt *controller, int id) {
20014412:	1101                	addi	sp,sp,-32
20014414:	ce06                	sw	ra,28(sp)
20014416:	cc22                	sw	s0,24(sp)
20014418:	1000                	addi	s0,sp,32
2001441a:	fea42623          	sw	a0,-20(s0)
2001441e:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:558
    return __metal_local_interrupt_enable(controller, id, METAL_DISABLE);
20014422:	fe842783          	lw	a5,-24(s0)
20014426:	4601                	li	a2,0
20014428:	85be                	mv	a1,a5
2001442a:	fec42503          	lw	a0,-20(s0)
2001442e:	bf7ff0ef          	jal	ra,20014024 <__metal_local_interrupt_enable>
20014432:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:559
}
20014434:	853e                	mv	a0,a5
20014436:	40f2                	lw	ra,28(sp)
20014438:	4462                	lw	s0,24(sp)
2001443a:	6105                	addi	sp,sp,32
2001443c:	8082                	ret

2001443e <__metal_driver_riscv_cpu_controller_get_vector_mode>:
__metal_driver_riscv_cpu_controller_get_vector_mode():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:591
    }
    return -1;
}

metal_vector_mode __metal_driver_riscv_cpu_controller_get_vector_mode(
    struct metal_interrupt *controller) {
2001443e:	1101                	addi	sp,sp,-32
20014440:	ce06                	sw	ra,28(sp)
20014442:	cc22                	sw	s0,24(sp)
20014444:	1000                	addi	s0,sp,32
20014446:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:592
    return __metal_controller_interrupt_vector_mode();
2001444a:	a8fff0ef          	jal	ra,20013ed8 <__metal_controller_interrupt_vector_mode>
2001444e:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:593
}
20014450:	853e                	mv	a0,a5
20014452:	40f2                	lw	ra,28(sp)
20014454:	4462                	lw	s0,24(sp)
20014456:	6105                	addi	sp,sp,32
20014458:	8082                	ret

2001445a <__metal_driver_riscv_cpu_controller_set_vector_mode>:
__metal_driver_riscv_cpu_controller_set_vector_mode():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:596

int __metal_driver_riscv_cpu_controller_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
2001445a:	1101                	addi	sp,sp,-32
2001445c:	ce06                	sw	ra,28(sp)
2001445e:	cc22                	sw	s0,24(sp)
20014460:	1000                	addi	s0,sp,32
20014462:	fea42623          	sw	a0,-20(s0)
20014466:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:598

    if (mode == METAL_DIRECT_MODE) {
2001446a:	fe842783          	lw	a5,-24(s0)
2001446e:	eb99                	bnez	a5,20014484 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x2a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:599
        __metal_controller_interrupt_vector(
20014470:	200137b7          	lui	a5,0x20013
20014474:	38078593          	addi	a1,a5,896 # 20013380 <__metal_exception_handler>
20014478:	fe842503          	lw	a0,-24(s0)
2001447c:	aadff0ef          	jal	ra,20013f28 <__metal_controller_interrupt_vector>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:601
            mode, (void *)(uintptr_t)&__metal_exception_handler);
        return 0;
20014480:	4781                	li	a5,0
20014482:	a00d                	j	200144a4 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:603
    }
    if (mode == METAL_VECTOR_MODE) {
20014484:	fe842703          	lw	a4,-24(s0)
20014488:	4785                	li	a5,1
2001448a:	00f71c63          	bne	a4,a5,200144a2 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x48>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:604
        __metal_controller_interrupt_vector(
2001448e:	200187b7          	lui	a5,0x20018
20014492:	b0078593          	addi	a1,a5,-1280 # 20017b00 <__metal_vector_table>
20014496:	fe842503          	lw	a0,-24(s0)
2001449a:	a8fff0ef          	jal	ra,20013f28 <__metal_controller_interrupt_vector>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:606
            mode, (void *)(uintptr_t)__metal_vector_table);
        return 0;
2001449e:	4781                	li	a5,0
200144a0:	a011                	j	200144a4 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:608
    }
    return -1;
200144a2:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:609
}
200144a4:	853e                	mv	a0,a5
200144a6:	40f2                	lw	ra,28(sp)
200144a8:	4462                	lw	s0,24(sp)
200144aa:	6105                	addi	sp,sp,32
200144ac:	8082                	ret

200144ae <__metal_driver_riscv_cpu_controller_command_request>:
__metal_driver_riscv_cpu_controller_command_request():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:612

int __metal_driver_riscv_cpu_controller_command_request(
    struct metal_interrupt *controller, int cmd, void *data) {
200144ae:	1101                	addi	sp,sp,-32
200144b0:	ce22                	sw	s0,28(sp)
200144b2:	1000                	addi	s0,sp,32
200144b4:	fea42623          	sw	a0,-20(s0)
200144b8:	feb42423          	sw	a1,-24(s0)
200144bc:	fec42223          	sw	a2,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:615
    /* NOP for now, unless local interrupt lines the like of clic, clint, plic
     */
    return 0;
200144c0:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:616
}
200144c2:	853e                	mv	a0,a5
200144c4:	4472                	lw	s0,28(sp)
200144c6:	6105                	addi	sp,sp,32
200144c8:	8082                	ret

200144ca <__metal_driver_cpu_mcycle_get>:
__metal_driver_cpu_mcycle_get():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:620

/* CPU driver !!! */

unsigned long long __metal_driver_cpu_mcycle_get(struct metal_cpu *cpu) {
200144ca:	7139                	addi	sp,sp,-64
200144cc:	de22                	sw	s0,60(sp)
200144ce:	0080                	addi	s0,sp,64
200144d0:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:621
    unsigned long long val = 0;
200144d4:	4301                	li	t1,0
200144d6:	4381                	li	t2,0
200144d8:	fe642423          	sw	t1,-24(s0)
200144dc:	fe742623          	sw	t2,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:627 (discriminator 1)

#if __riscv_xlen == 32
    unsigned long hi, hi1, lo;

    do {
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi));
200144e0:	b8002573          	csrr	a0,mcycleh
200144e4:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:628 (discriminator 1)
        __asm__ volatile("csrr %0, mcycle" : "=r"(lo));
200144e8:	b0002573          	csrr	a0,mcycle
200144ec:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:629 (discriminator 1)
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi1));
200144f0:	b8002573          	csrr	a0,mcycleh
200144f4:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:632 (discriminator 1)
        /* hi != hi1 means mcycle overflow during we get value,
         * so we must retry. */
    } while (hi != hi1);
200144f8:	fe442883          	lw	a7,-28(s0)
200144fc:	fdc42503          	lw	a0,-36(s0)
20014500:	fea890e3          	bne	a7,a0,200144e0 <__metal_driver_cpu_mcycle_get+0x16>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:634

    val = ((unsigned long long)hi << 32) | lo;
20014504:	fe442503          	lw	a0,-28(s0)
20014508:	85aa                	mv	a1,a0
2001450a:	4601                	li	a2,0
2001450c:	00059813          	slli	a6,a1,0x0
20014510:	4781                	li	a5,0
20014512:	fe042603          	lw	a2,-32(s0)
20014516:	86b2                	mv	a3,a2
20014518:	4701                	li	a4,0
2001451a:	00d7e633          	or	a2,a5,a3
2001451e:	fec42423          	sw	a2,-24(s0)
20014522:	00e867b3          	or	a5,a6,a4
20014526:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:639
#else
    __asm__ volatile("csrr %0, mcycle" : "=r"(val));
#endif

    return val;
2001452a:	fe842783          	lw	a5,-24(s0)
2001452e:	fec42803          	lw	a6,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:640
}
20014532:	853e                	mv	a0,a5
20014534:	85c2                	mv	a1,a6
20014536:	5472                	lw	s0,60(sp)
20014538:	6121                	addi	sp,sp,64
2001453a:	8082                	ret

2001453c <__metal_driver_cpu_timebase_get>:
__metal_driver_cpu_timebase_get():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:642

unsigned long long __metal_driver_cpu_timebase_get(struct metal_cpu *cpu) {
2001453c:	7179                	addi	sp,sp,-48
2001453e:	d606                	sw	ra,44(sp)
20014540:	d422                	sw	s0,40(sp)
20014542:	d24a                	sw	s2,36(sp)
20014544:	d04e                	sw	s3,32(sp)
20014546:	1800                	addi	s0,sp,48
20014548:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:644
    int timebase;
    if (!cpu) {
2001454c:	fdc42783          	lw	a5,-36(s0)
20014550:	e781                	bnez	a5,20014558 <__metal_driver_cpu_timebase_get+0x1c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:645
        return 0;
20014552:	4901                	li	s2,0
20014554:	4981                	li	s3,0
20014556:	a821                	j	2001456e <__metal_driver_cpu_timebase_get+0x32>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:648
    }

    timebase = __metal_driver_cpu_timebase((struct metal_cpu *)cpu);
20014558:	fdc42503          	lw	a0,-36(s0)
2001455c:	98ffe0ef          	jal	ra,20012eea <__metal_driver_cpu_timebase>
20014560:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:649
    return timebase;
20014564:	fec42783          	lw	a5,-20(s0)
20014568:	893e                	mv	s2,a5
2001456a:	87fd                	srai	a5,a5,0x1f
2001456c:	89be                	mv	s3,a5
2001456e:	87ca                	mv	a5,s2
20014570:	884e                	mv	a6,s3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:650
}
20014572:	853e                	mv	a0,a5
20014574:	85c2                	mv	a1,a6
20014576:	50b2                	lw	ra,44(sp)
20014578:	5422                	lw	s0,40(sp)
2001457a:	5912                	lw	s2,36(sp)
2001457c:	5982                	lw	s3,32(sp)
2001457e:	6145                	addi	sp,sp,48
20014580:	8082                	ret

20014582 <__metal_driver_cpu_mtime_get>:
__metal_driver_cpu_mtime_get():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:652

unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu) {
20014582:	7179                	addi	sp,sp,-48
20014584:	d606                	sw	ra,44(sp)
20014586:	d422                	sw	s0,40(sp)
20014588:	1800                	addi	s0,sp,48
2001458a:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:653
    unsigned long long time = 0;
2001458e:	4781                	li	a5,0
20014590:	4801                	li	a6,0
20014592:	fef42023          	sw	a5,-32(s0)
20014596:	ff042223          	sw	a6,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:657
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
2001459a:	fdc42503          	lw	a0,-36(s0)
2001459e:	977fe0ef          	jal	ra,20012f14 <__metal_driver_cpu_interrupt_controller>
200145a2:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:659

    if (intc) {
200145a6:	fec42783          	lw	a5,-20(s0)
200145aa:	c78d                	beqz	a5,200145d4 <__metal_driver_cpu_mtime_get+0x52>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:660
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
200145ac:	fec42783          	lw	a5,-20(s0)
200145b0:	13c7a783          	lw	a5,316(a5)
200145b4:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:661
        if (tmr_intc) {
200145b8:	fe842783          	lw	a5,-24(s0)
200145bc:	cf81                	beqz	a5,200145d4 <__metal_driver_cpu_mtime_get+0x52>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:662
            tmr_intc->vtable->command_request(tmr_intc, METAL_TIMER_MTIME_GET,
200145be:	fe842783          	lw	a5,-24(s0)
200145c2:	439c                	lw	a5,0(a5)
200145c4:	47f8                	lw	a4,76(a5)
200145c6:	fe040793          	addi	a5,s0,-32
200145ca:	863e                	mv	a2,a5
200145cc:	4585                	li	a1,1
200145ce:	fe842503          	lw	a0,-24(s0)
200145d2:	9702                	jalr	a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:666
                                              &time);
        }
    }
    return time;
200145d4:	fe042783          	lw	a5,-32(s0)
200145d8:	fe442803          	lw	a6,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:667
}
200145dc:	853e                	mv	a0,a5
200145de:	85c2                	mv	a1,a6
200145e0:	50b2                	lw	ra,44(sp)
200145e2:	5422                	lw	s0,40(sp)
200145e4:	6145                	addi	sp,sp,48
200145e6:	8082                	ret

200145e8 <__metal_driver_cpu_mtimecmp_set>:
__metal_driver_cpu_mtimecmp_set():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:670

int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time) {
200145e8:	7179                	addi	sp,sp,-48
200145ea:	d606                	sw	ra,44(sp)
200145ec:	d422                	sw	s0,40(sp)
200145ee:	d226                	sw	s1,36(sp)
200145f0:	1800                	addi	s0,sp,48
200145f2:	fca42e23          	sw	a0,-36(s0)
200145f6:	fcb42823          	sw	a1,-48(s0)
200145fa:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:671
    int rc = -1;
200145fe:	57fd                	li	a5,-1
20014600:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:675
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20014604:	fdc42503          	lw	a0,-36(s0)
20014608:	90dfe0ef          	jal	ra,20012f14 <__metal_driver_cpu_interrupt_controller>
2001460c:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:677

    if (intc) {
20014610:	fe842783          	lw	a5,-24(s0)
20014614:	cf8d                	beqz	a5,2001464e <__metal_driver_cpu_mtimecmp_set+0x66>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:678
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20014616:	fe842783          	lw	a5,-24(s0)
2001461a:	13c7a783          	lw	a5,316(a5)
2001461e:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:679
        if (tmr_intc) {
20014622:	fe442783          	lw	a5,-28(s0)
20014626:	c785                	beqz	a5,2001464e <__metal_driver_cpu_mtimecmp_set+0x66>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:680
            rc = tmr_intc->vtable->mtimecmp_set(
20014628:	fe442783          	lw	a5,-28(s0)
2001462c:	439c                	lw	a5,0(a5)
2001462e:	4ba4                	lw	s1,80(a5)
20014630:	fdc42503          	lw	a0,-36(s0)
20014634:	893fe0ef          	jal	ra,20012ec6 <__metal_driver_cpu_hartid>
20014638:	87aa                	mv	a5,a0
2001463a:	fd042603          	lw	a2,-48(s0)
2001463e:	fd442683          	lw	a3,-44(s0)
20014642:	85be                	mv	a1,a5
20014644:	fe442503          	lw	a0,-28(s0)
20014648:	9482                	jalr	s1
2001464a:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:684
                tmr_intc, __metal_driver_cpu_hartid(cpu), time);
        }
    }
    return rc;
2001464e:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:685
}
20014652:	853e                	mv	a0,a5
20014654:	50b2                	lw	ra,44(sp)
20014656:	5422                	lw	s0,40(sp)
20014658:	5492                	lw	s1,36(sp)
2001465a:	6145                	addi	sp,sp,48
2001465c:	8082                	ret

2001465e <__metal_driver_cpu_timer_controller_interrupt>:
__metal_driver_cpu_timer_controller_interrupt():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:688

struct metal_interrupt *
__metal_driver_cpu_timer_controller_interrupt(struct metal_cpu *cpu) {
2001465e:	1101                	addi	sp,sp,-32
20014660:	ce22                	sw	s0,28(sp)
20014662:	1000                	addi	s0,sp,32
20014664:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:690
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
20014668:	81018793          	addi	a5,gp,-2032 # 80000ad0 <__metal_dt_clint_2000000>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:699
#else
#pragma message("There is no interrupt controller for Timer interrupt")
    return NULL;
#endif
#endif
}
2001466c:	853e                	mv	a0,a5
2001466e:	4472                	lw	s0,28(sp)
20014670:	6105                	addi	sp,sp,32
20014672:	8082                	ret

20014674 <__metal_driver_cpu_get_timer_interrupt_id>:
__metal_driver_cpu_get_timer_interrupt_id():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:701

int __metal_driver_cpu_get_timer_interrupt_id(struct metal_cpu *cpu) {
20014674:	1101                	addi	sp,sp,-32
20014676:	ce22                	sw	s0,28(sp)
20014678:	1000                	addi	s0,sp,32
2001467a:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:702
    return METAL_INTERRUPT_ID_TMR;
2001467e:	479d                	li	a5,7
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:703
}
20014680:	853e                	mv	a0,a5
20014682:	4472                	lw	s0,28(sp)
20014684:	6105                	addi	sp,sp,32
20014686:	8082                	ret

20014688 <__metal_driver_cpu_sw_controller_interrupt>:
__metal_driver_cpu_sw_controller_interrupt():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:706

struct metal_interrupt *
__metal_driver_cpu_sw_controller_interrupt(struct metal_cpu *cpu) {
20014688:	1101                	addi	sp,sp,-32
2001468a:	ce22                	sw	s0,28(sp)
2001468c:	1000                	addi	s0,sp,32
2001468e:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:708
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
20014692:	81018793          	addi	a5,gp,-2032 # 80000ad0 <__metal_dt_clint_2000000>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:717
#else
#pragma message("There is no interrupt controller for Software interrupt")
    return NULL;
#endif
#endif
}
20014696:	853e                	mv	a0,a5
20014698:	4472                	lw	s0,28(sp)
2001469a:	6105                	addi	sp,sp,32
2001469c:	8082                	ret

2001469e <__metal_driver_cpu_get_sw_interrupt_id>:
__metal_driver_cpu_get_sw_interrupt_id():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:719

int __metal_driver_cpu_get_sw_interrupt_id(struct metal_cpu *cpu) {
2001469e:	1101                	addi	sp,sp,-32
200146a0:	ce22                	sw	s0,28(sp)
200146a2:	1000                	addi	s0,sp,32
200146a4:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:720
    return METAL_INTERRUPT_ID_SW;
200146a8:	478d                	li	a5,3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:721
}
200146aa:	853e                	mv	a0,a5
200146ac:	4472                	lw	s0,28(sp)
200146ae:	6105                	addi	sp,sp,32
200146b0:	8082                	ret

200146b2 <__metal_driver_cpu_set_sw_ipi>:
__metal_driver_cpu_set_sw_ipi():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:723

int __metal_driver_cpu_set_sw_ipi(struct metal_cpu *cpu, int hartid) {
200146b2:	7179                	addi	sp,sp,-48
200146b4:	d606                	sw	ra,44(sp)
200146b6:	d422                	sw	s0,40(sp)
200146b8:	1800                	addi	s0,sp,48
200146ba:	fca42e23          	sw	a0,-36(s0)
200146be:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:724
    int rc = -1;
200146c2:	57fd                	li	a5,-1
200146c4:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:728
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
200146c8:	fdc42503          	lw	a0,-36(s0)
200146cc:	849fe0ef          	jal	ra,20012f14 <__metal_driver_cpu_interrupt_controller>
200146d0:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:730

    if (intc) {
200146d4:	fe842783          	lw	a5,-24(s0)
200146d8:	c79d                	beqz	a5,20014706 <__metal_driver_cpu_set_sw_ipi+0x54>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:731
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
200146da:	fe842783          	lw	a5,-24(s0)
200146de:	0dc7a783          	lw	a5,220(a5)
200146e2:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:732
        if (sw_intc) {
200146e6:	fe442783          	lw	a5,-28(s0)
200146ea:	cf91                	beqz	a5,20014706 <__metal_driver_cpu_set_sw_ipi+0x54>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:733
            rc = sw_intc->vtable->command_request(
200146ec:	fe442783          	lw	a5,-28(s0)
200146f0:	439c                	lw	a5,0(a5)
200146f2:	47f8                	lw	a4,76(a5)
200146f4:	fd840793          	addi	a5,s0,-40
200146f8:	863e                	mv	a2,a5
200146fa:	458d                	li	a1,3
200146fc:	fe442503          	lw	a0,-28(s0)
20014700:	9702                	jalr	a4
20014702:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:737
                sw_intc, METAL_SOFTWARE_IPI_SET, &hartid);
        }
    }
    return rc;
20014706:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:738
}
2001470a:	853e                	mv	a0,a5
2001470c:	50b2                	lw	ra,44(sp)
2001470e:	5422                	lw	s0,40(sp)
20014710:	6145                	addi	sp,sp,48
20014712:	8082                	ret

20014714 <__metal_driver_cpu_clear_sw_ipi>:
__metal_driver_cpu_clear_sw_ipi():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:740

int __metal_driver_cpu_clear_sw_ipi(struct metal_cpu *cpu, int hartid) {
20014714:	7179                	addi	sp,sp,-48
20014716:	d606                	sw	ra,44(sp)
20014718:	d422                	sw	s0,40(sp)
2001471a:	1800                	addi	s0,sp,48
2001471c:	fca42e23          	sw	a0,-36(s0)
20014720:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:741
    int rc = -1;
20014724:	57fd                	li	a5,-1
20014726:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:745
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
2001472a:	fdc42503          	lw	a0,-36(s0)
2001472e:	fe6fe0ef          	jal	ra,20012f14 <__metal_driver_cpu_interrupt_controller>
20014732:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:747

    if (intc) {
20014736:	fe842783          	lw	a5,-24(s0)
2001473a:	c79d                	beqz	a5,20014768 <__metal_driver_cpu_clear_sw_ipi+0x54>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:748
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
2001473c:	fe842783          	lw	a5,-24(s0)
20014740:	0dc7a783          	lw	a5,220(a5)
20014744:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:749
        if (sw_intc) {
20014748:	fe442783          	lw	a5,-28(s0)
2001474c:	cf91                	beqz	a5,20014768 <__metal_driver_cpu_clear_sw_ipi+0x54>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:750
            rc = sw_intc->vtable->command_request(
2001474e:	fe442783          	lw	a5,-28(s0)
20014752:	439c                	lw	a5,0(a5)
20014754:	47f8                	lw	a4,76(a5)
20014756:	fd840793          	addi	a5,s0,-40
2001475a:	863e                	mv	a2,a5
2001475c:	4589                	li	a1,2
2001475e:	fe442503          	lw	a0,-28(s0)
20014762:	9702                	jalr	a4
20014764:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:754
                sw_intc, METAL_SOFTWARE_IPI_CLEAR, &hartid);
        }
    }
    return rc;
20014768:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:755
}
2001476c:	853e                	mv	a0,a5
2001476e:	50b2                	lw	ra,44(sp)
20014770:	5422                	lw	s0,40(sp)
20014772:	6145                	addi	sp,sp,48
20014774:	8082                	ret

20014776 <__metal_driver_cpu_get_msip>:
__metal_driver_cpu_get_msip():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:757

int __metal_driver_cpu_get_msip(struct metal_cpu *cpu, int hartid) {
20014776:	7179                	addi	sp,sp,-48
20014778:	d606                	sw	ra,44(sp)
2001477a:	d422                	sw	s0,40(sp)
2001477c:	1800                	addi	s0,sp,48
2001477e:	fca42e23          	sw	a0,-36(s0)
20014782:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:758
    int rc = 0;
20014786:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:762
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
2001478a:	fdc42503          	lw	a0,-36(s0)
2001478e:	f86fe0ef          	jal	ra,20012f14 <__metal_driver_cpu_interrupt_controller>
20014792:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:764

    if (intc) {
20014796:	fe842783          	lw	a5,-24(s0)
2001479a:	c79d                	beqz	a5,200147c8 <__metal_driver_cpu_get_msip+0x52>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:765
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
2001479c:	fe842783          	lw	a5,-24(s0)
200147a0:	0dc7a783          	lw	a5,220(a5)
200147a4:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:766
        if (sw_intc) {
200147a8:	fe442783          	lw	a5,-28(s0)
200147ac:	cf91                	beqz	a5,200147c8 <__metal_driver_cpu_get_msip+0x52>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:767
            rc = sw_intc->vtable->command_request(
200147ae:	fe442783          	lw	a5,-28(s0)
200147b2:	439c                	lw	a5,0(a5)
200147b4:	47f8                	lw	a4,76(a5)
200147b6:	fd840793          	addi	a5,s0,-40
200147ba:	863e                	mv	a2,a5
200147bc:	4591                	li	a1,4
200147be:	fe442503          	lw	a0,-28(s0)
200147c2:	9702                	jalr	a4
200147c4:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:771
                sw_intc, METAL_SOFTWARE_MSIP_GET, &hartid);
        }
    }
    return rc;
200147c8:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:772
}
200147cc:	853e                	mv	a0,a5
200147ce:	50b2                	lw	ra,44(sp)
200147d0:	5422                	lw	s0,40(sp)
200147d2:	6145                	addi	sp,sp,48
200147d4:	8082                	ret

200147d6 <__metal_driver_cpu_controller_interrupt>:
__metal_driver_cpu_controller_interrupt():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:775

struct metal_interrupt *
__metal_driver_cpu_controller_interrupt(struct metal_cpu *cpu) {
200147d6:	1101                	addi	sp,sp,-32
200147d8:	ce06                	sw	ra,28(sp)
200147da:	cc22                	sw	s0,24(sp)
200147dc:	1000                	addi	s0,sp,32
200147de:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:776
    return __metal_driver_cpu_interrupt_controller(cpu);
200147e2:	fec42503          	lw	a0,-20(s0)
200147e6:	f2efe0ef          	jal	ra,20012f14 <__metal_driver_cpu_interrupt_controller>
200147ea:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:777
}
200147ec:	853e                	mv	a0,a5
200147ee:	40f2                	lw	ra,28(sp)
200147f0:	4462                	lw	s0,24(sp)
200147f2:	6105                	addi	sp,sp,32
200147f4:	8082                	ret

200147f6 <__metal_driver_cpu_exception_register>:
__metal_driver_cpu_exception_register():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:798
    }
    return -1;
}

int __metal_driver_cpu_exception_register(struct metal_cpu *cpu, int ecode,
                                          metal_exception_handler_t isr) {
200147f6:	7179                	addi	sp,sp,-48
200147f8:	d606                	sw	ra,44(sp)
200147fa:	d422                	sw	s0,40(sp)
200147fc:	1800                	addi	s0,sp,48
200147fe:	fca42e23          	sw	a0,-36(s0)
20014802:	fcb42c23          	sw	a1,-40(s0)
20014806:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:801
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
2001480a:	fdc42503          	lw	a0,-36(s0)
2001480e:	f06fe0ef          	jal	ra,20012f14 <__metal_driver_cpu_interrupt_controller>
20014812:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:803

    if (intc) {
20014816:	fec42783          	lw	a5,-20(s0)
2001481a:	cb99                	beqz	a5,20014830 <__metal_driver_cpu_exception_register+0x3a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:804
        return __metal_exception_register((struct metal_interrupt *)intc, ecode,
2001481c:	fd442603          	lw	a2,-44(s0)
20014820:	fd842583          	lw	a1,-40(s0)
20014824:	fec42503          	lw	a0,-20(s0)
20014828:	8b9ff0ef          	jal	ra,200140e0 <__metal_exception_register>
2001482c:	87aa                	mv	a5,a0
2001482e:	a011                	j	20014832 <__metal_driver_cpu_exception_register+0x3c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:807
                                          isr);
    }
    return -1;
20014830:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:808
}
20014832:	853e                	mv	a0,a5
20014834:	50b2                	lw	ra,44(sp)
20014836:	5422                	lw	s0,40(sp)
20014838:	6145                	addi	sp,sp,48
2001483a:	8082                	ret

2001483c <__metal_driver_cpu_get_instruction_length>:
__metal_driver_cpu_get_instruction_length():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:811

int __metal_driver_cpu_get_instruction_length(struct metal_cpu *cpu,
                                              uintptr_t epc) {
2001483c:	1101                	addi	sp,sp,-32
2001483e:	ce22                	sw	s0,28(sp)
20014840:	1000                	addi	s0,sp,32
20014842:	fea42623          	sw	a0,-20(s0)
20014846:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:817
    /**
     * Per ISA compressed instruction has last two bits of opcode set.
     * The encoding '00' '01' '10' are used for compressed instruction.
     * Only enconding '11' isn't regarded as compressed instruction (>16b).
     */
    return ((*(unsigned short *)epc & METAL_INSN_LENGTH_MASK) ==
2001484a:	fe842783          	lw	a5,-24(s0)
2001484e:	0007d783          	lhu	a5,0(a5)
20014852:	0037f713          	andi	a4,a5,3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:820
            METAL_INSN_NOT_COMPRESSED)
               ? 4
               : 2;
20014856:	478d                	li	a5,3
20014858:	00f71463          	bne	a4,a5,20014860 <__metal_driver_cpu_get_instruction_length+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 1)
2001485c:	4791                	li	a5,4
2001485e:	a011                	j	20014862 <__metal_driver_cpu_get_instruction_length+0x26>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 2)
20014860:	4789                	li	a5,2
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:821 (discriminator 5)
}
20014862:	853e                	mv	a0,a5
20014864:	4472                	lw	s0,28(sp)
20014866:	6105                	addi	sp,sp,32
20014868:	8082                	ret

2001486a <__metal_driver_cpu_get_exception_pc>:
__metal_driver_cpu_get_exception_pc():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:823

uintptr_t __metal_driver_cpu_get_exception_pc(struct metal_cpu *cpu) {
2001486a:	7179                	addi	sp,sp,-48
2001486c:	d622                	sw	s0,44(sp)
2001486e:	1800                	addi	s0,sp,48
20014870:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:825
    uintptr_t mepc;
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
20014874:	341027f3          	csrr	a5,mepc
20014878:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:826
    return mepc;
2001487c:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:827
}
20014880:	853e                	mv	a0,a5
20014882:	5432                	lw	s0,44(sp)
20014884:	6145                	addi	sp,sp,48
20014886:	8082                	ret

20014888 <__metal_driver_cpu_set_exception_pc>:
__metal_driver_cpu_set_exception_pc():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:829

int __metal_driver_cpu_set_exception_pc(struct metal_cpu *cpu, uintptr_t mepc) {
20014888:	1101                	addi	sp,sp,-32
2001488a:	ce22                	sw	s0,28(sp)
2001488c:	1000                	addi	s0,sp,32
2001488e:	fea42623          	sw	a0,-20(s0)
20014892:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:830
    __asm__ volatile("csrw mepc, %0" ::"r"(mepc));
20014896:	fe842783          	lw	a5,-24(s0)
2001489a:	34179073          	csrw	mepc,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:831
    return 0;
2001489e:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:832
}
200148a0:	853e                	mv	a0,a5
200148a2:	4472                	lw	s0,28(sp)
200148a4:	6105                	addi	sp,sp,32
200148a6:	8082                	ret

200148a8 <__metal_driver_cpu_get_buserror>:
__metal_driver_cpu_get_buserror():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:834

struct metal_buserror *__metal_driver_cpu_get_buserror(struct metal_cpu *cpu) {
200148a8:	1101                	addi	sp,sp,-32
200148aa:	ce06                	sw	ra,28(sp)
200148ac:	cc22                	sw	s0,24(sp)
200148ae:	1000                	addi	s0,sp,32
200148b0:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:835
    return __metal_driver_cpu_buserror(cpu);
200148b4:	fec42503          	lw	a0,-20(s0)
200148b8:	e86fe0ef          	jal	ra,20012f3e <__metal_driver_cpu_buserror>
200148bc:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:836
}
200148be:	853e                	mv	a0,a5
200148c0:	40f2                	lw	ra,28(sp)
200148c2:	4462                	lw	s0,24(sp)
200148c4:	6105                	addi	sp,sp,32
200148c6:	8082                	ret

200148c8 <__metal_driver_sifive_plic0_control_base>:
__metal_driver_sifive_plic0_control_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:345



/* --------------------- sifive_plic0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_plic0_control_base(struct metal_interrupt *controller)
{
200148c8:	1101                	addi	sp,sp,-32
200148ca:	ce22                	sw	s0,28(sp)
200148cc:	1000                	addi	s0,sp,32
200148ce:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:346
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
200148d2:	fec42703          	lw	a4,-20(s0)
200148d6:	800007b7          	lui	a5,0x80000
200148da:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffeca0>
200148de:	00f71563          	bne	a4,a5,200148e8 <__metal_driver_sifive_plic0_control_base+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:347
		return METAL_RISCV_PLIC0_C000000_BASE_ADDRESS;
200148e2:	0c0007b7          	lui	a5,0xc000
200148e6:	a011                	j	200148ea <__metal_driver_sifive_plic0_control_base+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:350
	}
	else {
		return 0;
200148e8:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:352
	}
}
200148ea:	853e                	mv	a0,a5
200148ec:	4472                	lw	s0,28(sp)
200148ee:	6105                	addi	sp,sp,32
200148f0:	8082                	ret

200148f2 <__metal_driver_sifive_plic0_num_interrupts>:
__metal_driver_sifive_plic0_num_interrupts():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:365
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_plic0_num_interrupts(struct metal_interrupt *controller)
{
200148f2:	1101                	addi	sp,sp,-32
200148f4:	ce22                	sw	s0,28(sp)
200148f6:	1000                	addi	s0,sp,32
200148f8:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:366
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
200148fc:	fec42703          	lw	a4,-20(s0)
20014900:	800007b7          	lui	a5,0x80000
20014904:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffeca0>
20014908:	00f71563          	bne	a4,a5,20014912 <__metal_driver_sifive_plic0_num_interrupts+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:367
		return METAL_RISCV_PLIC0_C000000_RISCV_NDEV;
2001490c:	03500793          	li	a5,53
20014910:	a011                	j	20014914 <__metal_driver_sifive_plic0_num_interrupts+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:370
	}
	else {
		return 0;
20014912:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:372
	}
}
20014914:	853e                	mv	a0,a5
20014916:	4472                	lw	s0,28(sp)
20014918:	6105                	addi	sp,sp,32
2001491a:	8082                	ret

2001491c <__metal_driver_sifive_plic0_max_priority>:
__metal_driver_sifive_plic0_max_priority():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:375

static __inline__ int __metal_driver_sifive_plic0_max_priority(struct metal_interrupt *controller)
{
2001491c:	1101                	addi	sp,sp,-32
2001491e:	ce22                	sw	s0,28(sp)
20014920:	1000                	addi	s0,sp,32
20014922:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:376
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20014926:	fec42703          	lw	a4,-20(s0)
2001492a:	800007b7          	lui	a5,0x80000
2001492e:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffeca0>
20014932:	00f71463          	bne	a4,a5,2001493a <__metal_driver_sifive_plic0_max_priority+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:377
		return METAL_RISCV_PLIC0_C000000_RISCV_MAX_PRIORITY;
20014936:	479d                	li	a5,7
20014938:	a011                	j	2001493c <__metal_driver_sifive_plic0_max_priority+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:380
	}
	else {
		return 0;
2001493a:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:382
	}
}
2001493c:	853e                	mv	a0,a5
2001493e:	4472                	lw	s0,28(sp)
20014940:	6105                	addi	sp,sp,32
20014942:	8082                	ret

20014944 <__metal_driver_sifive_plic0_interrupt_parents>:
__metal_driver_sifive_plic0_interrupt_parents():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:385

static __inline__ struct metal_interrupt * __metal_driver_sifive_plic0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
20014944:	1101                	addi	sp,sp,-32
20014946:	ce22                	sw	s0,28(sp)
20014948:	1000                	addi	s0,sp,32
2001494a:	fea42623          	sw	a0,-20(s0)
2001494e:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:386
	if (idx == 0) {
20014952:	fe842783          	lw	a5,-24(s0)
20014956:	e791                	bnez	a5,20014962 <__metal_driver_sifive_plic0_interrupt_parents+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:387
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20014958:	800007b7          	lui	a5,0x80000
2001495c:	09078793          	addi	a5,a5,144 # 80000090 <metal_segment_heap_target_end+0xffffe8d0>
20014960:	a011                	j	20014964 <__metal_driver_sifive_plic0_interrupt_parents+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:390
	}
	else {
		return NULL;
20014962:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:392
	}
}
20014964:	853e                	mv	a0,a5
20014966:	4472                	lw	s0,28(sp)
20014968:	6105                	addi	sp,sp,32
2001496a:	8082                	ret

2001496c <__metal_driver_sifive_plic0_interrupt_lines>:
__metal_driver_sifive_plic0_interrupt_lines():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:395

static __inline__ int __metal_driver_sifive_plic0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
2001496c:	1101                	addi	sp,sp,-32
2001496e:	ce22                	sw	s0,28(sp)
20014970:	1000                	addi	s0,sp,32
20014972:	fea42623          	sw	a0,-20(s0)
20014976:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:396
	if (idx == 0) {
2001497a:	fe842783          	lw	a5,-24(s0)
2001497e:	e399                	bnez	a5,20014984 <__metal_driver_sifive_plic0_interrupt_lines+0x18>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:397
		return 11;
20014980:	47ad                	li	a5,11
20014982:	a011                	j	20014986 <__metal_driver_sifive_plic0_interrupt_lines+0x1a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:400
	}
	else {
		return 0;
20014984:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:402
	}
}
20014986:	853e                	mv	a0,a5
20014988:	4472                	lw	s0,28(sp)
2001498a:	6105                	addi	sp,sp,32
2001498c:	8082                	ret

2001498e <__metal_driver_sifive_plic0_context_ids>:
__metal_driver_sifive_plic0_context_ids():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:405

static __inline__ int __metal_driver_sifive_plic0_context_ids(int hartid)
{
2001498e:	1101                	addi	sp,sp,-32
20014990:	ce22                	sw	s0,28(sp)
20014992:	1000                	addi	s0,sp,32
20014994:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:406
	if (hartid == 0) {
20014998:	fec42783          	lw	a5,-20(s0)
2001499c:	e399                	bnez	a5,200149a2 <__metal_driver_sifive_plic0_context_ids+0x14>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:407
		return 0;
2001499e:	4781                	li	a5,0
200149a0:	a011                	j	200149a4 <__metal_driver_sifive_plic0_context_ids+0x16>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:410
	}
	else {
		return -1;
200149a2:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:412
	}
}
200149a4:	853e                	mv	a0,a5
200149a6:	4472                	lw	s0,28(sp)
200149a8:	6105                	addi	sp,sp,32
200149aa:	8082                	ret

200149ac <__metal_plic0_claim_interrupt>:
__metal_plic0_claim_interrupt():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:18
#include <metal/machine.h>
#include <metal/shutdown.h>

unsigned int
__metal_plic0_claim_interrupt(struct __metal_driver_riscv_plic0 *plic,
                              int context_id) {
200149ac:	7179                	addi	sp,sp,-48
200149ae:	d606                	sw	ra,44(sp)
200149b0:	d422                	sw	s0,40(sp)
200149b2:	1800                	addi	s0,sp,48
200149b4:	fca42e23          	sw	a0,-36(s0)
200149b8:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:19
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
200149bc:	fdc42503          	lw	a0,-36(s0)
200149c0:	3721                	jal	200148c8 <__metal_driver_sifive_plic0_control_base>
200149c2:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:21
        (struct metal_interrupt *)plic);
    return __METAL_ACCESS_ONCE(
200149c6:	fd842783          	lw	a5,-40(s0)
200149ca:	00c79713          	slli	a4,a5,0xc
200149ce:	fec42783          	lw	a5,-20(s0)
200149d2:	973e                	add	a4,a4,a5
200149d4:	002007b7          	lui	a5,0x200
200149d8:	0791                	addi	a5,a5,4
200149da:	97ba                	add	a5,a5,a4
200149dc:	439c                	lw	a5,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:25
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM));
}
200149de:	853e                	mv	a0,a5
200149e0:	50b2                	lw	ra,44(sp)
200149e2:	5422                	lw	s0,40(sp)
200149e4:	6145                	addi	sp,sp,48
200149e6:	8082                	ret

200149e8 <__metal_plic0_complete_interrupt>:
__metal_plic0_complete_interrupt():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:28

void __metal_plic0_complete_interrupt(struct __metal_driver_riscv_plic0 *plic,
                                      int context_id, unsigned int id) {
200149e8:	7179                	addi	sp,sp,-48
200149ea:	d606                	sw	ra,44(sp)
200149ec:	d422                	sw	s0,40(sp)
200149ee:	1800                	addi	s0,sp,48
200149f0:	fca42e23          	sw	a0,-36(s0)
200149f4:	fcb42c23          	sw	a1,-40(s0)
200149f8:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:29
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
200149fc:	fdc42503          	lw	a0,-36(s0)
20014a00:	35e1                	jal	200148c8 <__metal_driver_sifive_plic0_control_base>
20014a02:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:31
        (struct metal_interrupt *)plic);
    __METAL_ACCESS_ONCE(
20014a06:	fd842783          	lw	a5,-40(s0)
20014a0a:	00c79713          	slli	a4,a5,0xc
20014a0e:	fec42783          	lw	a5,-20(s0)
20014a12:	973e                	add	a4,a4,a5
20014a14:	002007b7          	lui	a5,0x200
20014a18:	0791                	addi	a5,a5,4
20014a1a:	97ba                	add	a5,a5,a4
20014a1c:	873e                	mv	a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:34
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM)) = id;
20014a1e:	fd442783          	lw	a5,-44(s0)
20014a22:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:35
}
20014a24:	0001                	nop
20014a26:	50b2                	lw	ra,44(sp)
20014a28:	5422                	lw	s0,40(sp)
20014a2a:	6145                	addi	sp,sp,48
20014a2c:	8082                	ret

20014a2e <__metal_plic0_set_threshold>:
__metal_plic0_set_threshold():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:38

int __metal_plic0_set_threshold(struct metal_interrupt *controller,
                                int context_id, unsigned int threshold) {
20014a2e:	7179                	addi	sp,sp,-48
20014a30:	d606                	sw	ra,44(sp)
20014a32:	d422                	sw	s0,40(sp)
20014a34:	1800                	addi	s0,sp,48
20014a36:	fca42e23          	sw	a0,-36(s0)
20014a3a:	fcb42c23          	sw	a1,-40(s0)
20014a3e:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:40
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
20014a42:	fdc42503          	lw	a0,-36(s0)
20014a46:	3549                	jal	200148c8 <__metal_driver_sifive_plic0_control_base>
20014a48:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:41
    __METAL_ACCESS_ONCE(
20014a4c:	fd842783          	lw	a5,-40(s0)
20014a50:	00c79713          	slli	a4,a5,0xc
20014a54:	fec42783          	lw	a5,-20(s0)
20014a58:	973e                	add	a4,a4,a5
20014a5a:	002007b7          	lui	a5,0x200
20014a5e:	97ba                	add	a5,a5,a4
20014a60:	873e                	mv	a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:44
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD)) = threshold;
20014a62:	fd442783          	lw	a5,-44(s0)
20014a66:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:45
    return 0;
20014a68:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:46
}
20014a6a:	853e                	mv	a0,a5
20014a6c:	50b2                	lw	ra,44(sp)
20014a6e:	5422                	lw	s0,40(sp)
20014a70:	6145                	addi	sp,sp,48
20014a72:	8082                	ret

20014a74 <__metal_plic0_get_threshold>:
__metal_plic0_get_threshold():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:49

unsigned int __metal_plic0_get_threshold(struct metal_interrupt *controller,
                                         int context_id) {
20014a74:	7179                	addi	sp,sp,-48
20014a76:	d606                	sw	ra,44(sp)
20014a78:	d422                	sw	s0,40(sp)
20014a7a:	1800                	addi	s0,sp,48
20014a7c:	fca42e23          	sw	a0,-36(s0)
20014a80:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:51
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
20014a84:	fdc42503          	lw	a0,-36(s0)
20014a88:	3581                	jal	200148c8 <__metal_driver_sifive_plic0_control_base>
20014a8a:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:52
    return __METAL_ACCESS_ONCE(
20014a8e:	fd842783          	lw	a5,-40(s0)
20014a92:	00c79713          	slli	a4,a5,0xc
20014a96:	fec42783          	lw	a5,-20(s0)
20014a9a:	973e                	add	a4,a4,a5
20014a9c:	002007b7          	lui	a5,0x200
20014aa0:	97ba                	add	a5,a5,a4
20014aa2:	439c                	lw	a5,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:56
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD));
}
20014aa4:	853e                	mv	a0,a5
20014aa6:	50b2                	lw	ra,44(sp)
20014aa8:	5422                	lw	s0,40(sp)
20014aaa:	6145                	addi	sp,sp,48
20014aac:	8082                	ret

20014aae <__metal_driver_riscv_plic0_set_priority>:
__metal_driver_riscv_plic0_set_priority():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:59

int __metal_driver_riscv_plic0_set_priority(struct metal_interrupt *controller,
                                            int id, unsigned int priority) {
20014aae:	7179                	addi	sp,sp,-48
20014ab0:	d606                	sw	ra,44(sp)
20014ab2:	d422                	sw	s0,40(sp)
20014ab4:	1800                	addi	s0,sp,48
20014ab6:	fca42e23          	sw	a0,-36(s0)
20014aba:	fcb42c23          	sw	a1,-40(s0)
20014abe:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:60
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20014ac2:	fdc42503          	lw	a0,-36(s0)
20014ac6:	3509                	jal	200148c8 <__metal_driver_sifive_plic0_control_base>
20014ac8:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:62
        (struct metal_interrupt *)controller);
    unsigned int max_priority = __metal_driver_sifive_plic0_max_priority(
20014acc:	fdc42503          	lw	a0,-36(s0)
20014ad0:	35b1                	jal	2001491c <__metal_driver_sifive_plic0_max_priority>
20014ad2:	87aa                	mv	a5,a0
20014ad4:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:64
        (struct metal_interrupt *)controller);
    if ((max_priority) && (priority < max_priority)) {
20014ad8:	fe842783          	lw	a5,-24(s0)
20014adc:	c785                	beqz	a5,20014b04 <__metal_driver_riscv_plic0_set_priority+0x56>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:64 (discriminator 1)
20014ade:	fd442703          	lw	a4,-44(s0)
20014ae2:	fe842783          	lw	a5,-24(s0)
20014ae6:	00f77f63          	bgeu	a4,a5,20014b04 <__metal_driver_riscv_plic0_set_priority+0x56>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:65
        __METAL_ACCESS_ONCE(
20014aea:	fd842783          	lw	a5,-40(s0)
20014aee:	078a                	slli	a5,a5,0x2
20014af0:	873e                	mv	a4,a5
20014af2:	fec42783          	lw	a5,-20(s0)
20014af6:	97ba                	add	a5,a5,a4
20014af8:	873e                	mv	a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:67
            (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                               (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT))) =
20014afa:	fd442783          	lw	a5,-44(s0)
20014afe:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:69
            priority;
        return 0;
20014b00:	4781                	li	a5,0
20014b02:	a011                	j	20014b06 <__metal_driver_riscv_plic0_set_priority+0x58>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:71
    }
    return -1;
20014b04:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:72
}
20014b06:	853e                	mv	a0,a5
20014b08:	50b2                	lw	ra,44(sp)
20014b0a:	5422                	lw	s0,40(sp)
20014b0c:	6145                	addi	sp,sp,48
20014b0e:	8082                	ret

20014b10 <__metal_driver_riscv_plic0_get_priority>:
__metal_driver_riscv_plic0_get_priority():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:76

unsigned int
__metal_driver_riscv_plic0_get_priority(struct metal_interrupt *controller,
                                        int id) {
20014b10:	7179                	addi	sp,sp,-48
20014b12:	d606                	sw	ra,44(sp)
20014b14:	d422                	sw	s0,40(sp)
20014b16:	1800                	addi	s0,sp,48
20014b18:	fca42e23          	sw	a0,-36(s0)
20014b1c:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:78
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
20014b20:	fdc42503          	lw	a0,-36(s0)
20014b24:	3355                	jal	200148c8 <__metal_driver_sifive_plic0_control_base>
20014b26:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:80

    return __METAL_ACCESS_ONCE(
20014b2a:	fd842783          	lw	a5,-40(s0)
20014b2e:	078a                	slli	a5,a5,0x2
20014b30:	873e                	mv	a4,a5
20014b32:	fec42783          	lw	a5,-20(s0)
20014b36:	97ba                	add	a5,a5,a4
20014b38:	439c                	lw	a5,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:83
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                           (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT)));
}
20014b3a:	853e                	mv	a0,a5
20014b3c:	50b2                	lw	ra,44(sp)
20014b3e:	5422                	lw	s0,40(sp)
20014b40:	6145                	addi	sp,sp,48
20014b42:	8082                	ret

20014b44 <__metal_plic0_enable>:
__metal_plic0_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:86

int __metal_plic0_enable(struct __metal_driver_riscv_plic0 *plic,
                         int context_id, int id, int enable) {
20014b44:	7179                	addi	sp,sp,-48
20014b46:	d606                	sw	ra,44(sp)
20014b48:	d422                	sw	s0,40(sp)
20014b4a:	1800                	addi	s0,sp,48
20014b4c:	fca42e23          	sw	a0,-36(s0)
20014b50:	fcb42c23          	sw	a1,-40(s0)
20014b54:	fcc42a23          	sw	a2,-44(s0)
20014b58:	fcd42823          	sw	a3,-48(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:88
    unsigned int current;
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20014b5c:	fdc42503          	lw	a0,-36(s0)
20014b60:	33a5                	jal	200148c8 <__metal_driver_sifive_plic0_control_base>
20014b62:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:91
        (struct metal_interrupt *)plic);

    current = __METAL_ACCESS_ONCE(
20014b66:	fd842783          	lw	a5,-40(s0)
20014b6a:	00779713          	slli	a4,a5,0x7
20014b6e:	fec42783          	lw	a5,-20(s0)
20014b72:	97ba                	add	a5,a5,a4
20014b74:	fd442703          	lw	a4,-44(s0)
20014b78:	8715                	srai	a4,a4,0x5
20014b7a:	070a                	slli	a4,a4,0x2
20014b7c:	973e                	add	a4,a4,a5
20014b7e:	6789                	lui	a5,0x2
20014b80:	97ba                	add	a5,a5,a4
20014b82:	439c                	lw	a5,0(a5)
20014b84:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:100
    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_ENABLE_BASE +
                           (context_id * METAL_RISCV_PLIC0_ENABLE_PER_HART) +
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
20014b88:	fd042783          	lw	a5,-48(s0)
20014b8c:	cf81                	beqz	a5,20014ba4 <__metal_plic0_enable+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:99 (discriminator 1)
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
20014b8e:	fd442783          	lw	a5,-44(s0)
20014b92:	8bfd                	andi	a5,a5,31
20014b94:	4705                	li	a4,1
20014b96:	00f717b3          	sll	a5,a4,a5
20014b9a:	873e                	mv	a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 1)
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
20014b9c:	fe842783          	lw	a5,-24(s0)
20014ba0:	8fd9                	or	a5,a5,a4
20014ba2:	a829                	j	20014bbc <__metal_plic0_enable+0x78>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 2)
20014ba4:	fd442783          	lw	a5,-44(s0)
20014ba8:	8bfd                	andi	a5,a5,31
20014baa:	4705                	li	a4,1
20014bac:	00f717b3          	sll	a5,a4,a5
20014bb0:	fff7c793          	not	a5,a5
20014bb4:	873e                	mv	a4,a5
20014bb6:	fe842783          	lw	a5,-24(s0)
20014bba:	8ff9                	and	a5,a5,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:95
    __METAL_ACCESS_ONCE(
20014bbc:	fd842703          	lw	a4,-40(s0)
20014bc0:	00771693          	slli	a3,a4,0x7
20014bc4:	fec42703          	lw	a4,-20(s0)
20014bc8:	9736                	add	a4,a4,a3
20014bca:	fd442683          	lw	a3,-44(s0)
20014bce:	8695                	srai	a3,a3,0x5
20014bd0:	068a                	slli	a3,a3,0x2
20014bd2:	96ba                	add	a3,a3,a4
20014bd4:	6709                	lui	a4,0x2
20014bd6:	9736                	add	a4,a4,a3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:98
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
20014bd8:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:102

    return 0;
20014bda:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:103
}
20014bdc:	853e                	mv	a0,a5
20014bde:	50b2                	lw	ra,44(sp)
20014be0:	5422                	lw	s0,40(sp)
20014be2:	6145                	addi	sp,sp,48
20014be4:	8082                	ret

20014be6 <__metal_plic0_default_handler>:
__metal_plic0_default_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:105

void __metal_plic0_default_handler(int id, void *priv) { metal_shutdown(300); }
20014be6:	1101                	addi	sp,sp,-32
20014be8:	ce06                	sw	ra,28(sp)
20014bea:	cc22                	sw	s0,24(sp)
20014bec:	1000                	addi	s0,sp,32
20014bee:	fea42623          	sw	a0,-20(s0)
20014bf2:	feb42423          	sw	a1,-24(s0)
20014bf6:	12c00513          	li	a0,300
20014bfa:	54b020ef          	jal	ra,20017944 <metal_shutdown>

20014bfe <__metal_plic0_handler>:
__metal_plic0_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:107

void __metal_plic0_handler(int id, void *priv) {
20014bfe:	7179                	addi	sp,sp,-48
20014c00:	d606                	sw	ra,44(sp)
20014c02:	d422                	sw	s0,40(sp)
20014c04:	1800                	addi	s0,sp,48
20014c06:	fca42e23          	sw	a0,-36(s0)
20014c0a:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:108
    struct __metal_driver_riscv_plic0 *plic = priv;
20014c0e:	fd842783          	lw	a5,-40(s0)
20014c12:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:110
    int contextid =
        __metal_driver_sifive_plic0_context_ids(__metal_myhart_id());
20014c16:	b7cfe0ef          	jal	ra,20012f92 <__metal_myhart_id>
20014c1a:	87aa                	mv	a5,a0
20014c1c:	853e                	mv	a0,a5
20014c1e:	3b85                	jal	2001498e <__metal_driver_sifive_plic0_context_ids>
20014c20:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:111
    unsigned int idx = __metal_plic0_claim_interrupt(plic, contextid);
20014c24:	fe842583          	lw	a1,-24(s0)
20014c28:	fec42503          	lw	a0,-20(s0)
20014c2c:	3341                	jal	200149ac <__metal_plic0_claim_interrupt>
20014c2e:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:112
    unsigned int num_interrupts = __metal_driver_sifive_plic0_num_interrupts(
20014c32:	fec42503          	lw	a0,-20(s0)
20014c36:	cbdff0ef          	jal	ra,200148f2 <__metal_driver_sifive_plic0_num_interrupts>
20014c3a:	87aa                	mv	a5,a0
20014c3c:	fef42023          	sw	a5,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:115
        (struct metal_interrupt *)plic);

    if ((idx < num_interrupts) && (plic->metal_exint_table[idx])) {
20014c40:	fe442703          	lw	a4,-28(s0)
20014c44:	fe042783          	lw	a5,-32(s0)
20014c48:	04f77263          	bgeu	a4,a5,20014c8c <__metal_plic0_handler+0x8e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:115 (discriminator 1)
20014c4c:	fec42703          	lw	a4,-20(s0)
20014c50:	fe442783          	lw	a5,-28(s0)
20014c54:	078a                	slli	a5,a5,0x2
20014c56:	97ba                	add	a5,a5,a4
20014c58:	479c                	lw	a5,8(a5)
20014c5a:	cb8d                	beqz	a5,20014c8c <__metal_plic0_handler+0x8e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:116
        plic->metal_exint_table[idx](idx,
20014c5c:	fec42703          	lw	a4,-20(s0)
20014c60:	fe442783          	lw	a5,-28(s0)
20014c64:	078a                	slli	a5,a5,0x2
20014c66:	97ba                	add	a5,a5,a4
20014c68:	0087a803          	lw	a6,8(a5) # 2008 <__heap_size+0x1808>
20014c6c:	fe442603          	lw	a2,-28(s0)
20014c70:	fec42683          	lw	a3,-20(s0)
20014c74:	fe442703          	lw	a4,-28(s0)
20014c78:	87ba                	mv	a5,a4
20014c7a:	0786                	slli	a5,a5,0x1
20014c7c:	97ba                	add	a5,a5,a4
20014c7e:	078e                	slli	a5,a5,0x3
20014c80:	97b6                	add	a5,a5,a3
20014c82:	0f07a783          	lw	a5,240(a5)
20014c86:	85be                	mv	a1,a5
20014c88:	8532                	mv	a0,a2
20014c8a:	9802                	jalr	a6
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:120
                                     plic->metal_exdata_table[idx].exint_data);
    }

    __metal_plic0_complete_interrupt(plic, contextid, idx);
20014c8c:	fe442603          	lw	a2,-28(s0)
20014c90:	fe842583          	lw	a1,-24(s0)
20014c94:	fec42503          	lw	a0,-20(s0)
20014c98:	3b81                	jal	200149e8 <__metal_plic0_complete_interrupt>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:121
}
20014c9a:	0001                	nop
20014c9c:	50b2                	lw	ra,44(sp)
20014c9e:	5422                	lw	s0,40(sp)
20014ca0:	6145                	addi	sp,sp,48
20014ca2:	8082                	ret

20014ca4 <__metal_driver_riscv_plic0_init>:
__metal_driver_riscv_plic0_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:123

void __metal_driver_riscv_plic0_init(struct metal_interrupt *controller) {
20014ca4:	7139                	addi	sp,sp,-64
20014ca6:	de06                	sw	ra,60(sp)
20014ca8:	dc22                	sw	s0,56(sp)
20014caa:	0080                	addi	s0,sp,64
20014cac:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:124
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20014cb0:	fcc42783          	lw	a5,-52(s0)
20014cb4:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:126

    if (!plic->init_done) {
20014cb8:	fe442783          	lw	a5,-28(s0)
20014cbc:	43dc                	lw	a5,4(a5)
20014cbe:	12079a63          	bnez	a5,20014df2 <__metal_driver_riscv_plic0_init+0x14e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:130
        int num_interrupts, line;
        struct metal_interrupt *intc;

        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
20014cc2:	fe042623          	sw	zero,-20(s0)
20014cc6:	aa31                	j	20014de2 <__metal_driver_riscv_plic0_init+0x13e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:132
            num_interrupts =
                __metal_driver_sifive_plic0_num_interrupts(controller);
20014cc8:	fcc42503          	lw	a0,-52(s0)
20014ccc:	c27ff0ef          	jal	ra,200148f2 <__metal_driver_sifive_plic0_num_interrupts>
20014cd0:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:133
            intc = __metal_driver_sifive_plic0_interrupt_parents(controller,
20014cd4:	fec42583          	lw	a1,-20(s0)
20014cd8:	fcc42503          	lw	a0,-52(s0)
20014cdc:	c69ff0ef          	jal	ra,20014944 <__metal_driver_sifive_plic0_interrupt_parents>
20014ce0:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:136
                                                                 parent);
            line =
                __metal_driver_sifive_plic0_interrupt_lines(controller, parent);
20014ce4:	fec42583          	lw	a1,-20(s0)
20014ce8:	fcc42503          	lw	a0,-52(s0)
20014cec:	c81ff0ef          	jal	ra,2001496c <__metal_driver_sifive_plic0_interrupt_lines>
20014cf0:	fca42c23          	sw	a0,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:139

            /* Initialize ist parent controller, aka cpu_intc. */
            intc->vtable->interrupt_init(intc);
20014cf4:	fdc42783          	lw	a5,-36(s0)
20014cf8:	439c                	lw	a5,0(a5)
20014cfa:	439c                	lw	a5,0(a5)
20014cfc:	fdc42503          	lw	a0,-36(s0)
20014d00:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:141

            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
20014d02:	fe042423          	sw	zero,-24(s0)
20014d06:	a885                	j	20014d76 <__metal_driver_riscv_plic0_init+0xd2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:142
                __metal_plic0_enable(plic, parent, i, METAL_DISABLE);
20014d08:	4681                	li	a3,0
20014d0a:	fe842603          	lw	a2,-24(s0)
20014d0e:	fec42583          	lw	a1,-20(s0)
20014d12:	fe442503          	lw	a0,-28(s0)
20014d16:	353d                	jal	20014b44 <__metal_plic0_enable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:143
                if (i < num_interrupts) {
20014d18:	fe842703          	lw	a4,-24(s0)
20014d1c:	fe042783          	lw	a5,-32(s0)
20014d20:	04f75663          	bge	a4,a5,20014d6c <__metal_driver_riscv_plic0_init+0xc8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:144
                    __metal_driver_riscv_plic0_set_priority(controller, i, 0);
20014d24:	4601                	li	a2,0
20014d26:	fe842583          	lw	a1,-24(s0)
20014d2a:	fcc42503          	lw	a0,-52(s0)
20014d2e:	3341                	jal	20014aae <__metal_driver_riscv_plic0_set_priority>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:145
                    plic->metal_exint_table[i] = NULL;
20014d30:	fe442703          	lw	a4,-28(s0)
20014d34:	fe842783          	lw	a5,-24(s0)
20014d38:	078a                	slli	a5,a5,0x2
20014d3a:	97ba                	add	a5,a5,a4
20014d3c:	0007a423          	sw	zero,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:146
                    plic->metal_exdata_table[i].sub_int = NULL;
20014d40:	fe442683          	lw	a3,-28(s0)
20014d44:	fe842703          	lw	a4,-24(s0)
20014d48:	87ba                	mv	a5,a4
20014d4a:	0786                	slli	a5,a5,0x1
20014d4c:	97ba                	add	a5,a5,a4
20014d4e:	078e                	slli	a5,a5,0x3
20014d50:	97b6                	add	a5,a5,a3
20014d52:	0e07a623          	sw	zero,236(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:147
                    plic->metal_exdata_table[i].exint_data = NULL;
20014d56:	fe442683          	lw	a3,-28(s0)
20014d5a:	fe842703          	lw	a4,-24(s0)
20014d5e:	87ba                	mv	a5,a4
20014d60:	0786                	slli	a5,a5,0x1
20014d62:	97ba                	add	a5,a5,a4
20014d64:	078e                	slli	a5,a5,0x3
20014d66:	97b6                	add	a5,a5,a3
20014d68:	0e07a823          	sw	zero,240(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 2)
            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
20014d6c:	fe842783          	lw	a5,-24(s0)
20014d70:	0785                	addi	a5,a5,1
20014d72:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 1)
20014d76:	fe842703          	lw	a4,-24(s0)
20014d7a:	3ff00793          	li	a5,1023
20014d7e:	f8e7d5e3          	bge	a5,a4,20014d08 <__metal_driver_riscv_plic0_init+0x64>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:151 (discriminator 2)
                }
            }

            __metal_plic0_set_threshold(controller, parent, 0);
20014d82:	4601                	li	a2,0
20014d84:	fec42583          	lw	a1,-20(s0)
20014d88:	fcc42503          	lw	a0,-52(s0)
20014d8c:	ca3ff0ef          	jal	ra,20014a2e <__metal_plic0_set_threshold>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:154 (discriminator 2)

            /* Register plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_register(intc, line, NULL, plic);
20014d90:	fdc42783          	lw	a5,-36(s0)
20014d94:	439c                	lw	a5,0(a5)
20014d96:	4fdc                	lw	a5,28(a5)
20014d98:	fe442683          	lw	a3,-28(s0)
20014d9c:	4601                	li	a2,0
20014d9e:	fd842583          	lw	a1,-40(s0)
20014da2:	fdc42503          	lw	a0,-36(s0)
20014da6:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:156 (discriminator 2)
            /* Register plic handler for dispatching its device interrupts */
            intc->vtable->interrupt_register(intc, line, __metal_plic0_handler,
20014da8:	fdc42783          	lw	a5,-36(s0)
20014dac:	439c                	lw	a5,0(a5)
20014dae:	4fd8                	lw	a4,28(a5)
20014db0:	fe442683          	lw	a3,-28(s0)
20014db4:	200157b7          	lui	a5,0x20015
20014db8:	bfe78613          	addi	a2,a5,-1026 # 20014bfe <__metal_plic0_handler>
20014dbc:	fd842583          	lw	a1,-40(s0)
20014dc0:	fdc42503          	lw	a0,-36(s0)
20014dc4:	9702                	jalr	a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:159 (discriminator 2)
                                             plic);
            /* Enable plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_enable(intc, line);
20014dc6:	fdc42783          	lw	a5,-36(s0)
20014dca:	439c                	lw	a5,0(a5)
20014dcc:	53dc                	lw	a5,36(a5)
20014dce:	fd842583          	lw	a1,-40(s0)
20014dd2:	fdc42503          	lw	a0,-36(s0)
20014dd6:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 2)
        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
20014dd8:	fec42783          	lw	a5,-20(s0)
20014ddc:	0785                	addi	a5,a5,1
20014dde:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 1)
20014de2:	fec42783          	lw	a5,-20(s0)
20014de6:	eef051e3          	blez	a5,20014cc8 <__metal_driver_riscv_plic0_init+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:161
        }
        plic->init_done = 1;
20014dea:	fe442783          	lw	a5,-28(s0)
20014dee:	4705                	li	a4,1
20014df0:	c3d8                	sw	a4,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:163
    }
}
20014df2:	0001                	nop
20014df4:	50f2                	lw	ra,60(sp)
20014df6:	5462                	lw	s0,56(sp)
20014df8:	6121                	addi	sp,sp,64
20014dfa:	8082                	ret

20014dfc <__metal_driver_riscv_plic0_register>:
__metal_driver_riscv_plic0_register():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:167

int __metal_driver_riscv_plic0_register(struct metal_interrupt *controller,
                                        int id, metal_interrupt_handler_t isr,
                                        void *priv) {
20014dfc:	7179                	addi	sp,sp,-48
20014dfe:	d606                	sw	ra,44(sp)
20014e00:	d422                	sw	s0,40(sp)
20014e02:	1800                	addi	s0,sp,48
20014e04:	fca42e23          	sw	a0,-36(s0)
20014e08:	fcb42c23          	sw	a1,-40(s0)
20014e0c:	fcc42a23          	sw	a2,-44(s0)
20014e10:	fcd42823          	sw	a3,-48(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:168
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20014e14:	fdc42783          	lw	a5,-36(s0)
20014e18:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:170

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20014e1c:	fdc42503          	lw	a0,-36(s0)
20014e20:	ad3ff0ef          	jal	ra,200148f2 <__metal_driver_sifive_plic0_num_interrupts>
20014e24:	872a                	mv	a4,a0
20014e26:	fd842783          	lw	a5,-40(s0)
20014e2a:	00e7c463          	blt	a5,a4,20014e32 <__metal_driver_riscv_plic0_register+0x36>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:171
        return -1;
20014e2e:	57fd                	li	a5,-1
20014e30:	a051                	j	20014eb4 <__metal_driver_riscv_plic0_register+0xb8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:174
    }

    if (isr) {
20014e32:	fd442783          	lw	a5,-44(s0)
20014e36:	cf9d                	beqz	a5,20014e74 <__metal_driver_riscv_plic0_register+0x78>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:175
        __metal_driver_riscv_plic0_set_priority(controller, id, 2);
20014e38:	4609                	li	a2,2
20014e3a:	fd842583          	lw	a1,-40(s0)
20014e3e:	fdc42503          	lw	a0,-36(s0)
20014e42:	c6dff0ef          	jal	ra,20014aae <__metal_driver_riscv_plic0_set_priority>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:176
        plic->metal_exint_table[id] = isr;
20014e46:	fec42703          	lw	a4,-20(s0)
20014e4a:	fd842783          	lw	a5,-40(s0)
20014e4e:	078a                	slli	a5,a5,0x2
20014e50:	97ba                	add	a5,a5,a4
20014e52:	fd442703          	lw	a4,-44(s0)
20014e56:	c798                	sw	a4,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:177
        plic->metal_exdata_table[id].exint_data = priv;
20014e58:	fec42683          	lw	a3,-20(s0)
20014e5c:	fd842703          	lw	a4,-40(s0)
20014e60:	87ba                	mv	a5,a4
20014e62:	0786                	slli	a5,a5,0x1
20014e64:	97ba                	add	a5,a5,a4
20014e66:	078e                	slli	a5,a5,0x3
20014e68:	97b6                	add	a5,a5,a3
20014e6a:	fd042703          	lw	a4,-48(s0)
20014e6e:	0ee7a823          	sw	a4,240(a5)
20014e72:	a081                	j	20014eb2 <__metal_driver_riscv_plic0_register+0xb6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:179
    } else {
        __metal_driver_riscv_plic0_set_priority(controller, id, 1);
20014e74:	4605                	li	a2,1
20014e76:	fd842583          	lw	a1,-40(s0)
20014e7a:	fdc42503          	lw	a0,-36(s0)
20014e7e:	c31ff0ef          	jal	ra,20014aae <__metal_driver_riscv_plic0_set_priority>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:180
        plic->metal_exint_table[id] = __metal_plic0_default_handler;
20014e82:	fec42703          	lw	a4,-20(s0)
20014e86:	fd842783          	lw	a5,-40(s0)
20014e8a:	078a                	slli	a5,a5,0x2
20014e8c:	97ba                	add	a5,a5,a4
20014e8e:	20015737          	lui	a4,0x20015
20014e92:	be670713          	addi	a4,a4,-1050 # 20014be6 <__metal_plic0_default_handler>
20014e96:	c798                	sw	a4,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:181
        plic->metal_exdata_table[id].sub_int = priv;
20014e98:	fec42683          	lw	a3,-20(s0)
20014e9c:	fd842703          	lw	a4,-40(s0)
20014ea0:	87ba                	mv	a5,a4
20014ea2:	0786                	slli	a5,a5,0x1
20014ea4:	97ba                	add	a5,a5,a4
20014ea6:	078e                	slli	a5,a5,0x3
20014ea8:	97b6                	add	a5,a5,a3
20014eaa:	fd042703          	lw	a4,-48(s0)
20014eae:	0ee7a623          	sw	a4,236(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:184
    }

    return 0;
20014eb2:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:185
}
20014eb4:	853e                	mv	a0,a5
20014eb6:	50b2                	lw	ra,44(sp)
20014eb8:	5422                	lw	s0,40(sp)
20014eba:	6145                	addi	sp,sp,48
20014ebc:	8082                	ret

20014ebe <__metal_driver_riscv_plic0_enable>:
__metal_driver_riscv_plic0_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:188

int __metal_driver_riscv_plic0_enable(struct metal_interrupt *controller,
                                      int id) {
20014ebe:	7179                	addi	sp,sp,-48
20014ec0:	d606                	sw	ra,44(sp)
20014ec2:	d422                	sw	s0,40(sp)
20014ec4:	1800                	addi	s0,sp,48
20014ec6:	fca42e23          	sw	a0,-36(s0)
20014eca:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:189
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20014ece:	fdc42783          	lw	a5,-36(s0)
20014ed2:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:191

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20014ed6:	fdc42503          	lw	a0,-36(s0)
20014eda:	a19ff0ef          	jal	ra,200148f2 <__metal_driver_sifive_plic0_num_interrupts>
20014ede:	872a                	mv	a4,a0
20014ee0:	fd842783          	lw	a5,-40(s0)
20014ee4:	00e7c463          	blt	a5,a4,20014eec <__metal_driver_riscv_plic0_enable+0x2e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:192
        return -1;
20014ee8:	57fd                	li	a5,-1
20014eea:	a829                	j	20014f04 <__metal_driver_riscv_plic0_enable+0x46>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:195
    }

    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_ENABLE);
20014eec:	8a6fe0ef          	jal	ra,20012f92 <__metal_myhart_id>
20014ef0:	87aa                	mv	a5,a0
20014ef2:	4685                	li	a3,1
20014ef4:	fd842603          	lw	a2,-40(s0)
20014ef8:	85be                	mv	a1,a5
20014efa:	fec42503          	lw	a0,-20(s0)
20014efe:	c47ff0ef          	jal	ra,20014b44 <__metal_plic0_enable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:196
    return 0;
20014f02:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:197
}
20014f04:	853e                	mv	a0,a5
20014f06:	50b2                	lw	ra,44(sp)
20014f08:	5422                	lw	s0,40(sp)
20014f0a:	6145                	addi	sp,sp,48
20014f0c:	8082                	ret

20014f0e <__metal_driver_riscv_plic0_disable>:
__metal_driver_riscv_plic0_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:200

int __metal_driver_riscv_plic0_disable(struct metal_interrupt *controller,
                                       int id) {
20014f0e:	7179                	addi	sp,sp,-48
20014f10:	d606                	sw	ra,44(sp)
20014f12:	d422                	sw	s0,40(sp)
20014f14:	1800                	addi	s0,sp,48
20014f16:	fca42e23          	sw	a0,-36(s0)
20014f1a:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:201
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20014f1e:	fdc42783          	lw	a5,-36(s0)
20014f22:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:203

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20014f26:	fdc42503          	lw	a0,-36(s0)
20014f2a:	9c9ff0ef          	jal	ra,200148f2 <__metal_driver_sifive_plic0_num_interrupts>
20014f2e:	872a                	mv	a4,a0
20014f30:	fd842783          	lw	a5,-40(s0)
20014f34:	00e7c463          	blt	a5,a4,20014f3c <__metal_driver_riscv_plic0_disable+0x2e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:204
        return -1;
20014f38:	57fd                	li	a5,-1
20014f3a:	a829                	j	20014f54 <__metal_driver_riscv_plic0_disable+0x46>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:206
    }
    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_DISABLE);
20014f3c:	856fe0ef          	jal	ra,20012f92 <__metal_myhart_id>
20014f40:	87aa                	mv	a5,a0
20014f42:	4681                	li	a3,0
20014f44:	fd842603          	lw	a2,-40(s0)
20014f48:	85be                	mv	a1,a5
20014f4a:	fec42503          	lw	a0,-20(s0)
20014f4e:	bf7ff0ef          	jal	ra,20014b44 <__metal_plic0_enable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:207
    return 0;
20014f52:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:208
}
20014f54:	853e                	mv	a0,a5
20014f56:	50b2                	lw	ra,44(sp)
20014f58:	5422                	lw	s0,40(sp)
20014f5a:	6145                	addi	sp,sp,48
20014f5c:	8082                	ret

20014f5e <__metal_driver_riscv_plic0_set_threshold>:
__metal_driver_riscv_plic0_set_threshold():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:211

int __metal_driver_riscv_plic0_set_threshold(struct metal_interrupt *controller,
                                             unsigned int threshold) {
20014f5e:	1101                	addi	sp,sp,-32
20014f60:	ce06                	sw	ra,28(sp)
20014f62:	cc22                	sw	s0,24(sp)
20014f64:	1000                	addi	s0,sp,32
20014f66:	fea42623          	sw	a0,-20(s0)
20014f6a:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:212
    return __metal_plic0_set_threshold(controller, __metal_myhart_id(),
20014f6e:	824fe0ef          	jal	ra,20012f92 <__metal_myhart_id>
20014f72:	87aa                	mv	a5,a0
20014f74:	fe842603          	lw	a2,-24(s0)
20014f78:	85be                	mv	a1,a5
20014f7a:	fec42503          	lw	a0,-20(s0)
20014f7e:	ab1ff0ef          	jal	ra,20014a2e <__metal_plic0_set_threshold>
20014f82:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:214
                                       threshold);
}
20014f84:	853e                	mv	a0,a5
20014f86:	40f2                	lw	ra,28(sp)
20014f88:	4462                	lw	s0,24(sp)
20014f8a:	6105                	addi	sp,sp,32
20014f8c:	8082                	ret

20014f8e <__metal_driver_riscv_plic0_get_threshold>:
__metal_driver_riscv_plic0_get_threshold():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:217

unsigned int
__metal_driver_riscv_plic0_get_threshold(struct metal_interrupt *controller) {
20014f8e:	1101                	addi	sp,sp,-32
20014f90:	ce06                	sw	ra,28(sp)
20014f92:	cc22                	sw	s0,24(sp)
20014f94:	1000                	addi	s0,sp,32
20014f96:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:218
    return __metal_plic0_get_threshold(controller, __metal_myhart_id());
20014f9a:	ff9fd0ef          	jal	ra,20012f92 <__metal_myhart_id>
20014f9e:	87aa                	mv	a5,a0
20014fa0:	85be                	mv	a1,a5
20014fa2:	fec42503          	lw	a0,-20(s0)
20014fa6:	acfff0ef          	jal	ra,20014a74 <__metal_plic0_get_threshold>
20014faa:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:219
}
20014fac:	853e                	mv	a0,a5
20014fae:	40f2                	lw	ra,28(sp)
20014fb0:	4462                	lw	s0,24(sp)
20014fb2:	6105                	addi	sp,sp,32
20014fb4:	8082                	ret

20014fb6 <__metal_driver_riscv_plic0_affinity_enable>:
__metal_driver_riscv_plic0_affinity_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:223

metal_affinity
__metal_driver_riscv_plic0_affinity_enable(struct metal_interrupt *controller,
                                           metal_affinity bitmask, int id) {
20014fb6:	7179                	addi	sp,sp,-48
20014fb8:	d606                	sw	ra,44(sp)
20014fba:	d422                	sw	s0,40(sp)
20014fbc:	1800                	addi	s0,sp,48
20014fbe:	fca42e23          	sw	a0,-36(s0)
20014fc2:	fcb42c23          	sw	a1,-40(s0)
20014fc6:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:224
    metal_affinity ret = {0};
20014fca:	fe042223          	sw	zero,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:227
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20014fce:	fdc42783          	lw	a5,-36(s0)
20014fd2:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:229

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20014fd6:	fdc42503          	lw	a0,-36(s0)
20014fda:	919ff0ef          	jal	ra,200148f2 <__metal_driver_sifive_plic0_num_interrupts>
20014fde:	872a                	mv	a4,a0
20014fe0:	fd442783          	lw	a5,-44(s0)
20014fe4:	00e7c863          	blt	a5,a4,20014ff4 <__metal_driver_riscv_plic0_affinity_enable+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:230
        metal_affinity_set_val(ret, -1);
20014fe8:	57fd                	li	a5,-1
20014fea:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:231
        return ret;
20014fee:	fe442783          	lw	a5,-28(s0)
20014ff2:	a899                	j	20015048 <__metal_driver_riscv_plic0_affinity_enable+0x92>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:234
    }

    for_each_metal_affinity(context, bitmask) {
20014ff4:	fe042623          	sw	zero,-20(s0)
20014ff8:	a099                	j	2001503e <__metal_driver_riscv_plic0_affinity_enable+0x88>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:235
        if (context != 0)
20014ffa:	fec42783          	lw	a5,-20(s0)
20014ffe:	c795                	beqz	a5,2001502a <__metal_driver_riscv_plic0_affinity_enable+0x74>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:236
            metal_affinity_set_bit(
20015000:	4685                	li	a3,1
20015002:	fd442603          	lw	a2,-44(s0)
20015006:	fec42583          	lw	a1,-20(s0)
2001500a:	fe842503          	lw	a0,-24(s0)
2001500e:	b37ff0ef          	jal	ra,20014b44 <__metal_plic0_enable>
20015012:	87aa                	mv	a5,a0
20015014:	0017f713          	andi	a4,a5,1
20015018:	fec42783          	lw	a5,-20(s0)
2001501c:	00f71733          	sll	a4,a4,a5
20015020:	fe442783          	lw	a5,-28(s0)
20015024:	8fd9                	or	a5,a5,a4
20015026:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
2001502a:	fec42783          	lw	a5,-20(s0)
2001502e:	0785                	addi	a5,a5,1
20015030:	fef42623          	sw	a5,-20(s0)
20015034:	fd842783          	lw	a5,-40(s0)
20015038:	8385                	srli	a5,a5,0x1
2001503a:	fcf42c23          	sw	a5,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 1)
2001503e:	fd842783          	lw	a5,-40(s0)
20015042:	ffc5                	bnez	a5,20014ffa <__metal_driver_riscv_plic0_affinity_enable+0x44>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:241
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_ENABLE));
    }

    return ret;
20015044:	fe442783          	lw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:242 (discriminator 1)
}
20015048:	853e                	mv	a0,a5
2001504a:	50b2                	lw	ra,44(sp)
2001504c:	5422                	lw	s0,40(sp)
2001504e:	6145                	addi	sp,sp,48
20015050:	8082                	ret

20015052 <__metal_driver_riscv_plic0_affinity_disable>:
__metal_driver_riscv_plic0_affinity_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:246

metal_affinity
__metal_driver_riscv_plic0_affinity_disable(struct metal_interrupt *controller,
                                            metal_affinity bitmask, int id) {
20015052:	7179                	addi	sp,sp,-48
20015054:	d606                	sw	ra,44(sp)
20015056:	d422                	sw	s0,40(sp)
20015058:	1800                	addi	s0,sp,48
2001505a:	fca42e23          	sw	a0,-36(s0)
2001505e:	fcb42c23          	sw	a1,-40(s0)
20015062:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:247
    metal_affinity ret = {0};
20015066:	fe042223          	sw	zero,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:250
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
2001506a:	fdc42783          	lw	a5,-36(s0)
2001506e:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:252

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20015072:	fdc42503          	lw	a0,-36(s0)
20015076:	87dff0ef          	jal	ra,200148f2 <__metal_driver_sifive_plic0_num_interrupts>
2001507a:	872a                	mv	a4,a0
2001507c:	fd442783          	lw	a5,-44(s0)
20015080:	00e7c863          	blt	a5,a4,20015090 <__metal_driver_riscv_plic0_affinity_disable+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:253
        metal_affinity_set_val(ret, -1);
20015084:	57fd                	li	a5,-1
20015086:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:254
        return ret;
2001508a:	fe442783          	lw	a5,-28(s0)
2001508e:	a899                	j	200150e4 <__metal_driver_riscv_plic0_affinity_disable+0x92>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:257
    }

    for_each_metal_affinity(context, bitmask) {
20015090:	fe042623          	sw	zero,-20(s0)
20015094:	a099                	j	200150da <__metal_driver_riscv_plic0_affinity_disable+0x88>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:258
        if (context != 0)
20015096:	fec42783          	lw	a5,-20(s0)
2001509a:	c795                	beqz	a5,200150c6 <__metal_driver_riscv_plic0_affinity_disable+0x74>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:259
            metal_affinity_set_bit(
2001509c:	4681                	li	a3,0
2001509e:	fd442603          	lw	a2,-44(s0)
200150a2:	fec42583          	lw	a1,-20(s0)
200150a6:	fe842503          	lw	a0,-24(s0)
200150aa:	a9bff0ef          	jal	ra,20014b44 <__metal_plic0_enable>
200150ae:	87aa                	mv	a5,a0
200150b0:	0017f713          	andi	a4,a5,1
200150b4:	fec42783          	lw	a5,-20(s0)
200150b8:	00f71733          	sll	a4,a4,a5
200150bc:	fe442783          	lw	a5,-28(s0)
200150c0:	8fd9                	or	a5,a5,a4
200150c2:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
200150c6:	fec42783          	lw	a5,-20(s0)
200150ca:	0785                	addi	a5,a5,1
200150cc:	fef42623          	sw	a5,-20(s0)
200150d0:	fd842783          	lw	a5,-40(s0)
200150d4:	8385                	srli	a5,a5,0x1
200150d6:	fcf42c23          	sw	a5,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 1)
200150da:	fd842783          	lw	a5,-40(s0)
200150de:	ffc5                	bnez	a5,20015096 <__metal_driver_riscv_plic0_affinity_disable+0x44>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:264
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_DISABLE));
    }

    return ret;
200150e0:	fe442783          	lw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:265 (discriminator 1)
}
200150e4:	853e                	mv	a0,a5
200150e6:	50b2                	lw	ra,44(sp)
200150e8:	5422                	lw	s0,40(sp)
200150ea:	6145                	addi	sp,sp,48
200150ec:	8082                	ret

200150ee <__metal_driver_riscv_plic0_affinity_set_threshold>:
__metal_driver_riscv_plic0_affinity_set_threshold():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:269

metal_affinity __metal_driver_riscv_plic0_affinity_set_threshold(
    struct metal_interrupt *controller, metal_affinity bitmask,
    unsigned int threshold) {
200150ee:	7179                	addi	sp,sp,-48
200150f0:	d606                	sw	ra,44(sp)
200150f2:	d422                	sw	s0,40(sp)
200150f4:	1800                	addi	s0,sp,48
200150f6:	fca42e23          	sw	a0,-36(s0)
200150fa:	fcb42c23          	sw	a1,-40(s0)
200150fe:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:270
    metal_affinity ret = {0};
20015102:	fe042423          	sw	zero,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:273
    int context;

    for_each_metal_affinity(context, bitmask) {
20015106:	fe042623          	sw	zero,-20(s0)
2001510a:	a091                	j	2001514e <__metal_driver_riscv_plic0_affinity_set_threshold+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:274
        if (context != 0)
2001510c:	fec42783          	lw	a5,-20(s0)
20015110:	c78d                	beqz	a5,2001513a <__metal_driver_riscv_plic0_affinity_set_threshold+0x4c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:275
            metal_affinity_set_bit(
20015112:	fd442603          	lw	a2,-44(s0)
20015116:	fec42583          	lw	a1,-20(s0)
2001511a:	fdc42503          	lw	a0,-36(s0)
2001511e:	911ff0ef          	jal	ra,20014a2e <__metal_plic0_set_threshold>
20015122:	87aa                	mv	a5,a0
20015124:	0017f713          	andi	a4,a5,1
20015128:	fec42783          	lw	a5,-20(s0)
2001512c:	00f71733          	sll	a4,a4,a5
20015130:	fe842783          	lw	a5,-24(s0)
20015134:	8fd9                	or	a5,a5,a4
20015136:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
2001513a:	fec42783          	lw	a5,-20(s0)
2001513e:	0785                	addi	a5,a5,1
20015140:	fef42623          	sw	a5,-20(s0)
20015144:	fd842783          	lw	a5,-40(s0)
20015148:	8385                	srli	a5,a5,0x1
2001514a:	fcf42c23          	sw	a5,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 1)
2001514e:	fd842783          	lw	a5,-40(s0)
20015152:	ffcd                	bnez	a5,2001510c <__metal_driver_riscv_plic0_affinity_set_threshold+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:280
                ret, context,
                __metal_plic0_set_threshold(controller, context, threshold));
    }

    return ret;
20015154:	fe842783          	lw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:281
}
20015158:	853e                	mv	a0,a5
2001515a:	50b2                	lw	ra,44(sp)
2001515c:	5422                	lw	s0,40(sp)
2001515e:	6145                	addi	sp,sp,48
20015160:	8082                	ret

20015162 <__metal_driver_riscv_plic0_affinity_get_threshold>:
__metal_driver_riscv_plic0_affinity_get_threshold():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:284

unsigned int __metal_driver_riscv_plic0_affinity_get_threshold(
    struct metal_interrupt *controller, int context_id) {
20015162:	1101                	addi	sp,sp,-32
20015164:	ce06                	sw	ra,28(sp)
20015166:	cc22                	sw	s0,24(sp)
20015168:	1000                	addi	s0,sp,32
2001516a:	fea42623          	sw	a0,-20(s0)
2001516e:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:285
    __metal_plic0_get_threshold(controller, context_id);
20015172:	fe842583          	lw	a1,-24(s0)
20015176:	fec42503          	lw	a0,-20(s0)
2001517a:	8fbff0ef          	jal	ra,20014a74 <__metal_plic0_get_threshold>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:286
    return 0;
2001517e:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:287
}
20015180:	853e                	mv	a0,a5
20015182:	40f2                	lw	ra,28(sp)
20015184:	4462                	lw	s0,24(sp)
20015186:	6105                	addi	sp,sp,32
20015188:	8082                	ret

2001518a <__metal_driver_sifive_fe310_g000_hfrosc_ref>:
__metal_driver_sifive_fe310_g000_hfrosc_ref():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1242



/* --------------------- sifive_fe310_g000_hfrosc ------------ */
static __inline__ struct metal_clock * __metal_driver_sifive_fe310_g000_hfrosc_ref(const struct metal_clock *clock)
{
2001518a:	1101                	addi	sp,sp,-32
2001518c:	ce22                	sw	s0,28(sp)
2001518e:	1000                	addi	s0,sp,32
20015190:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1243
		return (struct metal_clock *)&__metal_dt_clock_2.clock;
20015194:	800007b7          	lui	a5,0x80000
20015198:	06c78793          	addi	a5,a5,108 # 8000006c <metal_segment_heap_target_end+0xffffe8ac>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1244
}
2001519c:	853e                	mv	a0,a5
2001519e:	4472                	lw	s0,28(sp)
200151a0:	6105                	addi	sp,sp,32
200151a2:	8082                	ret

200151a4 <__metal_driver_sifive_fe310_g000_hfrosc_config_base>:
__metal_driver_sifive_fe310_g000_hfrosc_config_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1247

static __inline__ struct __metal_driver_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_hfrosc_config_base(const struct metal_clock *clock)
{
200151a4:	1101                	addi	sp,sp,-32
200151a6:	ce22                	sw	s0,28(sp)
200151a8:	1000                	addi	s0,sp,32
200151aa:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1248
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
200151ae:	82418793          	addi	a5,gp,-2012 # 80000ae4 <__metal_dt_prci_10008000>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1249
}
200151b2:	853e                	mv	a0,a5
200151b4:	4472                	lw	s0,28(sp)
200151b6:	6105                	addi	sp,sp,32
200151b8:	8082                	ret

200151ba <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfrosc_config_offset():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1257
{
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
}

static __inline__ long __metal_driver_sifive_fe310_g000_hfrosc_config_offset(const struct metal_clock *clock)
{
200151ba:	1101                	addi	sp,sp,-32
200151bc:	ce22                	sw	s0,28(sp)
200151be:	1000                	addi	s0,sp,32
200151c0:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1258
		return METAL_SIFIVE_FE310_G000_PRCI_HFROSCCFG;
200151c4:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1259
}
200151c6:	853e                	mv	a0,a5
200151c8:	4472                	lw	s0,28(sp)
200151ca:	6105                	addi	sp,sp,32
200151cc:	8082                	ret

200151ce <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1374
{
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_SIZE;
}

static __inline__ const struct __metal_driver_vtable_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_prci_vtable( )
{
200151ce:	1141                	addi	sp,sp,-16
200151d0:	c622                	sw	s0,12(sp)
200151d2:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1375
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
200151d4:	83818793          	addi	a5,gp,-1992 # 80000af8 <__metal_driver_vtable_sifive_fe310_g000_prci>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1376
}
200151d8:	853e                	mv	a0,a5
200151da:	4432                	lw	s0,12(sp)
200151dc:	0141                	addi	sp,sp,16
200151de:	8082                	ret

200151e0 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:17
#define CONFIG_TRIM 0x001F0000UL
#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(
    const struct metal_clock *clock) {
200151e0:	7139                	addi	sp,sp,-64
200151e2:	de06                	sw	ra,60(sp)
200151e4:	dc22                	sw	s0,56(sp)
200151e6:	0080                	addi	s0,sp,64
200151e8:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:19
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfrosc_ref(clock);
200151ec:	fcc42503          	lw	a0,-52(s0)
200151f0:	3f69                	jal	2001518a <__metal_driver_sifive_fe310_g000_hfrosc_ref>
200151f2:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:21
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfrosc_config_offset(clock);
200151f6:	fcc42503          	lw	a0,-52(s0)
200151fa:	37c1                	jal	200151ba <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>
200151fc:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:23
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfrosc_config_base(clock);
20015200:	fcc42503          	lw	a0,-52(s0)
20015204:	3745                	jal	200151a4 <__metal_driver_sifive_fe310_g000_hfrosc_config_base>
20015206:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:25
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
2001520a:	37d1                	jal	200151ce <__metal_driver_sifive_fe310_g000_prci_vtable>
2001520c:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:26
    long cfg = vtable->get_reg(config_base, config_offset);
20015210:	fe042783          	lw	a5,-32(s0)
20015214:	439c                	lw	a5,0(a5)
20015216:	fe842583          	lw	a1,-24(s0)
2001521a:	fe442503          	lw	a0,-28(s0)
2001521e:	9782                	jalr	a5
20015220:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:28

    if ((cfg & CONFIG_ENABLE) == 0)
20015224:	fdc42703          	lw	a4,-36(s0)
20015228:	400007b7          	lui	a5,0x40000
2001522c:	8ff9                	and	a5,a5,a4
2001522e:	e399                	bnez	a5,20015234 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x54>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:29
        return -1;
20015230:	57fd                	li	a5,-1
20015232:	a025                	j	2001525a <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:30
    if ((cfg & CONFIG_READY) == 0)
20015234:	fdc42783          	lw	a5,-36(s0)
20015238:	0007c463          	bltz	a5,20015240 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:31
        return -1;
2001523c:	57fd                	li	a5,-1
2001523e:	a831                	j	2001525a <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:32
    return metal_clock_get_rate_hz(ref) / ((cfg & CONFIG_DIVIDER) + 1);
20015240:	fec42503          	lw	a0,-20(s0)
20015244:	44a020ef          	jal	ra,2001768e <metal_clock_get_rate_hz>
20015248:	87aa                	mv	a5,a0
2001524a:	873e                	mv	a4,a5
2001524c:	fdc42783          	lw	a5,-36(s0)
20015250:	03f7f793          	andi	a5,a5,63
20015254:	0785                	addi	a5,a5,1
20015256:	02f757b3          	divu	a5,a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:33
}
2001525a:	853e                	mv	a0,a5
2001525c:	50f2                	lw	ra,60(sp)
2001525e:	5462                	lw	s0,56(sp)
20015260:	6121                	addi	sp,sp,64
20015262:	8082                	ret

20015264 <__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:36

long __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
20015264:	1101                	addi	sp,sp,-32
20015266:	ce06                	sw	ra,28(sp)
20015268:	cc22                	sw	s0,24(sp)
2001526a:	1000                	addi	s0,sp,32
2001526c:	fea42623          	sw	a0,-20(s0)
20015270:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:37
    return __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(clock);
20015274:	fec42503          	lw	a0,-20(s0)
20015278:	37a5                	jal	200151e0 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>
2001527a:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:38
}
2001527c:	853e                	mv	a0,a5
2001527e:	40f2                	lw	ra,28(sp)
20015280:	4462                	lw	s0,24(sp)
20015282:	6105                	addi	sp,sp,32
20015284:	8082                	ret

20015286 <__metal_driver_sifive_fe310_g000_hfxosc_ref>:
__metal_driver_sifive_fe310_g000_hfxosc_ref():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1265
{
20015286:	1101                	addi	sp,sp,-32
20015288:	ce22                	sw	s0,28(sp)
2001528a:	1000                	addi	s0,sp,32
2001528c:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1266
		return (struct metal_clock *)&__metal_dt_clock_0.clock;
20015290:	800007b7          	lui	a5,0x80000
20015294:	06078793          	addi	a5,a5,96 # 80000060 <metal_segment_heap_target_end+0xffffe8a0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1267
}
20015298:	853e                	mv	a0,a5
2001529a:	4472                	lw	s0,28(sp)
2001529c:	6105                	addi	sp,sp,32
2001529e:	8082                	ret

200152a0 <__metal_driver_sifive_fe310_g000_hfxosc_config_base>:
__metal_driver_sifive_fe310_g000_hfxosc_config_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1270
{
200152a0:	1101                	addi	sp,sp,-32
200152a2:	ce22                	sw	s0,28(sp)
200152a4:	1000                	addi	s0,sp,32
200152a6:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1271
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
200152aa:	82418793          	addi	a5,gp,-2012 # 80000ae4 <__metal_dt_prci_10008000>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1272
}
200152ae:	853e                	mv	a0,a5
200152b0:	4472                	lw	s0,28(sp)
200152b2:	6105                	addi	sp,sp,32
200152b4:	8082                	ret

200152b6 <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfxosc_config_offset():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1275
{
200152b6:	1101                	addi	sp,sp,-32
200152b8:	ce22                	sw	s0,28(sp)
200152ba:	1000                	addi	s0,sp,32
200152bc:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1276
		return METAL_SIFIVE_FE310_G000_PRCI_HFXOSCCFG;
200152c0:	4791                	li	a5,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1277
}
200152c2:	853e                	mv	a0,a5
200152c4:	4472                	lw	s0,28(sp)
200152c6:	6105                	addi	sp,sp,32
200152c8:	8082                	ret

200152ca <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1374
{
200152ca:	1141                	addi	sp,sp,-16
200152cc:	c622                	sw	s0,12(sp)
200152ce:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1375
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
200152d0:	83818793          	addi	a5,gp,-1992 # 80000af8 <__metal_driver_vtable_sifive_fe310_g000_prci>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1376
}
200152d4:	853e                	mv	a0,a5
200152d6:	4432                	lw	s0,12(sp)
200152d8:	0141                	addi	sp,sp,16
200152da:	8082                	ret

200152dc <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:15

#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(
    const struct metal_clock *clock) {
200152dc:	7139                	addi	sp,sp,-64
200152de:	de06                	sw	ra,60(sp)
200152e0:	dc22                	sw	s0,56(sp)
200152e2:	0080                	addi	s0,sp,64
200152e4:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:17
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfxosc_ref(clock);
200152e8:	fcc42503          	lw	a0,-52(s0)
200152ec:	3f69                	jal	20015286 <__metal_driver_sifive_fe310_g000_hfxosc_ref>
200152ee:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:19
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfxosc_config_offset(clock);
200152f2:	fcc42503          	lw	a0,-52(s0)
200152f6:	37c1                	jal	200152b6 <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>
200152f8:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:21
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfxosc_config_base(clock);
200152fc:	fcc42503          	lw	a0,-52(s0)
20015300:	3745                	jal	200152a0 <__metal_driver_sifive_fe310_g000_hfxosc_config_base>
20015302:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:23
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
20015306:	37d1                	jal	200152ca <__metal_driver_sifive_fe310_g000_prci_vtable>
20015308:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:24
    long cfg = vtable->get_reg(config_base, config_offset);
2001530c:	fe042783          	lw	a5,-32(s0)
20015310:	439c                	lw	a5,0(a5)
20015312:	fe842583          	lw	a1,-24(s0)
20015316:	fe442503          	lw	a0,-28(s0)
2001531a:	9782                	jalr	a5
2001531c:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:26

    if ((cfg & CONFIG_ENABLE) == 0)
20015320:	fdc42703          	lw	a4,-36(s0)
20015324:	400007b7          	lui	a5,0x40000
20015328:	8ff9                	and	a5,a5,a4
2001532a:	e399                	bnez	a5,20015330 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x54>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:27
        return -1;
2001532c:	57fd                	li	a5,-1
2001532e:	a821                	j	20015346 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:28
    if ((cfg & CONFIG_READY) == 0)
20015330:	fdc42783          	lw	a5,-36(s0)
20015334:	0007c463          	bltz	a5,2001533c <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:29
        return -1;
20015338:	57fd                	li	a5,-1
2001533a:	a031                	j	20015346 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:30
    return metal_clock_get_rate_hz(ref);
2001533c:	fec42503          	lw	a0,-20(s0)
20015340:	34e020ef          	jal	ra,2001768e <metal_clock_get_rate_hz>
20015344:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:31
}
20015346:	853e                	mv	a0,a5
20015348:	50f2                	lw	ra,60(sp)
2001534a:	5462                	lw	s0,56(sp)
2001534c:	6121                	addi	sp,sp,64
2001534e:	8082                	ret

20015350 <__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:34

long __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
20015350:	1101                	addi	sp,sp,-32
20015352:	ce06                	sw	ra,28(sp)
20015354:	cc22                	sw	s0,24(sp)
20015356:	1000                	addi	s0,sp,32
20015358:	fea42623          	sw	a0,-20(s0)
2001535c:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:35
    return __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(clock);
20015360:	fec42503          	lw	a0,-20(s0)
20015364:	3fa5                	jal	200152dc <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>
20015366:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:36
}
20015368:	853e                	mv	a0,a5
2001536a:	40f2                	lw	ra,28(sp)
2001536c:	4462                	lw	s0,24(sp)
2001536e:	6105                	addi	sp,sp,32
20015370:	8082                	ret

20015372 <__metal_driver_sifive_fe310_g000_pll_pllsel0>:
__metal_driver_sifive_fe310_g000_pll_pllsel0():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1326
{
20015372:	1101                	addi	sp,sp,-32
20015374:	ce22                	sw	s0,28(sp)
20015376:	1000                	addi	s0,sp,32
20015378:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1327
		return (struct metal_clock *)&__metal_dt_clock_3.clock;
2001537c:	800017b7          	lui	a5,0x80001
20015380:	a9c78793          	addi	a5,a5,-1380 # 80000a9c <metal_segment_heap_target_end+0xfffff2dc>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1328
}
20015384:	853e                	mv	a0,a5
20015386:	4472                	lw	s0,28(sp)
20015388:	6105                	addi	sp,sp,32
2001538a:	8082                	ret

2001538c <__metal_driver_sifive_fe310_g000_pll_pllref>:
__metal_driver_sifive_fe310_g000_pll_pllref():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1331
{
2001538c:	1101                	addi	sp,sp,-32
2001538e:	ce22                	sw	s0,28(sp)
20015390:	1000                	addi	s0,sp,32
20015392:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1332
		return (struct metal_clock *)&__metal_dt_clock_1.clock;
20015396:	800017b7          	lui	a5,0x80001
2001539a:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xfffff2e8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1333
}
2001539e:	853e                	mv	a0,a5
200153a0:	4472                	lw	s0,28(sp)
200153a2:	6105                	addi	sp,sp,32
200153a4:	8082                	ret

200153a6 <__metal_driver_sifive_fe310_g000_pll_divider_base>:
__metal_driver_sifive_fe310_g000_pll_divider_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1336
{
200153a6:	1101                	addi	sp,sp,-32
200153a8:	ce22                	sw	s0,28(sp)
200153aa:	1000                	addi	s0,sp,32
200153ac:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1337
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
200153b0:	82418793          	addi	a5,gp,-2012 # 80000ae4 <__metal_dt_prci_10008000>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1338
}
200153b4:	853e                	mv	a0,a5
200153b6:	4472                	lw	s0,28(sp)
200153b8:	6105                	addi	sp,sp,32
200153ba:	8082                	ret

200153bc <__metal_driver_sifive_fe310_g000_pll_divider_offset>:
__metal_driver_sifive_fe310_g000_pll_divider_offset():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1341
{
200153bc:	1101                	addi	sp,sp,-32
200153be:	ce22                	sw	s0,28(sp)
200153c0:	1000                	addi	s0,sp,32
200153c2:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1342
		return METAL_SIFIVE_FE310_G000_PRCI_PLLOUTDIV;
200153c6:	47b1                	li	a5,12
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1343
}
200153c8:	853e                	mv	a0,a5
200153ca:	4472                	lw	s0,28(sp)
200153cc:	6105                	addi	sp,sp,32
200153ce:	8082                	ret

200153d0 <__metal_driver_sifive_fe310_g000_pll_config_base>:
__metal_driver_sifive_fe310_g000_pll_config_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1346
{
200153d0:	1141                	addi	sp,sp,-16
200153d2:	c622                	sw	s0,12(sp)
200153d4:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1347
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
200153d6:	82418793          	addi	a5,gp,-2012 # 80000ae4 <__metal_dt_prci_10008000>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1348
}
200153da:	853e                	mv	a0,a5
200153dc:	4432                	lw	s0,12(sp)
200153de:	0141                	addi	sp,sp,16
200153e0:	8082                	ret

200153e2 <__metal_driver_sifive_fe310_g000_pll_config_offset>:
__metal_driver_sifive_fe310_g000_pll_config_offset():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1351
{
200153e2:	1141                	addi	sp,sp,-16
200153e4:	c622                	sw	s0,12(sp)
200153e6:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1352
		return METAL_SIFIVE_FE310_G000_PRCI_PLLCFG;
200153e8:	47a1                	li	a5,8
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1353
}
200153ea:	853e                	mv	a0,a5
200153ec:	4432                	lw	s0,12(sp)
200153ee:	0141                	addi	sp,sp,16
200153f0:	8082                	ret

200153f2 <__metal_driver_sifive_fe310_g000_pll_init_rate>:
__metal_driver_sifive_fe310_g000_pll_init_rate():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1356
{
200153f2:	1141                	addi	sp,sp,-16
200153f4:	c622                	sw	s0,12(sp)
200153f6:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1357
		return 16000000;
200153f8:	00f427b7          	lui	a5,0xf42
200153fc:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1358
}
20015400:	853e                	mv	a0,a5
20015402:	4432                	lw	s0,12(sp)
20015404:	0141                	addi	sp,sp,16
20015406:	8082                	ret

20015408 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1364
{
20015408:	1141                	addi	sp,sp,-16
2001540a:	c622                	sw	s0,12(sp)
2001540c:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1365
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
2001540e:	100087b7          	lui	a5,0x10008
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1366
}
20015412:	853e                	mv	a0,a5
20015414:	4432                	lw	s0,12(sp)
20015416:	0141                	addi	sp,sp,16
20015418:	8082                	ret

2001541a <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1374
{
2001541a:	1141                	addi	sp,sp,-16
2001541c:	c622                	sw	s0,12(sp)
2001541e:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1375
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20015420:	83818793          	addi	a5,gp,-1992 # 80000af8 <__metal_driver_vtable_sifive_fe310_g000_prci>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1376
}
20015424:	853e                	mv	a0,a5
20015426:	4432                	lw	s0,12(sp)
20015428:	0141                	addi	sp,sp,16
2001542a:	8082                	ret

2001542c <get_pll_config_freq>:
get_pll_config_freq():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:141
                                const struct pll_config_t *config) {
2001542c:	1101                	addi	sp,sp,-32
2001542e:	ce22                	sw	s0,28(sp)
20015430:	1000                	addi	s0,sp,32
20015432:	fea42623          	sw	a0,-20(s0)
20015436:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142
    if (pll_input_rate < config->min_input_rate ||
2001543a:	fe842783          	lw	a5,-24(s0)
2001543e:	479c                	lw	a5,8(a5)
20015440:	fec42703          	lw	a4,-20(s0)
20015444:	00f76963          	bltu	a4,a5,20015456 <get_pll_config_freq+0x2a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:143 (discriminator 1)
        pll_input_rate > config->max_input_rate)
20015448:	fe842783          	lw	a5,-24(s0)
2001544c:	47dc                	lw	a5,12(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142 (discriminator 1)
    if (pll_input_rate < config->min_input_rate ||
2001544e:	fec42703          	lw	a4,-20(s0)
20015452:	00e7f463          	bgeu	a5,a4,2001545a <get_pll_config_freq+0x2e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:144
        return PLL_CONFIG_NOT_VALID;
20015456:	57fd                	li	a5,-1
20015458:	a829                	j	20015472 <get_pll_config_freq+0x46>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:146
    return pll_input_rate * config->multiplier / config->divisor;
2001545a:	fe842783          	lw	a5,-24(s0)
2001545e:	4398                	lw	a4,0(a5)
20015460:	fec42783          	lw	a5,-20(s0)
20015464:	02f70733          	mul	a4,a4,a5
20015468:	fe842783          	lw	a5,-24(s0)
2001546c:	43dc                	lw	a5,4(a5)
2001546e:	02f757b3          	divu	a5,a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:147
}
20015472:	853e                	mv	a0,a5
20015474:	4472                	lw	s0,28(sp)
20015476:	6105                	addi	sp,sp,32
20015478:	8082                	ret

2001547a <__metal_driver_sifive_fe310_g000_pll_init>:
__metal_driver_sifive_fe310_g000_pll_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:162
    struct __metal_driver_sifive_fe310_g000_pll *pll) {
2001547a:	7139                	addi	sp,sp,-64
2001547c:	de06                	sw	ra,60(sp)
2001547e:	dc22                	sw	s0,56(sp)
20015480:	0080                	addi	s0,sp,64
20015482:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:164
        __metal_driver_sifive_fe310_g000_pll_pllref(&(pll->clock));
20015486:	fcc42783          	lw	a5,-52(s0)
2001548a:	853e                	mv	a0,a5
2001548c:	3701                	jal	2001538c <__metal_driver_sifive_fe310_g000_pll_pllref>
2001548e:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:165
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20015492:	3785                	jal	200153f2 <__metal_driver_sifive_fe310_g000_pll_init_rate>
20015494:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:166
    long config_offset = __metal_driver_sifive_fe310_g000_pll_config_offset();
20015498:	37a9                	jal	200153e2 <__metal_driver_sifive_fe310_g000_pll_config_offset>
2001549a:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:167
    long base = __metal_driver_sifive_fe310_g000_prci_base();
2001549e:	37ad                	jal	20015408 <__metal_driver_sifive_fe310_g000_prci_base>
200154a0:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:169
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
200154a4:	fe042703          	lw	a4,-32(s0)
200154a8:	fe442783          	lw	a5,-28(s0)
200154ac:	97ba                	add	a5,a5,a4
200154ae:	fcf42e23          	sw	a5,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:173
    _metal_clock_call_all_callbacks(pll->clock._pre_rate_change_callback);
200154b2:	fcc42783          	lw	a5,-52(s0)
200154b6:	43dc                	lw	a5,4(a5)
200154b8:	853e                	mv	a0,a5
200154ba:	140020ef          	jal	ra,200175fa <_metal_clock_call_all_callbacks>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:177
    if ((__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL) != 0)
200154be:	fdc42783          	lw	a5,-36(s0)
200154c2:	4398                	lw	a4,0(a5)
200154c4:	67c1                	lui	a5,0x10
200154c6:	8ff9                	and	a5,a5,a4
200154c8:	cb91                	beqz	a5,200154dc <__metal_driver_sifive_fe310_g000_pll_init+0x62>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:178
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
200154ca:	fdc42783          	lw	a5,-36(s0)
200154ce:	4398                	lw	a4,0(a5)
200154d0:	77c1                	lui	a5,0xffff0
200154d2:	17fd                	addi	a5,a5,-1
200154d4:	8f7d                	and	a4,a4,a5
200154d6:	fdc42783          	lw	a5,-36(s0)
200154da:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:181
    if (pllref != NULL)
200154dc:	fec42783          	lw	a5,-20(s0)
200154e0:	cb91                	beqz	a5,200154f4 <__metal_driver_sifive_fe310_g000_pll_init+0x7a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:182
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_REFSEL;
200154e2:	fdc42783          	lw	a5,-36(s0)
200154e6:	4398                	lw	a4,0(a5)
200154e8:	000207b7          	lui	a5,0x20
200154ec:	8f5d                	or	a4,a4,a5
200154ee:	fdc42783          	lw	a5,-36(s0)
200154f2:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:187
    pll->clock.vtable->set_rate_hz(&(pll->clock), init_rate);
200154f4:	fcc42783          	lw	a5,-52(s0)
200154f8:	439c                	lw	a5,0(a5)
200154fa:	43d8                	lw	a4,4(a5)
200154fc:	fcc42783          	lw	a5,-52(s0)
20015500:	fe842583          	lw	a1,-24(s0)
20015504:	853e                	mv	a0,a5
20015506:	9702                	jalr	a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:190
    _metal_clock_call_all_callbacks(pll->clock._post_rate_change_callback);
20015508:	fcc42783          	lw	a5,-52(s0)
2001550c:	479c                	lw	a5,8(a5)
2001550e:	853e                	mv	a0,a5
20015510:	0ea020ef          	jal	ra,200175fa <_metal_clock_call_all_callbacks>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:191
}
20015514:	0001                	nop
20015516:	50f2                	lw	ra,60(sp)
20015518:	5462                	lw	s0,56(sp)
2001551a:	6121                	addi	sp,sp,64
2001551c:	8082                	ret

2001551e <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_get_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:194
    const struct metal_clock *clock) {
2001551e:	711d                	addi	sp,sp,-96
20015520:	ce86                	sw	ra,92(sp)
20015522:	cca2                	sw	s0,88(sp)
20015524:	1080                	addi	s0,sp,96
20015526:	faa42623          	sw	a0,-84(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:196
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
2001552a:	fac42503          	lw	a0,-84(s0)
2001552e:	3db9                	jal	2001538c <__metal_driver_sifive_fe310_g000_pll_pllref>
20015530:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:198
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
20015534:	fac42503          	lw	a0,-84(s0)
20015538:	3d2d                	jal	20015372 <__metal_driver_sifive_fe310_g000_pll_pllsel0>
2001553a:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:200
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
2001553e:	fac42503          	lw	a0,-84(s0)
20015542:	3545                	jal	200153e2 <__metal_driver_sifive_fe310_g000_pll_config_offset>
20015544:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:202
        __metal_driver_sifive_fe310_g000_pll_config_base(clock);
20015548:	fac42503          	lw	a0,-84(s0)
2001554c:	3551                	jal	200153d0 <__metal_driver_sifive_fe310_g000_pll_config_base>
2001554e:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:204
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
20015552:	fac42503          	lw	a0,-84(s0)
20015556:	359d                	jal	200153bc <__metal_driver_sifive_fe310_g000_pll_divider_offset>
20015558:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:206
        __metal_driver_sifive_fe310_g000_pll_divider_base(clock);
2001555c:	fac42503          	lw	a0,-84(s0)
20015560:	3599                	jal	200153a6 <__metal_driver_sifive_fe310_g000_pll_divider_base>
20015562:	fca42c23          	sw	a0,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:208
        __metal_driver_sifive_fe310_g000_prci_vtable();
20015566:	3d55                	jal	2001541a <__metal_driver_sifive_fe310_g000_prci_vtable>
20015568:	fca42a23          	sw	a0,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:210
    long cfg = vtable->get_reg(config_base, config_offset);
2001556c:	fd442783          	lw	a5,-44(s0)
20015570:	439c                	lw	a5,0(a5)
20015572:	fe442583          	lw	a1,-28(s0)
20015576:	fe042503          	lw	a0,-32(s0)
2001557a:	9782                	jalr	a5
2001557c:	fca42823          	sw	a0,-48(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:211
    long div = vtable->get_reg(divider_base, divider_offset);
20015580:	fd442783          	lw	a5,-44(s0)
20015584:	439c                	lw	a5,0(a5)
20015586:	fdc42583          	lw	a1,-36(s0)
2001558a:	fd842503          	lw	a0,-40(s0)
2001558e:	9782                	jalr	a5
20015590:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:215
    if (__METAL_GET_FIELD(cfg, PLL_SEL) == 0)
20015594:	fd042703          	lw	a4,-48(s0)
20015598:	67c1                	lui	a5,0x10
2001559a:	8f7d                	and	a4,a4,a5
2001559c:	67c1                	lui	a5,0x10
2001559e:	00f77863          	bgeu	a4,a5,200155ae <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x90>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:216
        return metal_clock_get_rate_hz(pllsel0);
200155a2:	fe842503          	lw	a0,-24(s0)
200155a6:	0e8020ef          	jal	ra,2001768e <metal_clock_get_rate_hz>
200155aa:	87aa                	mv	a5,a0
200155ac:	a8e1                	j	20015684 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:221
        __METAL_GET_FIELD(cfg, PLL_REFSEL) ? pllref : pllsel0);
200155ae:	fd042703          	lw	a4,-48(s0)
200155b2:	000207b7          	lui	a5,0x20
200155b6:	8f7d                	and	a4,a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220
    long ref_hz = metal_clock_get_rate_hz(
200155b8:	000207b7          	lui	a5,0x20
200155bc:	00f76563          	bltu	a4,a5,200155c6 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xa8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 1)
200155c0:	fec42783          	lw	a5,-20(s0)
200155c4:	a019                	j	200155ca <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xac>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 2)
200155c6:	fe842783          	lw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 4)
200155ca:	853e                	mv	a0,a5
200155cc:	0c2020ef          	jal	ra,2001768e <metal_clock_get_rate_hz>
200155d0:	fca42423          	sw	a0,-56(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:225 (discriminator 4)
    if (__METAL_GET_FIELD(cfg, PLL_BYPASS))
200155d4:	fd042703          	lw	a4,-48(s0)
200155d8:	000407b7          	lui	a5,0x40
200155dc:	8f7d                	and	a4,a4,a5
200155de:	000407b7          	lui	a5,0x40
200155e2:	00f76563          	bltu	a4,a5,200155ec <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xce>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:226
        return ref_hz;
200155e6:	fc842783          	lw	a5,-56(s0)
200155ea:	a869                	j	20015684 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:229
    long div_r = __METAL_GET_FIELD(cfg, PLL_R) + 1;
200155ec:	fd042783          	lw	a5,-48(s0)
200155f0:	8b9d                	andi	a5,a5,7
200155f2:	0785                	addi	a5,a5,1
200155f4:	fcf42223          	sw	a5,-60(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:230
    long mul_f = 2 * (__METAL_GET_FIELD(cfg, PLL_F) + 1);
200155f8:	fd042783          	lw	a5,-48(s0)
200155fc:	3f07f793          	andi	a5,a5,1008
20015600:	8391                	srli	a5,a5,0x4
20015602:	0785                	addi	a5,a5,1
20015604:	0786                	slli	a5,a5,0x1
20015606:	fcf42023          	sw	a5,-64(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:231
    if (__METAL_GET_FIELD(cfg, PLL_Q) == 0)
2001560a:	fd042703          	lw	a4,-48(s0)
2001560e:	6785                	lui	a5,0x1
20015610:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20015614:	8f7d                	and	a4,a4,a5
20015616:	3ff00793          	li	a5,1023
2001561a:	00e7e463          	bltu	a5,a4,20015622 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x104>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:232
        return -1;
2001561e:	57fd                	li	a5,-1
20015620:	a095                	j	20015684 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:233
    long div_q = 1 << __METAL_GET_FIELD(cfg, PLL_Q);
20015622:	fd042703          	lw	a4,-48(s0)
20015626:	6785                	lui	a5,0x1
20015628:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
2001562c:	8ff9                	and	a5,a5,a4
2001562e:	83a9                	srli	a5,a5,0xa
20015630:	4705                	li	a4,1
20015632:	00f717b3          	sll	a5,a4,a5
20015636:	faf42e23          	sw	a5,-68(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:238
    long pllout = (((ref_hz / div_r) * mul_f) / div_q);
2001563a:	fc842703          	lw	a4,-56(s0)
2001563e:	fc442783          	lw	a5,-60(s0)
20015642:	02f74733          	div	a4,a4,a5
20015646:	fc042783          	lw	a5,-64(s0)
2001564a:	02f70733          	mul	a4,a4,a5
2001564e:	fbc42783          	lw	a5,-68(s0)
20015652:	02f747b3          	div	a5,a4,a5
20015656:	faf42c23          	sw	a5,-72(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:239
    if (__METAL_GET_FIELD(div, DIV_1))
2001565a:	fcc42783          	lw	a5,-52(s0)
2001565e:	1007f713          	andi	a4,a5,256
20015662:	0ff00793          	li	a5,255
20015666:	00e7f563          	bgeu	a5,a4,20015670 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x152>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:240
        return pllout;
2001566a:	fb842783          	lw	a5,-72(s0)
2001566e:	a819                	j	20015684 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:242
    return pllout / (2 * (__METAL_GET_FIELD(div, DIV_DIV) + 1));
20015670:	fb842703          	lw	a4,-72(s0)
20015674:	fcc42783          	lw	a5,-52(s0)
20015678:	03f7f793          	andi	a5,a5,63
2001567c:	0785                	addi	a5,a5,1
2001567e:	0786                	slli	a5,a5,0x1
20015680:	02f757b3          	divu	a5,a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:243
}
20015684:	853e                	mv	a0,a5
20015686:	40f6                	lw	ra,92(sp)
20015688:	4466                	lw	s0,88(sp)
2001568a:	6125                	addi	sp,sp,96
2001568c:	8082                	ret

2001568e <find_closest_config>:
find_closest_config():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:253
static int find_closest_config(long ref_hz, long rate) {
2001568e:	7139                	addi	sp,sp,-64
20015690:	de06                	sw	ra,60(sp)
20015692:	dc22                	sw	s0,56(sp)
20015694:	0080                	addi	s0,sp,64
20015696:	fca42623          	sw	a0,-52(s0)
2001569a:	fcb42423          	sw	a1,-56(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:254
    int closest_index = -1;
2001569e:	57fd                	li	a5,-1
200156a0:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:255
    long closest_diff = LONG_MAX;
200156a4:	800007b7          	lui	a5,0x80000
200156a8:	fff7c793          	not	a5,a5
200156ac:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
200156b0:	04300793          	li	a5,67
200156b4:	fef42223          	sw	a5,-28(s0)
200156b8:	a0b5                	j	20015724 <find_closest_config+0x96>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:261
        long config_freq = get_pll_config_freq(ref_hz, &(pll_configs[i]));
200156ba:	fcc42683          	lw	a3,-52(s0)
200156be:	fe442783          	lw	a5,-28(s0)
200156c2:	00579713          	slli	a4,a5,0x5
200156c6:	200107b7          	lui	a5,0x20010
200156ca:	76c78793          	addi	a5,a5,1900 # 2001076c <pll_configs>
200156ce:	97ba                	add	a5,a5,a4
200156d0:	85be                	mv	a1,a5
200156d2:	8536                	mv	a0,a3
200156d4:	d59ff0ef          	jal	ra,2001542c <get_pll_config_freq>
200156d8:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:262
        if (config_freq != PLL_CONFIG_NOT_VALID) {
200156dc:	fe042703          	lw	a4,-32(s0)
200156e0:	57fd                	li	a5,-1
200156e2:	02f70c63          	beq	a4,a5,2001571a <find_closest_config+0x8c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:263
            long freq_diff = labs(config_freq - rate);
200156e6:	fe042703          	lw	a4,-32(s0)
200156ea:	fc842783          	lw	a5,-56(s0)
200156ee:	8f1d                	sub	a4,a4,a5
200156f0:	41f75793          	srai	a5,a4,0x1f
200156f4:	8f3d                	xor	a4,a4,a5
200156f6:	40f707b3          	sub	a5,a4,a5
200156fa:	fcf42e23          	sw	a5,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:265
            if (freq_diff < closest_diff) {
200156fe:	fdc42703          	lw	a4,-36(s0)
20015702:	fe842783          	lw	a5,-24(s0)
20015706:	00f75a63          	bge	a4,a5,2001571a <find_closest_config+0x8c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:266
                closest_index = i;
2001570a:	fe442783          	lw	a5,-28(s0)
2001570e:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:267
                closest_diff = freq_diff;
20015712:	fdc42783          	lw	a5,-36(s0)
20015716:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:260
         i--) {
2001571a:	fe442783          	lw	a5,-28(s0)
2001571e:	17fd                	addi	a5,a5,-1
20015720:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259 (discriminator 1)
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
20015724:	fe442783          	lw	a5,-28(s0)
20015728:	f807d9e3          	bgez	a5,200156ba <find_closest_config+0x2c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:272
    return closest_index;
2001572c:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:273
}
20015730:	853e                	mv	a0,a5
20015732:	50f2                	lw	ra,60(sp)
20015734:	5462                	lw	s0,56(sp)
20015736:	6121                	addi	sp,sp,64
20015738:	8082                	ret

2001573a <configure_pll>:
configure_pll():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:290
                          const struct pll_config_t *config) {
2001573a:	7179                	addi	sp,sp,-48
2001573c:	d606                	sw	ra,44(sp)
2001573e:	d422                	sw	s0,40(sp)
20015740:	1800                	addi	s0,sp,48
20015742:	fca42e23          	sw	a0,-36(s0)
20015746:	fcb42c23          	sw	a1,-40(s0)
2001574a:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:291
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_R);
2001574e:	fdc42783          	lw	a5,-36(s0)
20015752:	439c                	lw	a5,0(a5)
20015754:	ff87f713          	andi	a4,a5,-8
20015758:	fdc42783          	lw	a5,-36(s0)
2001575c:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:292
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_R_SHIFT(config->r);
2001575e:	fdc42783          	lw	a5,-36(s0)
20015762:	4398                	lw	a4,0(a5)
20015764:	fd442783          	lw	a5,-44(s0)
20015768:	4b9c                	lw	a5,16(a5)
2001576a:	8b9d                	andi	a5,a5,7
2001576c:	8f5d                	or	a4,a4,a5
2001576e:	fdc42783          	lw	a5,-36(s0)
20015772:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:294
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_F);
20015774:	fdc42783          	lw	a5,-36(s0)
20015778:	439c                	lw	a5,0(a5)
2001577a:	c0f7f713          	andi	a4,a5,-1009
2001577e:	fdc42783          	lw	a5,-36(s0)
20015782:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:295
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_F_SHIFT(config->f);
20015784:	fdc42783          	lw	a5,-36(s0)
20015788:	4398                	lw	a4,0(a5)
2001578a:	fd442783          	lw	a5,-44(s0)
2001578e:	4bdc                	lw	a5,20(a5)
20015790:	0792                	slli	a5,a5,0x4
20015792:	3f07f793          	andi	a5,a5,1008
20015796:	8f5d                	or	a4,a4,a5
20015798:	fdc42783          	lw	a5,-36(s0)
2001579c:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:297
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_Q);
2001579e:	fdc42783          	lw	a5,-36(s0)
200157a2:	4398                	lw	a4,0(a5)
200157a4:	77fd                	lui	a5,0xfffff
200157a6:	3ff78793          	addi	a5,a5,1023 # fffff3ff <metal_segment_heap_target_end+0x7fffdc3f>
200157aa:	8f7d                	and	a4,a4,a5
200157ac:	fdc42783          	lw	a5,-36(s0)
200157b0:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:298
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_Q_SHIFT(config->q);
200157b2:	fdc42783          	lw	a5,-36(s0)
200157b6:	4398                	lw	a4,0(a5)
200157b8:	fd442783          	lw	a5,-44(s0)
200157bc:	4f9c                	lw	a5,24(a5)
200157be:	00a79693          	slli	a3,a5,0xa
200157c2:	6785                	lui	a5,0x1
200157c4:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
200157c8:	8ff5                	and	a5,a5,a3
200157ca:	8f5d                	or	a4,a4,a5
200157cc:	fdc42783          	lw	a5,-36(s0)
200157d0:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:300
    if (config->d < 0) {
200157d2:	fd442783          	lw	a5,-44(s0)
200157d6:	4fdc                	lw	a5,28(a5)
200157d8:	0207db63          	bgez	a5,2001580e <configure_pll+0xd4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:302
        __METAL_ACCESS_ONCE(plloutdiv) |= DIV_1;
200157dc:	fd842783          	lw	a5,-40(s0)
200157e0:	439c                	lw	a5,0(a5)
200157e2:	1007e713          	ori	a4,a5,256
200157e6:	fd842783          	lw	a5,-40(s0)
200157ea:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:304
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
200157ec:	fd842783          	lw	a5,-40(s0)
200157f0:	439c                	lw	a5,0(a5)
200157f2:	fc07f713          	andi	a4,a5,-64
200157f6:	fd842783          	lw	a5,-40(s0)
200157fa:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:305
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(1);
200157fc:	fd842783          	lw	a5,-40(s0)
20015800:	439c                	lw	a5,0(a5)
20015802:	0017e713          	ori	a4,a5,1
20015806:	fd842783          	lw	a5,-40(s0)
2001580a:	c398                	sw	a4,0(a5)
2001580c:	a82d                	j	20015846 <configure_pll+0x10c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:307
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_1);
2001580e:	fd842783          	lw	a5,-40(s0)
20015812:	439c                	lw	a5,0(a5)
20015814:	eff7f713          	andi	a4,a5,-257
20015818:	fd842783          	lw	a5,-40(s0)
2001581c:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:309
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
2001581e:	fd842783          	lw	a5,-40(s0)
20015822:	439c                	lw	a5,0(a5)
20015824:	fc07f713          	andi	a4,a5,-64
20015828:	fd842783          	lw	a5,-40(s0)
2001582c:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:310
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(config->d);
2001582e:	fd842783          	lw	a5,-40(s0)
20015832:	4398                	lw	a4,0(a5)
20015834:	fd442783          	lw	a5,-44(s0)
20015838:	4fdc                	lw	a5,28(a5)
2001583a:	03f7f793          	andi	a5,a5,63
2001583e:	8f5d                	or	a4,a4,a5
20015840:	fd842783          	lw	a5,-40(s0)
20015844:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:313
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_BYPASS);
20015846:	fdc42783          	lw	a5,-36(s0)
2001584a:	4398                	lw	a4,0(a5)
2001584c:	fffc07b7          	lui	a5,0xfffc0
20015850:	17fd                	addi	a5,a5,-1
20015852:	8f7d                	and	a4,a4,a5
20015854:	fdc42783          	lw	a5,-36(s0)
20015858:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:318
    __metal_driver_riscv_clint0_command_request(__METAL_DT_RISCV_CLINT0_HANDLE,
2001585a:	fe040793          	addi	a5,s0,-32
2001585e:	863e                	mv	a2,a5
20015860:	4585                	li	a1,1
20015862:	81018513          	addi	a0,gp,-2032 # 80000ad0 <__metal_dt_clint_2000000>
20015866:	cc4fd0ef          	jal	ra,20012d2a <__metal_driver_riscv_clint0_command_request>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:320
    mtime_end = mtime + PLL_LOCK_WAIT_TICKS;
2001586a:	fe042683          	lw	a3,-32(s0)
2001586e:	fe442703          	lw	a4,-28(s0)
20015872:	4591                	li	a1,4
20015874:	4601                	li	a2,0
20015876:	00b687b3          	add	a5,a3,a1
2001587a:	853e                	mv	a0,a5
2001587c:	00d53533          	sltu	a0,a0,a3
20015880:	00c70833          	add	a6,a4,a2
20015884:	01050733          	add	a4,a0,a6
20015888:	883a                	mv	a6,a4
2001588a:	fef42423          	sw	a5,-24(s0)
2001588e:	ff042623          	sw	a6,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
20015892:	a809                	j	200158a4 <configure_pll+0x16a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:322
        __metal_driver_riscv_clint0_command_request(
20015894:	fe040793          	addi	a5,s0,-32
20015898:	863e                	mv	a2,a5
2001589a:	4585                	li	a1,1
2001589c:	81018513          	addi	a0,gp,-2032 # 80000ad0 <__metal_dt_clint_2000000>
200158a0:	c8afd0ef          	jal	ra,20012d2a <__metal_driver_riscv_clint0_command_request>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
200158a4:	fe042783          	lw	a5,-32(s0)
200158a8:	fe442803          	lw	a6,-28(s0)
200158ac:	fec42703          	lw	a4,-20(s0)
200158b0:	86c2                	mv	a3,a6
200158b2:	00d76b63          	bltu	a4,a3,200158c8 <configure_pll+0x18e>
200158b6:	fec42703          	lw	a4,-20(s0)
200158ba:	86c2                	mv	a3,a6
200158bc:	fcd71ce3          	bne	a4,a3,20015894 <configure_pll+0x15a>
200158c0:	fe842703          	lw	a4,-24(s0)
200158c4:	fcf778e3          	bgeu	a4,a5,20015894 <configure_pll+0x15a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340
    while ((__METAL_ACCESS_ONCE(pllcfg) & PLL_LOCK) == 0)
200158c8:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340 (discriminator 1)
200158ca:	fdc42783          	lw	a5,-36(s0)
200158ce:	439c                	lw	a5,0(a5)
200158d0:	fe07dde3          	bgez	a5,200158ca <configure_pll+0x190>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:342
}
200158d4:	0001                	nop
200158d6:	50b2                	lw	ra,44(sp)
200158d8:	5422                	lw	s0,40(sp)
200158da:	6145                	addi	sp,sp,48
200158dc:	8082                	ret

200158de <__metal_driver_sifive_fe310_g000_pll_set_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_set_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:345
                                                      long rate) {
200158de:	715d                	addi	sp,sp,-80
200158e0:	c686                	sw	ra,76(sp)
200158e2:	c4a2                	sw	s0,72(sp)
200158e4:	0880                	addi	s0,sp,80
200158e6:	faa42e23          	sw	a0,-68(s0)
200158ea:	fab42c23          	sw	a1,-72(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:347
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
200158ee:	fbc42503          	lw	a0,-68(s0)
200158f2:	a9bff0ef          	jal	ra,2001538c <__metal_driver_sifive_fe310_g000_pll_pllref>
200158f6:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:349
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
200158fa:	fbc42503          	lw	a0,-68(s0)
200158fe:	a75ff0ef          	jal	ra,20015372 <__metal_driver_sifive_fe310_g000_pll_pllsel0>
20015902:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:351
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
20015906:	fbc42503          	lw	a0,-68(s0)
2001590a:	ad9ff0ef          	jal	ra,200153e2 <__metal_driver_sifive_fe310_g000_pll_config_offset>
2001590e:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:353
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
20015912:	fbc42503          	lw	a0,-68(s0)
20015916:	aa7ff0ef          	jal	ra,200153bc <__metal_driver_sifive_fe310_g000_pll_divider_offset>
2001591a:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:354
    long base = __metal_driver_sifive_fe310_g000_prci_base();
2001591e:	aebff0ef          	jal	ra,20015408 <__metal_driver_sifive_fe310_g000_prci_base>
20015922:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:356
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
20015926:	fdc42703          	lw	a4,-36(s0)
2001592a:	fe442783          	lw	a5,-28(s0)
2001592e:	97ba                	add	a5,a5,a4
20015930:	fcf42c23          	sw	a5,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:357
    __metal_io_u32 *plloutdiv = (__metal_io_u32 *)(base + divider_offset);
20015934:	fdc42703          	lw	a4,-36(s0)
20015938:	fe042783          	lw	a5,-32(s0)
2001593c:	97ba                	add	a5,a5,a4
2001593e:	fcf42a23          	sw	a5,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:360
    if (__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL)
20015942:	fd842783          	lw	a5,-40(s0)
20015946:	4398                	lw	a4,0(a5)
20015948:	67c1                	lui	a5,0x10
2001594a:	8ff9                	and	a5,a5,a4
2001594c:	cb91                	beqz	a5,20015960 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x82>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:361
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
2001594e:	fd842783          	lw	a5,-40(s0)
20015952:	4398                	lw	a4,0(a5)
20015954:	77c1                	lui	a5,0xffff0
20015956:	17fd                	addi	a5,a5,-1
20015958:	8f7d                	and	a4,a4,a5
2001595a:	fd842783          	lw	a5,-40(s0)
2001595e:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:366
        __METAL_ACCESS_ONCE(pllcfg) & PLL_REFSEL ? pllref : pllsel0);
20015960:	fd842783          	lw	a5,-40(s0)
20015964:	4398                	lw	a4,0(a5)
20015966:	000207b7          	lui	a5,0x20
2001596a:	8ff9                	and	a5,a5,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365
    long ref_hz = metal_clock_get_rate_hz(
2001596c:	c781                	beqz	a5,20015974 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x96>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 1)
2001596e:	fec42783          	lw	a5,-20(s0)
20015972:	a019                	j	20015978 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x9a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 2)
20015974:	fe842783          	lw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 4)
20015978:	853e                	mv	a0,a5
2001597a:	515010ef          	jal	ra,2001768e <metal_clock_get_rate_hz>
2001597e:	fca42823          	sw	a0,-48(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 4)
    if ((ref_hz * 3 / 4) <= rate && (ref_hz * 5 / 4) >= rate) {
20015982:	fd042703          	lw	a4,-48(s0)
20015986:	87ba                	mv	a5,a4
20015988:	0786                	slli	a5,a5,0x1
2001598a:	97ba                	add	a5,a5,a4
2001598c:	41f7d713          	srai	a4,a5,0x1f
20015990:	8b0d                	andi	a4,a4,3
20015992:	97ba                	add	a5,a5,a4
20015994:	8789                	srai	a5,a5,0x2
20015996:	873e                	mv	a4,a5
20015998:	fb842783          	lw	a5,-72(s0)
2001599c:	02e7cb63          	blt	a5,a4,200159d2 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 1)
200159a0:	fd042703          	lw	a4,-48(s0)
200159a4:	87ba                	mv	a5,a4
200159a6:	078a                	slli	a5,a5,0x2
200159a8:	97ba                	add	a5,a5,a4
200159aa:	41f7d713          	srai	a4,a5,0x1f
200159ae:	8b0d                	andi	a4,a4,3
200159b0:	97ba                	add	a5,a5,a4
200159b2:	8789                	srai	a5,a5,0x2
200159b4:	873e                	mv	a4,a5
200159b6:	fb842783          	lw	a5,-72(s0)
200159ba:	00f74c63          	blt	a4,a5,200159d2 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:371
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
200159be:	fd842783          	lw	a5,-40(s0)
200159c2:	4398                	lw	a4,0(a5)
200159c4:	000407b7          	lui	a5,0x40
200159c8:	8f5d                	or	a4,a4,a5
200159ca:	fd842783          	lw	a5,-40(s0)
200159ce:	c398                	sw	a4,0(a5)
200159d0:	a881                	j	20015a20 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:373
        int config_index = find_closest_config(ref_hz, rate);
200159d2:	fb842583          	lw	a1,-72(s0)
200159d6:	fd042503          	lw	a0,-48(s0)
200159da:	cb5ff0ef          	jal	ra,2001568e <find_closest_config>
200159de:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:374
        if (config_index != -1) {
200159e2:	fcc42703          	lw	a4,-52(s0)
200159e6:	57fd                	li	a5,-1
200159e8:	02f70363          	beq	a4,a5,20015a0e <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x130>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:375
            configure_pll(pllcfg, plloutdiv, &(pll_configs[config_index]));
200159ec:	fcc42783          	lw	a5,-52(s0)
200159f0:	00579713          	slli	a4,a5,0x5
200159f4:	200107b7          	lui	a5,0x20010
200159f8:	76c78793          	addi	a5,a5,1900 # 2001076c <pll_configs>
200159fc:	97ba                	add	a5,a5,a4
200159fe:	863e                	mv	a2,a5
20015a00:	fd442583          	lw	a1,-44(s0)
20015a04:	fd842503          	lw	a0,-40(s0)
20015a08:	d33ff0ef          	jal	ra,2001573a <configure_pll>
20015a0c:	a811                	j	20015a20 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:378
            __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
20015a0e:	fd842783          	lw	a5,-40(s0)
20015a12:	4398                	lw	a4,0(a5)
20015a14:	000407b7          	lui	a5,0x40
20015a18:	8f5d                	or	a4,a4,a5
20015a1a:	fd842783          	lw	a5,-40(s0)
20015a1e:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:383
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_SEL;
20015a20:	fd842783          	lw	a5,-40(s0)
20015a24:	4398                	lw	a4,0(a5)
20015a26:	67c1                	lui	a5,0x10
20015a28:	8f5d                	or	a4,a4,a5
20015a2a:	fd842783          	lw	a5,-40(s0)
20015a2e:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:385
    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
20015a30:	fbc42503          	lw	a0,-68(s0)
20015a34:	aebff0ef          	jal	ra,2001551e <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>
20015a38:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:386
}
20015a3a:	853e                	mv	a0,a5
20015a3c:	40b6                	lw	ra,76(sp)
20015a3e:	4426                	lw	s0,72(sp)
20015a40:	6161                	addi	sp,sp,80
20015a42:	8082                	ret

20015a44 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1364
{
20015a44:	1141                	addi	sp,sp,-16
20015a46:	c622                	sw	s0,12(sp)
20015a48:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1365
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
20015a4a:	100087b7          	lui	a5,0x10008
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1366
}
20015a4e:	853e                	mv	a0,a5
20015a50:	4432                	lw	s0,12(sp)
20015a52:	0141                	addi	sp,sp,16
20015a54:	8082                	ret

20015a56 <__metal_driver_sifive_fe310_g000_prci_get_reg>:
__metal_driver_sifive_fe310_g000_prci_get_reg():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:12

#include <metal/drivers/sifive_fe310-g000_prci.h>
#include <metal/machine.h>

long __metal_driver_sifive_fe310_g000_prci_get_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset) {
20015a56:	7179                	addi	sp,sp,-48
20015a58:	d606                	sw	ra,44(sp)
20015a5a:	d422                	sw	s0,40(sp)
20015a5c:	1800                	addi	s0,sp,48
20015a5e:	fca42e23          	sw	a0,-36(s0)
20015a62:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:13
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
20015a66:	3ff9                	jal	20015a44 <__metal_driver_sifive_fe310_g000_prci_base>
20015a68:	87aa                	mv	a5,a0
20015a6a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:14
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset));
20015a6e:	fd842703          	lw	a4,-40(s0)
20015a72:	fec42783          	lw	a5,-20(s0)
20015a76:	97ba                	add	a5,a5,a4
20015a78:	439c                	lw	a5,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:15
}
20015a7a:	853e                	mv	a0,a5
20015a7c:	50b2                	lw	ra,44(sp)
20015a7e:	5422                	lw	s0,40(sp)
20015a80:	6145                	addi	sp,sp,48
20015a82:	8082                	ret

20015a84 <__metal_driver_sifive_fe310_g000_prci_set_reg>:
__metal_driver_sifive_fe310_g000_prci_set_reg():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:19

long __metal_driver_sifive_fe310_g000_prci_set_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset,
    long value) {
20015a84:	7179                	addi	sp,sp,-48
20015a86:	d606                	sw	ra,44(sp)
20015a88:	d422                	sw	s0,40(sp)
20015a8a:	1800                	addi	s0,sp,48
20015a8c:	fca42e23          	sw	a0,-36(s0)
20015a90:	fcb42c23          	sw	a1,-40(s0)
20015a94:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:20
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
20015a98:	3775                	jal	20015a44 <__metal_driver_sifive_fe310_g000_prci_base>
20015a9a:	87aa                	mv	a5,a0
20015a9c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:21
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset)) = value;
20015aa0:	fd842703          	lw	a4,-40(s0)
20015aa4:	fec42783          	lw	a5,-20(s0)
20015aa8:	97ba                	add	a5,a5,a4
20015aaa:	873e                	mv	a4,a5
20015aac:	fd442783          	lw	a5,-44(s0)
20015ab0:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:22
}
20015ab2:	853e                	mv	a0,a5
20015ab4:	50b2                	lw	ra,44(sp)
20015ab6:	5422                	lw	s0,40(sp)
20015ab8:	6145                	addi	sp,sp,48
20015aba:	8082                	ret

20015abc <__metal_driver_sifive_gpio0_base>:
__metal_driver_sifive_gpio0_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:430
{
20015abc:	1101                	addi	sp,sp,-32
20015abe:	ce22                	sw	s0,28(sp)
20015ac0:	1000                	addi	s0,sp,32
20015ac2:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:431
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
20015ac6:	fec42703          	lw	a4,-20(s0)
20015aca:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015ace:	00f71563          	bne	a4,a5,20015ad8 <__metal_driver_sifive_gpio0_base+0x1c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:432
		return METAL_SIFIVE_GPIO0_10012000_BASE_ADDRESS;
20015ad2:	100127b7          	lui	a5,0x10012
20015ad6:	a011                	j	20015ada <__metal_driver_sifive_gpio0_base+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:435
		return 0;
20015ad8:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:437
}
20015ada:	853e                	mv	a0,a5
20015adc:	4472                	lw	s0,28(sp)
20015ade:	6105                	addi	sp,sp,32
20015ae0:	8082                	ret

20015ae2 <__metal_driver_sifive_gpio0_interrupt_parent>:
__metal_driver_sifive_gpio0_interrupt_parent():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:460
{
20015ae2:	1101                	addi	sp,sp,-32
20015ae4:	ce22                	sw	s0,28(sp)
20015ae6:	1000                	addi	s0,sp,32
20015ae8:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:461
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
20015aec:	fec42703          	lw	a4,-20(s0)
20015af0:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015af4:	00f71763          	bne	a4,a5,20015b02 <__metal_driver_sifive_gpio0_interrupt_parent+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:462
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20015af8:	800007b7          	lui	a5,0x80000
20015afc:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffeca0>
20015b00:	a011                	j	20015b04 <__metal_driver_sifive_gpio0_interrupt_parent+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:465
		return 0;
20015b02:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:467
}
20015b04:	853e                	mv	a0,a5
20015b06:	4472                	lw	s0,28(sp)
20015b08:	6105                	addi	sp,sp,32
20015b0a:	8082                	ret

20015b0c <__metal_driver_sifive_gpio0_interrupt_lines>:
__metal_driver_sifive_gpio0_interrupt_lines():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:470
{
20015b0c:	1101                	addi	sp,sp,-32
20015b0e:	ce22                	sw	s0,28(sp)
20015b10:	1000                	addi	s0,sp,32
20015b12:	fea42623          	sw	a0,-20(s0)
20015b16:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:471
	if (((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 0)) {
20015b1a:	fec42703          	lw	a4,-20(s0)
20015b1e:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015b22:	00f71763          	bne	a4,a5,20015b30 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:471 (discriminator 1)
20015b26:	fe842783          	lw	a5,-24(s0)
20015b2a:	e399                	bnez	a5,20015b30 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:472
		return 8;
20015b2c:	47a1                	li	a5,8
20015b2e:	ae15                	j	20015e62 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:474
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 1))) {
20015b30:	fec42703          	lw	a4,-20(s0)
20015b34:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015b38:	00f71963          	bne	a4,a5,20015b4a <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:474 (discriminator 1)
20015b3c:	fe842703          	lw	a4,-24(s0)
20015b40:	4785                	li	a5,1
20015b42:	00f71463          	bne	a4,a5,20015b4a <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:475
		return 9;
20015b46:	47a5                	li	a5,9
20015b48:	ae29                	j	20015e62 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:477
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 2))) {
20015b4a:	fec42703          	lw	a4,-20(s0)
20015b4e:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015b52:	00f71963          	bne	a4,a5,20015b64 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:477 (discriminator 1)
20015b56:	fe842703          	lw	a4,-24(s0)
20015b5a:	4789                	li	a5,2
20015b5c:	00f71463          	bne	a4,a5,20015b64 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:478
		return 10;
20015b60:	47a9                	li	a5,10
20015b62:	a601                	j	20015e62 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:480
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 3))) {
20015b64:	fec42703          	lw	a4,-20(s0)
20015b68:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015b6c:	00f71963          	bne	a4,a5,20015b7e <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:480 (discriminator 1)
20015b70:	fe842703          	lw	a4,-24(s0)
20015b74:	478d                	li	a5,3
20015b76:	00f71463          	bne	a4,a5,20015b7e <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:481
		return 11;
20015b7a:	47ad                	li	a5,11
20015b7c:	a4dd                	j	20015e62 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:483
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 4))) {
20015b7e:	fec42703          	lw	a4,-20(s0)
20015b82:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015b86:	00f71963          	bne	a4,a5,20015b98 <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:483 (discriminator 1)
20015b8a:	fe842703          	lw	a4,-24(s0)
20015b8e:	4791                	li	a5,4
20015b90:	00f71463          	bne	a4,a5,20015b98 <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:484
		return 12;
20015b94:	47b1                	li	a5,12
20015b96:	a4f1                	j	20015e62 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:486
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 5))) {
20015b98:	fec42703          	lw	a4,-20(s0)
20015b9c:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015ba0:	00f71963          	bne	a4,a5,20015bb2 <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:486 (discriminator 1)
20015ba4:	fe842703          	lw	a4,-24(s0)
20015ba8:	4795                	li	a5,5
20015baa:	00f71463          	bne	a4,a5,20015bb2 <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:487
		return 13;
20015bae:	47b5                	li	a5,13
20015bb0:	ac4d                	j	20015e62 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:489
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 6))) {
20015bb2:	fec42703          	lw	a4,-20(s0)
20015bb6:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015bba:	00f71963          	bne	a4,a5,20015bcc <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:489 (discriminator 1)
20015bbe:	fe842703          	lw	a4,-24(s0)
20015bc2:	4799                	li	a5,6
20015bc4:	00f71463          	bne	a4,a5,20015bcc <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:490
		return 14;
20015bc8:	47b9                	li	a5,14
20015bca:	ac61                	j	20015e62 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:492
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 7))) {
20015bcc:	fec42703          	lw	a4,-20(s0)
20015bd0:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015bd4:	00f71963          	bne	a4,a5,20015be6 <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:492 (discriminator 1)
20015bd8:	fe842703          	lw	a4,-24(s0)
20015bdc:	479d                	li	a5,7
20015bde:	00f71463          	bne	a4,a5,20015be6 <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:493
		return 15;
20015be2:	47bd                	li	a5,15
20015be4:	acbd                	j	20015e62 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:495
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 8))) {
20015be6:	fec42703          	lw	a4,-20(s0)
20015bea:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015bee:	00f71963          	bne	a4,a5,20015c00 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:495 (discriminator 1)
20015bf2:	fe842703          	lw	a4,-24(s0)
20015bf6:	47a1                	li	a5,8
20015bf8:	00f71463          	bne	a4,a5,20015c00 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:496
		return 16;
20015bfc:	47c1                	li	a5,16
20015bfe:	a495                	j	20015e62 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:498
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 9))) {
20015c00:	fec42703          	lw	a4,-20(s0)
20015c04:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015c08:	00f71963          	bne	a4,a5,20015c1a <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:498 (discriminator 1)
20015c0c:	fe842703          	lw	a4,-24(s0)
20015c10:	47a5                	li	a5,9
20015c12:	00f71463          	bne	a4,a5,20015c1a <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:499
		return 17;
20015c16:	47c5                	li	a5,17
20015c18:	a4a9                	j	20015e62 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:501
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 10))) {
20015c1a:	fec42703          	lw	a4,-20(s0)
20015c1e:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015c22:	00f71963          	bne	a4,a5,20015c34 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:501 (discriminator 1)
20015c26:	fe842703          	lw	a4,-24(s0)
20015c2a:	47a9                	li	a5,10
20015c2c:	00f71463          	bne	a4,a5,20015c34 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:502
		return 18;
20015c30:	47c9                	li	a5,18
20015c32:	ac05                	j	20015e62 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:504
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 11))) {
20015c34:	fec42703          	lw	a4,-20(s0)
20015c38:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015c3c:	00f71963          	bne	a4,a5,20015c4e <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:504 (discriminator 1)
20015c40:	fe842703          	lw	a4,-24(s0)
20015c44:	47ad                	li	a5,11
20015c46:	00f71463          	bne	a4,a5,20015c4e <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:505
		return 19;
20015c4a:	47cd                	li	a5,19
20015c4c:	ac19                	j	20015e62 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:507
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 12))) {
20015c4e:	fec42703          	lw	a4,-20(s0)
20015c52:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015c56:	00f71963          	bne	a4,a5,20015c68 <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:507 (discriminator 1)
20015c5a:	fe842703          	lw	a4,-24(s0)
20015c5e:	47b1                	li	a5,12
20015c60:	00f71463          	bne	a4,a5,20015c68 <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:508
		return 20;
20015c64:	47d1                	li	a5,20
20015c66:	aaf5                	j	20015e62 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:510
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 13))) {
20015c68:	fec42703          	lw	a4,-20(s0)
20015c6c:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015c70:	00f71963          	bne	a4,a5,20015c82 <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:510 (discriminator 1)
20015c74:	fe842703          	lw	a4,-24(s0)
20015c78:	47b5                	li	a5,13
20015c7a:	00f71463          	bne	a4,a5,20015c82 <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:511
		return 21;
20015c7e:	47d5                	li	a5,21
20015c80:	a2cd                	j	20015e62 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:513
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 14))) {
20015c82:	fec42703          	lw	a4,-20(s0)
20015c86:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015c8a:	00f71963          	bne	a4,a5,20015c9c <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:513 (discriminator 1)
20015c8e:	fe842703          	lw	a4,-24(s0)
20015c92:	47b9                	li	a5,14
20015c94:	00f71463          	bne	a4,a5,20015c9c <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:514
		return 22;
20015c98:	47d9                	li	a5,22
20015c9a:	a2e1                	j	20015e62 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:516
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 15))) {
20015c9c:	fec42703          	lw	a4,-20(s0)
20015ca0:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015ca4:	00f71963          	bne	a4,a5,20015cb6 <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:516 (discriminator 1)
20015ca8:	fe842703          	lw	a4,-24(s0)
20015cac:	47bd                	li	a5,15
20015cae:	00f71463          	bne	a4,a5,20015cb6 <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:517
		return 23;
20015cb2:	47dd                	li	a5,23
20015cb4:	a27d                	j	20015e62 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:519
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 16))) {
20015cb6:	fec42703          	lw	a4,-20(s0)
20015cba:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015cbe:	00f71963          	bne	a4,a5,20015cd0 <__metal_driver_sifive_gpio0_interrupt_lines+0x1c4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:519 (discriminator 1)
20015cc2:	fe842703          	lw	a4,-24(s0)
20015cc6:	47c1                	li	a5,16
20015cc8:	00f71463          	bne	a4,a5,20015cd0 <__metal_driver_sifive_gpio0_interrupt_lines+0x1c4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:520
		return 24;
20015ccc:	47e1                	li	a5,24
20015cce:	aa51                	j	20015e62 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:522
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 17))) {
20015cd0:	fec42703          	lw	a4,-20(s0)
20015cd4:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015cd8:	00f71963          	bne	a4,a5,20015cea <__metal_driver_sifive_gpio0_interrupt_lines+0x1de>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:522 (discriminator 1)
20015cdc:	fe842703          	lw	a4,-24(s0)
20015ce0:	47c5                	li	a5,17
20015ce2:	00f71463          	bne	a4,a5,20015cea <__metal_driver_sifive_gpio0_interrupt_lines+0x1de>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:523
		return 25;
20015ce6:	47e5                	li	a5,25
20015ce8:	aaad                	j	20015e62 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:525
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 18))) {
20015cea:	fec42703          	lw	a4,-20(s0)
20015cee:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015cf2:	00f71963          	bne	a4,a5,20015d04 <__metal_driver_sifive_gpio0_interrupt_lines+0x1f8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:525 (discriminator 1)
20015cf6:	fe842703          	lw	a4,-24(s0)
20015cfa:	47c9                	li	a5,18
20015cfc:	00f71463          	bne	a4,a5,20015d04 <__metal_driver_sifive_gpio0_interrupt_lines+0x1f8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:526
		return 26;
20015d00:	47e9                	li	a5,26
20015d02:	a285                	j	20015e62 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:528
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 19))) {
20015d04:	fec42703          	lw	a4,-20(s0)
20015d08:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015d0c:	00f71963          	bne	a4,a5,20015d1e <__metal_driver_sifive_gpio0_interrupt_lines+0x212>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:528 (discriminator 1)
20015d10:	fe842703          	lw	a4,-24(s0)
20015d14:	47cd                	li	a5,19
20015d16:	00f71463          	bne	a4,a5,20015d1e <__metal_driver_sifive_gpio0_interrupt_lines+0x212>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:529
		return 27;
20015d1a:	47ed                	li	a5,27
20015d1c:	a299                	j	20015e62 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:531
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 20))) {
20015d1e:	fec42703          	lw	a4,-20(s0)
20015d22:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015d26:	00f71963          	bne	a4,a5,20015d38 <__metal_driver_sifive_gpio0_interrupt_lines+0x22c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:531 (discriminator 1)
20015d2a:	fe842703          	lw	a4,-24(s0)
20015d2e:	47d1                	li	a5,20
20015d30:	00f71463          	bne	a4,a5,20015d38 <__metal_driver_sifive_gpio0_interrupt_lines+0x22c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:532
		return 28;
20015d34:	47f1                	li	a5,28
20015d36:	a235                	j	20015e62 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:534
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 21))) {
20015d38:	fec42703          	lw	a4,-20(s0)
20015d3c:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015d40:	00f71963          	bne	a4,a5,20015d52 <__metal_driver_sifive_gpio0_interrupt_lines+0x246>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:534 (discriminator 1)
20015d44:	fe842703          	lw	a4,-24(s0)
20015d48:	47d5                	li	a5,21
20015d4a:	00f71463          	bne	a4,a5,20015d52 <__metal_driver_sifive_gpio0_interrupt_lines+0x246>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:535
		return 29;
20015d4e:	47f5                	li	a5,29
20015d50:	aa09                	j	20015e62 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:537
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 22))) {
20015d52:	fec42703          	lw	a4,-20(s0)
20015d56:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015d5a:	00f71963          	bne	a4,a5,20015d6c <__metal_driver_sifive_gpio0_interrupt_lines+0x260>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:537 (discriminator 1)
20015d5e:	fe842703          	lw	a4,-24(s0)
20015d62:	47d9                	li	a5,22
20015d64:	00f71463          	bne	a4,a5,20015d6c <__metal_driver_sifive_gpio0_interrupt_lines+0x260>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:538
		return 30;
20015d68:	47f9                	li	a5,30
20015d6a:	a8e5                	j	20015e62 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:540
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 23))) {
20015d6c:	fec42703          	lw	a4,-20(s0)
20015d70:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015d74:	00f71963          	bne	a4,a5,20015d86 <__metal_driver_sifive_gpio0_interrupt_lines+0x27a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:540 (discriminator 1)
20015d78:	fe842703          	lw	a4,-24(s0)
20015d7c:	47dd                	li	a5,23
20015d7e:	00f71463          	bne	a4,a5,20015d86 <__metal_driver_sifive_gpio0_interrupt_lines+0x27a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:541
		return 31;
20015d82:	47fd                	li	a5,31
20015d84:	a8f9                	j	20015e62 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:543
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 24))) {
20015d86:	fec42703          	lw	a4,-20(s0)
20015d8a:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015d8e:	00f71a63          	bne	a4,a5,20015da2 <__metal_driver_sifive_gpio0_interrupt_lines+0x296>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:543 (discriminator 1)
20015d92:	fe842703          	lw	a4,-24(s0)
20015d96:	47e1                	li	a5,24
20015d98:	00f71563          	bne	a4,a5,20015da2 <__metal_driver_sifive_gpio0_interrupt_lines+0x296>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:544
		return 32;
20015d9c:	02000793          	li	a5,32
20015da0:	a0c9                	j	20015e62 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:546
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 25))) {
20015da2:	fec42703          	lw	a4,-20(s0)
20015da6:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015daa:	00f71a63          	bne	a4,a5,20015dbe <__metal_driver_sifive_gpio0_interrupt_lines+0x2b2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:546 (discriminator 1)
20015dae:	fe842703          	lw	a4,-24(s0)
20015db2:	47e5                	li	a5,25
20015db4:	00f71563          	bne	a4,a5,20015dbe <__metal_driver_sifive_gpio0_interrupt_lines+0x2b2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:547
		return 33;
20015db8:	02100793          	li	a5,33
20015dbc:	a05d                	j	20015e62 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:549
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 26))) {
20015dbe:	fec42703          	lw	a4,-20(s0)
20015dc2:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015dc6:	00f71a63          	bne	a4,a5,20015dda <__metal_driver_sifive_gpio0_interrupt_lines+0x2ce>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:549 (discriminator 1)
20015dca:	fe842703          	lw	a4,-24(s0)
20015dce:	47e9                	li	a5,26
20015dd0:	00f71563          	bne	a4,a5,20015dda <__metal_driver_sifive_gpio0_interrupt_lines+0x2ce>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:550
		return 34;
20015dd4:	02200793          	li	a5,34
20015dd8:	a069                	j	20015e62 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:552
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 27))) {
20015dda:	fec42703          	lw	a4,-20(s0)
20015dde:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015de2:	00f71a63          	bne	a4,a5,20015df6 <__metal_driver_sifive_gpio0_interrupt_lines+0x2ea>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:552 (discriminator 1)
20015de6:	fe842703          	lw	a4,-24(s0)
20015dea:	47ed                	li	a5,27
20015dec:	00f71563          	bne	a4,a5,20015df6 <__metal_driver_sifive_gpio0_interrupt_lines+0x2ea>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:553
		return 35;
20015df0:	02300793          	li	a5,35
20015df4:	a0bd                	j	20015e62 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:555
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 28))) {
20015df6:	fec42703          	lw	a4,-20(s0)
20015dfa:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015dfe:	00f71a63          	bne	a4,a5,20015e12 <__metal_driver_sifive_gpio0_interrupt_lines+0x306>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:555 (discriminator 1)
20015e02:	fe842703          	lw	a4,-24(s0)
20015e06:	47f1                	li	a5,28
20015e08:	00f71563          	bne	a4,a5,20015e12 <__metal_driver_sifive_gpio0_interrupt_lines+0x306>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:556
		return 36;
20015e0c:	02400793          	li	a5,36
20015e10:	a889                	j	20015e62 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:558
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 29))) {
20015e12:	fec42703          	lw	a4,-20(s0)
20015e16:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015e1a:	00f71963          	bne	a4,a5,20015e2c <__metal_driver_sifive_gpio0_interrupt_lines+0x320>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:558 (discriminator 1)
20015e1e:	fe842703          	lw	a4,-24(s0)
20015e22:	47f5                	li	a5,29
20015e24:	00f71463          	bne	a4,a5,20015e2c <__metal_driver_sifive_gpio0_interrupt_lines+0x320>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:559
		return 27;
20015e28:	47ed                	li	a5,27
20015e2a:	a825                	j	20015e62 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:561
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 30))) {
20015e2c:	fec42703          	lw	a4,-20(s0)
20015e30:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015e34:	00f71963          	bne	a4,a5,20015e46 <__metal_driver_sifive_gpio0_interrupt_lines+0x33a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:561 (discriminator 1)
20015e38:	fe842703          	lw	a4,-24(s0)
20015e3c:	47f9                	li	a5,30
20015e3e:	00f71463          	bne	a4,a5,20015e46 <__metal_driver_sifive_gpio0_interrupt_lines+0x33a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:562
		return 28;
20015e42:	47f1                	li	a5,28
20015e44:	a839                	j	20015e62 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:564
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 31))) {
20015e46:	fec42703          	lw	a4,-20(s0)
20015e4a:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015e4e:	00f71963          	bne	a4,a5,20015e60 <__metal_driver_sifive_gpio0_interrupt_lines+0x354>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:564 (discriminator 1)
20015e52:	fe842703          	lw	a4,-24(s0)
20015e56:	47fd                	li	a5,31
20015e58:	00f71463          	bne	a4,a5,20015e60 <__metal_driver_sifive_gpio0_interrupt_lines+0x354>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:565
		return 29;
20015e5c:	47f5                	li	a5,29
20015e5e:	a011                	j	20015e62 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:568
		return 0;
20015e60:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:570
}
20015e62:	853e                	mv	a0,a5
20015e64:	4472                	lw	s0,28(sp)
20015e66:	6105                	addi	sp,sp,32
20015e68:	8082                	ret

20015e6a <__metal_driver_sifive_gpio0_enable_input>:
__metal_driver_sifive_gpio0_enable_input():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:13
#include <metal/drivers/sifive_gpio0.h>
#include <metal/io.h>
#include <metal/machine.h>

int __metal_driver_sifive_gpio0_enable_input(struct metal_gpio *ggpio,
                                             long source) {
20015e6a:	7179                	addi	sp,sp,-48
20015e6c:	d606                	sw	ra,44(sp)
20015e6e:	d422                	sw	s0,40(sp)
20015e70:	1800                	addi	s0,sp,48
20015e72:	fca42e23          	sw	a0,-36(s0)
20015e76:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:14
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015e7a:	fdc42503          	lw	a0,-36(s0)
20015e7e:	c3fff0ef          	jal	ra,20015abc <__metal_driver_sifive_gpio0_base>
20015e82:	87aa                	mv	a5,a0
20015e84:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:17

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) |= source;
20015e88:	fec42783          	lw	a5,-20(s0)
20015e8c:	0791                	addi	a5,a5,4
20015e8e:	4398                	lw	a4,0(a5)
20015e90:	fd842783          	lw	a5,-40(s0)
20015e94:	fec42683          	lw	a3,-20(s0)
20015e98:	0691                	addi	a3,a3,4
20015e9a:	8fd9                	or	a5,a5,a4
20015e9c:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:19

    return 0;
20015e9e:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:20
}
20015ea0:	853e                	mv	a0,a5
20015ea2:	50b2                	lw	ra,44(sp)
20015ea4:	5422                	lw	s0,40(sp)
20015ea6:	6145                	addi	sp,sp,48
20015ea8:	8082                	ret

20015eaa <__metal_driver_sifive_gpio0_disable_input>:
__metal_driver_sifive_gpio0_disable_input():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:23

int __metal_driver_sifive_gpio0_disable_input(struct metal_gpio *ggpio,
                                              long source) {
20015eaa:	7179                	addi	sp,sp,-48
20015eac:	d606                	sw	ra,44(sp)
20015eae:	d422                	sw	s0,40(sp)
20015eb0:	1800                	addi	s0,sp,48
20015eb2:	fca42e23          	sw	a0,-36(s0)
20015eb6:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:24
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015eba:	fdc42503          	lw	a0,-36(s0)
20015ebe:	bffff0ef          	jal	ra,20015abc <__metal_driver_sifive_gpio0_base>
20015ec2:	87aa                	mv	a5,a0
20015ec4:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:27

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) &= ~source;
20015ec8:	fec42783          	lw	a5,-20(s0)
20015ecc:	0791                	addi	a5,a5,4
20015ece:	439c                	lw	a5,0(a5)
20015ed0:	fd842703          	lw	a4,-40(s0)
20015ed4:	fff74713          	not	a4,a4
20015ed8:	86ba                	mv	a3,a4
20015eda:	fec42703          	lw	a4,-20(s0)
20015ede:	0711                	addi	a4,a4,4
20015ee0:	8ff5                	and	a5,a5,a3
20015ee2:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:29

    return 0;
20015ee4:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:30
}
20015ee6:	853e                	mv	a0,a5
20015ee8:	50b2                	lw	ra,44(sp)
20015eea:	5422                	lw	s0,40(sp)
20015eec:	6145                	addi	sp,sp,48
20015eee:	8082                	ret

20015ef0 <__metal_driver_sifive_gpio0_input>:
__metal_driver_sifive_gpio0_input():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:32

long __metal_driver_sifive_gpio0_input(struct metal_gpio *ggpio) {
20015ef0:	7179                	addi	sp,sp,-48
20015ef2:	d606                	sw	ra,44(sp)
20015ef4:	d422                	sw	s0,40(sp)
20015ef6:	1800                	addi	s0,sp,48
20015ef8:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:33
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015efc:	fdc42503          	lw	a0,-36(s0)
20015f00:	bbdff0ef          	jal	ra,20015abc <__metal_driver_sifive_gpio0_base>
20015f04:	87aa                	mv	a5,a0
20015f06:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:35

    return __METAL_ACCESS_ONCE(
20015f0a:	fec42783          	lw	a5,-20(s0)
20015f0e:	439c                	lw	a5,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:37
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_VALUE));
}
20015f10:	853e                	mv	a0,a5
20015f12:	50b2                	lw	ra,44(sp)
20015f14:	5422                	lw	s0,40(sp)
20015f16:	6145                	addi	sp,sp,48
20015f18:	8082                	ret

20015f1a <__metal_driver_sifive_gpio0_output>:
__metal_driver_sifive_gpio0_output():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:39

long __metal_driver_sifive_gpio0_output(struct metal_gpio *ggpio) {
20015f1a:	7179                	addi	sp,sp,-48
20015f1c:	d606                	sw	ra,44(sp)
20015f1e:	d422                	sw	s0,40(sp)
20015f20:	1800                	addi	s0,sp,48
20015f22:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:40
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015f26:	fdc42503          	lw	a0,-36(s0)
20015f2a:	b93ff0ef          	jal	ra,20015abc <__metal_driver_sifive_gpio0_base>
20015f2e:	87aa                	mv	a5,a0
20015f30:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:42

    return __METAL_ACCESS_ONCE(
20015f34:	fec42783          	lw	a5,-20(s0)
20015f38:	07b1                	addi	a5,a5,12
20015f3a:	439c                	lw	a5,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:44
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT));
}
20015f3c:	853e                	mv	a0,a5
20015f3e:	50b2                	lw	ra,44(sp)
20015f40:	5422                	lw	s0,40(sp)
20015f42:	6145                	addi	sp,sp,48
20015f44:	8082                	ret

20015f46 <__metal_driver_sifive_gpio0_disable_output>:
__metal_driver_sifive_gpio0_disable_output():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:47

int __metal_driver_sifive_gpio0_disable_output(struct metal_gpio *ggpio,
                                               long source) {
20015f46:	7179                	addi	sp,sp,-48
20015f48:	d606                	sw	ra,44(sp)
20015f4a:	d422                	sw	s0,40(sp)
20015f4c:	1800                	addi	s0,sp,48
20015f4e:	fca42e23          	sw	a0,-36(s0)
20015f52:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:48
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015f56:	fdc42503          	lw	a0,-36(s0)
20015f5a:	b63ff0ef          	jal	ra,20015abc <__metal_driver_sifive_gpio0_base>
20015f5e:	87aa                	mv	a5,a0
20015f60:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:51

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) &= ~source;
20015f64:	fec42783          	lw	a5,-20(s0)
20015f68:	07a1                	addi	a5,a5,8
20015f6a:	439c                	lw	a5,0(a5)
20015f6c:	fd842703          	lw	a4,-40(s0)
20015f70:	fff74713          	not	a4,a4
20015f74:	86ba                	mv	a3,a4
20015f76:	fec42703          	lw	a4,-20(s0)
20015f7a:	0721                	addi	a4,a4,8
20015f7c:	8ff5                	and	a5,a5,a3
20015f7e:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:53

    return 0;
20015f80:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:54
}
20015f82:	853e                	mv	a0,a5
20015f84:	50b2                	lw	ra,44(sp)
20015f86:	5422                	lw	s0,40(sp)
20015f88:	6145                	addi	sp,sp,48
20015f8a:	8082                	ret

20015f8c <__metal_driver_sifive_gpio0_enable_output>:
__metal_driver_sifive_gpio0_enable_output():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:57

int __metal_driver_sifive_gpio0_enable_output(struct metal_gpio *ggpio,
                                              long source) {
20015f8c:	7179                	addi	sp,sp,-48
20015f8e:	d606                	sw	ra,44(sp)
20015f90:	d422                	sw	s0,40(sp)
20015f92:	1800                	addi	s0,sp,48
20015f94:	fca42e23          	sw	a0,-36(s0)
20015f98:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:58
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015f9c:	fdc42503          	lw	a0,-36(s0)
20015fa0:	b1dff0ef          	jal	ra,20015abc <__metal_driver_sifive_gpio0_base>
20015fa4:	87aa                	mv	a5,a0
20015fa6:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:61

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) |= source;
20015faa:	fec42783          	lw	a5,-20(s0)
20015fae:	07a1                	addi	a5,a5,8
20015fb0:	4398                	lw	a4,0(a5)
20015fb2:	fd842783          	lw	a5,-40(s0)
20015fb6:	fec42683          	lw	a3,-20(s0)
20015fba:	06a1                	addi	a3,a3,8
20015fbc:	8fd9                	or	a5,a5,a4
20015fbe:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:63

    return 0;
20015fc0:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:64
}
20015fc2:	853e                	mv	a0,a5
20015fc4:	50b2                	lw	ra,44(sp)
20015fc6:	5422                	lw	s0,40(sp)
20015fc8:	6145                	addi	sp,sp,48
20015fca:	8082                	ret

20015fcc <__metal_driver_sifive_gpio0_output_set>:
__metal_driver_sifive_gpio0_output_set():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:67

int __metal_driver_sifive_gpio0_output_set(struct metal_gpio *ggpio,
                                           long value) {
20015fcc:	7179                	addi	sp,sp,-48
20015fce:	d606                	sw	ra,44(sp)
20015fd0:	d422                	sw	s0,40(sp)
20015fd2:	1800                	addi	s0,sp,48
20015fd4:	fca42e23          	sw	a0,-36(s0)
20015fd8:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:68
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015fdc:	fdc42503          	lw	a0,-36(s0)
20015fe0:	addff0ef          	jal	ra,20015abc <__metal_driver_sifive_gpio0_base>
20015fe4:	87aa                	mv	a5,a0
20015fe6:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:70

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) |=
20015fea:	fec42783          	lw	a5,-20(s0)
20015fee:	07b1                	addi	a5,a5,12
20015ff0:	4398                	lw	a4,0(a5)
20015ff2:	fd842783          	lw	a5,-40(s0)
20015ff6:	fec42683          	lw	a3,-20(s0)
20015ffa:	06b1                	addi	a3,a3,12
20015ffc:	8fd9                	or	a5,a5,a4
20015ffe:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:73
        value;

    return 0;
20016000:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:74
}
20016002:	853e                	mv	a0,a5
20016004:	50b2                	lw	ra,44(sp)
20016006:	5422                	lw	s0,40(sp)
20016008:	6145                	addi	sp,sp,48
2001600a:	8082                	ret

2001600c <__metal_driver_sifive_gpio0_output_clear>:
__metal_driver_sifive_gpio0_output_clear():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:77

int __metal_driver_sifive_gpio0_output_clear(struct metal_gpio *ggpio,
                                             long value) {
2001600c:	7179                	addi	sp,sp,-48
2001600e:	d606                	sw	ra,44(sp)
20016010:	d422                	sw	s0,40(sp)
20016012:	1800                	addi	s0,sp,48
20016014:	fca42e23          	sw	a0,-36(s0)
20016018:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:78
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2001601c:	fdc42503          	lw	a0,-36(s0)
20016020:	a9dff0ef          	jal	ra,20015abc <__metal_driver_sifive_gpio0_base>
20016024:	87aa                	mv	a5,a0
20016026:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:80

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
2001602a:	fec42783          	lw	a5,-20(s0)
2001602e:	07b1                	addi	a5,a5,12
20016030:	439c                	lw	a5,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:81
        ~value;
20016032:	fd842703          	lw	a4,-40(s0)
20016036:	fff74713          	not	a4,a4
2001603a:	86ba                	mv	a3,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:80
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
2001603c:	fec42703          	lw	a4,-20(s0)
20016040:	0731                	addi	a4,a4,12
20016042:	8ff5                	and	a5,a5,a3
20016044:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:83

    return 0;
20016046:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:84
}
20016048:	853e                	mv	a0,a5
2001604a:	50b2                	lw	ra,44(sp)
2001604c:	5422                	lw	s0,40(sp)
2001604e:	6145                	addi	sp,sp,48
20016050:	8082                	ret

20016052 <__metal_driver_sifive_gpio0_output_toggle>:
__metal_driver_sifive_gpio0_output_toggle():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:87

int __metal_driver_sifive_gpio0_output_toggle(struct metal_gpio *ggpio,
                                              long value) {
20016052:	7179                	addi	sp,sp,-48
20016054:	d606                	sw	ra,44(sp)
20016056:	d422                	sw	s0,40(sp)
20016058:	1800                	addi	s0,sp,48
2001605a:	fca42e23          	sw	a0,-36(s0)
2001605e:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:88
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20016062:	fdc42503          	lw	a0,-36(s0)
20016066:	a57ff0ef          	jal	ra,20015abc <__metal_driver_sifive_gpio0_base>
2001606a:	87aa                	mv	a5,a0
2001606c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:91

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
        __METAL_ACCESS_ONCE(
20016070:	fec42783          	lw	a5,-20(s0)
20016074:	07b1                	addi	a5,a5,12
20016076:	4398                	lw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
20016078:	fd842783          	lw	a5,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
2001607c:	fec42683          	lw	a3,-20(s0)
20016080:	06b1                	addi	a3,a3,12
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
20016082:	8fb9                	xor	a5,a5,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
20016084:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:95
        value;

    return 0;
20016086:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:96
}
20016088:	853e                	mv	a0,a5
2001608a:	50b2                	lw	ra,44(sp)
2001608c:	5422                	lw	s0,40(sp)
2001608e:	6145                	addi	sp,sp,48
20016090:	8082                	ret

20016092 <__metal_driver_sifive_gpio0_enable_io>:
__metal_driver_sifive_gpio0_enable_io():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:99

int __metal_driver_sifive_gpio0_enable_io(struct metal_gpio *ggpio, long source,
                                          long dest) {
20016092:	7179                	addi	sp,sp,-48
20016094:	d606                	sw	ra,44(sp)
20016096:	d422                	sw	s0,40(sp)
20016098:	1800                	addi	s0,sp,48
2001609a:	fca42e23          	sw	a0,-36(s0)
2001609e:	fcb42c23          	sw	a1,-40(s0)
200160a2:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:100
    long base = __metal_driver_sifive_gpio0_base(ggpio);
200160a6:	fdc42503          	lw	a0,-36(s0)
200160aa:	a13ff0ef          	jal	ra,20015abc <__metal_driver_sifive_gpio0_base>
200160ae:	87aa                	mv	a5,a0
200160b0:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:103

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_SEL)) |= source;
200160b4:	fec42783          	lw	a5,-20(s0)
200160b8:	03c78793          	addi	a5,a5,60
200160bc:	4398                	lw	a4,0(a5)
200160be:	fd842783          	lw	a5,-40(s0)
200160c2:	fec42683          	lw	a3,-20(s0)
200160c6:	03c68693          	addi	a3,a3,60
200160ca:	8fd9                	or	a5,a5,a4
200160cc:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:104
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) |=
200160ce:	fec42783          	lw	a5,-20(s0)
200160d2:	03878793          	addi	a5,a5,56
200160d6:	4398                	lw	a4,0(a5)
200160d8:	fd442783          	lw	a5,-44(s0)
200160dc:	fec42683          	lw	a3,-20(s0)
200160e0:	03868693          	addi	a3,a3,56
200160e4:	8fd9                	or	a5,a5,a4
200160e6:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:107
        dest;

    return 0;
200160e8:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:108
}
200160ea:	853e                	mv	a0,a5
200160ec:	50b2                	lw	ra,44(sp)
200160ee:	5422                	lw	s0,40(sp)
200160f0:	6145                	addi	sp,sp,48
200160f2:	8082                	ret

200160f4 <__metal_driver_sifive_gpio0_disable_io>:
__metal_driver_sifive_gpio0_disable_io():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:111

int __metal_driver_sifive_gpio0_disable_io(struct metal_gpio *ggpio,
                                           long source) {
200160f4:	7179                	addi	sp,sp,-48
200160f6:	d606                	sw	ra,44(sp)
200160f8:	d422                	sw	s0,40(sp)
200160fa:	1800                	addi	s0,sp,48
200160fc:	fca42e23          	sw	a0,-36(s0)
20016100:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:112
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20016104:	fdc42503          	lw	a0,-36(s0)
20016108:	9b5ff0ef          	jal	ra,20015abc <__metal_driver_sifive_gpio0_base>
2001610c:	87aa                	mv	a5,a0
2001610e:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:114

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
20016112:	fec42783          	lw	a5,-20(s0)
20016116:	03878793          	addi	a5,a5,56
2001611a:	439c                	lw	a5,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:115
        ~source;
2001611c:	fd842703          	lw	a4,-40(s0)
20016120:	fff74713          	not	a4,a4
20016124:	86ba                	mv	a3,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:114
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
20016126:	fec42703          	lw	a4,-20(s0)
2001612a:	03870713          	addi	a4,a4,56
2001612e:	8ff5                	and	a5,a5,a3
20016130:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:117

    return 0;
20016132:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:118
}
20016134:	853e                	mv	a0,a5
20016136:	50b2                	lw	ra,44(sp)
20016138:	5422                	lw	s0,40(sp)
2001613a:	6145                	addi	sp,sp,48
2001613c:	8082                	ret

2001613e <__metal_driver_sifive_gpio0_config_int>:
__metal_driver_sifive_gpio0_config_int():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:121

int __metal_driver_sifive_gpio0_config_int(struct metal_gpio *ggpio,
                                           long source, int intr_type) {
2001613e:	7179                	addi	sp,sp,-48
20016140:	d606                	sw	ra,44(sp)
20016142:	d422                	sw	s0,40(sp)
20016144:	1800                	addi	s0,sp,48
20016146:	fca42e23          	sw	a0,-36(s0)
2001614a:	fcb42c23          	sw	a1,-40(s0)
2001614e:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:122
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20016152:	fdc42503          	lw	a0,-36(s0)
20016156:	967ff0ef          	jal	ra,20015abc <__metal_driver_sifive_gpio0_base>
2001615a:	87aa                	mv	a5,a0
2001615c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:124

    switch (intr_type) {
20016160:	fd442703          	lw	a4,-44(s0)
20016164:	479d                	li	a5,7
20016166:	1ce7e963          	bltu	a5,a4,20016338 <__metal_driver_sifive_gpio0_config_int+0x1fa>
2001616a:	fd442783          	lw	a5,-44(s0)
2001616e:	00279713          	slli	a4,a5,0x2
20016172:	200117b7          	lui	a5,0x20011
20016176:	ff878793          	addi	a5,a5,-8 # 20010ff8 <__metal_driver_vtable_sifive_fe310_g000_pll+0xc>
2001617a:	97ba                	add	a5,a5,a4
2001617c:	439c                	lw	a5,0(a5)
2001617e:	8782                	jr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:127
    case METAL_GPIO_INT_DISABLE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) &= ~source;
20016180:	fec42783          	lw	a5,-20(s0)
20016184:	07e1                	addi	a5,a5,24
20016186:	439c                	lw	a5,0(a5)
20016188:	fd842703          	lw	a4,-40(s0)
2001618c:	fff74713          	not	a4,a4
20016190:	86ba                	mv	a3,a4
20016192:	fec42703          	lw	a4,-20(s0)
20016196:	0761                	addi	a4,a4,24
20016198:	8ff5                	and	a5,a5,a3
2001619a:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:129
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) &= ~source;
2001619c:	fec42783          	lw	a5,-20(s0)
200161a0:	02078793          	addi	a5,a5,32
200161a4:	439c                	lw	a5,0(a5)
200161a6:	fd842703          	lw	a4,-40(s0)
200161aa:	fff74713          	not	a4,a4
200161ae:	86ba                	mv	a3,a4
200161b0:	fec42703          	lw	a4,-20(s0)
200161b4:	02070713          	addi	a4,a4,32
200161b8:	8ff5                	and	a5,a5,a3
200161ba:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:131
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) &= ~source;
200161bc:	fec42783          	lw	a5,-20(s0)
200161c0:	02878793          	addi	a5,a5,40
200161c4:	439c                	lw	a5,0(a5)
200161c6:	fd842703          	lw	a4,-40(s0)
200161ca:	fff74713          	not	a4,a4
200161ce:	86ba                	mv	a3,a4
200161d0:	fec42703          	lw	a4,-20(s0)
200161d4:	02870713          	addi	a4,a4,40
200161d8:	8ff5                	and	a5,a5,a3
200161da:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:133
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) &= ~source;
200161dc:	fec42783          	lw	a5,-20(s0)
200161e0:	03078793          	addi	a5,a5,48
200161e4:	439c                	lw	a5,0(a5)
200161e6:	fd842703          	lw	a4,-40(s0)
200161ea:	fff74713          	not	a4,a4
200161ee:	86ba                	mv	a3,a4
200161f0:	fec42703          	lw	a4,-20(s0)
200161f4:	03070713          	addi	a4,a4,48
200161f8:	8ff5                	and	a5,a5,a3
200161fa:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:134
        break;
200161fc:	aa35                	j	20016338 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:137
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
200161fe:	fec42783          	lw	a5,-20(s0)
20016202:	07e1                	addi	a5,a5,24
20016204:	4398                	lw	a4,0(a5)
20016206:	fd842783          	lw	a5,-40(s0)
2001620a:	fec42683          	lw	a3,-20(s0)
2001620e:	06e1                	addi	a3,a3,24
20016210:	8fd9                	or	a5,a5,a4
20016212:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:138
        break;
20016214:	a215                	j	20016338 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:141
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20016216:	fec42783          	lw	a5,-20(s0)
2001621a:	02078793          	addi	a5,a5,32
2001621e:	4398                	lw	a4,0(a5)
20016220:	fd842783          	lw	a5,-40(s0)
20016224:	fec42683          	lw	a3,-20(s0)
20016228:	02068693          	addi	a3,a3,32
2001622c:	8fd9                	or	a5,a5,a4
2001622e:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:142
        break;
20016230:	a221                	j	20016338 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:145
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20016232:	fec42783          	lw	a5,-20(s0)
20016236:	07e1                	addi	a5,a5,24
20016238:	4398                	lw	a4,0(a5)
2001623a:	fd842783          	lw	a5,-40(s0)
2001623e:	fec42683          	lw	a3,-20(s0)
20016242:	06e1                	addi	a3,a3,24
20016244:	8fd9                	or	a5,a5,a4
20016246:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:147
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20016248:	fec42783          	lw	a5,-20(s0)
2001624c:	02078793          	addi	a5,a5,32
20016250:	4398                	lw	a4,0(a5)
20016252:	fd842783          	lw	a5,-40(s0)
20016256:	fec42683          	lw	a3,-20(s0)
2001625a:	02068693          	addi	a3,a3,32
2001625e:	8fd9                	or	a5,a5,a4
20016260:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:148
        break;
20016262:	a8d9                	j	20016338 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:151
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20016264:	fec42783          	lw	a5,-20(s0)
20016268:	02878793          	addi	a5,a5,40
2001626c:	4398                	lw	a4,0(a5)
2001626e:	fd842783          	lw	a5,-40(s0)
20016272:	fec42683          	lw	a3,-20(s0)
20016276:	02868693          	addi	a3,a3,40
2001627a:	8fd9                	or	a5,a5,a4
2001627c:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:152
        break;
2001627e:	a86d                	j	20016338 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:155
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20016280:	fec42783          	lw	a5,-20(s0)
20016284:	03078793          	addi	a5,a5,48
20016288:	4398                	lw	a4,0(a5)
2001628a:	fd842783          	lw	a5,-40(s0)
2001628e:	fec42683          	lw	a3,-20(s0)
20016292:	03068693          	addi	a3,a3,48
20016296:	8fd9                	or	a5,a5,a4
20016298:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:156
        break;
2001629a:	a879                	j	20016338 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:159
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
2001629c:	fec42783          	lw	a5,-20(s0)
200162a0:	02878793          	addi	a5,a5,40
200162a4:	4398                	lw	a4,0(a5)
200162a6:	fd842783          	lw	a5,-40(s0)
200162aa:	fec42683          	lw	a3,-20(s0)
200162ae:	02868693          	addi	a3,a3,40
200162b2:	8fd9                	or	a5,a5,a4
200162b4:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:161
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
200162b6:	fec42783          	lw	a5,-20(s0)
200162ba:	03078793          	addi	a5,a5,48
200162be:	4398                	lw	a4,0(a5)
200162c0:	fd842783          	lw	a5,-40(s0)
200162c4:	fec42683          	lw	a3,-20(s0)
200162c8:	03068693          	addi	a3,a3,48
200162cc:	8fd9                	or	a5,a5,a4
200162ce:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:162
        break;
200162d0:	a0a5                	j	20016338 <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:165
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
200162d2:	fec42783          	lw	a5,-20(s0)
200162d6:	07e1                	addi	a5,a5,24
200162d8:	4398                	lw	a4,0(a5)
200162da:	fd842783          	lw	a5,-40(s0)
200162de:	fec42683          	lw	a3,-20(s0)
200162e2:	06e1                	addi	a3,a3,24
200162e4:	8fd9                	or	a5,a5,a4
200162e6:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:167
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
200162e8:	fec42783          	lw	a5,-20(s0)
200162ec:	02078793          	addi	a5,a5,32
200162f0:	4398                	lw	a4,0(a5)
200162f2:	fd842783          	lw	a5,-40(s0)
200162f6:	fec42683          	lw	a3,-20(s0)
200162fa:	02068693          	addi	a3,a3,32
200162fe:	8fd9                	or	a5,a5,a4
20016300:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:169
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20016302:	fec42783          	lw	a5,-20(s0)
20016306:	02878793          	addi	a5,a5,40
2001630a:	4398                	lw	a4,0(a5)
2001630c:	fd842783          	lw	a5,-40(s0)
20016310:	fec42683          	lw	a3,-20(s0)
20016314:	02868693          	addi	a3,a3,40
20016318:	8fd9                	or	a5,a5,a4
2001631a:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:171
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
2001631c:	fec42783          	lw	a5,-20(s0)
20016320:	03078793          	addi	a5,a5,48
20016324:	4398                	lw	a4,0(a5)
20016326:	fd842783          	lw	a5,-40(s0)
2001632a:	fec42683          	lw	a3,-20(s0)
2001632e:	03068693          	addi	a3,a3,48
20016332:	8fd9                	or	a5,a5,a4
20016334:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:172
        break;
20016336:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:174
    }
    return 0;
20016338:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:175
}
2001633a:	853e                	mv	a0,a5
2001633c:	50b2                	lw	ra,44(sp)
2001633e:	5422                	lw	s0,40(sp)
20016340:	6145                	addi	sp,sp,48
20016342:	8082                	ret

20016344 <__metal_driver_sifive_gpio0_clear_int>:
__metal_driver_sifive_gpio0_clear_int():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:178

int __metal_driver_sifive_gpio0_clear_int(struct metal_gpio *ggpio, long source,
                                          int intr_type) {
20016344:	7179                	addi	sp,sp,-48
20016346:	d606                	sw	ra,44(sp)
20016348:	d422                	sw	s0,40(sp)
2001634a:	1800                	addi	s0,sp,48
2001634c:	fca42e23          	sw	a0,-36(s0)
20016350:	fcb42c23          	sw	a1,-40(s0)
20016354:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:179
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20016358:	fdc42503          	lw	a0,-36(s0)
2001635c:	f60ff0ef          	jal	ra,20015abc <__metal_driver_sifive_gpio0_base>
20016360:	87aa                	mv	a5,a0
20016362:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:181

    switch (intr_type) {
20016366:	fd442703          	lw	a4,-44(s0)
2001636a:	479d                	li	a5,7
2001636c:	14e7ea63          	bltu	a5,a4,200164c0 <__metal_driver_sifive_gpio0_clear_int+0x17c>
20016370:	fd442783          	lw	a5,-44(s0)
20016374:	00279713          	slli	a4,a5,0x2
20016378:	200117b7          	lui	a5,0x20011
2001637c:	01878793          	addi	a5,a5,24 # 20011018 <__metal_driver_vtable_sifive_fe310_g000_pll+0x2c>
20016380:	97ba                	add	a5,a5,a4
20016382:	439c                	lw	a5,0(a5)
20016384:	8782                	jr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:184
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20016386:	fec42783          	lw	a5,-20(s0)
2001638a:	07f1                	addi	a5,a5,28
2001638c:	4398                	lw	a4,0(a5)
2001638e:	fd842783          	lw	a5,-40(s0)
20016392:	fec42683          	lw	a3,-20(s0)
20016396:	06f1                	addi	a3,a3,28
20016398:	8fd9                	or	a5,a5,a4
2001639a:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:185
        break;
2001639c:	a215                	j	200164c0 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:188
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
2001639e:	fec42783          	lw	a5,-20(s0)
200163a2:	02478793          	addi	a5,a5,36
200163a6:	4398                	lw	a4,0(a5)
200163a8:	fd842783          	lw	a5,-40(s0)
200163ac:	fec42683          	lw	a3,-20(s0)
200163b0:	02468693          	addi	a3,a3,36
200163b4:	8fd9                	or	a5,a5,a4
200163b6:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:189
        break;
200163b8:	a221                	j	200164c0 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:192
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
200163ba:	fec42783          	lw	a5,-20(s0)
200163be:	07f1                	addi	a5,a5,28
200163c0:	4398                	lw	a4,0(a5)
200163c2:	fd842783          	lw	a5,-40(s0)
200163c6:	fec42683          	lw	a3,-20(s0)
200163ca:	06f1                	addi	a3,a3,28
200163cc:	8fd9                	or	a5,a5,a4
200163ce:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:194
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
200163d0:	fec42783          	lw	a5,-20(s0)
200163d4:	02478793          	addi	a5,a5,36
200163d8:	4398                	lw	a4,0(a5)
200163da:	fd842783          	lw	a5,-40(s0)
200163de:	fec42683          	lw	a3,-20(s0)
200163e2:	02468693          	addi	a3,a3,36
200163e6:	8fd9                	or	a5,a5,a4
200163e8:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:195
        break;
200163ea:	a8d9                	j	200164c0 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:198
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
200163ec:	fec42783          	lw	a5,-20(s0)
200163f0:	02c78793          	addi	a5,a5,44
200163f4:	4398                	lw	a4,0(a5)
200163f6:	fd842783          	lw	a5,-40(s0)
200163fa:	fec42683          	lw	a3,-20(s0)
200163fe:	02c68693          	addi	a3,a3,44
20016402:	8fd9                	or	a5,a5,a4
20016404:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:199
        break;
20016406:	a86d                	j	200164c0 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:202
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20016408:	fec42783          	lw	a5,-20(s0)
2001640c:	03478793          	addi	a5,a5,52
20016410:	4398                	lw	a4,0(a5)
20016412:	fd842783          	lw	a5,-40(s0)
20016416:	fec42683          	lw	a3,-20(s0)
2001641a:	03468693          	addi	a3,a3,52
2001641e:	8fd9                	or	a5,a5,a4
20016420:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:203
        break;
20016422:	a879                	j	200164c0 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:206
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20016424:	fec42783          	lw	a5,-20(s0)
20016428:	02c78793          	addi	a5,a5,44
2001642c:	4398                	lw	a4,0(a5)
2001642e:	fd842783          	lw	a5,-40(s0)
20016432:	fec42683          	lw	a3,-20(s0)
20016436:	02c68693          	addi	a3,a3,44
2001643a:	8fd9                	or	a5,a5,a4
2001643c:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:208
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
2001643e:	fec42783          	lw	a5,-20(s0)
20016442:	03478793          	addi	a5,a5,52
20016446:	4398                	lw	a4,0(a5)
20016448:	fd842783          	lw	a5,-40(s0)
2001644c:	fec42683          	lw	a3,-20(s0)
20016450:	03468693          	addi	a3,a3,52
20016454:	8fd9                	or	a5,a5,a4
20016456:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:209
        break;
20016458:	a0a5                	j	200164c0 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:212
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
2001645a:	fec42783          	lw	a5,-20(s0)
2001645e:	07f1                	addi	a5,a5,28
20016460:	4398                	lw	a4,0(a5)
20016462:	fd842783          	lw	a5,-40(s0)
20016466:	fec42683          	lw	a3,-20(s0)
2001646a:	06f1                	addi	a3,a3,28
2001646c:	8fd9                	or	a5,a5,a4
2001646e:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:214
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20016470:	fec42783          	lw	a5,-20(s0)
20016474:	02478793          	addi	a5,a5,36
20016478:	4398                	lw	a4,0(a5)
2001647a:	fd842783          	lw	a5,-40(s0)
2001647e:	fec42683          	lw	a3,-20(s0)
20016482:	02468693          	addi	a3,a3,36
20016486:	8fd9                	or	a5,a5,a4
20016488:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:216
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
2001648a:	fec42783          	lw	a5,-20(s0)
2001648e:	02c78793          	addi	a5,a5,44
20016492:	4398                	lw	a4,0(a5)
20016494:	fd842783          	lw	a5,-40(s0)
20016498:	fec42683          	lw	a3,-20(s0)
2001649c:	02c68693          	addi	a3,a3,44
200164a0:	8fd9                	or	a5,a5,a4
200164a2:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:218
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
200164a4:	fec42783          	lw	a5,-20(s0)
200164a8:	03478793          	addi	a5,a5,52
200164ac:	4398                	lw	a4,0(a5)
200164ae:	fd842783          	lw	a5,-40(s0)
200164b2:	fec42683          	lw	a3,-20(s0)
200164b6:	03468693          	addi	a3,a3,52
200164ba:	8fd9                	or	a5,a5,a4
200164bc:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:219
        break;
200164be:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:221
    }
    return 0;
200164c0:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:222
}
200164c2:	853e                	mv	a0,a5
200164c4:	50b2                	lw	ra,44(sp)
200164c6:	5422                	lw	s0,40(sp)
200164c8:	6145                	addi	sp,sp,48
200164ca:	8082                	ret

200164cc <__metal_driver_gpio_interrupt_controller>:
__metal_driver_gpio_interrupt_controller():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:225

struct metal_interrupt *
__metal_driver_gpio_interrupt_controller(struct metal_gpio *gpio) {
200164cc:	1101                	addi	sp,sp,-32
200164ce:	ce06                	sw	ra,28(sp)
200164d0:	cc22                	sw	s0,24(sp)
200164d2:	1000                	addi	s0,sp,32
200164d4:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:226
    return __metal_driver_sifive_gpio0_interrupt_parent(gpio);
200164d8:	fec42503          	lw	a0,-20(s0)
200164dc:	e06ff0ef          	jal	ra,20015ae2 <__metal_driver_sifive_gpio0_interrupt_parent>
200164e0:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:227
}
200164e2:	853e                	mv	a0,a5
200164e4:	40f2                	lw	ra,28(sp)
200164e6:	4462                	lw	s0,24(sp)
200164e8:	6105                	addi	sp,sp,32
200164ea:	8082                	ret

200164ec <__metal_driver_gpio_get_interrupt_id>:
__metal_driver_gpio_get_interrupt_id():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:229

int __metal_driver_gpio_get_interrupt_id(struct metal_gpio *gpio, int pin) {
200164ec:	7179                	addi	sp,sp,-48
200164ee:	d606                	sw	ra,44(sp)
200164f0:	d422                	sw	s0,40(sp)
200164f2:	1800                	addi	s0,sp,48
200164f4:	fca42e23          	sw	a0,-36(s0)
200164f8:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:231
    int irq;
    irq = __metal_driver_sifive_gpio0_interrupt_lines(gpio, pin);
200164fc:	fd842583          	lw	a1,-40(s0)
20016500:	fdc42503          	lw	a0,-36(s0)
20016504:	e08ff0ef          	jal	ra,20015b0c <__metal_driver_sifive_gpio0_interrupt_lines>
20016508:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:232
    return irq;
2001650c:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:233
}
20016510:	853e                	mv	a0,a5
20016512:	50b2                	lw	ra,44(sp)
20016514:	5422                	lw	s0,40(sp)
20016516:	6145                	addi	sp,sp,48
20016518:	8082                	ret

2001651a <__metal_driver_sifive_i2c0_control_base>:
__metal_driver_sifive_i2c0_control_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:633
{
2001651a:	1101                	addi	sp,sp,-32
2001651c:	ce22                	sw	s0,28(sp)
2001651e:	1000                	addi	s0,sp,32
20016520:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:634
	if ((uintptr_t)i2c == (uintptr_t)&__metal_dt_i2c_10016000) {
20016524:	fec42703          	lw	a4,-20(s0)
20016528:	800017b7          	lui	a5,0x80001
2001652c:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xfffff278>
20016530:	00f71563          	bne	a4,a5,2001653a <__metal_driver_sifive_i2c0_control_base+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:635
		return METAL_SIFIVE_I2C0_10016000_BASE_ADDRESS;
20016534:	100167b7          	lui	a5,0x10016
20016538:	a011                	j	2001653c <__metal_driver_sifive_i2c0_control_base+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:638
		return 0;
2001653a:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:640
}
2001653c:	853e                	mv	a0,a5
2001653e:	4472                	lw	s0,28(sp)
20016540:	6105                	addi	sp,sp,32
20016542:	8082                	ret

20016544 <__metal_driver_sifive_i2c0_clock>:
__metal_driver_sifive_i2c0_clock():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:653
{
20016544:	1101                	addi	sp,sp,-32
20016546:	ce22                	sw	s0,28(sp)
20016548:	1000                	addi	s0,sp,32
2001654a:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:654
	if ((uintptr_t)i2c == (uintptr_t)&__metal_dt_i2c_10016000) {
2001654e:	fec42703          	lw	a4,-20(s0)
20016552:	800017b7          	lui	a5,0x80001
20016556:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xfffff278>
2001655a:	00f71763          	bne	a4,a5,20016568 <__metal_driver_sifive_i2c0_clock+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:655
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
2001655e:	800017b7          	lui	a5,0x80001
20016562:	ab478793          	addi	a5,a5,-1356 # 80000ab4 <metal_segment_heap_target_end+0xfffff2f4>
20016566:	a011                	j	2001656a <__metal_driver_sifive_i2c0_clock+0x26>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:658
		return NULL;
20016568:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:660
}
2001656a:	853e                	mv	a0,a5
2001656c:	4472                	lw	s0,28(sp)
2001656e:	6105                	addi	sp,sp,32
20016570:	8082                	ret

20016572 <__metal_driver_sifive_i2c0_pinmux>:
__metal_driver_sifive_i2c0_pinmux():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:663
{
20016572:	1101                	addi	sp,sp,-32
20016574:	ce22                	sw	s0,28(sp)
20016576:	1000                	addi	s0,sp,32
20016578:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:664
	if ((uintptr_t)i2c == (uintptr_t)&__metal_dt_i2c_10016000) {
2001657c:	fec42703          	lw	a4,-20(s0)
20016580:	800017b7          	lui	a5,0x80001
20016584:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xfffff278>
20016588:	00f71563          	bne	a4,a5,20016592 <__metal_driver_sifive_i2c0_pinmux+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:665
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
2001658c:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20016590:	a011                	j	20016594 <__metal_driver_sifive_i2c0_pinmux+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:668
		return NULL;
20016592:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:670
}
20016594:	853e                	mv	a0,a5
20016596:	4472                	lw	s0,28(sp)
20016598:	6105                	addi	sp,sp,32
2001659a:	8082                	ret

2001659c <__metal_driver_sifive_i2c0_pinmux_output_selector>:
__metal_driver_sifive_i2c0_pinmux_output_selector():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:673
{
2001659c:	1101                	addi	sp,sp,-32
2001659e:	ce22                	sw	s0,28(sp)
200165a0:	1000                	addi	s0,sp,32
200165a2:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:674
	if ((uintptr_t)i2c == (uintptr_t)&__metal_dt_i2c_10016000) {
200165a6:	fec42703          	lw	a4,-20(s0)
200165aa:	800017b7          	lui	a5,0x80001
200165ae:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xfffff278>
200165b2:	00f71463          	bne	a4,a5,200165ba <__metal_driver_sifive_i2c0_pinmux_output_selector+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:675
		return 0;
200165b6:	4781                	li	a5,0
200165b8:	a011                	j	200165bc <__metal_driver_sifive_i2c0_pinmux_output_selector+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:678
		return 0;
200165ba:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:680
}
200165bc:	853e                	mv	a0,a5
200165be:	4472                	lw	s0,28(sp)
200165c0:	6105                	addi	sp,sp,32
200165c2:	8082                	ret

200165c4 <__metal_driver_sifive_i2c0_pinmux_source_selector>:
__metal_driver_sifive_i2c0_pinmux_source_selector():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:683
{
200165c4:	1101                	addi	sp,sp,-32
200165c6:	ce22                	sw	s0,28(sp)
200165c8:	1000                	addi	s0,sp,32
200165ca:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:684
	if ((uintptr_t)i2c == (uintptr_t)&__metal_dt_i2c_10016000) {
200165ce:	fec42703          	lw	a4,-20(s0)
200165d2:	800017b7          	lui	a5,0x80001
200165d6:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xfffff278>
200165da:	00f71463          	bne	a4,a5,200165e2 <__metal_driver_sifive_i2c0_pinmux_source_selector+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:685
		return 12288;
200165de:	678d                	lui	a5,0x3
200165e0:	a011                	j	200165e4 <__metal_driver_sifive_i2c0_pinmux_source_selector+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:688
		return 0;
200165e2:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:690
}
200165e4:	853e                	mv	a0,a5
200165e6:	4472                	lw	s0,28(sp)
200165e8:	6105                	addi	sp,sp,32
200165ea:	8082                	ret

200165ec <pre_rate_change_callback>:
pre_rate_change_callback():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:77
    ((clock_rate / (baud_rate * 5)) - 1)
#define METAL_I2C_INIT_OK 1
#define METAL_I2C_RET_OK 0
#define METAL_I2C_RET_ERR -1

static void pre_rate_change_callback(void *priv) {
200165ec:	7179                	addi	sp,sp,-48
200165ee:	d606                	sw	ra,44(sp)
200165f0:	d422                	sw	s0,40(sp)
200165f2:	1800                	addi	s0,sp,48
200165f4:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:79
    unsigned long base =
        __metal_driver_sifive_i2c0_control_base((struct metal_i2c *)priv);
200165f8:	fdc42503          	lw	a0,-36(s0)
200165fc:	3f39                	jal	2001651a <__metal_driver_sifive_i2c0_control_base>
200165fe:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:81
    /* Check for any pending transfers */
    while (METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) & METAL_I2C_STATUS_TIP)
20016602:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:81 (discriminator 1)
20016604:	fec42783          	lw	a5,-20(s0)
20016608:	07c1                	addi	a5,a5,16
2001660a:	0007c783          	lbu	a5,0(a5) # 3000 <__heap_size+0x2800>
2001660e:	0ff7f793          	andi	a5,a5,255
20016612:	8b89                	andi	a5,a5,2
20016614:	fbe5                	bnez	a5,20016604 <pre_rate_change_callback+0x18>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:83
        ;
}
20016616:	0001                	nop
20016618:	50b2                	lw	ra,44(sp)
2001661a:	5422                	lw	s0,40(sp)
2001661c:	6145                	addi	sp,sp,48
2001661e:	8082                	ret

20016620 <post_rate_change_callback>:
post_rate_change_callback():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:85

static void post_rate_change_callback(void *priv) {
20016620:	7179                	addi	sp,sp,-48
20016622:	d606                	sw	ra,44(sp)
20016624:	d422                	sw	s0,40(sp)
20016626:	1800                	addi	s0,sp,48
20016628:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:86
    struct __metal_driver_sifive_i2c0 *i2c = priv;
2001662c:	fdc42783          	lw	a5,-36(s0)
20016630:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:88
    /* Set baud rate after clock rate change */
    metal_i2c_set_baud_rate(&i2c->i2c, i2c->baud_rate);
20016634:	fec42703          	lw	a4,-20(s0)
20016638:	fec42783          	lw	a5,-20(s0)
2001663c:	479c                	lw	a5,8(a5)
2001663e:	85be                	mv	a1,a5
20016640:	853a                	mv	a0,a4
20016642:	2a4010ef          	jal	ra,200178e6 <metal_i2c_set_baud_rate>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:89
}
20016646:	0001                	nop
20016648:	50b2                	lw	ra,44(sp)
2001664a:	5422                	lw	s0,40(sp)
2001664c:	6145                	addi	sp,sp,48
2001664e:	8082                	ret

20016650 <__metal_driver_sifive_i2c0_init>:
__metal_driver_sifive_i2c0_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:93

static void __metal_driver_sifive_i2c0_init(struct metal_i2c *gi2c,
                                            unsigned int baud_rate,
                                            metal_i2c_mode_t mode) {
20016650:	7179                	addi	sp,sp,-48
20016652:	d606                	sw	ra,44(sp)
20016654:	d422                	sw	s0,40(sp)
20016656:	1800                	addi	s0,sp,48
20016658:	fca42e23          	sw	a0,-36(s0)
2001665c:	fcb42c23          	sw	a1,-40(s0)
20016660:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:95
    struct __metal_driver_sifive_gpio0 *pinmux =
        __metal_driver_sifive_i2c0_pinmux(gi2c);
20016664:	fdc42503          	lw	a0,-36(s0)
20016668:	3729                	jal	20016572 <__metal_driver_sifive_i2c0_pinmux>
2001666a:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:96
    struct __metal_driver_sifive_i2c0 *i2c = (void *)gi2c;
2001666e:	fdc42783          	lw	a5,-36(s0)
20016672:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:98

    if ((pinmux != NULL) && (gi2c != NULL)) {
20016676:	fec42783          	lw	a5,-20(s0)
2001667a:	cfa9                	beqz	a5,200166d4 <__metal_driver_sifive_i2c0_init+0x84>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:98 (discriminator 1)
2001667c:	fdc42783          	lw	a5,-36(s0)
20016680:	cbb1                	beqz	a5,200166d4 <__metal_driver_sifive_i2c0_init+0x84>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:101
        /* configure I2C I/O pins */
        long pinmux_output_selector =
            __metal_driver_sifive_i2c0_pinmux_output_selector(gi2c);
20016682:	fdc42503          	lw	a0,-36(s0)
20016686:	3f19                	jal	2001659c <__metal_driver_sifive_i2c0_pinmux_output_selector>
20016688:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:100
        long pinmux_output_selector =
2001668a:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:103
        long pinmux_source_selector =
            __metal_driver_sifive_i2c0_pinmux_source_selector(gi2c);
2001668e:	fdc42503          	lw	a0,-36(s0)
20016692:	3f0d                	jal	200165c4 <__metal_driver_sifive_i2c0_pinmux_source_selector>
20016694:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:102
        long pinmux_source_selector =
20016696:	fef42023          	sw	a5,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:104
        pinmux->gpio.vtable->enable_io((struct metal_gpio *)pinmux,
2001669a:	fec42783          	lw	a5,-20(s0)
2001669e:	439c                	lw	a5,0(a5)
200166a0:	53dc                	lw	a5,36(a5)
200166a2:	fe042603          	lw	a2,-32(s0)
200166a6:	fe442583          	lw	a1,-28(s0)
200166aa:	fec42503          	lw	a0,-20(s0)
200166ae:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:109
                                       pinmux_output_selector,
                                       pinmux_source_selector);

        /* 1: Master 0: Slave */
        if (mode == METAL_I2C_MASTER) {
200166b0:	fd442703          	lw	a4,-44(s0)
200166b4:	4785                	li	a5,1
200166b6:	00f71f63          	bne	a4,a5,200166d4 <__metal_driver_sifive_i2c0_init+0x84>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:111
            /* Set requested baud rate */
            if (metal_i2c_set_baud_rate(gi2c, baud_rate) == METAL_I2C_RET_OK) {
200166ba:	fd842783          	lw	a5,-40(s0)
200166be:	85be                	mv	a1,a5
200166c0:	fdc42503          	lw	a0,-36(s0)
200166c4:	222010ef          	jal	ra,200178e6 <metal_i2c_set_baud_rate>
200166c8:	87aa                	mv	a5,a0
200166ca:	e789                	bnez	a5,200166d4 <__metal_driver_sifive_i2c0_init+0x84>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:112
                i2c->init_done = METAL_I2C_INIT_OK;
200166cc:	fe842783          	lw	a5,-24(s0)
200166d0:	4705                	li	a4,1
200166d2:	c3d8                	sw	a4,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:118
            }
        } else {
            /* Nothing to do. slave mode not supported */
        }
    }
}
200166d4:	0001                	nop
200166d6:	50b2                	lw	ra,44(sp)
200166d8:	5422                	lw	s0,40(sp)
200166da:	6145                	addi	sp,sp,48
200166dc:	8082                	ret

200166de <__metal_driver_sifive_i2c0_get_baud_rate>:
__metal_driver_sifive_i2c0_get_baud_rate():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:120

static int __metal_driver_sifive_i2c0_get_baud_rate(struct metal_i2c *gi2c) {
200166de:	7179                	addi	sp,sp,-48
200166e0:	d622                	sw	s0,44(sp)
200166e2:	1800                	addi	s0,sp,48
200166e4:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:121
    struct __metal_driver_sifive_i2c0 *i2c = (void *)gi2c;
200166e8:	fdc42783          	lw	a5,-36(s0)
200166ec:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:122
    return i2c->baud_rate;
200166f0:	fec42783          	lw	a5,-20(s0)
200166f4:	479c                	lw	a5,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:123
}
200166f6:	853e                	mv	a0,a5
200166f8:	5432                	lw	s0,44(sp)
200166fa:	6145                	addi	sp,sp,48
200166fc:	8082                	ret

200166fe <__metal_driver_sifive_i2c0_set_baud_rate>:
__metal_driver_sifive_i2c0_set_baud_rate():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:126

static int __metal_driver_sifive_i2c0_set_baud_rate(struct metal_i2c *gi2c,
                                                    unsigned int baud_rate) {
200166fe:	7139                	addi	sp,sp,-64
20016700:	de06                	sw	ra,60(sp)
20016702:	dc22                	sw	s0,56(sp)
20016704:	0080                	addi	s0,sp,64
20016706:	fca42623          	sw	a0,-52(s0)
2001670a:	fcb42423          	sw	a1,-56(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:127
    struct metal_clock *clock = __metal_driver_sifive_i2c0_clock(gi2c);
2001670e:	fcc42503          	lw	a0,-52(s0)
20016712:	e33ff0ef          	jal	ra,20016544 <__metal_driver_sifive_i2c0_clock>
20016716:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:128
    struct __metal_driver_sifive_i2c0 *i2c = (void *)gi2c;
2001671a:	fcc42783          	lw	a5,-52(s0)
2001671e:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:129
    unsigned long base = __metal_driver_sifive_i2c0_control_base(gi2c);
20016722:	fcc42503          	lw	a0,-52(s0)
20016726:	df5ff0ef          	jal	ra,2001651a <__metal_driver_sifive_i2c0_control_base>
2001672a:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:130
    int ret = METAL_I2C_RET_ERR;
2001672e:	57fd                	li	a5,-1
20016730:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:132

    if ((clock != NULL) && (gi2c != NULL)) {
20016734:	fe842783          	lw	a5,-24(s0)
20016738:	10078763          	beqz	a5,20016846 <__metal_driver_sifive_i2c0_set_baud_rate+0x148>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:132 (discriminator 1)
2001673c:	fcc42783          	lw	a5,-52(s0)
20016740:	10078363          	beqz	a5,20016846 <__metal_driver_sifive_i2c0_set_baud_rate+0x148>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:133
        long clock_rate = clock->vtable->get_rate_hz(clock);
20016744:	fe842783          	lw	a5,-24(s0)
20016748:	439c                	lw	a5,0(a5)
2001674a:	439c                	lw	a5,0(a5)
2001674c:	fe842503          	lw	a0,-24(s0)
20016750:	9782                	jalr	a5
20016752:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:135

        i2c->pre_rate_change_callback.callback = &pre_rate_change_callback;
20016756:	fe442783          	lw	a5,-28(s0)
2001675a:	20016737          	lui	a4,0x20016
2001675e:	5ec70713          	addi	a4,a4,1516 # 200165ec <pre_rate_change_callback>
20016762:	c7d8                	sw	a4,12(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:136
        i2c->pre_rate_change_callback.priv = i2c;
20016764:	fe442783          	lw	a5,-28(s0)
20016768:	fe442703          	lw	a4,-28(s0)
2001676c:	cb98                	sw	a4,16(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:137
        metal_clock_register_pre_rate_change_callback(
2001676e:	fe442783          	lw	a5,-28(s0)
20016772:	07b1                	addi	a5,a5,12
20016774:	85be                	mv	a1,a5
20016776:	fe842503          	lw	a0,-24(s0)
2001677a:	787000ef          	jal	ra,20017700 <metal_clock_register_pre_rate_change_callback>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:140
            clock, &(i2c->pre_rate_change_callback));

        i2c->post_rate_change_callback.callback = &post_rate_change_callback;
2001677e:	fe442783          	lw	a5,-28(s0)
20016782:	20016737          	lui	a4,0x20016
20016786:	62070713          	addi	a4,a4,1568 # 20016620 <post_rate_change_callback>
2001678a:	cf98                	sw	a4,24(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:141
        i2c->post_rate_change_callback.priv = i2c;
2001678c:	fe442783          	lw	a5,-28(s0)
20016790:	fe442703          	lw	a4,-28(s0)
20016794:	cfd8                	sw	a4,28(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:142
        metal_clock_register_post_rate_change_callback(
20016796:	fe442783          	lw	a5,-28(s0)
2001679a:	07e1                	addi	a5,a5,24
2001679c:	85be                	mv	a1,a5
2001679e:	fe842503          	lw	a0,-24(s0)
200167a2:	791000ef          	jal	ra,20017732 <metal_clock_register_post_rate_change_callback>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:146
            clock, &(i2c->post_rate_change_callback));

        /* Calculate prescaler value */
        long prescaler = METAL_SIFIVE_I2C_GET_PRESCALER(baud_rate);
200167a6:	fdc42683          	lw	a3,-36(s0)
200167aa:	fc842703          	lw	a4,-56(s0)
200167ae:	87ba                	mv	a5,a4
200167b0:	078a                	slli	a5,a5,0x2
200167b2:	97ba                	add	a5,a5,a4
200167b4:	02f6d7b3          	divu	a5,a3,a5
200167b8:	17fd                	addi	a5,a5,-1
200167ba:	fcf42c23          	sw	a5,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:148

        if ((prescaler > METAL_I2C_PRESCALE_MAX) || (prescaler < 0)) {
200167be:	fd842703          	lw	a4,-40(s0)
200167c2:	67c1                	lui	a5,0x10
200167c4:	08f75163          	bge	a4,a5,20016846 <__metal_driver_sifive_i2c0_set_baud_rate+0x148>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:148 (discriminator 1)
200167c8:	fd842783          	lw	a5,-40(s0)
200167cc:	0607cd63          	bltz	a5,20016846 <__metal_driver_sifive_i2c0_set_baud_rate+0x148>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:153
            /* Out of range value, return error */
            METAL_I2C_LOG("I2C Set baud failed.\n");
        } else {
            /* Set pre-scaler value */
            METAL_I2C_REGB(METAL_SIFIVE_I2C0_CONTROL) &= ~METAL_I2C_CONTROL_EN;
200167d0:	fe042783          	lw	a5,-32(s0)
200167d4:	07a1                	addi	a5,a5,8
200167d6:	0007c783          	lbu	a5,0(a5) # 10000 <__heap_size+0xf800>
200167da:	0ff7f793          	andi	a5,a5,255
200167de:	fe042703          	lw	a4,-32(s0)
200167e2:	0721                	addi	a4,a4,8
200167e4:	07f7f793          	andi	a5,a5,127
200167e8:	0ff7f793          	andi	a5,a5,255
200167ec:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:154
            METAL_I2C_REGB(METAL_SIFIVE_I2C0_PRESCALE_LOW) = prescaler & 0xFF;
200167f0:	fe042783          	lw	a5,-32(s0)
200167f4:	fd842703          	lw	a4,-40(s0)
200167f8:	0ff77713          	andi	a4,a4,255
200167fc:	00e78023          	sb	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:156
            METAL_I2C_REGB(METAL_SIFIVE_I2C0_PRESCALE_HIGH) =
                (prescaler >> 8) & 0xFF;
20016800:	fd842783          	lw	a5,-40(s0)
20016804:	4087d693          	srai	a3,a5,0x8
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:155
            METAL_I2C_REGB(METAL_SIFIVE_I2C0_PRESCALE_HIGH) =
20016808:	fe042783          	lw	a5,-32(s0)
2001680c:	0791                	addi	a5,a5,4
2001680e:	873e                	mv	a4,a5
20016810:	0ff6f793          	andi	a5,a3,255
20016814:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:157
            METAL_I2C_REGB(METAL_SIFIVE_I2C0_CONTROL) |= METAL_I2C_CONTROL_EN;
20016818:	fe042783          	lw	a5,-32(s0)
2001681c:	07a1                	addi	a5,a5,8
2001681e:	0007c783          	lbu	a5,0(a5)
20016822:	0ff7f793          	andi	a5,a5,255
20016826:	fe042703          	lw	a4,-32(s0)
2001682a:	0721                	addi	a4,a4,8
2001682c:	f807e793          	ori	a5,a5,-128
20016830:	0ff7f793          	andi	a5,a5,255
20016834:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:159

            i2c->baud_rate = baud_rate;
20016838:	fe442783          	lw	a5,-28(s0)
2001683c:	fc842703          	lw	a4,-56(s0)
20016840:	c798                	sw	a4,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:160
            ret = METAL_I2C_RET_OK;
20016842:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:166
        }
    } else {
        METAL_I2C_LOG("I2C Set baud failed.\n");
    }

    return ret;
20016846:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:167
}
2001684a:	853e                	mv	a0,a5
2001684c:	50f2                	lw	ra,60(sp)
2001684e:	5462                	lw	s0,56(sp)
20016850:	6121                	addi	sp,sp,64
20016852:	8082                	ret

20016854 <__metal_driver_sifive_i2c0_write_addr>:
__metal_driver_sifive_i2c0_write_addr():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:171

static int __metal_driver_sifive_i2c0_write_addr(unsigned long base,
                                                 unsigned int addr,
                                                 unsigned char rw_flag) {
20016854:	7179                	addi	sp,sp,-48
20016856:	d606                	sw	ra,44(sp)
20016858:	d422                	sw	s0,40(sp)
2001685a:	1800                	addi	s0,sp,48
2001685c:	fca42e23          	sw	a0,-36(s0)
20016860:	fcb42c23          	sw	a1,-40(s0)
20016864:	87b2                	mv	a5,a2
20016866:	fcf40ba3          	sb	a5,-41(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:173
    time_t timeout;
    int ret = METAL_I2C_RET_OK;
2001686a:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:175
    /* Reset timeout */
    METAL_I2C_TIMEOUT_RESET(timeout);
2001686e:	1ca010ef          	jal	ra,20017a38 <metal_time>
20016872:	86aa                	mv	a3,a0
20016874:	872e                	mv	a4,a1
20016876:	4585                	li	a1,1
20016878:	4601                	li	a2,0
2001687a:	00b687b3          	add	a5,a3,a1
2001687e:	853e                	mv	a0,a5
20016880:	00d53533          	sltu	a0,a0,a3
20016884:	00c70833          	add	a6,a4,a2
20016888:	01050733          	add	a4,a0,a6
2001688c:	883a                	mv	a6,a4
2001688e:	fef42023          	sw	a5,-32(s0)
20016892:	ff042223          	sw	a6,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:178

    /* Check if any transfer is in progress */
    METAL_I2C_REG_CHECK(
20016896:	a035                	j	200168c2 <__metal_driver_sifive_i2c0_write_addr+0x6e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:178 (discriminator 3)
20016898:	1a0010ef          	jal	ra,20017a38 <metal_time>
2001689c:	87aa                	mv	a5,a0
2001689e:	882e                	mv	a6,a1
200168a0:	fe442703          	lw	a4,-28(s0)
200168a4:	86c2                	mv	a3,a6
200168a6:	00d74c63          	blt	a4,a3,200168be <__metal_driver_sifive_i2c0_write_addr+0x6a>
200168aa:	fe442703          	lw	a4,-28(s0)
200168ae:	86c2                	mv	a3,a6
200168b0:	00d71963          	bne	a4,a3,200168c2 <__metal_driver_sifive_i2c0_write_addr+0x6e>
200168b4:	fe042703          	lw	a4,-32(s0)
200168b8:	00f76363          	bltu	a4,a5,200168be <__metal_driver_sifive_i2c0_write_addr+0x6a>
200168bc:	a019                	j	200168c2 <__metal_driver_sifive_i2c0_write_addr+0x6e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:178 (discriminator 1)
200168be:	57fd                	li	a5,-1
200168c0:	a8c9                	j	20016992 <__metal_driver_sifive_i2c0_write_addr+0x13e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:178 (discriminator 2)
200168c2:	fdc42783          	lw	a5,-36(s0)
200168c6:	07c1                	addi	a5,a5,16
200168c8:	0007c783          	lbu	a5,0(a5)
200168cc:	0ff7f793          	andi	a5,a5,255
200168d0:	8b89                	andi	a5,a5,2
200168d2:	f3f9                	bnez	a5,20016898 <__metal_driver_sifive_i2c0_write_addr+0x44>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:184
        (METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) & METAL_I2C_STATUS_TIP),
        timeout);

    /* Set transmit register to given address with read/write flag */
    METAL_I2C_REGB(METAL_SIFIVE_I2C0_TRANSMIT) =
        METAL_SIFIVE_I2C_INSERT_RW_BIT(addr, rw_flag);
200168d4:	fd842783          	lw	a5,-40(s0)
200168d8:	0ff7f793          	andi	a5,a5,255
200168dc:	0786                	slli	a5,a5,0x1
200168de:	0ff7f713          	andi	a4,a5,255
200168e2:	fd744783          	lbu	a5,-41(s0)
200168e6:	8b85                	andi	a5,a5,1
200168e8:	0ff7f793          	andi	a5,a5,255
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:183
    METAL_I2C_REGB(METAL_SIFIVE_I2C0_TRANSMIT) =
200168ec:	fdc42683          	lw	a3,-36(s0)
200168f0:	06b1                	addi	a3,a3,12
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:184
        METAL_SIFIVE_I2C_INSERT_RW_BIT(addr, rw_flag);
200168f2:	8fd9                	or	a5,a5,a4
200168f4:	0ff7f793          	andi	a5,a5,255
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:183
    METAL_I2C_REGB(METAL_SIFIVE_I2C0_TRANSMIT) =
200168f8:	00f68023          	sb	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:187

    /* Set start flag to trigger the address transfer */
    METAL_I2C_REGB(METAL_SIFIVE_I2C0_COMMAND) =
200168fc:	fdc42783          	lw	a5,-36(s0)
20016900:	07c1                	addi	a5,a5,16
20016902:	873e                	mv	a4,a5
20016904:	f9000793          	li	a5,-112
20016908:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:190
        METAL_I2C_CMD_WRITE | METAL_I2C_CMD_START;
    /* Reset timeout */
    METAL_I2C_TIMEOUT_RESET(timeout);
2001690c:	12c010ef          	jal	ra,20017a38 <metal_time>
20016910:	86aa                	mv	a3,a0
20016912:	872e                	mv	a4,a1
20016914:	4585                	li	a1,1
20016916:	4601                	li	a2,0
20016918:	00b687b3          	add	a5,a3,a1
2001691c:	853e                	mv	a0,a5
2001691e:	00d53533          	sltu	a0,a0,a3
20016922:	00c70833          	add	a6,a4,a2
20016926:	01050733          	add	a4,a0,a6
2001692a:	883a                	mv	a6,a4
2001692c:	fef42023          	sw	a5,-32(s0)
20016930:	ff042223          	sw	a6,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:193

    /* Check for transmit completion */
    METAL_I2C_REG_CHECK(
20016934:	a035                	j	20016960 <__metal_driver_sifive_i2c0_write_addr+0x10c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:193 (discriminator 3)
20016936:	102010ef          	jal	ra,20017a38 <metal_time>
2001693a:	87aa                	mv	a5,a0
2001693c:	882e                	mv	a6,a1
2001693e:	fe442703          	lw	a4,-28(s0)
20016942:	86c2                	mv	a3,a6
20016944:	00d74c63          	blt	a4,a3,2001695c <__metal_driver_sifive_i2c0_write_addr+0x108>
20016948:	fe442703          	lw	a4,-28(s0)
2001694c:	86c2                	mv	a3,a6
2001694e:	00d71963          	bne	a4,a3,20016960 <__metal_driver_sifive_i2c0_write_addr+0x10c>
20016952:	fe042703          	lw	a4,-32(s0)
20016956:	00f76363          	bltu	a4,a5,2001695c <__metal_driver_sifive_i2c0_write_addr+0x108>
2001695a:	a019                	j	20016960 <__metal_driver_sifive_i2c0_write_addr+0x10c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:193 (discriminator 1)
2001695c:	57fd                	li	a5,-1
2001695e:	a815                	j	20016992 <__metal_driver_sifive_i2c0_write_addr+0x13e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:193 (discriminator 2)
20016960:	fdc42783          	lw	a5,-36(s0)
20016964:	07c1                	addi	a5,a5,16
20016966:	0007c783          	lbu	a5,0(a5)
2001696a:	0ff7f793          	andi	a5,a5,255
2001696e:	8b89                	andi	a5,a5,2
20016970:	f3f9                	bnez	a5,20016936 <__metal_driver_sifive_i2c0_write_addr+0xe2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:198
        (METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) & METAL_I2C_STATUS_TIP),
        timeout);

    /* Check for ACK from slave */
    if ((METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) & METAL_I2C_STATUS_RXACK)) {
20016972:	fdc42783          	lw	a5,-36(s0)
20016976:	07c1                	addi	a5,a5,16
20016978:	0007c783          	lbu	a5,0(a5)
2001697c:	0ff7f793          	andi	a5,a5,255
20016980:	07e2                	slli	a5,a5,0x18
20016982:	87e1                	srai	a5,a5,0x18
20016984:	0007d563          	bgez	a5,2001698e <__metal_driver_sifive_i2c0_write_addr+0x13a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:201
        /* No ACK, return error */
        METAL_I2C_LOG("I2C RX ACK failed.\n");
        ret = METAL_I2C_RET_ERR;
20016988:	57fd                	li	a5,-1
2001698a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:204
    }

    return ret;
2001698e:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:205
}
20016992:	853e                	mv	a0,a5
20016994:	50b2                	lw	ra,44(sp)
20016996:	5422                	lw	s0,40(sp)
20016998:	6145                	addi	sp,sp,48
2001699a:	8082                	ret

2001699c <__metal_driver_sifive_i2c0_write>:
__metal_driver_sifive_i2c0_write():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:210

static int __metal_driver_sifive_i2c0_write(struct metal_i2c *i2c,
                                            unsigned int addr, unsigned int len,
                                            unsigned char buf[],
                                            metal_i2c_stop_bit_t stop_bit) {
2001699c:	715d                	addi	sp,sp,-80
2001699e:	c686                	sw	ra,76(sp)
200169a0:	c4a2                	sw	s0,72(sp)
200169a2:	0880                	addi	s0,sp,80
200169a4:	fca42623          	sw	a0,-52(s0)
200169a8:	fcb42423          	sw	a1,-56(s0)
200169ac:	fcc42223          	sw	a2,-60(s0)
200169b0:	fcd42023          	sw	a3,-64(s0)
200169b4:	fae42e23          	sw	a4,-68(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:214
    __metal_io_u8 command;
    time_t timeout;
    int ret;
    unsigned long base = __metal_driver_sifive_i2c0_control_base(i2c);
200169b8:	fcc42503          	lw	a0,-52(s0)
200169bc:	b5fff0ef          	jal	ra,2001651a <__metal_driver_sifive_i2c0_control_base>
200169c0:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:217
    unsigned int i;

    if ((i2c != NULL) &&
200169c4:	fcc42783          	lw	a5,-52(s0)
200169c8:	12078463          	beqz	a5,20016af0 <__metal_driver_sifive_i2c0_write+0x154>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:218 (discriminator 1)
        ((struct __metal_driver_sifive_i2c0 *)i2c)->init_done) {
200169cc:	fcc42783          	lw	a5,-52(s0)
200169d0:	43dc                	lw	a5,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:217 (discriminator 1)
    if ((i2c != NULL) &&
200169d2:	10078f63          	beqz	a5,20016af0 <__metal_driver_sifive_i2c0_write+0x154>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:223

        /* Send address over I2C bus, current driver supports only 7bit
         * addressing */
        ret =
            __metal_driver_sifive_i2c0_write_addr(base, addr, METAL_I2C_WRITE);
200169d6:	4601                	li	a2,0
200169d8:	fc842583          	lw	a1,-56(s0)
200169dc:	fe042503          	lw	a0,-32(s0)
200169e0:	e75ff0ef          	jal	ra,20016854 <__metal_driver_sifive_i2c0_write_addr>
200169e4:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:225

        if (ret != METAL_I2C_RET_OK) {
200169e8:	fe842783          	lw	a5,-24(s0)
200169ec:	10079563          	bnez	a5,20016af6 <__metal_driver_sifive_i2c0_write+0x15a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:230
            /* Write address failed */
            METAL_I2C_LOG("I2C Address Write failed.\n");
        } else {
            /* Set command flags */
            command = METAL_I2C_CMD_WRITE;
200169f0:	47c1                	li	a5,16
200169f2:	fef407a3          	sb	a5,-17(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:232

            for (i = 0; i < len; i++) {
200169f6:	fe042223          	sw	zero,-28(s0)
200169fa:	a0e5                	j	20016ae2 <__metal_driver_sifive_i2c0_write+0x146>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:234
                /* Copy into transmit register */
                METAL_I2C_REGB(METAL_SIFIVE_I2C0_TRANSMIT) = buf[i];
200169fc:	fc042703          	lw	a4,-64(s0)
20016a00:	fe442783          	lw	a5,-28(s0)
20016a04:	97ba                	add	a5,a5,a4
20016a06:	fe042703          	lw	a4,-32(s0)
20016a0a:	0731                	addi	a4,a4,12
20016a0c:	0007c783          	lbu	a5,0(a5)
20016a10:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:238

                /* for last byte transfer, check if stop condition is requested
                 */
                if (i == (len - 1)) {
20016a14:	fc442783          	lw	a5,-60(s0)
20016a18:	17fd                	addi	a5,a5,-1
20016a1a:	fe442703          	lw	a4,-28(s0)
20016a1e:	02f71263          	bne	a4,a5,20016a42 <__metal_driver_sifive_i2c0_write+0xa6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:239
                    command |= METAL_SIFIVE_I2C_INSERT_STOP(stop_bit);
20016a22:	fbc42783          	lw	a5,-68(s0)
20016a26:	0ff7f793          	andi	a5,a5,255
20016a2a:	079a                	slli	a5,a5,0x6
20016a2c:	0ff7f793          	andi	a5,a5,255
20016a30:	0407f793          	andi	a5,a5,64
20016a34:	0ff7f713          	andi	a4,a5,255
20016a38:	fef44783          	lbu	a5,-17(s0)
20016a3c:	8fd9                	or	a5,a5,a4
20016a3e:	fef407a3          	sb	a5,-17(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:242
                }
                /* Write command register */
                METAL_I2C_REGB(METAL_SIFIVE_I2C0_COMMAND) = command;
20016a42:	fe042783          	lw	a5,-32(s0)
20016a46:	07c1                	addi	a5,a5,16
20016a48:	873e                	mv	a4,a5
20016a4a:	fef44783          	lbu	a5,-17(s0)
20016a4e:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:244
                /* Reset timeout */
                METAL_I2C_TIMEOUT_RESET(timeout);
20016a52:	7e7000ef          	jal	ra,20017a38 <metal_time>
20016a56:	86aa                	mv	a3,a0
20016a58:	872e                	mv	a4,a1
20016a5a:	4585                	li	a1,1
20016a5c:	4601                	li	a2,0
20016a5e:	00b687b3          	add	a5,a3,a1
20016a62:	853e                	mv	a0,a5
20016a64:	00d53533          	sltu	a0,a0,a3
20016a68:	00c70833          	add	a6,a4,a2
20016a6c:	01050733          	add	a4,a0,a6
20016a70:	883a                	mv	a6,a4
20016a72:	fcf42c23          	sw	a5,-40(s0)
20016a76:	fd042e23          	sw	a6,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:247

                /* Check for transfer completion */
                METAL_I2C_REG_CHECK((METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) &
20016a7a:	a035                	j	20016aa6 <__metal_driver_sifive_i2c0_write+0x10a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:247 (discriminator 3)
20016a7c:	7bd000ef          	jal	ra,20017a38 <metal_time>
20016a80:	87aa                	mv	a5,a0
20016a82:	882e                	mv	a6,a1
20016a84:	fdc42703          	lw	a4,-36(s0)
20016a88:	86c2                	mv	a3,a6
20016a8a:	00d74c63          	blt	a4,a3,20016aa2 <__metal_driver_sifive_i2c0_write+0x106>
20016a8e:	fdc42703          	lw	a4,-36(s0)
20016a92:	86c2                	mv	a3,a6
20016a94:	00d71963          	bne	a4,a3,20016aa6 <__metal_driver_sifive_i2c0_write+0x10a>
20016a98:	fd842703          	lw	a4,-40(s0)
20016a9c:	00f76363          	bltu	a4,a5,20016aa2 <__metal_driver_sifive_i2c0_write+0x106>
20016aa0:	a019                	j	20016aa6 <__metal_driver_sifive_i2c0_write+0x10a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:247 (discriminator 1)
20016aa2:	57fd                	li	a5,-1
20016aa4:	a899                	j	20016afa <__metal_driver_sifive_i2c0_write+0x15e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:247 (discriminator 2)
20016aa6:	fe042783          	lw	a5,-32(s0)
20016aaa:	07c1                	addi	a5,a5,16
20016aac:	0007c783          	lbu	a5,0(a5)
20016ab0:	0ff7f793          	andi	a5,a5,255
20016ab4:	8b89                	andi	a5,a5,2
20016ab6:	f3f9                	bnez	a5,20016a7c <__metal_driver_sifive_i2c0_write+0xe0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:252
                                     METAL_I2C_STATUS_TIP),
                                    timeout);

                /* Check for ACK from slave */
                if ((METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) &
20016ab8:	fe042783          	lw	a5,-32(s0)
20016abc:	07c1                	addi	a5,a5,16
20016abe:	0007c783          	lbu	a5,0(a5)
20016ac2:	0ff7f793          	andi	a5,a5,255
20016ac6:	07e2                	slli	a5,a5,0x18
20016ac8:	87e1                	srai	a5,a5,0x18
20016aca:	0007d763          	bgez	a5,20016ad8 <__metal_driver_sifive_i2c0_write+0x13c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:256
                     METAL_I2C_STATUS_RXACK)) {
                    /* No ACK, return error */
                    METAL_I2C_LOG("I2C RX ACK failed.\n");
                    ret = METAL_I2C_RET_ERR;
20016ace:	57fd                	li	a5,-1
20016ad0:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:257
                    break;
20016ad4:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:225
        if (ret != METAL_I2C_RET_OK) {
20016ad6:	a005                	j	20016af6 <__metal_driver_sifive_i2c0_write+0x15a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:232 (discriminator 2)
            for (i = 0; i < len; i++) {
20016ad8:	fe442783          	lw	a5,-28(s0)
20016adc:	0785                	addi	a5,a5,1
20016ade:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:232 (discriminator 1)
20016ae2:	fe442703          	lw	a4,-28(s0)
20016ae6:	fc442783          	lw	a5,-60(s0)
20016aea:	f0f769e3          	bltu	a4,a5,200169fc <__metal_driver_sifive_i2c0_write+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:225
        if (ret != METAL_I2C_RET_OK) {
20016aee:	a021                	j	20016af6 <__metal_driver_sifive_i2c0_write+0x15a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:265
        }

    } else {
        /* I2C device not initialized, return error */
        METAL_I2C_LOG("I2C device not initialized.\n");
        ret = METAL_I2C_RET_ERR;
20016af0:	57fd                	li	a5,-1
20016af2:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:268
    }

    return ret;
20016af6:	fe842783          	lw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:269
}
20016afa:	853e                	mv	a0,a5
20016afc:	40b6                	lw	ra,76(sp)
20016afe:	4426                	lw	s0,72(sp)
20016b00:	6161                	addi	sp,sp,80
20016b02:	8082                	ret

20016b04 <__metal_driver_sifive_i2c0_read>:
__metal_driver_sifive_i2c0_read():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:273
static int __metal_driver_sifive_i2c0_read(struct metal_i2c *i2c,
                                           unsigned int addr, unsigned int len,
                                           unsigned char buf[],
                                           metal_i2c_stop_bit_t stop_bit) {
20016b04:	715d                	addi	sp,sp,-80
20016b06:	c686                	sw	ra,76(sp)
20016b08:	c4a2                	sw	s0,72(sp)
20016b0a:	0880                	addi	s0,sp,80
20016b0c:	fca42623          	sw	a0,-52(s0)
20016b10:	fcb42423          	sw	a1,-56(s0)
20016b14:	fcc42223          	sw	a2,-60(s0)
20016b18:	fcd42023          	sw	a3,-64(s0)
20016b1c:	fae42e23          	sw	a4,-68(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:278
    int ret;
    __metal_io_u8 command;
    time_t timeout;
    unsigned int i;
    unsigned long base = __metal_driver_sifive_i2c0_control_base(i2c);
20016b20:	fcc42503          	lw	a0,-52(s0)
20016b24:	9f7ff0ef          	jal	ra,2001651a <__metal_driver_sifive_i2c0_control_base>
20016b28:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:280

    if ((i2c != NULL) &&
20016b2c:	fcc42783          	lw	a5,-52(s0)
20016b30:	10078c63          	beqz	a5,20016c48 <__metal_driver_sifive_i2c0_read+0x144>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:281 (discriminator 1)
        ((struct __metal_driver_sifive_i2c0 *)i2c)->init_done) {
20016b34:	fcc42783          	lw	a5,-52(s0)
20016b38:	43dc                	lw	a5,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:280 (discriminator 1)
    if ((i2c != NULL) &&
20016b3a:	10078763          	beqz	a5,20016c48 <__metal_driver_sifive_i2c0_read+0x144>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:285

        /* Send address over I2C bus, current driver supports only 7bit
         * addressing */
        ret = __metal_driver_sifive_i2c0_write_addr(base, addr, METAL_I2C_READ);
20016b3e:	4605                	li	a2,1
20016b40:	fc842583          	lw	a1,-56(s0)
20016b44:	fe042503          	lw	a0,-32(s0)
20016b48:	d0dff0ef          	jal	ra,20016854 <__metal_driver_sifive_i2c0_write_addr>
20016b4c:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:287

        if (ret != METAL_I2C_RET_OK) {
20016b50:	fec42783          	lw	a5,-20(s0)
20016b54:	0e079d63          	bnez	a5,20016c4e <__metal_driver_sifive_i2c0_read+0x14a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:292
            /* Write address failed */
            METAL_I2C_LOG("I2C Read failed.\n");
        } else {
            /* Set command flags */
            command = METAL_I2C_CMD_READ;
20016b58:	02000793          	li	a5,32
20016b5c:	fef405a3          	sb	a5,-21(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:294

            for (i = 0; i < len; i++) {
20016b60:	fe042223          	sw	zero,-28(s0)
20016b64:	a8d9                	j	20016c3a <__metal_driver_sifive_i2c0_read+0x136>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:296
                /* check for last transfer */
                if (i == (len - 1)) {
20016b66:	fc442783          	lw	a5,-60(s0)
20016b6a:	17fd                	addi	a5,a5,-1
20016b6c:	fe442703          	lw	a4,-28(s0)
20016b70:	02f71663          	bne	a4,a5,20016b9c <__metal_driver_sifive_i2c0_read+0x98>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:300
                    /* Set NACK to end read, if requested generate STOP
                     * condition */
                    command |= (METAL_I2C_CMD_ACK |
                                METAL_SIFIVE_I2C_INSERT_STOP(stop_bit));
20016b74:	fbc42783          	lw	a5,-68(s0)
20016b78:	0ff7f793          	andi	a5,a5,255
20016b7c:	079a                	slli	a5,a5,0x6
20016b7e:	0ff7f793          	andi	a5,a5,255
20016b82:	0407f793          	andi	a5,a5,64
20016b86:	0ff7f713          	andi	a4,a5,255
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:299
                    command |= (METAL_I2C_CMD_ACK |
20016b8a:	feb44783          	lbu	a5,-21(s0)
20016b8e:	8fd9                	or	a5,a5,a4
20016b90:	0ff7f793          	andi	a5,a5,255
20016b94:	0087e793          	ori	a5,a5,8
20016b98:	fef405a3          	sb	a5,-21(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:303
                }
                /* Write command register */
                METAL_I2C_REGB(METAL_SIFIVE_I2C0_COMMAND) = command;
20016b9c:	fe042783          	lw	a5,-32(s0)
20016ba0:	07c1                	addi	a5,a5,16
20016ba2:	873e                	mv	a4,a5
20016ba4:	feb44783          	lbu	a5,-21(s0)
20016ba8:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:305
                /* Reset timeout */
                METAL_I2C_TIMEOUT_RESET(timeout);
20016bac:	68d000ef          	jal	ra,20017a38 <metal_time>
20016bb0:	86aa                	mv	a3,a0
20016bb2:	872e                	mv	a4,a1
20016bb4:	4585                	li	a1,1
20016bb6:	4601                	li	a2,0
20016bb8:	00b687b3          	add	a5,a3,a1
20016bbc:	853e                	mv	a0,a5
20016bbe:	00d53533          	sltu	a0,a0,a3
20016bc2:	00c70833          	add	a6,a4,a2
20016bc6:	01050733          	add	a4,a0,a6
20016bca:	883a                	mv	a6,a4
20016bcc:	fcf42c23          	sw	a5,-40(s0)
20016bd0:	fd042e23          	sw	a6,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:308

                /* Wait for the read to complete */
                METAL_I2C_REG_CHECK((METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) &
20016bd4:	a035                	j	20016c00 <__metal_driver_sifive_i2c0_read+0xfc>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:308 (discriminator 3)
20016bd6:	663000ef          	jal	ra,20017a38 <metal_time>
20016bda:	87aa                	mv	a5,a0
20016bdc:	882e                	mv	a6,a1
20016bde:	fdc42703          	lw	a4,-36(s0)
20016be2:	86c2                	mv	a3,a6
20016be4:	00d74c63          	blt	a4,a3,20016bfc <__metal_driver_sifive_i2c0_read+0xf8>
20016be8:	fdc42703          	lw	a4,-36(s0)
20016bec:	86c2                	mv	a3,a6
20016bee:	00d71963          	bne	a4,a3,20016c00 <__metal_driver_sifive_i2c0_read+0xfc>
20016bf2:	fd842703          	lw	a4,-40(s0)
20016bf6:	00f76363          	bltu	a4,a5,20016bfc <__metal_driver_sifive_i2c0_read+0xf8>
20016bfa:	a019                	j	20016c00 <__metal_driver_sifive_i2c0_read+0xfc>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:308 (discriminator 1)
20016bfc:	57fd                	li	a5,-1
20016bfe:	a891                	j	20016c52 <__metal_driver_sifive_i2c0_read+0x14e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:308 (discriminator 2)
20016c00:	fe042783          	lw	a5,-32(s0)
20016c04:	07c1                	addi	a5,a5,16
20016c06:	0007c783          	lbu	a5,0(a5)
20016c0a:	0ff7f793          	andi	a5,a5,255
20016c0e:	8b89                	andi	a5,a5,2
20016c10:	f3f9                	bnez	a5,20016bd6 <__metal_driver_sifive_i2c0_read+0xd2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:312 (discriminator 2)
                                     METAL_I2C_STATUS_TIP),
                                    timeout);
                /* Store the received byte */
                buf[i] = METAL_I2C_REGB(METAL_SIFIVE_I2C0_TRANSMIT);
20016c12:	fe042783          	lw	a5,-32(s0)
20016c16:	07b1                	addi	a5,a5,12
20016c18:	86be                	mv	a3,a5
20016c1a:	fc042703          	lw	a4,-64(s0)
20016c1e:	fe442783          	lw	a5,-28(s0)
20016c22:	97ba                	add	a5,a5,a4
20016c24:	0006c703          	lbu	a4,0(a3)
20016c28:	0ff77713          	andi	a4,a4,255
20016c2c:	00e78023          	sb	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:294 (discriminator 2)
            for (i = 0; i < len; i++) {
20016c30:	fe442783          	lw	a5,-28(s0)
20016c34:	0785                	addi	a5,a5,1
20016c36:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:294 (discriminator 1)
20016c3a:	fe442703          	lw	a4,-28(s0)
20016c3e:	fc442783          	lw	a5,-60(s0)
20016c42:	f2f762e3          	bltu	a4,a5,20016b66 <__metal_driver_sifive_i2c0_read+0x62>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:287
        if (ret != METAL_I2C_RET_OK) {
20016c46:	a021                	j	20016c4e <__metal_driver_sifive_i2c0_read+0x14a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:318
            }
        }
    } else {
        /* I2C device not initialized, return error */
        METAL_I2C_LOG("I2C device not initialized.\n");
        ret = METAL_I2C_RET_ERR;
20016c48:	57fd                	li	a5,-1
20016c4a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:321
    }

    return ret;
20016c4e:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:322
}
20016c52:	853e                	mv	a0,a5
20016c54:	40b6                	lw	ra,76(sp)
20016c56:	4426                	lw	s0,72(sp)
20016c58:	6161                	addi	sp,sp,80
20016c5a:	8082                	ret

20016c5c <__metal_driver_sifive_i2c0_transfer>:
__metal_driver_sifive_i2c0_transfer():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:327

static int
__metal_driver_sifive_i2c0_transfer(struct metal_i2c *i2c, unsigned int addr,
                                    unsigned char txbuf[], unsigned int txlen,
                                    unsigned char rxbuf[], unsigned int rxlen) {
20016c5c:	715d                	addi	sp,sp,-80
20016c5e:	c686                	sw	ra,76(sp)
20016c60:	c4a2                	sw	s0,72(sp)
20016c62:	0880                	addi	s0,sp,80
20016c64:	fca42623          	sw	a0,-52(s0)
20016c68:	fcb42423          	sw	a1,-56(s0)
20016c6c:	fcc42223          	sw	a2,-60(s0)
20016c70:	fcd42023          	sw	a3,-64(s0)
20016c74:	fae42e23          	sw	a4,-68(s0)
20016c78:	faf42c23          	sw	a5,-72(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:332
    __metal_io_u8 command;
    time_t timeout;
    int ret;
    unsigned int i;
    unsigned long base = __metal_driver_sifive_i2c0_control_base(i2c);
20016c7c:	fcc42503          	lw	a0,-52(s0)
20016c80:	89bff0ef          	jal	ra,2001651a <__metal_driver_sifive_i2c0_control_base>
20016c84:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:334

    if ((i2c != NULL) &&
20016c88:	fcc42783          	lw	a5,-52(s0)
20016c8c:	20078e63          	beqz	a5,20016ea8 <__metal_driver_sifive_i2c0_transfer+0x24c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:335 (discriminator 1)
        ((struct __metal_driver_sifive_i2c0 *)i2c)->init_done) {
20016c90:	fcc42783          	lw	a5,-52(s0)
20016c94:	43dc                	lw	a5,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:334 (discriminator 1)
    if ((i2c != NULL) &&
20016c96:	20078963          	beqz	a5,20016ea8 <__metal_driver_sifive_i2c0_transfer+0x24c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:336
        if (txlen) {
20016c9a:	fc042783          	lw	a5,-64(s0)
20016c9e:	10078863          	beqz	a5,20016dae <__metal_driver_sifive_i2c0_transfer+0x152>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:338
            /* Set command flags */
            command = METAL_I2C_CMD_WRITE;
20016ca2:	47c1                	li	a5,16
20016ca4:	fef407a3          	sb	a5,-17(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:341
            /* Send address over I2C bus, current driver supports only 7bit
             * addressing */
            ret = __metal_driver_sifive_i2c0_write_addr(base, addr,
20016ca8:	4601                	li	a2,0
20016caa:	fc842583          	lw	a1,-56(s0)
20016cae:	fe042503          	lw	a0,-32(s0)
20016cb2:	ba3ff0ef          	jal	ra,20016854 <__metal_driver_sifive_i2c0_write_addr>
20016cb6:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:344
                                                        METAL_I2C_WRITE);

            if (ret != METAL_I2C_RET_OK) {
20016cba:	fe842783          	lw	a5,-24(s0)
20016cbe:	c781                	beqz	a5,20016cc6 <__metal_driver_sifive_i2c0_transfer+0x6a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:347
                /* Write address failed */
                METAL_I2C_LOG("I2C Write failed.\n");
                return ret;
20016cc0:	fe842783          	lw	a5,-24(s0)
20016cc4:	a2fd                	j	20016eb2 <__metal_driver_sifive_i2c0_transfer+0x256>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:349
            }
            for (i = 0; i < txlen; i++) {
20016cc6:	fe042223          	sw	zero,-28(s0)
20016cca:	a8e1                	j	20016da2 <__metal_driver_sifive_i2c0_transfer+0x146>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:351
                /* Copy into transmit register */
                METAL_I2C_REGB(METAL_SIFIVE_I2C0_TRANSMIT) = txbuf[i];
20016ccc:	fc442703          	lw	a4,-60(s0)
20016cd0:	fe442783          	lw	a5,-28(s0)
20016cd4:	97ba                	add	a5,a5,a4
20016cd6:	fe042703          	lw	a4,-32(s0)
20016cda:	0731                	addi	a4,a4,12
20016cdc:	0007c783          	lbu	a5,0(a5)
20016ce0:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:353

                if (i == (txlen - 1) && (rxlen == 0)) {
20016ce4:	fc042783          	lw	a5,-64(s0)
20016ce8:	17fd                	addi	a5,a5,-1
20016cea:	fe442703          	lw	a4,-28(s0)
20016cee:	00f71b63          	bne	a4,a5,20016d04 <__metal_driver_sifive_i2c0_transfer+0xa8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:353 (discriminator 1)
20016cf2:	fb842783          	lw	a5,-72(s0)
20016cf6:	e799                	bnez	a5,20016d04 <__metal_driver_sifive_i2c0_transfer+0xa8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:355
                    /* Insert stop condition to end transfer */
                    command |= METAL_I2C_CMD_STOP;
20016cf8:	fef44783          	lbu	a5,-17(s0)
20016cfc:	0407e793          	ori	a5,a5,64
20016d00:	fef407a3          	sb	a5,-17(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:358
                }
                /* Write command register */
                METAL_I2C_REGB(METAL_SIFIVE_I2C0_COMMAND) = command;
20016d04:	fe042783          	lw	a5,-32(s0)
20016d08:	07c1                	addi	a5,a5,16
20016d0a:	873e                	mv	a4,a5
20016d0c:	fef44783          	lbu	a5,-17(s0)
20016d10:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:360
                /* Reset timeout */
                METAL_I2C_TIMEOUT_RESET(timeout);
20016d14:	525000ef          	jal	ra,20017a38 <metal_time>
20016d18:	86aa                	mv	a3,a0
20016d1a:	872e                	mv	a4,a1
20016d1c:	4585                	li	a1,1
20016d1e:	4601                	li	a2,0
20016d20:	00b687b3          	add	a5,a3,a1
20016d24:	853e                	mv	a0,a5
20016d26:	00d53533          	sltu	a0,a0,a3
20016d2a:	00c70833          	add	a6,a4,a2
20016d2e:	01050733          	add	a4,a0,a6
20016d32:	883a                	mv	a6,a4
20016d34:	fcf42c23          	sw	a5,-40(s0)
20016d38:	fd042e23          	sw	a6,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:363

                /* Check for transfer completion. */
                METAL_I2C_REG_CHECK((METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) &
20016d3c:	a035                	j	20016d68 <__metal_driver_sifive_i2c0_transfer+0x10c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:363 (discriminator 3)
20016d3e:	4fb000ef          	jal	ra,20017a38 <metal_time>
20016d42:	87aa                	mv	a5,a0
20016d44:	882e                	mv	a6,a1
20016d46:	fdc42703          	lw	a4,-36(s0)
20016d4a:	86c2                	mv	a3,a6
20016d4c:	00d74c63          	blt	a4,a3,20016d64 <__metal_driver_sifive_i2c0_transfer+0x108>
20016d50:	fdc42703          	lw	a4,-36(s0)
20016d54:	86c2                	mv	a3,a6
20016d56:	00d71963          	bne	a4,a3,20016d68 <__metal_driver_sifive_i2c0_transfer+0x10c>
20016d5a:	fd842703          	lw	a4,-40(s0)
20016d5e:	00f76363          	bltu	a4,a5,20016d64 <__metal_driver_sifive_i2c0_transfer+0x108>
20016d62:	a019                	j	20016d68 <__metal_driver_sifive_i2c0_transfer+0x10c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:363 (discriminator 1)
20016d64:	57fd                	li	a5,-1
20016d66:	a2b1                	j	20016eb2 <__metal_driver_sifive_i2c0_transfer+0x256>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:363 (discriminator 2)
20016d68:	fe042783          	lw	a5,-32(s0)
20016d6c:	07c1                	addi	a5,a5,16
20016d6e:	0007c783          	lbu	a5,0(a5)
20016d72:	0ff7f793          	andi	a5,a5,255
20016d76:	8b89                	andi	a5,a5,2
20016d78:	f3f9                	bnez	a5,20016d3e <__metal_driver_sifive_i2c0_transfer+0xe2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:368
                                     METAL_I2C_STATUS_TIP),
                                    timeout);

                /* Check for ACK from slave. */
                if ((METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) &
20016d7a:	fe042783          	lw	a5,-32(s0)
20016d7e:	07c1                	addi	a5,a5,16
20016d80:	0007c783          	lbu	a5,0(a5)
20016d84:	0ff7f793          	andi	a5,a5,255
20016d88:	07e2                	slli	a5,a5,0x18
20016d8a:	87e1                	srai	a5,a5,0x18
20016d8c:	0007d663          	bgez	a5,20016d98 <__metal_driver_sifive_i2c0_transfer+0x13c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:372
                     METAL_I2C_STATUS_RXACK)) {
                    /* No ACK, return error */
                    METAL_I2C_LOG("I2C RX ACK failed.\n");
                    ret = METAL_I2C_RET_ERR;
20016d90:	57fd                	li	a5,-1
20016d92:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:373
                    break;
20016d96:	a821                	j	20016dae <__metal_driver_sifive_i2c0_transfer+0x152>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:349 (discriminator 2)
            for (i = 0; i < txlen; i++) {
20016d98:	fe442783          	lw	a5,-28(s0)
20016d9c:	0785                	addi	a5,a5,1
20016d9e:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:349 (discriminator 1)
20016da2:	fe442703          	lw	a4,-28(s0)
20016da6:	fc042783          	lw	a5,-64(s0)
20016daa:	f2f761e3          	bltu	a4,a5,20016ccc <__metal_driver_sifive_i2c0_transfer+0x70>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:377
                }
            }
        }
        if (rxlen) {
20016dae:	fb842783          	lw	a5,-72(s0)
20016db2:	0e078e63          	beqz	a5,20016eae <__metal_driver_sifive_i2c0_transfer+0x252>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:378
            command = METAL_I2C_CMD_READ; /* Set command flags */
20016db6:	02000793          	li	a5,32
20016dba:	fef407a3          	sb	a5,-17(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:381
            /* Send address over I2C bus, current driver supports only 7bit
             * addressing */
            ret = __metal_driver_sifive_i2c0_write_addr(base, addr,
20016dbe:	4605                	li	a2,1
20016dc0:	fc842583          	lw	a1,-56(s0)
20016dc4:	fe042503          	lw	a0,-32(s0)
20016dc8:	a8dff0ef          	jal	ra,20016854 <__metal_driver_sifive_i2c0_write_addr>
20016dcc:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:384
                                                        METAL_I2C_READ);

            if (ret != METAL_I2C_RET_OK) {
20016dd0:	fe842783          	lw	a5,-24(s0)
20016dd4:	c781                	beqz	a5,20016ddc <__metal_driver_sifive_i2c0_transfer+0x180>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:387
                /* Return error */
                METAL_I2C_LOG("I2C Read failed.\n");
                return ret;
20016dd6:	fe842783          	lw	a5,-24(s0)
20016dda:	a8e1                	j	20016eb2 <__metal_driver_sifive_i2c0_transfer+0x256>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:389
            }
            for (i = 0; i < rxlen; i++) {
20016ddc:	fe042223          	sw	zero,-28(s0)
20016de0:	a86d                	j	20016e9a <__metal_driver_sifive_i2c0_transfer+0x23e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:391
                /* check for last transfer */
                if (i == (rxlen - 1)) {
20016de2:	fb842783          	lw	a5,-72(s0)
20016de6:	17fd                	addi	a5,a5,-1
20016de8:	fe442703          	lw	a4,-28(s0)
20016dec:	00f71863          	bne	a4,a5,20016dfc <__metal_driver_sifive_i2c0_transfer+0x1a0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:393
                    /* Set NACK to end read, generate STOP condition */
                    command |= (METAL_I2C_CMD_ACK | METAL_I2C_CMD_STOP);
20016df0:	fef44783          	lbu	a5,-17(s0)
20016df4:	0487e793          	ori	a5,a5,72
20016df8:	fef407a3          	sb	a5,-17(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:396
                }
                /* Write command register */
                METAL_I2C_REGB(METAL_SIFIVE_I2C0_COMMAND) = command;
20016dfc:	fe042783          	lw	a5,-32(s0)
20016e00:	07c1                	addi	a5,a5,16
20016e02:	873e                	mv	a4,a5
20016e04:	fef44783          	lbu	a5,-17(s0)
20016e08:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:398
                /* Reset timeout */
                METAL_I2C_TIMEOUT_RESET(timeout);
20016e0c:	42d000ef          	jal	ra,20017a38 <metal_time>
20016e10:	86aa                	mv	a3,a0
20016e12:	872e                	mv	a4,a1
20016e14:	4585                	li	a1,1
20016e16:	4601                	li	a2,0
20016e18:	00b687b3          	add	a5,a3,a1
20016e1c:	853e                	mv	a0,a5
20016e1e:	00d53533          	sltu	a0,a0,a3
20016e22:	00c70833          	add	a6,a4,a2
20016e26:	01050733          	add	a4,a0,a6
20016e2a:	883a                	mv	a6,a4
20016e2c:	fcf42c23          	sw	a5,-40(s0)
20016e30:	fd042e23          	sw	a6,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:401

                /* Wait for the read to complete */
                METAL_I2C_REG_CHECK((METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) &
20016e34:	a035                	j	20016e60 <__metal_driver_sifive_i2c0_transfer+0x204>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:401 (discriminator 3)
20016e36:	403000ef          	jal	ra,20017a38 <metal_time>
20016e3a:	87aa                	mv	a5,a0
20016e3c:	882e                	mv	a6,a1
20016e3e:	fdc42703          	lw	a4,-36(s0)
20016e42:	86c2                	mv	a3,a6
20016e44:	00d74c63          	blt	a4,a3,20016e5c <__metal_driver_sifive_i2c0_transfer+0x200>
20016e48:	fdc42703          	lw	a4,-36(s0)
20016e4c:	86c2                	mv	a3,a6
20016e4e:	00d71963          	bne	a4,a3,20016e60 <__metal_driver_sifive_i2c0_transfer+0x204>
20016e52:	fd842703          	lw	a4,-40(s0)
20016e56:	00f76363          	bltu	a4,a5,20016e5c <__metal_driver_sifive_i2c0_transfer+0x200>
20016e5a:	a019                	j	20016e60 <__metal_driver_sifive_i2c0_transfer+0x204>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:401 (discriminator 1)
20016e5c:	57fd                	li	a5,-1
20016e5e:	a891                	j	20016eb2 <__metal_driver_sifive_i2c0_transfer+0x256>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:401 (discriminator 2)
20016e60:	fe042783          	lw	a5,-32(s0)
20016e64:	07c1                	addi	a5,a5,16
20016e66:	0007c783          	lbu	a5,0(a5)
20016e6a:	0ff7f793          	andi	a5,a5,255
20016e6e:	8b89                	andi	a5,a5,2
20016e70:	f3f9                	bnez	a5,20016e36 <__metal_driver_sifive_i2c0_transfer+0x1da>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:405 (discriminator 2)
                                     METAL_I2C_STATUS_TIP),
                                    timeout);
                /* Store the received byte */
                rxbuf[i] = METAL_I2C_REGB(METAL_SIFIVE_I2C0_TRANSMIT);
20016e72:	fe042783          	lw	a5,-32(s0)
20016e76:	07b1                	addi	a5,a5,12
20016e78:	86be                	mv	a3,a5
20016e7a:	fbc42703          	lw	a4,-68(s0)
20016e7e:	fe442783          	lw	a5,-28(s0)
20016e82:	97ba                	add	a5,a5,a4
20016e84:	0006c703          	lbu	a4,0(a3)
20016e88:	0ff77713          	andi	a4,a4,255
20016e8c:	00e78023          	sb	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:389 (discriminator 2)
            for (i = 0; i < rxlen; i++) {
20016e90:	fe442783          	lw	a5,-28(s0)
20016e94:	0785                	addi	a5,a5,1
20016e96:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:389 (discriminator 1)
20016e9a:	fe442703          	lw	a4,-28(s0)
20016e9e:	fb842783          	lw	a5,-72(s0)
20016ea2:	f4f760e3          	bltu	a4,a5,20016de2 <__metal_driver_sifive_i2c0_transfer+0x186>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:377
        if (rxlen) {
20016ea6:	a021                	j	20016eae <__metal_driver_sifive_i2c0_transfer+0x252>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:411
            }
        }
    } else {
        /* I2C device not initialized, return error */
        METAL_I2C_LOG("I2C device not initialized.\n");
        ret = METAL_I2C_RET_ERR;
20016ea8:	57fd                	li	a5,-1
20016eaa:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:414
    }

    return ret;
20016eae:	fe842783          	lw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:415
}
20016eb2:	853e                	mv	a0,a5
20016eb4:	40b6                	lw	ra,76(sp)
20016eb6:	4426                	lw	s0,72(sp)
20016eb8:	6161                	addi	sp,sp,80
20016eba:	8082                	ret

20016ebc <__metal_driver_sifive_uart0_control_base>:
__metal_driver_sifive_uart0_control_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1066
{
20016ebc:	1101                	addi	sp,sp,-32
20016ebe:	ce22                	sw	s0,28(sp)
20016ec0:	1000                	addi	s0,sp,32
20016ec2:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1067
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20016ec6:	fec42703          	lw	a4,-20(s0)
20016eca:	800017b7          	lui	a5,0x80001
20016ece:	a5c78793          	addi	a5,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
20016ed2:	00f71563          	bne	a4,a5,20016edc <__metal_driver_sifive_uart0_control_base+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1068
		return METAL_SIFIVE_UART0_10013000_BASE_ADDRESS;
20016ed6:	100137b7          	lui	a5,0x10013
20016eda:	a829                	j	20016ef4 <__metal_driver_sifive_uart0_control_base+0x38>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1070
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20016edc:	fec42703          	lw	a4,-20(s0)
20016ee0:	800017b7          	lui	a5,0x80001
20016ee4:	a7c78793          	addi	a5,a5,-1412 # 80000a7c <metal_segment_heap_target_end+0xfffff2bc>
20016ee8:	00f71563          	bne	a4,a5,20016ef2 <__metal_driver_sifive_uart0_control_base+0x36>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1071
		return METAL_SIFIVE_UART0_10023000_BASE_ADDRESS;
20016eec:	100237b7          	lui	a5,0x10023
20016ef0:	a011                	j	20016ef4 <__metal_driver_sifive_uart0_control_base+0x38>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1074
		return 0;
20016ef2:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1076
}
20016ef4:	853e                	mv	a0,a5
20016ef6:	4472                	lw	s0,28(sp)
20016ef8:	6105                	addi	sp,sp,32
20016efa:	8082                	ret

20016efc <__metal_driver_sifive_uart0_interrupt_parent>:
__metal_driver_sifive_uart0_interrupt_parent():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1105
{
20016efc:	1101                	addi	sp,sp,-32
20016efe:	ce22                	sw	s0,28(sp)
20016f00:	1000                	addi	s0,sp,32
20016f02:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1106
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20016f06:	fec42703          	lw	a4,-20(s0)
20016f0a:	800017b7          	lui	a5,0x80001
20016f0e:	a5c78793          	addi	a5,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
20016f12:	00f71763          	bne	a4,a5,20016f20 <__metal_driver_sifive_uart0_interrupt_parent+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1107
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20016f16:	800007b7          	lui	a5,0x80000
20016f1a:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffeca0>
20016f1e:	a839                	j	20016f3c <__metal_driver_sifive_uart0_interrupt_parent+0x40>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1109
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20016f20:	fec42703          	lw	a4,-20(s0)
20016f24:	800017b7          	lui	a5,0x80001
20016f28:	a7c78793          	addi	a5,a5,-1412 # 80000a7c <metal_segment_heap_target_end+0xfffff2bc>
20016f2c:	00f71763          	bne	a4,a5,20016f3a <__metal_driver_sifive_uart0_interrupt_parent+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1110
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20016f30:	800007b7          	lui	a5,0x80000
20016f34:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffeca0>
20016f38:	a011                	j	20016f3c <__metal_driver_sifive_uart0_interrupt_parent+0x40>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1113
		return 0;
20016f3a:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1115
}
20016f3c:	853e                	mv	a0,a5
20016f3e:	4472                	lw	s0,28(sp)
20016f40:	6105                	addi	sp,sp,32
20016f42:	8082                	ret

20016f44 <__metal_driver_sifive_uart0_interrupt_line>:
__metal_driver_sifive_uart0_interrupt_line():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1118
{
20016f44:	1101                	addi	sp,sp,-32
20016f46:	ce22                	sw	s0,28(sp)
20016f48:	1000                	addi	s0,sp,32
20016f4a:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1119
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20016f4e:	fec42703          	lw	a4,-20(s0)
20016f52:	800017b7          	lui	a5,0x80001
20016f56:	a5c78793          	addi	a5,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
20016f5a:	00f71463          	bne	a4,a5,20016f62 <__metal_driver_sifive_uart0_interrupt_line+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1120
		return 3;
20016f5e:	478d                	li	a5,3
20016f60:	a821                	j	20016f78 <__metal_driver_sifive_uart0_interrupt_line+0x34>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1122
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20016f62:	fec42703          	lw	a4,-20(s0)
20016f66:	800017b7          	lui	a5,0x80001
20016f6a:	a7c78793          	addi	a5,a5,-1412 # 80000a7c <metal_segment_heap_target_end+0xfffff2bc>
20016f6e:	00f71463          	bne	a4,a5,20016f76 <__metal_driver_sifive_uart0_interrupt_line+0x32>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1123
		return 4;
20016f72:	4791                	li	a5,4
20016f74:	a011                	j	20016f78 <__metal_driver_sifive_uart0_interrupt_line+0x34>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1126
		return 0;
20016f76:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1128
}
20016f78:	853e                	mv	a0,a5
20016f7a:	4472                	lw	s0,28(sp)
20016f7c:	6105                	addi	sp,sp,32
20016f7e:	8082                	ret

20016f80 <__metal_driver_sifive_uart0_clock>:
__metal_driver_sifive_uart0_clock():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1131
{
20016f80:	1101                	addi	sp,sp,-32
20016f82:	ce22                	sw	s0,28(sp)
20016f84:	1000                	addi	s0,sp,32
20016f86:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1132
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20016f8a:	fec42703          	lw	a4,-20(s0)
20016f8e:	800017b7          	lui	a5,0x80001
20016f92:	a5c78793          	addi	a5,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
20016f96:	00f71763          	bne	a4,a5,20016fa4 <__metal_driver_sifive_uart0_clock+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1133
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
20016f9a:	800017b7          	lui	a5,0x80001
20016f9e:	ab478793          	addi	a5,a5,-1356 # 80000ab4 <metal_segment_heap_target_end+0xfffff2f4>
20016fa2:	a839                	j	20016fc0 <__metal_driver_sifive_uart0_clock+0x40>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1135
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20016fa4:	fec42703          	lw	a4,-20(s0)
20016fa8:	800017b7          	lui	a5,0x80001
20016fac:	a7c78793          	addi	a5,a5,-1412 # 80000a7c <metal_segment_heap_target_end+0xfffff2bc>
20016fb0:	00f71763          	bne	a4,a5,20016fbe <__metal_driver_sifive_uart0_clock+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1136
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
20016fb4:	800017b7          	lui	a5,0x80001
20016fb8:	ab478793          	addi	a5,a5,-1356 # 80000ab4 <metal_segment_heap_target_end+0xfffff2f4>
20016fbc:	a011                	j	20016fc0 <__metal_driver_sifive_uart0_clock+0x40>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1139
		return 0;
20016fbe:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1141
}
20016fc0:	853e                	mv	a0,a5
20016fc2:	4472                	lw	s0,28(sp)
20016fc4:	6105                	addi	sp,sp,32
20016fc6:	8082                	ret

20016fc8 <__metal_driver_sifive_uart0_pinmux>:
__metal_driver_sifive_uart0_pinmux():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1144
{
20016fc8:	1101                	addi	sp,sp,-32
20016fca:	ce22                	sw	s0,28(sp)
20016fcc:	1000                	addi	s0,sp,32
20016fce:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1145
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20016fd2:	fec42703          	lw	a4,-20(s0)
20016fd6:	800017b7          	lui	a5,0x80001
20016fda:	a5c78793          	addi	a5,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
20016fde:	00f71563          	bne	a4,a5,20016fe8 <__metal_driver_sifive_uart0_pinmux+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1146
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
20016fe2:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20016fe6:	a829                	j	20017000 <__metal_driver_sifive_uart0_pinmux+0x38>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1148
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20016fe8:	fec42703          	lw	a4,-20(s0)
20016fec:	800017b7          	lui	a5,0x80001
20016ff0:	a7c78793          	addi	a5,a5,-1412 # 80000a7c <metal_segment_heap_target_end+0xfffff2bc>
20016ff4:	00f71563          	bne	a4,a5,20016ffe <__metal_driver_sifive_uart0_pinmux+0x36>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1149
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
20016ff8:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20016ffc:	a011                	j	20017000 <__metal_driver_sifive_uart0_pinmux+0x38>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1152
		return 0;
20016ffe:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1154
}
20017000:	853e                	mv	a0,a5
20017002:	4472                	lw	s0,28(sp)
20017004:	6105                	addi	sp,sp,32
20017006:	8082                	ret

20017008 <__metal_driver_sifive_uart0_pinmux_output_selector>:
__metal_driver_sifive_uart0_pinmux_output_selector():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1157
{
20017008:	1101                	addi	sp,sp,-32
2001700a:	ce22                	sw	s0,28(sp)
2001700c:	1000                	addi	s0,sp,32
2001700e:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1158
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20017012:	fec42703          	lw	a4,-20(s0)
20017016:	800017b7          	lui	a5,0x80001
2001701a:	a5c78793          	addi	a5,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
2001701e:	00f71463          	bne	a4,a5,20017026 <__metal_driver_sifive_uart0_pinmux_output_selector+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1159
		return 0;
20017022:	4781                	li	a5,0
20017024:	a821                	j	2001703c <__metal_driver_sifive_uart0_pinmux_output_selector+0x34>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1161
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20017026:	fec42703          	lw	a4,-20(s0)
2001702a:	800017b7          	lui	a5,0x80001
2001702e:	a7c78793          	addi	a5,a5,-1412 # 80000a7c <metal_segment_heap_target_end+0xfffff2bc>
20017032:	00f71463          	bne	a4,a5,2001703a <__metal_driver_sifive_uart0_pinmux_output_selector+0x32>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1162
		return 0;
20017036:	4781                	li	a5,0
20017038:	a011                	j	2001703c <__metal_driver_sifive_uart0_pinmux_output_selector+0x34>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1165
		return 0;
2001703a:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1167
}
2001703c:	853e                	mv	a0,a5
2001703e:	4472                	lw	s0,28(sp)
20017040:	6105                	addi	sp,sp,32
20017042:	8082                	ret

20017044 <__metal_driver_sifive_uart0_pinmux_source_selector>:
__metal_driver_sifive_uart0_pinmux_source_selector():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1170
{
20017044:	1101                	addi	sp,sp,-32
20017046:	ce22                	sw	s0,28(sp)
20017048:	1000                	addi	s0,sp,32
2001704a:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1171
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
2001704e:	fec42703          	lw	a4,-20(s0)
20017052:	800017b7          	lui	a5,0x80001
20017056:	a5c78793          	addi	a5,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
2001705a:	00f71563          	bne	a4,a5,20017064 <__metal_driver_sifive_uart0_pinmux_source_selector+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1172
		return 196608;
2001705e:	000307b7          	lui	a5,0x30
20017062:	a829                	j	2001707c <__metal_driver_sifive_uart0_pinmux_source_selector+0x38>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1174
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20017064:	fec42703          	lw	a4,-20(s0)
20017068:	800017b7          	lui	a5,0x80001
2001706c:	a7c78793          	addi	a5,a5,-1412 # 80000a7c <metal_segment_heap_target_end+0xfffff2bc>
20017070:	00f71563          	bne	a4,a5,2001707a <__metal_driver_sifive_uart0_pinmux_source_selector+0x36>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1175
		return 8650752;
20017074:	008407b7          	lui	a5,0x840
20017078:	a011                	j	2001707c <__metal_driver_sifive_uart0_pinmux_source_selector+0x38>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1178
		return 0;
2001707a:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1180
}
2001707c:	853e                	mv	a0,a5
2001707e:	4472                	lw	s0,28(sp)
20017080:	6105                	addi	sp,sp,32
20017082:	8082                	ret

20017084 <__metal_driver_sifive_uart0_interrupt_controller>:
__metal_driver_sifive_uart0_interrupt_controller():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:37
    (__METAL_ACCESS_ONCE((__metal_io_u8 *)UART_REG(offset)))
#define UART_REGW(offset)                                                      \
    (__METAL_ACCESS_ONCE((__metal_io_u32 *)UART_REG(offset)))

struct metal_interrupt *
__metal_driver_sifive_uart0_interrupt_controller(struct metal_uart *uart) {
20017084:	1101                	addi	sp,sp,-32
20017086:	ce06                	sw	ra,28(sp)
20017088:	cc22                	sw	s0,24(sp)
2001708a:	1000                	addi	s0,sp,32
2001708c:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:38
    return __metal_driver_sifive_uart0_interrupt_parent(uart);
20017090:	fec42503          	lw	a0,-20(s0)
20017094:	e69ff0ef          	jal	ra,20016efc <__metal_driver_sifive_uart0_interrupt_parent>
20017098:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:39
}
2001709a:	853e                	mv	a0,a5
2001709c:	40f2                	lw	ra,28(sp)
2001709e:	4462                	lw	s0,24(sp)
200170a0:	6105                	addi	sp,sp,32
200170a2:	8082                	ret

200170a4 <__metal_driver_sifive_uart0_get_interrupt_id>:
__metal_driver_sifive_uart0_get_interrupt_id():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:41

int __metal_driver_sifive_uart0_get_interrupt_id(struct metal_uart *uart) {
200170a4:	1101                	addi	sp,sp,-32
200170a6:	ce06                	sw	ra,28(sp)
200170a8:	cc22                	sw	s0,24(sp)
200170aa:	1000                	addi	s0,sp,32
200170ac:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:42
    return __metal_driver_sifive_uart0_interrupt_line(uart);
200170b0:	fec42503          	lw	a0,-20(s0)
200170b4:	e91ff0ef          	jal	ra,20016f44 <__metal_driver_sifive_uart0_interrupt_line>
200170b8:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:43
}
200170ba:	853e                	mv	a0,a5
200170bc:	40f2                	lw	ra,28(sp)
200170be:	4462                	lw	s0,24(sp)
200170c0:	6105                	addi	sp,sp,32
200170c2:	8082                	ret

200170c4 <__metal_driver_sifive_uart0_tx_interrupt_enable>:
__metal_driver_sifive_uart0_tx_interrupt_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:45

int __metal_driver_sifive_uart0_tx_interrupt_enable(struct metal_uart *uart) {
200170c4:	7179                	addi	sp,sp,-48
200170c6:	d606                	sw	ra,44(sp)
200170c8:	d422                	sw	s0,40(sp)
200170ca:	1800                	addi	s0,sp,48
200170cc:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:46
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
200170d0:	fdc42503          	lw	a0,-36(s0)
200170d4:	de9ff0ef          	jal	ra,20016ebc <__metal_driver_sifive_uart0_control_base>
200170d8:	87aa                	mv	a5,a0
200170da:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:48

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_TXWM;
200170de:	fec42783          	lw	a5,-20(s0)
200170e2:	07c1                	addi	a5,a5,16
200170e4:	439c                	lw	a5,0(a5)
200170e6:	fec42703          	lw	a4,-20(s0)
200170ea:	0741                	addi	a4,a4,16
200170ec:	0017e793          	ori	a5,a5,1
200170f0:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:49
    return 0;
200170f2:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:50
}
200170f4:	853e                	mv	a0,a5
200170f6:	50b2                	lw	ra,44(sp)
200170f8:	5422                	lw	s0,40(sp)
200170fa:	6145                	addi	sp,sp,48
200170fc:	8082                	ret

200170fe <__metal_driver_sifive_uart0_tx_interrupt_disable>:
__metal_driver_sifive_uart0_tx_interrupt_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:52

int __metal_driver_sifive_uart0_tx_interrupt_disable(struct metal_uart *uart) {
200170fe:	7179                	addi	sp,sp,-48
20017100:	d606                	sw	ra,44(sp)
20017102:	d422                	sw	s0,40(sp)
20017104:	1800                	addi	s0,sp,48
20017106:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:53
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2001710a:	fdc42503          	lw	a0,-36(s0)
2001710e:	dafff0ef          	jal	ra,20016ebc <__metal_driver_sifive_uart0_control_base>
20017112:	87aa                	mv	a5,a0
20017114:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:55

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_TXWM;
20017118:	fec42783          	lw	a5,-20(s0)
2001711c:	07c1                	addi	a5,a5,16
2001711e:	439c                	lw	a5,0(a5)
20017120:	fec42703          	lw	a4,-20(s0)
20017124:	0741                	addi	a4,a4,16
20017126:	9bf9                	andi	a5,a5,-2
20017128:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:56
    return 0;
2001712a:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:57
}
2001712c:	853e                	mv	a0,a5
2001712e:	50b2                	lw	ra,44(sp)
20017130:	5422                	lw	s0,40(sp)
20017132:	6145                	addi	sp,sp,48
20017134:	8082                	ret

20017136 <__metal_driver_sifive_uart0_rx_interrupt_enable>:
__metal_driver_sifive_uart0_rx_interrupt_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:59

int __metal_driver_sifive_uart0_rx_interrupt_enable(struct metal_uart *uart) {
20017136:	7179                	addi	sp,sp,-48
20017138:	d606                	sw	ra,44(sp)
2001713a:	d422                	sw	s0,40(sp)
2001713c:	1800                	addi	s0,sp,48
2001713e:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:60
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20017142:	fdc42503          	lw	a0,-36(s0)
20017146:	d77ff0ef          	jal	ra,20016ebc <__metal_driver_sifive_uart0_control_base>
2001714a:	87aa                	mv	a5,a0
2001714c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:62

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_RXWM;
20017150:	fec42783          	lw	a5,-20(s0)
20017154:	07c1                	addi	a5,a5,16
20017156:	439c                	lw	a5,0(a5)
20017158:	fec42703          	lw	a4,-20(s0)
2001715c:	0741                	addi	a4,a4,16
2001715e:	0027e793          	ori	a5,a5,2
20017162:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:63
    return 0;
20017164:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:64
}
20017166:	853e                	mv	a0,a5
20017168:	50b2                	lw	ra,44(sp)
2001716a:	5422                	lw	s0,40(sp)
2001716c:	6145                	addi	sp,sp,48
2001716e:	8082                	ret

20017170 <__metal_driver_sifive_uart0_rx_interrupt_disable>:
__metal_driver_sifive_uart0_rx_interrupt_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:66

int __metal_driver_sifive_uart0_rx_interrupt_disable(struct metal_uart *uart) {
20017170:	7179                	addi	sp,sp,-48
20017172:	d606                	sw	ra,44(sp)
20017174:	d422                	sw	s0,40(sp)
20017176:	1800                	addi	s0,sp,48
20017178:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:67
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2001717c:	fdc42503          	lw	a0,-36(s0)
20017180:	d3dff0ef          	jal	ra,20016ebc <__metal_driver_sifive_uart0_control_base>
20017184:	87aa                	mv	a5,a0
20017186:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:69

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_RXWM;
2001718a:	fec42783          	lw	a5,-20(s0)
2001718e:	07c1                	addi	a5,a5,16
20017190:	439c                	lw	a5,0(a5)
20017192:	fec42703          	lw	a4,-20(s0)
20017196:	0741                	addi	a4,a4,16
20017198:	9bf5                	andi	a5,a5,-3
2001719a:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:70
    return 0;
2001719c:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:71
}
2001719e:	853e                	mv	a0,a5
200171a0:	50b2                	lw	ra,44(sp)
200171a2:	5422                	lw	s0,40(sp)
200171a4:	6145                	addi	sp,sp,48
200171a6:	8082                	ret

200171a8 <__metal_driver_sifive_uart0_txready>:
__metal_driver_sifive_uart0_txready():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:73

int __metal_driver_sifive_uart0_txready(struct metal_uart *uart) {
200171a8:	7179                	addi	sp,sp,-48
200171aa:	d606                	sw	ra,44(sp)
200171ac:	d422                	sw	s0,40(sp)
200171ae:	1800                	addi	s0,sp,48
200171b0:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:74
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
200171b4:	fdc42503          	lw	a0,-36(s0)
200171b8:	d05ff0ef          	jal	ra,20016ebc <__metal_driver_sifive_uart0_control_base>
200171bc:	87aa                	mv	a5,a0
200171be:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:76

    return !!((UART_REGW(METAL_SIFIVE_UART0_TXDATA) & UART_TXFULL));
200171c2:	fec42783          	lw	a5,-20(s0)
200171c6:	439c                	lw	a5,0(a5)
200171c8:	83fd                	srli	a5,a5,0x1f
200171ca:	0ff7f793          	andi	a5,a5,255
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:77
}
200171ce:	853e                	mv	a0,a5
200171d0:	50b2                	lw	ra,44(sp)
200171d2:	5422                	lw	s0,40(sp)
200171d4:	6145                	addi	sp,sp,48
200171d6:	8082                	ret

200171d8 <__metal_driver_sifive_uart0_set_tx_watermark>:
__metal_driver_sifive_uart0_set_tx_watermark():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:80

int __metal_driver_sifive_uart0_set_tx_watermark(struct metal_uart *uart,
                                                 size_t level) {
200171d8:	7179                	addi	sp,sp,-48
200171da:	d606                	sw	ra,44(sp)
200171dc:	d422                	sw	s0,40(sp)
200171de:	1800                	addi	s0,sp,48
200171e0:	fca42e23          	sw	a0,-36(s0)
200171e4:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:81
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
200171e8:	fdc42503          	lw	a0,-36(s0)
200171ec:	cd1ff0ef          	jal	ra,20016ebc <__metal_driver_sifive_uart0_control_base>
200171f0:	87aa                	mv	a5,a0
200171f2:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:83

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(level);
200171f6:	fec42783          	lw	a5,-20(s0)
200171fa:	07a1                	addi	a5,a5,8
200171fc:	4398                	lw	a4,0(a5)
200171fe:	fd842783          	lw	a5,-40(s0)
20017202:	01079693          	slli	a3,a5,0x10
20017206:	000707b7          	lui	a5,0x70
2001720a:	8ff5                	and	a5,a5,a3
2001720c:	fec42683          	lw	a3,-20(s0)
20017210:	06a1                	addi	a3,a3,8
20017212:	8fd9                	or	a5,a5,a4
20017214:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:84
    return 0;
20017216:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:85
}
20017218:	853e                	mv	a0,a5
2001721a:	50b2                	lw	ra,44(sp)
2001721c:	5422                	lw	s0,40(sp)
2001721e:	6145                	addi	sp,sp,48
20017220:	8082                	ret

20017222 <__metal_driver_sifive_uart0_get_tx_watermark>:
__metal_driver_sifive_uart0_get_tx_watermark():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:87

size_t __metal_driver_sifive_uart0_get_tx_watermark(struct metal_uart *uart) {
20017222:	7179                	addi	sp,sp,-48
20017224:	d606                	sw	ra,44(sp)
20017226:	d422                	sw	s0,40(sp)
20017228:	1800                	addi	s0,sp,48
2001722a:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:88
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2001722e:	fdc42503          	lw	a0,-36(s0)
20017232:	c8bff0ef          	jal	ra,20016ebc <__metal_driver_sifive_uart0_control_base>
20017236:	87aa                	mv	a5,a0
20017238:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:90

    return ((UART_REGW(METAL_SIFIVE_UART0_TXCTRL) >> 16) & 0x7);
2001723c:	fec42783          	lw	a5,-20(s0)
20017240:	07a1                	addi	a5,a5,8
20017242:	439c                	lw	a5,0(a5)
20017244:	83c1                	srli	a5,a5,0x10
20017246:	8b9d                	andi	a5,a5,7
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:91
}
20017248:	853e                	mv	a0,a5
2001724a:	50b2                	lw	ra,44(sp)
2001724c:	5422                	lw	s0,40(sp)
2001724e:	6145                	addi	sp,sp,48
20017250:	8082                	ret

20017252 <__metal_driver_sifive_uart0_set_rx_watermark>:
__metal_driver_sifive_uart0_set_rx_watermark():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:94

int __metal_driver_sifive_uart0_set_rx_watermark(struct metal_uart *uart,
                                                 size_t level) {
20017252:	7179                	addi	sp,sp,-48
20017254:	d606                	sw	ra,44(sp)
20017256:	d422                	sw	s0,40(sp)
20017258:	1800                	addi	s0,sp,48
2001725a:	fca42e23          	sw	a0,-36(s0)
2001725e:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:95
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20017262:	fdc42503          	lw	a0,-36(s0)
20017266:	c57ff0ef          	jal	ra,20016ebc <__metal_driver_sifive_uart0_control_base>
2001726a:	87aa                	mv	a5,a0
2001726c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:97

    UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXCNT(level);
20017270:	fec42783          	lw	a5,-20(s0)
20017274:	07b1                	addi	a5,a5,12
20017276:	4398                	lw	a4,0(a5)
20017278:	fd842783          	lw	a5,-40(s0)
2001727c:	01079693          	slli	a3,a5,0x10
20017280:	000707b7          	lui	a5,0x70
20017284:	8ff5                	and	a5,a5,a3
20017286:	fec42683          	lw	a3,-20(s0)
2001728a:	06b1                	addi	a3,a3,12
2001728c:	8fd9                	or	a5,a5,a4
2001728e:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:98
    return 0;
20017290:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:99
}
20017292:	853e                	mv	a0,a5
20017294:	50b2                	lw	ra,44(sp)
20017296:	5422                	lw	s0,40(sp)
20017298:	6145                	addi	sp,sp,48
2001729a:	8082                	ret

2001729c <__metal_driver_sifive_uart0_get_rx_watermark>:
__metal_driver_sifive_uart0_get_rx_watermark():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:101

size_t __metal_driver_sifive_uart0_get_rx_watermark(struct metal_uart *uart) {
2001729c:	7179                	addi	sp,sp,-48
2001729e:	d606                	sw	ra,44(sp)
200172a0:	d422                	sw	s0,40(sp)
200172a2:	1800                	addi	s0,sp,48
200172a4:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:102
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
200172a8:	fdc42503          	lw	a0,-36(s0)
200172ac:	c11ff0ef          	jal	ra,20016ebc <__metal_driver_sifive_uart0_control_base>
200172b0:	87aa                	mv	a5,a0
200172b2:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:104

    return ((UART_REGW(METAL_SIFIVE_UART0_RXCTRL) >> 16) & 0x7);
200172b6:	fec42783          	lw	a5,-20(s0)
200172ba:	07b1                	addi	a5,a5,12
200172bc:	439c                	lw	a5,0(a5)
200172be:	83c1                	srli	a5,a5,0x10
200172c0:	8b9d                	andi	a5,a5,7
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:105
}
200172c2:	853e                	mv	a0,a5
200172c4:	50b2                	lw	ra,44(sp)
200172c6:	5422                	lw	s0,40(sp)
200172c8:	6145                	addi	sp,sp,48
200172ca:	8082                	ret

200172cc <__metal_driver_sifive_uart0_putc>:
__metal_driver_sifive_uart0_putc():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:107

int __metal_driver_sifive_uart0_putc(struct metal_uart *uart, int c) {
200172cc:	7179                	addi	sp,sp,-48
200172ce:	d606                	sw	ra,44(sp)
200172d0:	d422                	sw	s0,40(sp)
200172d2:	1800                	addi	s0,sp,48
200172d4:	fca42e23          	sw	a0,-36(s0)
200172d8:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:108
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
200172dc:	fdc42503          	lw	a0,-36(s0)
200172e0:	bddff0ef          	jal	ra,20016ebc <__metal_driver_sifive_uart0_control_base>
200172e4:	87aa                	mv	a5,a0
200172e6:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:110

    while (__metal_driver_sifive_uart0_txready(uart) != 0) {
200172ea:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:110 (discriminator 1)
200172ec:	fdc42503          	lw	a0,-36(s0)
200172f0:	eb9ff0ef          	jal	ra,200171a8 <__metal_driver_sifive_uart0_txready>
200172f4:	87aa                	mv	a5,a0
200172f6:	fbfd                	bnez	a5,200172ec <__metal_driver_sifive_uart0_putc+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:113
        /* wait */
    }
    UART_REGW(METAL_SIFIVE_UART0_TXDATA) = c;
200172f8:	fec42783          	lw	a5,-20(s0)
200172fc:	fd842703          	lw	a4,-40(s0)
20017300:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:114
    return 0;
20017302:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:115
}
20017304:	853e                	mv	a0,a5
20017306:	50b2                	lw	ra,44(sp)
20017308:	5422                	lw	s0,40(sp)
2001730a:	6145                	addi	sp,sp,48
2001730c:	8082                	ret

2001730e <__metal_driver_sifive_uart0_getc>:
__metal_driver_sifive_uart0_getc():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:117

int __metal_driver_sifive_uart0_getc(struct metal_uart *uart, int *c) {
2001730e:	7179                	addi	sp,sp,-48
20017310:	d606                	sw	ra,44(sp)
20017312:	d422                	sw	s0,40(sp)
20017314:	1800                	addi	s0,sp,48
20017316:	fca42e23          	sw	a0,-36(s0)
2001731a:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:119
    uint32_t ch;
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2001731e:	fdc42503          	lw	a0,-36(s0)
20017322:	b9bff0ef          	jal	ra,20016ebc <__metal_driver_sifive_uart0_control_base>
20017326:	87aa                	mv	a5,a0
20017328:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:121
    /* No seperate status register, we get status and the byte at same time */
    ch = UART_REGW(METAL_SIFIVE_UART0_RXDATA);
2001732c:	fec42783          	lw	a5,-20(s0)
20017330:	0791                	addi	a5,a5,4
20017332:	439c                	lw	a5,0(a5)
20017334:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:123
    ;
    if (ch & UART_RXEMPTY) {
20017338:	fe842783          	lw	a5,-24(s0)
2001733c:	0007d763          	bgez	a5,2001734a <__metal_driver_sifive_uart0_getc+0x3c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:124
        *c = -1; /* aka: EOF in most of the world */
20017340:	fd842783          	lw	a5,-40(s0)
20017344:	577d                	li	a4,-1
20017346:	c398                	sw	a4,0(a5)
20017348:	a801                	j	20017358 <__metal_driver_sifive_uart0_getc+0x4a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:126
    } else {
        *c = ch & 0x0ff;
2001734a:	fe842783          	lw	a5,-24(s0)
2001734e:	0ff7f713          	andi	a4,a5,255
20017352:	fd842783          	lw	a5,-40(s0)
20017356:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:128
    }
    return 0;
20017358:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:129
}
2001735a:	853e                	mv	a0,a5
2001735c:	50b2                	lw	ra,44(sp)
2001735e:	5422                	lw	s0,40(sp)
20017360:	6145                	addi	sp,sp,48
20017362:	8082                	ret

20017364 <__metal_driver_sifive_uart0_get_baud_rate>:
__metal_driver_sifive_uart0_get_baud_rate():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:131

int __metal_driver_sifive_uart0_get_baud_rate(struct metal_uart *guart) {
20017364:	7179                	addi	sp,sp,-48
20017366:	d622                	sw	s0,44(sp)
20017368:	1800                	addi	s0,sp,48
2001736a:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:132
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
2001736e:	fdc42783          	lw	a5,-36(s0)
20017372:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:133
    return uart->baud_rate;
20017376:	fec42783          	lw	a5,-20(s0)
2001737a:	43dc                	lw	a5,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:134
}
2001737c:	853e                	mv	a0,a5
2001737e:	5432                	lw	s0,44(sp)
20017380:	6145                	addi	sp,sp,48
20017382:	8082                	ret

20017384 <__metal_driver_sifive_uart0_set_baud_rate>:
__metal_driver_sifive_uart0_set_baud_rate():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:137

int __metal_driver_sifive_uart0_set_baud_rate(struct metal_uart *guart,
                                              int baud_rate) {
20017384:	7179                	addi	sp,sp,-48
20017386:	d606                	sw	ra,44(sp)
20017388:	d422                	sw	s0,40(sp)
2001738a:	1800                	addi	s0,sp,48
2001738c:	fca42e23          	sw	a0,-36(s0)
20017390:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:138
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
20017394:	fdc42783          	lw	a5,-36(s0)
20017398:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:139
    long control_base = __metal_driver_sifive_uart0_control_base(guart);
2001739c:	fdc42503          	lw	a0,-36(s0)
200173a0:	b1dff0ef          	jal	ra,20016ebc <__metal_driver_sifive_uart0_control_base>
200173a4:	87aa                	mv	a5,a0
200173a6:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:140
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
200173aa:	fdc42503          	lw	a0,-36(s0)
200173ae:	bd3ff0ef          	jal	ra,20016f80 <__metal_driver_sifive_uart0_clock>
200173b2:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:142

    uart->baud_rate = baud_rate;
200173b6:	fd842703          	lw	a4,-40(s0)
200173ba:	fec42783          	lw	a5,-20(s0)
200173be:	c3d8                	sw	a4,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:144

    if (clock != NULL) {
200173c0:	fe442783          	lw	a5,-28(s0)
200173c4:	cbb1                	beqz	a5,20017418 <__metal_driver_sifive_uart0_set_baud_rate+0x94>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:145
        long clock_rate = clock->vtable->get_rate_hz(clock);
200173c6:	fe442783          	lw	a5,-28(s0)
200173ca:	439c                	lw	a5,0(a5)
200173cc:	439c                	lw	a5,0(a5)
200173ce:	fe442503          	lw	a0,-28(s0)
200173d2:	9782                	jalr	a5
200173d4:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:146
        UART_REGW(METAL_SIFIVE_UART0_DIV) = clock_rate / baud_rate - 1;
200173d8:	fe042703          	lw	a4,-32(s0)
200173dc:	fd842783          	lw	a5,-40(s0)
200173e0:	02f747b3          	div	a5,a4,a5
200173e4:	fff78713          	addi	a4,a5,-1 # 6ffff <__heap_size+0x6f7ff>
200173e8:	fe842783          	lw	a5,-24(s0)
200173ec:	07e1                	addi	a5,a5,24
200173ee:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:147
        UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXEN;
200173f0:	fe842783          	lw	a5,-24(s0)
200173f4:	07a1                	addi	a5,a5,8
200173f6:	439c                	lw	a5,0(a5)
200173f8:	fe842703          	lw	a4,-24(s0)
200173fc:	0721                	addi	a4,a4,8
200173fe:	0017e793          	ori	a5,a5,1
20017402:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:148
        UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXEN;
20017404:	fe842783          	lw	a5,-24(s0)
20017408:	07b1                	addi	a5,a5,12
2001740a:	439c                	lw	a5,0(a5)
2001740c:	fe842703          	lw	a4,-24(s0)
20017410:	0731                	addi	a4,a4,12
20017412:	0017e793          	ori	a5,a5,1
20017416:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:150
    }
    return 0;
20017418:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:151
}
2001741a:	853e                	mv	a0,a5
2001741c:	50b2                	lw	ra,44(sp)
2001741e:	5422                	lw	s0,40(sp)
20017420:	6145                	addi	sp,sp,48
20017422:	8082                	ret

20017424 <pre_rate_change_callback_func>:
pre_rate_change_callback_func():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:153

static void pre_rate_change_callback_func(void *priv) {
20017424:	7139                	addi	sp,sp,-64
20017426:	de06                	sw	ra,60(sp)
20017428:	dc22                	sw	s0,56(sp)
2001742a:	0080                	addi	s0,sp,64
2001742c:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:154
    struct __metal_driver_sifive_uart0 *uart = priv;
20017430:	fcc42783          	lw	a5,-52(s0)
20017434:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:156
    long control_base =
        __metal_driver_sifive_uart0_control_base((struct metal_uart *)priv);
20017438:	fcc42503          	lw	a0,-52(s0)
2001743c:	a81ff0ef          	jal	ra,20016ebc <__metal_driver_sifive_uart0_control_base>
20017440:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:155
    long control_base =
20017442:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:158
    struct metal_clock *clock =
        __metal_driver_sifive_uart0_clock((struct metal_uart *)priv);
20017446:	fcc42503          	lw	a0,-52(s0)
2001744a:	b37ff0ef          	jal	ra,20016f80 <__metal_driver_sifive_uart0_clock>
2001744e:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:163

    /* Detect when the TXDATA is empty by setting the transmit watermark count
     * to one and waiting until an interrupt is pending */

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) &= ~(UART_TXCNT(0x7));
20017452:	fe842783          	lw	a5,-24(s0)
20017456:	07a1                	addi	a5,a5,8
20017458:	4398                	lw	a4,0(a5)
2001745a:	fe842783          	lw	a5,-24(s0)
2001745e:	07a1                	addi	a5,a5,8
20017460:	86be                	mv	a3,a5
20017462:	fff907b7          	lui	a5,0xfff90
20017466:	17fd                	addi	a5,a5,-1
20017468:	8ff9                	and	a5,a5,a4
2001746a:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:164
    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(1);
2001746c:	fe842783          	lw	a5,-24(s0)
20017470:	07a1                	addi	a5,a5,8
20017472:	4398                	lw	a4,0(a5)
20017474:	fe842783          	lw	a5,-24(s0)
20017478:	07a1                	addi	a5,a5,8
2001747a:	86be                	mv	a3,a5
2001747c:	67c1                	lui	a5,0x10
2001747e:	8fd9                	or	a5,a5,a4
20017480:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:166

    while ((UART_REGW(METAL_SIFIVE_UART0_IP) & UART_TXWM) == 0)
20017482:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:166 (discriminator 1)
20017484:	fe842783          	lw	a5,-24(s0)
20017488:	07d1                	addi	a5,a5,20
2001748a:	439c                	lw	a5,0(a5)
2001748c:	8b85                	andi	a5,a5,1
2001748e:	dbfd                	beqz	a5,20017484 <pre_rate_change_callback_func+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:174
    /* When the TXDATA clears, the UART is still shifting out the last byte.
     * Calculate the time we must drain to finish transmitting and then wait
     * that long. */

    long bits_per_symbol =
        (UART_REGW(METAL_SIFIVE_UART0_TXCTRL) & (1 << 1)) ? 9 : 10;
20017490:	fe842783          	lw	a5,-24(s0)
20017494:	07a1                	addi	a5,a5,8
20017496:	439c                	lw	a5,0(a5)
20017498:	8b89                	andi	a5,a5,2
2001749a:	c399                	beqz	a5,200174a0 <pre_rate_change_callback_func+0x7c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 1)
2001749c:	47a5                	li	a5,9
2001749e:	a011                	j	200174a2 <pre_rate_change_callback_func+0x7e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 2)
200174a0:	47a9                	li	a5,10
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:173
    long bits_per_symbol =
200174a2:	fef42023          	sw	a5,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:175
    long clk_freq = clock->vtable->get_rate_hz(clock);
200174a6:	fe442783          	lw	a5,-28(s0)
200174aa:	439c                	lw	a5,0(a5)
200174ac:	439c                	lw	a5,0(a5)
200174ae:	fe442503          	lw	a0,-28(s0)
200174b2:	9782                	jalr	a5
200174b4:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:176
    long cycles_to_wait = bits_per_symbol * clk_freq / uart->baud_rate;
200174b8:	fe042703          	lw	a4,-32(s0)
200174bc:	fdc42783          	lw	a5,-36(s0)
200174c0:	02f707b3          	mul	a5,a4,a5
200174c4:	873e                	mv	a4,a5
200174c6:	fec42783          	lw	a5,-20(s0)
200174ca:	43dc                	lw	a5,4(a5)
200174cc:	02f757b3          	divu	a5,a4,a5
200174d0:	fcf42c23          	sw	a5,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:178

    for (volatile long x = 0; x < cycles_to_wait; x++)
200174d4:	fc042a23          	sw	zero,-44(s0)
200174d8:	a039                	j	200174e6 <pre_rate_change_callback_func+0xc2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:179 (discriminator 3)
        __asm__("nop");
200174da:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 3)
    for (volatile long x = 0; x < cycles_to_wait; x++)
200174dc:	fd442783          	lw	a5,-44(s0)
200174e0:	0785                	addi	a5,a5,1
200174e2:	fcf42a23          	sw	a5,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 1)
200174e6:	fd442783          	lw	a5,-44(s0)
200174ea:	fd842703          	lw	a4,-40(s0)
200174ee:	fee7c6e3          	blt	a5,a4,200174da <pre_rate_change_callback_func+0xb6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:180
}
200174f2:	0001                	nop
200174f4:	50f2                	lw	ra,60(sp)
200174f6:	5462                	lw	s0,56(sp)
200174f8:	6121                	addi	sp,sp,64
200174fa:	8082                	ret

200174fc <post_rate_change_callback_func>:
post_rate_change_callback_func():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:182

static void post_rate_change_callback_func(void *priv) {
200174fc:	7179                	addi	sp,sp,-48
200174fe:	d606                	sw	ra,44(sp)
20017500:	d422                	sw	s0,40(sp)
20017502:	1800                	addi	s0,sp,48
20017504:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:183
    struct __metal_driver_sifive_uart0 *uart = priv;
20017508:	fdc42783          	lw	a5,-36(s0)
2001750c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:184
    metal_uart_set_baud_rate(&uart->uart, uart->baud_rate);
20017510:	fec42703          	lw	a4,-20(s0)
20017514:	fec42783          	lw	a5,-20(s0)
20017518:	43dc                	lw	a5,4(a5)
2001751a:	85be                	mv	a1,a5
2001751c:	853a                	mv	a0,a4
2001751e:	237d                	jal	20017acc <metal_uart_set_baud_rate>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:185
}
20017520:	0001                	nop
20017522:	50b2                	lw	ra,44(sp)
20017524:	5422                	lw	s0,40(sp)
20017526:	6145                	addi	sp,sp,48
20017528:	8082                	ret

2001752a <__metal_driver_sifive_uart0_init>:
__metal_driver_sifive_uart0_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:187

void __metal_driver_sifive_uart0_init(struct metal_uart *guart, int baud_rate) {
2001752a:	7139                	addi	sp,sp,-64
2001752c:	de06                	sw	ra,60(sp)
2001752e:	dc22                	sw	s0,56(sp)
20017530:	0080                	addi	s0,sp,64
20017532:	fca42623          	sw	a0,-52(s0)
20017536:	fcb42423          	sw	a1,-56(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:188
    struct __metal_driver_sifive_uart0 *uart = (void *)(guart);
2001753a:	fcc42783          	lw	a5,-52(s0)
2001753e:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:189
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
20017542:	fcc42503          	lw	a0,-52(s0)
20017546:	a3bff0ef          	jal	ra,20016f80 <__metal_driver_sifive_uart0_clock>
2001754a:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:191
    struct __metal_driver_sifive_gpio0 *pinmux =
        __metal_driver_sifive_uart0_pinmux(guart);
2001754e:	fcc42503          	lw	a0,-52(s0)
20017552:	a77ff0ef          	jal	ra,20016fc8 <__metal_driver_sifive_uart0_pinmux>
20017556:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:193

    if (clock != NULL) {
2001755a:	fe842783          	lw	a5,-24(s0)
2001755e:	c7b9                	beqz	a5,200175ac <__metal_driver_sifive_uart0_init+0x82>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:194
        uart->pre_rate_change_callback.callback =
20017560:	fec42783          	lw	a5,-20(s0)
20017564:	20017737          	lui	a4,0x20017
20017568:	42470713          	addi	a4,a4,1060 # 20017424 <pre_rate_change_callback_func>
2001756c:	c798                	sw	a4,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:196
            &pre_rate_change_callback_func;
        uart->pre_rate_change_callback.priv = guart;
2001756e:	fec42783          	lw	a5,-20(s0)
20017572:	fcc42703          	lw	a4,-52(s0)
20017576:	c7d8                	sw	a4,12(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:197
        metal_clock_register_pre_rate_change_callback(
20017578:	fec42783          	lw	a5,-20(s0)
2001757c:	07a1                	addi	a5,a5,8
2001757e:	85be                	mv	a1,a5
20017580:	fe842503          	lw	a0,-24(s0)
20017584:	2ab5                	jal	20017700 <metal_clock_register_pre_rate_change_callback>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:200
            clock, &(uart->pre_rate_change_callback));

        uart->post_rate_change_callback.callback =
20017586:	fec42783          	lw	a5,-20(s0)
2001758a:	20017737          	lui	a4,0x20017
2001758e:	4fc70713          	addi	a4,a4,1276 # 200174fc <post_rate_change_callback_func>
20017592:	cbd8                	sw	a4,20(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:202
            &post_rate_change_callback_func;
        uart->post_rate_change_callback.priv = guart;
20017594:	fec42783          	lw	a5,-20(s0)
20017598:	fcc42703          	lw	a4,-52(s0)
2001759c:	cf98                	sw	a4,24(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:203
        metal_clock_register_post_rate_change_callback(
2001759e:	fec42783          	lw	a5,-20(s0)
200175a2:	07d1                	addi	a5,a5,20
200175a4:	85be                	mv	a1,a5
200175a6:	fe842503          	lw	a0,-24(s0)
200175aa:	2261                	jal	20017732 <metal_clock_register_post_rate_change_callback>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:207
            clock, &(uart->post_rate_change_callback));
    }

    metal_uart_set_baud_rate(&(uart->uart), baud_rate);
200175ac:	fec42783          	lw	a5,-20(s0)
200175b0:	fc842583          	lw	a1,-56(s0)
200175b4:	853e                	mv	a0,a5
200175b6:	2b19                	jal	20017acc <metal_uart_set_baud_rate>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:209

    if (pinmux != NULL) {
200175b8:	fe442783          	lw	a5,-28(s0)
200175bc:	cb95                	beqz	a5,200175f0 <__metal_driver_sifive_uart0_init+0xc6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:211
        long pinmux_output_selector =
            __metal_driver_sifive_uart0_pinmux_output_selector(guart);
200175be:	fcc42503          	lw	a0,-52(s0)
200175c2:	a47ff0ef          	jal	ra,20017008 <__metal_driver_sifive_uart0_pinmux_output_selector>
200175c6:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:210
        long pinmux_output_selector =
200175c8:	fef42023          	sw	a5,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:213
        long pinmux_source_selector =
            __metal_driver_sifive_uart0_pinmux_source_selector(guart);
200175cc:	fcc42503          	lw	a0,-52(s0)
200175d0:	a75ff0ef          	jal	ra,20017044 <__metal_driver_sifive_uart0_pinmux_source_selector>
200175d4:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:212
        long pinmux_source_selector =
200175d6:	fcf42e23          	sw	a5,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:214
        pinmux->gpio.vtable->enable_io((struct metal_gpio *)pinmux,
200175da:	fe442783          	lw	a5,-28(s0)
200175de:	439c                	lw	a5,0(a5)
200175e0:	53dc                	lw	a5,36(a5)
200175e2:	fdc42603          	lw	a2,-36(s0)
200175e6:	fe042583          	lw	a1,-32(s0)
200175ea:	fe442503          	lw	a0,-28(s0)
200175ee:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:218
                                       pinmux_output_selector,
                                       pinmux_source_selector);
    }
}
200175f0:	0001                	nop
200175f2:	50f2                	lw	ra,60(sp)
200175f4:	5462                	lw	s0,56(sp)
200175f6:	6121                	addi	sp,sp,64
200175f8:	8082                	ret

200175fa <_metal_clock_call_all_callbacks>:
_metal_clock_call_all_callbacks():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:50

/*!
 * @brief Call all callbacks in the linked list, if any are registered
 */
__inline__ void
_metal_clock_call_all_callbacks(const metal_clock_callback *const list) {
200175fa:	7179                	addi	sp,sp,-48
200175fc:	d606                	sw	ra,44(sp)
200175fe:	d422                	sw	s0,40(sp)
20017600:	1800                	addi	s0,sp,48
20017602:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:51
    const metal_clock_callback *current = list;
20017606:	fdc42783          	lw	a5,-36(s0)
2001760a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:52
    while (current) {
2001760e:	a831                	j	2001762a <_metal_clock_call_all_callbacks+0x30>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:53
        current->callback(current->priv);
20017610:	fec42783          	lw	a5,-20(s0)
20017614:	4398                	lw	a4,0(a5)
20017616:	fec42783          	lw	a5,-20(s0)
2001761a:	43dc                	lw	a5,4(a5)
2001761c:	853e                	mv	a0,a5
2001761e:	9702                	jalr	a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:54
        current = current->_next;
20017620:	fec42783          	lw	a5,-20(s0)
20017624:	479c                	lw	a5,8(a5)
20017626:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:52
    while (current) {
2001762a:	fec42783          	lw	a5,-20(s0)
2001762e:	f3ed                	bnez	a5,20017610 <_metal_clock_call_all_callbacks+0x16>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:56
    }
}
20017630:	0001                	nop
20017632:	50b2                	lw	ra,44(sp)
20017634:	5422                	lw	s0,40(sp)
20017636:	6145                	addi	sp,sp,48
20017638:	8082                	ret

2001763a <_metal_clock_append_to_callbacks>:
_metal_clock_append_to_callbacks():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:63
/*!
 * @brief Append a callback to the linked list and return the head of the list
 */
__inline__ metal_clock_callback *
_metal_clock_append_to_callbacks(metal_clock_callback *list,
                                 metal_clock_callback *const cb) {
2001763a:	7179                	addi	sp,sp,-48
2001763c:	d622                	sw	s0,44(sp)
2001763e:	1800                	addi	s0,sp,48
20017640:	fca42e23          	sw	a0,-36(s0)
20017644:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:64
    cb->_next = NULL;
20017648:	fd842783          	lw	a5,-40(s0)
2001764c:	0007a423          	sw	zero,8(a5) # 10008 <__heap_size+0xf808>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:66

    if (!list) {
20017650:	fdc42783          	lw	a5,-36(s0)
20017654:	e781                	bnez	a5,2001765c <_metal_clock_append_to_callbacks+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:67
        return cb;
20017656:	fd842783          	lw	a5,-40(s0)
2001765a:	a035                	j	20017686 <_metal_clock_append_to_callbacks+0x4c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:70
    }

    metal_clock_callback *current = list;
2001765c:	fdc42783          	lw	a5,-36(s0)
20017660:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:72

    while ((current->_next) != NULL) {
20017664:	a031                	j	20017670 <_metal_clock_append_to_callbacks+0x36>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:73
        current = current->_next;
20017666:	fec42783          	lw	a5,-20(s0)
2001766a:	479c                	lw	a5,8(a5)
2001766c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:72
    while ((current->_next) != NULL) {
20017670:	fec42783          	lw	a5,-20(s0)
20017674:	479c                	lw	a5,8(a5)
20017676:	fbe5                	bnez	a5,20017666 <_metal_clock_append_to_callbacks+0x2c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:76
    }

    current->_next = cb;
20017678:	fec42783          	lw	a5,-20(s0)
2001767c:	fd842703          	lw	a4,-40(s0)
20017680:	c798                	sw	a4,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:78

    return list;
20017682:	fdc42783          	lw	a5,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:79
}
20017686:	853e                	mv	a0,a5
20017688:	5432                	lw	s0,44(sp)
2001768a:	6145                	addi	sp,sp,48
2001768c:	8082                	ret

2001768e <metal_clock_get_rate_hz>:
metal_clock_get_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:110
 * @brief Returns the current rate of the given clock
 *
 * @param clk The handle for the clock
 * @return The current rate of the clock in Hz
 */
__inline__ long metal_clock_get_rate_hz(const struct metal_clock *clk) {
2001768e:	1101                	addi	sp,sp,-32
20017690:	ce06                	sw	ra,28(sp)
20017692:	cc22                	sw	s0,24(sp)
20017694:	1000                	addi	s0,sp,32
20017696:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:111
    return clk->vtable->get_rate_hz(clk);
2001769a:	fec42783          	lw	a5,-20(s0)
2001769e:	439c                	lw	a5,0(a5)
200176a0:	439c                	lw	a5,0(a5)
200176a2:	fec42503          	lw	a0,-20(s0)
200176a6:	9782                	jalr	a5
200176a8:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:112
}
200176aa:	853e                	mv	a0,a5
200176ac:	40f2                	lw	ra,28(sp)
200176ae:	4462                	lw	s0,24(sp)
200176b0:	6105                	addi	sp,sp,32
200176b2:	8082                	ret

200176b4 <metal_clock_set_rate_hz>:
metal_clock_set_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:128
 * could be anything!
 *
 * Prior to and after the rate change of the clock, this will call the
 * registered pre- and post-rate change callbacks.
 */
__inline__ long metal_clock_set_rate_hz(struct metal_clock *clk, long hz) {
200176b4:	7179                	addi	sp,sp,-48
200176b6:	d606                	sw	ra,44(sp)
200176b8:	d422                	sw	s0,40(sp)
200176ba:	1800                	addi	s0,sp,48
200176bc:	fca42e23          	sw	a0,-36(s0)
200176c0:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:129
    _metal_clock_call_all_callbacks(clk->_pre_rate_change_callback);
200176c4:	fdc42783          	lw	a5,-36(s0)
200176c8:	43dc                	lw	a5,4(a5)
200176ca:	853e                	mv	a0,a5
200176cc:	f2fff0ef          	jal	ra,200175fa <_metal_clock_call_all_callbacks>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:131

    long out = clk->vtable->set_rate_hz(clk, hz);
200176d0:	fdc42783          	lw	a5,-36(s0)
200176d4:	439c                	lw	a5,0(a5)
200176d6:	43dc                	lw	a5,4(a5)
200176d8:	fd842583          	lw	a1,-40(s0)
200176dc:	fdc42503          	lw	a0,-36(s0)
200176e0:	9782                	jalr	a5
200176e2:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:133

    _metal_clock_call_all_callbacks(clk->_post_rate_change_callback);
200176e6:	fdc42783          	lw	a5,-36(s0)
200176ea:	479c                	lw	a5,8(a5)
200176ec:	853e                	mv	a0,a5
200176ee:	f0dff0ef          	jal	ra,200175fa <_metal_clock_call_all_callbacks>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:135

    return out;
200176f2:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:136
}
200176f6:	853e                	mv	a0,a5
200176f8:	50b2                	lw	ra,44(sp)
200176fa:	5422                	lw	s0,40(sp)
200176fc:	6145                	addi	sp,sp,48
200176fe:	8082                	ret

20017700 <metal_clock_register_pre_rate_change_callback>:
metal_clock_register_pre_rate_change_callback():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:146
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_pre_rate_change_callback(struct metal_clock *clk,
                                              metal_clock_callback *cb) {
20017700:	1101                	addi	sp,sp,-32
20017702:	ce06                	sw	ra,28(sp)
20017704:	cc22                	sw	s0,24(sp)
20017706:	1000                	addi	s0,sp,32
20017708:	fea42623          	sw	a0,-20(s0)
2001770c:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:148
    clk->_pre_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_pre_rate_change_callback, cb);
20017710:	fec42783          	lw	a5,-20(s0)
20017714:	43dc                	lw	a5,4(a5)
20017716:	fe842583          	lw	a1,-24(s0)
2001771a:	853e                	mv	a0,a5
2001771c:	f1fff0ef          	jal	ra,2001763a <_metal_clock_append_to_callbacks>
20017720:	872a                	mv	a4,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:147
    clk->_pre_rate_change_callback =
20017722:	fec42783          	lw	a5,-20(s0)
20017726:	c3d8                	sw	a4,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:149
}
20017728:	0001                	nop
2001772a:	40f2                	lw	ra,28(sp)
2001772c:	4462                	lw	s0,24(sp)
2001772e:	6105                	addi	sp,sp,32
20017730:	8082                	ret

20017732 <metal_clock_register_post_rate_change_callback>:
metal_clock_register_post_rate_change_callback():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:159
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_post_rate_change_callback(struct metal_clock *clk,
                                               metal_clock_callback *cb) {
20017732:	1101                	addi	sp,sp,-32
20017734:	ce06                	sw	ra,28(sp)
20017736:	cc22                	sw	s0,24(sp)
20017738:	1000                	addi	s0,sp,32
2001773a:	fea42623          	sw	a0,-20(s0)
2001773e:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:161
    clk->_post_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_post_rate_change_callback, cb);
20017742:	fec42783          	lw	a5,-20(s0)
20017746:	479c                	lw	a5,8(a5)
20017748:	fe842583          	lw	a1,-24(s0)
2001774c:	853e                	mv	a0,a5
2001774e:	eedff0ef          	jal	ra,2001763a <_metal_clock_append_to_callbacks>
20017752:	872a                	mv	a4,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:160
    clk->_post_rate_change_callback =
20017754:	fec42783          	lw	a5,-20(s0)
20017758:	c798                	sw	a4,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:162
}
2001775a:	0001                	nop
2001775c:	40f2                	lw	ra,28(sp)
2001775e:	4462                	lw	s0,24(sp)
20017760:	6105                	addi	sp,sp,32
20017762:	8082                	ret

20017764 <metal_cpu_get_timer>:
metal_cpu_get_timer():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:73
 * Get the value of the cycle count timer for a given CPU
 *
 * @param cpu The CPU device handle
 * @return The value of the CPU cycle count timer
 */
__inline__ unsigned long long metal_cpu_get_timer(struct metal_cpu *cpu) {
20017764:	1101                	addi	sp,sp,-32
20017766:	ce06                	sw	ra,28(sp)
20017768:	cc22                	sw	s0,24(sp)
2001776a:	1000                	addi	s0,sp,32
2001776c:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:74
    return cpu->vtable->mcycle_get(cpu);
20017770:	fec42783          	lw	a5,-20(s0)
20017774:	439c                	lw	a5,0(a5)
20017776:	439c                	lw	a5,0(a5)
20017778:	fec42503          	lw	a0,-20(s0)
2001777c:	9782                	jalr	a5
2001777e:	87aa                	mv	a5,a0
20017780:	882e                	mv	a6,a1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:75
}
20017782:	853e                	mv	a0,a5
20017784:	85c2                	mv	a1,a6
20017786:	40f2                	lw	ra,28(sp)
20017788:	4462                	lw	s0,24(sp)
2001778a:	6105                	addi	sp,sp,32
2001778c:	8082                	ret

2001778e <metal_cpu_get_timebase>:
metal_cpu_get_timebase():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:84
 * Get the value of the timebase of the cycle count timer
 *
 * @param cpu The CPU device handle
 * @return The value of the cycle count timer timebase
 */
__inline__ unsigned long long metal_cpu_get_timebase(struct metal_cpu *cpu) {
2001778e:	1101                	addi	sp,sp,-32
20017790:	ce06                	sw	ra,28(sp)
20017792:	cc22                	sw	s0,24(sp)
20017794:	1000                	addi	s0,sp,32
20017796:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:85
    return cpu->vtable->timebase_get(cpu);
2001779a:	fec42783          	lw	a5,-20(s0)
2001779e:	439c                	lw	a5,0(a5)
200177a0:	43dc                	lw	a5,4(a5)
200177a2:	fec42503          	lw	a0,-20(s0)
200177a6:	9782                	jalr	a5
200177a8:	87aa                	mv	a5,a0
200177aa:	882e                	mv	a6,a1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:86
}
200177ac:	853e                	mv	a0,a5
200177ae:	85c2                	mv	a1,a6
200177b0:	40f2                	lw	ra,28(sp)
200177b2:	4462                	lw	s0,24(sp)
200177b4:	6105                	addi	sp,sp,32
200177b6:	8082                	ret

200177b8 <metal_cpu_interrupt_controller>:
metal_cpu_interrupt_controller():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:224
 *
 * @param cpu The CPU device handle
 * @return The handle for the CPU interrupt controller
 */
__inline__ struct metal_interrupt *
metal_cpu_interrupt_controller(struct metal_cpu *cpu) {
200177b8:	1101                	addi	sp,sp,-32
200177ba:	ce06                	sw	ra,28(sp)
200177bc:	cc22                	sw	s0,24(sp)
200177be:	1000                	addi	s0,sp,32
200177c0:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:225
    return cpu->vtable->controller_interrupt(cpu);
200177c4:	fec42783          	lw	a5,-20(s0)
200177c8:	439c                	lw	a5,0(a5)
200177ca:	57dc                	lw	a5,44(a5)
200177cc:	fec42503          	lw	a0,-20(s0)
200177d0:	9782                	jalr	a5
200177d2:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:226
}
200177d4:	853e                	mv	a0,a5
200177d6:	40f2                	lw	ra,28(sp)
200177d8:	4462                	lw	s0,24(sp)
200177da:	6105                	addi	sp,sp,32
200177dc:	8082                	ret

200177de <metal_cpu_get>:
metal_cpu_get():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:7
/* SPDX-License-Identifier: Apache-2.0 */

#include <metal/cpu.h>
#include <metal/machine.h>

struct metal_cpu *metal_cpu_get(unsigned int hartid) {
200177de:	1101                	addi	sp,sp,-32
200177e0:	ce22                	sw	s0,28(sp)
200177e2:	1000                	addi	s0,sp,32
200177e4:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:8
    if (hartid < __METAL_DT_MAX_HARTS) {
200177e8:	fec42783          	lw	a5,-20(s0)
200177ec:	eb99                	bnez	a5,20017802 <metal_cpu_get+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:9
        return (struct metal_cpu *)__metal_cpu_table[hartid];
200177ee:	800017b7          	lui	a5,0x80001
200177f2:	fec42703          	lw	a4,-20(s0)
200177f6:	070a                	slli	a4,a4,0x2
200177f8:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
200177fc:	97ba                	add	a5,a5,a4
200177fe:	439c                	lw	a5,0(a5)
20017800:	a011                	j	20017804 <metal_cpu_get+0x26>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:11
    }
    return NULL;
20017802:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:12
}
20017804:	853e                	mv	a0,a5
20017806:	4472                	lw	s0,28(sp)
20017808:	6105                	addi	sp,sp,32
2001780a:	8082                	ret

2001780c <metal_cpu_get_current_hartid>:
metal_cpu_get_current_hartid():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:14

int metal_cpu_get_current_hartid() {
2001780c:	1101                	addi	sp,sp,-32
2001780e:	ce22                	sw	s0,28(sp)
20017810:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:17
#ifdef __riscv
    int mhartid;
    __asm__ volatile("csrr %0, mhartid" : "=r"(mhartid));
20017812:	f14027f3          	csrr	a5,mhartid
20017816:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:18
    return mhartid;
2001781a:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:20
#endif
}
2001781e:	853e                	mv	a0,a5
20017820:	4472                	lw	s0,28(sp)
20017822:	6105                	addi	sp,sp,32
20017824:	8082                	ret

20017826 <metal_i2c_init>:
metal_i2c_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:48
 * @param i2c The handle for the I2C device to initialize.
 * @param baud_rate The baud rate for the I2C device to operate at.
 * @param mode I2C operation mode.
 */
inline void metal_i2c_init(struct metal_i2c *i2c, unsigned int baud_rate,
                           metal_i2c_mode_t mode) {
20017826:	1101                	addi	sp,sp,-32
20017828:	ce06                	sw	ra,28(sp)
2001782a:	cc22                	sw	s0,24(sp)
2001782c:	1000                	addi	s0,sp,32
2001782e:	fea42623          	sw	a0,-20(s0)
20017832:	feb42423          	sw	a1,-24(s0)
20017836:	fec42223          	sw	a2,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:49
    i2c->vtable->init(i2c, baud_rate, mode);
2001783a:	fec42783          	lw	a5,-20(s0)
2001783e:	439c                	lw	a5,0(a5)
20017840:	439c                	lw	a5,0(a5)
20017842:	fe442603          	lw	a2,-28(s0)
20017846:	fe842583          	lw	a1,-24(s0)
2001784a:	fec42503          	lw	a0,-20(s0)
2001784e:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:50
}
20017850:	0001                	nop
20017852:	40f2                	lw	ra,28(sp)
20017854:	4462                	lw	s0,24(sp)
20017856:	6105                	addi	sp,sp,32
20017858:	8082                	ret

2001785a <metal_i2c_write>:
metal_i2c_write():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:62
 * @param stop_bit Enable / Disable STOP condition.
 * @return 0 if the write succeeds.
 */
inline int metal_i2c_write(struct metal_i2c *i2c, unsigned int addr,
                           unsigned int len, unsigned char buf[],
                           metal_i2c_stop_bit_t stop_bit) {
2001785a:	7179                	addi	sp,sp,-48
2001785c:	d606                	sw	ra,44(sp)
2001785e:	d422                	sw	s0,40(sp)
20017860:	1800                	addi	s0,sp,48
20017862:	fea42623          	sw	a0,-20(s0)
20017866:	feb42423          	sw	a1,-24(s0)
2001786a:	fec42223          	sw	a2,-28(s0)
2001786e:	fed42023          	sw	a3,-32(s0)
20017872:	fce42e23          	sw	a4,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:63
    return i2c->vtable->write(i2c, addr, len, buf, stop_bit);
20017876:	fec42783          	lw	a5,-20(s0)
2001787a:	439c                	lw	a5,0(a5)
2001787c:	43dc                	lw	a5,4(a5)
2001787e:	fdc42703          	lw	a4,-36(s0)
20017882:	fe042683          	lw	a3,-32(s0)
20017886:	fe442603          	lw	a2,-28(s0)
2001788a:	fe842583          	lw	a1,-24(s0)
2001788e:	fec42503          	lw	a0,-20(s0)
20017892:	9782                	jalr	a5
20017894:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:64
}
20017896:	853e                	mv	a0,a5
20017898:	50b2                	lw	ra,44(sp)
2001789a:	5422                	lw	s0,40(sp)
2001789c:	6145                	addi	sp,sp,48
2001789e:	8082                	ret

200178a0 <metal_i2c_read>:
metal_i2c_read():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:76
 * @param stop_bit Enable / Disable STOP condition.
 * @return 0 if the read succeeds.
 */
inline int metal_i2c_read(struct metal_i2c *i2c, unsigned int addr,
                          unsigned int len, unsigned char buf[],
                          metal_i2c_stop_bit_t stop_bit) {
200178a0:	7179                	addi	sp,sp,-48
200178a2:	d606                	sw	ra,44(sp)
200178a4:	d422                	sw	s0,40(sp)
200178a6:	1800                	addi	s0,sp,48
200178a8:	fea42623          	sw	a0,-20(s0)
200178ac:	feb42423          	sw	a1,-24(s0)
200178b0:	fec42223          	sw	a2,-28(s0)
200178b4:	fed42023          	sw	a3,-32(s0)
200178b8:	fce42e23          	sw	a4,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:77
    return i2c->vtable->read(i2c, addr, len, buf, stop_bit);
200178bc:	fec42783          	lw	a5,-20(s0)
200178c0:	439c                	lw	a5,0(a5)
200178c2:	479c                	lw	a5,8(a5)
200178c4:	fdc42703          	lw	a4,-36(s0)
200178c8:	fe042683          	lw	a3,-32(s0)
200178cc:	fe442603          	lw	a2,-28(s0)
200178d0:	fe842583          	lw	a1,-24(s0)
200178d4:	fec42503          	lw	a0,-20(s0)
200178d8:	9782                	jalr	a5
200178da:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:78
}
200178dc:	853e                	mv	a0,a5
200178de:	50b2                	lw	ra,44(sp)
200178e0:	5422                	lw	s0,40(sp)
200178e2:	6145                	addi	sp,sp,48
200178e4:	8082                	ret

200178e6 <metal_i2c_set_baud_rate>:
metal_i2c_set_baud_rate():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:108
/*! @brief Set the current baud rate of the I2C device.
 * @param i2c The handle for the I2C device.
 * @param baud_rate The desired baud rate of the I2C device.
 * @return 0 If the baud rate is successfully changed.
 */
inline int metal_i2c_set_baud_rate(struct metal_i2c *i2c, int baud_rate) {
200178e6:	1101                	addi	sp,sp,-32
200178e8:	ce06                	sw	ra,28(sp)
200178ea:	cc22                	sw	s0,24(sp)
200178ec:	1000                	addi	s0,sp,32
200178ee:	fea42623          	sw	a0,-20(s0)
200178f2:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:109
    return i2c->vtable->set_baud_rate(i2c, baud_rate);
200178f6:	fec42783          	lw	a5,-20(s0)
200178fa:	439c                	lw	a5,0(a5)
200178fc:	4bd8                	lw	a4,20(a5)
200178fe:	fe842783          	lw	a5,-24(s0)
20017902:	85be                	mv	a1,a5
20017904:	fec42503          	lw	a0,-20(s0)
20017908:	9702                	jalr	a4
2001790a:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:110
}
2001790c:	853e                	mv	a0,a5
2001790e:	40f2                	lw	ra,28(sp)
20017910:	4462                	lw	s0,24(sp)
20017912:	6105                	addi	sp,sp,32
20017914:	8082                	ret

20017916 <metal_i2c_get_device>:
metal_i2c_get_device():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/i2c.c:21
                                     unsigned char txbuf[], unsigned int txlen,
                                     unsigned char rxbuf[], unsigned int rxlen);
extern inline int metal_i2c_get_baud_rate(struct metal_i2c *i2c);
extern inline int metal_i2c_set_baud_rate(struct metal_i2c *i2c, int baud_rate);

struct metal_i2c *metal_i2c_get_device(unsigned int device_num) {
20017916:	1101                	addi	sp,sp,-32
20017918:	ce22                	sw	s0,28(sp)
2001791a:	1000                	addi	s0,sp,32
2001791c:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/i2c.c:23
#if __METAL_DT_MAX_I2CS > 0
    if (device_num < __METAL_DT_MAX_I2CS) {
20017920:	fec42783          	lw	a5,-20(s0)
20017924:	eb99                	bnez	a5,2001793a <metal_i2c_get_device+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/i2c.c:24
        return (struct metal_i2c *)__metal_i2c_table[device_num];
20017926:	800017b7          	lui	a5,0x80001
2001792a:	fec42703          	lw	a4,-20(s0)
2001792e:	070a                	slli	a4,a4,0x2
20017930:	ac478793          	addi	a5,a5,-1340 # 80000ac4 <metal_segment_heap_target_end+0xfffff304>
20017934:	97ba                	add	a5,a5,a4
20017936:	439c                	lw	a5,0(a5)
20017938:	a011                	j	2001793c <metal_i2c_get_device+0x26>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/i2c.c:27
    }
#endif
    return NULL;
2001793a:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/i2c.c:28
}
2001793c:	853e                	mv	a0,a5
2001793e:	4472                	lw	s0,28(sp)
20017940:	6105                	addi	sp,sp,32
20017942:	8082                	ret

20017944 <metal_shutdown>:
metal_shutdown():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/shutdown.c:17
    __metal_shutdown_exit(__METAL_DT_SHUTDOWN_HANDLE, code);
}
#else
#pragma message(                                                               \
    "There is no defined shutdown mechanism, metal_shutdown() will spin.")
void metal_shutdown(int code) {
20017944:	1101                	addi	sp,sp,-32
20017946:	ce22                	sw	s0,28(sp)
20017948:	1000                	addi	s0,sp,32
2001794a:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/shutdown.c:19 (discriminator 1)
    while (1) {
        __asm__ volatile("nop");
2001794e:	0001                	nop
20017950:	bffd                	j	2001794e <metal_shutdown+0xa>

20017952 <metal_gettimeofday>:
metal_gettimeofday():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:9
#include <metal/time.h>
#include <metal/timer.h>

#include <stddef.h>

int metal_gettimeofday(struct timeval *tp, void *tzp) {
20017952:	7139                	addi	sp,sp,-64
20017954:	de06                	sw	ra,60(sp)
20017956:	dc22                	sw	s0,56(sp)
20017958:	da4a                	sw	s2,52(sp)
2001795a:	d84e                	sw	s3,48(sp)
2001795c:	0080                	addi	s0,sp,64
2001795e:	fca42623          	sw	a0,-52(s0)
20017962:	fcb42423          	sw	a1,-56(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:12
    int rv;
    unsigned long long mcc, timebase;
    rv = metal_timer_get_cyclecount(0, &mcc);
20017966:	fe040793          	addi	a5,s0,-32
2001796a:	85be                	mv	a1,a5
2001796c:	4501                	li	a0,0
2001796e:	24d9                	jal	20017c34 <metal_timer_get_cyclecount>
20017970:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:13
    if (rv != 0) {
20017974:	fec42783          	lw	a5,-20(s0)
20017978:	c399                	beqz	a5,2001797e <metal_gettimeofday+0x2c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:14
        return -1;
2001797a:	57fd                	li	a5,-1
2001797c:	a07d                	j	20017a2a <metal_gettimeofday+0xd8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:16
    }
    rv = metal_timer_get_timebase_frequency(0, &timebase);
2001797e:	fd840793          	addi	a5,s0,-40
20017982:	85be                	mv	a1,a5
20017984:	4501                	li	a0,0
20017986:	2ce5                	jal	20017c7e <metal_timer_get_timebase_frequency>
20017988:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:17
    if (rv != 0) {
2001798c:	fec42783          	lw	a5,-20(s0)
20017990:	c399                	beqz	a5,20017996 <metal_gettimeofday+0x44>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:18
        return -1;
20017992:	57fd                	li	a5,-1
20017994:	a859                	j	20017a2a <metal_gettimeofday+0xd8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:20
    }
    tp->tv_sec = mcc / timebase;
20017996:	fe042783          	lw	a5,-32(s0)
2001799a:	fe442803          	lw	a6,-28(s0)
2001799e:	fd842683          	lw	a3,-40(s0)
200179a2:	fdc42703          	lw	a4,-36(s0)
200179a6:	8636                	mv	a2,a3
200179a8:	86ba                	mv	a3,a4
200179aa:	853e                	mv	a0,a5
200179ac:	85c2                	mv	a1,a6
200179ae:	25c5                	jal	2001808e <__udivdi3>
200179b0:	87aa                	mv	a5,a0
200179b2:	882e                	mv	a6,a1
200179b4:	fcc42703          	lw	a4,-52(s0)
200179b8:	c31c                	sw	a5,0(a4)
200179ba:	01072223          	sw	a6,4(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:21
    tp->tv_usec = mcc % timebase * 1000000 / timebase;
200179be:	fe042783          	lw	a5,-32(s0)
200179c2:	fe442803          	lw	a6,-28(s0)
200179c6:	fd842683          	lw	a3,-40(s0)
200179ca:	fdc42703          	lw	a4,-36(s0)
200179ce:	8636                	mv	a2,a3
200179d0:	86ba                	mv	a3,a4
200179d2:	853e                	mv	a0,a5
200179d4:	85c2                	mv	a1,a6
200179d6:	217000ef          	jal	ra,200183ec <__umoddi3>
200179da:	87aa                	mv	a5,a0
200179dc:	882e                	mv	a6,a1
200179de:	000f4737          	lui	a4,0xf4
200179e2:	24070713          	addi	a4,a4,576 # f4240 <__heap_size+0xf3a40>
200179e6:	02e806b3          	mul	a3,a6,a4
200179ea:	4701                	li	a4,0
200179ec:	02e78733          	mul	a4,a5,a4
200179f0:	96ba                	add	a3,a3,a4
200179f2:	000f4737          	lui	a4,0xf4
200179f6:	24070713          	addi	a4,a4,576 # f4240 <__heap_size+0xf3a40>
200179fa:	02e78633          	mul	a2,a5,a4
200179fe:	02e7b9b3          	mulhu	s3,a5,a4
20017a02:	8932                	mv	s2,a2
20017a04:	013687b3          	add	a5,a3,s3
20017a08:	89be                	mv	s3,a5
20017a0a:	fd842783          	lw	a5,-40(s0)
20017a0e:	fdc42803          	lw	a6,-36(s0)
20017a12:	863e                	mv	a2,a5
20017a14:	86c2                	mv	a3,a6
20017a16:	854a                	mv	a0,s2
20017a18:	85ce                	mv	a1,s3
20017a1a:	2d95                	jal	2001808e <__udivdi3>
20017a1c:	87aa                	mv	a5,a0
20017a1e:	882e                	mv	a6,a1
20017a20:	873e                	mv	a4,a5
20017a22:	fcc42783          	lw	a5,-52(s0)
20017a26:	c798                	sw	a4,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:22
    return 0;
20017a28:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:23 (discriminator 1)
}
20017a2a:	853e                	mv	a0,a5
20017a2c:	50f2                	lw	ra,60(sp)
20017a2e:	5462                	lw	s0,56(sp)
20017a30:	5952                	lw	s2,52(sp)
20017a32:	59c2                	lw	s3,48(sp)
20017a34:	6121                	addi	sp,sp,64
20017a36:	8082                	ret

20017a38 <metal_time>:
metal_time():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:25

time_t metal_time(void) {
20017a38:	1101                	addi	sp,sp,-32
20017a3a:	ce06                	sw	ra,28(sp)
20017a3c:	cc22                	sw	s0,24(sp)
20017a3e:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:28
    struct timeval now;

    if (metal_gettimeofday(&now, NULL) < 0)
20017a40:	fe040793          	addi	a5,s0,-32
20017a44:	4581                	li	a1,0
20017a46:	853e                	mv	a0,a5
20017a48:	f0bff0ef          	jal	ra,20017952 <metal_gettimeofday>
20017a4c:	87aa                	mv	a5,a0
20017a4e:	0007d863          	bgez	a5,20017a5e <metal_time+0x26>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:29
        now.tv_sec = (time_t)-1;
20017a52:	57fd                	li	a5,-1
20017a54:	587d                	li	a6,-1
20017a56:	fef42023          	sw	a5,-32(s0)
20017a5a:	ff042223          	sw	a6,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:31

    return now.tv_sec;
20017a5e:	fe042783          	lw	a5,-32(s0)
20017a62:	fe442803          	lw	a6,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:32
}
20017a66:	853e                	mv	a0,a5
20017a68:	85c2                	mv	a1,a6
20017a6a:	40f2                	lw	ra,28(sp)
20017a6c:	4462                	lw	s0,24(sp)
20017a6e:	6105                	addi	sp,sp,32
20017a70:	8082                	ret

20017a72 <metal_uart_init>:
metal_uart_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:59
 more than once.
 *
 * @param uart The UART device handle
 * @param baud_rate the baud rate to set the UART to
 */
__inline__ void metal_uart_init(struct metal_uart *uart, int baud_rate) {
20017a72:	1101                	addi	sp,sp,-32
20017a74:	ce06                	sw	ra,28(sp)
20017a76:	cc22                	sw	s0,24(sp)
20017a78:	1000                	addi	s0,sp,32
20017a7a:	fea42623          	sw	a0,-20(s0)
20017a7e:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:60
    uart->vtable->init(uart, baud_rate);
20017a82:	fec42783          	lw	a5,-20(s0)
20017a86:	439c                	lw	a5,0(a5)
20017a88:	439c                	lw	a5,0(a5)
20017a8a:	fe842583          	lw	a1,-24(s0)
20017a8e:	fec42503          	lw	a0,-20(s0)
20017a92:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:61
}
20017a94:	0001                	nop
20017a96:	40f2                	lw	ra,28(sp)
20017a98:	4462                	lw	s0,24(sp)
20017a9a:	6105                	addi	sp,sp,32
20017a9c:	8082                	ret

20017a9e <metal_uart_putc>:
metal_uart_putc():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:69
 * @brief Output a character over the UART
 * @param uart The UART device handle
 * @param c The character to send over the UART
 * @return 0 upon success
 */
__inline__ int metal_uart_putc(struct metal_uart *uart, int c) {
20017a9e:	1101                	addi	sp,sp,-32
20017aa0:	ce06                	sw	ra,28(sp)
20017aa2:	cc22                	sw	s0,24(sp)
20017aa4:	1000                	addi	s0,sp,32
20017aa6:	fea42623          	sw	a0,-20(s0)
20017aaa:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:70
    return uart->vtable->putc(uart, c);
20017aae:	fec42783          	lw	a5,-20(s0)
20017ab2:	439c                	lw	a5,0(a5)
20017ab4:	43dc                	lw	a5,4(a5)
20017ab6:	fe842583          	lw	a1,-24(s0)
20017aba:	fec42503          	lw	a0,-20(s0)
20017abe:	9782                	jalr	a5
20017ac0:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:71
}
20017ac2:	853e                	mv	a0,a5
20017ac4:	40f2                	lw	ra,28(sp)
20017ac6:	4462                	lw	s0,24(sp)
20017ac8:	6105                	addi	sp,sp,32
20017aca:	8082                	ret

20017acc <metal_uart_set_baud_rate>:
metal_uart_set_baud_rate():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:111
 * @param uart The UART device handle
 * @param baud_rate The baud rate to configure
 * @return the new baud rate of the UART
 */
__inline__ int metal_uart_set_baud_rate(struct metal_uart *uart,
                                        int baud_rate) {
20017acc:	1101                	addi	sp,sp,-32
20017ace:	ce06                	sw	ra,28(sp)
20017ad0:	cc22                	sw	s0,24(sp)
20017ad2:	1000                	addi	s0,sp,32
20017ad4:	fea42623          	sw	a0,-20(s0)
20017ad8:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:112
    return uart->vtable->set_baud_rate(uart, baud_rate);
20017adc:	fec42783          	lw	a5,-20(s0)
20017ae0:	439c                	lw	a5,0(a5)
20017ae2:	4bdc                	lw	a5,20(a5)
20017ae4:	fe842583          	lw	a1,-24(s0)
20017ae8:	fec42503          	lw	a0,-20(s0)
20017aec:	9782                	jalr	a5
20017aee:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:113
}
20017af0:	853e                	mv	a0,a5
20017af2:	40f2                	lw	ra,28(sp)
20017af4:	4462                	lw	s0,24(sp)
20017af6:	6105                	addi	sp,sp,32
20017af8:	8082                	ret
20017afa:	0000                	unimp
20017afc:	0000                	unimp
	...

20017b00 <__metal_vector_table>:
IRQ_0():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:96
#endif
.option norvc
.global __metal_vector_table
__metal_vector_table:
IRQ_0:
        j metal_interrupt_vector_handler
20017b00:	e00fb06f          	j	20013100 <metal_interrupt_vector_handler>

20017b04 <IRQ_1>:
IRQ_1():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:98
IRQ_1:
        j metal_interrupt_vector_handler
20017b04:	dfcfb06f          	j	20013100 <metal_interrupt_vector_handler>

20017b08 <IRQ_2>:
IRQ_2():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:100
IRQ_2:
        j metal_interrupt_vector_handler
20017b08:	df8fb06f          	j	20013100 <metal_interrupt_vector_handler>

20017b0c <IRQ_3>:
IRQ_3():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:102
IRQ_3:
        j metal_software_interrupt_vector_handler
20017b0c:	e22fb06f          	j	2001312e <metal_software_interrupt_vector_handler>

20017b10 <IRQ_4>:
IRQ_4():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:104
IRQ_4:
        j metal_interrupt_vector_handler
20017b10:	df0fb06f          	j	20013100 <metal_interrupt_vector_handler>

20017b14 <IRQ_5>:
IRQ_5():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:106
IRQ_5:
        j metal_interrupt_vector_handler
20017b14:	decfb06f          	j	20013100 <metal_interrupt_vector_handler>

20017b18 <IRQ_6>:
IRQ_6():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:108
IRQ_6:
        j metal_interrupt_vector_handler
20017b18:	de8fb06f          	j	20013100 <metal_interrupt_vector_handler>

20017b1c <IRQ_7>:
IRQ_7():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:110
IRQ_7:
        j metal_timer_interrupt_vector_handler
20017b1c:	f0cfb06f          	j	20013228 <metal_timer_interrupt_vector_handler>

20017b20 <IRQ_8>:
IRQ_8():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:112
IRQ_8:
        j metal_interrupt_vector_handler
20017b20:	de0fb06f          	j	20013100 <metal_interrupt_vector_handler>

20017b24 <IRQ_9>:
IRQ_9():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:114
IRQ_9:
        j metal_interrupt_vector_handler
20017b24:	ddcfb06f          	j	20013100 <metal_interrupt_vector_handler>

20017b28 <IRQ_10>:
IRQ_10():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:116
IRQ_10:
        j metal_interrupt_vector_handler
20017b28:	dd8fb06f          	j	20013100 <metal_interrupt_vector_handler>

20017b2c <IRQ_11>:
IRQ_11():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:118
IRQ_11:
        j metal_interrupt_vector_handler
20017b2c:	dd4fb06f          	j	20013100 <metal_interrupt_vector_handler>

20017b30 <IRQ_12>:
IRQ_12():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:120
IRQ_12:
        j metal_interrupt_vector_handler
20017b30:	dd0fb06f          	j	20013100 <metal_interrupt_vector_handler>

20017b34 <IRQ_13>:
IRQ_13():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:122
IRQ_13:
        j metal_interrupt_vector_handler
20017b34:	dccfb06f          	j	20013100 <metal_interrupt_vector_handler>

20017b38 <IRQ_14>:
IRQ_14():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:124
IRQ_14:
        j metal_interrupt_vector_handler
20017b38:	dc8fb06f          	j	20013100 <metal_interrupt_vector_handler>

20017b3c <IRQ_15>:
IRQ_15():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:126
IRQ_15:
        j metal_interrupt_vector_handler
20017b3c:	dc4fb06f          	j	20013100 <metal_interrupt_vector_handler>

20017b40 <IRQ_LC0>:
IRQ_LC0():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:128
IRQ_LC0:
        j metal_lc0_interrupt_vector_handler
20017b40:	a39fb06f          	j	20013578 <metal_lc0_interrupt_vector_handler>

20017b44 <IRQ_LC1>:
IRQ_LC1():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:130
IRQ_LC1:
        j metal_lc1_interrupt_vector_handler
20017b44:	acbfb06f          	j	2001360e <metal_lc1_interrupt_vector_handler>

20017b48 <IRQ_LC2>:
IRQ_LC2():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:132
IRQ_LC2:
        j metal_lc2_interrupt_vector_handler
20017b48:	b5dfb06f          	j	200136a4 <metal_lc2_interrupt_vector_handler>

20017b4c <IRQ_LC3>:
IRQ_LC3():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:134
IRQ_LC3:
        j metal_lc3_interrupt_vector_handler
20017b4c:	beffb06f          	j	2001373a <metal_lc3_interrupt_vector_handler>

20017b50 <IRQ_LC4>:
IRQ_LC4():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:136
IRQ_LC4:
        j metal_lc4_interrupt_vector_handler
20017b50:	c81fb06f          	j	200137d0 <metal_lc4_interrupt_vector_handler>

20017b54 <IRQ_LC5>:
IRQ_LC5():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:138
IRQ_LC5:
        j metal_lc5_interrupt_vector_handler
20017b54:	d13fb06f          	j	20013866 <metal_lc5_interrupt_vector_handler>

20017b58 <IRQ_LC6>:
IRQ_LC6():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:140
IRQ_LC6:
        j metal_lc6_interrupt_vector_handler
20017b58:	da5fb06f          	j	200138fc <metal_lc6_interrupt_vector_handler>

20017b5c <IRQ_LC7>:
IRQ_LC7():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:142
IRQ_LC7:
        j metal_lc7_interrupt_vector_handler
20017b5c:	e37fb06f          	j	20013992 <metal_lc7_interrupt_vector_handler>

20017b60 <IRQ_LC8>:
IRQ_LC8():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:144
IRQ_LC8:
        j metal_lc8_interrupt_vector_handler
20017b60:	ec9fb06f          	j	20013a28 <metal_lc8_interrupt_vector_handler>

20017b64 <IRQ_LC9>:
IRQ_LC9():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:146
IRQ_LC9:
        j metal_lc9_interrupt_vector_handler
20017b64:	f5bfb06f          	j	20013abe <metal_lc9_interrupt_vector_handler>

20017b68 <IRQ_LC10>:
IRQ_LC10():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:148
IRQ_LC10:
        j metal_lc10_interrupt_vector_handler
20017b68:	fedfb06f          	j	20013b54 <metal_lc10_interrupt_vector_handler>

20017b6c <IRQ_LC11>:
IRQ_LC11():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:150
IRQ_LC11:
        j metal_lc11_interrupt_vector_handler
20017b6c:	87efc06f          	j	20013bea <metal_lc11_interrupt_vector_handler>

20017b70 <IRQ_LC12>:
IRQ_LC12():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:152
IRQ_LC12:
        j metal_lc12_interrupt_vector_handler
20017b70:	910fc06f          	j	20013c80 <metal_lc12_interrupt_vector_handler>

20017b74 <IRQ_LC13>:
IRQ_LC13():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:154
IRQ_LC13:
        j metal_lc13_interrupt_vector_handler
20017b74:	9a2fc06f          	j	20013d16 <metal_lc13_interrupt_vector_handler>

20017b78 <IRQ_LC14>:
IRQ_LC14():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:156
IRQ_LC14:
        j metal_lc14_interrupt_vector_handler
20017b78:	a34fc06f          	j	20013dac <metal_lc14_interrupt_vector_handler>

20017b7c <IRQ_LC15>:
IRQ_LC15():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:158
IRQ_LC15:
        j metal_lc15_interrupt_vector_handler
20017b7c:	ac6fc06f          	j	20013e42 <metal_lc15_interrupt_vector_handler>

20017b80 <__metal_driver_fixed_clock_rate>:
__metal_driver_fixed_clock_rate():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:208
{
20017b80:	1101                	addi	sp,sp,-32
20017b82:	ce22                	sw	s0,28(sp)
20017b84:	1000                	addi	s0,sp,32
20017b86:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:209
	if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_0) {
20017b8a:	fec42703          	lw	a4,-20(s0)
20017b8e:	800007b7          	lui	a5,0x80000
20017b92:	06078793          	addi	a5,a5,96 # 80000060 <metal_segment_heap_target_end+0xffffe8a0>
20017b96:	00f71763          	bne	a4,a5,20017ba4 <__metal_driver_fixed_clock_rate+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:210
		return METAL_FIXED_CLOCK_0_CLOCK_FREQUENCY;
20017b9a:	00f427b7          	lui	a5,0xf42
20017b9e:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
20017ba2:	a099                	j	20017be8 <__metal_driver_fixed_clock_rate+0x68>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:212
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_2) {
20017ba4:	fec42703          	lw	a4,-20(s0)
20017ba8:	800007b7          	lui	a5,0x80000
20017bac:	06c78793          	addi	a5,a5,108 # 8000006c <metal_segment_heap_target_end+0xffffe8ac>
20017bb0:	00f71763          	bne	a4,a5,20017bbe <__metal_driver_fixed_clock_rate+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:213
		return METAL_FIXED_CLOCK_2_CLOCK_FREQUENCY;
20017bb4:	044aa7b7          	lui	a5,0x44aa
20017bb8:	20078793          	addi	a5,a5,512 # 44aa200 <__heap_size+0x44a9a00>
20017bbc:	a035                	j	20017be8 <__metal_driver_fixed_clock_rate+0x68>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:215
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_5) {
20017bbe:	fec42703          	lw	a4,-20(s0)
20017bc2:	800007b7          	lui	a5,0x80000
20017bc6:	07878793          	addi	a5,a5,120 # 80000078 <metal_segment_heap_target_end+0xffffe8b8>
20017bca:	00f71463          	bne	a4,a5,20017bd2 <__metal_driver_fixed_clock_rate+0x52>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:216
		return METAL_FIXED_CLOCK_5_CLOCK_FREQUENCY;
20017bce:	67a1                	lui	a5,0x8
20017bd0:	a821                	j	20017be8 <__metal_driver_fixed_clock_rate+0x68>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:218
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_6) {
20017bd2:	fec42703          	lw	a4,-20(s0)
20017bd6:	800007b7          	lui	a5,0x80000
20017bda:	08478793          	addi	a5,a5,132 # 80000084 <metal_segment_heap_target_end+0xffffe8c4>
20017bde:	00f71463          	bne	a4,a5,20017be6 <__metal_driver_fixed_clock_rate+0x66>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:219
		return METAL_FIXED_CLOCK_6_CLOCK_FREQUENCY;
20017be2:	67a1                	lui	a5,0x8
20017be4:	a011                	j	20017be8 <__metal_driver_fixed_clock_rate+0x68>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:222
		return 0;
20017be6:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:224
}
20017be8:	853e                	mv	a0,a5
20017bea:	4472                	lw	s0,28(sp)
20017bec:	6105                	addi	sp,sp,32
20017bee:	8082                	ret

20017bf0 <__metal_driver_fixed_clock_get_rate_hz>:
__metal_driver_fixed_clock_get_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/fixed-clock.c:12

#include <metal/drivers/fixed-clock.h>
#include <metal/machine.h>
#include <stddef.h>

long __metal_driver_fixed_clock_get_rate_hz(const struct metal_clock *gclk) {
20017bf0:	1101                	addi	sp,sp,-32
20017bf2:	ce06                	sw	ra,28(sp)
20017bf4:	cc22                	sw	s0,24(sp)
20017bf6:	1000                	addi	s0,sp,32
20017bf8:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/fixed-clock.c:13
    return __metal_driver_fixed_clock_rate(gclk);
20017bfc:	fec42503          	lw	a0,-20(s0)
20017c00:	f81ff0ef          	jal	ra,20017b80 <__metal_driver_fixed_clock_rate>
20017c04:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/fixed-clock.c:14
}
20017c06:	853e                	mv	a0,a5
20017c08:	40f2                	lw	ra,28(sp)
20017c0a:	4462                	lw	s0,24(sp)
20017c0c:	6105                	addi	sp,sp,32
20017c0e:	8082                	ret

20017c10 <__metal_driver_fixed_clock_set_rate_hz>:
__metal_driver_fixed_clock_set_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/fixed-clock.c:17

long __metal_driver_fixed_clock_set_rate_hz(struct metal_clock *gclk,
                                            long target_hz) {
20017c10:	1101                	addi	sp,sp,-32
20017c12:	ce06                	sw	ra,28(sp)
20017c14:	cc22                	sw	s0,24(sp)
20017c16:	1000                	addi	s0,sp,32
20017c18:	fea42623          	sw	a0,-20(s0)
20017c1c:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/fixed-clock.c:18
    return __metal_driver_fixed_clock_get_rate_hz(gclk);
20017c20:	fec42503          	lw	a0,-20(s0)
20017c24:	fcdff0ef          	jal	ra,20017bf0 <__metal_driver_fixed_clock_get_rate_hz>
20017c28:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/fixed-clock.c:19
}
20017c2a:	853e                	mv	a0,a5
20017c2c:	40f2                	lw	ra,28(sp)
20017c2e:	4462                	lw	s0,24(sp)
20017c30:	6105                	addi	sp,sp,32
20017c32:	8082                	ret

20017c34 <metal_timer_get_cyclecount>:
metal_timer_get_cyclecount():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:15
#endif

#if defined(__METAL_DT_MAX_HARTS)
/* This implementation serves as a small shim that interfaces with the first
 * timer on a system. */
int metal_timer_get_cyclecount(int hartid, unsigned long long *mcc) {
20017c34:	7179                	addi	sp,sp,-48
20017c36:	d606                	sw	ra,44(sp)
20017c38:	d422                	sw	s0,40(sp)
20017c3a:	1800                	addi	s0,sp,48
20017c3c:	fca42e23          	sw	a0,-36(s0)
20017c40:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:16
    struct metal_cpu *cpu = metal_cpu_get(hartid);
20017c44:	fdc42783          	lw	a5,-36(s0)
20017c48:	853e                	mv	a0,a5
20017c4a:	b95ff0ef          	jal	ra,200177de <metal_cpu_get>
20017c4e:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:18

    if (cpu) {
20017c52:	fec42783          	lw	a5,-20(s0)
20017c56:	cf91                	beqz	a5,20017c72 <metal_timer_get_cyclecount+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:19
        *mcc = metal_cpu_get_timer(cpu);
20017c58:	fec42503          	lw	a0,-20(s0)
20017c5c:	b09ff0ef          	jal	ra,20017764 <metal_cpu_get_timer>
20017c60:	87aa                	mv	a5,a0
20017c62:	882e                	mv	a6,a1
20017c64:	fd842703          	lw	a4,-40(s0)
20017c68:	c31c                	sw	a5,0(a4)
20017c6a:	01072223          	sw	a6,4(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:20
        return 0;
20017c6e:	4781                	li	a5,0
20017c70:	a011                	j	20017c74 <metal_timer_get_cyclecount+0x40>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:22
    }
    return -1;
20017c72:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:23
}
20017c74:	853e                	mv	a0,a5
20017c76:	50b2                	lw	ra,44(sp)
20017c78:	5422                	lw	s0,40(sp)
20017c7a:	6145                	addi	sp,sp,48
20017c7c:	8082                	ret

20017c7e <metal_timer_get_timebase_frequency>:
metal_timer_get_timebase_frequency():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:26

int metal_timer_get_timebase_frequency(int hartid,
                                       unsigned long long *timebase) {
20017c7e:	7179                	addi	sp,sp,-48
20017c80:	d606                	sw	ra,44(sp)
20017c82:	d422                	sw	s0,40(sp)
20017c84:	1800                	addi	s0,sp,48
20017c86:	fca42e23          	sw	a0,-36(s0)
20017c8a:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:27
    struct metal_cpu *cpu = metal_cpu_get(hartid);
20017c8e:	fdc42783          	lw	a5,-36(s0)
20017c92:	853e                	mv	a0,a5
20017c94:	b4bff0ef          	jal	ra,200177de <metal_cpu_get>
20017c98:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:29

    if (cpu) {
20017c9c:	fec42783          	lw	a5,-20(s0)
20017ca0:	cf91                	beqz	a5,20017cbc <metal_timer_get_timebase_frequency+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:30
        *timebase = metal_cpu_get_timebase(cpu);
20017ca2:	fec42503          	lw	a0,-20(s0)
20017ca6:	ae9ff0ef          	jal	ra,2001778e <metal_cpu_get_timebase>
20017caa:	87aa                	mv	a5,a0
20017cac:	882e                	mv	a6,a1
20017cae:	fd842703          	lw	a4,-40(s0)
20017cb2:	c31c                	sw	a5,0(a4)
20017cb4:	01072223          	sw	a6,4(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:31
        return 0;
20017cb8:	4781                	li	a5,0
20017cba:	a011                	j	20017cbe <metal_timer_get_timebase_frequency+0x40>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:33
    }
    return -1;
20017cbc:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:34
}
20017cbe:	853e                	mv	a0,a5
20017cc0:	50b2                	lw	ra,44(sp)
20017cc2:	5422                	lw	s0,40(sp)
20017cc4:	6145                	addi	sp,sp,48
20017cc6:	8082                	ret

20017cc8 <_close>:
_close():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_close.c:3
#include <errno.h>

int _close(int file) {
20017cc8:	1101                	addi	sp,sp,-32
20017cca:	ce06                	sw	ra,28(sp)
20017ccc:	cc22                	sw	s0,24(sp)
20017cce:	1000                	addi	s0,sp,32
20017cd0:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_close.c:4
    errno = ENOSYS;
20017cd4:	2a51                	jal	20017e68 <__errno>
20017cd6:	872a                	mv	a4,a0
20017cd8:	05800793          	li	a5,88
20017cdc:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_close.c:5
    return -1;
20017cde:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_close.c:6
}
20017ce0:	853e                	mv	a0,a5
20017ce2:	40f2                	lw	ra,28(sp)
20017ce4:	4462                	lw	s0,24(sp)
20017ce6:	6105                	addi	sp,sp,32
20017ce8:	8082                	ret

20017cea <_fstat>:
_fstat():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_fstat.c:4
#include <errno.h>
#include <sys/stat.h>

int _fstat(int file, struct stat *st) {
20017cea:	1101                	addi	sp,sp,-32
20017cec:	ce06                	sw	ra,28(sp)
20017cee:	cc22                	sw	s0,24(sp)
20017cf0:	1000                	addi	s0,sp,32
20017cf2:	fea42623          	sw	a0,-20(s0)
20017cf6:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_fstat.c:5
    errno = -ENOSYS;
20017cfa:	22bd                	jal	20017e68 <__errno>
20017cfc:	872a                	mv	a4,a0
20017cfe:	fa800793          	li	a5,-88
20017d02:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_fstat.c:6
    return -1;
20017d04:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_fstat.c:7
}
20017d06:	853e                	mv	a0,a5
20017d08:	40f2                	lw	ra,28(sp)
20017d0a:	4462                	lw	s0,24(sp)
20017d0c:	6105                	addi	sp,sp,32
20017d0e:	8082                	ret

20017d10 <_isatty>:
_isatty():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_isatty.c:3
#include <unistd.h>

int _isatty(int file) { return (file == STDOUT_FILENO); }
20017d10:	1101                	addi	sp,sp,-32
20017d12:	ce22                	sw	s0,28(sp)
20017d14:	1000                	addi	s0,sp,32
20017d16:	fea42623          	sw	a0,-20(s0)
20017d1a:	fec42783          	lw	a5,-20(s0)
20017d1e:	17fd                	addi	a5,a5,-1
20017d20:	0017b793          	seqz	a5,a5
20017d24:	0ff7f793          	andi	a5,a5,255
20017d28:	853e                	mv	a0,a5
20017d2a:	4472                	lw	s0,28(sp)
20017d2c:	6105                	addi	sp,sp,32
20017d2e:	8082                	ret

20017d30 <_lseek>:
_lseek():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_lseek.c:4
#include <errno.h>
#include <sys/types.h>

off_t _lseek(int file, off_t ptr, int dir) {
20017d30:	1101                	addi	sp,sp,-32
20017d32:	ce06                	sw	ra,28(sp)
20017d34:	cc22                	sw	s0,24(sp)
20017d36:	1000                	addi	s0,sp,32
20017d38:	fea42623          	sw	a0,-20(s0)
20017d3c:	feb42423          	sw	a1,-24(s0)
20017d40:	fec42223          	sw	a2,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_lseek.c:5
    errno = ENOSYS;
20017d44:	2215                	jal	20017e68 <__errno>
20017d46:	872a                	mv	a4,a0
20017d48:	05800793          	li	a5,88
20017d4c:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_lseek.c:6
    return -1;
20017d4e:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_lseek.c:7
}
20017d50:	853e                	mv	a0,a5
20017d52:	40f2                	lw	ra,28(sp)
20017d54:	4462                	lw	s0,24(sp)
20017d56:	6105                	addi	sp,sp,32
20017d58:	8082                	ret

20017d5a <_read>:
_read():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_read.c:4
#include <errno.h>
#include <sys/types.h>

ssize_t _read(int file, void *ptr, size_t len) {
20017d5a:	1101                	addi	sp,sp,-32
20017d5c:	ce06                	sw	ra,28(sp)
20017d5e:	cc22                	sw	s0,24(sp)
20017d60:	1000                	addi	s0,sp,32
20017d62:	fea42623          	sw	a0,-20(s0)
20017d66:	feb42423          	sw	a1,-24(s0)
20017d6a:	fec42223          	sw	a2,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_read.c:5
    errno = ENOSYS;
20017d6e:	28ed                	jal	20017e68 <__errno>
20017d70:	872a                	mv	a4,a0
20017d72:	05800793          	li	a5,88
20017d76:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_read.c:6
    return -1;
20017d78:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_read.c:7
}
20017d7a:	853e                	mv	a0,a5
20017d7c:	40f2                	lw	ra,28(sp)
20017d7e:	4462                	lw	s0,24(sp)
20017d80:	6105                	addi	sp,sp,32
20017d82:	8082                	ret

20017d84 <_sbrk>:
_sbrk():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:24
int _brk(void *addr) {
    __brk = addr;
    return 0;
}

char *_sbrk(ptrdiff_t incr) {
20017d84:	7179                	addi	sp,sp,-48
20017d86:	d606                	sw	ra,44(sp)
20017d88:	d422                	sw	s0,40(sp)
20017d8a:	1800                	addi	s0,sp,48
20017d8c:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:25
    char *old = __brk;
20017d90:	8481a783          	lw	a5,-1976(gp) # 80000b08 <__brk>
20017d94:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:28

    /* If __heap_size == 0, we can't allocate memory on the heap */
    if (&metal_segment_heap_target_start == &metal_segment_heap_target_end) {
20017d98:	d0018713          	addi	a4,gp,-768 # 80000fc0 <_sp>
20017d9c:	50018793          	addi	a5,gp,1280 # 800017c0 <metal_segment_heap_target_end>
20017da0:	00f71463          	bne	a4,a5,20017da8 <_sbrk+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:29
        return (void *)-1;
20017da4:	57fd                	li	a5,-1
20017da6:	a83d                	j	20017de4 <_sbrk+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:33
    }

    /* Don't move the break past the end of the heap */
    if ((__brk + incr) < &metal_segment_heap_target_end) {
20017da8:	8481a703          	lw	a4,-1976(gp) # 80000b08 <__brk>
20017dac:	fdc42783          	lw	a5,-36(s0)
20017db0:	973e                	add	a4,a4,a5
20017db2:	50018793          	addi	a5,gp,1280 # 800017c0 <metal_segment_heap_target_end>
20017db6:	02f77263          	bgeu	a4,a5,20017dda <_sbrk+0x56>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:34
        __brk += incr;
20017dba:	8481a703          	lw	a4,-1976(gp) # 80000b08 <__brk>
20017dbe:	fdc42783          	lw	a5,-36(s0)
20017dc2:	973e                	add	a4,a4,a5
20017dc4:	84e1a423          	sw	a4,-1976(gp) # 80000b08 <__brk>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:40
    } else {
        __brk = &metal_segment_heap_target_end;
        return (void *)-1;
    }
    /* Scrub out allocated memory to avoid spurious ECC errors */
    metal_mem_scrub(old, incr);
20017dc8:	fdc42583          	lw	a1,-36(s0)
20017dcc:	fec42503          	lw	a0,-20(s0)
20017dd0:	ac2f80ef          	jal	ra,20010092 <metal_mem_scrub>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:42

    return old;
20017dd4:	fec42783          	lw	a5,-20(s0)
20017dd8:	a031                	j	20017de4 <_sbrk+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:36
        __brk = &metal_segment_heap_target_end;
20017dda:	50018713          	addi	a4,gp,1280 # 800017c0 <metal_segment_heap_target_end>
20017dde:	84e1a423          	sw	a4,-1976(gp) # 80000b08 <__brk>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:37
        return (void *)-1;
20017de2:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:43
}
20017de4:	853e                	mv	a0,a5
20017de6:	50b2                	lw	ra,44(sp)
20017de8:	5422                	lw	s0,40(sp)
20017dea:	6145                	addi	sp,sp,48
20017dec:	8082                	ret

20017dee <_write>:
_write():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:7
#include <metal/tty.h>
#include <sys/types.h>
#include <unistd.h>

/* Write to a file.  */
ssize_t _write(int file, const void *ptr, size_t len) {
20017dee:	7179                	addi	sp,sp,-48
20017df0:	d606                	sw	ra,44(sp)
20017df2:	d422                	sw	s0,40(sp)
20017df4:	1800                	addi	s0,sp,48
20017df6:	fca42e23          	sw	a0,-36(s0)
20017dfa:	fcb42c23          	sw	a1,-40(s0)
20017dfe:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:8
    if (file != STDOUT_FILENO) {
20017e02:	fdc42703          	lw	a4,-36(s0)
20017e06:	4785                	li	a5,1
20017e08:	00f70963          	beq	a4,a5,20017e1a <_write+0x2c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:9
        errno = ENOSYS;
20017e0c:	28b1                	jal	20017e68 <__errno>
20017e0e:	872a                	mv	a4,a0
20017e10:	05800793          	li	a5,88
20017e14:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:10
        return -1;
20017e16:	57fd                	li	a5,-1
20017e18:	a835                	j	20017e54 <_write+0x66>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:13
    }

    const char *bptr = ptr;
20017e1a:	fd842783          	lw	a5,-40(s0)
20017e1e:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:14
    for (size_t i = 0; i < len; ++i)
20017e22:	fe042623          	sw	zero,-20(s0)
20017e26:	a005                	j	20017e46 <_write+0x58>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:15 (discriminator 3)
        metal_tty_putc(bptr[i]);
20017e28:	fe842703          	lw	a4,-24(s0)
20017e2c:	fec42783          	lw	a5,-20(s0)
20017e30:	97ba                	add	a5,a5,a4
20017e32:	0007c783          	lbu	a5,0(a5) # 8000 <__heap_size+0x7800>
20017e36:	853e                	mv	a0,a5
20017e38:	223000ef          	jal	ra,2001885a <metal_tty_putc>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:14 (discriminator 3)
    for (size_t i = 0; i < len; ++i)
20017e3c:	fec42783          	lw	a5,-20(s0)
20017e40:	0785                	addi	a5,a5,1
20017e42:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:14 (discriminator 1)
20017e46:	fec42703          	lw	a4,-20(s0)
20017e4a:	fd442783          	lw	a5,-44(s0)
20017e4e:	fcf76de3          	bltu	a4,a5,20017e28 <_write+0x3a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:16
    return 0;
20017e52:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:17
}
20017e54:	853e                	mv	a0,a5
20017e56:	50b2                	lw	ra,44(sp)
20017e58:	5422                	lw	s0,40(sp)
20017e5a:	6145                	addi	sp,sp,48
20017e5c:	8082                	ret

20017e5e <atexit>:
atexit():
20017e5e:	85aa                	mv	a1,a0
20017e60:	4681                	li	a3,0
20017e62:	4601                	li	a2,0
20017e64:	4501                	li	a0,0
20017e66:	a8e1                	j	20017f3e <__register_exitproc>

20017e68 <__errno>:
__errno():
20017e68:	5ffe9797          	auipc	a5,0x5ffe9
20017e6c:	c6078793          	addi	a5,a5,-928 # 80000ac8 <_impure_ptr>
20017e70:	4388                	lw	a0,0(a5)
20017e72:	8082                	ret

20017e74 <exit>:
exit():
20017e74:	1141                	addi	sp,sp,-16
20017e76:	c422                	sw	s0,8(sp)
20017e78:	c606                	sw	ra,12(sp)
20017e7a:	00000797          	auipc	a5,0x0
20017e7e:	14c78793          	addi	a5,a5,332 # 20017fc6 <__call_exitprocs>
20017e82:	842a                	mv	s0,a0
20017e84:	c399                	beqz	a5,20017e8a <exit+0x16>
20017e86:	4581                	li	a1,0
20017e88:	2a3d                	jal	20017fc6 <__call_exitprocs>
20017e8a:	80c18793          	addi	a5,gp,-2036 # 80000acc <_global_impure_ptr>
20017e8e:	4388                	lw	a0,0(a5)
20017e90:	551c                	lw	a5,40(a0)
20017e92:	c391                	beqz	a5,20017e96 <exit+0x22>
20017e94:	9782                	jalr	a5
20017e96:	8522                	mv	a0,s0
20017e98:	1eb000ef          	jal	ra,20018882 <_exit>

20017e9c <__libc_fini_array>:
__libc_fini_array():
20017e9c:	1141                	addi	sp,sp,-16
20017e9e:	ffff8797          	auipc	a5,0xffff8
20017ea2:	45a78793          	addi	a5,a5,1114 # 200102f8 <__fini_array_end>
20017ea6:	c422                	sw	s0,8(sp)
20017ea8:	ffff8417          	auipc	s0,0xffff8
20017eac:	45040413          	addi	s0,s0,1104 # 200102f8 <__fini_array_end>
20017eb0:	8c1d                	sub	s0,s0,a5
20017eb2:	c226                	sw	s1,4(sp)
20017eb4:	c606                	sw	ra,12(sp)
20017eb6:	8409                	srai	s0,s0,0x2
20017eb8:	84be                	mv	s1,a5
20017eba:	e411                	bnez	s0,20017ec6 <__libc_fini_array+0x2a>
20017ebc:	40b2                	lw	ra,12(sp)
20017ebe:	4422                	lw	s0,8(sp)
20017ec0:	4492                	lw	s1,4(sp)
20017ec2:	0141                	addi	sp,sp,16
20017ec4:	8082                	ret
20017ec6:	147d                	addi	s0,s0,-1
20017ec8:	00241793          	slli	a5,s0,0x2
20017ecc:	97a6                	add	a5,a5,s1
20017ece:	439c                	lw	a5,0(a5)
20017ed0:	9782                	jalr	a5
20017ed2:	b7e5                	j	20017eba <__libc_fini_array+0x1e>

20017ed4 <__libc_init_array>:
__libc_init_array():
20017ed4:	1141                	addi	sp,sp,-16
20017ed6:	ffff8797          	auipc	a5,0xffff8
20017eda:	41278793          	addi	a5,a5,1042 # 200102e8 <_metal_sifive_fe310_g000_pll_init_ptr>
20017ede:	c422                	sw	s0,8(sp)
20017ee0:	ffff8417          	auipc	s0,0xffff8
20017ee4:	40840413          	addi	s0,s0,1032 # 200102e8 <_metal_sifive_fe310_g000_pll_init_ptr>
20017ee8:	8c1d                	sub	s0,s0,a5
20017eea:	c226                	sw	s1,4(sp)
20017eec:	c04a                	sw	s2,0(sp)
20017eee:	c606                	sw	ra,12(sp)
20017ef0:	8409                	srai	s0,s0,0x2
20017ef2:	4481                	li	s1,0
20017ef4:	893e                	mv	s2,a5
20017ef6:	02849663          	bne	s1,s0,20017f22 <__libc_init_array+0x4e>
20017efa:	ffff8797          	auipc	a5,0xffff8
20017efe:	3ee78793          	addi	a5,a5,1006 # 200102e8 <_metal_sifive_fe310_g000_pll_init_ptr>
20017f02:	ffff8417          	auipc	s0,0xffff8
20017f06:	3e640413          	addi	s0,s0,998 # 200102e8 <_metal_sifive_fe310_g000_pll_init_ptr>
20017f0a:	8c1d                	sub	s0,s0,a5
20017f0c:	8409                	srai	s0,s0,0x2
20017f0e:	4481                	li	s1,0
20017f10:	893e                	mv	s2,a5
20017f12:	00849f63          	bne	s1,s0,20017f30 <__libc_init_array+0x5c>
20017f16:	40b2                	lw	ra,12(sp)
20017f18:	4422                	lw	s0,8(sp)
20017f1a:	4492                	lw	s1,4(sp)
20017f1c:	4902                	lw	s2,0(sp)
20017f1e:	0141                	addi	sp,sp,16
20017f20:	8082                	ret
20017f22:	00249793          	slli	a5,s1,0x2
20017f26:	97ca                	add	a5,a5,s2
20017f28:	439c                	lw	a5,0(a5)
20017f2a:	0485                	addi	s1,s1,1
20017f2c:	9782                	jalr	a5
20017f2e:	b7e1                	j	20017ef6 <__libc_init_array+0x22>
20017f30:	00249793          	slli	a5,s1,0x2
20017f34:	97ca                	add	a5,a5,s2
20017f36:	439c                	lw	a5,0(a5)
20017f38:	0485                	addi	s1,s1,1
20017f3a:	9782                	jalr	a5
20017f3c:	bfd9                	j	20017f12 <__libc_init_array+0x3e>

20017f3e <__register_exitproc>:
__register_exitproc():
20017f3e:	5ffe9797          	auipc	a5,0x5ffe9
20017f42:	bda78793          	addi	a5,a5,-1062 # 80000b18 <_global_atexit>
20017f46:	439c                	lw	a5,0(a5)
20017f48:	8e2a                	mv	t3,a0
20017f4a:	e39d                	bnez	a5,20017f70 <__register_exitproc+0x32>
20017f4c:	5ffe9717          	auipc	a4,0x5ffe9
20017f50:	bd870713          	addi	a4,a4,-1064 # 80000b24 <_global_atexit0>
20017f54:	5ffe9797          	auipc	a5,0x5ffe9
20017f58:	bce7a223          	sw	a4,-1084(a5) # 80000b18 <_global_atexit>
20017f5c:	dffe8517          	auipc	a0,0xdffe8
20017f60:	0a450513          	addi	a0,a0,164 # 0 <__metal_boot_hart>
20017f64:	87ba                	mv	a5,a4
20017f66:	c509                	beqz	a0,20017f70 <__register_exitproc+0x32>
20017f68:	411c                	lw	a5,0(a0)
20017f6a:	8ef1a623          	sw	a5,-1812(gp) # 80000bac <_global_atexit0+0x88>
20017f6e:	87ba                	mv	a5,a4
20017f70:	43d8                	lw	a4,4(a5)
20017f72:	487d                	li	a6,31
20017f74:	557d                	li	a0,-1
20017f76:	04e84763          	blt	a6,a4,20017fc4 <__register_exitproc+0x86>
20017f7a:	020e0e63          	beqz	t3,20017fb6 <__register_exitproc+0x78>
20017f7e:	0887a803          	lw	a6,136(a5)
20017f82:	04080163          	beqz	a6,20017fc4 <__register_exitproc+0x86>
20017f86:	00271893          	slli	a7,a4,0x2
20017f8a:	98c2                	add	a7,a7,a6
20017f8c:	00c8a023          	sw	a2,0(a7)
20017f90:	10082303          	lw	t1,256(a6)
20017f94:	4605                	li	a2,1
20017f96:	00e61633          	sll	a2,a2,a4
20017f9a:	00c36333          	or	t1,t1,a2
20017f9e:	10682023          	sw	t1,256(a6)
20017fa2:	08d8a023          	sw	a3,128(a7)
20017fa6:	4689                	li	a3,2
20017fa8:	00de1763          	bne	t3,a3,20017fb6 <__register_exitproc+0x78>
20017fac:	10482683          	lw	a3,260(a6)
20017fb0:	8e55                	or	a2,a2,a3
20017fb2:	10c82223          	sw	a2,260(a6)
20017fb6:	00170693          	addi	a3,a4,1
20017fba:	070a                	slli	a4,a4,0x2
20017fbc:	c3d4                	sw	a3,4(a5)
20017fbe:	97ba                	add	a5,a5,a4
20017fc0:	c78c                	sw	a1,8(a5)
20017fc2:	4501                	li	a0,0
20017fc4:	8082                	ret

20017fc6 <__call_exitprocs>:
__call_exitprocs():
20017fc6:	7179                	addi	sp,sp,-48
20017fc8:	cc52                	sw	s4,24(sp)
20017fca:	ca56                	sw	s5,20(sp)
20017fcc:	c85a                	sw	s6,16(sp)
20017fce:	c65e                	sw	s7,12(sp)
20017fd0:	d606                	sw	ra,44(sp)
20017fd2:	d422                	sw	s0,40(sp)
20017fd4:	d226                	sw	s1,36(sp)
20017fd6:	d04a                	sw	s2,32(sp)
20017fd8:	ce4e                	sw	s3,28(sp)
20017fda:	c462                	sw	s8,8(sp)
20017fdc:	8b2a                	mv	s6,a0
20017fde:	8a2e                	mv	s4,a1
20017fe0:	5ffe9a97          	auipc	s5,0x5ffe9
20017fe4:	b38a8a93          	addi	s5,s5,-1224 # 80000b18 <_global_atexit>
20017fe8:	4b85                	li	s7,1
20017fea:	000aa403          	lw	s0,0(s5)
20017fee:	c811                	beqz	s0,20018002 <__call_exitprocs+0x3c>
20017ff0:	4044                	lw	s1,4(s0)
20017ff2:	08842983          	lw	s3,136(s0)
20017ff6:	fff48913          	addi	s2,s1,-1
20017ffa:	048a                	slli	s1,s1,0x2
20017ffc:	94a2                	add	s1,s1,s0
20017ffe:	00095e63          	bgez	s2,2001801a <__call_exitprocs+0x54>
20018002:	50b2                	lw	ra,44(sp)
20018004:	5422                	lw	s0,40(sp)
20018006:	5492                	lw	s1,36(sp)
20018008:	5902                	lw	s2,32(sp)
2001800a:	49f2                	lw	s3,28(sp)
2001800c:	4a62                	lw	s4,24(sp)
2001800e:	4ad2                	lw	s5,20(sp)
20018010:	4b42                	lw	s6,16(sp)
20018012:	4bb2                	lw	s7,12(sp)
20018014:	4c22                	lw	s8,8(sp)
20018016:	6145                	addi	sp,sp,48
20018018:	8082                	ret
2001801a:	000a0e63          	beqz	s4,20018036 <__call_exitprocs+0x70>
2001801e:	00099563          	bnez	s3,20018028 <__call_exitprocs+0x62>
20018022:	197d                	addi	s2,s2,-1
20018024:	14f1                	addi	s1,s1,-4
20018026:	bfe1                	j	20017ffe <__call_exitprocs+0x38>
20018028:	00291793          	slli	a5,s2,0x2
2001802c:	97ce                	add	a5,a5,s3
2001802e:	0807a783          	lw	a5,128(a5)
20018032:	ff4798e3          	bne	a5,s4,20018022 <__call_exitprocs+0x5c>
20018036:	4058                	lw	a4,4(s0)
20018038:	40dc                	lw	a5,4(s1)
2001803a:	177d                	addi	a4,a4,-1
2001803c:	03271863          	bne	a4,s2,2001806c <__call_exitprocs+0xa6>
20018040:	01242223          	sw	s2,4(s0)
20018044:	dff9                	beqz	a5,20018022 <__call_exitprocs+0x5c>
20018046:	00442c03          	lw	s8,4(s0)
2001804a:	00098863          	beqz	s3,2001805a <__call_exitprocs+0x94>
2001804e:	1009a683          	lw	a3,256(s3)
20018052:	012b9733          	sll	a4,s7,s2
20018056:	8ef9                	and	a3,a3,a4
20018058:	ee89                	bnez	a3,20018072 <__call_exitprocs+0xac>
2001805a:	9782                	jalr	a5
2001805c:	4058                	lw	a4,4(s0)
2001805e:	000aa783          	lw	a5,0(s5)
20018062:	f98714e3          	bne	a4,s8,20017fea <__call_exitprocs+0x24>
20018066:	faf40ee3          	beq	s0,a5,20018022 <__call_exitprocs+0x5c>
2001806a:	b741                	j	20017fea <__call_exitprocs+0x24>
2001806c:	0004a223          	sw	zero,4(s1)
20018070:	bfd1                	j	20018044 <__call_exitprocs+0x7e>
20018072:	00291693          	slli	a3,s2,0x2
20018076:	96ce                	add	a3,a3,s3
20018078:	428c                	lw	a1,0(a3)
2001807a:	1049a683          	lw	a3,260(s3)
2001807e:	8f75                	and	a4,a4,a3
20018080:	e701                	bnez	a4,20018088 <__call_exitprocs+0xc2>
20018082:	855a                	mv	a0,s6
20018084:	9782                	jalr	a5
20018086:	bfd9                	j	2001805c <__call_exitprocs+0x96>
20018088:	852e                	mv	a0,a1
2001808a:	9782                	jalr	a5
2001808c:	bfc1                	j	2001805c <__call_exitprocs+0x96>

2001808e <__udivdi3>:
__udivdi3():
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1319
2001808e:	87ae                	mv	a5,a1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1024
20018090:	8832                	mv	a6,a2
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1025
20018092:	8736                	mv	a4,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1026
20018094:	832a                	mv	t1,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1064
20018096:	20069663          	bnez	a3,200182a2 <__udivdi3+0x214>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1066
2001809a:	ffff9897          	auipc	a7,0xffff9
2001809e:	04688893          	addi	a7,a7,70 # 200110e0 <__clz_tab>
200180a2:	0ac5fe63          	bgeu	a1,a2,2001815e <__udivdi3+0xd0>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
200180a6:	6741                	lui	a4,0x10
200180a8:	0ae67463          	bgeu	a2,a4,20018150 <__udivdi3+0xc2>
200180ac:	0ff00713          	li	a4,255
200180b0:	00c73733          	sltu	a4,a4,a2
200180b4:	070e                	slli	a4,a4,0x3
200180b6:	00e656b3          	srl	a3,a2,a4
200180ba:	98b6                	add	a7,a7,a3
200180bc:	0008c683          	lbu	a3,0(a7)
200180c0:	9736                	add	a4,a4,a3
200180c2:	02000693          	li	a3,32
200180c6:	8e99                	sub	a3,a3,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1072
200180c8:	ca99                	beqz	a3,200180de <__udivdi3+0x50>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
200180ca:	00d797b3          	sll	a5,a5,a3
200180ce:	00e55733          	srl	a4,a0,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1077
200180d2:	00d61833          	sll	a6,a2,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
200180d6:	00f765b3          	or	a1,a4,a5
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1079
200180da:	00d51333          	sll	t1,a0,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1082
200180de:	01085513          	srli	a0,a6,0x10
200180e2:	02a5f733          	remu	a4,a1,a0
200180e6:	01081613          	slli	a2,a6,0x10
200180ea:	8241                	srli	a2,a2,0x10
200180ec:	01035693          	srli	a3,t1,0x10
200180f0:	02a5d5b3          	divu	a1,a1,a0
200180f4:	0742                	slli	a4,a4,0x10
200180f6:	8ed9                	or	a3,a3,a4
200180f8:	02b607b3          	mul	a5,a2,a1
200180fc:	872e                	mv	a4,a1
200180fe:	00f6fc63          	bgeu	a3,a5,20018116 <__udivdi3+0x88>
20018102:	96c2                	add	a3,a3,a6
20018104:	fff58713          	addi	a4,a1,-1
20018108:	0106e763          	bltu	a3,a6,20018116 <__udivdi3+0x88>
2001810c:	00f6f563          	bgeu	a3,a5,20018116 <__udivdi3+0x88>
20018110:	ffe58713          	addi	a4,a1,-2
20018114:	96c2                	add	a3,a3,a6
20018116:	8e9d                	sub	a3,a3,a5
20018118:	02a6f7b3          	remu	a5,a3,a0
2001811c:	0342                	slli	t1,t1,0x10
2001811e:	01035313          	srli	t1,t1,0x10
20018122:	02a6d6b3          	divu	a3,a3,a0
20018126:	07c2                	slli	a5,a5,0x10
20018128:	0067e333          	or	t1,a5,t1
2001812c:	02d605b3          	mul	a1,a2,a3
20018130:	8536                	mv	a0,a3
20018132:	00b37b63          	bgeu	t1,a1,20018148 <__udivdi3+0xba>
20018136:	9342                	add	t1,t1,a6
20018138:	fff68513          	addi	a0,a3,-1
2001813c:	01036663          	bltu	t1,a6,20018148 <__udivdi3+0xba>
20018140:	00b37463          	bgeu	t1,a1,20018148 <__udivdi3+0xba>
20018144:	ffe68513          	addi	a0,a3,-2
20018148:	0742                	slli	a4,a4,0x10
2001814a:	8f49                	or	a4,a4,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1209
2001814c:	4581                	li	a1,0
2001814e:	a84d                	j	20018200 <__udivdi3+0x172>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
20018150:	010006b7          	lui	a3,0x1000
20018154:	4741                	li	a4,16
20018156:	f6d660e3          	bltu	a2,a3,200180b6 <__udivdi3+0x28>
2001815a:	4761                	li	a4,24
2001815c:	bfa9                	j	200180b6 <__udivdi3+0x28>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1091
2001815e:	e601                	bnez	a2,20018166 <__udivdi3+0xd8>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1092
20018160:	4685                	li	a3,1
20018162:	02c6d833          	divu	a6,a3,a2
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
20018166:	66c1                	lui	a3,0x10
20018168:	08d87e63          	bgeu	a6,a3,20018204 <__udivdi3+0x176>
2001816c:	0ff00693          	li	a3,255
20018170:	0106f363          	bgeu	a3,a6,20018176 <__udivdi3+0xe8>
20018174:	4721                	li	a4,8
20018176:	00e856b3          	srl	a3,a6,a4
2001817a:	98b6                	add	a7,a7,a3
2001817c:	0008c683          	lbu	a3,0(a7)
20018180:	96ba                	add	a3,a3,a4
20018182:	02000713          	li	a4,32
20018186:	8f15                	sub	a4,a4,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1096
20018188:	e749                	bnez	a4,20018212 <__udivdi3+0x184>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1105
2001818a:	410787b3          	sub	a5,a5,a6
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1106
2001818e:	4585                	li	a1,1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1124
20018190:	01085613          	srli	a2,a6,0x10
20018194:	01081893          	slli	a7,a6,0x10
20018198:	0108d893          	srli	a7,a7,0x10
2001819c:	01035693          	srli	a3,t1,0x10
200181a0:	02c7f733          	remu	a4,a5,a2
200181a4:	02c7d7b3          	divu	a5,a5,a2
200181a8:	0742                	slli	a4,a4,0x10
200181aa:	8ed9                	or	a3,a3,a4
200181ac:	02f88533          	mul	a0,a7,a5
200181b0:	873e                	mv	a4,a5
200181b2:	00a6fc63          	bgeu	a3,a0,200181ca <__udivdi3+0x13c>
200181b6:	96c2                	add	a3,a3,a6
200181b8:	fff78713          	addi	a4,a5,-1
200181bc:	0106e763          	bltu	a3,a6,200181ca <__udivdi3+0x13c>
200181c0:	00a6f563          	bgeu	a3,a0,200181ca <__udivdi3+0x13c>
200181c4:	ffe78713          	addi	a4,a5,-2
200181c8:	96c2                	add	a3,a3,a6
200181ca:	8e89                	sub	a3,a3,a0
200181cc:	02c6f7b3          	remu	a5,a3,a2
200181d0:	0342                	slli	t1,t1,0x10
200181d2:	01035313          	srli	t1,t1,0x10
200181d6:	02c6d6b3          	divu	a3,a3,a2
200181da:	07c2                	slli	a5,a5,0x10
200181dc:	0067e333          	or	t1,a5,t1
200181e0:	02d888b3          	mul	a7,a7,a3
200181e4:	8536                	mv	a0,a3
200181e6:	01137b63          	bgeu	t1,a7,200181fc <__udivdi3+0x16e>
200181ea:	9342                	add	t1,t1,a6
200181ec:	fff68513          	addi	a0,a3,-1 # ffff <__heap_size+0xf7ff>
200181f0:	01036663          	bltu	t1,a6,200181fc <__udivdi3+0x16e>
200181f4:	01137463          	bgeu	t1,a7,200181fc <__udivdi3+0x16e>
200181f8:	ffe68513          	addi	a0,a3,-2
200181fc:	0742                	slli	a4,a4,0x10
200181fe:	8f49                	or	a4,a4,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1321
20018200:	853a                	mv	a0,a4
20018202:	8082                	ret
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
20018204:	010006b7          	lui	a3,0x1000
20018208:	4741                	li	a4,16
2001820a:	f6d866e3          	bltu	a6,a3,20018176 <__udivdi3+0xe8>
2001820e:	4761                	li	a4,24
20018210:	b79d                	j	20018176 <__udivdi3+0xe8>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1114
20018212:	00e81833          	sll	a6,a6,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1115
20018216:	00d7d5b3          	srl	a1,a5,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1117
2001821a:	00e51333          	sll	t1,a0,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
2001821e:	00d556b3          	srl	a3,a0,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
20018222:	01085513          	srli	a0,a6,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
20018226:	00e797b3          	sll	a5,a5,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
2001822a:	02a5f733          	remu	a4,a1,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
2001822e:	00f6e8b3          	or	a7,a3,a5
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
20018232:	01081793          	slli	a5,a6,0x10
20018236:	83c1                	srli	a5,a5,0x10
20018238:	0108d613          	srli	a2,a7,0x10
2001823c:	02a5d5b3          	divu	a1,a1,a0
20018240:	0742                	slli	a4,a4,0x10
20018242:	8f51                	or	a4,a4,a2
20018244:	02b786b3          	mul	a3,a5,a1
20018248:	862e                	mv	a2,a1
2001824a:	00d77c63          	bgeu	a4,a3,20018262 <__udivdi3+0x1d4>
2001824e:	9742                	add	a4,a4,a6
20018250:	fff58613          	addi	a2,a1,-1
20018254:	01076763          	bltu	a4,a6,20018262 <__udivdi3+0x1d4>
20018258:	00d77563          	bgeu	a4,a3,20018262 <__udivdi3+0x1d4>
2001825c:	ffe58613          	addi	a2,a1,-2
20018260:	9742                	add	a4,a4,a6
20018262:	40d706b3          	sub	a3,a4,a3
20018266:	02a6f733          	remu	a4,a3,a0
2001826a:	08c2                	slli	a7,a7,0x10
2001826c:	0108d893          	srli	a7,a7,0x10
20018270:	02a6d6b3          	divu	a3,a3,a0
20018274:	0742                	slli	a4,a4,0x10
20018276:	02d785b3          	mul	a1,a5,a3
2001827a:	011767b3          	or	a5,a4,a7
2001827e:	8736                	mv	a4,a3
20018280:	00b7fc63          	bgeu	a5,a1,20018298 <__udivdi3+0x20a>
20018284:	97c2                	add	a5,a5,a6
20018286:	fff68713          	addi	a4,a3,-1 # ffffff <__heap_size+0xfff7ff>
2001828a:	0107e763          	bltu	a5,a6,20018298 <__udivdi3+0x20a>
2001828e:	00b7f563          	bgeu	a5,a1,20018298 <__udivdi3+0x20a>
20018292:	ffe68713          	addi	a4,a3,-2
20018296:	97c2                	add	a5,a5,a6
20018298:	8f8d                	sub	a5,a5,a1
2001829a:	01061593          	slli	a1,a2,0x10
2001829e:	8dd9                	or	a1,a1,a4
200182a0:	bdc5                	j	20018190 <__udivdi3+0x102>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1140
200182a2:	14d5e263          	bltu	a1,a3,200183e6 <__udivdi3+0x358>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
200182a6:	6741                	lui	a4,0x10
200182a8:	02e6fe63          	bgeu	a3,a4,200182e4 <__udivdi3+0x256>
200182ac:	0ff00813          	li	a6,255
200182b0:	00d83733          	sltu	a4,a6,a3
200182b4:	070e                	slli	a4,a4,0x3
200182b6:	00e6d833          	srl	a6,a3,a4
200182ba:	ffff9597          	auipc	a1,0xffff9
200182be:	e2658593          	addi	a1,a1,-474 # 200110e0 <__clz_tab>
200182c2:	95c2                	add	a1,a1,a6
200182c4:	0005c803          	lbu	a6,0(a1)
200182c8:	02000593          	li	a1,32
200182cc:	983a                	add	a6,a6,a4
200182ce:	410585b3          	sub	a1,a1,a6
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1160
200182d2:	e185                	bnez	a1,200182f2 <__udivdi3+0x264>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1172
200182d4:	4705                	li	a4,1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1170
200182d6:	f2f6e5e3          	bltu	a3,a5,20018200 <__udivdi3+0x172>
200182da:	00c53533          	sltu	a0,a0,a2
200182de:	00154713          	xori	a4,a0,1
200182e2:	bf39                	j	20018200 <__udivdi3+0x172>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
200182e4:	010005b7          	lui	a1,0x1000
200182e8:	4741                	li	a4,16
200182ea:	fcb6e6e3          	bltu	a3,a1,200182b6 <__udivdi3+0x228>
200182ee:	4761                	li	a4,24
200182f0:	b7d9                	j	200182b6 <__udivdi3+0x228>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1194
200182f2:	01065733          	srl	a4,a2,a6
200182f6:	00b696b3          	sll	a3,a3,a1
200182fa:	8ed9                	or	a3,a3,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
200182fc:	0106de93          	srli	t4,a3,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1196
20018300:	0107d733          	srl	a4,a5,a6
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20018304:	03d778b3          	remu	a7,a4,t4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1197
20018308:	00b797b3          	sll	a5,a5,a1
2001830c:	01055833          	srl	a6,a0,a6
20018310:	00f86333          	or	t1,a6,a5
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20018314:	01069793          	slli	a5,a3,0x10
20018318:	83c1                	srli	a5,a5,0x10
2001831a:	01035813          	srli	a6,t1,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1195
2001831e:	00b61633          	sll	a2,a2,a1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20018322:	03d75733          	divu	a4,a4,t4
20018326:	08c2                	slli	a7,a7,0x10
20018328:	0108e833          	or	a6,a7,a6
2001832c:	02e78f33          	mul	t5,a5,a4
20018330:	8e3a                	mv	t3,a4
20018332:	01e87c63          	bgeu	a6,t5,2001834a <__udivdi3+0x2bc>
20018336:	9836                	add	a6,a6,a3
20018338:	fff70e13          	addi	t3,a4,-1 # ffff <__heap_size+0xf7ff>
2001833c:	00d86763          	bltu	a6,a3,2001834a <__udivdi3+0x2bc>
20018340:	01e87563          	bgeu	a6,t5,2001834a <__udivdi3+0x2bc>
20018344:	ffe70e13          	addi	t3,a4,-2
20018348:	9836                	add	a6,a6,a3
2001834a:	41e80833          	sub	a6,a6,t5
2001834e:	03d878b3          	remu	a7,a6,t4
20018352:	03d85833          	divu	a6,a6,t4
20018356:	08c2                	slli	a7,a7,0x10
20018358:	03078eb3          	mul	t4,a5,a6
2001835c:	01031793          	slli	a5,t1,0x10
20018360:	83c1                	srli	a5,a5,0x10
20018362:	00f8e7b3          	or	a5,a7,a5
20018366:	8742                	mv	a4,a6
20018368:	01d7fc63          	bgeu	a5,t4,20018380 <__udivdi3+0x2f2>
2001836c:	97b6                	add	a5,a5,a3
2001836e:	fff80713          	addi	a4,a6,-1
20018372:	00d7e763          	bltu	a5,a3,20018380 <__udivdi3+0x2f2>
20018376:	01d7f563          	bgeu	a5,t4,20018380 <__udivdi3+0x2f2>
2001837a:	ffe80713          	addi	a4,a6,-2
2001837e:	97b6                	add	a5,a5,a3
20018380:	0e42                	slli	t3,t3,0x10
20018382:	41d787b3          	sub	a5,a5,t4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
20018386:	6ec1                	lui	t4,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20018388:	00ee6733          	or	a4,t3,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
2001838c:	fffe8813          	addi	a6,t4,-1 # ffff <__heap_size+0xf7ff>
20018390:	01077333          	and	t1,a4,a6
20018394:	01075893          	srli	a7,a4,0x10
20018398:	01067833          	and	a6,a2,a6
2001839c:	8241                	srli	a2,a2,0x10
2001839e:	03030e33          	mul	t3,t1,a6
200183a2:	03088833          	mul	a6,a7,a6
200183a6:	010e5693          	srli	a3,t3,0x10
200183aa:	02c30333          	mul	t1,t1,a2
200183ae:	9342                	add	t1,t1,a6
200183b0:	969a                	add	a3,a3,t1
200183b2:	02c888b3          	mul	a7,a7,a2
200183b6:	0106f363          	bgeu	a3,a6,200183bc <__udivdi3+0x32e>
200183ba:	98f6                	add	a7,a7,t4
200183bc:	0106d613          	srli	a2,a3,0x10
200183c0:	98b2                	add	a7,a7,a2
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1203
200183c2:	0317e063          	bltu	a5,a7,200183e2 <__udivdi3+0x354>
200183c6:	d91793e3          	bne	a5,a7,2001814c <__udivdi3+0xbe>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
200183ca:	67c1                	lui	a5,0x10
200183cc:	17fd                	addi	a5,a5,-1
200183ce:	8efd                	and	a3,a3,a5
200183d0:	06c2                	slli	a3,a3,0x10
200183d2:	00fe7e33          	and	t3,t3,a5
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1198
200183d6:	00b51533          	sll	a0,a0,a1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
200183da:	96f2                	add	a3,a3,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1209
200183dc:	4581                	li	a1,0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1203
200183de:	e2d571e3          	bgeu	a0,a3,20018200 <__udivdi3+0x172>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1205
200183e2:	177d                	addi	a4,a4,-1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1206
200183e4:	b3a5                	j	2001814c <__udivdi3+0xbe>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1145
200183e6:	4581                	li	a1,0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1144
200183e8:	4701                	li	a4,0
200183ea:	bd19                	j	20018200 <__udivdi3+0x172>

200183ec <__umoddi3>:
__udivmoddi4():
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1024
200183ec:	88b2                	mv	a7,a2
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1025
200183ee:	8736                	mv	a4,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1026
200183f0:	87aa                	mv	a5,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1027
200183f2:	882e                	mv	a6,a1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1064
200183f4:	1c069863          	bnez	a3,200185c4 <__umoddi3+0x1d8>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1066
200183f8:	ffff9697          	auipc	a3,0xffff9
200183fc:	ce868693          	addi	a3,a3,-792 # 200110e0 <__clz_tab>
20018400:	0ac5f863          	bgeu	a1,a2,200184b0 <__umoddi3+0xc4>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
20018404:	6341                	lui	t1,0x10
20018406:	08667e63          	bgeu	a2,t1,200184a2 <__umoddi3+0xb6>
2001840a:	0ff00313          	li	t1,255
2001840e:	00c37363          	bgeu	t1,a2,20018414 <__umoddi3+0x28>
20018412:	4721                	li	a4,8
20018414:	00e65333          	srl	t1,a2,a4
20018418:	969a                	add	a3,a3,t1
2001841a:	0006ce03          	lbu	t3,0(a3)
2001841e:	02000313          	li	t1,32
20018422:	9e3a                	add	t3,t3,a4
20018424:	41c30333          	sub	t1,t1,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1072
20018428:	00030c63          	beqz	t1,20018440 <__umoddi3+0x54>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
2001842c:	006595b3          	sll	a1,a1,t1
20018430:	01c55e33          	srl	t3,a0,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1077
20018434:	006618b3          	sll	a7,a2,t1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
20018438:	00be6833          	or	a6,t3,a1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1079
2001843c:	006517b3          	sll	a5,a0,t1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1082
20018440:	0108d613          	srli	a2,a7,0x10
20018444:	02c87733          	remu	a4,a6,a2
20018448:	01089513          	slli	a0,a7,0x10
2001844c:	8141                	srli	a0,a0,0x10
2001844e:	0107d693          	srli	a3,a5,0x10
20018452:	02c85833          	divu	a6,a6,a2
20018456:	0742                	slli	a4,a4,0x10
20018458:	8ed9                	or	a3,a3,a4
2001845a:	03050833          	mul	a6,a0,a6
2001845e:	0106f863          	bgeu	a3,a6,2001846e <__umoddi3+0x82>
20018462:	96c6                	add	a3,a3,a7
20018464:	0116e563          	bltu	a3,a7,2001846e <__umoddi3+0x82>
20018468:	0106f363          	bgeu	a3,a6,2001846e <__umoddi3+0x82>
2001846c:	96c6                	add	a3,a3,a7
2001846e:	410686b3          	sub	a3,a3,a6
20018472:	02c6f733          	remu	a4,a3,a2
20018476:	07c2                	slli	a5,a5,0x10
20018478:	83c1                	srli	a5,a5,0x10
2001847a:	02c6d6b3          	divu	a3,a3,a2
2001847e:	02d506b3          	mul	a3,a0,a3
20018482:	01071513          	slli	a0,a4,0x10
20018486:	8fc9                	or	a5,a5,a0
20018488:	00d7f863          	bgeu	a5,a3,20018498 <__umoddi3+0xac>
2001848c:	97c6                	add	a5,a5,a7
2001848e:	0117e563          	bltu	a5,a7,20018498 <__umoddi3+0xac>
20018492:	00d7f363          	bgeu	a5,a3,20018498 <__umoddi3+0xac>
20018496:	97c6                	add	a5,a5,a7
20018498:	8f95                	sub	a5,a5,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1131
2001849a:	0067d533          	srl	a0,a5,t1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1133
2001849e:	4581                	li	a1,0
__umoddi3():
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1313
200184a0:	8082                	ret
__udivmoddi4():
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
200184a2:	01000337          	lui	t1,0x1000
200184a6:	4741                	li	a4,16
200184a8:	f66666e3          	bltu	a2,t1,20018414 <__umoddi3+0x28>
200184ac:	4761                	li	a4,24
200184ae:	b79d                	j	20018414 <__umoddi3+0x28>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1091
200184b0:	e601                	bnez	a2,200184b8 <__umoddi3+0xcc>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1092
200184b2:	4605                	li	a2,1
200184b4:	031658b3          	divu	a7,a2,a7
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
200184b8:	6641                	lui	a2,0x10
200184ba:	08c8f363          	bgeu	a7,a2,20018540 <__umoddi3+0x154>
200184be:	0ff00613          	li	a2,255
200184c2:	01167363          	bgeu	a2,a7,200184c8 <__umoddi3+0xdc>
200184c6:	4721                	li	a4,8
200184c8:	00e8d633          	srl	a2,a7,a4
200184cc:	96b2                	add	a3,a3,a2
200184ce:	0006ce03          	lbu	t3,0(a3)
200184d2:	02000313          	li	t1,32
200184d6:	9e3a                	add	t3,t3,a4
200184d8:	41c30333          	sub	t1,t1,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1096
200184dc:	06031963          	bnez	t1,2001854e <__umoddi3+0x162>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1105
200184e0:	411585b3          	sub	a1,a1,a7
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1124
200184e4:	0108d713          	srli	a4,a7,0x10
200184e8:	01089513          	slli	a0,a7,0x10
200184ec:	8141                	srli	a0,a0,0x10
200184ee:	0107d613          	srli	a2,a5,0x10
200184f2:	02e5f6b3          	remu	a3,a1,a4
200184f6:	02e5d5b3          	divu	a1,a1,a4
200184fa:	06c2                	slli	a3,a3,0x10
200184fc:	8ed1                	or	a3,a3,a2
200184fe:	02b505b3          	mul	a1,a0,a1
20018502:	00b6f863          	bgeu	a3,a1,20018512 <__umoddi3+0x126>
20018506:	96c6                	add	a3,a3,a7
20018508:	0116e563          	bltu	a3,a7,20018512 <__umoddi3+0x126>
2001850c:	00b6f363          	bgeu	a3,a1,20018512 <__umoddi3+0x126>
20018510:	96c6                	add	a3,a3,a7
20018512:	40b685b3          	sub	a1,a3,a1
20018516:	02e5f6b3          	remu	a3,a1,a4
2001851a:	07c2                	slli	a5,a5,0x10
2001851c:	83c1                	srli	a5,a5,0x10
2001851e:	02e5d5b3          	divu	a1,a1,a4
20018522:	02b505b3          	mul	a1,a0,a1
20018526:	01069513          	slli	a0,a3,0x10
2001852a:	8fc9                	or	a5,a5,a0
2001852c:	00b7f863          	bgeu	a5,a1,2001853c <__umoddi3+0x150>
20018530:	97c6                	add	a5,a5,a7
20018532:	0117e563          	bltu	a5,a7,2001853c <__umoddi3+0x150>
20018536:	00b7f363          	bgeu	a5,a1,2001853c <__umoddi3+0x150>
2001853a:	97c6                	add	a5,a5,a7
2001853c:	8f8d                	sub	a5,a5,a1
2001853e:	bfb1                	j	2001849a <__umoddi3+0xae>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
20018540:	01000637          	lui	a2,0x1000
20018544:	4741                	li	a4,16
20018546:	f8c8e1e3          	bltu	a7,a2,200184c8 <__umoddi3+0xdc>
2001854a:	4761                	li	a4,24
2001854c:	bfb5                	j	200184c8 <__umoddi3+0xdc>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1114
2001854e:	006898b3          	sll	a7,a7,t1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1115
20018552:	01c5d733          	srl	a4,a1,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1117
20018556:	006517b3          	sll	a5,a0,t1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
2001855a:	01c55e33          	srl	t3,a0,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
2001855e:	0108d513          	srli	a0,a7,0x10
20018562:	02a776b3          	remu	a3,a4,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
20018566:	006595b3          	sll	a1,a1,t1
2001856a:	00be6e33          	or	t3,t3,a1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
2001856e:	01089593          	slli	a1,a7,0x10
20018572:	81c1                	srli	a1,a1,0x10
20018574:	010e5613          	srli	a2,t3,0x10
20018578:	02a75733          	divu	a4,a4,a0
2001857c:	06c2                	slli	a3,a3,0x10
2001857e:	8ed1                	or	a3,a3,a2
20018580:	02e58733          	mul	a4,a1,a4
20018584:	00e6f863          	bgeu	a3,a4,20018594 <__umoddi3+0x1a8>
20018588:	96c6                	add	a3,a3,a7
2001858a:	0116e563          	bltu	a3,a7,20018594 <__umoddi3+0x1a8>
2001858e:	00e6f363          	bgeu	a3,a4,20018594 <__umoddi3+0x1a8>
20018592:	96c6                	add	a3,a3,a7
20018594:	40e68633          	sub	a2,a3,a4
20018598:	02a676b3          	remu	a3,a2,a0
2001859c:	0e42                	slli	t3,t3,0x10
2001859e:	010e5e13          	srli	t3,t3,0x10
200185a2:	02a65633          	divu	a2,a2,a0
200185a6:	06c2                	slli	a3,a3,0x10
200185a8:	02c58633          	mul	a2,a1,a2
200185ac:	01c6e5b3          	or	a1,a3,t3
200185b0:	00c5f863          	bgeu	a1,a2,200185c0 <__umoddi3+0x1d4>
200185b4:	95c6                	add	a1,a1,a7
200185b6:	0115e563          	bltu	a1,a7,200185c0 <__umoddi3+0x1d4>
200185ba:	00c5f363          	bgeu	a1,a2,200185c0 <__umoddi3+0x1d4>
200185be:	95c6                	add	a1,a1,a7
200185c0:	8d91                	sub	a1,a1,a2
200185c2:	b70d                	j	200184e4 <__umoddi3+0xf8>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1140
200185c4:	ecd5eee3          	bltu	a1,a3,200184a0 <__umoddi3+0xb4>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
200185c8:	6741                	lui	a4,0x10
200185ca:	04e6f563          	bgeu	a3,a4,20018614 <__umoddi3+0x228>
200185ce:	0ff00e93          	li	t4,255
200185d2:	00deb733          	sltu	a4,t4,a3
200185d6:	070e                	slli	a4,a4,0x3
200185d8:	00e6d333          	srl	t1,a3,a4
200185dc:	ffff9897          	auipc	a7,0xffff9
200185e0:	b0488893          	addi	a7,a7,-1276 # 200110e0 <__clz_tab>
200185e4:	989a                	add	a7,a7,t1
200185e6:	0008ce83          	lbu	t4,0(a7)
200185ea:	02000e13          	li	t3,32
200185ee:	9eba                	add	t4,t4,a4
200185f0:	41de0e33          	sub	t3,t3,t4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1160
200185f4:	020e1763          	bnez	t3,20018622 <__umoddi3+0x236>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1170
200185f8:	00b6e463          	bltu	a3,a1,20018600 <__umoddi3+0x214>
200185fc:	00c56963          	bltu	a0,a2,2001860e <__umoddi3+0x222>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1173
20018600:	40c507b3          	sub	a5,a0,a2
20018604:	8d95                	sub	a1,a1,a3
20018606:	00f53533          	sltu	a0,a0,a5
2001860a:	40a58833          	sub	a6,a1,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1184
2001860e:	853e                	mv	a0,a5
20018610:	85c2                	mv	a1,a6
20018612:	b579                	j	200184a0 <__umoddi3+0xb4>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
20018614:	010008b7          	lui	a7,0x1000
20018618:	4741                	li	a4,16
2001861a:	fb16efe3          	bltu	a3,a7,200185d8 <__umoddi3+0x1ec>
2001861e:	4761                	li	a4,24
20018620:	bf65                	j	200185d8 <__umoddi3+0x1ec>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1194
20018622:	01d65733          	srl	a4,a2,t4
20018626:	01c696b3          	sll	a3,a3,t3
2001862a:	8ed9                	or	a3,a3,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
2001862c:	0106d813          	srli	a6,a3,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1196
20018630:	01d5d733          	srl	a4,a1,t4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20018634:	03077333          	remu	t1,a4,a6
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1197
20018638:	01c595b3          	sll	a1,a1,t3
2001863c:	01d557b3          	srl	a5,a0,t4
20018640:	8fcd                	or	a5,a5,a1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20018642:	01069593          	slli	a1,a3,0x10
20018646:	81c1                	srli	a1,a1,0x10
20018648:	0107d893          	srli	a7,a5,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1195
2001864c:	01c61633          	sll	a2,a2,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1198
20018650:	01c51533          	sll	a0,a0,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20018654:	03075733          	divu	a4,a4,a6
20018658:	0342                	slli	t1,t1,0x10
2001865a:	011368b3          	or	a7,t1,a7
2001865e:	02e58f33          	mul	t5,a1,a4
20018662:	833a                	mv	t1,a4
20018664:	01e8fc63          	bgeu	a7,t5,2001867c <__umoddi3+0x290>
20018668:	98b6                	add	a7,a7,a3
2001866a:	fff70313          	addi	t1,a4,-1 # ffff <__heap_size+0xf7ff>
2001866e:	00d8e763          	bltu	a7,a3,2001867c <__umoddi3+0x290>
20018672:	01e8f563          	bgeu	a7,t5,2001867c <__umoddi3+0x290>
20018676:	ffe70313          	addi	t1,a4,-2
2001867a:	98b6                	add	a7,a7,a3
2001867c:	41e888b3          	sub	a7,a7,t5
20018680:	0308ff33          	remu	t5,a7,a6
20018684:	0308d8b3          	divu	a7,a7,a6
20018688:	0f42                	slli	t5,t5,0x10
2001868a:	03158833          	mul	a6,a1,a7
2001868e:	01079593          	slli	a1,a5,0x10
20018692:	81c1                	srli	a1,a1,0x10
20018694:	00bf65b3          	or	a1,t5,a1
20018698:	87c6                	mv	a5,a7
2001869a:	0105fc63          	bgeu	a1,a6,200186b2 <__umoddi3+0x2c6>
2001869e:	95b6                	add	a1,a1,a3
200186a0:	fff88793          	addi	a5,a7,-1 # ffffff <__heap_size+0xfff7ff>
200186a4:	00d5e763          	bltu	a1,a3,200186b2 <__umoddi3+0x2c6>
200186a8:	0105f563          	bgeu	a1,a6,200186b2 <__umoddi3+0x2c6>
200186ac:	ffe88793          	addi	a5,a7,-2
200186b0:	95b6                	add	a1,a1,a3
200186b2:	0342                	slli	t1,t1,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
200186b4:	6f41                	lui	t5,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
200186b6:	00f36333          	or	t1,t1,a5
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
200186ba:	ffff0793          	addi	a5,t5,-1 # ffff <__heap_size+0xf7ff>
200186be:	00f378b3          	and	a7,t1,a5
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
200186c2:	410585b3          	sub	a1,a1,a6
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
200186c6:	01035313          	srli	t1,t1,0x10
200186ca:	01065813          	srli	a6,a2,0x10
200186ce:	8ff1                	and	a5,a5,a2
200186d0:	02f88733          	mul	a4,a7,a5
200186d4:	02f307b3          	mul	a5,t1,a5
200186d8:	030888b3          	mul	a7,a7,a6
200186dc:	03030333          	mul	t1,t1,a6
200186e0:	98be                	add	a7,a7,a5
200186e2:	01075813          	srli	a6,a4,0x10
200186e6:	9846                	add	a6,a6,a7
200186e8:	00f87363          	bgeu	a6,a5,200186ee <__umoddi3+0x302>
200186ec:	937a                	add	t1,t1,t5
200186ee:	01085793          	srli	a5,a6,0x10
200186f2:	933e                	add	t1,t1,a5
200186f4:	67c1                	lui	a5,0x10
200186f6:	17fd                	addi	a5,a5,-1
200186f8:	00f87833          	and	a6,a6,a5
200186fc:	0842                	slli	a6,a6,0x10
200186fe:	8f7d                	and	a4,a4,a5
20018700:	9742                	add	a4,a4,a6
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1203
20018702:	0065e663          	bltu	a1,t1,2001870e <__umoddi3+0x322>
20018706:	00659c63          	bne	a1,t1,2001871e <__umoddi3+0x332>
2001870a:	00e57a63          	bgeu	a0,a4,2001871e <__umoddi3+0x332>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1206
2001870e:	40c70633          	sub	a2,a4,a2
20018712:	00c73733          	sltu	a4,a4,a2
20018716:	9736                	add	a4,a4,a3
20018718:	40e30333          	sub	t1,t1,a4
2001871c:	8732                	mv	a4,a2
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1214
2001871e:	40e50733          	sub	a4,a0,a4
20018722:	00e53533          	sltu	a0,a0,a4
20018726:	406585b3          	sub	a1,a1,t1
2001872a:	8d89                	sub	a1,a1,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1215
2001872c:	01d597b3          	sll	a5,a1,t4
20018730:	01c75733          	srl	a4,a4,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1217
20018734:	00e7e533          	or	a0,a5,a4
20018738:	01c5d5b3          	srl	a1,a1,t3
__umoddi3():
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1312
2001873c:	b395                	j	200184a0 <__umoddi3+0xb4>

2001873e <metal_init>:
metal_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:17
extern metal_constructor_t metal_constructors_start;
extern metal_constructor_t metal_constructors_end;
extern metal_destructor_t metal_destructors_start;
extern metal_destructor_t metal_destructors_end;

void metal_init(void) {
2001873e:	1101                	addi	sp,sp,-32
20018740:	ce06                	sw	ra,28(sp)
20018742:	cc22                	sw	s0,24(sp)
20018744:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:20
    /* Make sure the constructors only run once */
    static int init_done = 0;
    if (init_done) {
20018746:	800017b7          	lui	a5,0x80001
2001874a:	b1c7a783          	lw	a5,-1252(a5) # 80000b1c <metal_segment_heap_target_end+0xfffff35c>
2001874e:	efa9                	bnez	a5,200187a8 <metal_init+0x6a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:23
        return;
    }
    init_done = 1;
20018750:	800017b7          	lui	a5,0x80001
20018754:	4705                	li	a4,1
20018756:	b0e7ae23          	sw	a4,-1252(a5) # 80000b1c <metal_segment_heap_target_end+0xfffff35c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:25

    if (&metal_constructors_end <= &metal_constructors_start) {
2001875a:	200107b7          	lui	a5,0x20010
2001875e:	2f478713          	addi	a4,a5,756 # 200102f4 <metal_constructors_end>
20018762:	200107b7          	lui	a5,0x20010
20018766:	2e878793          	addi	a5,a5,744 # 200102e8 <_metal_sifive_fe310_g000_pll_init_ptr>
2001876a:	04e7f163          	bgeu	a5,a4,200187ac <metal_init+0x6e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:29
        return;
    }

    metal_constructor_t *funcptr = &metal_constructors_start;
2001876e:	200107b7          	lui	a5,0x20010
20018772:	2e878793          	addi	a5,a5,744 # 200102e8 <_metal_sifive_fe310_g000_pll_init_ptr>
20018776:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
2001877a:	a831                	j	20018796 <metal_init+0x58>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:31
        metal_constructor_t func = *funcptr;
2001877c:	fec42783          	lw	a5,-20(s0)
20018780:	439c                	lw	a5,0(a5)
20018782:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:33

        func();
20018786:	fe842783          	lw	a5,-24(s0)
2001878a:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:35

        funcptr += 1;
2001878c:	fec42783          	lw	a5,-20(s0)
20018790:	0791                	addi	a5,a5,4
20018792:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
20018796:	fec42703          	lw	a4,-20(s0)
2001879a:	200107b7          	lui	a5,0x20010
2001879e:	2f478793          	addi	a5,a5,756 # 200102f4 <metal_constructors_end>
200187a2:	fcf71de3          	bne	a4,a5,2001877c <metal_init+0x3e>
200187a6:	a021                	j	200187ae <metal_init+0x70>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:21
        return;
200187a8:	0001                	nop
200187aa:	a011                	j	200187ae <metal_init+0x70>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:26
        return;
200187ac:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:37
    }
}
200187ae:	40f2                	lw	ra,28(sp)
200187b0:	4462                	lw	s0,24(sp)
200187b2:	6105                	addi	sp,sp,32
200187b4:	8082                	ret

200187b6 <metal_fini>:
metal_fini():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:39

void metal_fini(void) {
200187b6:	1101                	addi	sp,sp,-32
200187b8:	ce06                	sw	ra,28(sp)
200187ba:	cc22                	sw	s0,24(sp)
200187bc:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:42
    /* Make sure the destructors only run once */
    static int fini_done = 0;
    if (fini_done) {
200187be:	800017b7          	lui	a5,0x80001
200187c2:	b207a783          	lw	a5,-1248(a5) # 80000b20 <metal_segment_heap_target_end+0xfffff360>
200187c6:	efa9                	bnez	a5,20018820 <metal_fini+0x6a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:45
        return;
    }
    fini_done = 1;
200187c8:	800017b7          	lui	a5,0x80001
200187cc:	4705                	li	a4,1
200187ce:	b2e7a023          	sw	a4,-1248(a5) # 80000b20 <metal_segment_heap_target_end+0xfffff360>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:47

    if (&metal_destructors_end <= &metal_destructors_start) {
200187d2:	200107b7          	lui	a5,0x20010
200187d6:	2f878713          	addi	a4,a5,760 # 200102f8 <__fini_array_end>
200187da:	200107b7          	lui	a5,0x20010
200187de:	2f878793          	addi	a5,a5,760 # 200102f8 <__fini_array_end>
200187e2:	04e7f163          	bgeu	a5,a4,20018824 <metal_fini+0x6e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:51
        return;
    }

    metal_destructor_t *funcptr = &metal_destructors_start;
200187e6:	200107b7          	lui	a5,0x20010
200187ea:	2f878793          	addi	a5,a5,760 # 200102f8 <__fini_array_end>
200187ee:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
200187f2:	a831                	j	2001880e <metal_fini+0x58>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:53
        metal_destructor_t func = *funcptr;
200187f4:	fec42783          	lw	a5,-20(s0)
200187f8:	439c                	lw	a5,0(a5)
200187fa:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:55

        func();
200187fe:	fe842783          	lw	a5,-24(s0)
20018802:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:57

        funcptr += 1;
20018804:	fec42783          	lw	a5,-20(s0)
20018808:	0791                	addi	a5,a5,4
2001880a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
2001880e:	fec42703          	lw	a4,-20(s0)
20018812:	200107b7          	lui	a5,0x20010
20018816:	2f878793          	addi	a5,a5,760 # 200102f8 <__fini_array_end>
2001881a:	fcf71de3          	bne	a4,a5,200187f4 <metal_fini+0x3e>
2001881e:	a021                	j	20018826 <metal_fini+0x70>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:43
        return;
20018820:	0001                	nop
20018822:	a011                	j	20018826 <metal_fini+0x70>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:48
        return;
20018824:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:59
    }
}
20018826:	40f2                	lw	ra,28(sp)
20018828:	4462                	lw	s0,24(sp)
2001882a:	6105                	addi	sp,sp,32
2001882c:	8082                	ret

2001882e <metal_init_run>:
metal_init_run():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:69
 * in the case that users don't want the metal constructors or
 * destructors to run.
 */

void metal_init_run(void) __attribute__((weak));
void metal_init_run(void) { metal_init(); }
2001882e:	1141                	addi	sp,sp,-16
20018830:	c606                	sw	ra,12(sp)
20018832:	c422                	sw	s0,8(sp)
20018834:	0800                	addi	s0,sp,16
20018836:	f09ff0ef          	jal	ra,2001873e <metal_init>
2001883a:	0001                	nop
2001883c:	40b2                	lw	ra,12(sp)
2001883e:	4422                	lw	s0,8(sp)
20018840:	0141                	addi	sp,sp,16
20018842:	8082                	ret

20018844 <metal_fini_run>:
metal_fini_run():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:72

void metal_fini_run(void) __attribute__((weak));
void metal_fini_run(void) { metal_fini(); }
20018844:	1141                	addi	sp,sp,-16
20018846:	c606                	sw	ra,12(sp)
20018848:	c422                	sw	s0,8(sp)
2001884a:	0800                	addi	s0,sp,16
2001884c:	f6bff0ef          	jal	ra,200187b6 <metal_fini>
20018850:	0001                	nop
20018852:	40b2                	lw	ra,12(sp)
20018854:	4422                	lw	s0,8(sp)
20018856:	0141                	addi	sp,sp,16
20018858:	8082                	ret

2001885a <metal_tty_putc>:
metal_tty_putc():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/tty.c:12
int metal_tty_putc(int c) {
2001885a:	1101                	addi	sp,sp,-32
2001885c:	ce06                	sw	ra,28(sp)
2001885e:	cc22                	sw	s0,24(sp)
20018860:	1000                	addi	s0,sp,32
20018862:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/tty.c:13
    return metal_uart_putc(__METAL_DT_STDOUT_UART_HANDLE, c);
20018866:	fec42583          	lw	a1,-20(s0)
2001886a:	800017b7          	lui	a5,0x80001
2001886e:	a5c78513          	addi	a0,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
20018872:	a2cff0ef          	jal	ra,20017a9e <metal_uart_putc>
20018876:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/tty.c:14
}
20018878:	853e                	mv	a0,a5
2001887a:	40f2                	lw	ra,28(sp)
2001887c:	4462                	lw	s0,24(sp)
2001887e:	6105                	addi	sp,sp,32
20018880:	8082                	ret

20018882 <_exit>:
_exit():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_exit.c:3
#include <metal/shutdown.h>

void _exit(int exit_status) {
20018882:	1101                	addi	sp,sp,-32
20018884:	ce06                	sw	ra,28(sp)
20018886:	cc22                	sw	s0,24(sp)
20018888:	1000                	addi	s0,sp,32
2001888a:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_exit.c:4
    metal_shutdown(exit_status);
2001888e:	fec42503          	lw	a0,-20(s0)
20018892:	8b2ff0ef          	jal	ra,20017944 <metal_shutdown>
