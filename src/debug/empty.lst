
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/debug/empty.elf:     file format elf32-littleriscv
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/debug/empty.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x20010000

Program Header:
    LOAD off    0x00001000 vaddr 0x20010000 paddr 0x20010000 align 2**12
         filesz 0x00001294 memsz 0x00001294 flags rwx
    LOAD off    0x00003000 vaddr 0x80000000 paddr 0x20019698 align 2**12
         filesz 0x00000b0c memsz 0x00000b0c flags rw-
     TLS off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**2
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00003b10 vaddr 0x80000b10 paddr 0x80000b10 align 2**12
         filesz 0x00000000 memsz 0x00000cb0 flags rw-
    LOAD off    0x00003b0c vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00004300 vaddr 0x20011300 paddr 0x20011300 align 2**12
         filesz 0x00008396 memsz 0x00008396 flags r-x
    LOAD off    0x0000c696 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .init             000002e6  20010000  20010000  00001000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .init_array       0000000c  200102e8  200102e8  000012e8  2**3  CONTENTS, ALLOC, LOAD, DATA
  2 .ctors            0000007a  200102f4  200102f4  000012f4  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata           00000f24  20010370  20010370  00001370  2**3  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .text             00008396  20011300  20011300  00004300  2**7  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .data             00000b0c  80000000  20019698  00003000  2**3  CONTENTS, ALLOC, LOAD, DATA
  6 .bss              000000a4  80000b10  80000b10  00003b10  2**3  ALLOC
  7 .stack            00000400  80000bc0  80000bc0  00003b10  2**4  ALLOC
  8 .heap             00000800  80000fc0  80000fc0  00003b10  2**3  ALLOC
  9 .debug_info       00038b08  00000000  00000000  0000c696  2**0  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev     00004cf2  00000000  00000000  0004519e  2**0  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges    00000da0  00000000  00000000  00049e90  2**3  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges     00001060  00000000  00000000  0004ac30  2**3  CONTENTS, READONLY, DEBUGGING
 13 .debug_line       000119fc  00000000  00000000  0004bc90  2**0  CONTENTS, READONLY, DEBUGGING
 14 .debug_str        00005ead  00000000  00000000  0005d68c  2**0  CONTENTS, READONLY, DEBUGGING
 15 .comment          00000028  00000000  00000000  00063539  2**0  CONTENTS, READONLY
 16 .riscv.attributes 0000002b  00000000  00000000  00063561  2**0  CONTENTS, READONLY
 17 .debug_frame      00003344  00000000  00000000  0006358c  2**2  CONTENTS, READONLY, DEBUGGING
 18 .debug_loc        00003c13  00000000  00000000  000668d0  2**0  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
20010000 l    d  .init	00000000 .init
200102e8 l    d  .init_array	00000000 .init_array
200102f4 l    d  .ctors	00000000 .ctors
20010370 l    d  .rodata	00000000 .rodata
20011300 l    d  .text	00000000 .text
80000000 l    d  .data	00000000 .data
80000b10 l    d  .bss	00000000 .bss
80000bc0 l    d  .stack	00000000 .stack
80000fc0 l    d  .heap	00000000 .heap
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    df *ABS*	00000000 scrub.o
200100ca l     F .init	00000000 __metal_memory_scrub
20010138 l       .init	00000000 skip_scrub
00000000 l    df *ABS*	00000000 synchronize_harts.c
00000000 l    df *ABS*	00000000 crt0.o
20010248 l       .init	00000000 _skip_init
20011270 l       .rodata	00000000 argv
20011274 l       .rodata	00000000 envp
20011278 l       .rodata	00000000 name
00000000 l    df *ABS*	00000000 sifive_fe310-g000_pll.c
20016174 l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllsel0
2001618e l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllref
200161a8 l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_divider_base
200161be l     F .text	00000014 __metal_driver_sifive_fe310_g000_pll_divider_offset
200161d2 l     F .text	00000012 __metal_driver_sifive_fe310_g000_pll_config_base
200161e4 l     F .text	00000010 __metal_driver_sifive_fe310_g000_pll_config_offset
200161f4 l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_init_rate
2001620a l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
2001621c l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
20010910 l     O .rodata	00000880 pll_configs
2001622e l     F .text	0000004e get_pll_config_freq
20016490 l     F .text	000000ac find_closest_config
2001653c l     F .text	000001a4 configure_pll
00000000 l    df *ABS*	00000000 tty.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 findfp.c
20011c80 l     F .text	00000068 std
00000000 l    df *ABS*	00000000 nano-vfprintf.c
20012130 l     F .text	0000002a __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 riscv_clint0.c
200135b8 l     F .text	00000026 __metal_driver_sifive_clint0_control_base
200135de l     F .text	00000024 __metal_driver_sifive_clint0_num_interrupts
20013602 l     F .text	0000003c __metal_driver_sifive_clint0_interrupt_parents
2001363e l     F .text	00000030 __metal_driver_sifive_clint0_interrupt_lines
2001379e l     F .text	00000036 _get_cpu_intc
00000000 l    df *ABS*	00000000 riscv_cpu.c
20013cd4 l     F .text	00000024 __metal_driver_cpu_hartid
20013cf8 l     F .text	0000002a __metal_driver_cpu_timebase
20013d22 l     F .text	0000002a __metal_driver_cpu_interrupt_controller
20013d4c l     F .text	00000024 __metal_driver_cpu_buserror
00000000 l    df *ABS*	00000000 riscv_plic0.c
200156ca l     F .text	0000002a __metal_driver_sifive_plic0_control_base
200156f4 l     F .text	0000002a __metal_driver_sifive_plic0_num_interrupts
2001571e l     F .text	00000028 __metal_driver_sifive_plic0_max_priority
20015746 l     F .text	00000028 __metal_driver_sifive_plic0_interrupt_parents
2001576e l     F .text	00000022 __metal_driver_sifive_plic0_interrupt_lines
20015790 l     F .text	0000001e __metal_driver_sifive_plic0_context_ids
00000000 l    df *ABS*	00000000 sifive_gpio0.c
200168be l     F .text	00000026 __metal_driver_sifive_gpio0_base
200168e4 l     F .text	0000002a __metal_driver_sifive_gpio0_interrupt_parent
2001690e l     F .text	0000035e __metal_driver_sifive_gpio0_interrupt_lines
00000000 l    df *ABS*	00000000 sifive_i2c0.c
2001731c l     F .text	0000002a __metal_driver_sifive_i2c0_control_base
20017346 l     F .text	0000002e __metal_driver_sifive_i2c0_clock
20017374 l     F .text	0000002a __metal_driver_sifive_i2c0_pinmux
2001739e l     F .text	00000028 __metal_driver_sifive_i2c0_pinmux_output_selector
200173c6 l     F .text	00000028 __metal_driver_sifive_i2c0_pinmux_source_selector
200173ee l     F .text	00000034 pre_rate_change_callback
20017422 l     F .text	00000030 post_rate_change_callback
20017452 l     F .text	0000008e __metal_driver_sifive_i2c0_init
200174e0 l     F .text	00000020 __metal_driver_sifive_i2c0_get_baud_rate
20017500 l     F .text	00000156 __metal_driver_sifive_i2c0_set_baud_rate
20017656 l     F .text	00000148 __metal_driver_sifive_i2c0_write_addr
2001779e l     F .text	00000168 __metal_driver_sifive_i2c0_write
20017906 l     F .text	00000158 __metal_driver_sifive_i2c0_read
20017a5e l     F .text	00000260 __metal_driver_sifive_i2c0_transfer
00000000 l    df *ABS*	00000000 sifive_uart0.c
20017cbe l     F .text	00000040 __metal_driver_sifive_uart0_control_base
20017cfe l     F .text	00000048 __metal_driver_sifive_uart0_interrupt_parent
20017d46 l     F .text	0000003c __metal_driver_sifive_uart0_interrupt_line
20017d82 l     F .text	00000048 __metal_driver_sifive_uart0_clock
20017dca l     F .text	00000040 __metal_driver_sifive_uart0_pinmux
20017e0a l     F .text	0000003c __metal_driver_sifive_uart0_pinmux_output_selector
20017e46 l     F .text	00000040 __metal_driver_sifive_uart0_pinmux_source_selector
20018226 l     F .text	000000d8 pre_rate_change_callback_func
200182fe l     F .text	0000002e post_rate_change_callback_func
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfrosc.c
20015f8c l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfrosc_ref
20015fa6 l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfrosc_config_base
20015fbc l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfrosc_config_offset
20015fd0 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfxosc.c
20016088 l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfxosc_ref
200160a2 l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfxosc_config_base
200160b8 l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfxosc_config_offset
200160cc l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_prci.c
20016846 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 cpu.c
00000000 l    df *ABS*	00000000 i2c.c
00000000 l    df *ABS*	00000000 shutdown.c
00000000 l    df *ABS*	00000000 time.c
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 vector.o
20018900 l       .text	00000000 IRQ_0
20018904 l       .text	00000000 IRQ_1
20018908 l       .text	00000000 IRQ_2
2001890c l       .text	00000000 IRQ_3
20018910 l       .text	00000000 IRQ_4
20018914 l       .text	00000000 IRQ_5
20018918 l       .text	00000000 IRQ_6
2001891c l       .text	00000000 IRQ_7
20018920 l       .text	00000000 IRQ_8
20018924 l       .text	00000000 IRQ_9
20018928 l       .text	00000000 IRQ_10
2001892c l       .text	00000000 IRQ_11
20018930 l       .text	00000000 IRQ_12
20018934 l       .text	00000000 IRQ_13
20018938 l       .text	00000000 IRQ_14
2001893c l       .text	00000000 IRQ_15
20018940 l       .text	00000000 IRQ_LC0
20018944 l       .text	00000000 IRQ_LC1
20018948 l       .text	00000000 IRQ_LC2
2001894c l       .text	00000000 IRQ_LC3
20018950 l       .text	00000000 IRQ_LC4
20018954 l       .text	00000000 IRQ_LC5
20018958 l       .text	00000000 IRQ_LC6
2001895c l       .text	00000000 IRQ_LC7
20018960 l       .text	00000000 IRQ_LC8
20018964 l       .text	00000000 IRQ_LC9
20018968 l       .text	00000000 IRQ_LC10
2001896c l       .text	00000000 IRQ_LC11
20018970 l       .text	00000000 IRQ_LC12
20018974 l       .text	00000000 IRQ_LC13
20018978 l       .text	00000000 IRQ_LC14
2001897c l       .text	00000000 IRQ_LC15
00000000 l    df *ABS*	00000000 fixed-clock.c
20018980 l     F .text	00000070 __metal_driver_fixed_clock_rate
00000000 l    df *ABS*	00000000 timer.c
00000000 l    df *ABS*	00000000 sys_close.c
00000000 l    df *ABS*	00000000 sys_fstat.c
00000000 l    df *ABS*	00000000 sys_isatty.c
00000000 l    df *ABS*	00000000 sys_lseek.c
00000000 l    df *ABS*	00000000 sys_read.c
00000000 l    df *ABS*	00000000 sys_sbrk.c
80000b08 l     O .data	00000004 __brk
00000000 l    df *ABS*	00000000 sys_write.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 __atexit.c
80000b24 l     O .bss	0000008c _global_atexit0
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 init.c
80000b1c l     O .bss	00000004 init_done.1531
80000b20 l     O .bss	00000004 fini_done.1540
00000000 l    df *ABS*	00000000 sys_exit.c
00000000 l    df *ABS*	00000000 impure.c
80000000 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 inline.c
00000000 l    df *ABS*	00000000 
200102f4 l       .init_array	00000000 metal_constructors_end
200102f8 l       .init_array	00000000 __fini_array_end
200102f8 l       .init_array	00000000 metal_destructors_end
200102f8 l       .init_array	00000000 metal_destructors_start
200102f8 l       .init_array	00000000 __fini_array_start
200102e8 l       .init_array	00000000 __init_array_end
200102e8 l       .init_array	00000000 __preinit_array_end
200102e8 l       .init_array	00000000 __init_array_start
200102e8 l       .init_array	00000000 metal_constructors_start
200102e8 l       .init_array	00000000 __preinit_array_start
20011230 g     O .rodata	00000040 __metal_driver_vtable_sifive_uart0
2001259c g     F .text	0000002a _isatty_r
200145d2  w    F .text	00000096 metal_lc4_interrupt_vector_handler
2001181a g     F .text	000000da _puts_r
2001865c g     F .text	00000046 metal_i2c_write
200125c6 g     F .text	0000002e _lseek_r
20018490 g     F .text	00000026 metal_clock_get_rate_hz
20018186 g     F .text	000000a0 __metal_driver_sifive_uart0_set_baud_rate
2001397a g     F .text	00000058 __metal_driver_riscv_clint0_set_vector_mode
20017fda g     F .text	0000004a __metal_driver_sifive_uart0_set_tx_watermark
2001453c  w    F .text	00000096 metal_lc3_interrupt_vector_handler
20014dc2 g     F .text	00000064 __metal_valid_interrupt_id
200117d6 g     F .text	00000044 printf
800012c0 g       .data	00000000 __global_pointer$
200102ec g     O .init_array	00000004 _use_hfxosc_ptr
20015240 g     F .text	0000001c __metal_driver_riscv_cpu_controller_get_vector_mode
2001034a g     F .ctors	00000024 metal_tty_init
2001843c g     F .text	00000054 _metal_clock_append_to_callbacks
200157ea g     F .text	00000046 __metal_plic0_complete_interrupt
20015012 g     F .text	000001d6 __metal_driver_riscv_cpu_controller_interrupt_register
200102e8 g     O .init_array	00000004 _metal_sifive_fe310_g000_pll_init_ptr
200124dc g     F .text	00000036 __sseek
20011d36 g     F .text	00000066 __sinit
80000ac4  w    O .data	00000004 __metal_i2c_table
20011902 g     F .text	000000c0 __swbuf_r
80000b10 g       .data	00000000 __tls_base
20011cf2 g     F .text	00000044 __sfmoreglue
20012610 g     F .text	00000002 __malloc_unlock
20018628 g     F .text	00000034 metal_i2c_init
200185e0 g     F .text	0000002e metal_cpu_get
80000a5c g     O .data	00000020 __metal_dt_serial_10013000
20016ef6 g     F .text	0000004a __metal_driver_sifive_gpio0_disable_io
2001070c g     O .rodata	00000064 __metal_driver_vtable_riscv_clint0
80000bb4 g       .bss	00000000 metal_segment_bss_target_end
2001366e g     F .text	0000009a __metal_clint0_mtime_get
2001563e g     F .text	0000002e __metal_driver_cpu_get_instruction_length
00000001 g       *ABS*	00000000 __metal_chicken_bit
2001809e g     F .text	00000030 __metal_driver_sifive_uart0_get_rx_watermark
20016cac g     F .text	00000046 __metal_driver_sifive_gpio0_disable_input
20018c68 g     F .text	0000000c __errno
08000000 g       .rodata	00000000 metal_segment_itim_target_start
20018590 g     F .text	0000002a metal_cpu_get_timebase
20017faa g     F .text	00000030 __metal_driver_sifive_uart0_txready
20017f38 g     F .text	0000003a __metal_driver_sifive_uart0_rx_interrupt_enable
2001014a g     F .init	0000000e __metal_synchronize_harts
80000b10 g       .data	00000000 metal_segment_bss_target_start
20013708 g     F .text	00000096 __metal_driver_riscv_clint0_mtimecmp_set
20012570 g     F .text	0000002c _fstat_r
20017146 g     F .text	00000188 __metal_driver_sifive_gpio0_clear_int
80000bb0 g     O .bss	00000004 errno
20016320 g     F .text	00000170 __metal_driver_sifive_fe310_g000_pll_get_rate_hz
00000400 g       *ABS*	00000000 __stack_size
20018502 g     F .text	00000032 metal_clock_register_pre_rate_change_callback
200148c0  w    F .text	00000096 metal_lc9_interrupt_vector_handler
200100d6  w    F .init	00000000 __metal_before_start
2001962e  w    F .text	00000016 metal_init_run
80000a7c g     O .data	00000020 __metal_dt_serial_10023000
200108ac g     O .rodata	00000064 __metal_driver_vtable_riscv_plic0
20010868 g     O .rodata	00000044 __metal_driver_vtable_cpu
200188ce g     F .text	0000002e metal_uart_set_baud_rate
2001832c g     F .text	000000d0 __metal_driver_sifive_uart0_init
00000000 g       *ABS*	00000000 __metal_eccscrub_bit
80000a38 g     O .data	00000024 __metal_dt_i2c_10016000
200152cc g     F .text	00000072 __metal_driver_cpu_mcycle_get
20011190 g     O .rodata	0000000c __metal_driver_vtable_sifive_fe310_g000_pll
80000fc0 g       .heap	00000000 metal_segment_heap_target_start
20011ce8 g     F .text	0000000a _cleanup_r
20013358 g     F .text	0000006a .hidden __floatsidf
80000ad8 g     O .data	00000008 __metal_dt_cpu_0
2001482a  w    F .text	00000096 metal_lc8_interrupt_vector_handler
200166e0 g     F .text	00000166 __metal_driver_sifive_fe310_g000_pll_set_rate_hz
20018a7e g     F .text	0000004a metal_timer_get_timebase_frequency
20015ef0 g     F .text	00000074 __metal_driver_riscv_plic0_affinity_set_threshold
200118f4 g     F .text	0000000e puts
20014b18  w    F .text	00000096 metal_lc13_interrupt_vector_handler
20013ede g     F .text	00000018 __metal_default_exception_handler
20018aea g     F .text	00000026 _fstat
20013ca0 g     F .text	00000034 __metal_driver_riscv_clint0_set_interrupt
2001525c g     F .text	00000054 __metal_driver_riscv_cpu_controller_set_vector_mode
20013d70 g     F .text	00000030 __metal_driver_cpu_get
20010804 g     O .rodata	00000064 __metal_driver_vtable_riscv_cpu_intc
20013dd2 g     F .text	00000018 __metal_interrupt_global_disable
20015f64 g     F .text	00000028 __metal_driver_riscv_plic0_affinity_get_threshold
20014794  w    F .text	00000096 metal_lc7_interrupt_vector_handler
20014956  w    F .text	00000096 metal_lc10_interrupt_vector_handler
20012434 g     F .text	0000002a _sbrk_r
20015d10 g     F .text	00000050 __metal_driver_riscv_plic0_disable
20014ee2 g     F .text	0000004e __metal_exception_register
2001953e g     F .text	00000078 metal_init
200129c0 g     F .text	0000002e _read_r
20015460 g     F .text	00000016 __metal_driver_cpu_timer_controller_interrupt
20016d8e g     F .text	00000040 __metal_driver_sifive_gpio0_enable_output
80000000 g       .rodata	00000000 metal_segment_lim_target_end
200133c2 g     F .text	00000098 .hidden __extendsfdf2
20013fce g     F .text	00000068 __metal_default_sw_handler
20018534 g     F .text	00000032 metal_clock_register_post_rate_change_callback
8000006c g     O .data	0000000c __metal_dt_clock_2
20017e86 g     F .text	00000020 __metal_driver_sifive_uart0_interrupt_controller
200191ec g     F .text	00000352 .hidden __umoddi3
20018b10 g     F .text	00000020 _isatty
20016e54 g     F .text	00000040 __metal_driver_sifive_gpio0_output_toggle
20017ec6 g     F .text	0000003a __metal_driver_sifive_uart0_tx_interrupt_enable
80000b00 g     O .data	00000008 __metal_driver_vtable_fixed_clock
80000acc g     O .data	00000004 _global_impure_ptr
20014036  w    F .text	00000092 metal_timer_interrupt_vector_handler
20018cd4 g     F .text	0000006a __libc_init_array
20016dce g     F .text	00000040 __metal_driver_sifive_gpio0_output_set
200149ec  w    F .text	00000096 metal_lc11_interrupt_vector_handler
20018e8e g     F .text	0000035e .hidden __udivdi3
20011218 g     O .rodata	00000018 __metal_driver_vtable_sifive_i2c0
20016152 g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz
200151e8 g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_enable
20018b84 g     F .text	0000006a _sbrk
20016d48 g     F .text	00000046 __metal_driver_sifive_gpio0_disable_output
200183fc g     F .text	00000040 _metal_clock_call_all_callbacks
200102c4 g     F .init	00000002 _init
20013e34 g     F .text	0000001a __metal_interrupt_timer_disable
20016f40 g     F .text	00000206 __metal_driver_sifive_gpio0_config_int
20015516 g     F .text	00000062 __metal_driver_cpu_clear_sw_ipi
200111dc g     O .rodata	0000003c __metal_driver_vtable_sifive_gpio0
20017f00 g     F .text	00000038 __metal_driver_sifive_uart0_tx_interrupt_disable
20016e94 g     F .text	00000062 __metal_driver_sifive_gpio0_enable_io
20018c9c g     F .text	00000038 __libc_fini_array
80000ab4 g     O .data	0000000c __metal_dt_clock_4
200195b6 g     F .text	00000078 metal_fini
200172ce g     F .text	00000020 __metal_driver_gpio_interrupt_controller
200154a0 g     F .text	00000014 __metal_driver_cpu_get_sw_interrupt_id
200156aa g     F .text	00000020 __metal_driver_cpu_get_buserror
80000000 g       .data	00000000 metal_segment_data_target_start
20013e86 g     F .text	0000002c __metal_interrupt_local_enable
20013c6c g     F .text	00000034 __metal_driver_riscv_clint0_clear_interrupt
2001965a g     F .text	00000028 metal_tty_putc
200159e8 g     F .text	00000018 __metal_plic0_default_handler
20018bee  w    F .text	00000070 write
00000000 g       *ABS*	00000000 __tbss_size
80000060 g     O .data	0000000c __metal_dt_clock_0
20018754 g     F .text	000000e6 metal_gettimeofday
00000800 g       *ABS*	00000000 __heap_size
20015d60 g     F .text	00000030 __metal_driver_riscv_plic0_set_threshold
200140c8 g     F .text	00000016 __metal_default_beu_handler
200104f8 g     O .rodata	00000020 __sf_fake_stderr
20013e6a g     F .text	0000001c __metal_interrupt_external_disable
20017ea6 g     F .text	00000020 __metal_driver_sifive_uart0_get_interrupt_id
200186a2 g     F .text	00000046 metal_i2c_read
200152b0 g     F .text	0000001c __metal_driver_riscv_cpu_controller_command_request
20014f30 g     F .text	000000e2 __metal_driver_riscv_cpu_controller_interrupt_init
2001357c g     F .text	0000003c .hidden __clzsi2
2001215a g     F .text	00000042 __sfputs_r
200155f8 g     F .text	00000046 __metal_driver_cpu_exception_register
20013dea g     F .text	00000018 __metal_interrupt_software_enable
20014410  w    F .text	00000096 metal_lc1_interrupt_vector_handler
200125f4 g     F .text	0000001a memchr
200186e8 g     F .text	00000030 metal_i2c_set_baud_rate
20011fa6 g     F .text	000000ac _free_r
80000b18 g     O .bss	00000004 _global_atexit
200158b0 g     F .text	00000062 __metal_driver_riscv_plic0_set_priority
20014cda g     F .text	00000050 __metal_controller_interrupt_vector_mode
20018dc6 g     F .text	000000c8 __call_exitprocs
80000fc0 g       .stack	00000000 _sp
200102f0 g     O .init_array	00000004 _metal_tty_init_ptr
20010158 g     F .init	00000000 _start
20015fe2 g     F .text	00000084 __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz
20018a34 g     F .text	0000004a metal_timer_get_cyclecount
20018b30 g     F .text	0000002a _lseek
200155d8 g     F .text	00000020 __metal_driver_cpu_controller_interrupt
2001566c g     F .text	0000001e __metal_driver_cpu_get_exception_pc
20013e4e g     F .text	0000001c __metal_interrupt_external_enable
20018d3e g     F .text	00000088 __register_exitproc
200180ce g     F .text	00000042 __metal_driver_sifive_uart0_putc
20015aa6 g     F .text	00000158 __metal_driver_riscv_plic0_init
20015cc0 g     F .text	00000050 __metal_driver_riscv_plic0_enable
20016d1c g     F .text	0000002c __metal_driver_sifive_gpio0_output
200146fe  w    F .text	00000096 metal_lc6_interrupt_vector_handler
20013da0 g     F .text	0000001a __metal_myhart_id
200172ee g     F .text	0000002e __metal_driver_gpio_get_interrupt_id
20013f3c  w    F .text	00000092 metal_software_interrupt_vector_handler
20015214 g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_disable
20012546 g     F .text	0000002a _close_r
20018566 g     F .text	0000002a metal_cpu_get_timer
20018166 g     F .text	00000020 __metal_driver_sifive_uart0_get_baud_rate
2001385c g     F .text	000000da __metal_driver_riscv_clint0_register
80000ad0 g     O .data	00000008 __metal_dt_clint_2000000
200119c2 g     F .text	00000110 __swsetup_r
200129ee g     F .text	00000536 .hidden __divdf3
20011d9c g     F .text	0000009a __sfp
200184b6 g     F .text	0000004c metal_clock_set_rate_hz
20012f24 g     F .text	00000434 .hidden __muldf3
2001245e g     F .text	00000030 __sread
20016c6c g     F .text	00000040 __metal_driver_sifive_gpio0_enable_input
200102c6  w    F .init	00000000 secondary_main
20013f0e  w    F .text	0000002e metal_interrupt_vector_handler
2001260e g     F .text	00000002 __malloc_lock
20017f72 g     F .text	00000038 __metal_driver_sifive_uart0_rx_interrupt_disable
20011c1c g     F .text	00000064 _fflush_r
20015876 g     F .text	0000003a __metal_plic0_get_threshold
20016858 g     F .text	0000002e __metal_driver_sifive_fe310_g000_prci_get_reg
20010518 g     O .rodata	00000020 __sf_fake_stdin
20014e26 g     F .text	000000bc __metal_local_interrupt_enable
20013b36 g     F .text	00000136 __metal_driver_riscv_clint0_command_request
20011f96 g     F .text	00000010 memset
20014668  w    F .text	00000096 metal_lc5_interrupt_vector_handler
20011300 g     F .text	000004d6 main
80000b10 g       .data	00000000 metal_segment_data_target_end
20018054 g     F .text	0000004a __metal_driver_sifive_uart0_set_rx_watermark
80000ae8 g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_hfrosc
200154b4 g     F .text	00000062 __metal_driver_cpu_set_sw_ipi
20015578 g     F .text	00000060 __metal_driver_cpu_get_msip
20018746 g     F .text	0000000e metal_shutdown
08000000 g       .rodata	00000000 metal_segment_itim_target_end
2001568a g     F .text	00000020 __metal_driver_cpu_set_exception_pc
200157ae g     F .text	0000003c __metal_plic0_claim_interrupt
20018024 g     F .text	00000030 __metal_driver_sifive_uart0_get_tx_watermark
20012512 g     F .text	00000006 __sclose
20014a82  w    F .text	00000096 metal_lc12_interrupt_vector_handler
20010092 g     F .init	00000000 metal_mem_scrub
2001345a g     F .text	00000122 .hidden __truncdfsf2
20012052 g     F .text	000000de _malloc_r
2001395e g     F .text	0000001c __metal_driver_riscv_clint0_get_vector_mode
80000ae4 g     O .data	00000004 __metal_dt_prci_10008000
2001533e g     F .text	00000046 __metal_driver_cpu_timebase_get
20015e54 g     F .text	0000009c __metal_driver_riscv_plic0_affinity_disable
20010000 g       .init	00000000 _enter
2001860e g     F .text	0000001a metal_cpu_get_current_hartid
200160de g     F .text	00000074 __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz
20018900 g       .text	00000000 __metal_vector_table
20011298 g       *ABS*	00000000 metal_segment_itim_source_start
80000ac0  w    O .data	00000004 __metal_cpu_table
80000090 g     O .data	000003d0 __metal_dt_cpu_0_interrupt_controller
200102c4 g     F .init	00000002 _fini
200117d6 g     F .text	00000044 iprintf
80000000 g       .rodata	00000000 metal_segment_lim_target_start
2001060c g     O .rodata	00000100 .hidden __clz_tab
20015912 g     F .text	00000034 __metal_driver_riscv_plic0_get_priority
20010320 g     F .ctors	0000002a use_hfxosc
20013dba g     F .text	00000018 __metal_interrupt_global_enable
20018c5e g     F .text	0000000a atexit
20012518 g     F .text	0000002e _write_r
20013e1a g     F .text	0000001a __metal_interrupt_timer_enable
20018110 g     F .text	00000056 __metal_driver_sifive_uart0_getc
20013a84 g     F .text	000000b2 __metal_driver_riscv_clint0_disable
20012612 g     F .text	0000010c _printf_common
80000ac8 g     O .data	00000004 _impure_ptr
200153ea g     F .text	00000076 __metal_driver_cpu_mtimecmp_set
20011ad2 g     F .text	0000014a __sflush_r
20015d90 g     F .text	00000028 __metal_driver_riscv_plic0_get_threshold
2001627c g     F .text	000000a4 __metal_driver_sifive_fe310_g000_pll_init
80000078 g     O .data	0000000c __metal_dt_clock_5
20016886 g     F .text	00000038 __metal_driver_sifive_fe310_g000_prci_set_reg
200189f0 g     F .text	00000020 __metal_driver_fixed_clock_get_rate_hz
200139d2 g     F .text	000000b2 __metal_driver_riscv_clint0_enable
20019698 g       *ABS*	00000000 metal_segment_data_source_start
2001013c g       .init	00000000 early_trap_vector
800017c0 g       .heap	00000000 metal_segment_heap_target_end
20014d2a g     F .text	00000098 __metal_controller_interrupt_vector
80000aa8 g     O .data	0000000c __metal_dt_clock_1
80000460 g     O .data	000005d8 __metal_dt_interrupt_controller_c000000
20011ea2 g     F .text	00000058 __swhatbuf_r
20016e0e g     F .text	00000046 __metal_driver_sifive_gpio0_output_clear
200140de g     F .text	00000066 __metal_default_timer_handler
20018bee g     F .text	00000070 _write
20015a00 g     F .text	000000a6 __metal_plic0_handler
200144a6  w    F .text	00000096 metal_lc2_interrupt_vector_handler
20014c44  w    F .text	00000096 metal_lc15_interrupt_vector_handler
200185ba g     F .text	00000026 metal_cpu_interrupt_controller
2001248e g     F .text	0000004e __swrite
20018c74 g     F .text	00000028 exit
2001219c g     F .text	00000298 _vfiprintf_r
20011e36 g     F .text	0000006c _fwalk_reent
20018a10 g     F .text	00000024 __metal_driver_fixed_clock_set_rate_hz
20011298 g       *ABS*	00000000 metal_segment_lim_source_start
20010538 g     O .rodata	00000020 __sf_fake_stdout
80000ae0 g     O .data	00000004 __metal_dt_gpio_10012000
20013ef6 g     F .text	00000018 __metal_default_interrupt_handler
200188a0 g     F .text	0000002e metal_uart_putc
20018b5a g     F .text	0000002a _read
20019644  w    F .text	00000016 metal_fini_run
20016cf2 g     F .text	0000002a __metal_driver_sifive_gpio0_input
20014180 g     F .text	00000180 __metal_exception_handler
2001437a  w    F .text	00000096 metal_lc0_interrupt_vector_handler
20019682 g     F .text	00000014 _exit
20018718 g     F .text	0000002e metal_i2c_get_device
20015384 g     F .text	00000066 __metal_driver_cpu_mtime_get
20011efa g     F .text	0000009c __smakebuf_r
20013936 g     F .text	00000028 __metal_driver_riscv_clint0_vector_register
2001271e g     F .text	000002a2 _printf_i
80000b14 g     O .bss	00000004 __malloc_sbrk_start
20014bae  w    F .text	00000096 metal_lc14_interrupt_vector_handler
80000af0 g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_hfxosc
200137d4 g     F .text	00000088 __metal_driver_riscv_clint0_init
80000b10 g     O .bss	00000004 __malloc_free_list
200102f4 g     F .ctors	0000002c metal_sifive_fe310_g000_pll_init
2001219c g     F .text	00000298 _vfprintf_r
20015476 g     F .text	00000014 __metal_driver_cpu_get_timer_interrupt_id
20015946 g     F .text	000000a2 __metal_plic0_enable
20010090  w      .init	00000000 __register_frame_info
20016066 g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz
2001548a g     F .text	00000016 __metal_driver_cpu_sw_controller_interrupt
20013eb2 g     F .text	0000002c __metal_interrupt_local_disable
20013e02 g     F .text	00000018 __metal_interrupt_software_disable
2001883a g     F .text	0000003a metal_time
20018874 g     F .text	0000002c metal_uart_init
80000a9c g     O .data	0000000c __metal_dt_clock_3
80000084 g     O .data	0000000c __metal_dt_clock_6
20015830 g     F .text	00000046 __metal_plic0_set_threshold
20015db8 g     F .text	0000009c __metal_driver_riscv_plic0_affinity_enable
20018ac8 g     F .text	00000022 _close
80000af8 g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_prci
00000000 g       *ABS*	00000000 __metal_boot_hart
20015bfe g     F .text	000000c2 __metal_driver_riscv_plic0_register



Disassembly of section .init:

20010000 <_enter>:
_enter():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:24
     * it's not valid to obtain the address of any symbol without GP
     * configured.  The C environment might go ahead and do this again, but
     * that's safe as it's a fixed register. */
.option push
.option norelax
    la gp, __global_pointer$
20010000:	5fff1197          	auipc	gp,0x5fff1
20010004:	2c018193          	addi	gp,gp,704 # 800012c0 <__global_pointer$>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:28
.option pop

    /* trap over the chicken bit register clearing, aloe & fe310 dont have it */
    la t0, 1f
20010008:	00000297          	auipc	t0,0x0
2001000c:	01828293          	addi	t0,t0,24 # 20010020 <_enter+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:29
    csrw mtvec, t0
20010010:	30529073          	csrw	mtvec,t0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:31
    /* chicken bit is enable if core are sifive series. */
    la t0, __metal_chicken_bit
20010014:	00100293          	li	t0,1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:32
    beqz t0, 1f
20010018:	00028463          	beqz	t0,20010020 <_enter+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:34
    /* If set, always clear the feature disable register for all cores series */
    csrwi 0x7C1, 0
2001001c:	7c105073          	csrwi	0x7c1,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:39
.align 4
1:
    /* Set up a simple trap vector to catch anything that goes wrong early in
     * the boot process. */
    la t0, early_trap_vector
20010020:	00000297          	auipc	t0,0x0
20010024:	11c28293          	addi	t0,t0,284 # 2001013c <early_trap_vector>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:40
    csrw mtvec, t0
20010028:	30529073          	csrw	mtvec,t0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:48
     * C, so here we set up a C environment. First we set up a stack pointer,
     * which is left as a weak reference in order to allow initialization
     * routines that do not need a stack to be set up to transparently be
     * called. */
    .weak __metal_stack_pointer
    la sp, __metal_stack_pointer
2001002c:	dfff0117          	auipc	sp,0xdfff0
20010030:	fd410113          	addi	sp,sp,-44 # 0 <__metal_boot_hart>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:55
   /* The METAL is designed for a bare-metal environment and therefore is expected
    * to define its own stack pointer. We also align the stack pointer here
    * because the only RISC-V ABI that's currently defined, mandates 16-byte
    * stack alignment. */

    bne sp, zero, 1f
20010034:	00011463          	bnez	sp,2001003c <_enter+0x3c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:56
    la sp, _sp
20010038:	d0018113          	addi	sp,gp,-768 # 80000fc0 <_sp>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:59
1:
    /* Increment by hartid number of stack sizes */
    csrr a0, mhartid
2001003c:	f1402573          	csrr	a0,mhartid
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:60
    li t0, 0
20010040:	4281                	li	t0,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:61
    la t1, __stack_size
20010042:	40000313          	li	t1,1024
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:63
1:
    andi sp, sp, -16
20010046:	ff017113          	andi	sp,sp,-16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:64
    beq t0, a0, 1f
2001004a:	00a28563          	beq	t0,a0,20010054 <_enter+0x54>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:65
    add sp, sp, t1
2001004e:	911a                	add	sp,sp,t1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:66
    addi t0, t0, 1
20010050:	0285                	addi	t0,t0,1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:67
    j 1b
20010052:	bfd5                	j	20010046 <_enter+0x46>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:76
     * just skip over the call entirely.   Note that __metal_initialize isn't
     * actually a full C function, as it doesn't end up with the .bss or .data
     * segments having been initialized.  This is done to avoid putting a
     * burden on systems that can be initialized without having a C environment
     * set up. */
    la ra, __metal_before_start
20010054:	00000097          	auipc	ra,0x0
20010058:	08208093          	addi	ra,ra,130 # 200100d6 <__metal_before_start>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:77
    beqz ra, 1f
2001005c:	00008363          	beqz	ra,20010062 <_enter+0x62>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:78
    jalr ra
20010060:	9082                	jalr	ra
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:84
1:

    /* At this point we can enter the C runtime's startup file.  The arguments
     * to this function are designed to match those provided to the SEE, just
     * so we don't have to write another ABI. */
    csrr a0, mhartid
20010062:	f1402573          	csrr	a0,mhartid
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:85
    li a1, 0
20010066:	4581                	li	a1,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:86
    li a2, 0
20010068:	4601                	li	a2,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:87
    call _start
2001006a:	20fd                	jal	20010158 <_start>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:92

    /* If we've made it back here then there's probably something wrong.  We
     * allow the METAL to register a handler here. */
    .weak __metal_after_main
    la ra, __metal_after_main
2001006c:	dfff0097          	auipc	ra,0xdfff0
20010070:	f9408093          	addi	ra,ra,-108 # 0 <__metal_boot_hart>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:93
    beqz ra, 1f
20010074:	00008363          	beqz	ra,2001007a <_enter+0x7a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:94
    jalr ra
20010078:	9082                	jalr	ra
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:99
1:

    /* If that handler returns then there's not a whole lot we can do.  Just
     * try to make some noise. */
     la t0, 1f
2001007a:	00000297          	auipc	t0,0x0
2001007e:	00c28293          	addi	t0,t0,12 # 20010086 <_enter+0x86>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:100
     csrw mtvec, t0
20010082:	30529073          	csrw	mtvec,t0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:102
1:
     lw t1, 0(x0)
20010086:	00002303          	lw	t1,0(zero) # 0 <__metal_boot_hart>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:103
     j 1b
2001008a:	bff5                	j	20010086 <_enter+0x86>
2001008c:	0000                	unimp
	...

20010090 <__register_frame_info>:
__register_frame_info():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:117
.weak __register_frame_info
.global __register_frame_info
.section .text.metal.init.__register_frame_info
__register_frame_info:
    .cfi_startproc
    ret
20010090:	8082                	ret

20010092 <metal_mem_scrub>:
metal_mem_scrub():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:24
.type metal_mem_scrub, @function
metal_mem_scrub:

    /* Disable machine interrupts,
    restore previous mstatus value at exit */
    li      a3, 8
20010092:	46a1                	li	a3,8
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:25
    csrrc   t1, mstatus, a3
20010094:	3006b373          	csrrc	t1,mstatus,a3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:28

#if __riscv_xlen == 32
    addi    t0, x0, 4
20010098:	00400293          	li	t0,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:30
1:
    blt     a1, t0, 2f
2001009c:	0055c563          	blt	a1,t0,200100a6 <metal_mem_scrub+0x14>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:31
    andi    a2, a0, 3
200100a0:	00357613          	andi	a2,a0,3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:32
    beqz    a2, 3f
200100a4:	ca11                	beqz	a2,200100b8 <metal_mem_scrub+0x26>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:34
2:
    sb      x0, 0(a0)
200100a6:	00050023          	sb	zero,0(a0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:35
    addi    a0, a0, 1
200100aa:	0505                	addi	a0,a0,1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:36
    addi    a1, a1, -1
200100ac:	15fd                	addi	a1,a1,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:37
    bgtz    a1, 1b
200100ae:	feb047e3          	bgtz	a1,2001009c <metal_mem_scrub+0xa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:38
    csrw    mstatus, t1
200100b2:	30031073          	csrw	mstatus,t1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:39
    ret
200100b6:	8082                	ret
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:41
3:
    sw      x0, 0(a0)
200100b8:	00052023          	sw	zero,0(a0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:42
    addi    a0, a0, 4
200100bc:	0511                	addi	a0,a0,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:43
    addi    a1, a1, -4
200100be:	15f1                	addi	a1,a1,-4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:44
    bgtz    a1, 1b
200100c0:	fcb04ee3          	bgtz	a1,2001009c <metal_mem_scrub+0xa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:45
    csrw    mstatus, t1
200100c4:	30031073          	csrw	mstatus,t1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:46
    ret
200100c8:	8082                	ret

200100ca <__metal_memory_scrub>:
__metal_memory_scrub():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:74
.type __metal_memory_scrub, @function
__metal_memory_scrub:
/* Zero out specified memory regions */
1:
#if __riscv_xlen == 32
    sw      x0, 0(t1)
200100ca:	00032023          	sw	zero,0(t1)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:75
    addi    t1, t1, 4
200100ce:	0311                	addi	t1,t1,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:76
    blt     t1, t2, 1b
200100d0:	fe734de3          	blt	t1,t2,200100ca <__metal_memory_scrub>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:82
#else
    sd      x0, 0(t1)
    addi    t1, t1, 8
    blt     t1, t2, 1b
#endif
    ret
200100d4:	8082                	ret

200100d6 <__metal_before_start>:
__metal_before_start():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:94
.weak __metal_before_start
.global __metal_before_start
.type __metal_before_start, @function
__metal_before_start:
    /* Save caller ra */
    mv      s0, ra
200100d6:	8406                	mv	s0,ra
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:96

    la      t0, __metal_eccscrub_bit
200100d8:	dfff0297          	auipc	t0,0xdfff0
200100dc:	f2828293          	addi	t0,t0,-216 # 0 <__metal_boot_hart>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:97
    beqz    t0, skip_scrub
200100e0:	04028c63          	beqz	t0,20010138 <skip_scrub>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:99

    la      t0, __metal_boot_hart
200100e4:	dfff0297          	auipc	t0,0xdfff0
200100e8:	f1c28293          	addi	t0,t0,-228 # 0 <__metal_boot_hart>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:100
    csrr    a5, mhartid
200100ec:	f14027f3          	csrr	a5,mhartid
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:103

    /* Disable machine interrupts to be safe */
    li      a3, 8
200100f0:	46a1                	li	a3,8
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:104
    csrc    mstatus, a3
200100f2:	3006b073          	csrc	mstatus,a3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:107

    /* Zero out per hart stack */
    mv      t1, sp
200100f6:	830a                	mv	t1,sp
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:108
    la      t2, __stack_size
200100f8:	dfff0397          	auipc	t2,0xdfff0
200100fc:	30838393          	addi	t2,t2,776 # 400 <__stack_size>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:109
    add     t2, t2, sp
20010100:	938a                	add	t2,t2,sp
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:110
    beq     t1, t2, 1f
20010102:	00730363          	beq	t1,t2,20010108 <__metal_before_start+0x32>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:111
    jal     __metal_memory_scrub
20010106:	37d1                	jal	200100ca <__metal_memory_scrub>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:113
1:
    bne     a5, t0, skip_scrub
20010108:	02579863          	bne	a5,t0,20010138 <skip_scrub>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:116

    /* Zero out data segment */
    la      t1, metal_segment_data_target_start
2001010c:	5fff0317          	auipc	t1,0x5fff0
20010110:	ef430313          	addi	t1,t1,-268 # 80000000 <metal_segment_lim_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:117
    la      t2, metal_segment_data_target_end
20010114:	5fff1397          	auipc	t2,0x5fff1
20010118:	9fc38393          	addi	t2,t2,-1540 # 80000b10 <__tls_base>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:118
    beq     t1, t2, 1f
2001011c:	00730363          	beq	t1,t2,20010122 <__metal_before_start+0x4c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:119
    jal     __metal_memory_scrub
20010120:	376d                	jal	200100ca <__metal_memory_scrub>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:122
1:
    /* Zero out itim memory */
    la      t1, metal_segment_itim_target_start
20010122:	e7ff0317          	auipc	t1,0xe7ff0
20010126:	ede30313          	addi	t1,t1,-290 # 8000000 <metal_segment_itim_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:123
    la      t2, metal_segment_itim_target_end
2001012a:	e7ff0397          	auipc	t2,0xe7ff0
2001012e:	ed638393          	addi	t2,t2,-298 # 8000000 <metal_segment_itim_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:124
    beq     t1, t2, skip_scrub
20010132:	00730363          	beq	t1,t2,20010138 <skip_scrub>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:125
    jal     __metal_memory_scrub
20010136:	3f51                	jal	200100ca <__metal_memory_scrub>

20010138 <skip_scrub>:
skip_scrub():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:129

skip_scrub:
    /* Restore caller ra */
    mv      ra, s0
20010138:	80a2                	mv	ra,s0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:130
    ret
2001013a:	8082                	ret

2001013c <early_trap_vector>:
early_trap_vector():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/trap.S:64
.section .text.metal.init.trapvec
.global early_trap_vector
.align 2
early_trap_vector:
    .cfi_startproc
    csrr t0, mcause
2001013c:	342022f3          	csrr	t0,mcause
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/trap.S:65
    csrr t1, mepc
20010140:	34102373          	csrr	t1,mepc
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/trap.S:66
    csrr t2, mtval
20010144:	343023f3          	csrr	t2,mtval
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/trap.S:67
    j early_trap_vector
20010148:	bfd5                	j	2001013c <early_trap_vector>

2001014a <__metal_synchronize_harts>:
__metal_synchronize_harts():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/synchronize_harts.c:19
/*
 * _synchronize_harts() is called by crt0.S to cause harts > 0 to wait for
 * hart 0 to finish copying the datat section, zeroing the BSS, and running
 * the libc contstructors.
 */
__attribute__((section(".init"))) void __metal_synchronize_harts() {
2001014a:	1141                	addi	sp,sp,-16
2001014c:	c622                	sw	s0,12(sp)
2001014e:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/synchronize_harts.c:66
        while (METAL_MSIP(msip_base, hart) == 1)
            ;
    }

#endif /* __METAL_DT_MAX_HARTS > 1 */
}
20010150:	0001                	nop
20010152:	4432                	lw	s0,12(sp)
20010154:	0141                	addi	sp,sp,16
20010156:	8082                	ret

20010158 <_start>:
_start():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:36
.cfi_startproc
.cfi_undefined ra

  /* This is a bit funky: it's not usually sane for _start to return, but in
   * this case we actually want to in order to signal an error to the METAL. */
  mv s0, ra
20010158:	8406                	mv	s0,ra
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:44
   * safely perform any access that may be relaxed without GP being set.  This
   * is done with relaxation disabled to avoid relaxing the address calculation
   * to just "addi gp, gp, 0". */
.option push
.option norelax
  la gp, __global_pointer$
2001015a:	5fff1197          	auipc	gp,0x5fff1
2001015e:	16618193          	addi	gp,gp,358 # 800012c0 <__global_pointer$>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:50
.option pop

  /* Stack pointer is expected to be initialized before _start */

  /* If we're not hart 0, skip the initialization work */
  la t0, __metal_boot_hart
20010162:	00000293          	li	t0,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:51
  bne a0, t0, _skip_init
20010166:	0e551163          	bne	a0,t0,20010248 <_skip_init>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:60
   * boot and then need to get relocated into a non-persistant writable memory
   * before C code can execute.  If this is the case we do so here.  This step
   * is optional: if the METAL provides an environment in which this relocation
   * is not necessary then it must simply set metal_segment_data_source_start to
   * be equal to metal_segment_data_target_start. */
  la t0, metal_segment_data_source_start
2001016a:	00009297          	auipc	t0,0x9
2001016e:	52e28293          	addi	t0,t0,1326 # 20019698 <metal_segment_data_source_start>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:61
  la t1, metal_segment_data_target_start
20010172:	5fff0317          	auipc	t1,0x5fff0
20010176:	e8e30313          	addi	t1,t1,-370 # 80000000 <metal_segment_lim_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:62
  la t2, metal_segment_data_target_end
2001017a:	5fff1397          	auipc	t2,0x5fff1
2001017e:	99638393          	addi	t2,t2,-1642 # 80000b10 <__tls_base>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:64

  beq t0, t1, 2f
20010182:	00628c63          	beq	t0,t1,2001019a <_start+0x42>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:65
  bge t1, t2, 2f
20010186:	00735a63          	bge	t1,t2,2001019a <_start+0x42>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:69

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
2001018a:	0002a503          	lw	a0,0(t0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:70
  addi t0, t0, 4
2001018e:	0291                	addi	t0,t0,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:71
  sw   a0, 0(t1)
20010190:	00a32023          	sw	a0,0(t1)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:72
  addi t1, t1, 4
20010194:	0311                	addi	t1,t1,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:73
  blt  t1, t2, 1b
20010196:	fe734ae3          	blt	t1,t2,2001018a <_start+0x32>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:84
  blt  t1, t2, 1b
#endif
2:

  /* Copy the ITIM section */
  la t0, metal_segment_itim_source_start
2001019a:	00001297          	auipc	t0,0x1
2001019e:	0fe28293          	addi	t0,t0,254 # 20011298 <metal_segment_itim_source_start>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:85
  la t1, metal_segment_itim_target_start
200101a2:	e7ff0317          	auipc	t1,0xe7ff0
200101a6:	e5e30313          	addi	t1,t1,-418 # 8000000 <metal_segment_itim_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:86
  la t2, metal_segment_itim_target_end
200101aa:	e7ff0397          	auipc	t2,0xe7ff0
200101ae:	e5638393          	addi	t2,t2,-426 # 8000000 <metal_segment_itim_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:88

  beq t0, t1, 2f
200101b2:	00628c63          	beq	t0,t1,200101ca <_start+0x72>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:89
  bge t1, t2, 2f
200101b6:	00735a63          	bge	t1,t2,200101ca <_start+0x72>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:93

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
200101ba:	0002a503          	lw	a0,0(t0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:94
  addi t0, t0, 4
200101be:	0291                	addi	t0,t0,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:95
  sw   a0, 0(t1)
200101c0:	00a32023          	sw	a0,0(t1)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:96
  addi t1, t1, 4
200101c4:	0311                	addi	t1,t1,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:97
  blt  t1, t2, 1b
200101c6:	fe734ae3          	blt	t1,t2,200101ba <_start+0x62>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:109
#endif
2:

  /* Fence all subsequent instruction fetches until after the ITIM writes
     complete */
  fence.i
200101ca:	0000100f          	fence.i
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:114

2:

  /* Copy the LIM section */
  la t0, metal_segment_lim_source_start
200101ce:	00001297          	auipc	t0,0x1
200101d2:	0ca28293          	addi	t0,t0,202 # 20011298 <metal_segment_itim_source_start>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:115
  la t1, metal_segment_lim_target_start
200101d6:	5fff0317          	auipc	t1,0x5fff0
200101da:	e2a30313          	addi	t1,t1,-470 # 80000000 <metal_segment_lim_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:116
  la t2, metal_segment_lim_target_end
200101de:	5fff0397          	auipc	t2,0x5fff0
200101e2:	e2238393          	addi	t2,t2,-478 # 80000000 <metal_segment_lim_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:118

  beq t0, t1, 2f
200101e6:	00628c63          	beq	t0,t1,200101fe <_start+0xa6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:119
  bge t1, t2, 2f
200101ea:	00735a63          	bge	t1,t2,200101fe <_start+0xa6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:123

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
200101ee:	0002a503          	lw	a0,0(t0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:124
  addi t0, t0, 4
200101f2:	0291                	addi	t0,t0,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:125
  sw   a0, 0(t1)
200101f4:	00a32023          	sw	a0,0(t1)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:126
  addi t1, t1, 4
200101f8:	0311                	addi	t1,t1,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:127
  blt  t1, t2, 1b
200101fa:	fe734ae3          	blt	t1,t2,200101ee <_start+0x96>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:139
#endif
2:

  /* Fence all subsequent instruction fetches until after the LIM writes
     complete */
  fence.i
200101fe:	0000100f          	fence.i
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:142

  /* Zero the BSS segment. */
  la t1, metal_segment_bss_target_start
20010202:	5fff1317          	auipc	t1,0x5fff1
20010206:	90e30313          	addi	t1,t1,-1778 # 80000b10 <__tls_base>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:143
  la t2, metal_segment_bss_target_end
2001020a:	8f418393          	addi	t2,gp,-1804 # 80000bb4 <metal_segment_bss_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:145

  bge t1, t2, 2f
2001020e:	00735763          	bge	t1,t2,2001021c <_start+0xc4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:149

1:
#if __riscv_xlen == 32
  sw   x0, 0(t1)
20010212:	00032023          	sw	zero,0(t1)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:150
  addi t1, t1, 4
20010216:	0311                	addi	t1,t1,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:151
  blt  t1, t2, 1b
20010218:	fe734de3          	blt	t1,t2,20010212 <_start+0xba>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:161
#endif
2:

  /* Set TLS pointer */
  .weak __tls_base	
  la tp, __tls_base
2001021c:	5fff1217          	auipc	tp,0x5fff1
20010220:	8f420213          	addi	tp,tp,-1804 # 80000b10 <__tls_base>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:166

  /* At this point we're in an environment that can execute C code.  The first
   * thing to do is to make the callback to the parent environment if it's been
   * requested to do so. */
  beqz a2, 1f
20010224:	c211                	beqz	a2,20010228 <_start+0xd0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:167
  jalr a2
20010226:	9602                	jalr	a2
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:171
1:

  /* The RISC-V port only uses new-style constructors and destructors. */
  la a0, __libc_fini_array
20010228:	00009517          	auipc	a0,0x9
2001022c:	a7450513          	addi	a0,a0,-1420 # 20018c9c <__libc_fini_array>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:172
  call atexit
20010230:	22f080ef          	jal	ra,20018c5e <atexit>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:173
  call __libc_init_array
20010234:	2a1080ef          	jal	ra,20018cd4 <__libc_init_array>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:177

  /* Register metal_fini_run as a destructor and call metal_init_run to
   * run and setup Metal constructors */
  la a0, metal_fini_run
20010238:	00009517          	auipc	a0,0x9
2001023c:	40c50513          	addi	a0,a0,1036 # 20019644 <metal_fini_run>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:178
  call atexit
20010240:	21f080ef          	jal	ra,20018c5e <atexit>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:179
  call metal_init_run
20010244:	3ea090ef          	jal	ra,2001962e <metal_init_run>

20010248 <_skip_init>:
_skip_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:185

_skip_init:

  /* Synchronize harts so that secondary harts wait until hart 0 finishes
     initializing */
  call __metal_synchronize_harts
20010248:	3709                	jal	2001014a <__metal_synchronize_harts>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:188

  /* Disable and clear all interrupt sources */
  li   a3, -1
2001024a:	56fd                	li	a3,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:189
  csrc mie, a3
2001024c:	3046b073          	csrc	mie,a3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:190
  csrc mip, a3
20010250:	3446b073          	csrc	mip,a3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:194

  /* The delegation CSRs exist if user mode interrupts (N extension) or
   * supervisor mode (S extension) are supported */
  csrr a5, misa
20010254:	301027f3          	csrr	a5,misa
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:195
  lui  a4, 0x42
20010258:	00042737          	lui	a4,0x42
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:196
  and  a4, a4, a5
2001025c:	8f7d                	and	a4,a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:197
  beqz a4, 1f
2001025e:	c709                	beqz	a4,20010268 <_skip_init+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:198
  csrc mideleg, a3
20010260:	3036b073          	csrc	mideleg,a3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:199
  csrc medeleg, a3
20010264:	3026b073          	csrc	medeleg,a3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:203
1:

  /* The satp CSR exists if supervisor mode (S extension) is supported */
  lui  a4, 0x40
20010268:	00040737          	lui	a4,0x40
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:204
  and  a4, a4, a5
2001026c:	8f7d                	and	a4,a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:205
  beqz a4, 1f
2001026e:	c319                	beqz	a4,20010274 <_skip_init+0x2c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:206
  csrc satp, a3
20010270:	1806b073          	csrc	satp,a3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:210
1:

  /* Check RISC-V isa and enable FS bits if Floating Point architecture. */
  li   a4, 0x10028
20010274:	00010737          	lui	a4,0x10
20010278:	02870713          	addi	a4,a4,40 # 10028 <__heap_size+0xf828>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:211
  and  a5, a5, a4
2001027c:	8ff9                	and	a5,a5,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:212
  beqz a5, 1f
2001027e:	cb89                	beqz	a5,20010290 <_skip_init+0x48>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:213
  csrr a5, mstatus
20010280:	300027f3          	csrr	a5,mstatus
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:214
  lui  a4, 0x2
20010284:	6709                	lui	a4,0x2
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:215
  or   a5, a5, a4
20010286:	8fd9                	or	a5,a5,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:216
  csrw mstatus, a5
20010288:	30079073          	csrw	mstatus,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:217
  csrwi fcsr, 0
2001028c:	00305073          	csrwi	fcsr,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:221
1:

  /* Check for vector extension support and enable it if found */
  csrr a5, misa
20010290:	301027f3          	csrr	a5,misa
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:222
  li a4, 0x200000
20010294:	00200737          	lui	a4,0x200
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:223
  and a5, a5, a4
20010298:	8ff9                	and	a5,a5,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:224
  beqz a5, 1f
2001029a:	c799                	beqz	a5,200102a8 <_skip_init+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:225
  csrr a5, mstatus
2001029c:	300027f3          	csrr	a5,mstatus
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:226
  ori a5, a5, 0x200
200102a0:	2007e793          	ori	a5,a5,512
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:227
  csrw mstatus, a5
200102a4:	30079073          	csrw	mstatus,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:233
1:

  /* This is a C runtime, so main() is defined to have some arguments.  Since
   * there's nothing sane the METAL can pass we don't bother with that but
   * instead just setup as close to a NOP as we can. */
  li a0, 1     /* argc=1 */
200102a8:	4505                	li	a0,1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:234
  la a1, argv  /* argv = {"libgloss", NULL} */
200102aa:	00001597          	auipc	a1,0x1
200102ae:	fc658593          	addi	a1,a1,-58 # 20011270 <argv>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:235
  la a2, envp  /* envp = {NULL} */
200102b2:	00001617          	auipc	a2,0x1
200102b6:	fc260613          	addi	a2,a2,-62 # 20011274 <envp>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:236
  call secondary_main
200102ba:	2031                	jal	200102c6 <secondary_main>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:242

  /* Call exit to handle libc's cleanup routines.  Under normal contains this
   * shouldn't even get called, but I'm still not using a tail call here
   * because returning to the METAL is the right thing to do in pathological
   * situations. */
  call exit
200102bc:	1b9080ef          	jal	ra,20018c74 <exit>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:247

  /* And here's where we return.  Again, it's a bit odd but the METAL defines
   * this as a bad idea (ie, as opposed to leaving it undefined) and at this
   * point it's really the only thing left to do. */
  mv ra, s0
200102c0:	80a2                	mv	ra,s0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:248
  ret
200102c2:	8082                	ret

200102c4 <_fini>:
_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:260
.type   _init, @function
.global _fini
.type   _fini, @function
_init:
_fini:
  ret
200102c4:	8082                	ret

200102c6 <secondary_main>:
secondary_main():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:271
.weak   secondary_main
.global secondary_main
.type   secondary_main, @function

secondary_main:
  addi sp, sp, -16
200102c6:	1141                	addi	sp,sp,-16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:273
#if __riscv_xlen == 32
  sw ra, 4(sp)
200102c8:	c206                	sw	ra,4(sp)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:277
#else
  sd ra, 8(sp)
#endif
  csrr t0, mhartid
200102ca:	f14022f3          	csrr	t0,mhartid
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:278
  la t1, __metal_boot_hart
200102ce:	00000313          	li	t1,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:279
  beq t0, t1, 2f
200102d2:	00628563          	beq	t0,t1,200102dc <secondary_main+0x16>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:281
1:
  wfi
200102d6:	10500073          	wfi
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:282
  j 1b
200102da:	bff5                	j	200102d6 <secondary_main+0x10>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:284
2:
  call main
200102dc:	024010ef          	jal	ra,20011300 <main>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:286
#if __riscv_xlen == 32
  lw ra, 4(sp)
200102e0:	4092                	lw	ra,4(sp)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:290
#else
  ld ra, 8(sp)
#endif
  addi sp, sp, 16
200102e2:	0141                	addi	sp,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:291
  ret
200102e4:	8082                	ret

Disassembly of section .ctors:

200102f4 <metal_sifive_fe310_g000_pll_init>:
metal_sifive_fe310_g000_pll_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:151
    return pll_input_rate * config->multiplier / config->divisor;
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE

METAL_CONSTRUCTOR(metal_sifive_fe310_g000_pll_init) {
200102f4:	1101                	addi	sp,sp,-32
200102f6:	ce06                	sw	ra,28(sp)
200102f8:	cc22                	sw	s0,24(sp)
200102fa:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:152
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
200102fc:	6f9050ef          	jal	ra,200161f4 <__metal_driver_sifive_fe310_g000_pll_init_rate>
20010300:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:154
    /* If the PLL init_rate is zero, don't initialize the PLL */
    if (init_rate != 0)
20010304:	fec42783          	lw	a5,-20(s0)
20010308:	c799                	beqz	a5,20010316 <__fini_array_end+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:155
        __metal_driver_sifive_fe310_g000_pll_init(
2001030a:	800017b7          	lui	a5,0x80001
2001030e:	ab478513          	addi	a0,a5,-1356 # 80000ab4 <metal_segment_heap_target_end+0xfffff2f4>
20010312:	76b050ef          	jal	ra,2001627c <__metal_driver_sifive_fe310_g000_pll_init>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:157
            __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE);
}
20010316:	0001                	nop
20010318:	40f2                	lw	ra,28(sp)
2001031a:	4462                	lw	s0,24(sp)
2001031c:	6105                	addi	sp,sp,32
2001031e:	8082                	ret

20010320 <use_hfxosc>:
use_hfxosc():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:389

    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE
METAL_CONSTRUCTOR(use_hfxosc) {
20010320:	1101                	addi	sp,sp,-32
20010322:	ce06                	sw	ra,28(sp)
20010324:	cc22                	sw	s0,24(sp)
20010326:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:390
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20010328:	6cd050ef          	jal	ra,200161f4 <__metal_driver_sifive_fe310_g000_pll_init_rate>
2001032c:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:391
    metal_clock_set_rate_hz(&__METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE->clock,
20010330:	fec42583          	lw	a1,-20(s0)
20010334:	800017b7          	lui	a5,0x80001
20010338:	ab478513          	addi	a0,a5,-1356 # 80000ab4 <metal_segment_heap_target_end+0xfffff2f4>
2001033c:	17a080ef          	jal	ra,200184b6 <metal_clock_set_rate_hz>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:393
                            init_rate);
}
20010340:	0001                	nop
20010342:	40f2                	lw	ra,28(sp)
20010344:	4462                	lw	s0,24(sp)
20010346:	6105                	addi	sp,sp,32
20010348:	8082                	ret

2001034a <metal_tty_init>:
metal_tty_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/tty.c:28

#ifndef __METAL_DT_STDOUT_UART_BAUD
#define __METAL_DT_STDOUT_UART_BAUD 115200
#endif

METAL_CONSTRUCTOR(metal_tty_init) {
2001034a:	1141                	addi	sp,sp,-16
2001034c:	c606                	sw	ra,12(sp)
2001034e:	c422                	sw	s0,8(sp)
20010350:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/tty.c:29
    metal_uart_init(__METAL_DT_STDOUT_UART_HANDLE, __METAL_DT_STDOUT_UART_BAUD);
20010352:	67f1                	lui	a5,0x1c
20010354:	20078593          	addi	a1,a5,512 # 1c200 <__heap_size+0x1ba00>
20010358:	800017b7          	lui	a5,0x80001
2001035c:	a5c78513          	addi	a0,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
20010360:	514080ef          	jal	ra,20018874 <metal_uart_init>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/tty.c:30
}
20010364:	0001                	nop
20010366:	40b2                	lw	ra,12(sp)
20010368:	4422                	lw	s0,8(sp)
2001036a:	0141                	addi	sp,sp,16
2001036c:	8082                	ret

Disassembly of section .text:

20011300 <main>:
main():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:62
#define WAIT_1S(timeout)                                                       \
  timeout = time(NULL) + 1;                                                    \
  while (timeout > time(NULL))                                                 \
    ;

int main() {
20011300:	7139                	addi	sp,sp,-64
20011302:	de06                	sw	ra,60(sp)
20011304:	dc22                	sw	s0,56(sp)
20011306:	0080                	addi	s0,sp,64
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:74
	 * [4] accelero x-axis MSB
	 * [5] accelero x-axis LSB
	 * [6] accelero y-axis MSB
	 * [7] accelero y-axis LSB
	 * */
	unsigned char imu_addr_buf[LEN8] = { IMU_WHO_AM_I_SUBADDR, IMU_STATUS_REG_SUBADDR,
20011308:	200117b7          	lui	a5,0x20011
2001130c:	28878793          	addi	a5,a5,648 # 20011288 <name+0x10>
20011310:	4398                	lw	a4,0(a5)
20011312:	fce42823          	sw	a4,-48(s0)
20011316:	43dc                	lw	a5,4(a5)
20011318:	fcf42a23          	sw	a5,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:83
	unsigned char imu_buf[LEN8];
	time_t timeout;
	struct metal_i2c *i2c;
//	struct metal_gpio *gpio;

	i2c = metal_i2c_get_device(0);
2001131c:	4501                	li	a0,0
2001131e:	3fa070ef          	jal	ra,20018718 <metal_i2c_get_device>
20011322:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:86
//	gpio = metal_gpio_get_device(0);

	if (i2c == NULL) {
20011326:	fec42783          	lw	a5,-20(s0)
2001132a:	eb81                	bnez	a5,2001133a <main+0x3a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:87
		printf("I2C not available \n");
2001132c:	200107b7          	lui	a5,0x20010
20011330:	37078513          	addi	a0,a5,880 # 20010370 <metal_tty_init+0x26>
20011334:	23c1                	jal	200118f4 <puts>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:88
		return RET_NOK;
20011336:	4785                	li	a5,1
20011338:	a951                	j	200117cc <main+0x4cc>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:95
//	if (gpio == NULL) {
//		printf("GPIO not available \n");
//		return RET_NOK;
//	}

	metal_i2c_init(i2c, I2C_BAUDRATE, METAL_I2C_MASTER);
2001133a:	4605                	li	a2,1
2001133c:	67e1                	lui	a5,0x18
2001133e:	6a078593          	addi	a1,a5,1696 # 186a0 <__heap_size+0x17ea0>
20011342:	fec42503          	lw	a0,-20(s0)
20011346:	2e2070ef          	jal	ra,20018628 <metal_i2c_init>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:98

	/* Read IMU Chip ID */
	if (metal_i2c_write(i2c, IMU_I2C_ADDR, LEN1, imu_addr_buf, METAL_I2C_STOP_DISABLE) == RET_OK) {
2001134a:	fd040793          	addi	a5,s0,-48
2001134e:	4701                	li	a4,0
20011350:	86be                	mv	a3,a5
20011352:	4605                	li	a2,1
20011354:	06a00593          	li	a1,106
20011358:	fec42503          	lw	a0,-20(s0)
2001135c:	300070ef          	jal	ra,2001865c <metal_i2c_write>
20011360:	87aa                	mv	a5,a0
20011362:	e795                	bnez	a5,2001138e <main+0x8e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:99
		if (metal_i2c_read(i2c, IMU_I2C_ADDR, LEN1, imu_buf, METAL_I2C_STOP_ENABLE) == RET_OK) {
20011364:	fc840793          	addi	a5,s0,-56
20011368:	4705                	li	a4,1
2001136a:	86be                	mv	a3,a5
2001136c:	4605                	li	a2,1
2001136e:	06a00593          	li	a1,106
20011372:	fec42503          	lw	a0,-20(s0)
20011376:	32c070ef          	jal	ra,200186a2 <metal_i2c_read>
2001137a:	87aa                	mv	a5,a0
2001137c:	eb89                	bnez	a5,2001138e <main+0x8e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:100
			printf("Data read = %X\n", imu_buf[0]);
2001137e:	fc844783          	lbu	a5,-56(s0)
20011382:	85be                	mv	a1,a5
20011384:	200107b7          	lui	a5,0x20010
20011388:	38478513          	addi	a0,a5,900 # 20010384 <metal_tty_init+0x3a>
2001138c:	21a9                	jal	200117d6 <iprintf>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:105
		}
	}

	/* Verify IMU Chip ID */
	if (imu_buf[0] == IMU_SENSOR_ID) {
2001138e:	fc844703          	lbu	a4,-56(s0)
20011392:	06900793          	li	a5,105
20011396:	00f71863          	bne	a4,a5,200113a6 <main+0xa6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:106
		printf("IMU module detected!\n");
2001139a:	200107b7          	lui	a5,0x20010
2001139e:	39478513          	addi	a0,a5,916 # 20010394 <metal_tty_init+0x4a>
200113a2:	2b89                	jal	200118f4 <puts>
200113a4:	a031                	j	200113b0 <main+0xb0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:108
	} else {
		printf("Failed to detect IMU module!\n");
200113a6:	200107b7          	lui	a5,0x20010
200113aa:	3ac78513          	addi	a0,a5,940 # 200103ac <metal_tty_init+0x62>
200113ae:	2399                	jal	200118f4 <puts>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:113
		//return RET_NOK;
	}

	/* Enable IMU */
	unsigned char imu_ctrl_buf[LEN4] = { IMU_CTRL1_XL_SUBADDR, 0xA0,
200113b0:	200117b7          	lui	a5,0x20011
200113b4:	2907a783          	lw	a5,656(a5) # 20011290 <name+0x18>
200113b8:	fcf42223          	sw	a5,-60(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:115
										IMU_CTRL2_G_SUBADDR, 0x80 };
	if (metal_i2c_write(i2c, IMU_I2C_ADDR, LEN2, imu_ctrl_buf, METAL_I2C_STOP_ENABLE) == RET_OK) {
200113bc:	fc440793          	addi	a5,s0,-60
200113c0:	4705                	li	a4,1
200113c2:	86be                	mv	a3,a5
200113c4:	4609                	li	a2,2
200113c6:	06a00593          	li	a1,106
200113ca:	fec42503          	lw	a0,-20(s0)
200113ce:	28e070ef          	jal	ra,2001865c <metal_i2c_write>
200113d2:	87aa                	mv	a5,a0
200113d4:	e791                	bnez	a5,200113e0 <main+0xe0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:116
		printf("IMU accelero enabled!\n");
200113d6:	200107b7          	lui	a5,0x20010
200113da:	3cc78513          	addi	a0,a5,972 # 200103cc <metal_tty_init+0x82>
200113de:	2b19                	jal	200118f4 <puts>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:118
	}
	if (metal_i2c_write(i2c, IMU_I2C_ADDR, LEN2, imu_ctrl_buf + 2, METAL_I2C_STOP_ENABLE) == RET_OK) {
200113e0:	fc440793          	addi	a5,s0,-60
200113e4:	0789                	addi	a5,a5,2
200113e6:	4705                	li	a4,1
200113e8:	86be                	mv	a3,a5
200113ea:	4609                	li	a2,2
200113ec:	06a00593          	li	a1,106
200113f0:	fec42503          	lw	a0,-20(s0)
200113f4:	268070ef          	jal	ra,2001865c <metal_i2c_write>
200113f8:	87aa                	mv	a5,a0
200113fa:	e791                	bnez	a5,20011406 <main+0x106>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:119
		printf("IMU gyro enabled!\n");
200113fc:	200107b7          	lui	a5,0x20010
20011400:	3e478513          	addi	a0,a5,996 # 200103e4 <metal_tty_init+0x9a>
20011404:	29c5                	jal	200118f4 <puts>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:123
	}

	/* Initialize variables for raw sensor values */
	short rawGyroZ = 0;
20011406:	fe041523          	sh	zero,-22(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:124
	short rawAcceleroX = 0;
2001140a:	fe041423          	sh	zero,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:125
	short rawAcceleroY = 0;
2001140e:	fe041323          	sh	zero,-26(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:127

	float gyroZ = 0;
20011412:	00000793          	li	a5,0
20011416:	fef42023          	sw	a5,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:128
	float acceleroX = 0;
2001141a:	fcf42e23          	sw	a5,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:129
	float acceleroY = 0;
2001141e:	fcf42c23          	sw	a5,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:134

	while(1) {

		/* Read IMU Status Register */
		if (metal_i2c_write(i2c, IMU_I2C_ADDR, LEN1, imu_addr_buf + 1, METAL_I2C_STOP_DISABLE) == RET_OK) {
20011422:	fd040793          	addi	a5,s0,-48
20011426:	0785                	addi	a5,a5,1
20011428:	4701                	li	a4,0
2001142a:	86be                	mv	a3,a5
2001142c:	4605                	li	a2,1
2001142e:	06a00593          	li	a1,106
20011432:	fec42503          	lw	a0,-20(s0)
20011436:	226070ef          	jal	ra,2001865c <metal_i2c_write>
2001143a:	87aa                	mv	a5,a0
2001143c:	e79d                	bnez	a5,2001146a <main+0x16a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:135
			if (metal_i2c_read(i2c, IMU_I2C_ADDR, LEN1, imu_buf + 1, METAL_I2C_STOP_ENABLE) == RET_OK) {
2001143e:	fc840793          	addi	a5,s0,-56
20011442:	0785                	addi	a5,a5,1
20011444:	4705                	li	a4,1
20011446:	86be                	mv	a3,a5
20011448:	4605                	li	a2,1
2001144a:	06a00593          	li	a1,106
2001144e:	fec42503          	lw	a0,-20(s0)
20011452:	250070ef          	jal	ra,200186a2 <metal_i2c_read>
20011456:	87aa                	mv	a5,a0
20011458:	eb89                	bnez	a5,2001146a <main+0x16a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:136
				printf("Status Reg = %X\n", imu_buf[1]);
2001145a:	fc944783          	lbu	a5,-55(s0)
2001145e:	85be                	mv	a1,a5
20011460:	200107b7          	lui	a5,0x20010
20011464:	3f878513          	addi	a0,a5,1016 # 200103f8 <metal_tty_init+0xae>
20011468:	26bd                	jal	200117d6 <iprintf>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:141
			}
		}

		/* Read IMU Gyro (z-axis) */
		if (metal_i2c_write(i2c, IMU_I2C_ADDR, LEN1, imu_addr_buf + 2, METAL_I2C_STOP_DISABLE) == RET_OK) {
2001146a:	fd040793          	addi	a5,s0,-48
2001146e:	0789                	addi	a5,a5,2
20011470:	4701                	li	a4,0
20011472:	86be                	mv	a3,a5
20011474:	4605                	li	a2,1
20011476:	06a00593          	li	a1,106
2001147a:	fec42503          	lw	a0,-20(s0)
2001147e:	1de070ef          	jal	ra,2001865c <metal_i2c_write>
20011482:	87aa                	mv	a5,a0
20011484:	e79d                	bnez	a5,200114b2 <main+0x1b2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:142
			if (metal_i2c_read(i2c, IMU_I2C_ADDR, LEN1, imu_buf + 2, METAL_I2C_STOP_ENABLE) == RET_OK) {
20011486:	fc840793          	addi	a5,s0,-56
2001148a:	0789                	addi	a5,a5,2
2001148c:	4705                	li	a4,1
2001148e:	86be                	mv	a3,a5
20011490:	4605                	li	a2,1
20011492:	06a00593          	li	a1,106
20011496:	fec42503          	lw	a0,-20(s0)
2001149a:	208070ef          	jal	ra,200186a2 <metal_i2c_read>
2001149e:	87aa                	mv	a5,a0
200114a0:	eb89                	bnez	a5,200114b2 <main+0x1b2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:143
				printf("Gyro Z MSB = %X\n", imu_buf[2]);
200114a2:	fca44783          	lbu	a5,-54(s0)
200114a6:	85be                	mv	a1,a5
200114a8:	200107b7          	lui	a5,0x20010
200114ac:	40c78513          	addi	a0,a5,1036 # 2001040c <metal_tty_init+0xc2>
200114b0:	261d                	jal	200117d6 <iprintf>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:146
			}
		}
		if (metal_i2c_write(i2c, IMU_I2C_ADDR, LEN1, imu_addr_buf + 3, METAL_I2C_STOP_DISABLE) == RET_OK) {
200114b2:	fd040793          	addi	a5,s0,-48
200114b6:	078d                	addi	a5,a5,3
200114b8:	4701                	li	a4,0
200114ba:	86be                	mv	a3,a5
200114bc:	4605                	li	a2,1
200114be:	06a00593          	li	a1,106
200114c2:	fec42503          	lw	a0,-20(s0)
200114c6:	196070ef          	jal	ra,2001865c <metal_i2c_write>
200114ca:	87aa                	mv	a5,a0
200114cc:	e79d                	bnez	a5,200114fa <main+0x1fa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:147
			if (metal_i2c_read(i2c, IMU_I2C_ADDR, LEN1, imu_buf + 3, METAL_I2C_STOP_ENABLE) == RET_OK) {
200114ce:	fc840793          	addi	a5,s0,-56
200114d2:	078d                	addi	a5,a5,3
200114d4:	4705                	li	a4,1
200114d6:	86be                	mv	a3,a5
200114d8:	4605                	li	a2,1
200114da:	06a00593          	li	a1,106
200114de:	fec42503          	lw	a0,-20(s0)
200114e2:	1c0070ef          	jal	ra,200186a2 <metal_i2c_read>
200114e6:	87aa                	mv	a5,a0
200114e8:	eb89                	bnez	a5,200114fa <main+0x1fa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:148
				printf("Gyro Z LSB = %X\n", imu_buf[3]);
200114ea:	fcb44783          	lbu	a5,-53(s0)
200114ee:	85be                	mv	a1,a5
200114f0:	200107b7          	lui	a5,0x20010
200114f4:	42078513          	addi	a0,a5,1056 # 20010420 <metal_tty_init+0xd6>
200114f8:	2cf9                	jal	200117d6 <iprintf>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:151
			}
		}
		rawGyroZ = (short) ((imu_buf[2] << 8) | imu_buf[3]);
200114fa:	fca44783          	lbu	a5,-54(s0)
200114fe:	07a2                	slli	a5,a5,0x8
20011500:	01079713          	slli	a4,a5,0x10
20011504:	8741                	srai	a4,a4,0x10
20011506:	fcb44783          	lbu	a5,-53(s0)
2001150a:	07c2                	slli	a5,a5,0x10
2001150c:	87c1                	srai	a5,a5,0x10
2001150e:	8fd9                	or	a5,a5,a4
20011510:	fef41523          	sh	a5,-22(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:152
		gyroZ = rawGyroZ * GYRO_SCALE * DPS_TO_RADS / 1000.0;
20011514:	fea41783          	lh	a5,-22(s0)
20011518:	853e                	mv	a0,a5
2001151a:	63f010ef          	jal	ra,20013358 <__floatsidf>
2001151e:	200107b7          	lui	a5,0x20010
20011522:	4d07a603          	lw	a2,1232(a5) # 200104d0 <metal_tty_init+0x186>
20011526:	4d47a683          	lw	a3,1236(a5)
2001152a:	1fb010ef          	jal	ra,20012f24 <__muldf3>
2001152e:	87aa                	mv	a5,a0
20011530:	882e                	mv	a6,a1
20011532:	853e                	mv	a0,a5
20011534:	85c2                	mv	a1,a6
20011536:	200107b7          	lui	a5,0x20010
2001153a:	4d87a603          	lw	a2,1240(a5) # 200104d8 <metal_tty_init+0x18e>
2001153e:	4dc7a683          	lw	a3,1244(a5)
20011542:	1e3010ef          	jal	ra,20012f24 <__muldf3>
20011546:	87aa                	mv	a5,a0
20011548:	882e                	mv	a6,a1
2001154a:	853e                	mv	a0,a5
2001154c:	85c2                	mv	a1,a6
2001154e:	200107b7          	lui	a5,0x20010
20011552:	4e07a603          	lw	a2,1248(a5) # 200104e0 <metal_tty_init+0x196>
20011556:	4e47a683          	lw	a3,1252(a5)
2001155a:	494010ef          	jal	ra,200129ee <__divdf3>
2001155e:	87aa                	mv	a5,a0
20011560:	882e                	mv	a6,a1
20011562:	853e                	mv	a0,a5
20011564:	85c2                	mv	a1,a6
20011566:	6f5010ef          	jal	ra,2001345a <__truncdfsf2>
2001156a:	87aa                	mv	a5,a0
2001156c:	fef42023          	sw	a5,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:153
		printf("Gyro Z = %.6f\n", gyroZ);
20011570:	fe042503          	lw	a0,-32(s0)
20011574:	64f010ef          	jal	ra,200133c2 <__extendsfdf2>
20011578:	87aa                	mv	a5,a0
2001157a:	882e                	mv	a6,a1
2001157c:	863e                	mv	a2,a5
2001157e:	86c2                	mv	a3,a6
20011580:	200107b7          	lui	a5,0x20010
20011584:	43478513          	addi	a0,a5,1076 # 20010434 <metal_tty_init+0xea>
20011588:	24b9                	jal	200117d6 <iprintf>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:156

		/* Read IMU Accelero (x-y plane) */
		if (metal_i2c_write(i2c, IMU_I2C_ADDR, LEN1, imu_addr_buf + 4, METAL_I2C_STOP_DISABLE) == RET_OK) {
2001158a:	fd040793          	addi	a5,s0,-48
2001158e:	0791                	addi	a5,a5,4
20011590:	4701                	li	a4,0
20011592:	86be                	mv	a3,a5
20011594:	4605                	li	a2,1
20011596:	06a00593          	li	a1,106
2001159a:	fec42503          	lw	a0,-20(s0)
2001159e:	0be070ef          	jal	ra,2001865c <metal_i2c_write>
200115a2:	87aa                	mv	a5,a0
200115a4:	e79d                	bnez	a5,200115d2 <main+0x2d2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:157
			if (metal_i2c_read(i2c, IMU_I2C_ADDR, LEN1, imu_buf + 4, METAL_I2C_STOP_ENABLE) == RET_OK) {
200115a6:	fc840793          	addi	a5,s0,-56
200115aa:	0791                	addi	a5,a5,4
200115ac:	4705                	li	a4,1
200115ae:	86be                	mv	a3,a5
200115b0:	4605                	li	a2,1
200115b2:	06a00593          	li	a1,106
200115b6:	fec42503          	lw	a0,-20(s0)
200115ba:	0e8070ef          	jal	ra,200186a2 <metal_i2c_read>
200115be:	87aa                	mv	a5,a0
200115c0:	eb89                	bnez	a5,200115d2 <main+0x2d2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:158
				printf("Accelero X MSB = %X\n", imu_buf[4]);
200115c2:	fcc44783          	lbu	a5,-52(s0)
200115c6:	85be                	mv	a1,a5
200115c8:	200107b7          	lui	a5,0x20010
200115cc:	44478513          	addi	a0,a5,1092 # 20010444 <metal_tty_init+0xfa>
200115d0:	2419                	jal	200117d6 <iprintf>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:161
			}
		}
		if (metal_i2c_write(i2c, IMU_I2C_ADDR, LEN1, imu_addr_buf + 5, METAL_I2C_STOP_DISABLE) == RET_OK) {
200115d2:	fd040793          	addi	a5,s0,-48
200115d6:	0795                	addi	a5,a5,5
200115d8:	4701                	li	a4,0
200115da:	86be                	mv	a3,a5
200115dc:	4605                	li	a2,1
200115de:	06a00593          	li	a1,106
200115e2:	fec42503          	lw	a0,-20(s0)
200115e6:	076070ef          	jal	ra,2001865c <metal_i2c_write>
200115ea:	87aa                	mv	a5,a0
200115ec:	e79d                	bnez	a5,2001161a <main+0x31a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:162
			if (metal_i2c_read(i2c, IMU_I2C_ADDR, LEN1, imu_buf + 5, METAL_I2C_STOP_ENABLE) == RET_OK) {
200115ee:	fc840793          	addi	a5,s0,-56
200115f2:	0795                	addi	a5,a5,5
200115f4:	4705                	li	a4,1
200115f6:	86be                	mv	a3,a5
200115f8:	4605                	li	a2,1
200115fa:	06a00593          	li	a1,106
200115fe:	fec42503          	lw	a0,-20(s0)
20011602:	0a0070ef          	jal	ra,200186a2 <metal_i2c_read>
20011606:	87aa                	mv	a5,a0
20011608:	eb89                	bnez	a5,2001161a <main+0x31a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:163
				printf("Accelero X LSB = %X\n", imu_buf[5]);
2001160a:	fcd44783          	lbu	a5,-51(s0)
2001160e:	85be                	mv	a1,a5
20011610:	200107b7          	lui	a5,0x20010
20011614:	45c78513          	addi	a0,a5,1116 # 2001045c <metal_tty_init+0x112>
20011618:	2a7d                	jal	200117d6 <iprintf>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:166
			}
		}
		rawAcceleroX = (short) ((imu_buf[4] << 8) | imu_buf[5]);
2001161a:	fcc44783          	lbu	a5,-52(s0)
2001161e:	07a2                	slli	a5,a5,0x8
20011620:	01079713          	slli	a4,a5,0x10
20011624:	8741                	srai	a4,a4,0x10
20011626:	fcd44783          	lbu	a5,-51(s0)
2001162a:	07c2                	slli	a5,a5,0x10
2001162c:	87c1                	srai	a5,a5,0x10
2001162e:	8fd9                	or	a5,a5,a4
20011630:	fef41423          	sh	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:167
		acceleroX = rawAcceleroX * ACCELERO_SCALE * GRAVITY / 1000.0;
20011634:	fe841783          	lh	a5,-24(s0)
20011638:	853e                	mv	a0,a5
2001163a:	51f010ef          	jal	ra,20013358 <__floatsidf>
2001163e:	200107b7          	lui	a5,0x20010
20011642:	4e87a603          	lw	a2,1256(a5) # 200104e8 <metal_tty_init+0x19e>
20011646:	4ec7a683          	lw	a3,1260(a5)
2001164a:	0db010ef          	jal	ra,20012f24 <__muldf3>
2001164e:	87aa                	mv	a5,a0
20011650:	882e                	mv	a6,a1
20011652:	853e                	mv	a0,a5
20011654:	85c2                	mv	a1,a6
20011656:	200107b7          	lui	a5,0x20010
2001165a:	4f07a603          	lw	a2,1264(a5) # 200104f0 <metal_tty_init+0x1a6>
2001165e:	4f47a683          	lw	a3,1268(a5)
20011662:	0c3010ef          	jal	ra,20012f24 <__muldf3>
20011666:	87aa                	mv	a5,a0
20011668:	882e                	mv	a6,a1
2001166a:	853e                	mv	a0,a5
2001166c:	85c2                	mv	a1,a6
2001166e:	200107b7          	lui	a5,0x20010
20011672:	4e07a603          	lw	a2,1248(a5) # 200104e0 <metal_tty_init+0x196>
20011676:	4e47a683          	lw	a3,1252(a5)
2001167a:	374010ef          	jal	ra,200129ee <__divdf3>
2001167e:	87aa                	mv	a5,a0
20011680:	882e                	mv	a6,a1
20011682:	853e                	mv	a0,a5
20011684:	85c2                	mv	a1,a6
20011686:	5d5010ef          	jal	ra,2001345a <__truncdfsf2>
2001168a:	87aa                	mv	a5,a0
2001168c:	fcf42e23          	sw	a5,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:168
		printf("Accelero X = %.6f\n", acceleroX);
20011690:	fdc42503          	lw	a0,-36(s0)
20011694:	52f010ef          	jal	ra,200133c2 <__extendsfdf2>
20011698:	87aa                	mv	a5,a0
2001169a:	882e                	mv	a6,a1
2001169c:	863e                	mv	a2,a5
2001169e:	86c2                	mv	a3,a6
200116a0:	200107b7          	lui	a5,0x20010
200116a4:	47478513          	addi	a0,a5,1140 # 20010474 <metal_tty_init+0x12a>
200116a8:	223d                	jal	200117d6 <iprintf>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:170

		if (metal_i2c_write(i2c, IMU_I2C_ADDR, LEN1, imu_addr_buf + 6, METAL_I2C_STOP_DISABLE) == RET_OK) {
200116aa:	fd040793          	addi	a5,s0,-48
200116ae:	0799                	addi	a5,a5,6
200116b0:	4701                	li	a4,0
200116b2:	86be                	mv	a3,a5
200116b4:	4605                	li	a2,1
200116b6:	06a00593          	li	a1,106
200116ba:	fec42503          	lw	a0,-20(s0)
200116be:	79f060ef          	jal	ra,2001865c <metal_i2c_write>
200116c2:	87aa                	mv	a5,a0
200116c4:	e79d                	bnez	a5,200116f2 <main+0x3f2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:171
			if (metal_i2c_read(i2c, IMU_I2C_ADDR, LEN1, imu_buf + 6, METAL_I2C_STOP_ENABLE) == RET_OK) {
200116c6:	fc840793          	addi	a5,s0,-56
200116ca:	0799                	addi	a5,a5,6
200116cc:	4705                	li	a4,1
200116ce:	86be                	mv	a3,a5
200116d0:	4605                	li	a2,1
200116d2:	06a00593          	li	a1,106
200116d6:	fec42503          	lw	a0,-20(s0)
200116da:	7c9060ef          	jal	ra,200186a2 <metal_i2c_read>
200116de:	87aa                	mv	a5,a0
200116e0:	eb89                	bnez	a5,200116f2 <main+0x3f2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:172
				printf("Accelero Y MSB = %X\n", imu_buf[6]);
200116e2:	fce44783          	lbu	a5,-50(s0)
200116e6:	85be                	mv	a1,a5
200116e8:	200107b7          	lui	a5,0x20010
200116ec:	48878513          	addi	a0,a5,1160 # 20010488 <metal_tty_init+0x13e>
200116f0:	20dd                	jal	200117d6 <iprintf>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:175
			}
		}
		if (metal_i2c_write(i2c, IMU_I2C_ADDR, LEN1, imu_addr_buf + 7, METAL_I2C_STOP_DISABLE) == RET_OK) {
200116f2:	fd040793          	addi	a5,s0,-48
200116f6:	079d                	addi	a5,a5,7
200116f8:	4701                	li	a4,0
200116fa:	86be                	mv	a3,a5
200116fc:	4605                	li	a2,1
200116fe:	06a00593          	li	a1,106
20011702:	fec42503          	lw	a0,-20(s0)
20011706:	757060ef          	jal	ra,2001865c <metal_i2c_write>
2001170a:	87aa                	mv	a5,a0
2001170c:	e79d                	bnez	a5,2001173a <main+0x43a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:176
			if (metal_i2c_read(i2c, IMU_I2C_ADDR, LEN1, imu_buf + 7, METAL_I2C_STOP_ENABLE) == RET_OK) {
2001170e:	fc840793          	addi	a5,s0,-56
20011712:	079d                	addi	a5,a5,7
20011714:	4705                	li	a4,1
20011716:	86be                	mv	a3,a5
20011718:	4605                	li	a2,1
2001171a:	06a00593          	li	a1,106
2001171e:	fec42503          	lw	a0,-20(s0)
20011722:	781060ef          	jal	ra,200186a2 <metal_i2c_read>
20011726:	87aa                	mv	a5,a0
20011728:	eb89                	bnez	a5,2001173a <main+0x43a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:177
				printf("Accelero Y LSB = %X\n", imu_buf[7]);
2001172a:	fcf44783          	lbu	a5,-49(s0)
2001172e:	85be                	mv	a1,a5
20011730:	200107b7          	lui	a5,0x20010
20011734:	4a078513          	addi	a0,a5,1184 # 200104a0 <metal_tty_init+0x156>
20011738:	2879                	jal	200117d6 <iprintf>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:180
			}
		}
		rawAcceleroY = (short) ((imu_buf[6] << 8) | imu_buf[7]);
2001173a:	fce44783          	lbu	a5,-50(s0)
2001173e:	07a2                	slli	a5,a5,0x8
20011740:	01079713          	slli	a4,a5,0x10
20011744:	8741                	srai	a4,a4,0x10
20011746:	fcf44783          	lbu	a5,-49(s0)
2001174a:	07c2                	slli	a5,a5,0x10
2001174c:	87c1                	srai	a5,a5,0x10
2001174e:	8fd9                	or	a5,a5,a4
20011750:	fef41323          	sh	a5,-26(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:181
		acceleroY = rawAcceleroY * ACCELERO_SCALE * GRAVITY / 1000.0;
20011754:	fe641783          	lh	a5,-26(s0)
20011758:	853e                	mv	a0,a5
2001175a:	3ff010ef          	jal	ra,20013358 <__floatsidf>
2001175e:	200107b7          	lui	a5,0x20010
20011762:	4e87a603          	lw	a2,1256(a5) # 200104e8 <metal_tty_init+0x19e>
20011766:	4ec7a683          	lw	a3,1260(a5)
2001176a:	7ba010ef          	jal	ra,20012f24 <__muldf3>
2001176e:	87aa                	mv	a5,a0
20011770:	882e                	mv	a6,a1
20011772:	853e                	mv	a0,a5
20011774:	85c2                	mv	a1,a6
20011776:	200107b7          	lui	a5,0x20010
2001177a:	4f07a603          	lw	a2,1264(a5) # 200104f0 <metal_tty_init+0x1a6>
2001177e:	4f47a683          	lw	a3,1268(a5)
20011782:	7a2010ef          	jal	ra,20012f24 <__muldf3>
20011786:	87aa                	mv	a5,a0
20011788:	882e                	mv	a6,a1
2001178a:	853e                	mv	a0,a5
2001178c:	85c2                	mv	a1,a6
2001178e:	200107b7          	lui	a5,0x20010
20011792:	4e07a603          	lw	a2,1248(a5) # 200104e0 <metal_tty_init+0x196>
20011796:	4e47a683          	lw	a3,1252(a5)
2001179a:	254010ef          	jal	ra,200129ee <__divdf3>
2001179e:	87aa                	mv	a5,a0
200117a0:	882e                	mv	a6,a1
200117a2:	853e                	mv	a0,a5
200117a4:	85c2                	mv	a1,a6
200117a6:	4b5010ef          	jal	ra,2001345a <__truncdfsf2>
200117aa:	87aa                	mv	a5,a0
200117ac:	fcf42c23          	sw	a5,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:182
		printf("Accelero Y = %.6f\n", acceleroY);
200117b0:	fd842503          	lw	a0,-40(s0)
200117b4:	40f010ef          	jal	ra,200133c2 <__extendsfdf2>
200117b8:	87aa                	mv	a5,a0
200117ba:	882e                	mv	a6,a1
200117bc:	863e                	mv	a2,a5
200117be:	86c2                	mv	a3,a6
200117c0:	200107b7          	lui	a5,0x20010
200117c4:	4b878513          	addi	a0,a5,1208 # 200104b8 <metal_tty_init+0x16e>
200117c8:	2039                	jal	200117d6 <iprintf>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:134
		if (metal_i2c_write(i2c, IMU_I2C_ADDR, LEN1, imu_addr_buf + 1, METAL_I2C_STOP_DISABLE) == RET_OK) {
200117ca:	b9a1                	j	20011422 <main+0x122>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:195 (discriminator 1)

	}


	return 0;
}
200117cc:	853e                	mv	a0,a5
200117ce:	50f2                	lw	ra,60(sp)
200117d0:	5462                	lw	s0,56(sp)
200117d2:	6121                	addi	sp,sp,64
200117d4:	8082                	ret

200117d6 <iprintf>:
printf():
200117d6:	7139                	addi	sp,sp,-64
200117d8:	da3e                	sw	a5,52(sp)
200117da:	d22e                	sw	a1,36(sp)
200117dc:	d432                	sw	a2,40(sp)
200117de:	d636                	sw	a3,44(sp)
200117e0:	d83a                	sw	a4,48(sp)
200117e2:	dc42                	sw	a6,56(sp)
200117e4:	de46                	sw	a7,60(sp)
200117e6:	5ffef797          	auipc	a5,0x5ffef
200117ea:	2e278793          	addi	a5,a5,738 # 80000ac8 <_impure_ptr>
200117ee:	cc22                	sw	s0,24(sp)
200117f0:	4380                	lw	s0,0(a5)
200117f2:	ca26                	sw	s1,20(sp)
200117f4:	ce06                	sw	ra,28(sp)
200117f6:	84aa                	mv	s1,a0
200117f8:	c409                	beqz	s0,20011802 <iprintf+0x2c>
200117fa:	4c1c                	lw	a5,24(s0)
200117fc:	e399                	bnez	a5,20011802 <iprintf+0x2c>
200117fe:	8522                	mv	a0,s0
20011800:	2b1d                	jal	20011d36 <__sinit>
20011802:	440c                	lw	a1,8(s0)
20011804:	1054                	addi	a3,sp,36
20011806:	8626                	mv	a2,s1
20011808:	8522                	mv	a0,s0
2001180a:	c636                	sw	a3,12(sp)
2001180c:	191000ef          	jal	ra,2001219c <_vfiprintf_r>
20011810:	40f2                	lw	ra,28(sp)
20011812:	4462                	lw	s0,24(sp)
20011814:	44d2                	lw	s1,20(sp)
20011816:	6121                	addi	sp,sp,64
20011818:	8082                	ret

2001181a <_puts_r>:
_puts_r():
2001181a:	1101                	addi	sp,sp,-32
2001181c:	ca26                	sw	s1,20(sp)
2001181e:	c84a                	sw	s2,16(sp)
20011820:	ce06                	sw	ra,28(sp)
20011822:	cc22                	sw	s0,24(sp)
20011824:	c64e                	sw	s3,12(sp)
20011826:	c452                	sw	s4,8(sp)
20011828:	84aa                	mv	s1,a0
2001182a:	892e                	mv	s2,a1
2001182c:	c501                	beqz	a0,20011834 <_puts_r+0x1a>
2001182e:	4d1c                	lw	a5,24(a0)
20011830:	e391                	bnez	a5,20011834 <_puts_r+0x1a>
20011832:	2311                	jal	20011d36 <__sinit>
20011834:	4c9c                	lw	a5,24(s1)
20011836:	4480                	lw	s0,8(s1)
20011838:	e399                	bnez	a5,2001183e <_puts_r+0x24>
2001183a:	8526                	mv	a0,s1
2001183c:	29ed                	jal	20011d36 <__sinit>
2001183e:	fffff797          	auipc	a5,0xfffff
20011842:	cda78793          	addi	a5,a5,-806 # 20010518 <__sf_fake_stdin>
20011846:	02f41c63          	bne	s0,a5,2001187e <_puts_r+0x64>
2001184a:	40c0                	lw	s0,4(s1)
2001184c:	00c45783          	lhu	a5,12(s0)
20011850:	8ba1                	andi	a5,a5,8
20011852:	c7b1                	beqz	a5,2001189e <_puts_r+0x84>
20011854:	481c                	lw	a5,16(s0)
20011856:	c7a1                	beqz	a5,2001189e <_puts_r+0x84>
20011858:	59fd                	li	s3,-1
2001185a:	4a29                	li	s4,10
2001185c:	441c                	lw	a5,8(s0)
2001185e:	00094583          	lbu	a1,0(s2)
20011862:	17fd                	addi	a5,a5,-1
20011864:	e9b1                	bnez	a1,200118b8 <_puts_r+0x9e>
20011866:	c41c                	sw	a5,8(s0)
20011868:	0607de63          	bgez	a5,200118e4 <_puts_r+0xca>
2001186c:	8622                	mv	a2,s0
2001186e:	45a9                	li	a1,10
20011870:	8526                	mv	a0,s1
20011872:	2841                	jal	20011902 <__swbuf_r>
20011874:	57fd                	li	a5,-1
20011876:	02f50863          	beq	a0,a5,200118a6 <_puts_r+0x8c>
2001187a:	4529                	li	a0,10
2001187c:	a035                	j	200118a8 <_puts_r+0x8e>
2001187e:	fffff797          	auipc	a5,0xfffff
20011882:	cba78793          	addi	a5,a5,-838 # 20010538 <__sf_fake_stdout>
20011886:	00f41463          	bne	s0,a5,2001188e <_puts_r+0x74>
2001188a:	4480                	lw	s0,8(s1)
2001188c:	b7c1                	j	2001184c <_puts_r+0x32>
2001188e:	fffff797          	auipc	a5,0xfffff
20011892:	c6a78793          	addi	a5,a5,-918 # 200104f8 <__sf_fake_stderr>
20011896:	faf41be3          	bne	s0,a5,2001184c <_puts_r+0x32>
2001189a:	44c0                	lw	s0,12(s1)
2001189c:	bf45                	j	2001184c <_puts_r+0x32>
2001189e:	85a2                	mv	a1,s0
200118a0:	8526                	mv	a0,s1
200118a2:	2205                	jal	200119c2 <__swsetup_r>
200118a4:	d955                	beqz	a0,20011858 <_puts_r+0x3e>
200118a6:	557d                	li	a0,-1
200118a8:	40f2                	lw	ra,28(sp)
200118aa:	4462                	lw	s0,24(sp)
200118ac:	44d2                	lw	s1,20(sp)
200118ae:	4942                	lw	s2,16(sp)
200118b0:	49b2                	lw	s3,12(sp)
200118b2:	4a22                	lw	s4,8(sp)
200118b4:	6105                	addi	sp,sp,32
200118b6:	8082                	ret
200118b8:	c41c                	sw	a5,8(s0)
200118ba:	0905                	addi	s2,s2,1
200118bc:	0007d763          	bgez	a5,200118ca <_puts_r+0xb0>
200118c0:	4c18                	lw	a4,24(s0)
200118c2:	00e7cb63          	blt	a5,a4,200118d8 <_puts_r+0xbe>
200118c6:	01458963          	beq	a1,s4,200118d8 <_puts_r+0xbe>
200118ca:	401c                	lw	a5,0(s0)
200118cc:	00178713          	addi	a4,a5,1
200118d0:	c018                	sw	a4,0(s0)
200118d2:	00b78023          	sb	a1,0(a5)
200118d6:	b759                	j	2001185c <_puts_r+0x42>
200118d8:	8622                	mv	a2,s0
200118da:	8526                	mv	a0,s1
200118dc:	201d                	jal	20011902 <__swbuf_r>
200118de:	f7351fe3          	bne	a0,s3,2001185c <_puts_r+0x42>
200118e2:	b7d1                	j	200118a6 <_puts_r+0x8c>
200118e4:	401c                	lw	a5,0(s0)
200118e6:	00178713          	addi	a4,a5,1
200118ea:	c018                	sw	a4,0(s0)
200118ec:	4729                	li	a4,10
200118ee:	00e78023          	sb	a4,0(a5)
200118f2:	b761                	j	2001187a <_puts_r+0x60>

200118f4 <puts>:
puts():
200118f4:	5ffef797          	auipc	a5,0x5ffef
200118f8:	1d478793          	addi	a5,a5,468 # 80000ac8 <_impure_ptr>
200118fc:	85aa                	mv	a1,a0
200118fe:	4388                	lw	a0,0(a5)
20011900:	bf29                	j	2001181a <_puts_r>

20011902 <__swbuf_r>:
__swbuf_r():
20011902:	1101                	addi	sp,sp,-32
20011904:	cc22                	sw	s0,24(sp)
20011906:	ca26                	sw	s1,20(sp)
20011908:	c84a                	sw	s2,16(sp)
2001190a:	ce06                	sw	ra,28(sp)
2001190c:	c64e                	sw	s3,12(sp)
2001190e:	84aa                	mv	s1,a0
20011910:	892e                	mv	s2,a1
20011912:	8432                	mv	s0,a2
20011914:	c501                	beqz	a0,2001191c <__swbuf_r+0x1a>
20011916:	4d1c                	lw	a5,24(a0)
20011918:	e391                	bnez	a5,2001191c <__swbuf_r+0x1a>
2001191a:	2931                	jal	20011d36 <__sinit>
2001191c:	fffff797          	auipc	a5,0xfffff
20011920:	bfc78793          	addi	a5,a5,-1028 # 20010518 <__sf_fake_stdin>
20011924:	06f41963          	bne	s0,a5,20011996 <__swbuf_r+0x94>
20011928:	40c0                	lw	s0,4(s1)
2001192a:	4c1c                	lw	a5,24(s0)
2001192c:	c41c                	sw	a5,8(s0)
2001192e:	00c45783          	lhu	a5,12(s0)
20011932:	8ba1                	andi	a5,a5,8
20011934:	c3c9                	beqz	a5,200119b6 <__swbuf_r+0xb4>
20011936:	481c                	lw	a5,16(s0)
20011938:	cfbd                	beqz	a5,200119b6 <__swbuf_r+0xb4>
2001193a:	481c                	lw	a5,16(s0)
2001193c:	4008                	lw	a0,0(s0)
2001193e:	0ff97993          	andi	s3,s2,255
20011942:	0ff97913          	andi	s2,s2,255
20011946:	8d1d                	sub	a0,a0,a5
20011948:	485c                	lw	a5,20(s0)
2001194a:	00f54663          	blt	a0,a5,20011956 <__swbuf_r+0x54>
2001194e:	85a2                	mv	a1,s0
20011950:	8526                	mv	a0,s1
20011952:	24e9                	jal	20011c1c <_fflush_r>
20011954:	e52d                	bnez	a0,200119be <__swbuf_r+0xbc>
20011956:	441c                	lw	a5,8(s0)
20011958:	0505                	addi	a0,a0,1
2001195a:	17fd                	addi	a5,a5,-1
2001195c:	c41c                	sw	a5,8(s0)
2001195e:	401c                	lw	a5,0(s0)
20011960:	00178713          	addi	a4,a5,1
20011964:	c018                	sw	a4,0(s0)
20011966:	01378023          	sb	s3,0(a5)
2001196a:	485c                	lw	a5,20(s0)
2001196c:	00a78963          	beq	a5,a0,2001197e <__swbuf_r+0x7c>
20011970:	00c45783          	lhu	a5,12(s0)
20011974:	8b85                	andi	a5,a5,1
20011976:	cb81                	beqz	a5,20011986 <__swbuf_r+0x84>
20011978:	47a9                	li	a5,10
2001197a:	00f91663          	bne	s2,a5,20011986 <__swbuf_r+0x84>
2001197e:	85a2                	mv	a1,s0
20011980:	8526                	mv	a0,s1
20011982:	2c69                	jal	20011c1c <_fflush_r>
20011984:	ed0d                	bnez	a0,200119be <__swbuf_r+0xbc>
20011986:	40f2                	lw	ra,28(sp)
20011988:	4462                	lw	s0,24(sp)
2001198a:	854a                	mv	a0,s2
2001198c:	44d2                	lw	s1,20(sp)
2001198e:	4942                	lw	s2,16(sp)
20011990:	49b2                	lw	s3,12(sp)
20011992:	6105                	addi	sp,sp,32
20011994:	8082                	ret
20011996:	fffff797          	auipc	a5,0xfffff
2001199a:	ba278793          	addi	a5,a5,-1118 # 20010538 <__sf_fake_stdout>
2001199e:	00f41463          	bne	s0,a5,200119a6 <__swbuf_r+0xa4>
200119a2:	4480                	lw	s0,8(s1)
200119a4:	b759                	j	2001192a <__swbuf_r+0x28>
200119a6:	fffff797          	auipc	a5,0xfffff
200119aa:	b5278793          	addi	a5,a5,-1198 # 200104f8 <__sf_fake_stderr>
200119ae:	f6f41ee3          	bne	s0,a5,2001192a <__swbuf_r+0x28>
200119b2:	44c0                	lw	s0,12(s1)
200119b4:	bf9d                	j	2001192a <__swbuf_r+0x28>
200119b6:	85a2                	mv	a1,s0
200119b8:	8526                	mv	a0,s1
200119ba:	2021                	jal	200119c2 <__swsetup_r>
200119bc:	dd3d                	beqz	a0,2001193a <__swbuf_r+0x38>
200119be:	597d                	li	s2,-1
200119c0:	b7d9                	j	20011986 <__swbuf_r+0x84>

200119c2 <__swsetup_r>:
__swsetup_r():
200119c2:	1141                	addi	sp,sp,-16
200119c4:	5ffef797          	auipc	a5,0x5ffef
200119c8:	10478793          	addi	a5,a5,260 # 80000ac8 <_impure_ptr>
200119cc:	c226                	sw	s1,4(sp)
200119ce:	4384                	lw	s1,0(a5)
200119d0:	c422                	sw	s0,8(sp)
200119d2:	c04a                	sw	s2,0(sp)
200119d4:	c606                	sw	ra,12(sp)
200119d6:	892a                	mv	s2,a0
200119d8:	842e                	mv	s0,a1
200119da:	c489                	beqz	s1,200119e4 <__swsetup_r+0x22>
200119dc:	4c9c                	lw	a5,24(s1)
200119de:	e399                	bnez	a5,200119e4 <__swsetup_r+0x22>
200119e0:	8526                	mv	a0,s1
200119e2:	2e91                	jal	20011d36 <__sinit>
200119e4:	fffff797          	auipc	a5,0xfffff
200119e8:	b3478793          	addi	a5,a5,-1228 # 20010518 <__sf_fake_stdin>
200119ec:	02f41c63          	bne	s0,a5,20011a24 <__swsetup_r+0x62>
200119f0:	40c0                	lw	s0,4(s1)
200119f2:	00c41703          	lh	a4,12(s0)
200119f6:	01071793          	slli	a5,a4,0x10
200119fa:	83c1                	srli	a5,a5,0x10
200119fc:	0087f693          	andi	a3,a5,8
20011a00:	eeb5                	bnez	a3,20011a7c <__swsetup_r+0xba>
20011a02:	0107f693          	andi	a3,a5,16
20011a06:	ee9d                	bnez	a3,20011a44 <__swsetup_r+0x82>
20011a08:	47a5                	li	a5,9
20011a0a:	00f92023          	sw	a5,0(s2)
20011a0e:	04076713          	ori	a4,a4,64
20011a12:	00e41623          	sh	a4,12(s0)
20011a16:	557d                	li	a0,-1
20011a18:	40b2                	lw	ra,12(sp)
20011a1a:	4422                	lw	s0,8(sp)
20011a1c:	4492                	lw	s1,4(sp)
20011a1e:	4902                	lw	s2,0(sp)
20011a20:	0141                	addi	sp,sp,16
20011a22:	8082                	ret
20011a24:	fffff797          	auipc	a5,0xfffff
20011a28:	b1478793          	addi	a5,a5,-1260 # 20010538 <__sf_fake_stdout>
20011a2c:	00f41463          	bne	s0,a5,20011a34 <__swsetup_r+0x72>
20011a30:	4480                	lw	s0,8(s1)
20011a32:	b7c1                	j	200119f2 <__swsetup_r+0x30>
20011a34:	fffff797          	auipc	a5,0xfffff
20011a38:	ac478793          	addi	a5,a5,-1340 # 200104f8 <__sf_fake_stderr>
20011a3c:	faf41be3          	bne	s0,a5,200119f2 <__swsetup_r+0x30>
20011a40:	44c0                	lw	s0,12(s1)
20011a42:	bf45                	j	200119f2 <__swsetup_r+0x30>
20011a44:	8b91                	andi	a5,a5,4
20011a46:	c78d                	beqz	a5,20011a70 <__swsetup_r+0xae>
20011a48:	584c                	lw	a1,52(s0)
20011a4a:	c989                	beqz	a1,20011a5c <__swsetup_r+0x9a>
20011a4c:	04440793          	addi	a5,s0,68
20011a50:	00f58463          	beq	a1,a5,20011a58 <__swsetup_r+0x96>
20011a54:	854a                	mv	a0,s2
20011a56:	2b81                	jal	20011fa6 <_free_r>
20011a58:	02042a23          	sw	zero,52(s0)
20011a5c:	00c45783          	lhu	a5,12(s0)
20011a60:	00042223          	sw	zero,4(s0)
20011a64:	fdb7f793          	andi	a5,a5,-37
20011a68:	00f41623          	sh	a5,12(s0)
20011a6c:	481c                	lw	a5,16(s0)
20011a6e:	c01c                	sw	a5,0(s0)
20011a70:	00c45783          	lhu	a5,12(s0)
20011a74:	0087e793          	ori	a5,a5,8
20011a78:	00f41623          	sh	a5,12(s0)
20011a7c:	481c                	lw	a5,16(s0)
20011a7e:	ef81                	bnez	a5,20011a96 <__swsetup_r+0xd4>
20011a80:	00c45783          	lhu	a5,12(s0)
20011a84:	20000713          	li	a4,512
20011a88:	2807f793          	andi	a5,a5,640
20011a8c:	00e78563          	beq	a5,a4,20011a96 <__swsetup_r+0xd4>
20011a90:	85a2                	mv	a1,s0
20011a92:	854a                	mv	a0,s2
20011a94:	219d                	jal	20011efa <__smakebuf_r>
20011a96:	00c45783          	lhu	a5,12(s0)
20011a9a:	0017f713          	andi	a4,a5,1
20011a9e:	c705                	beqz	a4,20011ac6 <__swsetup_r+0x104>
20011aa0:	485c                	lw	a5,20(s0)
20011aa2:	00042423          	sw	zero,8(s0)
20011aa6:	40f007b3          	neg	a5,a5
20011aaa:	cc1c                	sw	a5,24(s0)
20011aac:	481c                	lw	a5,16(s0)
20011aae:	4501                	li	a0,0
20011ab0:	f7a5                	bnez	a5,20011a18 <__swsetup_r+0x56>
20011ab2:	00c41783          	lh	a5,12(s0)
20011ab6:	0807f713          	andi	a4,a5,128
20011aba:	df39                	beqz	a4,20011a18 <__swsetup_r+0x56>
20011abc:	0407e793          	ori	a5,a5,64
20011ac0:	00f41623          	sh	a5,12(s0)
20011ac4:	bf89                	j	20011a16 <__swsetup_r+0x54>
20011ac6:	8b89                	andi	a5,a5,2
20011ac8:	4701                	li	a4,0
20011aca:	e391                	bnez	a5,20011ace <__swsetup_r+0x10c>
20011acc:	4858                	lw	a4,20(s0)
20011ace:	c418                	sw	a4,8(s0)
20011ad0:	bff1                	j	20011aac <__swsetup_r+0xea>

20011ad2 <__sflush_r>:
__sflush_r():
20011ad2:	00c5d783          	lhu	a5,12(a1)
20011ad6:	1101                	addi	sp,sp,-32
20011ad8:	cc22                	sw	s0,24(sp)
20011ada:	ca26                	sw	s1,20(sp)
20011adc:	ce06                	sw	ra,28(sp)
20011ade:	c84a                	sw	s2,16(sp)
20011ae0:	c64e                	sw	s3,12(sp)
20011ae2:	0087f713          	andi	a4,a5,8
20011ae6:	84aa                	mv	s1,a0
20011ae8:	842e                	mv	s0,a1
20011aea:	e765                	bnez	a4,20011bd2 <__sflush_r+0x100>
20011aec:	41d8                	lw	a4,4(a1)
20011aee:	00e04763          	bgtz	a4,20011afc <__sflush_r+0x2a>
20011af2:	41b8                	lw	a4,64(a1)
20011af4:	00e04463          	bgtz	a4,20011afc <__sflush_r+0x2a>
20011af8:	4501                	li	a0,0
20011afa:	a0c1                	j	20011bba <__sflush_r+0xe8>
20011afc:	5458                	lw	a4,44(s0)
20011afe:	df6d                	beqz	a4,20011af8 <__sflush_r+0x26>
20011b00:	0004a903          	lw	s2,0(s1)
20011b04:	01379693          	slli	a3,a5,0x13
20011b08:	0004a023          	sw	zero,0(s1)
20011b0c:	0606de63          	bgez	a3,20011b88 <__sflush_r+0xb6>
20011b10:	4868                	lw	a0,84(s0)
20011b12:	00c45783          	lhu	a5,12(s0)
20011b16:	8b91                	andi	a5,a5,4
20011b18:	c799                	beqz	a5,20011b26 <__sflush_r+0x54>
20011b1a:	405c                	lw	a5,4(s0)
20011b1c:	8d1d                	sub	a0,a0,a5
20011b1e:	585c                	lw	a5,52(s0)
20011b20:	c399                	beqz	a5,20011b26 <__sflush_r+0x54>
20011b22:	403c                	lw	a5,64(s0)
20011b24:	8d1d                	sub	a0,a0,a5
20011b26:	545c                	lw	a5,44(s0)
20011b28:	500c                	lw	a1,32(s0)
20011b2a:	862a                	mv	a2,a0
20011b2c:	4681                	li	a3,0
20011b2e:	8526                	mv	a0,s1
20011b30:	9782                	jalr	a5
20011b32:	57fd                	li	a5,-1
20011b34:	00c45703          	lhu	a4,12(s0)
20011b38:	00f51d63          	bne	a0,a5,20011b52 <__sflush_r+0x80>
20011b3c:	4094                	lw	a3,0(s1)
20011b3e:	47f5                	li	a5,29
20011b40:	08d7e463          	bltu	a5,a3,20011bc8 <__sflush_r+0xf6>
20011b44:	204007b7          	lui	a5,0x20400
20011b48:	0785                	addi	a5,a5,1
20011b4a:	00d7d7b3          	srl	a5,a5,a3
20011b4e:	8b85                	andi	a5,a5,1
20011b50:	cfa5                	beqz	a5,20011bc8 <__sflush_r+0xf6>
20011b52:	481c                	lw	a5,16(s0)
20011b54:	00042223          	sw	zero,4(s0)
20011b58:	c01c                	sw	a5,0(s0)
20011b5a:	01371793          	slli	a5,a4,0x13
20011b5e:	0007d863          	bgez	a5,20011b6e <__sflush_r+0x9c>
20011b62:	57fd                	li	a5,-1
20011b64:	00f51463          	bne	a0,a5,20011b6c <__sflush_r+0x9a>
20011b68:	409c                	lw	a5,0(s1)
20011b6a:	e391                	bnez	a5,20011b6e <__sflush_r+0x9c>
20011b6c:	c868                	sw	a0,84(s0)
20011b6e:	584c                	lw	a1,52(s0)
20011b70:	0124a023          	sw	s2,0(s1)
20011b74:	d1d1                	beqz	a1,20011af8 <__sflush_r+0x26>
20011b76:	04440793          	addi	a5,s0,68
20011b7a:	00f58463          	beq	a1,a5,20011b82 <__sflush_r+0xb0>
20011b7e:	8526                	mv	a0,s1
20011b80:	211d                	jal	20011fa6 <_free_r>
20011b82:	02042a23          	sw	zero,52(s0)
20011b86:	bf8d                	j	20011af8 <__sflush_r+0x26>
20011b88:	500c                	lw	a1,32(s0)
20011b8a:	4685                	li	a3,1
20011b8c:	4601                	li	a2,0
20011b8e:	8526                	mv	a0,s1
20011b90:	9702                	jalr	a4
20011b92:	57fd                	li	a5,-1
20011b94:	f6f51fe3          	bne	a0,a5,20011b12 <__sflush_r+0x40>
20011b98:	409c                	lw	a5,0(s1)
20011b9a:	dfa5                	beqz	a5,20011b12 <__sflush_r+0x40>
20011b9c:	4775                	li	a4,29
20011b9e:	00e78563          	beq	a5,a4,20011ba8 <__sflush_r+0xd6>
20011ba2:	4759                	li	a4,22
20011ba4:	00e79563          	bne	a5,a4,20011bae <__sflush_r+0xdc>
20011ba8:	0124a023          	sw	s2,0(s1)
20011bac:	b7b1                	j	20011af8 <__sflush_r+0x26>
20011bae:	00c45783          	lhu	a5,12(s0)
20011bb2:	0407e793          	ori	a5,a5,64
20011bb6:	00f41623          	sh	a5,12(s0)
20011bba:	40f2                	lw	ra,28(sp)
20011bbc:	4462                	lw	s0,24(sp)
20011bbe:	44d2                	lw	s1,20(sp)
20011bc0:	4942                	lw	s2,16(sp)
20011bc2:	49b2                	lw	s3,12(sp)
20011bc4:	6105                	addi	sp,sp,32
20011bc6:	8082                	ret
20011bc8:	04076713          	ori	a4,a4,64
20011bcc:	00e41623          	sh	a4,12(s0)
20011bd0:	b7ed                	j	20011bba <__sflush_r+0xe8>
20011bd2:	0105a983          	lw	s3,16(a1)
20011bd6:	f20981e3          	beqz	s3,20011af8 <__sflush_r+0x26>
20011bda:	0005a903          	lw	s2,0(a1)
20011bde:	8b8d                	andi	a5,a5,3
20011be0:	0135a023          	sw	s3,0(a1)
20011be4:	41390933          	sub	s2,s2,s3
20011be8:	4701                	li	a4,0
20011bea:	e391                	bnez	a5,20011bee <__sflush_r+0x11c>
20011bec:	49d8                	lw	a4,20(a1)
20011bee:	c418                	sw	a4,8(s0)
20011bf0:	f12054e3          	blez	s2,20011af8 <__sflush_r+0x26>
20011bf4:	541c                	lw	a5,40(s0)
20011bf6:	500c                	lw	a1,32(s0)
20011bf8:	86ca                	mv	a3,s2
20011bfa:	864e                	mv	a2,s3
20011bfc:	8526                	mv	a0,s1
20011bfe:	9782                	jalr	a5
20011c00:	00a04a63          	bgtz	a0,20011c14 <__sflush_r+0x142>
20011c04:	00c45783          	lhu	a5,12(s0)
20011c08:	557d                	li	a0,-1
20011c0a:	0407e793          	ori	a5,a5,64
20011c0e:	00f41623          	sh	a5,12(s0)
20011c12:	b765                	j	20011bba <__sflush_r+0xe8>
20011c14:	99aa                	add	s3,s3,a0
20011c16:	40a90933          	sub	s2,s2,a0
20011c1a:	bfd9                	j	20011bf0 <__sflush_r+0x11e>

20011c1c <_fflush_r>:
_fflush_r():
20011c1c:	499c                	lw	a5,16(a1)
20011c1e:	cfb9                	beqz	a5,20011c7c <_fflush_r+0x60>
20011c20:	1101                	addi	sp,sp,-32
20011c22:	cc22                	sw	s0,24(sp)
20011c24:	ce06                	sw	ra,28(sp)
20011c26:	842a                	mv	s0,a0
20011c28:	c511                	beqz	a0,20011c34 <_fflush_r+0x18>
20011c2a:	4d1c                	lw	a5,24(a0)
20011c2c:	e781                	bnez	a5,20011c34 <_fflush_r+0x18>
20011c2e:	c62e                	sw	a1,12(sp)
20011c30:	2219                	jal	20011d36 <__sinit>
20011c32:	45b2                	lw	a1,12(sp)
20011c34:	fffff797          	auipc	a5,0xfffff
20011c38:	8e478793          	addi	a5,a5,-1820 # 20010518 <__sf_fake_stdin>
20011c3c:	00f59b63          	bne	a1,a5,20011c52 <_fflush_r+0x36>
20011c40:	404c                	lw	a1,4(s0)
20011c42:	00c59783          	lh	a5,12(a1)
20011c46:	c795                	beqz	a5,20011c72 <_fflush_r+0x56>
20011c48:	8522                	mv	a0,s0
20011c4a:	4462                	lw	s0,24(sp)
20011c4c:	40f2                	lw	ra,28(sp)
20011c4e:	6105                	addi	sp,sp,32
20011c50:	b549                	j	20011ad2 <__sflush_r>
20011c52:	fffff797          	auipc	a5,0xfffff
20011c56:	8e678793          	addi	a5,a5,-1818 # 20010538 <__sf_fake_stdout>
20011c5a:	00f59463          	bne	a1,a5,20011c62 <_fflush_r+0x46>
20011c5e:	440c                	lw	a1,8(s0)
20011c60:	b7cd                	j	20011c42 <_fflush_r+0x26>
20011c62:	fffff797          	auipc	a5,0xfffff
20011c66:	89678793          	addi	a5,a5,-1898 # 200104f8 <__sf_fake_stderr>
20011c6a:	fcf59ce3          	bne	a1,a5,20011c42 <_fflush_r+0x26>
20011c6e:	444c                	lw	a1,12(s0)
20011c70:	bfc9                	j	20011c42 <_fflush_r+0x26>
20011c72:	40f2                	lw	ra,28(sp)
20011c74:	4462                	lw	s0,24(sp)
20011c76:	4501                	li	a0,0
20011c78:	6105                	addi	sp,sp,32
20011c7a:	8082                	ret
20011c7c:	4501                	li	a0,0
20011c7e:	8082                	ret

20011c80 <std>:
std():
20011c80:	1141                	addi	sp,sp,-16
20011c82:	c422                	sw	s0,8(sp)
20011c84:	c606                	sw	ra,12(sp)
20011c86:	842a                	mv	s0,a0
20011c88:	00b51623          	sh	a1,12(a0)
20011c8c:	00c51723          	sh	a2,14(a0)
20011c90:	00052023          	sw	zero,0(a0)
20011c94:	00052223          	sw	zero,4(a0)
20011c98:	00052423          	sw	zero,8(a0)
20011c9c:	06052223          	sw	zero,100(a0)
20011ca0:	00052823          	sw	zero,16(a0)
20011ca4:	00052a23          	sw	zero,20(a0)
20011ca8:	00052c23          	sw	zero,24(a0)
20011cac:	4621                	li	a2,8
20011cae:	4581                	li	a1,0
20011cb0:	05c50513          	addi	a0,a0,92
20011cb4:	24cd                	jal	20011f96 <memset>
20011cb6:	00000797          	auipc	a5,0x0
20011cba:	7a878793          	addi	a5,a5,1960 # 2001245e <__sread>
20011cbe:	d05c                	sw	a5,36(s0)
20011cc0:	00000797          	auipc	a5,0x0
20011cc4:	7ce78793          	addi	a5,a5,1998 # 2001248e <__swrite>
20011cc8:	d41c                	sw	a5,40(s0)
20011cca:	00001797          	auipc	a5,0x1
20011cce:	81278793          	addi	a5,a5,-2030 # 200124dc <__sseek>
20011cd2:	d45c                	sw	a5,44(s0)
20011cd4:	00001797          	auipc	a5,0x1
20011cd8:	83e78793          	addi	a5,a5,-1986 # 20012512 <__sclose>
20011cdc:	d000                	sw	s0,32(s0)
20011cde:	d81c                	sw	a5,48(s0)
20011ce0:	40b2                	lw	ra,12(sp)
20011ce2:	4422                	lw	s0,8(sp)
20011ce4:	0141                	addi	sp,sp,16
20011ce6:	8082                	ret

20011ce8 <_cleanup_r>:
_cleanup_r():
20011ce8:	00000597          	auipc	a1,0x0
20011cec:	f3458593          	addi	a1,a1,-204 # 20011c1c <_fflush_r>
20011cf0:	a299                	j	20011e36 <_fwalk_reent>

20011cf2 <__sfmoreglue>:
__sfmoreglue():
20011cf2:	1141                	addi	sp,sp,-16
20011cf4:	c226                	sw	s1,4(sp)
20011cf6:	06800613          	li	a2,104
20011cfa:	fff58493          	addi	s1,a1,-1
20011cfe:	02c484b3          	mul	s1,s1,a2
20011d02:	c04a                	sw	s2,0(sp)
20011d04:	892e                	mv	s2,a1
20011d06:	c422                	sw	s0,8(sp)
20011d08:	c606                	sw	ra,12(sp)
20011d0a:	07448593          	addi	a1,s1,116
20011d0e:	2691                	jal	20012052 <_malloc_r>
20011d10:	842a                	mv	s0,a0
20011d12:	c919                	beqz	a0,20011d28 <__sfmoreglue+0x36>
20011d14:	00052023          	sw	zero,0(a0)
20011d18:	01252223          	sw	s2,4(a0)
20011d1c:	0531                	addi	a0,a0,12
20011d1e:	c408                	sw	a0,8(s0)
20011d20:	06848613          	addi	a2,s1,104
20011d24:	4581                	li	a1,0
20011d26:	2c85                	jal	20011f96 <memset>
20011d28:	8522                	mv	a0,s0
20011d2a:	40b2                	lw	ra,12(sp)
20011d2c:	4422                	lw	s0,8(sp)
20011d2e:	4492                	lw	s1,4(sp)
20011d30:	4902                	lw	s2,0(sp)
20011d32:	0141                	addi	sp,sp,16
20011d34:	8082                	ret

20011d36 <__sinit>:
__sinit():
20011d36:	4d1c                	lw	a5,24(a0)
20011d38:	e3ad                	bnez	a5,20011d9a <__sinit+0x64>
20011d3a:	1141                	addi	sp,sp,-16
20011d3c:	c606                	sw	ra,12(sp)
20011d3e:	c422                	sw	s0,8(sp)
20011d40:	00000797          	auipc	a5,0x0
20011d44:	fa878793          	addi	a5,a5,-88 # 20011ce8 <_cleanup_r>
20011d48:	d51c                	sw	a5,40(a0)
20011d4a:	80c18793          	addi	a5,gp,-2036 # 80000acc <_global_impure_ptr>
20011d4e:	439c                	lw	a5,0(a5)
20011d50:	04052423          	sw	zero,72(a0)
20011d54:	04052623          	sw	zero,76(a0)
20011d58:	04052823          	sw	zero,80(a0)
20011d5c:	00f51463          	bne	a0,a5,20011d64 <__sinit+0x2e>
20011d60:	4785                	li	a5,1
20011d62:	cd1c                	sw	a5,24(a0)
20011d64:	842a                	mv	s0,a0
20011d66:	281d                	jal	20011d9c <__sfp>
20011d68:	c048                	sw	a0,4(s0)
20011d6a:	8522                	mv	a0,s0
20011d6c:	2805                	jal	20011d9c <__sfp>
20011d6e:	c408                	sw	a0,8(s0)
20011d70:	8522                	mv	a0,s0
20011d72:	202d                	jal	20011d9c <__sfp>
20011d74:	c448                	sw	a0,12(s0)
20011d76:	4048                	lw	a0,4(s0)
20011d78:	4601                	li	a2,0
20011d7a:	4591                	li	a1,4
20011d7c:	3711                	jal	20011c80 <std>
20011d7e:	4408                	lw	a0,8(s0)
20011d80:	4605                	li	a2,1
20011d82:	45a5                	li	a1,9
20011d84:	3df5                	jal	20011c80 <std>
20011d86:	4448                	lw	a0,12(s0)
20011d88:	4609                	li	a2,2
20011d8a:	45c9                	li	a1,18
20011d8c:	3dd5                	jal	20011c80 <std>
20011d8e:	4785                	li	a5,1
20011d90:	cc1c                	sw	a5,24(s0)
20011d92:	40b2                	lw	ra,12(sp)
20011d94:	4422                	lw	s0,8(sp)
20011d96:	0141                	addi	sp,sp,16
20011d98:	8082                	ret
20011d9a:	8082                	ret

20011d9c <__sfp>:
__sfp():
20011d9c:	1141                	addi	sp,sp,-16
20011d9e:	80c18793          	addi	a5,gp,-2036 # 80000acc <_global_impure_ptr>
20011da2:	c226                	sw	s1,4(sp)
20011da4:	4384                	lw	s1,0(a5)
20011da6:	c04a                	sw	s2,0(sp)
20011da8:	c606                	sw	ra,12(sp)
20011daa:	4c9c                	lw	a5,24(s1)
20011dac:	c422                	sw	s0,8(sp)
20011dae:	892a                	mv	s2,a0
20011db0:	e399                	bnez	a5,20011db6 <__sfp+0x1a>
20011db2:	8526                	mv	a0,s1
20011db4:	3749                	jal	20011d36 <__sinit>
20011db6:	04848493          	addi	s1,s1,72
20011dba:	4480                	lw	s0,8(s1)
20011dbc:	40dc                	lw	a5,4(s1)
20011dbe:	17fd                	addi	a5,a5,-1
20011dc0:	0007d663          	bgez	a5,20011dcc <__sfp+0x30>
20011dc4:	409c                	lw	a5,0(s1)
20011dc6:	cfb1                	beqz	a5,20011e22 <__sfp+0x86>
20011dc8:	4084                	lw	s1,0(s1)
20011dca:	bfc5                	j	20011dba <__sfp+0x1e>
20011dcc:	00c41703          	lh	a4,12(s0)
20011dd0:	e731                	bnez	a4,20011e1c <__sfp+0x80>
20011dd2:	77c1                	lui	a5,0xffff0
20011dd4:	0785                	addi	a5,a5,1
20011dd6:	06042223          	sw	zero,100(s0)
20011dda:	00042023          	sw	zero,0(s0)
20011dde:	00042223          	sw	zero,4(s0)
20011de2:	00042423          	sw	zero,8(s0)
20011de6:	c45c                	sw	a5,12(s0)
20011de8:	00042823          	sw	zero,16(s0)
20011dec:	00042a23          	sw	zero,20(s0)
20011df0:	00042c23          	sw	zero,24(s0)
20011df4:	4621                	li	a2,8
20011df6:	4581                	li	a1,0
20011df8:	05c40513          	addi	a0,s0,92
20011dfc:	2a69                	jal	20011f96 <memset>
20011dfe:	02042a23          	sw	zero,52(s0)
20011e02:	02042c23          	sw	zero,56(s0)
20011e06:	04042423          	sw	zero,72(s0)
20011e0a:	04042623          	sw	zero,76(s0)
20011e0e:	8522                	mv	a0,s0
20011e10:	40b2                	lw	ra,12(sp)
20011e12:	4422                	lw	s0,8(sp)
20011e14:	4492                	lw	s1,4(sp)
20011e16:	4902                	lw	s2,0(sp)
20011e18:	0141                	addi	sp,sp,16
20011e1a:	8082                	ret
20011e1c:	06840413          	addi	s0,s0,104
20011e20:	bf79                	j	20011dbe <__sfp+0x22>
20011e22:	4591                	li	a1,4
20011e24:	854a                	mv	a0,s2
20011e26:	35f1                	jal	20011cf2 <__sfmoreglue>
20011e28:	c088                	sw	a0,0(s1)
20011e2a:	842a                	mv	s0,a0
20011e2c:	fd51                	bnez	a0,20011dc8 <__sfp+0x2c>
20011e2e:	47b1                	li	a5,12
20011e30:	00f92023          	sw	a5,0(s2)
20011e34:	bfe9                	j	20011e0e <__sfp+0x72>

20011e36 <_fwalk_reent>:
_fwalk_reent():
20011e36:	7179                	addi	sp,sp,-48
20011e38:	d422                	sw	s0,40(sp)
20011e3a:	d04a                	sw	s2,32(sp)
20011e3c:	cc52                	sw	s4,24(sp)
20011e3e:	ca56                	sw	s5,20(sp)
20011e40:	c85a                	sw	s6,16(sp)
20011e42:	c65e                	sw	s7,12(sp)
20011e44:	d606                	sw	ra,44(sp)
20011e46:	d226                	sw	s1,36(sp)
20011e48:	ce4e                	sw	s3,28(sp)
20011e4a:	8a2a                	mv	s4,a0
20011e4c:	8aae                	mv	s5,a1
20011e4e:	04850413          	addi	s0,a0,72
20011e52:	4901                	li	s2,0
20011e54:	4b05                	li	s6,1
20011e56:	5bfd                	li	s7,-1
20011e58:	ec09                	bnez	s0,20011e72 <_fwalk_reent+0x3c>
20011e5a:	50b2                	lw	ra,44(sp)
20011e5c:	5422                	lw	s0,40(sp)
20011e5e:	854a                	mv	a0,s2
20011e60:	5492                	lw	s1,36(sp)
20011e62:	5902                	lw	s2,32(sp)
20011e64:	49f2                	lw	s3,28(sp)
20011e66:	4a62                	lw	s4,24(sp)
20011e68:	4ad2                	lw	s5,20(sp)
20011e6a:	4b42                	lw	s6,16(sp)
20011e6c:	4bb2                	lw	s7,12(sp)
20011e6e:	6145                	addi	sp,sp,48
20011e70:	8082                	ret
20011e72:	4404                	lw	s1,8(s0)
20011e74:	00442983          	lw	s3,4(s0)
20011e78:	19fd                	addi	s3,s3,-1
20011e7a:	0009d463          	bgez	s3,20011e82 <_fwalk_reent+0x4c>
20011e7e:	4000                	lw	s0,0(s0)
20011e80:	bfe1                	j	20011e58 <_fwalk_reent+0x22>
20011e82:	00c4d783          	lhu	a5,12(s1)
20011e86:	00fb7b63          	bgeu	s6,a5,20011e9c <_fwalk_reent+0x66>
20011e8a:	00e49783          	lh	a5,14(s1)
20011e8e:	01778763          	beq	a5,s7,20011e9c <_fwalk_reent+0x66>
20011e92:	85a6                	mv	a1,s1
20011e94:	8552                	mv	a0,s4
20011e96:	9a82                	jalr	s5
20011e98:	00a96933          	or	s2,s2,a0
20011e9c:	06848493          	addi	s1,s1,104
20011ea0:	bfe1                	j	20011e78 <_fwalk_reent+0x42>

20011ea2 <__swhatbuf_r>:
__swhatbuf_r():
20011ea2:	7119                	addi	sp,sp,-128
20011ea4:	daa6                	sw	s1,116(sp)
20011ea6:	84ae                	mv	s1,a1
20011ea8:	00e59583          	lh	a1,14(a1)
20011eac:	dca2                	sw	s0,120(sp)
20011eae:	de86                	sw	ra,124(sp)
20011eb0:	8432                	mv	s0,a2
20011eb2:	0005dc63          	bgez	a1,20011eca <__swhatbuf_r+0x28>
20011eb6:	00c4d783          	lhu	a5,12(s1)
20011eba:	0006a023          	sw	zero,0(a3)
20011ebe:	0807f793          	andi	a5,a5,128
20011ec2:	e39d                	bnez	a5,20011ee8 <__swhatbuf_r+0x46>
20011ec4:	40000793          	li	a5,1024
20011ec8:	a015                	j	20011eec <__swhatbuf_r+0x4a>
20011eca:	0830                	addi	a2,sp,24
20011ecc:	c636                	sw	a3,12(sp)
20011ece:	254d                	jal	20012570 <_fstat_r>
20011ed0:	46b2                	lw	a3,12(sp)
20011ed2:	fe0542e3          	bltz	a0,20011eb6 <__swhatbuf_r+0x14>
20011ed6:	4772                	lw	a4,28(sp)
20011ed8:	67bd                	lui	a5,0xf
20011eda:	8ff9                	and	a5,a5,a4
20011edc:	7779                	lui	a4,0xffffe
20011ede:	97ba                	add	a5,a5,a4
20011ee0:	0017b793          	seqz	a5,a5
20011ee4:	c29c                	sw	a5,0(a3)
20011ee6:	bff9                	j	20011ec4 <__swhatbuf_r+0x22>
20011ee8:	04000793          	li	a5,64
20011eec:	c01c                	sw	a5,0(s0)
20011eee:	50f6                	lw	ra,124(sp)
20011ef0:	5466                	lw	s0,120(sp)
20011ef2:	54d6                	lw	s1,116(sp)
20011ef4:	4501                	li	a0,0
20011ef6:	6109                	addi	sp,sp,128
20011ef8:	8082                	ret

20011efa <__smakebuf_r>:
__smakebuf_r():
20011efa:	00c5d783          	lhu	a5,12(a1)
20011efe:	1101                	addi	sp,sp,-32
20011f00:	cc22                	sw	s0,24(sp)
20011f02:	ce06                	sw	ra,28(sp)
20011f04:	ca26                	sw	s1,20(sp)
20011f06:	c84a                	sw	s2,16(sp)
20011f08:	8b89                	andi	a5,a5,2
20011f0a:	842e                	mv	s0,a1
20011f0c:	cf89                	beqz	a5,20011f26 <__smakebuf_r+0x2c>
20011f0e:	04740793          	addi	a5,s0,71
20011f12:	c01c                	sw	a5,0(s0)
20011f14:	c81c                	sw	a5,16(s0)
20011f16:	4785                	li	a5,1
20011f18:	c85c                	sw	a5,20(s0)
20011f1a:	40f2                	lw	ra,28(sp)
20011f1c:	4462                	lw	s0,24(sp)
20011f1e:	44d2                	lw	s1,20(sp)
20011f20:	4942                	lw	s2,16(sp)
20011f22:	6105                	addi	sp,sp,32
20011f24:	8082                	ret
20011f26:	0074                	addi	a3,sp,12
20011f28:	0030                	addi	a2,sp,8
20011f2a:	84aa                	mv	s1,a0
20011f2c:	3f9d                	jal	20011ea2 <__swhatbuf_r>
20011f2e:	45a2                	lw	a1,8(sp)
20011f30:	892a                	mv	s2,a0
20011f32:	8526                	mv	a0,s1
20011f34:	2a39                	jal	20012052 <_malloc_r>
20011f36:	ed01                	bnez	a0,20011f4e <__smakebuf_r+0x54>
20011f38:	00c41783          	lh	a5,12(s0)
20011f3c:	2007f713          	andi	a4,a5,512
20011f40:	ff69                	bnez	a4,20011f1a <__smakebuf_r+0x20>
20011f42:	9bf1                	andi	a5,a5,-4
20011f44:	0027e793          	ori	a5,a5,2
20011f48:	00f41623          	sh	a5,12(s0)
20011f4c:	b7c9                	j	20011f0e <__smakebuf_r+0x14>
20011f4e:	00000797          	auipc	a5,0x0
20011f52:	d9a78793          	addi	a5,a5,-614 # 20011ce8 <_cleanup_r>
20011f56:	d49c                	sw	a5,40(s1)
20011f58:	00c45783          	lhu	a5,12(s0)
20011f5c:	c008                	sw	a0,0(s0)
20011f5e:	c808                	sw	a0,16(s0)
20011f60:	0807e793          	ori	a5,a5,128
20011f64:	00f41623          	sh	a5,12(s0)
20011f68:	47a2                	lw	a5,8(sp)
20011f6a:	c85c                	sw	a5,20(s0)
20011f6c:	47b2                	lw	a5,12(sp)
20011f6e:	cf89                	beqz	a5,20011f88 <__smakebuf_r+0x8e>
20011f70:	00e41583          	lh	a1,14(s0)
20011f74:	8526                	mv	a0,s1
20011f76:	251d                	jal	2001259c <_isatty_r>
20011f78:	c901                	beqz	a0,20011f88 <__smakebuf_r+0x8e>
20011f7a:	00c45783          	lhu	a5,12(s0)
20011f7e:	9bf1                	andi	a5,a5,-4
20011f80:	0017e793          	ori	a5,a5,1
20011f84:	00f41623          	sh	a5,12(s0)
20011f88:	00c45783          	lhu	a5,12(s0)
20011f8c:	00f96933          	or	s2,s2,a5
20011f90:	01241623          	sh	s2,12(s0)
20011f94:	b759                	j	20011f1a <__smakebuf_r+0x20>

20011f96 <memset>:
memset():
20011f96:	832a                	mv	t1,a0
20011f98:	c611                	beqz	a2,20011fa4 <memset+0xe>
20011f9a:	00b30023          	sb	a1,0(t1)
20011f9e:	167d                	addi	a2,a2,-1
20011fa0:	0305                	addi	t1,t1,1
20011fa2:	fe65                	bnez	a2,20011f9a <memset+0x4>
20011fa4:	8082                	ret

20011fa6 <_free_r>:
_free_r():
20011fa6:	c5cd                	beqz	a1,20012050 <_free_r+0xaa>
20011fa8:	ffc5a783          	lw	a5,-4(a1)
20011fac:	1141                	addi	sp,sp,-16
20011fae:	c422                	sw	s0,8(sp)
20011fb0:	c606                	sw	ra,12(sp)
20011fb2:	c226                	sw	s1,4(sp)
20011fb4:	ffc58413          	addi	s0,a1,-4
20011fb8:	0007d363          	bgez	a5,20011fbe <_free_r+0x18>
20011fbc:	943e                	add	s0,s0,a5
20011fbe:	84aa                	mv	s1,a0
20011fc0:	25b9                	jal	2001260e <__malloc_lock>
20011fc2:	5ffef797          	auipc	a5,0x5ffef
20011fc6:	b4e78793          	addi	a5,a5,-1202 # 80000b10 <__tls_base>
20011fca:	439c                	lw	a5,0(a5)
20011fcc:	ef89                	bnez	a5,20011fe6 <_free_r+0x40>
20011fce:	00042223          	sw	zero,4(s0)
20011fd2:	5ffef797          	auipc	a5,0x5ffef
20011fd6:	b287af23          	sw	s0,-1218(a5) # 80000b10 <__tls_base>
20011fda:	4422                	lw	s0,8(sp)
20011fdc:	40b2                	lw	ra,12(sp)
20011fde:	8526                	mv	a0,s1
20011fe0:	4492                	lw	s1,4(sp)
20011fe2:	0141                	addi	sp,sp,16
20011fe4:	a535                	j	20012610 <__malloc_unlock>
20011fe6:	00f47e63          	bgeu	s0,a5,20012002 <_free_r+0x5c>
20011fea:	4014                	lw	a3,0(s0)
20011fec:	00d40733          	add	a4,s0,a3
20011ff0:	00e79663          	bne	a5,a4,20011ffc <_free_r+0x56>
20011ff4:	4398                	lw	a4,0(a5)
20011ff6:	43dc                	lw	a5,4(a5)
20011ff8:	9736                	add	a4,a4,a3
20011ffa:	c018                	sw	a4,0(s0)
20011ffc:	c05c                	sw	a5,4(s0)
20011ffe:	bfd1                	j	20011fd2 <_free_r+0x2c>
20012000:	87ba                	mv	a5,a4
20012002:	43d8                	lw	a4,4(a5)
20012004:	c319                	beqz	a4,2001200a <_free_r+0x64>
20012006:	fee47de3          	bgeu	s0,a4,20012000 <_free_r+0x5a>
2001200a:	4394                	lw	a3,0(a5)
2001200c:	00d78633          	add	a2,a5,a3
20012010:	00861f63          	bne	a2,s0,2001202e <_free_r+0x88>
20012014:	4010                	lw	a2,0(s0)
20012016:	96b2                	add	a3,a3,a2
20012018:	c394                	sw	a3,0(a5)
2001201a:	00d78633          	add	a2,a5,a3
2001201e:	fac71ee3          	bne	a4,a2,20011fda <_free_r+0x34>
20012022:	4310                	lw	a2,0(a4)
20012024:	4358                	lw	a4,4(a4)
20012026:	96b2                	add	a3,a3,a2
20012028:	c394                	sw	a3,0(a5)
2001202a:	c3d8                	sw	a4,4(a5)
2001202c:	b77d                	j	20011fda <_free_r+0x34>
2001202e:	00c47563          	bgeu	s0,a2,20012038 <_free_r+0x92>
20012032:	47b1                	li	a5,12
20012034:	c09c                	sw	a5,0(s1)
20012036:	b755                	j	20011fda <_free_r+0x34>
20012038:	4010                	lw	a2,0(s0)
2001203a:	00c406b3          	add	a3,s0,a2
2001203e:	00d71663          	bne	a4,a3,2001204a <_free_r+0xa4>
20012042:	4314                	lw	a3,0(a4)
20012044:	4358                	lw	a4,4(a4)
20012046:	96b2                	add	a3,a3,a2
20012048:	c014                	sw	a3,0(s0)
2001204a:	c058                	sw	a4,4(s0)
2001204c:	c3c0                	sw	s0,4(a5)
2001204e:	b771                	j	20011fda <_free_r+0x34>
20012050:	8082                	ret

20012052 <_malloc_r>:
_malloc_r():
20012052:	1101                	addi	sp,sp,-32
20012054:	ca26                	sw	s1,20(sp)
20012056:	00358493          	addi	s1,a1,3
2001205a:	98f1                	andi	s1,s1,-4
2001205c:	ce06                	sw	ra,28(sp)
2001205e:	cc22                	sw	s0,24(sp)
20012060:	c84a                	sw	s2,16(sp)
20012062:	c64e                	sw	s3,12(sp)
20012064:	04a1                	addi	s1,s1,8
20012066:	47b1                	li	a5,12
20012068:	04f4f763          	bgeu	s1,a5,200120b6 <_malloc_r+0x64>
2001206c:	44b1                	li	s1,12
2001206e:	04b4e663          	bltu	s1,a1,200120ba <_malloc_r+0x68>
20012072:	892a                	mv	s2,a0
20012074:	2b69                	jal	2001260e <__malloc_lock>
20012076:	5ffef797          	auipc	a5,0x5ffef
2001207a:	a9a78793          	addi	a5,a5,-1382 # 80000b10 <__tls_base>
2001207e:	4398                	lw	a4,0(a5)
20012080:	843a                	mv	s0,a4
20012082:	e431                	bnez	s0,200120ce <_malloc_r+0x7c>
20012084:	5ffef797          	auipc	a5,0x5ffef
20012088:	a9078793          	addi	a5,a5,-1392 # 80000b14 <__malloc_sbrk_start>
2001208c:	439c                	lw	a5,0(a5)
2001208e:	eb81                	bnez	a5,2001209e <_malloc_r+0x4c>
20012090:	4581                	li	a1,0
20012092:	854a                	mv	a0,s2
20012094:	2645                	jal	20012434 <_sbrk_r>
20012096:	5ffef797          	auipc	a5,0x5ffef
2001209a:	a6a7af23          	sw	a0,-1410(a5) # 80000b14 <__malloc_sbrk_start>
2001209e:	85a6                	mv	a1,s1
200120a0:	854a                	mv	a0,s2
200120a2:	2e49                	jal	20012434 <_sbrk_r>
200120a4:	59fd                	li	s3,-1
200120a6:	07351963          	bne	a0,s3,20012118 <_malloc_r+0xc6>
200120aa:	47b1                	li	a5,12
200120ac:	00f92023          	sw	a5,0(s2)
200120b0:	854a                	mv	a0,s2
200120b2:	2bb9                	jal	20012610 <__malloc_unlock>
200120b4:	a029                	j	200120be <_malloc_r+0x6c>
200120b6:	fa04dce3          	bgez	s1,2001206e <_malloc_r+0x1c>
200120ba:	47b1                	li	a5,12
200120bc:	c11c                	sw	a5,0(a0)
200120be:	4501                	li	a0,0
200120c0:	40f2                	lw	ra,28(sp)
200120c2:	4462                	lw	s0,24(sp)
200120c4:	44d2                	lw	s1,20(sp)
200120c6:	4942                	lw	s2,16(sp)
200120c8:	49b2                	lw	s3,12(sp)
200120ca:	6105                	addi	sp,sp,32
200120cc:	8082                	ret
200120ce:	401c                	lw	a5,0(s0)
200120d0:	8f85                	sub	a5,a5,s1
200120d2:	0407c063          	bltz	a5,20012112 <_malloc_r+0xc0>
200120d6:	46ad                	li	a3,11
200120d8:	00f6f663          	bgeu	a3,a5,200120e4 <_malloc_r+0x92>
200120dc:	c01c                	sw	a5,0(s0)
200120de:	943e                	add	s0,s0,a5
200120e0:	c004                	sw	s1,0(s0)
200120e2:	a801                	j	200120f2 <_malloc_r+0xa0>
200120e4:	405c                	lw	a5,4(s0)
200120e6:	02871463          	bne	a4,s0,2001210e <_malloc_r+0xbc>
200120ea:	5ffef717          	auipc	a4,0x5ffef
200120ee:	a2f72323          	sw	a5,-1498(a4) # 80000b10 <__tls_base>
200120f2:	854a                	mv	a0,s2
200120f4:	2b31                	jal	20012610 <__malloc_unlock>
200120f6:	00b40513          	addi	a0,s0,11
200120fa:	00440793          	addi	a5,s0,4
200120fe:	9961                	andi	a0,a0,-8
20012100:	40f50733          	sub	a4,a0,a5
20012104:	df55                	beqz	a4,200120c0 <_malloc_r+0x6e>
20012106:	943a                	add	s0,s0,a4
20012108:	8f89                	sub	a5,a5,a0
2001210a:	c01c                	sw	a5,0(s0)
2001210c:	bf55                	j	200120c0 <_malloc_r+0x6e>
2001210e:	c35c                	sw	a5,4(a4)
20012110:	b7cd                	j	200120f2 <_malloc_r+0xa0>
20012112:	8722                	mv	a4,s0
20012114:	4040                	lw	s0,4(s0)
20012116:	b7b5                	j	20012082 <_malloc_r+0x30>
20012118:	00350413          	addi	s0,a0,3
2001211c:	9871                	andi	s0,s0,-4
2001211e:	fc8501e3          	beq	a0,s0,200120e0 <_malloc_r+0x8e>
20012122:	40a405b3          	sub	a1,s0,a0
20012126:	854a                	mv	a0,s2
20012128:	2631                	jal	20012434 <_sbrk_r>
2001212a:	fb351be3          	bne	a0,s3,200120e0 <_malloc_r+0x8e>
2001212e:	bfb5                	j	200120aa <_malloc_r+0x58>

20012130 <__sfputc_r>:
__sfputc_r():
20012130:	461c                	lw	a5,8(a2)
20012132:	17fd                	addi	a5,a5,-1
20012134:	c61c                	sw	a5,8(a2)
20012136:	0007da63          	bgez	a5,2001214a <__sfputc_r+0x1a>
2001213a:	4e18                	lw	a4,24(a2)
2001213c:	00e7c563          	blt	a5,a4,20012146 <__sfputc_r+0x16>
20012140:	47a9                	li	a5,10
20012142:	00f59463          	bne	a1,a5,2001214a <__sfputc_r+0x1a>
20012146:	fbcff06f          	j	20011902 <__swbuf_r>
2001214a:	421c                	lw	a5,0(a2)
2001214c:	852e                	mv	a0,a1
2001214e:	00178713          	addi	a4,a5,1
20012152:	c218                	sw	a4,0(a2)
20012154:	00b78023          	sb	a1,0(a5)
20012158:	8082                	ret

2001215a <__sfputs_r>:
__sfputs_r():
2001215a:	1101                	addi	sp,sp,-32
2001215c:	cc22                	sw	s0,24(sp)
2001215e:	ca26                	sw	s1,20(sp)
20012160:	c84a                	sw	s2,16(sp)
20012162:	c64e                	sw	s3,12(sp)
20012164:	c452                	sw	s4,8(sp)
20012166:	ce06                	sw	ra,28(sp)
20012168:	892a                	mv	s2,a0
2001216a:	89ae                	mv	s3,a1
2001216c:	8432                	mv	s0,a2
2001216e:	00d604b3          	add	s1,a2,a3
20012172:	5a7d                	li	s4,-1
20012174:	00941463          	bne	s0,s1,2001217c <__sfputs_r+0x22>
20012178:	4501                	li	a0,0
2001217a:	a809                	j	2001218c <__sfputs_r+0x32>
2001217c:	00044583          	lbu	a1,0(s0)
20012180:	864e                	mv	a2,s3
20012182:	854a                	mv	a0,s2
20012184:	3775                	jal	20012130 <__sfputc_r>
20012186:	0405                	addi	s0,s0,1
20012188:	ff4516e3          	bne	a0,s4,20012174 <__sfputs_r+0x1a>
2001218c:	40f2                	lw	ra,28(sp)
2001218e:	4462                	lw	s0,24(sp)
20012190:	44d2                	lw	s1,20(sp)
20012192:	4942                	lw	s2,16(sp)
20012194:	49b2                	lw	s3,12(sp)
20012196:	4a22                	lw	s4,8(sp)
20012198:	6105                	addi	sp,sp,32
2001219a:	8082                	ret

2001219c <_vfiprintf_r>:
_vfiprintf_r():
2001219c:	7135                	addi	sp,sp,-160
2001219e:	cd22                	sw	s0,152(sp)
200121a0:	cb26                	sw	s1,148(sp)
200121a2:	c94a                	sw	s2,144(sp)
200121a4:	c74e                	sw	s3,140(sp)
200121a6:	cf06                	sw	ra,156(sp)
200121a8:	c552                	sw	s4,136(sp)
200121aa:	c356                	sw	s5,132(sp)
200121ac:	c15a                	sw	s6,128(sp)
200121ae:	dede                	sw	s7,124(sp)
200121b0:	dce2                	sw	s8,120(sp)
200121b2:	dae6                	sw	s9,116(sp)
200121b4:	89aa                	mv	s3,a0
200121b6:	84ae                	mv	s1,a1
200121b8:	8932                	mv	s2,a2
200121ba:	8436                	mv	s0,a3
200121bc:	c501                	beqz	a0,200121c4 <_vfiprintf_r+0x28>
200121be:	4d1c                	lw	a5,24(a0)
200121c0:	e391                	bnez	a5,200121c4 <_vfiprintf_r+0x28>
200121c2:	3e95                	jal	20011d36 <__sinit>
200121c4:	ffffe797          	auipc	a5,0xffffe
200121c8:	35478793          	addi	a5,a5,852 # 20010518 <__sf_fake_stdin>
200121cc:	0cf49b63          	bne	s1,a5,200122a2 <_vfiprintf_r+0x106>
200121d0:	0049a483          	lw	s1,4(s3)
200121d4:	00c4d783          	lhu	a5,12(s1)
200121d8:	8ba1                	andi	a5,a5,8
200121da:	c7f5                	beqz	a5,200122c6 <_vfiprintf_r+0x12a>
200121dc:	489c                	lw	a5,16(s1)
200121de:	c7e5                	beqz	a5,200122c6 <_vfiprintf_r+0x12a>
200121e0:	02000793          	li	a5,32
200121e4:	02f104a3          	sb	a5,41(sp)
200121e8:	03000793          	li	a5,48
200121ec:	d202                	sw	zero,36(sp)
200121ee:	02f10523          	sb	a5,42(sp)
200121f2:	c622                	sw	s0,12(sp)
200121f4:	02500b93          	li	s7,37
200121f8:	ffffea97          	auipc	s5,0xffffe
200121fc:	360a8a93          	addi	s5,s5,864 # 20010558 <__sf_fake_stdout+0x20>
20012200:	4c05                	li	s8,1
20012202:	4b29                	li	s6,10
20012204:	844a                	mv	s0,s2
20012206:	00044783          	lbu	a5,0(s0)
2001220a:	c399                	beqz	a5,20012210 <_vfiprintf_r+0x74>
2001220c:	0f779063          	bne	a5,s7,200122ec <_vfiprintf_r+0x150>
20012210:	41240cb3          	sub	s9,s0,s2
20012214:	000c8d63          	beqz	s9,2001222e <_vfiprintf_r+0x92>
20012218:	86e6                	mv	a3,s9
2001221a:	864a                	mv	a2,s2
2001221c:	85a6                	mv	a1,s1
2001221e:	854e                	mv	a0,s3
20012220:	3f2d                	jal	2001215a <__sfputs_r>
20012222:	57fd                	li	a5,-1
20012224:	1ef50663          	beq	a0,a5,20012410 <_vfiprintf_r+0x274>
20012228:	5692                	lw	a3,36(sp)
2001222a:	96e6                	add	a3,a3,s9
2001222c:	d236                	sw	a3,36(sp)
2001222e:	00044783          	lbu	a5,0(s0)
20012232:	1c078f63          	beqz	a5,20012410 <_vfiprintf_r+0x274>
20012236:	57fd                	li	a5,-1
20012238:	00140913          	addi	s2,s0,1
2001223c:	c802                	sw	zero,16(sp)
2001223e:	ce02                	sw	zero,28(sp)
20012240:	ca3e                	sw	a5,20(sp)
20012242:	cc02                	sw	zero,24(sp)
20012244:	040109a3          	sb	zero,83(sp)
20012248:	d482                	sw	zero,104(sp)
2001224a:	00094583          	lbu	a1,0(s2)
2001224e:	4615                	li	a2,5
20012250:	8556                	mv	a0,s5
20012252:	264d                	jal	200125f4 <memchr>
20012254:	00190413          	addi	s0,s2,1
20012258:	47c2                	lw	a5,16(sp)
2001225a:	e959                	bnez	a0,200122f0 <_vfiprintf_r+0x154>
2001225c:	0107f713          	andi	a4,a5,16
20012260:	c709                	beqz	a4,2001226a <_vfiprintf_r+0xce>
20012262:	02000713          	li	a4,32
20012266:	04e109a3          	sb	a4,83(sp)
2001226a:	0087f713          	andi	a4,a5,8
2001226e:	c709                	beqz	a4,20012278 <_vfiprintf_r+0xdc>
20012270:	02b00713          	li	a4,43
20012274:	04e109a3          	sb	a4,83(sp)
20012278:	00094683          	lbu	a3,0(s2)
2001227c:	02a00713          	li	a4,42
20012280:	08e68063          	beq	a3,a4,20012300 <_vfiprintf_r+0x164>
20012284:	47f2                	lw	a5,28(sp)
20012286:	844a                	mv	s0,s2
20012288:	4681                	li	a3,0
2001228a:	4625                	li	a2,9
2001228c:	00044703          	lbu	a4,0(s0)
20012290:	00140593          	addi	a1,s0,1
20012294:	fd070713          	addi	a4,a4,-48
20012298:	0ae67963          	bgeu	a2,a4,2001234a <_vfiprintf_r+0x1ae>
2001229c:	cab5                	beqz	a3,20012310 <_vfiprintf_r+0x174>
2001229e:	ce3e                	sw	a5,28(sp)
200122a0:	a885                	j	20012310 <_vfiprintf_r+0x174>
200122a2:	ffffe797          	auipc	a5,0xffffe
200122a6:	29678793          	addi	a5,a5,662 # 20010538 <__sf_fake_stdout>
200122aa:	00f49563          	bne	s1,a5,200122b4 <_vfiprintf_r+0x118>
200122ae:	0089a483          	lw	s1,8(s3)
200122b2:	b70d                	j	200121d4 <_vfiprintf_r+0x38>
200122b4:	ffffe797          	auipc	a5,0xffffe
200122b8:	24478793          	addi	a5,a5,580 # 200104f8 <__sf_fake_stderr>
200122bc:	f0f49ce3          	bne	s1,a5,200121d4 <_vfiprintf_r+0x38>
200122c0:	00c9a483          	lw	s1,12(s3)
200122c4:	bf01                	j	200121d4 <_vfiprintf_r+0x38>
200122c6:	85a6                	mv	a1,s1
200122c8:	854e                	mv	a0,s3
200122ca:	ef8ff0ef          	jal	ra,200119c2 <__swsetup_r>
200122ce:	d909                	beqz	a0,200121e0 <_vfiprintf_r+0x44>
200122d0:	557d                	li	a0,-1
200122d2:	40fa                	lw	ra,156(sp)
200122d4:	446a                	lw	s0,152(sp)
200122d6:	44da                	lw	s1,148(sp)
200122d8:	494a                	lw	s2,144(sp)
200122da:	49ba                	lw	s3,140(sp)
200122dc:	4a2a                	lw	s4,136(sp)
200122de:	4a9a                	lw	s5,132(sp)
200122e0:	4b0a                	lw	s6,128(sp)
200122e2:	5bf6                	lw	s7,124(sp)
200122e4:	5c66                	lw	s8,120(sp)
200122e6:	5cd6                	lw	s9,116(sp)
200122e8:	610d                	addi	sp,sp,160
200122ea:	8082                	ret
200122ec:	0405                	addi	s0,s0,1
200122ee:	bf21                	j	20012206 <_vfiprintf_r+0x6a>
200122f0:	41550533          	sub	a0,a0,s5
200122f4:	00ac1533          	sll	a0,s8,a0
200122f8:	8fc9                	or	a5,a5,a0
200122fa:	c83e                	sw	a5,16(sp)
200122fc:	8922                	mv	s2,s0
200122fe:	b7b1                	j	2001224a <_vfiprintf_r+0xae>
20012300:	4732                	lw	a4,12(sp)
20012302:	00470693          	addi	a3,a4,4
20012306:	4318                	lw	a4,0(a4)
20012308:	c636                	sw	a3,12(sp)
2001230a:	02074963          	bltz	a4,2001233c <_vfiprintf_r+0x1a0>
2001230e:	ce3a                	sw	a4,28(sp)
20012310:	00044703          	lbu	a4,0(s0)
20012314:	02e00793          	li	a5,46
20012318:	04f71f63          	bne	a4,a5,20012376 <_vfiprintf_r+0x1da>
2001231c:	00144703          	lbu	a4,1(s0)
20012320:	02a00793          	li	a5,42
20012324:	02f71b63          	bne	a4,a5,2001235a <_vfiprintf_r+0x1be>
20012328:	47b2                	lw	a5,12(sp)
2001232a:	0409                	addi	s0,s0,2
2001232c:	00478713          	addi	a4,a5,4
20012330:	439c                	lw	a5,0(a5)
20012332:	c63a                	sw	a4,12(sp)
20012334:	0207c163          	bltz	a5,20012356 <_vfiprintf_r+0x1ba>
20012338:	ca3e                	sw	a5,20(sp)
2001233a:	a835                	j	20012376 <_vfiprintf_r+0x1da>
2001233c:	40e00733          	neg	a4,a4
20012340:	0027e793          	ori	a5,a5,2
20012344:	ce3a                	sw	a4,28(sp)
20012346:	c83e                	sw	a5,16(sp)
20012348:	b7e1                	j	20012310 <_vfiprintf_r+0x174>
2001234a:	036787b3          	mul	a5,a5,s6
2001234e:	4685                	li	a3,1
20012350:	842e                	mv	s0,a1
20012352:	97ba                	add	a5,a5,a4
20012354:	bf25                	j	2001228c <_vfiprintf_r+0xf0>
20012356:	57fd                	li	a5,-1
20012358:	b7c5                	j	20012338 <_vfiprintf_r+0x19c>
2001235a:	0405                	addi	s0,s0,1
2001235c:	ca02                	sw	zero,20(sp)
2001235e:	4681                	li	a3,0
20012360:	4781                	li	a5,0
20012362:	4625                	li	a2,9
20012364:	00044703          	lbu	a4,0(s0)
20012368:	00140593          	addi	a1,s0,1
2001236c:	fd070713          	addi	a4,a4,-48
20012370:	06e67663          	bgeu	a2,a4,200123dc <_vfiprintf_r+0x240>
20012374:	f2f1                	bnez	a3,20012338 <_vfiprintf_r+0x19c>
20012376:	00044583          	lbu	a1,0(s0)
2001237a:	460d                	li	a2,3
2001237c:	ffffe517          	auipc	a0,0xffffe
20012380:	1e450513          	addi	a0,a0,484 # 20010560 <__sf_fake_stdout+0x28>
20012384:	2c85                	jal	200125f4 <memchr>
20012386:	cd11                	beqz	a0,200123a2 <_vfiprintf_r+0x206>
20012388:	ffffe797          	auipc	a5,0xffffe
2001238c:	1d878793          	addi	a5,a5,472 # 20010560 <__sf_fake_stdout+0x28>
20012390:	8d1d                	sub	a0,a0,a5
20012392:	04000793          	li	a5,64
20012396:	00a797b3          	sll	a5,a5,a0
2001239a:	4542                	lw	a0,16(sp)
2001239c:	0405                	addi	s0,s0,1
2001239e:	8d5d                	or	a0,a0,a5
200123a0:	c82a                	sw	a0,16(sp)
200123a2:	00044583          	lbu	a1,0(s0)
200123a6:	4619                	li	a2,6
200123a8:	ffffe517          	auipc	a0,0xffffe
200123ac:	1bc50513          	addi	a0,a0,444 # 20010564 <__sf_fake_stdout+0x2c>
200123b0:	00140913          	addi	s2,s0,1
200123b4:	02b10423          	sb	a1,40(sp)
200123b8:	2c35                	jal	200125f4 <memchr>
200123ba:	c13d                	beqz	a0,20012420 <_vfiprintf_r+0x284>
200123bc:	dffee797          	auipc	a5,0xdffee
200123c0:	c4478793          	addi	a5,a5,-956 # 0 <__metal_boot_hart>
200123c4:	e795                	bnez	a5,200123f0 <_vfiprintf_r+0x254>
200123c6:	4742                	lw	a4,16(sp)
200123c8:	47b2                	lw	a5,12(sp)
200123ca:	10077713          	andi	a4,a4,256
200123ce:	cf09                	beqz	a4,200123e8 <_vfiprintf_r+0x24c>
200123d0:	0791                	addi	a5,a5,4
200123d2:	c63e                	sw	a5,12(sp)
200123d4:	5792                	lw	a5,36(sp)
200123d6:	97d2                	add	a5,a5,s4
200123d8:	d23e                	sw	a5,36(sp)
200123da:	b52d                	j	20012204 <_vfiprintf_r+0x68>
200123dc:	036787b3          	mul	a5,a5,s6
200123e0:	4685                	li	a3,1
200123e2:	842e                	mv	s0,a1
200123e4:	97ba                	add	a5,a5,a4
200123e6:	bfbd                	j	20012364 <_vfiprintf_r+0x1c8>
200123e8:	079d                	addi	a5,a5,7
200123ea:	9be1                	andi	a5,a5,-8
200123ec:	07a1                	addi	a5,a5,8
200123ee:	b7d5                	j	200123d2 <_vfiprintf_r+0x236>
200123f0:	0078                	addi	a4,sp,12
200123f2:	00000697          	auipc	a3,0x0
200123f6:	d6868693          	addi	a3,a3,-664 # 2001215a <__sfputs_r>
200123fa:	8626                	mv	a2,s1
200123fc:	080c                	addi	a1,sp,16
200123fe:	854e                	mv	a0,s3
20012400:	00000097          	auipc	ra,0x0
20012404:	000000e7          	jalr	zero # 0 <__metal_boot_hart>
20012408:	57fd                	li	a5,-1
2001240a:	8a2a                	mv	s4,a0
2001240c:	fcf514e3          	bne	a0,a5,200123d4 <_vfiprintf_r+0x238>
20012410:	00c4d783          	lhu	a5,12(s1)
20012414:	0407f793          	andi	a5,a5,64
20012418:	ea079ce3          	bnez	a5,200122d0 <_vfiprintf_r+0x134>
2001241c:	5512                	lw	a0,36(sp)
2001241e:	bd55                	j	200122d2 <_vfiprintf_r+0x136>
20012420:	0078                	addi	a4,sp,12
20012422:	00000697          	auipc	a3,0x0
20012426:	d3868693          	addi	a3,a3,-712 # 2001215a <__sfputs_r>
2001242a:	8626                	mv	a2,s1
2001242c:	080c                	addi	a1,sp,16
2001242e:	854e                	mv	a0,s3
20012430:	24fd                	jal	2001271e <_printf_i>
20012432:	bfd9                	j	20012408 <_vfiprintf_r+0x26c>

20012434 <_sbrk_r>:
_sbrk_r():
20012434:	1141                	addi	sp,sp,-16
20012436:	c422                	sw	s0,8(sp)
20012438:	842a                	mv	s0,a0
2001243a:	852e                	mv	a0,a1
2001243c:	8e01a823          	sw	zero,-1808(gp) # 80000bb0 <errno>
20012440:	c606                	sw	ra,12(sp)
20012442:	742060ef          	jal	ra,20018b84 <_sbrk>
20012446:	57fd                	li	a5,-1
20012448:	00f51763          	bne	a0,a5,20012456 <_sbrk_r+0x22>
2001244c:	8f018793          	addi	a5,gp,-1808 # 80000bb0 <errno>
20012450:	439c                	lw	a5,0(a5)
20012452:	c391                	beqz	a5,20012456 <_sbrk_r+0x22>
20012454:	c01c                	sw	a5,0(s0)
20012456:	40b2                	lw	ra,12(sp)
20012458:	4422                	lw	s0,8(sp)
2001245a:	0141                	addi	sp,sp,16
2001245c:	8082                	ret

2001245e <__sread>:
__sread():
2001245e:	1141                	addi	sp,sp,-16
20012460:	c422                	sw	s0,8(sp)
20012462:	842e                	mv	s0,a1
20012464:	00e59583          	lh	a1,14(a1)
20012468:	c606                	sw	ra,12(sp)
2001246a:	2b99                	jal	200129c0 <_read_r>
2001246c:	00054963          	bltz	a0,2001247e <__sread+0x20>
20012470:	487c                	lw	a5,84(s0)
20012472:	97aa                	add	a5,a5,a0
20012474:	c87c                	sw	a5,84(s0)
20012476:	40b2                	lw	ra,12(sp)
20012478:	4422                	lw	s0,8(sp)
2001247a:	0141                	addi	sp,sp,16
2001247c:	8082                	ret
2001247e:	00c45783          	lhu	a5,12(s0)
20012482:	777d                	lui	a4,0xfffff
20012484:	177d                	addi	a4,a4,-1
20012486:	8ff9                	and	a5,a5,a4
20012488:	00f41623          	sh	a5,12(s0)
2001248c:	b7ed                	j	20012476 <__sread+0x18>

2001248e <__swrite>:
__swrite():
2001248e:	00c5d783          	lhu	a5,12(a1)
20012492:	1101                	addi	sp,sp,-32
20012494:	cc22                	sw	s0,24(sp)
20012496:	ca26                	sw	s1,20(sp)
20012498:	c84a                	sw	s2,16(sp)
2001249a:	c64e                	sw	s3,12(sp)
2001249c:	ce06                	sw	ra,28(sp)
2001249e:	1007f793          	andi	a5,a5,256
200124a2:	84aa                	mv	s1,a0
200124a4:	842e                	mv	s0,a1
200124a6:	8932                	mv	s2,a2
200124a8:	89b6                	mv	s3,a3
200124aa:	c791                	beqz	a5,200124b6 <__swrite+0x28>
200124ac:	00e59583          	lh	a1,14(a1)
200124b0:	4689                	li	a3,2
200124b2:	4601                	li	a2,0
200124b4:	2a09                	jal	200125c6 <_lseek_r>
200124b6:	00c45783          	lhu	a5,12(s0)
200124ba:	777d                	lui	a4,0xfffff
200124bc:	177d                	addi	a4,a4,-1
200124be:	8ff9                	and	a5,a5,a4
200124c0:	00f41623          	sh	a5,12(s0)
200124c4:	00e41583          	lh	a1,14(s0)
200124c8:	4462                	lw	s0,24(sp)
200124ca:	40f2                	lw	ra,28(sp)
200124cc:	86ce                	mv	a3,s3
200124ce:	864a                	mv	a2,s2
200124d0:	49b2                	lw	s3,12(sp)
200124d2:	4942                	lw	s2,16(sp)
200124d4:	8526                	mv	a0,s1
200124d6:	44d2                	lw	s1,20(sp)
200124d8:	6105                	addi	sp,sp,32
200124da:	a83d                	j	20012518 <_write_r>

200124dc <__sseek>:
__sseek():
200124dc:	1141                	addi	sp,sp,-16
200124de:	c422                	sw	s0,8(sp)
200124e0:	842e                	mv	s0,a1
200124e2:	00e59583          	lh	a1,14(a1)
200124e6:	c606                	sw	ra,12(sp)
200124e8:	28f9                	jal	200125c6 <_lseek_r>
200124ea:	57fd                	li	a5,-1
200124ec:	00c45703          	lhu	a4,12(s0)
200124f0:	00f51b63          	bne	a0,a5,20012506 <__sseek+0x2a>
200124f4:	77fd                	lui	a5,0xfffff
200124f6:	17fd                	addi	a5,a5,-1
200124f8:	8ff9                	and	a5,a5,a4
200124fa:	00f41623          	sh	a5,12(s0)
200124fe:	40b2                	lw	ra,12(sp)
20012500:	4422                	lw	s0,8(sp)
20012502:	0141                	addi	sp,sp,16
20012504:	8082                	ret
20012506:	6785                	lui	a5,0x1
20012508:	8fd9                	or	a5,a5,a4
2001250a:	00f41623          	sh	a5,12(s0)
2001250e:	c868                	sw	a0,84(s0)
20012510:	b7fd                	j	200124fe <__sseek+0x22>

20012512 <__sclose>:
__sclose():
20012512:	00e59583          	lh	a1,14(a1)
20012516:	a805                	j	20012546 <_close_r>

20012518 <_write_r>:
_write_r():
20012518:	1141                	addi	sp,sp,-16
2001251a:	c422                	sw	s0,8(sp)
2001251c:	842a                	mv	s0,a0
2001251e:	852e                	mv	a0,a1
20012520:	85b2                	mv	a1,a2
20012522:	8636                	mv	a2,a3
20012524:	8e01a823          	sw	zero,-1808(gp) # 80000bb0 <errno>
20012528:	c606                	sw	ra,12(sp)
2001252a:	6c4060ef          	jal	ra,20018bee <_write>
2001252e:	57fd                	li	a5,-1
20012530:	00f51763          	bne	a0,a5,2001253e <_write_r+0x26>
20012534:	8f018793          	addi	a5,gp,-1808 # 80000bb0 <errno>
20012538:	439c                	lw	a5,0(a5)
2001253a:	c391                	beqz	a5,2001253e <_write_r+0x26>
2001253c:	c01c                	sw	a5,0(s0)
2001253e:	40b2                	lw	ra,12(sp)
20012540:	4422                	lw	s0,8(sp)
20012542:	0141                	addi	sp,sp,16
20012544:	8082                	ret

20012546 <_close_r>:
_close_r():
20012546:	1141                	addi	sp,sp,-16
20012548:	c422                	sw	s0,8(sp)
2001254a:	842a                	mv	s0,a0
2001254c:	852e                	mv	a0,a1
2001254e:	8e01a823          	sw	zero,-1808(gp) # 80000bb0 <errno>
20012552:	c606                	sw	ra,12(sp)
20012554:	574060ef          	jal	ra,20018ac8 <_close>
20012558:	57fd                	li	a5,-1
2001255a:	00f51763          	bne	a0,a5,20012568 <_close_r+0x22>
2001255e:	8f018793          	addi	a5,gp,-1808 # 80000bb0 <errno>
20012562:	439c                	lw	a5,0(a5)
20012564:	c391                	beqz	a5,20012568 <_close_r+0x22>
20012566:	c01c                	sw	a5,0(s0)
20012568:	40b2                	lw	ra,12(sp)
2001256a:	4422                	lw	s0,8(sp)
2001256c:	0141                	addi	sp,sp,16
2001256e:	8082                	ret

20012570 <_fstat_r>:
_fstat_r():
20012570:	1141                	addi	sp,sp,-16
20012572:	c422                	sw	s0,8(sp)
20012574:	842a                	mv	s0,a0
20012576:	852e                	mv	a0,a1
20012578:	85b2                	mv	a1,a2
2001257a:	8e01a823          	sw	zero,-1808(gp) # 80000bb0 <errno>
2001257e:	c606                	sw	ra,12(sp)
20012580:	56a060ef          	jal	ra,20018aea <_fstat>
20012584:	57fd                	li	a5,-1
20012586:	00f51763          	bne	a0,a5,20012594 <_fstat_r+0x24>
2001258a:	8f018793          	addi	a5,gp,-1808 # 80000bb0 <errno>
2001258e:	439c                	lw	a5,0(a5)
20012590:	c391                	beqz	a5,20012594 <_fstat_r+0x24>
20012592:	c01c                	sw	a5,0(s0)
20012594:	40b2                	lw	ra,12(sp)
20012596:	4422                	lw	s0,8(sp)
20012598:	0141                	addi	sp,sp,16
2001259a:	8082                	ret

2001259c <_isatty_r>:
_isatty_r():
2001259c:	1141                	addi	sp,sp,-16
2001259e:	c422                	sw	s0,8(sp)
200125a0:	842a                	mv	s0,a0
200125a2:	852e                	mv	a0,a1
200125a4:	8e01a823          	sw	zero,-1808(gp) # 80000bb0 <errno>
200125a8:	c606                	sw	ra,12(sp)
200125aa:	566060ef          	jal	ra,20018b10 <_isatty>
200125ae:	57fd                	li	a5,-1
200125b0:	00f51763          	bne	a0,a5,200125be <_isatty_r+0x22>
200125b4:	8f018793          	addi	a5,gp,-1808 # 80000bb0 <errno>
200125b8:	439c                	lw	a5,0(a5)
200125ba:	c391                	beqz	a5,200125be <_isatty_r+0x22>
200125bc:	c01c                	sw	a5,0(s0)
200125be:	40b2                	lw	ra,12(sp)
200125c0:	4422                	lw	s0,8(sp)
200125c2:	0141                	addi	sp,sp,16
200125c4:	8082                	ret

200125c6 <_lseek_r>:
_lseek_r():
200125c6:	1141                	addi	sp,sp,-16
200125c8:	c422                	sw	s0,8(sp)
200125ca:	842a                	mv	s0,a0
200125cc:	852e                	mv	a0,a1
200125ce:	85b2                	mv	a1,a2
200125d0:	8636                	mv	a2,a3
200125d2:	8e01a823          	sw	zero,-1808(gp) # 80000bb0 <errno>
200125d6:	c606                	sw	ra,12(sp)
200125d8:	558060ef          	jal	ra,20018b30 <_lseek>
200125dc:	57fd                	li	a5,-1
200125de:	00f51763          	bne	a0,a5,200125ec <_lseek_r+0x26>
200125e2:	8f018793          	addi	a5,gp,-1808 # 80000bb0 <errno>
200125e6:	439c                	lw	a5,0(a5)
200125e8:	c391                	beqz	a5,200125ec <_lseek_r+0x26>
200125ea:	c01c                	sw	a5,0(s0)
200125ec:	40b2                	lw	ra,12(sp)
200125ee:	4422                	lw	s0,8(sp)
200125f0:	0141                	addi	sp,sp,16
200125f2:	8082                	ret

200125f4 <memchr>:
memchr():
200125f4:	0ff5f593          	andi	a1,a1,255
200125f8:	962a                	add	a2,a2,a0
200125fa:	00c51463          	bne	a0,a2,20012602 <memchr+0xe>
200125fe:	4501                	li	a0,0
20012600:	8082                	ret
20012602:	00054783          	lbu	a5,0(a0)
20012606:	feb78de3          	beq	a5,a1,20012600 <memchr+0xc>
2001260a:	0505                	addi	a0,a0,1
2001260c:	b7fd                	j	200125fa <memchr+0x6>

2001260e <__malloc_lock>:
__malloc_lock():
2001260e:	8082                	ret

20012610 <__malloc_unlock>:
__malloc_unlock():
20012610:	8082                	ret

20012612 <_printf_common>:
_printf_common():
20012612:	7179                	addi	sp,sp,-48
20012614:	ca56                	sw	s5,20(sp)
20012616:	499c                	lw	a5,16(a1)
20012618:	8aba                	mv	s5,a4
2001261a:	4598                	lw	a4,8(a1)
2001261c:	d422                	sw	s0,40(sp)
2001261e:	d226                	sw	s1,36(sp)
20012620:	ce4e                	sw	s3,28(sp)
20012622:	cc52                	sw	s4,24(sp)
20012624:	d606                	sw	ra,44(sp)
20012626:	d04a                	sw	s2,32(sp)
20012628:	c85a                	sw	s6,16(sp)
2001262a:	c65e                	sw	s7,12(sp)
2001262c:	89aa                	mv	s3,a0
2001262e:	842e                	mv	s0,a1
20012630:	84b2                	mv	s1,a2
20012632:	8a36                	mv	s4,a3
20012634:	00e7d363          	bge	a5,a4,2001263a <_printf_common+0x28>
20012638:	87ba                	mv	a5,a4
2001263a:	c09c                	sw	a5,0(s1)
2001263c:	04344703          	lbu	a4,67(s0)
20012640:	c319                	beqz	a4,20012646 <_printf_common+0x34>
20012642:	0785                	addi	a5,a5,1
20012644:	c09c                	sw	a5,0(s1)
20012646:	401c                	lw	a5,0(s0)
20012648:	0207f793          	andi	a5,a5,32
2001264c:	c781                	beqz	a5,20012654 <_printf_common+0x42>
2001264e:	409c                	lw	a5,0(s1)
20012650:	0789                	addi	a5,a5,2
20012652:	c09c                	sw	a5,0(s1)
20012654:	00042903          	lw	s2,0(s0)
20012658:	00697913          	andi	s2,s2,6
2001265c:	00091a63          	bnez	s2,20012670 <_printf_common+0x5e>
20012660:	01940b13          	addi	s6,s0,25
20012664:	5bfd                	li	s7,-1
20012666:	445c                	lw	a5,12(s0)
20012668:	4098                	lw	a4,0(s1)
2001266a:	8f99                	sub	a5,a5,a4
2001266c:	04f94c63          	blt	s2,a5,200126c4 <_printf_common+0xb2>
20012670:	401c                	lw	a5,0(s0)
20012672:	04344683          	lbu	a3,67(s0)
20012676:	0207f793          	andi	a5,a5,32
2001267a:	00d036b3          	snez	a3,a3
2001267e:	eba5                	bnez	a5,200126ee <_printf_common+0xdc>
20012680:	04340613          	addi	a2,s0,67
20012684:	85d2                	mv	a1,s4
20012686:	854e                	mv	a0,s3
20012688:	9a82                	jalr	s5
2001268a:	57fd                	li	a5,-1
2001268c:	04f50363          	beq	a0,a5,200126d2 <_printf_common+0xc0>
20012690:	401c                	lw	a5,0(s0)
20012692:	4611                	li	a2,4
20012694:	4098                	lw	a4,0(s1)
20012696:	8b99                	andi	a5,a5,6
20012698:	4454                	lw	a3,12(s0)
2001269a:	4481                	li	s1,0
2001269c:	00c79763          	bne	a5,a2,200126aa <_printf_common+0x98>
200126a0:	40e684b3          	sub	s1,a3,a4
200126a4:	0004d363          	bgez	s1,200126aa <_printf_common+0x98>
200126a8:	4481                	li	s1,0
200126aa:	441c                	lw	a5,8(s0)
200126ac:	4818                	lw	a4,16(s0)
200126ae:	00f75463          	bge	a4,a5,200126b6 <_printf_common+0xa4>
200126b2:	8f99                	sub	a5,a5,a4
200126b4:	94be                	add	s1,s1,a5
200126b6:	4901                	li	s2,0
200126b8:	0469                	addi	s0,s0,26
200126ba:	5b7d                	li	s6,-1
200126bc:	05249863          	bne	s1,s2,2001270c <_printf_common+0xfa>
200126c0:	4501                	li	a0,0
200126c2:	a809                	j	200126d4 <_printf_common+0xc2>
200126c4:	4685                	li	a3,1
200126c6:	865a                	mv	a2,s6
200126c8:	85d2                	mv	a1,s4
200126ca:	854e                	mv	a0,s3
200126cc:	9a82                	jalr	s5
200126ce:	01751e63          	bne	a0,s7,200126ea <_printf_common+0xd8>
200126d2:	557d                	li	a0,-1
200126d4:	50b2                	lw	ra,44(sp)
200126d6:	5422                	lw	s0,40(sp)
200126d8:	5492                	lw	s1,36(sp)
200126da:	5902                	lw	s2,32(sp)
200126dc:	49f2                	lw	s3,28(sp)
200126de:	4a62                	lw	s4,24(sp)
200126e0:	4ad2                	lw	s5,20(sp)
200126e2:	4b42                	lw	s6,16(sp)
200126e4:	4bb2                	lw	s7,12(sp)
200126e6:	6145                	addi	sp,sp,48
200126e8:	8082                	ret
200126ea:	0905                	addi	s2,s2,1
200126ec:	bfad                	j	20012666 <_printf_common+0x54>
200126ee:	00d40733          	add	a4,s0,a3
200126f2:	03000613          	li	a2,48
200126f6:	04c701a3          	sb	a2,67(a4) # fffff043 <metal_segment_heap_target_end+0x7fffd883>
200126fa:	04544703          	lbu	a4,69(s0)
200126fe:	00168793          	addi	a5,a3,1
20012702:	97a2                	add	a5,a5,s0
20012704:	0689                	addi	a3,a3,2
20012706:	04e781a3          	sb	a4,67(a5) # 1043 <__heap_size+0x843>
2001270a:	bf9d                	j	20012680 <_printf_common+0x6e>
2001270c:	4685                	li	a3,1
2001270e:	8622                	mv	a2,s0
20012710:	85d2                	mv	a1,s4
20012712:	854e                	mv	a0,s3
20012714:	9a82                	jalr	s5
20012716:	fb650ee3          	beq	a0,s6,200126d2 <_printf_common+0xc0>
2001271a:	0905                	addi	s2,s2,1
2001271c:	b745                	j	200126bc <_printf_common+0xaa>

2001271e <_printf_i>:
_printf_i():
2001271e:	7179                	addi	sp,sp,-48
20012720:	d422                	sw	s0,40(sp)
20012722:	d226                	sw	s1,36(sp)
20012724:	d04a                	sw	s2,32(sp)
20012726:	ce4e                	sw	s3,28(sp)
20012728:	d606                	sw	ra,44(sp)
2001272a:	cc52                	sw	s4,24(sp)
2001272c:	ca56                	sw	s5,20(sp)
2001272e:	c85a                	sw	s6,16(sp)
20012730:	89b6                	mv	s3,a3
20012732:	0185c683          	lbu	a3,24(a1)
20012736:	06e00793          	li	a5,110
2001273a:	8932                	mv	s2,a2
2001273c:	84aa                	mv	s1,a0
2001273e:	842e                	mv	s0,a1
20012740:	04358613          	addi	a2,a1,67
20012744:	1ef68063          	beq	a3,a5,20012924 <_printf_i+0x206>
20012748:	06d7e263          	bltu	a5,a3,200127ac <_printf_i+0x8e>
2001274c:	06300793          	li	a5,99
20012750:	0af68263          	beq	a3,a5,200127f4 <_printf_i+0xd6>
20012754:	00d7ed63          	bltu	a5,a3,2001276e <_printf_i+0x50>
20012758:	1e068a63          	beqz	a3,2001294c <_printf_i+0x22e>
2001275c:	05800793          	li	a5,88
20012760:	16f68663          	beq	a3,a5,200128cc <_printf_i+0x1ae>
20012764:	04240a93          	addi	s5,s0,66
20012768:	04d40123          	sb	a3,66(s0)
2001276c:	a869                	j	20012806 <_printf_i+0xe8>
2001276e:	06400793          	li	a5,100
20012772:	00f68663          	beq	a3,a5,2001277e <_printf_i+0x60>
20012776:	06900793          	li	a5,105
2001277a:	fef695e3          	bne	a3,a5,20012764 <_printf_i+0x46>
2001277e:	401c                	lw	a5,0(s0)
20012780:	4308                	lw	a0,0(a4)
20012782:	0807f693          	andi	a3,a5,128
20012786:	00450593          	addi	a1,a0,4
2001278a:	c2c1                	beqz	a3,2001280a <_printf_i+0xec>
2001278c:	411c                	lw	a5,0(a0)
2001278e:	c30c                	sw	a1,0(a4)
20012790:	0007d863          	bgez	a5,200127a0 <_printf_i+0x82>
20012794:	02d00713          	li	a4,45
20012798:	40f007b3          	neg	a5,a5
2001279c:	04e401a3          	sb	a4,67(s0)
200127a0:	ffffe697          	auipc	a3,0xffffe
200127a4:	dcc68693          	addi	a3,a3,-564 # 2001056c <__sf_fake_stdout+0x34>
200127a8:	4729                	li	a4,10
200127aa:	a065                	j	20012852 <_printf_i+0x134>
200127ac:	07300793          	li	a5,115
200127b0:	1af68263          	beq	a3,a5,20012954 <_printf_i+0x236>
200127b4:	00d7ef63          	bltu	a5,a3,200127d2 <_printf_i+0xb4>
200127b8:	06f00793          	li	a5,111
200127bc:	04f68f63          	beq	a3,a5,2001281a <_printf_i+0xfc>
200127c0:	07000793          	li	a5,112
200127c4:	faf690e3          	bne	a3,a5,20012764 <_printf_i+0x46>
200127c8:	419c                	lw	a5,0(a1)
200127ca:	0207e793          	ori	a5,a5,32
200127ce:	c19c                	sw	a5,0(a1)
200127d0:	a809                	j	200127e2 <_printf_i+0xc4>
200127d2:	07500793          	li	a5,117
200127d6:	04f68263          	beq	a3,a5,2001281a <_printf_i+0xfc>
200127da:	07800793          	li	a5,120
200127de:	f8f693e3          	bne	a3,a5,20012764 <_printf_i+0x46>
200127e2:	07800793          	li	a5,120
200127e6:	04f402a3          	sb	a5,69(s0)
200127ea:	ffffe697          	auipc	a3,0xffffe
200127ee:	d9668693          	addi	a3,a3,-618 # 20010580 <__sf_fake_stdout+0x48>
200127f2:	a0dd                	j	200128d8 <_printf_i+0x1ba>
200127f4:	431c                	lw	a5,0(a4)
200127f6:	04258a93          	addi	s5,a1,66
200127fa:	00478693          	addi	a3,a5,4
200127fe:	439c                	lw	a5,0(a5)
20012800:	c314                	sw	a3,0(a4)
20012802:	04f58123          	sb	a5,66(a1)
20012806:	4785                	li	a5,1
20012808:	a2ad                	j	20012972 <_printf_i+0x254>
2001280a:	0407f693          	andi	a3,a5,64
2001280e:	411c                	lw	a5,0(a0)
20012810:	c30c                	sw	a1,0(a4)
20012812:	debd                	beqz	a3,20012790 <_printf_i+0x72>
20012814:	07c2                	slli	a5,a5,0x10
20012816:	87c1                	srai	a5,a5,0x10
20012818:	bfa5                	j	20012790 <_printf_i+0x72>
2001281a:	400c                	lw	a1,0(s0)
2001281c:	431c                	lw	a5,0(a4)
2001281e:	0805f813          	andi	a6,a1,128
20012822:	00478513          	addi	a0,a5,4
20012826:	00080563          	beqz	a6,20012830 <_printf_i+0x112>
2001282a:	c308                	sw	a0,0(a4)
2001282c:	439c                	lw	a5,0(a5)
2001282e:	a039                	j	2001283c <_printf_i+0x11e>
20012830:	0405f593          	andi	a1,a1,64
20012834:	c308                	sw	a0,0(a4)
20012836:	d9fd                	beqz	a1,2001282c <_printf_i+0x10e>
20012838:	0007d783          	lhu	a5,0(a5)
2001283c:	06f00713          	li	a4,111
20012840:	0ce68a63          	beq	a3,a4,20012914 <_printf_i+0x1f6>
20012844:	ffffe697          	auipc	a3,0xffffe
20012848:	d2868693          	addi	a3,a3,-728 # 2001056c <__sf_fake_stdout+0x34>
2001284c:	4729                	li	a4,10
2001284e:	040401a3          	sb	zero,67(s0)
20012852:	404c                	lw	a1,4(s0)
20012854:	c40c                	sw	a1,8(s0)
20012856:	0005c563          	bltz	a1,20012860 <_printf_i+0x142>
2001285a:	4008                	lw	a0,0(s0)
2001285c:	996d                	andi	a0,a0,-5
2001285e:	c008                	sw	a0,0(s0)
20012860:	e399                	bnez	a5,20012866 <_printf_i+0x148>
20012862:	8ab2                	mv	s5,a2
20012864:	cd91                	beqz	a1,20012880 <_printf_i+0x162>
20012866:	8ab2                	mv	s5,a2
20012868:	02e7f5b3          	remu	a1,a5,a4
2001286c:	1afd                	addi	s5,s5,-1
2001286e:	95b6                	add	a1,a1,a3
20012870:	0005c583          	lbu	a1,0(a1)
20012874:	00ba8023          	sb	a1,0(s5)
20012878:	02e7d5b3          	divu	a1,a5,a4
2001287c:	0ae7f263          	bgeu	a5,a4,20012920 <_printf_i+0x202>
20012880:	47a1                	li	a5,8
20012882:	00f71e63          	bne	a4,a5,2001289e <_printf_i+0x180>
20012886:	401c                	lw	a5,0(s0)
20012888:	8b85                	andi	a5,a5,1
2001288a:	cb91                	beqz	a5,2001289e <_printf_i+0x180>
2001288c:	4058                	lw	a4,4(s0)
2001288e:	481c                	lw	a5,16(s0)
20012890:	00e7c763          	blt	a5,a4,2001289e <_printf_i+0x180>
20012894:	03000793          	li	a5,48
20012898:	fefa8fa3          	sb	a5,-1(s5)
2001289c:	1afd                	addi	s5,s5,-1
2001289e:	41560633          	sub	a2,a2,s5
200128a2:	c810                	sw	a2,16(s0)
200128a4:	874e                	mv	a4,s3
200128a6:	86ca                	mv	a3,s2
200128a8:	0070                	addi	a2,sp,12
200128aa:	85a2                	mv	a1,s0
200128ac:	8526                	mv	a0,s1
200128ae:	3395                	jal	20012612 <_printf_common>
200128b0:	5a7d                	li	s4,-1
200128b2:	0d451463          	bne	a0,s4,2001297a <_printf_i+0x25c>
200128b6:	557d                	li	a0,-1
200128b8:	50b2                	lw	ra,44(sp)
200128ba:	5422                	lw	s0,40(sp)
200128bc:	5492                	lw	s1,36(sp)
200128be:	5902                	lw	s2,32(sp)
200128c0:	49f2                	lw	s3,28(sp)
200128c2:	4a62                	lw	s4,24(sp)
200128c4:	4ad2                	lw	s5,20(sp)
200128c6:	4b42                	lw	s6,16(sp)
200128c8:	6145                	addi	sp,sp,48
200128ca:	8082                	ret
200128cc:	04d582a3          	sb	a3,69(a1)
200128d0:	ffffe697          	auipc	a3,0xffffe
200128d4:	c9c68693          	addi	a3,a3,-868 # 2001056c <__sf_fake_stdout+0x34>
200128d8:	400c                	lw	a1,0(s0)
200128da:	4308                	lw	a0,0(a4)
200128dc:	0805f813          	andi	a6,a1,128
200128e0:	411c                	lw	a5,0(a0)
200128e2:	0511                	addi	a0,a0,4
200128e4:	02080063          	beqz	a6,20012904 <_printf_i+0x1e6>
200128e8:	c308                	sw	a0,0(a4)
200128ea:	0015f713          	andi	a4,a1,1
200128ee:	c701                	beqz	a4,200128f6 <_printf_i+0x1d8>
200128f0:	0205e593          	ori	a1,a1,32
200128f4:	c00c                	sw	a1,0(s0)
200128f6:	4741                	li	a4,16
200128f8:	fbb9                	bnez	a5,2001284e <_printf_i+0x130>
200128fa:	400c                	lw	a1,0(s0)
200128fc:	fdf5f593          	andi	a1,a1,-33
20012900:	c00c                	sw	a1,0(s0)
20012902:	b7b1                	j	2001284e <_printf_i+0x130>
20012904:	0405f813          	andi	a6,a1,64
20012908:	c308                	sw	a0,0(a4)
2001290a:	fe0800e3          	beqz	a6,200128ea <_printf_i+0x1cc>
2001290e:	07c2                	slli	a5,a5,0x10
20012910:	83c1                	srli	a5,a5,0x10
20012912:	bfe1                	j	200128ea <_printf_i+0x1cc>
20012914:	ffffe697          	auipc	a3,0xffffe
20012918:	c5868693          	addi	a3,a3,-936 # 2001056c <__sf_fake_stdout+0x34>
2001291c:	4721                	li	a4,8
2001291e:	bf05                	j	2001284e <_printf_i+0x130>
20012920:	87ae                	mv	a5,a1
20012922:	b799                	j	20012868 <_printf_i+0x14a>
20012924:	4194                	lw	a3,0(a1)
20012926:	431c                	lw	a5,0(a4)
20012928:	49cc                	lw	a1,20(a1)
2001292a:	0806f813          	andi	a6,a3,128
2001292e:	00478513          	addi	a0,a5,4
20012932:	00080663          	beqz	a6,2001293e <_printf_i+0x220>
20012936:	c308                	sw	a0,0(a4)
20012938:	439c                	lw	a5,0(a5)
2001293a:	c38c                	sw	a1,0(a5)
2001293c:	a801                	j	2001294c <_printf_i+0x22e>
2001293e:	c308                	sw	a0,0(a4)
20012940:	0406f693          	andi	a3,a3,64
20012944:	439c                	lw	a5,0(a5)
20012946:	daf5                	beqz	a3,2001293a <_printf_i+0x21c>
20012948:	00b79023          	sh	a1,0(a5)
2001294c:	00042823          	sw	zero,16(s0)
20012950:	8ab2                	mv	s5,a2
20012952:	bf89                	j	200128a4 <_printf_i+0x186>
20012954:	431c                	lw	a5,0(a4)
20012956:	41d0                	lw	a2,4(a1)
20012958:	4581                	li	a1,0
2001295a:	00478693          	addi	a3,a5,4
2001295e:	c314                	sw	a3,0(a4)
20012960:	0007aa83          	lw	s5,0(a5)
20012964:	8556                	mv	a0,s5
20012966:	3179                	jal	200125f4 <memchr>
20012968:	c501                	beqz	a0,20012970 <_printf_i+0x252>
2001296a:	41550533          	sub	a0,a0,s5
2001296e:	c048                	sw	a0,4(s0)
20012970:	405c                	lw	a5,4(s0)
20012972:	c81c                	sw	a5,16(s0)
20012974:	040401a3          	sb	zero,67(s0)
20012978:	b735                	j	200128a4 <_printf_i+0x186>
2001297a:	4814                	lw	a3,16(s0)
2001297c:	8656                	mv	a2,s5
2001297e:	85ca                	mv	a1,s2
20012980:	8526                	mv	a0,s1
20012982:	9982                	jalr	s3
20012984:	f34509e3          	beq	a0,s4,200128b6 <_printf_i+0x198>
20012988:	401c                	lw	a5,0(s0)
2001298a:	8b89                	andi	a5,a5,2
2001298c:	e78d                	bnez	a5,200129b6 <_printf_i+0x298>
2001298e:	47b2                	lw	a5,12(sp)
20012990:	4448                	lw	a0,12(s0)
20012992:	f2f553e3          	bge	a0,a5,200128b8 <_printf_i+0x19a>
20012996:	853e                	mv	a0,a5
20012998:	b705                	j	200128b8 <_printf_i+0x19a>
2001299a:	4685                	li	a3,1
2001299c:	8656                	mv	a2,s5
2001299e:	85ca                	mv	a1,s2
200129a0:	8526                	mv	a0,s1
200129a2:	9982                	jalr	s3
200129a4:	f16509e3          	beq	a0,s6,200128b6 <_printf_i+0x198>
200129a8:	0a05                	addi	s4,s4,1
200129aa:	445c                	lw	a5,12(s0)
200129ac:	4732                	lw	a4,12(sp)
200129ae:	8f99                	sub	a5,a5,a4
200129b0:	fefa45e3          	blt	s4,a5,2001299a <_printf_i+0x27c>
200129b4:	bfe9                	j	2001298e <_printf_i+0x270>
200129b6:	4a01                	li	s4,0
200129b8:	01940a93          	addi	s5,s0,25
200129bc:	5b7d                	li	s6,-1
200129be:	b7f5                	j	200129aa <_printf_i+0x28c>

200129c0 <_read_r>:
_read_r():
200129c0:	1141                	addi	sp,sp,-16
200129c2:	c422                	sw	s0,8(sp)
200129c4:	842a                	mv	s0,a0
200129c6:	852e                	mv	a0,a1
200129c8:	85b2                	mv	a1,a2
200129ca:	8636                	mv	a2,a3
200129cc:	8e01a823          	sw	zero,-1808(gp) # 80000bb0 <errno>
200129d0:	c606                	sw	ra,12(sp)
200129d2:	188060ef          	jal	ra,20018b5a <_read>
200129d6:	57fd                	li	a5,-1
200129d8:	00f51763          	bne	a0,a5,200129e6 <_read_r+0x26>
200129dc:	8f018793          	addi	a5,gp,-1808 # 80000bb0 <errno>
200129e0:	439c                	lw	a5,0(a5)
200129e2:	c391                	beqz	a5,200129e6 <_read_r+0x26>
200129e4:	c01c                	sw	a5,0(s0)
200129e6:	40b2                	lw	ra,12(sp)
200129e8:	4422                	lw	s0,8(sp)
200129ea:	0141                	addi	sp,sp,16
200129ec:	8082                	ret

200129ee <__divdf3>:
__divdf3():
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:36
200129ee:	7179                	addi	sp,sp,-48
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44
200129f0:	0145d813          	srli	a6,a1,0x14
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:36
200129f4:	d226                	sw	s1,36(sp)
200129f6:	ce4e                	sw	s3,28(sp)
200129f8:	cc52                	sw	s4,24(sp)
200129fa:	c85a                	sw	s6,16(sp)
200129fc:	c65e                	sw	s7,12(sp)
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44
200129fe:	00c59493          	slli	s1,a1,0xc
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:36
20012a02:	d606                	sw	ra,44(sp)
20012a04:	d422                	sw	s0,40(sp)
20012a06:	d04a                	sw	s2,32(sp)
20012a08:	ca56                	sw	s5,20(sp)
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44
20012a0a:	7ff87813          	andi	a6,a6,2047
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:36
20012a0e:	8b2a                	mv	s6,a0
20012a10:	8bb2                	mv	s7,a2
20012a12:	8a36                	mv	s4,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44
20012a14:	80b1                	srli	s1,s1,0xc
20012a16:	01f5d993          	srli	s3,a1,0x1f
20012a1a:	08080463          	beqz	a6,20012aa2 <__divdf3+0xb4>
20012a1e:	7ff00793          	li	a5,2047
20012a22:	0cf80a63          	beq	a6,a5,20012af6 <__divdf3+0x108>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 1)
20012a26:	01d55a93          	srli	s5,a0,0x1d
20012a2a:	048e                	slli	s1,s1,0x3
20012a2c:	009ae4b3          	or	s1,s5,s1
20012a30:	00800ab7          	lui	s5,0x800
20012a34:	0154eab3          	or	s5,s1,s5
20012a38:	00351413          	slli	s0,a0,0x3
20012a3c:	c0180913          	addi	s2,a6,-1023
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 37)
20012a40:	4b01                	li	s6,0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45
20012a42:	014a5513          	srli	a0,s4,0x14
20012a46:	00ca1493          	slli	s1,s4,0xc
20012a4a:	7ff57813          	andi	a6,a0,2047
20012a4e:	80b1                	srli	s1,s1,0xc
20012a50:	01fa5a13          	srli	s4,s4,0x1f
20012a54:	0c080463          	beqz	a6,20012b1c <__divdf3+0x12e>
20012a58:	7ff00793          	li	a5,2047
20012a5c:	10f80963          	beq	a6,a5,20012b6e <__divdf3+0x180>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 1)
20012a60:	00349513          	slli	a0,s1,0x3
20012a64:	01dbd793          	srli	a5,s7,0x1d
20012a68:	8d5d                	or	a0,a0,a5
20012a6a:	008004b7          	lui	s1,0x800
20012a6e:	8cc9                	or	s1,s1,a0
20012a70:	003b9f13          	slli	t5,s7,0x3
20012a74:	c0180513          	addi	a0,a6,-1023
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 37)
20012a78:	4781                	li	a5,0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46
20012a7a:	002b1713          	slli	a4,s6,0x2
20012a7e:	8f5d                	or	a4,a4,a5
20012a80:	177d                	addi	a4,a4,-1
20012a82:	46b9                	li	a3,14
20012a84:	0149c633          	xor	a2,s3,s4
20012a88:	40a90833          	sub	a6,s2,a0
20012a8c:	10e6e363          	bltu	a3,a4,20012b92 <__divdf3+0x1a4>
20012a90:	ffffe697          	auipc	a3,0xffffe
20012a94:	b0468693          	addi	a3,a3,-1276 # 20010594 <__sf_fake_stdout+0x5c>
20012a98:	070a                	slli	a4,a4,0x2
20012a9a:	9736                	add	a4,a4,a3
20012a9c:	4318                	lw	a4,0(a4)
20012a9e:	9736                	add	a4,a4,a3
20012aa0:	8702                	jr	a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 2)
20012aa2:	00a4eab3          	or	s5,s1,a0
20012aa6:	060a8263          	beqz	s5,20012b0a <__divdf3+0x11c>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 12)
20012aaa:	c89d                	beqz	s1,20012ae0 <__divdf3+0xf2>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 16)
20012aac:	8526                	mv	a0,s1
20012aae:	2cf000ef          	jal	ra,2001357c <__clzsi2>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 27)
20012ab2:	ff550793          	addi	a5,a0,-11
20012ab6:	4771                	li	a4,28
20012ab8:	02f74963          	blt	a4,a5,20012aea <__divdf3+0xfc>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 28)
20012abc:	4af5                	li	s5,29
20012abe:	ff850413          	addi	s0,a0,-8
20012ac2:	40fa8ab3          	sub	s5,s5,a5
20012ac6:	008494b3          	sll	s1,s1,s0
20012aca:	015b5ab3          	srl	s5,s6,s5
20012ace:	009aeab3          	or	s5,s5,s1
20012ad2:	008b1433          	sll	s0,s6,s0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 37)
20012ad6:	c0d00813          	li	a6,-1011
20012ada:	40a80933          	sub	s2,a6,a0
20012ade:	b78d                	j	20012a40 <__divdf3+0x52>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 20)
20012ae0:	29d000ef          	jal	ra,2001357c <__clzsi2>
20012ae4:	02050513          	addi	a0,a0,32
20012ae8:	b7e9                	j	20012ab2 <__divdf3+0xc4>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 29)
20012aea:	fd850493          	addi	s1,a0,-40
20012aee:	009b1ab3          	sll	s5,s6,s1
20012af2:	4401                	li	s0,0
20012af4:	b7cd                	j	20012ad6 <__divdf3+0xe8>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 3)
20012af6:	00a4eab3          	or	s5,s1,a0
20012afa:	000a8c63          	beqz	s5,20012b12 <__divdf3+0x124>
20012afe:	842a                	mv	s0,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44
20012b00:	8aa6                	mv	s5,s1
20012b02:	7ff00913          	li	s2,2047
20012b06:	4b0d                	li	s6,3
20012b08:	bf2d                	j	20012a42 <__divdf3+0x54>
20012b0a:	4401                	li	s0,0
20012b0c:	4901                	li	s2,0
20012b0e:	4b05                	li	s6,1
20012b10:	bf0d                	j	20012a42 <__divdf3+0x54>
20012b12:	4401                	li	s0,0
20012b14:	7ff00913          	li	s2,2047
20012b18:	4b09                	li	s6,2
20012b1a:	b725                	j	20012a42 <__divdf3+0x54>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 2)
20012b1c:	0174ef33          	or	t5,s1,s7
20012b20:	060f0063          	beqz	t5,20012b80 <__divdf3+0x192>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 12)
20012b24:	c88d                	beqz	s1,20012b56 <__divdf3+0x168>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 16)
20012b26:	8526                	mv	a0,s1
20012b28:	255000ef          	jal	ra,2001357c <__clzsi2>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 27)
20012b2c:	ff550793          	addi	a5,a0,-11
20012b30:	4771                	li	a4,28
20012b32:	02f74863          	blt	a4,a5,20012b62 <__divdf3+0x174>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 28)
20012b36:	4775                	li	a4,29
20012b38:	ff850f13          	addi	t5,a0,-8
20012b3c:	8f1d                	sub	a4,a4,a5
20012b3e:	01e494b3          	sll	s1,s1,t5
20012b42:	00ebd733          	srl	a4,s7,a4
20012b46:	8cd9                	or	s1,s1,a4
20012b48:	01eb9f33          	sll	t5,s7,t5
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 37)
20012b4c:	c0d00613          	li	a2,-1011
20012b50:	40a60533          	sub	a0,a2,a0
20012b54:	b715                	j	20012a78 <__divdf3+0x8a>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 20)
20012b56:	855e                	mv	a0,s7
20012b58:	225000ef          	jal	ra,2001357c <__clzsi2>
20012b5c:	02050513          	addi	a0,a0,32
20012b60:	b7f1                	j	20012b2c <__divdf3+0x13e>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 29)
20012b62:	fd850493          	addi	s1,a0,-40
20012b66:	009b94b3          	sll	s1,s7,s1
20012b6a:	4f01                	li	t5,0
20012b6c:	b7c5                	j	20012b4c <__divdf3+0x15e>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 3)
20012b6e:	0174ef33          	or	t5,s1,s7
20012b72:	000f0b63          	beqz	t5,20012b88 <__divdf3+0x19a>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45
20012b76:	8f5e                	mv	t5,s7
20012b78:	7ff00513          	li	a0,2047
20012b7c:	478d                	li	a5,3
20012b7e:	bdf5                	j	20012a7a <__divdf3+0x8c>
20012b80:	4481                	li	s1,0
20012b82:	4501                	li	a0,0
20012b84:	4785                	li	a5,1
20012b86:	bdd5                	j	20012a7a <__divdf3+0x8c>
20012b88:	4481                	li	s1,0
20012b8a:	7ff00513          	li	a0,2047
20012b8e:	4789                	li	a5,2
20012b90:	b5ed                	j	20012a7a <__divdf3+0x8c>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 2)
20012b92:	0154e663          	bltu	s1,s5,20012b9e <__divdf3+0x1b0>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 11)
20012b96:	2a9a9363          	bne	s5,s1,20012e3c <__divdf3+0x44e>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 12)
20012b9a:	2be46163          	bltu	s0,t5,20012e3c <__divdf3+0x44e>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 14)
20012b9e:	01fa9693          	slli	a3,s5,0x1f
20012ba2:	00145713          	srli	a4,s0,0x1
20012ba6:	01f41793          	slli	a5,s0,0x1f
20012baa:	001ada93          	srli	s5,s5,0x1
20012bae:	00e6e433          	or	s0,a3,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 19)
20012bb2:	00849513          	slli	a0,s1,0x8
20012bb6:	018f5493          	srli	s1,t5,0x18
20012bba:	8d45                	or	a0,a0,s1
20012bbc:	01055e13          	srli	t3,a0,0x10
20012bc0:	03cad8b3          	divu	a7,s5,t3
20012bc4:	01051313          	slli	t1,a0,0x10
20012bc8:	01035313          	srli	t1,t1,0x10
20012bcc:	01045713          	srli	a4,s0,0x10
20012bd0:	008f1593          	slli	a1,t5,0x8
20012bd4:	03caf4b3          	remu	s1,s5,t3
20012bd8:	8fc6                	mv	t6,a7
20012bda:	031306b3          	mul	a3,t1,a7
20012bde:	01049a93          	slli	s5,s1,0x10
20012be2:	01576733          	or	a4,a4,s5
20012be6:	00d77c63          	bgeu	a4,a3,20012bfe <__divdf3+0x210>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 22)
20012bea:	972a                	add	a4,a4,a0
20012bec:	fff88f93          	addi	t6,a7,-1
20012bf0:	00a76763          	bltu	a4,a0,20012bfe <__divdf3+0x210>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 24)
20012bf4:	00d77563          	bgeu	a4,a3,20012bfe <__divdf3+0x210>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 26)
20012bf8:	ffe88f93          	addi	t6,a7,-2
20012bfc:	972a                	add	a4,a4,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 28)
20012bfe:	8f15                	sub	a4,a4,a3
20012c00:	03c75eb3          	divu	t4,a4,t3
20012c04:	0442                	slli	s0,s0,0x10
20012c06:	8041                	srli	s0,s0,0x10
20012c08:	03c77733          	remu	a4,a4,t3
20012c0c:	86f6                	mv	a3,t4
20012c0e:	03d308b3          	mul	a7,t1,t4
20012c12:	0742                	slli	a4,a4,0x10
20012c14:	8f41                	or	a4,a4,s0
20012c16:	01177c63          	bgeu	a4,a7,20012c2e <__divdf3+0x240>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 29)
20012c1a:	972a                	add	a4,a4,a0
20012c1c:	fffe8693          	addi	a3,t4,-1
20012c20:	00a76763          	bltu	a4,a0,20012c2e <__divdf3+0x240>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 31)
20012c24:	01177563          	bgeu	a4,a7,20012c2e <__divdf3+0x240>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 33)
20012c28:	ffee8693          	addi	a3,t4,-2
20012c2c:	972a                	add	a4,a4,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 35)
20012c2e:	0fc2                	slli	t6,t6,0x10
20012c30:	00dfefb3          	or	t6,t6,a3
20012c34:	66c1                	lui	a3,0x10
20012c36:	41170433          	sub	s0,a4,a7
20012c3a:	fff68893          	addi	a7,a3,-1 # ffff <__heap_size+0xf7ff>
20012c3e:	010fdf13          	srli	t5,t6,0x10
20012c42:	011ff733          	and	a4,t6,a7
20012c46:	0105de93          	srli	t4,a1,0x10
20012c4a:	0115f8b3          	and	a7,a1,a7
20012c4e:	031703b3          	mul	t2,a4,a7
20012c52:	031f04b3          	mul	s1,t5,a7
20012c56:	02ee8733          	mul	a4,t4,a4
20012c5a:	03df02b3          	mul	t0,t5,t4
20012c5e:	00970f33          	add	t5,a4,s1
20012c62:	0103d713          	srli	a4,t2,0x10
20012c66:	977a                	add	a4,a4,t5
20012c68:	00977363          	bgeu	a4,s1,20012c6e <__divdf3+0x280>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 36)
20012c6c:	92b6                	add	t0,t0,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 38)
20012c6e:	01075f13          	srli	t5,a4,0x10
20012c72:	9f16                	add	t5,t5,t0
20012c74:	62c1                	lui	t0,0x10
20012c76:	12fd                	addi	t0,t0,-1
20012c78:	005776b3          	and	a3,a4,t0
20012c7c:	06c2                	slli	a3,a3,0x10
20012c7e:	0053f3b3          	and	t2,t2,t0
20012c82:	969e                	add	a3,a3,t2
20012c84:	01e46763          	bltu	s0,t5,20012c92 <__divdf3+0x2a4>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 40)
20012c88:	84fe                	mv	s1,t6
20012c8a:	03e41e63          	bne	s0,t5,20012cc6 <__divdf3+0x2d8>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 41)
20012c8e:	02d7fc63          	bgeu	a5,a3,20012cc6 <__divdf3+0x2d8>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 43)
20012c92:	97ae                	add	a5,a5,a1
20012c94:	00b7b733          	sltu	a4,a5,a1
20012c98:	972a                	add	a4,a4,a0
20012c9a:	943a                	add	s0,s0,a4
20012c9c:	ffff8493          	addi	s1,t6,-1
20012ca0:	00856663          	bltu	a0,s0,20012cac <__divdf3+0x2be>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 46)
20012ca4:	02851163          	bne	a0,s0,20012cc6 <__divdf3+0x2d8>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 47)
20012ca8:	00b7ef63          	bltu	a5,a1,20012cc6 <__divdf3+0x2d8>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 49)
20012cac:	01e46663          	bltu	s0,t5,20012cb8 <__divdf3+0x2ca>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 52)
20012cb0:	008f1b63          	bne	t5,s0,20012cc6 <__divdf3+0x2d8>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 53)
20012cb4:	00d7f963          	bgeu	a5,a3,20012cc6 <__divdf3+0x2d8>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 55)
20012cb8:	97ae                	add	a5,a5,a1
20012cba:	00b7b733          	sltu	a4,a5,a1
20012cbe:	972a                	add	a4,a4,a0
20012cc0:	ffef8493          	addi	s1,t6,-2
20012cc4:	943a                	add	s0,s0,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 57)
20012cc6:	40d786b3          	sub	a3,a5,a3
20012cca:	41e40433          	sub	s0,s0,t5
20012cce:	00d7b7b3          	sltu	a5,a5,a3
20012cd2:	8c1d                	sub	s0,s0,a5
20012cd4:	5f7d                	li	t5,-1
20012cd6:	0e850563          	beq	a0,s0,20012dc0 <__divdf3+0x3d2>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 59)
20012cda:	03c45f33          	divu	t5,s0,t3
20012cde:	0106d713          	srli	a4,a3,0x10
20012ce2:	03c47433          	remu	s0,s0,t3
20012ce6:	03e307b3          	mul	a5,t1,t5
20012cea:	0442                	slli	s0,s0,0x10
20012cec:	8c59                	or	s0,s0,a4
20012cee:	877a                	mv	a4,t5
20012cf0:	00f47c63          	bgeu	s0,a5,20012d08 <__divdf3+0x31a>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 61)
20012cf4:	942a                	add	s0,s0,a0
20012cf6:	ffff0713          	addi	a4,t5,-1
20012cfa:	00a46763          	bltu	s0,a0,20012d08 <__divdf3+0x31a>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 63)
20012cfe:	00f47563          	bgeu	s0,a5,20012d08 <__divdf3+0x31a>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 65)
20012d02:	ffef0713          	addi	a4,t5,-2
20012d06:	942a                	add	s0,s0,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 67)
20012d08:	8c1d                	sub	s0,s0,a5
20012d0a:	03c45f33          	divu	t5,s0,t3
20012d0e:	06c2                	slli	a3,a3,0x10
20012d10:	82c1                	srli	a3,a3,0x10
20012d12:	03c47433          	remu	s0,s0,t3
20012d16:	87fa                	mv	a5,t5
20012d18:	03e30333          	mul	t1,t1,t5
20012d1c:	0442                	slli	s0,s0,0x10
20012d1e:	8c55                	or	s0,s0,a3
20012d20:	00647c63          	bgeu	s0,t1,20012d38 <__divdf3+0x34a>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 68)
20012d24:	942a                	add	s0,s0,a0
20012d26:	ffff0793          	addi	a5,t5,-1
20012d2a:	00a46763          	bltu	s0,a0,20012d38 <__divdf3+0x34a>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 70)
20012d2e:	00647563          	bgeu	s0,t1,20012d38 <__divdf3+0x34a>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 72)
20012d32:	ffef0793          	addi	a5,t5,-2
20012d36:	942a                	add	s0,s0,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 74)
20012d38:	0742                	slli	a4,a4,0x10
20012d3a:	8f5d                	or	a4,a4,a5
20012d3c:	01071793          	slli	a5,a4,0x10
20012d40:	83c1                	srli	a5,a5,0x10
20012d42:	40640433          	sub	s0,s0,t1
20012d46:	01075313          	srli	t1,a4,0x10
20012d4a:	03178e33          	mul	t3,a5,a7
20012d4e:	031308b3          	mul	a7,t1,a7
20012d52:	026e8333          	mul	t1,t4,t1
20012d56:	02fe8eb3          	mul	t4,t4,a5
20012d5a:	010e5793          	srli	a5,t3,0x10
20012d5e:	9ec6                	add	t4,t4,a7
20012d60:	97f6                	add	a5,a5,t4
20012d62:	0117f463          	bgeu	a5,a7,20012d6a <__divdf3+0x37c>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 75)
20012d66:	66c1                	lui	a3,0x10
20012d68:	9336                	add	t1,t1,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 77)
20012d6a:	0107d893          	srli	a7,a5,0x10
20012d6e:	989a                	add	a7,a7,t1
20012d70:	6341                	lui	t1,0x10
20012d72:	137d                	addi	t1,t1,-1
20012d74:	0067f6b3          	and	a3,a5,t1
20012d78:	06c2                	slli	a3,a3,0x10
20012d7a:	006e7e33          	and	t3,t3,t1
20012d7e:	96f2                	add	a3,a3,t3
20012d80:	01146663          	bltu	s0,a7,20012d8c <__divdf3+0x39e>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 79)
20012d84:	19141e63          	bne	s0,a7,20012f20 <__divdf3+0x532>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 80)
20012d88:	8f3a                	mv	t5,a4
20012d8a:	ca9d                	beqz	a3,20012dc0 <__divdf3+0x3d2>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 82)
20012d8c:	942a                	add	s0,s0,a0
20012d8e:	fff70f13          	addi	t5,a4,-1
20012d92:	02a46163          	bltu	s0,a0,20012db4 <__divdf3+0x3c6>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 88)
20012d96:	01146663          	bltu	s0,a7,20012da2 <__divdf3+0x3b4>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 91)
20012d9a:	19141263          	bne	s0,a7,20012f1e <__divdf3+0x530>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 92)
20012d9e:	00d5fd63          	bgeu	a1,a3,20012db8 <__divdf3+0x3ca>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 94)
20012da2:	00159793          	slli	a5,a1,0x1
20012da6:	00b7b5b3          	sltu	a1,a5,a1
20012daa:	952e                	add	a0,a0,a1
20012dac:	ffe70f13          	addi	t5,a4,-2
20012db0:	942a                	add	s0,s0,a0
20012db2:	85be                	mv	a1,a5
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 96)
20012db4:	01141463          	bne	s0,a7,20012dbc <__divdf3+0x3ce>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 98)
20012db8:	00b68463          	beq	a3,a1,20012dc0 <__divdf3+0x3d2>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 99)
20012dbc:	001f6f13          	ori	t5,t5,1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 2)
20012dc0:	3ff80713          	addi	a4,a6,1023
20012dc4:	0ae05763          	blez	a4,20012e72 <__divdf3+0x484>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 6)
20012dc8:	007f7793          	andi	a5,t5,7
20012dcc:	cf81                	beqz	a5,20012de4 <__divdf3+0x3f6>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 8)
20012dce:	00ff7793          	andi	a5,t5,15
20012dd2:	4691                	li	a3,4
20012dd4:	00d78863          	beq	a5,a3,20012de4 <__divdf3+0x3f6>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 10)
20012dd8:	004f0693          	addi	a3,t5,4
20012ddc:	01e6bf33          	sltu	t5,a3,t5
20012de0:	94fa                	add	s1,s1,t5
20012de2:	8f36                	mv	t5,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 9)
20012de4:	00749793          	slli	a5,s1,0x7
20012de8:	0007d863          	bgez	a5,20012df8 <__divdf3+0x40a>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 24)
20012dec:	ff0007b7          	lui	a5,0xff000
20012df0:	17fd                	addi	a5,a5,-1
20012df2:	8cfd                	and	s1,s1,a5
20012df4:	40080713          	addi	a4,a6,1024
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 26)
20012df8:	7fe00793          	li	a5,2046
20012dfc:	10e7c863          	blt	a5,a4,20012f0c <__divdf3+0x51e>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47
20012e00:	003f5f13          	srli	t5,t5,0x3
20012e04:	01d49793          	slli	a5,s1,0x1d
20012e08:	01e7e7b3          	or	a5,a5,t5
20012e0c:	0034d513          	srli	a0,s1,0x3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 120)
20012e10:	0532                	slli	a0,a0,0xc
20012e12:	7ff77713          	andi	a4,a4,2047
20012e16:	0752                	slli	a4,a4,0x14
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:51 (discriminator 120)
20012e18:	50b2                	lw	ra,44(sp)
20012e1a:	5422                	lw	s0,40(sp)
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 120)
20012e1c:	8131                	srli	a0,a0,0xc
20012e1e:	8d59                	or	a0,a0,a4
20012e20:	067e                	slli	a2,a2,0x1f
20012e22:	00c56733          	or	a4,a0,a2
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:51 (discriminator 120)
20012e26:	5492                	lw	s1,36(sp)
20012e28:	5902                	lw	s2,32(sp)
20012e2a:	49f2                	lw	s3,28(sp)
20012e2c:	4a62                	lw	s4,24(sp)
20012e2e:	4ad2                	lw	s5,20(sp)
20012e30:	4b42                	lw	s6,16(sp)
20012e32:	4bb2                	lw	s7,12(sp)
20012e34:	853e                	mv	a0,a5
20012e36:	85ba                	mv	a1,a4
20012e38:	6145                	addi	sp,sp,48
20012e3a:	8082                	ret
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 15)
20012e3c:	187d                	addi	a6,a6,-1
20012e3e:	4781                	li	a5,0
20012e40:	bb8d                	j	20012bb2 <__divdf3+0x1c4>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:44 (discriminator 8)
20012e42:	864e                	mv	a2,s3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 8)
20012e44:	84d6                	mv	s1,s5
20012e46:	8f22                	mv	t5,s0
20012e48:	87da                	mv	a5,s6
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47
20012e4a:	4709                	li	a4,2
20012e4c:	0ce78063          	beq	a5,a4,20012f0c <__divdf3+0x51e>
20012e50:	470d                	li	a4,3
20012e52:	0ae78663          	beq	a5,a4,20012efe <__divdf3+0x510>
20012e56:	4705                	li	a4,1
20012e58:	f6e794e3          	bne	a5,a4,20012dc0 <__divdf3+0x3d2>
20012e5c:	4501                	li	a0,0
20012e5e:	4781                	li	a5,0
20012e60:	a885                	j	20012ed0 <__divdf3+0x4e2>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:45 (discriminator 5)
20012e62:	8652                	mv	a2,s4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46 (discriminator 5)
20012e64:	b7dd                	j	20012e4a <__divdf3+0x45c>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46
20012e66:	000804b7          	lui	s1,0x80
20012e6a:	4f01                	li	t5,0
20012e6c:	4601                	li	a2,0
20012e6e:	478d                	li	a5,3
20012e70:	bfe9                	j	20012e4a <__divdf3+0x45c>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 59)
20012e72:	4505                	li	a0,1
20012e74:	8d19                	sub	a0,a0,a4
20012e76:	03800793          	li	a5,56
20012e7a:	fea7c1e3          	blt	a5,a0,20012e5c <__divdf3+0x46e>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 60)
20012e7e:	47fd                	li	a5,31
20012e80:	04a7ca63          	blt	a5,a0,20012ed4 <__divdf3+0x4e6>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 62)
20012e84:	41e80813          	addi	a6,a6,1054
20012e88:	010497b3          	sll	a5,s1,a6
20012e8c:	00af5733          	srl	a4,t5,a0
20012e90:	010f1833          	sll	a6,t5,a6
20012e94:	8fd9                	or	a5,a5,a4
20012e96:	01003833          	snez	a6,a6
20012e9a:	0107e7b3          	or	a5,a5,a6
20012e9e:	00a4d533          	srl	a0,s1,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 75)
20012ea2:	0077f713          	andi	a4,a5,7
20012ea6:	cf01                	beqz	a4,20012ebe <__divdf3+0x4d0>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 76)
20012ea8:	00f7f713          	andi	a4,a5,15
20012eac:	4691                	li	a3,4
20012eae:	00d70863          	beq	a4,a3,20012ebe <__divdf3+0x4d0>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 78)
20012eb2:	00478713          	addi	a4,a5,4 # ff000004 <metal_segment_heap_target_end+0x7effe844>
20012eb6:	00f737b3          	sltu	a5,a4,a5
20012eba:	953e                	add	a0,a0,a5
20012ebc:	87ba                	mv	a5,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 77)
20012ebe:	00851713          	slli	a4,a0,0x8
20012ec2:	04074a63          	bltz	a4,20012f16 <__divdf3+0x528>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 93)
20012ec6:	01d51713          	slli	a4,a0,0x1d
20012eca:	838d                	srli	a5,a5,0x3
20012ecc:	8fd9                	or	a5,a5,a4
20012ece:	810d                	srli	a0,a0,0x3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47
20012ed0:	4701                	li	a4,0
20012ed2:	bf3d                	j	20012e10 <__divdf3+0x422>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 63)
20012ed4:	5785                	li	a5,-31
20012ed6:	8f99                	sub	a5,a5,a4
20012ed8:	02000693          	li	a3,32
20012edc:	00f4d7b3          	srl	a5,s1,a5
20012ee0:	4701                	li	a4,0
20012ee2:	00d50663          	beq	a0,a3,20012eee <__divdf3+0x500>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 71)
20012ee6:	43e80813          	addi	a6,a6,1086
20012eea:	01049733          	sll	a4,s1,a6
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47 (discriminator 74)
20012eee:	01e76f33          	or	t5,a4,t5
20012ef2:	01e03f33          	snez	t5,t5
20012ef6:	01e7e7b3          	or	a5,a5,t5
20012efa:	4501                	li	a0,0
20012efc:	b75d                	j	20012ea2 <__divdf3+0x4b4>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:47
20012efe:	00080537          	lui	a0,0x80
20012f02:	4781                	li	a5,0
20012f04:	7ff00713          	li	a4,2047
20012f08:	4601                	li	a2,0
20012f0a:	b719                	j	20012e10 <__divdf3+0x422>
20012f0c:	4501                	li	a0,0
20012f0e:	4781                	li	a5,0
20012f10:	7ff00713          	li	a4,2047
20012f14:	bdf5                	j	20012e10 <__divdf3+0x422>
20012f16:	4501                	li	a0,0
20012f18:	4781                	li	a5,0
20012f1a:	4705                	li	a4,1
20012f1c:	bdd5                	j	20012e10 <__divdf3+0x422>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/divdf3.c:46
20012f1e:	877a                	mv	a4,t5
20012f20:	8f3a                	mv	t5,a4
20012f22:	bd69                	j	20012dbc <__divdf3+0x3ce>

20012f24 <__muldf3>:
__muldf3():
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:36
20012f24:	7179                	addi	sp,sp,-48
20012f26:	ce4e                	sw	s3,28(sp)
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44
20012f28:	0145d993          	srli	s3,a1,0x14
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:36
20012f2c:	d422                	sw	s0,40(sp)
20012f2e:	d226                	sw	s1,36(sp)
20012f30:	cc52                	sw	s4,24(sp)
20012f32:	ca56                	sw	s5,20(sp)
20012f34:	c85a                	sw	s6,16(sp)
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44
20012f36:	00c59493          	slli	s1,a1,0xc
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:36
20012f3a:	d606                	sw	ra,44(sp)
20012f3c:	d04a                	sw	s2,32(sp)
20012f3e:	c65e                	sw	s7,12(sp)
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44
20012f40:	7ff9f993          	andi	s3,s3,2047
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:36
20012f44:	842a                	mv	s0,a0
20012f46:	8b32                	mv	s6,a2
20012f48:	8ab6                	mv	s5,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44
20012f4a:	80b1                	srli	s1,s1,0xc
20012f4c:	01f5da13          	srli	s4,a1,0x1f
20012f50:	08098163          	beqz	s3,20012fd2 <__muldf3+0xae>
20012f54:	7ff00793          	li	a5,2047
20012f58:	0cf98363          	beq	s3,a5,2001301e <__muldf3+0xfa>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 1)
20012f5c:	01d55793          	srli	a5,a0,0x1d
20012f60:	048e                	slli	s1,s1,0x3
20012f62:	8cdd                	or	s1,s1,a5
20012f64:	008007b7          	lui	a5,0x800
20012f68:	8cdd                	or	s1,s1,a5
20012f6a:	00351913          	slli	s2,a0,0x3
20012f6e:	c0198993          	addi	s3,s3,-1023
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 37)
20012f72:	4b81                	li	s7,0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45
20012f74:	014ad513          	srli	a0,s5,0x14
20012f78:	00ca9413          	slli	s0,s5,0xc
20012f7c:	7ff57513          	andi	a0,a0,2047
20012f80:	8031                	srli	s0,s0,0xc
20012f82:	01fada93          	srli	s5,s5,0x1f
20012f86:	cd55                	beqz	a0,20013042 <__muldf3+0x11e>
20012f88:	7ff00793          	li	a5,2047
20012f8c:	10f50163          	beq	a0,a5,2001308e <__muldf3+0x16a>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 1)
20012f90:	01db5793          	srli	a5,s6,0x1d
20012f94:	040e                	slli	s0,s0,0x3
20012f96:	8c5d                	or	s0,s0,a5
20012f98:	008007b7          	lui	a5,0x800
20012f9c:	8c5d                	or	s0,s0,a5
20012f9e:	c0150513          	addi	a0,a0,-1023 # 7fc01 <__heap_size+0x7f401>
20012fa2:	003b1793          	slli	a5,s6,0x3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 37)
20012fa6:	4701                	li	a4,0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46
20012fa8:	002b9693          	slli	a3,s7,0x2
20012fac:	8ed9                	or	a3,a3,a4
20012fae:	954e                	add	a0,a0,s3
20012fb0:	16fd                	addi	a3,a3,-1
20012fb2:	45b9                	li	a1,14
20012fb4:	015a4633          	xor	a2,s4,s5
20012fb8:	00150813          	addi	a6,a0,1
20012fbc:	0ed5ea63          	bltu	a1,a3,200130b0 <__muldf3+0x18c>
20012fc0:	ffffd597          	auipc	a1,0xffffd
20012fc4:	61058593          	addi	a1,a1,1552 # 200105d0 <__sf_fake_stdout+0x98>
20012fc8:	068a                	slli	a3,a3,0x2
20012fca:	96ae                	add	a3,a3,a1
20012fcc:	4294                	lw	a3,0(a3)
20012fce:	96ae                	add	a3,a3,a1
20012fd0:	8682                	jr	a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 2)
20012fd2:	00a4e933          	or	s2,s1,a0
20012fd6:	04090d63          	beqz	s2,20013030 <__muldf3+0x10c>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 12)
20012fda:	c885                	beqz	s1,2001300a <__muldf3+0xe6>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 16)
20012fdc:	8526                	mv	a0,s1
20012fde:	2b79                	jal	2001357c <__clzsi2>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 27)
20012fe0:	ff550713          	addi	a4,a0,-11
20012fe4:	47f1                	li	a5,28
20012fe6:	02e7c663          	blt	a5,a4,20013012 <__muldf3+0xee>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 28)
20012fea:	47f5                	li	a5,29
20012fec:	ff850913          	addi	s2,a0,-8
20012ff0:	8f99                	sub	a5,a5,a4
20012ff2:	012494b3          	sll	s1,s1,s2
20012ff6:	00f457b3          	srl	a5,s0,a5
20012ffa:	8cdd                	or	s1,s1,a5
20012ffc:	01241933          	sll	s2,s0,s2
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 37)
20013000:	c0d00993          	li	s3,-1011
20013004:	40a989b3          	sub	s3,s3,a0
20013008:	b7ad                	j	20012f72 <__muldf3+0x4e>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 20)
2001300a:	2b8d                	jal	2001357c <__clzsi2>
2001300c:	02050513          	addi	a0,a0,32
20013010:	bfc1                	j	20012fe0 <__muldf3+0xbc>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 29)
20013012:	fd850493          	addi	s1,a0,-40
20013016:	009414b3          	sll	s1,s0,s1
2001301a:	4901                	li	s2,0
2001301c:	b7d5                	j	20013000 <__muldf3+0xdc>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 3)
2001301e:	00a4e933          	or	s2,s1,a0
20013022:	00090b63          	beqz	s2,20013038 <__muldf3+0x114>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44
20013026:	892a                	mv	s2,a0
20013028:	7ff00993          	li	s3,2047
2001302c:	4b8d                	li	s7,3
2001302e:	b799                	j	20012f74 <__muldf3+0x50>
20013030:	4481                	li	s1,0
20013032:	4981                	li	s3,0
20013034:	4b85                	li	s7,1
20013036:	bf3d                	j	20012f74 <__muldf3+0x50>
20013038:	4481                	li	s1,0
2001303a:	7ff00993          	li	s3,2047
2001303e:	4b89                	li	s7,2
20013040:	bf15                	j	20012f74 <__muldf3+0x50>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 2)
20013042:	016467b3          	or	a5,s0,s6
20013046:	cfa1                	beqz	a5,2001309e <__muldf3+0x17a>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 12)
20013048:	c805                	beqz	s0,20013078 <__muldf3+0x154>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 16)
2001304a:	8522                	mv	a0,s0
2001304c:	2b05                	jal	2001357c <__clzsi2>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 27)
2001304e:	ff550693          	addi	a3,a0,-11
20013052:	47f1                	li	a5,28
20013054:	02d7c763          	blt	a5,a3,20013082 <__muldf3+0x15e>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 28)
20013058:	4775                	li	a4,29
2001305a:	ff850793          	addi	a5,a0,-8
2001305e:	8f15                	sub	a4,a4,a3
20013060:	00f41433          	sll	s0,s0,a5
20013064:	00eb5733          	srl	a4,s6,a4
20013068:	8c59                	or	s0,s0,a4
2001306a:	00fb17b3          	sll	a5,s6,a5
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 37)
2001306e:	c0d00713          	li	a4,-1011
20013072:	40a70533          	sub	a0,a4,a0
20013076:	bf05                	j	20012fa6 <__muldf3+0x82>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 20)
20013078:	855a                	mv	a0,s6
2001307a:	2309                	jal	2001357c <__clzsi2>
2001307c:	02050513          	addi	a0,a0,32
20013080:	b7f9                	j	2001304e <__muldf3+0x12a>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 29)
20013082:	fd850413          	addi	s0,a0,-40
20013086:	008b1433          	sll	s0,s6,s0
2001308a:	4781                	li	a5,0
2001308c:	b7cd                	j	2001306e <__muldf3+0x14a>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 3)
2001308e:	016467b3          	or	a5,s0,s6
20013092:	cb91                	beqz	a5,200130a6 <__muldf3+0x182>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45
20013094:	87da                	mv	a5,s6
20013096:	7ff00513          	li	a0,2047
2001309a:	470d                	li	a4,3
2001309c:	b731                	j	20012fa8 <__muldf3+0x84>
2001309e:	4401                	li	s0,0
200130a0:	4501                	li	a0,0
200130a2:	4705                	li	a4,1
200130a4:	b711                	j	20012fa8 <__muldf3+0x84>
200130a6:	4401                	li	s0,0
200130a8:	7ff00513          	li	a0,2047
200130ac:	4709                	li	a4,2
200130ae:	bded                	j	20012fa8 <__muldf3+0x84>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 2)
200130b0:	6f41                	lui	t5,0x10
200130b2:	ffff0e93          	addi	t4,t5,-1 # ffff <__heap_size+0xf7ff>
200130b6:	01095713          	srli	a4,s2,0x10
200130ba:	0107d893          	srli	a7,a5,0x10
200130be:	01d97933          	and	s2,s2,t4
200130c2:	01d7f7b3          	and	a5,a5,t4
200130c6:	032885b3          	mul	a1,a7,s2
200130ca:	032786b3          	mul	a3,a5,s2
200130ce:	02f70fb3          	mul	t6,a4,a5
200130d2:	01f58333          	add	t1,a1,t6
200130d6:	0106d593          	srli	a1,a3,0x10
200130da:	959a                	add	a1,a1,t1
200130dc:	03170e33          	mul	t3,a4,a7
200130e0:	01f5f363          	bgeu	a1,t6,200130e6 <__muldf3+0x1c2>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 9)
200130e4:	9e7a                	add	t3,t3,t5
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 11)
200130e6:	0105d393          	srli	t2,a1,0x10
200130ea:	01d5f5b3          	and	a1,a1,t4
200130ee:	01d6f6b3          	and	a3,a3,t4
200130f2:	01045f13          	srli	t5,s0,0x10
200130f6:	01d472b3          	and	t0,s0,t4
200130fa:	05c2                	slli	a1,a1,0x10
200130fc:	95b6                	add	a1,a1,a3
200130fe:	02570eb3          	mul	t4,a4,t0
20013102:	032286b3          	mul	a3,t0,s2
20013106:	032f0933          	mul	s2,t5,s2
2001310a:	01d90333          	add	t1,s2,t4
2001310e:	0106d913          	srli	s2,a3,0x10
20013112:	991a                	add	s2,s2,t1
20013114:	03e70733          	mul	a4,a4,t5
20013118:	01d97463          	bgeu	s2,t4,20013120 <__muldf3+0x1fc>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 12)
2001311c:	6341                	lui	t1,0x10
2001311e:	971a                	add	a4,a4,t1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 14)
20013120:	01095e93          	srli	t4,s2,0x10
20013124:	69c1                	lui	s3,0x10
20013126:	9eba                	add	t4,t4,a4
20013128:	fff98713          	addi	a4,s3,-1 # ffff <__heap_size+0xf7ff>
2001312c:	00e97933          	and	s2,s2,a4
20013130:	8ef9                	and	a3,a3,a4
20013132:	0104d413          	srli	s0,s1,0x10
20013136:	0942                	slli	s2,s2,0x10
20013138:	8cf9                	and	s1,s1,a4
2001313a:	9936                	add	s2,s2,a3
2001313c:	02978733          	mul	a4,a5,s1
20013140:	93ca                	add	t2,t2,s2
20013142:	02f40333          	mul	t1,s0,a5
20013146:	029886b3          	mul	a3,a7,s1
2001314a:	028887b3          	mul	a5,a7,s0
2001314e:	006688b3          	add	a7,a3,t1
20013152:	01075693          	srli	a3,a4,0x10
20013156:	96c6                	add	a3,a3,a7
20013158:	0066f363          	bgeu	a3,t1,2001315e <__muldf3+0x23a>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 15)
2001315c:	97ce                	add	a5,a5,s3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 17)
2001315e:	0106d893          	srli	a7,a3,0x10
20013162:	69c1                	lui	s3,0x10
20013164:	00f88fb3          	add	t6,a7,a5
20013168:	fff98793          	addi	a5,s3,-1 # ffff <__heap_size+0xf7ff>
2001316c:	8efd                	and	a3,a3,a5
2001316e:	8f7d                	and	a4,a4,a5
20013170:	029288b3          	mul	a7,t0,s1
20013174:	06c2                	slli	a3,a3,0x10
20013176:	96ba                	add	a3,a3,a4
20013178:	025407b3          	mul	a5,s0,t0
2001317c:	029f04b3          	mul	s1,t5,s1
20013180:	028f0333          	mul	t1,t5,s0
20013184:	94be                	add	s1,s1,a5
20013186:	0108d413          	srli	s0,a7,0x10
2001318a:	94a2                	add	s1,s1,s0
2001318c:	00f4f363          	bgeu	s1,a5,20013192 <__muldf3+0x26e>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 18)
20013190:	934e                	add	t1,t1,s3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 20)
20013192:	67c1                	lui	a5,0x10
20013194:	17fd                	addi	a5,a5,-1
20013196:	00f4f733          	and	a4,s1,a5
2001319a:	00f8f8b3          	and	a7,a7,a5
2001319e:	0742                	slli	a4,a4,0x10
200131a0:	9e1e                	add	t3,t3,t2
200131a2:	9746                	add	a4,a4,a7
200131a4:	012e3933          	sltu	s2,t3,s2
200131a8:	9776                	add	a4,a4,t4
200131aa:	01270433          	add	s0,a4,s2
200131ae:	9e36                	add	t3,t3,a3
200131b0:	00de36b3          	sltu	a3,t3,a3
200131b4:	01f408b3          	add	a7,s0,t6
200131b8:	00d88f33          	add	t5,a7,a3
200131bc:	01d73733          	sltu	a4,a4,t4
200131c0:	01243433          	sltu	s0,s0,s2
200131c4:	8c59                	or	s0,s0,a4
200131c6:	80c1                	srli	s1,s1,0x10
200131c8:	01f8b8b3          	sltu	a7,a7,t6
200131cc:	00df36b3          	sltu	a3,t5,a3
200131d0:	9426                	add	s0,s0,s1
200131d2:	00d8e6b3          	or	a3,a7,a3
200131d6:	9436                	add	s0,s0,a3
200131d8:	941a                	add	s0,s0,t1
200131da:	017f5793          	srli	a5,t5,0x17
200131de:	0426                	slli	s0,s0,0x9
200131e0:	8c5d                	or	s0,s0,a5
200131e2:	009e1793          	slli	a5,t3,0x9
200131e6:	8fcd                	or	a5,a5,a1
200131e8:	00f037b3          	snez	a5,a5
200131ec:	017e5e13          	srli	t3,t3,0x17
200131f0:	009f1713          	slli	a4,t5,0x9
200131f4:	01c7e7b3          	or	a5,a5,t3
200131f8:	8fd9                	or	a5,a5,a4
200131fa:	00741713          	slli	a4,s0,0x7
200131fe:	0a075863          	bgez	a4,200132ae <__muldf3+0x38a>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 38)
20013202:	0017d713          	srli	a4,a5,0x1
20013206:	8b85                	andi	a5,a5,1
20013208:	8fd9                	or	a5,a5,a4
2001320a:	01f41713          	slli	a4,s0,0x1f
2001320e:	8fd9                	or	a5,a5,a4
20013210:	8005                	srli	s0,s0,0x1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 2)
20013212:	3ff80693          	addi	a3,a6,1023
20013216:	08d05e63          	blez	a3,200132b2 <__muldf3+0x38e>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 6)
2001321a:	0077f713          	andi	a4,a5,7
2001321e:	cf01                	beqz	a4,20013236 <__muldf3+0x312>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 8)
20013220:	00f7f713          	andi	a4,a5,15
20013224:	4591                	li	a1,4
20013226:	00b70863          	beq	a4,a1,20013236 <__muldf3+0x312>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 10)
2001322a:	00478713          	addi	a4,a5,4 # 10004 <__heap_size+0xf804>
2001322e:	00f737b3          	sltu	a5,a4,a5
20013232:	943e                	add	s0,s0,a5
20013234:	87ba                	mv	a5,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 9)
20013236:	00741713          	slli	a4,s0,0x7
2001323a:	00075863          	bgez	a4,2001324a <__muldf3+0x326>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 24)
2001323e:	ff000737          	lui	a4,0xff000
20013242:	177d                	addi	a4,a4,-1
20013244:	8c79                	and	s0,s0,a4
20013246:	40080693          	addi	a3,a6,1024
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 26)
2001324a:	7fe00713          	li	a4,2046
2001324e:	0ed74c63          	blt	a4,a3,20013346 <__muldf3+0x422>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47
20013252:	0037d713          	srli	a4,a5,0x3
20013256:	01d41793          	slli	a5,s0,0x1d
2001325a:	8fd9                	or	a5,a5,a4
2001325c:	800d                	srli	s0,s0,0x3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 120)
2001325e:	0432                	slli	s0,s0,0xc
20013260:	7ff6f713          	andi	a4,a3,2047
20013264:	0752                	slli	a4,a4,0x14
20013266:	8031                	srli	s0,s0,0xc
20013268:	8c59                	or	s0,s0,a4
2001326a:	067e                	slli	a2,a2,0x1f
2001326c:	00c46733          	or	a4,s0,a2
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:51 (discriminator 120)
20013270:	50b2                	lw	ra,44(sp)
20013272:	5422                	lw	s0,40(sp)
20013274:	5492                	lw	s1,36(sp)
20013276:	5902                	lw	s2,32(sp)
20013278:	49f2                	lw	s3,28(sp)
2001327a:	4a62                	lw	s4,24(sp)
2001327c:	4ad2                	lw	s5,20(sp)
2001327e:	4b42                	lw	s6,16(sp)
20013280:	4bb2                	lw	s7,12(sp)
20013282:	853e                	mv	a0,a5
20013284:	85ba                	mv	a1,a4
20013286:	6145                	addi	sp,sp,48
20013288:	8082                	ret
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:44 (discriminator 7)
2001328a:	8652                	mv	a2,s4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 7)
2001328c:	8426                	mv	s0,s1
2001328e:	87ca                	mv	a5,s2
20013290:	875e                	mv	a4,s7
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47
20013292:	4689                	li	a3,2
20013294:	0ad70963          	beq	a4,a3,20013346 <__muldf3+0x422>
20013298:	468d                	li	a3,3
2001329a:	08d70f63          	beq	a4,a3,20013338 <__muldf3+0x414>
2001329e:	4685                	li	a3,1
200132a0:	f6d719e3          	bne	a4,a3,20013212 <__muldf3+0x2ee>
200132a4:	4401                	li	s0,0
200132a6:	4781                	li	a5,0
200132a8:	a09d                	j	2001330e <__muldf3+0x3ea>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:45 (discriminator 4)
200132aa:	8656                	mv	a2,s5
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46 (discriminator 4)
200132ac:	b7dd                	j	20013292 <__muldf3+0x36e>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:46
200132ae:	882a                	mv	a6,a0
200132b0:	b78d                	j	20013212 <__muldf3+0x2ee>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 59)
200132b2:	4585                	li	a1,1
200132b4:	8d95                	sub	a1,a1,a3
200132b6:	03800713          	li	a4,56
200132ba:	feb745e3          	blt	a4,a1,200132a4 <__muldf3+0x380>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 60)
200132be:	477d                	li	a4,31
200132c0:	04b74963          	blt	a4,a1,20013312 <__muldf3+0x3ee>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 62)
200132c4:	41e80813          	addi	a6,a6,1054
200132c8:	01041733          	sll	a4,s0,a6
200132cc:	00b7d6b3          	srl	a3,a5,a1
200132d0:	010797b3          	sll	a5,a5,a6
200132d4:	8f55                	or	a4,a4,a3
200132d6:	00f037b3          	snez	a5,a5
200132da:	8fd9                	or	a5,a5,a4
200132dc:	00b45433          	srl	s0,s0,a1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 75)
200132e0:	0077f713          	andi	a4,a5,7
200132e4:	cf01                	beqz	a4,200132fc <__muldf3+0x3d8>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 76)
200132e6:	00f7f713          	andi	a4,a5,15
200132ea:	4691                	li	a3,4
200132ec:	00d70863          	beq	a4,a3,200132fc <__muldf3+0x3d8>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 78)
200132f0:	00478713          	addi	a4,a5,4
200132f4:	00f737b3          	sltu	a5,a4,a5
200132f8:	943e                	add	s0,s0,a5
200132fa:	87ba                	mv	a5,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 77)
200132fc:	00841713          	slli	a4,s0,0x8
20013300:	04074863          	bltz	a4,20013350 <__muldf3+0x42c>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 93)
20013304:	01d41713          	slli	a4,s0,0x1d
20013308:	838d                	srli	a5,a5,0x3
2001330a:	8fd9                	or	a5,a5,a4
2001330c:	800d                	srli	s0,s0,0x3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47
2001330e:	4681                	li	a3,0
20013310:	b7b9                	j	2001325e <__muldf3+0x33a>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 63)
20013312:	5705                	li	a4,-31
20013314:	8f15                	sub	a4,a4,a3
20013316:	02000513          	li	a0,32
2001331a:	00e45733          	srl	a4,s0,a4
2001331e:	4681                	li	a3,0
20013320:	00a58663          	beq	a1,a0,2001332c <__muldf3+0x408>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 71)
20013324:	43e80813          	addi	a6,a6,1086
20013328:	010416b3          	sll	a3,s0,a6
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47 (discriminator 74)
2001332c:	8fd5                	or	a5,a5,a3
2001332e:	00f037b3          	snez	a5,a5
20013332:	8fd9                	or	a5,a5,a4
20013334:	4401                	li	s0,0
20013336:	b76d                	j	200132e0 <__muldf3+0x3bc>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/muldf3.c:47
20013338:	00080437          	lui	s0,0x80
2001333c:	4781                	li	a5,0
2001333e:	7ff00693          	li	a3,2047
20013342:	4601                	li	a2,0
20013344:	bf29                	j	2001325e <__muldf3+0x33a>
20013346:	4401                	li	s0,0
20013348:	4781                	li	a5,0
2001334a:	7ff00693          	li	a3,2047
2001334e:	bf01                	j	2001325e <__muldf3+0x33a>
20013350:	4401                	li	s0,0
20013352:	4781                	li	a5,0
20013354:	4685                	li	a3,1
20013356:	b721                	j	2001325e <__muldf3+0x33a>

20013358 <__floatsidf>:
__floatsidf():
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:37
20013358:	1141                	addi	sp,sp,-16
2001335a:	c606                	sw	ra,12(sp)
2001335c:	c422                	sw	s0,8(sp)
2001335e:	c226                	sw	s1,4(sp)
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:41
20013360:	cd31                	beqz	a0,200133bc <__floatsidf+0x64>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:41 (discriminator 1)
20013362:	41f55793          	srai	a5,a0,0x1f
20013366:	00a7c433          	xor	s0,a5,a0
2001336a:	8c1d                	sub	s0,s0,a5
2001336c:	01f55493          	srli	s1,a0,0x1f
20013370:	8522                	mv	a0,s0
20013372:	2429                	jal	2001357c <__clzsi2>
20013374:	41e00713          	li	a4,1054
20013378:	47a9                	li	a5,10
2001337a:	8f09                	sub	a4,a4,a0
2001337c:	02a7ca63          	blt	a5,a0,200133b0 <__floatsidf+0x58>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:41 (discriminator 23)
20013380:	47ad                	li	a5,11
20013382:	8f89                	sub	a5,a5,a0
20013384:	0555                	addi	a0,a0,21
20013386:	00f457b3          	srl	a5,s0,a5
2001338a:	00a41433          	sll	s0,s0,a0
2001338e:	8526                	mv	a0,s1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:42
20013390:	07b2                	slli	a5,a5,0xc
20013392:	7ff77713          	andi	a4,a4,2047
20013396:	0752                	slli	a4,a4,0x14
20013398:	83b1                	srli	a5,a5,0xc
2001339a:	057e                	slli	a0,a0,0x1f
2001339c:	8fd9                	or	a5,a5,a4
2001339e:	00a7e733          	or	a4,a5,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:45
200133a2:	40b2                	lw	ra,12(sp)
200133a4:	8522                	mv	a0,s0
200133a6:	4422                	lw	s0,8(sp)
200133a8:	4492                	lw	s1,4(sp)
200133aa:	85ba                	mv	a1,a4
200133ac:	0141                	addi	sp,sp,16
200133ae:	8082                	ret
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:41 (discriminator 24)
200133b0:	1555                	addi	a0,a0,-11
200133b2:	00a417b3          	sll	a5,s0,a0
200133b6:	8526                	mv	a0,s1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/floatsidf.c:41
200133b8:	4401                	li	s0,0
200133ba:	bfd9                	j	20013390 <__floatsidf+0x38>
200133bc:	4701                	li	a4,0
200133be:	4781                	li	a5,0
200133c0:	bfe5                	j	200133b8 <__floatsidf+0x60>

200133c2 <__extendsfdf2>:
__extendsfdf2():
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:45
200133c2:	01755793          	srli	a5,a0,0x17
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:38
200133c6:	1141                	addi	sp,sp,-16
200133c8:	0ff7f793          	andi	a5,a5,255
200133cc:	c422                	sw	s0,8(sp)
200133ce:	c226                	sw	s1,4(sp)
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:45
200133d0:	00951413          	slli	s0,a0,0x9
200133d4:	01f55493          	srli	s1,a0,0x1f
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:47
200133d8:	00178513          	addi	a0,a5,1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:38
200133dc:	c606                	sw	ra,12(sp)
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:47
200133de:	0fe57513          	andi	a0,a0,254
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:45
200133e2:	8025                	srli	s0,s0,0x9
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:47
200133e4:	c515                	beqz	a0,20013410 <__extendsfdf2+0x4e>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:47 (discriminator 1)
200133e6:	38078513          	addi	a0,a5,896
200133ea:	00345793          	srli	a5,s0,0x3
200133ee:	0476                	slli	s0,s0,0x1d
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:51
200133f0:	07b2                	slli	a5,a5,0xc
200133f2:	7ff57513          	andi	a0,a0,2047
200133f6:	0552                	slli	a0,a0,0x14
200133f8:	83b1                	srli	a5,a5,0xc
200133fa:	8fc9                	or	a5,a5,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:55
200133fc:	40b2                	lw	ra,12(sp)
200133fe:	8522                	mv	a0,s0
20013400:	4422                	lw	s0,8(sp)
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:51
20013402:	04fe                	slli	s1,s1,0x1f
20013404:	0097e733          	or	a4,a5,s1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:55
20013408:	85ba                	mv	a1,a4
2001340a:	4492                	lw	s1,4(sp)
2001340c:	0141                	addi	sp,sp,16
2001340e:	8082                	ret
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:47 (discriminator 2)
20013410:	eb95                	bnez	a5,20013444 <__extendsfdf2+0x82>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:47 (discriminator 11)
20013412:	dc79                	beqz	s0,200133f0 <__extendsfdf2+0x2e>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:47 (discriminator 15)
20013414:	8522                	mv	a0,s0
20013416:	229d                	jal	2001357c <__clzsi2>
20013418:	47a9                	li	a5,10
2001341a:	00a7cf63          	blt	a5,a0,20013438 <__extendsfdf2+0x76>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:47 (discriminator 28)
2001341e:	47ad                	li	a5,11
20013420:	8f89                	sub	a5,a5,a0
20013422:	01550713          	addi	a4,a0,21
20013426:	00f457b3          	srl	a5,s0,a5
2001342a:	00e41433          	sll	s0,s0,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:47 (discriminator 37)
2001342e:	38900713          	li	a4,905
20013432:	40a70533          	sub	a0,a4,a0
20013436:	bf6d                	j	200133f0 <__extendsfdf2+0x2e>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:47 (discriminator 29)
20013438:	ff550793          	addi	a5,a0,-11
2001343c:	00f417b3          	sll	a5,s0,a5
20013440:	4401                	li	s0,0
20013442:	b7f5                	j	2001342e <__extendsfdf2+0x6c>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:47 (discriminator 8)
20013444:	4781                	li	a5,0
20013446:	c419                	beqz	s0,20013454 <__extendsfdf2+0x92>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:47 (discriminator 38)
20013448:	00345793          	srli	a5,s0,0x3
2001344c:	00080737          	lui	a4,0x80
20013450:	0476                	slli	s0,s0,0x1d
20013452:	8fd9                	or	a5,a5,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/extendsfdf2.c:47
20013454:	7ff00513          	li	a0,2047
20013458:	bf61                	j	200133f0 <__extendsfdf2+0x2e>

2001345a <__truncdfsf2>:
__truncdfsf2():
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/truncdfsf2.c:44
2001345a:	00c59613          	slli	a2,a1,0xc
2001345e:	8231                	srli	a2,a2,0xc
20013460:	0145d813          	srli	a6,a1,0x14
20013464:	00361793          	slli	a5,a2,0x3
20013468:	7ff87813          	andi	a6,a6,2047
2001346c:	01d55613          	srli	a2,a0,0x1d
20013470:	8e5d                	or	a2,a2,a5
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/truncdfsf2.c:46
20013472:	00180793          	addi	a5,a6,1
20013476:	7fe7f793          	andi	a5,a5,2046
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/truncdfsf2.c:44
2001347a:	81fd                	srli	a1,a1,0x1f
2001347c:	00351713          	slli	a4,a0,0x3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/truncdfsf2.c:46
20013480:	c3d1                	beqz	a5,20013504 <__truncdfsf2+0xaa>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/truncdfsf2.c:46 (discriminator 1)
20013482:	c8080693          	addi	a3,a6,-896
20013486:	0fe00793          	li	a5,254
2001348a:	08d7cb63          	blt	a5,a3,20013520 <__truncdfsf2+0xc6>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/truncdfsf2.c:46 (discriminator 4)
2001348e:	06d04263          	bgtz	a3,200134f2 <__truncdfsf2+0x98>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/truncdfsf2.c:46 (discriminator 17)
20013492:	57a5                	li	a5,-23
20013494:	0cf6c963          	blt	a3,a5,20013566 <__truncdfsf2+0x10c>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/truncdfsf2.c:46 (discriminator 20)
20013498:	008007b7          	lui	a5,0x800
2001349c:	4579                	li	a0,30
2001349e:	8e5d                	or	a2,a2,a5
200134a0:	8d15                	sub	a0,a0,a3
200134a2:	47fd                	li	a5,31
200134a4:	02a7c363          	blt	a5,a0,200134ca <__truncdfsf2+0x70>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/truncdfsf2.c:46 (discriminator 22)
200134a8:	c8280813          	addi	a6,a6,-894
200134ac:	010717b3          	sll	a5,a4,a6
200134b0:	00f037b3          	snez	a5,a5
200134b4:	01061633          	sll	a2,a2,a6
200134b8:	00a75533          	srl	a0,a4,a0
200134bc:	8fd1                	or	a5,a5,a2
200134be:	8fc9                	or	a5,a5,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/truncdfsf2.c:46 (discriminator 42)
200134c0:	4681                	li	a3,0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/truncdfsf2.c:50
200134c2:	0077f713          	andi	a4,a5,7
200134c6:	c325                	beqz	a4,20013526 <__truncdfsf2+0xcc>
200134c8:	a04d                	j	2001356a <__truncdfsf2+0x110>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/truncdfsf2.c:46 (discriminator 23)
200134ca:	57f9                	li	a5,-2
200134cc:	40d786b3          	sub	a3,a5,a3
200134d0:	02000793          	li	a5,32
200134d4:	00d656b3          	srl	a3,a2,a3
200134d8:	4881                	li	a7,0
200134da:	00f50663          	beq	a0,a5,200134e6 <__truncdfsf2+0x8c>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/truncdfsf2.c:46 (discriminator 31)
200134de:	ca280813          	addi	a6,a6,-862
200134e2:	010618b3          	sll	a7,a2,a6
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/truncdfsf2.c:46 (discriminator 34)
200134e6:	00e8e7b3          	or	a5,a7,a4
200134ea:	00f037b3          	snez	a5,a5
200134ee:	8fd5                	or	a5,a5,a3
200134f0:	bfc1                	j	200134c0 <__truncdfsf2+0x66>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/truncdfsf2.c:46 (discriminator 18)
200134f2:	051a                	slli	a0,a0,0x6
200134f4:	00a03533          	snez	a0,a0
200134f8:	060e                	slli	a2,a2,0x3
200134fa:	01d75793          	srli	a5,a4,0x1d
200134fe:	8e49                	or	a2,a2,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/truncdfsf2.c:46 (discriminator 55)
20013500:	8fd1                	or	a5,a5,a2
20013502:	b7c1                	j	200134c2 <__truncdfsf2+0x68>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/truncdfsf2.c:46 (discriminator 2)
20013504:	00e667b3          	or	a5,a2,a4
20013508:	00081563          	bnez	a6,20013512 <__truncdfsf2+0xb8>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/truncdfsf2.c:46 (discriminator 42)
2001350c:	00f037b3          	snez	a5,a5
20013510:	bf45                	j	200134c0 <__truncdfsf2+0x66>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/truncdfsf2.c:46 (discriminator 39)
20013512:	0ff00693          	li	a3,255
20013516:	cb81                	beqz	a5,20013526 <__truncdfsf2+0xcc>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/truncdfsf2.c:46 (discriminator 55)
20013518:	060e                	slli	a2,a2,0x3
2001351a:	020007b7          	lui	a5,0x2000
2001351e:	b7cd                	j	20013500 <__truncdfsf2+0xa6>
20013520:	4781                	li	a5,0
20013522:	0ff00693          	li	a3,255
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/truncdfsf2.c:50 (discriminator 47)
20013526:	00579713          	slli	a4,a5,0x5
2001352a:	00075b63          	bgez	a4,20013540 <__truncdfsf2+0xe6>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/truncdfsf2.c:50 (discriminator 63)
2001352e:	0685                	addi	a3,a3,1
20013530:	0ff00713          	li	a4,255
20013534:	04e68263          	beq	a3,a4,20013578 <__truncdfsf2+0x11e>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/truncdfsf2.c:50
20013538:	fc000737          	lui	a4,0xfc000
2001353c:	177d                	addi	a4,a4,-1
2001353e:	8ff9                	and	a5,a5,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/truncdfsf2.c:50 (discriminator 79)
20013540:	0ff00713          	li	a4,255
20013544:	838d                	srli	a5,a5,0x3
20013546:	00e69663          	bne	a3,a4,20013552 <__truncdfsf2+0xf8>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/truncdfsf2.c:50 (discriminator 80)
2001354a:	c781                	beqz	a5,20013552 <__truncdfsf2+0xf8>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/truncdfsf2.c:50
2001354c:	004007b7          	lui	a5,0x400
20013550:	4581                	li	a1,0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/truncdfsf2.c:50 (discriminator 90)
20013552:	07a6                	slli	a5,a5,0x9
20013554:	0ff6f693          	andi	a3,a3,255
20013558:	06de                	slli	a3,a3,0x17
2001355a:	83a5                	srli	a5,a5,0x9
2001355c:	05fe                	slli	a1,a1,0x1f
2001355e:	8fd5                	or	a5,a5,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/truncdfsf2.c:54 (discriminator 90)
20013560:	00b7e533          	or	a0,a5,a1
20013564:	8082                	ret
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/truncdfsf2.c:46
20013566:	4785                	li	a5,1
20013568:	4681                	li	a3,0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/truncdfsf2.c:50 (discriminator 37)
2001356a:	00f7f713          	andi	a4,a5,15
2001356e:	4611                	li	a2,4
20013570:	fac70be3          	beq	a4,a2,20013526 <__truncdfsf2+0xcc>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/soft-fp/truncdfsf2.c:50 (discriminator 44)
20013574:	0791                	addi	a5,a5,4
20013576:	bf45                	j	20013526 <__truncdfsf2+0xcc>
20013578:	4781                	li	a5,0
2001357a:	b7d9                	j	20013540 <__truncdfsf2+0xe6>

2001357c <__clzsi2>:
__clzsi2():
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:710
2001357c:	67c1                	lui	a5,0x10
2001357e:	02f57663          	bgeu	a0,a5,200135aa <__clzsi2+0x2e>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:710 (discriminator 3)
20013582:	0ff00793          	li	a5,255
20013586:	00a7b7b3          	sltu	a5,a5,a0
2001358a:	078e                	slli	a5,a5,0x3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:710 (discriminator 14)
2001358c:	02000713          	li	a4,32
20013590:	8f1d                	sub	a4,a4,a5
20013592:	00f557b3          	srl	a5,a0,a5
20013596:	ffffd517          	auipc	a0,0xffffd
2001359a:	07650513          	addi	a0,a0,118 # 2001060c <__clz_tab>
2001359e:	97aa                	add	a5,a5,a0
200135a0:	0007c503          	lbu	a0,0(a5) # 10000 <__heap_size+0xf800>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:713 (discriminator 14)
200135a4:	40a70533          	sub	a0,a4,a0
200135a8:	8082                	ret
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:710 (discriminator 4)
200135aa:	01000737          	lui	a4,0x1000
200135ae:	47c1                	li	a5,16
200135b0:	fce56ee3          	bltu	a0,a4,2001358c <__clzsi2+0x10>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:710
200135b4:	47e1                	li	a5,24
200135b6:	bfd9                	j	2001358c <__clzsi2+0x10>

200135b8 <__metal_driver_sifive_clint0_control_base>:
__metal_driver_sifive_clint0_control_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:233
/* --------------------- fixed_factor_clock ------------ */


/* --------------------- sifive_clint0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_clint0_control_base(struct metal_interrupt *controller)
{
200135b8:	1101                	addi	sp,sp,-32
200135ba:	ce22                	sw	s0,28(sp)
200135bc:	1000                	addi	s0,sp,32
200135be:	fea42623          	sw	a0,-20(s0) # 7ffec <__heap_size+0x7f7ec>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:234
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
200135c2:	fec42703          	lw	a4,-20(s0)
200135c6:	81018793          	addi	a5,gp,-2032 # 80000ad0 <__metal_dt_clint_2000000>
200135ca:	00f71563          	bne	a4,a5,200135d4 <__metal_driver_sifive_clint0_control_base+0x1c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:235
		return METAL_RISCV_CLINT0_2000000_BASE_ADDRESS;
200135ce:	020007b7          	lui	a5,0x2000
200135d2:	a011                	j	200135d6 <__metal_driver_sifive_clint0_control_base+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:238
	}
	else {
		return 0;
200135d4:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:240
	}
}
200135d6:	853e                	mv	a0,a5
200135d8:	4472                	lw	s0,28(sp)
200135da:	6105                	addi	sp,sp,32
200135dc:	8082                	ret

200135de <__metal_driver_sifive_clint0_num_interrupts>:
__metal_driver_sifive_clint0_num_interrupts():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:253
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_clint0_num_interrupts(struct metal_interrupt *controller)
{
200135de:	1101                	addi	sp,sp,-32
200135e0:	ce22                	sw	s0,28(sp)
200135e2:	1000                	addi	s0,sp,32
200135e4:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:254
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
200135e8:	fec42703          	lw	a4,-20(s0)
200135ec:	81018793          	addi	a5,gp,-2032 # 80000ad0 <__metal_dt_clint_2000000>
200135f0:	00f71463          	bne	a4,a5,200135f8 <__metal_driver_sifive_clint0_num_interrupts+0x1a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:255
		return METAL_MAX_CLINT_INTERRUPTS;
200135f4:	4789                	li	a5,2
200135f6:	a011                	j	200135fa <__metal_driver_sifive_clint0_num_interrupts+0x1c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:258
	}
	else {
		return 0;
200135f8:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:260
	}
}
200135fa:	853e                	mv	a0,a5
200135fc:	4472                	lw	s0,28(sp)
200135fe:	6105                	addi	sp,sp,32
20013600:	8082                	ret

20013602 <__metal_driver_sifive_clint0_interrupt_parents>:
__metal_driver_sifive_clint0_interrupt_parents():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:263

static __inline__ struct metal_interrupt * __metal_driver_sifive_clint0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
20013602:	1101                	addi	sp,sp,-32
20013604:	ce22                	sw	s0,28(sp)
20013606:	1000                	addi	s0,sp,32
20013608:	fea42623          	sw	a0,-20(s0)
2001360c:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:264
	if (idx == 0) {
20013610:	fe842783          	lw	a5,-24(s0)
20013614:	e791                	bnez	a5,20013620 <__metal_driver_sifive_clint0_interrupt_parents+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:265
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20013616:	800007b7          	lui	a5,0x80000
2001361a:	09078793          	addi	a5,a5,144 # 80000090 <metal_segment_heap_target_end+0xffffe8d0>
2001361e:	a821                	j	20013636 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:267
	}
	else if (idx == 1) {
20013620:	fe842703          	lw	a4,-24(s0)
20013624:	4785                	li	a5,1
20013626:	00f71763          	bne	a4,a5,20013634 <__metal_driver_sifive_clint0_interrupt_parents+0x32>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:268
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
2001362a:	800007b7          	lui	a5,0x80000
2001362e:	09078793          	addi	a5,a5,144 # 80000090 <metal_segment_heap_target_end+0xffffe8d0>
20013632:	a011                	j	20013636 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:271
	}
	else {
		return NULL;
20013634:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:273
	}
}
20013636:	853e                	mv	a0,a5
20013638:	4472                	lw	s0,28(sp)
2001363a:	6105                	addi	sp,sp,32
2001363c:	8082                	ret

2001363e <__metal_driver_sifive_clint0_interrupt_lines>:
__metal_driver_sifive_clint0_interrupt_lines():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:276

static __inline__ int __metal_driver_sifive_clint0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
2001363e:	1101                	addi	sp,sp,-32
20013640:	ce22                	sw	s0,28(sp)
20013642:	1000                	addi	s0,sp,32
20013644:	fea42623          	sw	a0,-20(s0)
20013648:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:277
	if (idx == 0) {
2001364c:	fe842783          	lw	a5,-24(s0)
20013650:	e399                	bnez	a5,20013656 <__metal_driver_sifive_clint0_interrupt_lines+0x18>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:278
		return 3;
20013652:	478d                	li	a5,3
20013654:	a809                	j	20013666 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:280
	}
	else if (idx == 1) {
20013656:	fe842703          	lw	a4,-24(s0)
2001365a:	4785                	li	a5,1
2001365c:	00f71463          	bne	a4,a5,20013664 <__metal_driver_sifive_clint0_interrupt_lines+0x26>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:281
		return 7;
20013660:	479d                	li	a5,7
20013662:	a011                	j	20013666 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:284
	}
	else {
		return 0;
20013664:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:286
	}
}
20013666:	853e                	mv	a0,a5
20013668:	4472                	lw	s0,28(sp)
2001366a:	6105                	addi	sp,sp,32
2001366c:	8082                	ret

2001366e <__metal_clint0_mtime_get>:
__metal_clint0_mtime_get():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:14
#include <metal/drivers/riscv_clint0.h>
#include <metal/io.h>
#include <metal/machine.h>

unsigned long long
__metal_clint0_mtime_get(struct __metal_driver_riscv_clint0 *clint) {
2001366e:	715d                	addi	sp,sp,-80
20013670:	c686                	sw	ra,76(sp)
20013672:	c4a2                	sw	s0,72(sp)
20013674:	c2ca                	sw	s2,68(sp)
20013676:	c0ce                	sw	s3,64(sp)
20013678:	de52                	sw	s4,60(sp)
2001367a:	dc56                	sw	s5,56(sp)
2001367c:	da5a                	sw	s6,52(sp)
2001367e:	d85e                	sw	s7,48(sp)
20013680:	d662                	sw	s8,44(sp)
20013682:	d466                	sw	s9,40(sp)
20013684:	0880                	addi	s0,sp,80
20013686:	faa42e23          	sw	a0,-68(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:17
    __metal_io_u32 lo, hi;
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
2001368a:	fbc42783          	lw	a5,-68(s0)
2001368e:	853e                	mv	a0,a5
20013690:	3725                	jal	200135b8 <__metal_driver_sifive_clint0_control_base>
20013692:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:21 (discriminator 1)

    /* Guard against rollover when reading */
    do {
        hi = __METAL_ACCESS_ONCE(
20013696:	fcc42703          	lw	a4,-52(s0)
2001369a:	67b1                	lui	a5,0xc
2001369c:	17f1                	addi	a5,a5,-4
2001369e:	97ba                	add	a5,a5,a4
200136a0:	439c                	lw	a5,0(a5)
200136a2:	fcf42423          	sw	a5,-56(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:23 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4));
        lo = __METAL_ACCESS_ONCE(
200136a6:	fcc42703          	lw	a4,-52(s0)
200136aa:	67b1                	lui	a5,0xc
200136ac:	17e1                	addi	a5,a5,-8
200136ae:	97ba                	add	a5,a5,a4
200136b0:	439c                	lw	a5,0(a5)
200136b2:	fcf42223          	sw	a5,-60(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:25 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME));
    } while (__METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
200136b6:	fcc42703          	lw	a4,-52(s0)
200136ba:	67b1                	lui	a5,0xc
200136bc:	17f1                	addi	a5,a5,-4
200136be:	97ba                	add	a5,a5,a4
200136c0:	439c                	lw	a5,0(a5)
200136c2:	fc842703          	lw	a4,-56(s0)
200136c6:	fcf718e3          	bne	a4,a5,20013696 <__metal_clint0_mtime_get+0x28>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:29
                                                    METAL_RISCV_CLINT0_MTIME +
                                                    4)) != hi);

    return (((unsigned long long)hi) << 32) | lo;
200136ca:	fc842783          	lw	a5,-56(s0)
200136ce:	8c3e                	mv	s8,a5
200136d0:	4c81                	li	s9,0
200136d2:	000c1993          	slli	s3,s8,0x0
200136d6:	4901                	li	s2,0
200136d8:	fc442783          	lw	a5,-60(s0)
200136dc:	8a3e                	mv	s4,a5
200136de:	4a81                	li	s5,0
200136e0:	01496b33          	or	s6,s2,s4
200136e4:	0159ebb3          	or	s7,s3,s5
200136e8:	87da                	mv	a5,s6
200136ea:	885e                	mv	a6,s7
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:30
}
200136ec:	853e                	mv	a0,a5
200136ee:	85c2                	mv	a1,a6
200136f0:	40b6                	lw	ra,76(sp)
200136f2:	4426                	lw	s0,72(sp)
200136f4:	4916                	lw	s2,68(sp)
200136f6:	4986                	lw	s3,64(sp)
200136f8:	5a72                	lw	s4,60(sp)
200136fa:	5ae2                	lw	s5,56(sp)
200136fc:	5b52                	lw	s6,52(sp)
200136fe:	5bc2                	lw	s7,48(sp)
20013700:	5c32                	lw	s8,44(sp)
20013702:	5ca2                	lw	s9,40(sp)
20013704:	6161                	addi	sp,sp,80
20013706:	8082                	ret

20013708 <__metal_driver_riscv_clint0_mtimecmp_set>:
__metal_driver_riscv_clint0_mtimecmp_set():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:34

int __metal_driver_riscv_clint0_mtimecmp_set(struct metal_interrupt *controller,
                                             int hartid,
                                             unsigned long long time) {
20013708:	7179                	addi	sp,sp,-48
2001370a:	d606                	sw	ra,44(sp)
2001370c:	d422                	sw	s0,40(sp)
2001370e:	d24a                	sw	s2,36(sp)
20013710:	d04e                	sw	s3,32(sp)
20013712:	1800                	addi	s0,sp,48
20013714:	fca42e23          	sw	a0,-36(s0)
20013718:	fcb42c23          	sw	a1,-40(s0)
2001371c:	fcc42823          	sw	a2,-48(s0)
20013720:	fcd42a23          	sw	a3,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:35
    struct __metal_driver_riscv_clint0 *clint =
20013724:	fdc42783          	lw	a5,-36(s0)
20013728:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:38
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
2001372c:	fec42783          	lw	a5,-20(s0)
20013730:	853e                	mv	a0,a5
20013732:	3559                	jal	200135b8 <__metal_driver_sifive_clint0_control_base>
20013734:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:45
     * and are NOT internally latched for multiword transfers.
     * Need to be careful about sequencing to avoid triggering
     * spurious interrupts: For that set the high word to a max
     * value first.
     */
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
20013738:	fd842783          	lw	a5,-40(s0)
2001373c:	078e                	slli	a5,a5,0x3
2001373e:	873e                	mv	a4,a5
20013740:	fe842783          	lw	a5,-24(s0)
20013744:	973e                	add	a4,a4,a5
20013746:	6791                	lui	a5,0x4
20013748:	0791                	addi	a5,a5,4
2001374a:	97ba                	add	a5,a5,a4
2001374c:	873e                	mv	a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:47
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = 0xFFFFFFFF;
2001374e:	57fd                	li	a5,-1
20013750:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:48
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
20013752:	fd842783          	lw	a5,-40(s0)
20013756:	078e                	slli	a5,a5,0x3
20013758:	873e                	mv	a4,a5
2001375a:	fe842783          	lw	a5,-24(s0)
2001375e:	973e                	add	a4,a4,a5
20013760:	6791                	lui	a5,0x4
20013762:	97ba                	add	a5,a5,a4
20013764:	873e                	mv	a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:50
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
        (__metal_io_u32)time;
20013766:	fd042783          	lw	a5,-48(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:49
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
2001376a:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:53
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = (__metal_io_u32)(time >> 32);
2001376c:	fd442783          	lw	a5,-44(s0)
20013770:	0007d913          	srli	s2,a5,0x0
20013774:	4981                	li	s3,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:51
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
20013776:	fd842783          	lw	a5,-40(s0)
2001377a:	078e                	slli	a5,a5,0x3
2001377c:	873e                	mv	a4,a5
2001377e:	fe842783          	lw	a5,-24(s0)
20013782:	973e                	add	a4,a4,a5
20013784:	6791                	lui	a5,0x4
20013786:	0791                	addi	a5,a5,4
20013788:	97ba                	add	a5,a5,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:53
                                           4)) = (__metal_io_u32)(time >> 32);
2001378a:	874a                	mv	a4,s2
2001378c:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:54
    return 0;
2001378e:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:55
}
20013790:	853e                	mv	a0,a5
20013792:	50b2                	lw	ra,44(sp)
20013794:	5422                	lw	s0,40(sp)
20013796:	5912                	lw	s2,36(sp)
20013798:	5982                	lw	s3,32(sp)
2001379a:	6145                	addi	sp,sp,48
2001379c:	8082                	ret

2001379e <_get_cpu_intc>:
_get_cpu_intc():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:57

static struct metal_interrupt *_get_cpu_intc() {
2001379e:	1101                	addi	sp,sp,-32
200137a0:	ce06                	sw	ra,28(sp)
200137a2:	cc22                	sw	s0,24(sp)
200137a4:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:58
    int hartid = 0;
200137a6:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:59
    __asm__ volatile("csrr %[hartid], mhartid"
200137aa:	f14027f3          	csrr	a5,mhartid
200137ae:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:62
                     : [hartid] "=r"(hartid)::"memory");

    struct metal_cpu *cpu = metal_cpu_get(hartid);
200137b2:	fec42783          	lw	a5,-20(s0)
200137b6:	853e                	mv	a0,a5
200137b8:	629040ef          	jal	ra,200185e0 <metal_cpu_get>
200137bc:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:64

    return metal_cpu_interrupt_controller(cpu);
200137c0:	fe842503          	lw	a0,-24(s0)
200137c4:	5f7040ef          	jal	ra,200185ba <metal_cpu_interrupt_controller>
200137c8:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:65
}
200137ca:	853e                	mv	a0,a5
200137cc:	40f2                	lw	ra,28(sp)
200137ce:	4462                	lw	s0,24(sp)
200137d0:	6105                	addi	sp,sp,32
200137d2:	8082                	ret

200137d4 <__metal_driver_riscv_clint0_init>:
__metal_driver_riscv_clint0_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:67

void __metal_driver_riscv_clint0_init(struct metal_interrupt *controller) {
200137d4:	7139                	addi	sp,sp,-64
200137d6:	de06                	sw	ra,60(sp)
200137d8:	dc22                	sw	s0,56(sp)
200137da:	0080                	addi	s0,sp,64
200137dc:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:69
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
200137e0:	fcc42503          	lw	a0,-52(s0)
200137e4:	3bed                	jal	200135de <__metal_driver_sifive_clint0_num_interrupts>
200137e6:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:70
    struct __metal_driver_riscv_clint0 *clint =
200137ea:	fcc42783          	lw	a5,-52(s0)
200137ee:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:73
        (struct __metal_driver_riscv_clint0 *)(controller);

    if (!clint->init_done) {
200137f2:	fe442783          	lw	a5,-28(s0)
200137f6:	43dc                	lw	a5,4(a5)
200137f8:	efa9                	bnez	a5,20013852 <__metal_driver_riscv_clint0_init+0x7e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:76
        /* Register its interrupts with with parent controller, aka sw and
         * timerto its default isr */
        for (int i = 0; i < num_interrupts; i++) {
200137fa:	fe042623          	sw	zero,-20(s0)
200137fe:	a081                	j	2001383e <__metal_driver_riscv_clint0_init+0x6a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:78 (discriminator 3)
            struct metal_interrupt *intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20013800:	fec42583          	lw	a1,-20(s0)
20013804:	fcc42503          	lw	a0,-52(s0)
20013808:	3bed                	jal	20013602 <__metal_driver_sifive_clint0_interrupt_parents>
2001380a:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:80 (discriminator 3)
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
2001380e:	fec42583          	lw	a1,-20(s0)
20013812:	fcc42503          	lw	a0,-52(s0)
20013816:	3525                	jal	2001363e <__metal_driver_sifive_clint0_interrupt_lines>
20013818:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:81 (discriminator 3)
            intc->vtable->interrupt_register(intc, line, NULL, controller);
2001381c:	fe042783          	lw	a5,-32(s0)
20013820:	439c                	lw	a5,0(a5)
20013822:	4fdc                	lw	a5,28(a5)
20013824:	fcc42683          	lw	a3,-52(s0)
20013828:	4601                	li	a2,0
2001382a:	fdc42583          	lw	a1,-36(s0)
2001382e:	fe042503          	lw	a0,-32(s0)
20013832:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 3)
        for (int i = 0; i < num_interrupts; i++) {
20013834:	fec42783          	lw	a5,-20(s0)
20013838:	0785                	addi	a5,a5,1
2001383a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 1)
2001383e:	fec42703          	lw	a4,-20(s0)
20013842:	fe842783          	lw	a5,-24(s0)
20013846:	faf74de3          	blt	a4,a5,20013800 <__metal_driver_riscv_clint0_init+0x2c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:83
        }
        clint->init_done = 1;
2001384a:	fe442783          	lw	a5,-28(s0)
2001384e:	4705                	li	a4,1
20013850:	c3d8                	sw	a4,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:85
    }
}
20013852:	0001                	nop
20013854:	50f2                	lw	ra,60(sp)
20013856:	5462                	lw	s0,56(sp)
20013858:	6121                	addi	sp,sp,64
2001385a:	8082                	ret

2001385c <__metal_driver_riscv_clint0_register>:
__metal_driver_riscv_clint0_register():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:89

int __metal_driver_riscv_clint0_register(struct metal_interrupt *controller,
                                         int id, metal_interrupt_handler_t isr,
                                         void *priv) {
2001385c:	7139                	addi	sp,sp,-64
2001385e:	de06                	sw	ra,60(sp)
20013860:	dc22                	sw	s0,56(sp)
20013862:	0080                	addi	s0,sp,64
20013864:	fca42623          	sw	a0,-52(s0)
20013868:	fcb42423          	sw	a1,-56(s0)
2001386c:	fcc42223          	sw	a2,-60(s0)
20013870:	fcd42023          	sw	a3,-64(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:90
    int rc = -1;
20013874:	57fd                	li	a5,-1
20013876:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:91
    metal_vector_mode mode = __metal_controller_interrupt_vector_mode();
2001387a:	460010ef          	jal	ra,20014cda <__metal_controller_interrupt_vector_mode>
2001387e:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:92
    struct metal_interrupt *intc = NULL;
20013882:	fe042423          	sw	zero,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:93
    struct metal_interrupt *cpu_intc = _get_cpu_intc();
20013886:	3f21                	jal	2001379e <_get_cpu_intc>
20013888:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:95
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
2001388c:	fcc42503          	lw	a0,-52(s0)
20013890:	33b9                	jal	200135de <__metal_driver_sifive_clint0_num_interrupts>
20013892:	fca42c23          	sw	a0,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:97

    if ((mode != METAL_VECTOR_MODE) && (mode != METAL_DIRECT_MODE)) {
20013896:	fe042703          	lw	a4,-32(s0)
2001389a:	4785                	li	a5,1
2001389c:	00f70863          	beq	a4,a5,200138ac <__metal_driver_riscv_clint0_register+0x50>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:97 (discriminator 1)
200138a0:	fe042783          	lw	a5,-32(s0)
200138a4:	c781                	beqz	a5,200138ac <__metal_driver_riscv_clint0_register+0x50>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:98
        return rc;
200138a6:	fec42783          	lw	a5,-20(s0)
200138aa:	a049                	j	2001392c <__metal_driver_riscv_clint0_register+0xd0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:101
    }

    for (int i = 0; i < num_interrupts; i++) {
200138ac:	fe042223          	sw	zero,-28(s0)
200138b0:	a091                	j	200138f4 <__metal_driver_riscv_clint0_register+0x98>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:102
        int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
200138b2:	fe442583          	lw	a1,-28(s0)
200138b6:	fcc42503          	lw	a0,-52(s0)
200138ba:	3351                	jal	2001363e <__metal_driver_sifive_clint0_interrupt_lines>
200138bc:	fca42a23          	sw	a0,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:103
        intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
200138c0:	fe442583          	lw	a1,-28(s0)
200138c4:	fcc42503          	lw	a0,-52(s0)
200138c8:	3b2d                	jal	20013602 <__metal_driver_sifive_clint0_interrupt_parents>
200138ca:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:104
        if (cpu_intc == intc && id == line) {
200138ce:	fdc42703          	lw	a4,-36(s0)
200138d2:	fe842783          	lw	a5,-24(s0)
200138d6:	00f71863          	bne	a4,a5,200138e6 <__metal_driver_riscv_clint0_register+0x8a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:104 (discriminator 1)
200138da:	fc842703          	lw	a4,-56(s0)
200138de:	fd442783          	lw	a5,-44(s0)
200138e2:	02f70063          	beq	a4,a5,20013902 <__metal_driver_riscv_clint0_register+0xa6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:107 (discriminator 2)
            break;
        }
        intc = NULL;
200138e6:	fe042423          	sw	zero,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 2)
    for (int i = 0; i < num_interrupts; i++) {
200138ea:	fe442783          	lw	a5,-28(s0)
200138ee:	0785                	addi	a5,a5,1
200138f0:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 1)
200138f4:	fe442703          	lw	a4,-28(s0)
200138f8:	fd842783          	lw	a5,-40(s0)
200138fc:	faf74be3          	blt	a4,a5,200138b2 <__metal_driver_riscv_clint0_register+0x56>
20013900:	a011                	j	20013904 <__metal_driver_riscv_clint0_register+0xa8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:105
            break;
20013902:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:111
    }

    /* Register its interrupts with parent controller */
    if (intc) {
20013904:	fe842783          	lw	a5,-24(s0)
20013908:	c385                	beqz	a5,20013928 <__metal_driver_riscv_clint0_register+0xcc>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:112
        rc = intc->vtable->interrupt_register(intc, id, isr, priv);
2001390a:	fe842783          	lw	a5,-24(s0)
2001390e:	439c                	lw	a5,0(a5)
20013910:	4fdc                	lw	a5,28(a5)
20013912:	fc042683          	lw	a3,-64(s0)
20013916:	fc442603          	lw	a2,-60(s0)
2001391a:	fc842583          	lw	a1,-56(s0)
2001391e:	fe842503          	lw	a0,-24(s0)
20013922:	9782                	jalr	a5
20013924:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:114
    }
    return rc;
20013928:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:115
}
2001392c:	853e                	mv	a0,a5
2001392e:	50f2                	lw	ra,60(sp)
20013930:	5462                	lw	s0,56(sp)
20013932:	6121                	addi	sp,sp,64
20013934:	8082                	ret

20013936 <__metal_driver_riscv_clint0_vector_register>:
__metal_driver_riscv_clint0_vector_register():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:119

int __metal_driver_riscv_clint0_vector_register(
    struct metal_interrupt *controller, int id,
    metal_interrupt_vector_handler_t isr, void *priv) {
20013936:	7179                	addi	sp,sp,-48
20013938:	d622                	sw	s0,44(sp)
2001393a:	1800                	addi	s0,sp,48
2001393c:	fca42e23          	sw	a0,-36(s0)
20013940:	fcb42c23          	sw	a1,-40(s0)
20013944:	fcc42a23          	sw	a2,-44(s0)
20013948:	fcd42823          	sw	a3,-48(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:121
    /* Not supported. User can override the 'weak' handler with their own */
    int rc = -1;
2001394c:	57fd                	li	a5,-1
2001394e:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:122
    return rc;
20013952:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:123
}
20013956:	853e                	mv	a0,a5
20013958:	5432                	lw	s0,44(sp)
2001395a:	6145                	addi	sp,sp,48
2001395c:	8082                	ret

2001395e <__metal_driver_riscv_clint0_get_vector_mode>:
__metal_driver_riscv_clint0_get_vector_mode():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:126

metal_vector_mode __metal_driver_riscv_clint0_get_vector_mode(
    struct metal_interrupt *controller) {
2001395e:	1101                	addi	sp,sp,-32
20013960:	ce06                	sw	ra,28(sp)
20013962:	cc22                	sw	s0,24(sp)
20013964:	1000                	addi	s0,sp,32
20013966:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:127
    return __metal_controller_interrupt_vector_mode();
2001396a:	370010ef          	jal	ra,20014cda <__metal_controller_interrupt_vector_mode>
2001396e:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:128
}
20013970:	853e                	mv	a0,a5
20013972:	40f2                	lw	ra,28(sp)
20013974:	4462                	lw	s0,24(sp)
20013976:	6105                	addi	sp,sp,32
20013978:	8082                	ret

2001397a <__metal_driver_riscv_clint0_set_vector_mode>:
__metal_driver_riscv_clint0_set_vector_mode():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:131

int __metal_driver_riscv_clint0_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
2001397a:	7179                	addi	sp,sp,-48
2001397c:	d606                	sw	ra,44(sp)
2001397e:	d422                	sw	s0,40(sp)
20013980:	1800                	addi	s0,sp,48
20013982:	fca42e23          	sw	a0,-36(s0)
20013986:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:132
    int rc = -1;
2001398a:	57fd                	li	a5,-1
2001398c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:133
    struct metal_interrupt *intc = _get_cpu_intc();
20013990:	3539                	jal	2001379e <_get_cpu_intc>
20013992:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:135

    if (intc) {
20013996:	fe842783          	lw	a5,-24(s0)
2001399a:	c395                	beqz	a5,200139be <__metal_driver_riscv_clint0_set_vector_mode+0x44>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:138
        /* Valid vector modes are VECTOR and DIRECT, anything else is invalid
         * (-1) */
        switch (mode) {
2001399c:	fd842703          	lw	a4,-40(s0)
200139a0:	4785                	li	a5,1
200139a2:	02e7e063          	bltu	a5,a4,200139c2 <__metal_driver_riscv_clint0_set_vector_mode+0x48>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:141
        case METAL_VECTOR_MODE:
        case METAL_DIRECT_MODE:
            rc = intc->vtable->interrupt_set_vector_mode(intc, mode);
200139a6:	fe842783          	lw	a5,-24(s0)
200139aa:	439c                	lw	a5,0(a5)
200139ac:	43dc                	lw	a5,4(a5)
200139ae:	fd842583          	lw	a1,-40(s0)
200139b2:	fe842503          	lw	a0,-24(s0)
200139b6:	9782                	jalr	a5
200139b8:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:142
            break;
200139bc:	a021                	j	200139c4 <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:146
        default:
            break;
        }
    }
200139be:	0001                	nop
200139c0:	a011                	j	200139c4 <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:144
            break;
200139c2:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:147
    return rc;
200139c4:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:148
}
200139c8:	853e                	mv	a0,a5
200139ca:	50b2                	lw	ra,44(sp)
200139cc:	5422                	lw	s0,40(sp)
200139ce:	6145                	addi	sp,sp,48
200139d0:	8082                	ret

200139d2 <__metal_driver_riscv_clint0_enable>:
__metal_driver_riscv_clint0_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:151

int __metal_driver_riscv_clint0_enable(struct metal_interrupt *controller,
                                       int id) {
200139d2:	7139                	addi	sp,sp,-64
200139d4:	de06                	sw	ra,60(sp)
200139d6:	dc22                	sw	s0,56(sp)
200139d8:	0080                	addi	s0,sp,64
200139da:	fca42623          	sw	a0,-52(s0)
200139de:	fcb42423          	sw	a1,-56(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:152
    int rc = -1;
200139e2:	57fd                	li	a5,-1
200139e4:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:154

    if (id) {
200139e8:	fc842783          	lw	a5,-56(s0)
200139ec:	c7c9                	beqz	a5,20013a76 <__metal_driver_riscv_clint0_enable+0xa4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:155
        struct metal_interrupt *intc = NULL;
200139ee:	fe042423          	sw	zero,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:156
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
200139f2:	3375                	jal	2001379e <_get_cpu_intc>
200139f4:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:158
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
200139f8:	fcc42503          	lw	a0,-52(s0)
200139fc:	36cd                	jal	200135de <__metal_driver_sifive_clint0_num_interrupts>
200139fe:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:160

        for (int i = 0; i < num_interrupts; i++) {
20013a02:	fe042223          	sw	zero,-28(s0)
20013a06:	a091                	j	20013a4a <__metal_driver_riscv_clint0_enable+0x78>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:162
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20013a08:	fe442583          	lw	a1,-28(s0)
20013a0c:	fcc42503          	lw	a0,-52(s0)
20013a10:	313d                	jal	2001363e <__metal_driver_sifive_clint0_interrupt_lines>
20013a12:	fca42c23          	sw	a0,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:164
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20013a16:	fe442583          	lw	a1,-28(s0)
20013a1a:	fcc42503          	lw	a0,-52(s0)
20013a1e:	36d5                	jal	20013602 <__metal_driver_sifive_clint0_interrupt_parents>
20013a20:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:165
            if (cpu_intc == intc && id == line) {
20013a24:	fe042703          	lw	a4,-32(s0)
20013a28:	fe842783          	lw	a5,-24(s0)
20013a2c:	00f71863          	bne	a4,a5,20013a3c <__metal_driver_riscv_clint0_enable+0x6a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:165 (discriminator 1)
20013a30:	fc842703          	lw	a4,-56(s0)
20013a34:	fd842783          	lw	a5,-40(s0)
20013a38:	02f70063          	beq	a4,a5,20013a58 <__metal_driver_riscv_clint0_enable+0x86>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:168 (discriminator 2)
                break;
            }
            intc = NULL;
20013a3c:	fe042423          	sw	zero,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
20013a40:	fe442783          	lw	a5,-28(s0)
20013a44:	0785                	addi	a5,a5,1
20013a46:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 1)
20013a4a:	fe442703          	lw	a4,-28(s0)
20013a4e:	fdc42783          	lw	a5,-36(s0)
20013a52:	faf74be3          	blt	a4,a5,20013a08 <__metal_driver_riscv_clint0_enable+0x36>
20013a56:	a011                	j	20013a5a <__metal_driver_riscv_clint0_enable+0x88>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:166
                break;
20013a58:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:172
        }

        /* Enable its interrupts with parent controller */
        if (intc) {
20013a5a:	fe842783          	lw	a5,-24(s0)
20013a5e:	cf81                	beqz	a5,20013a76 <__metal_driver_riscv_clint0_enable+0xa4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:173
            rc = intc->vtable->interrupt_enable(intc, id);
20013a60:	fe842783          	lw	a5,-24(s0)
20013a64:	439c                	lw	a5,0(a5)
20013a66:	53dc                	lw	a5,36(a5)
20013a68:	fc842583          	lw	a1,-56(s0)
20013a6c:	fe842503          	lw	a0,-24(s0)
20013a70:	9782                	jalr	a5
20013a72:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:177
        }
    }

    return rc;
20013a76:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:178
}
20013a7a:	853e                	mv	a0,a5
20013a7c:	50f2                	lw	ra,60(sp)
20013a7e:	5462                	lw	s0,56(sp)
20013a80:	6121                	addi	sp,sp,64
20013a82:	8082                	ret

20013a84 <__metal_driver_riscv_clint0_disable>:
__metal_driver_riscv_clint0_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:181

int __metal_driver_riscv_clint0_disable(struct metal_interrupt *controller,
                                        int id) {
20013a84:	7139                	addi	sp,sp,-64
20013a86:	de06                	sw	ra,60(sp)
20013a88:	dc22                	sw	s0,56(sp)
20013a8a:	0080                	addi	s0,sp,64
20013a8c:	fca42623          	sw	a0,-52(s0)
20013a90:	fcb42423          	sw	a1,-56(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:182
    int rc = -1;
20013a94:	57fd                	li	a5,-1
20013a96:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:184

    if (id) {
20013a9a:	fc842783          	lw	a5,-56(s0)
20013a9e:	c7c9                	beqz	a5,20013b28 <__metal_driver_riscv_clint0_disable+0xa4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:185
        struct metal_interrupt *intc = NULL;
20013aa0:	fe042423          	sw	zero,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:186
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
20013aa4:	39ed                	jal	2001379e <_get_cpu_intc>
20013aa6:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:188
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
20013aaa:	fcc42503          	lw	a0,-52(s0)
20013aae:	3e05                	jal	200135de <__metal_driver_sifive_clint0_num_interrupts>
20013ab0:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:190

        for (int i = 0; i < num_interrupts; i++) {
20013ab4:	fe042223          	sw	zero,-28(s0)
20013ab8:	a091                	j	20013afc <__metal_driver_riscv_clint0_disable+0x78>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:192
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20013aba:	fe442583          	lw	a1,-28(s0)
20013abe:	fcc42503          	lw	a0,-52(s0)
20013ac2:	3eb5                	jal	2001363e <__metal_driver_sifive_clint0_interrupt_lines>
20013ac4:	fca42c23          	sw	a0,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:194
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20013ac8:	fe442583          	lw	a1,-28(s0)
20013acc:	fcc42503          	lw	a0,-52(s0)
20013ad0:	3e0d                	jal	20013602 <__metal_driver_sifive_clint0_interrupt_parents>
20013ad2:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:195
            if (cpu_intc == intc && id == line) {
20013ad6:	fe042703          	lw	a4,-32(s0)
20013ada:	fe842783          	lw	a5,-24(s0)
20013ade:	00f71863          	bne	a4,a5,20013aee <__metal_driver_riscv_clint0_disable+0x6a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:195 (discriminator 1)
20013ae2:	fc842703          	lw	a4,-56(s0)
20013ae6:	fd842783          	lw	a5,-40(s0)
20013aea:	02f70063          	beq	a4,a5,20013b0a <__metal_driver_riscv_clint0_disable+0x86>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:198 (discriminator 2)
                break;
            }
            intc = NULL;
20013aee:	fe042423          	sw	zero,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
20013af2:	fe442783          	lw	a5,-28(s0)
20013af6:	0785                	addi	a5,a5,1
20013af8:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 1)
20013afc:	fe442703          	lw	a4,-28(s0)
20013b00:	fdc42783          	lw	a5,-36(s0)
20013b04:	faf74be3          	blt	a4,a5,20013aba <__metal_driver_riscv_clint0_disable+0x36>
20013b08:	a011                	j	20013b0c <__metal_driver_riscv_clint0_disable+0x88>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:196
                break;
20013b0a:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:202
        }

        /* Disable its interrupts with parent controller */
        if (intc) {
20013b0c:	fe842783          	lw	a5,-24(s0)
20013b10:	cf81                	beqz	a5,20013b28 <__metal_driver_riscv_clint0_disable+0xa4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:203
            rc = intc->vtable->interrupt_disable(intc, id);
20013b12:	fe842783          	lw	a5,-24(s0)
20013b16:	439c                	lw	a5,0(a5)
20013b18:	579c                	lw	a5,40(a5)
20013b1a:	fc842583          	lw	a1,-56(s0)
20013b1e:	fe842503          	lw	a0,-24(s0)
20013b22:	9782                	jalr	a5
20013b24:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:207
        }
    }

    return rc;
20013b28:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:208
}
20013b2c:	853e                	mv	a0,a5
20013b2e:	50f2                	lw	ra,60(sp)
20013b30:	5462                	lw	s0,56(sp)
20013b32:	6121                	addi	sp,sp,64
20013b34:	8082                	ret

20013b36 <__metal_driver_riscv_clint0_command_request>:
__metal_driver_riscv_clint0_command_request():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:211

int __metal_driver_riscv_clint0_command_request(
    struct metal_interrupt *controller, int command, void *data) {
20013b36:	7179                	addi	sp,sp,-48
20013b38:	d606                	sw	ra,44(sp)
20013b3a:	d422                	sw	s0,40(sp)
20013b3c:	1800                	addi	s0,sp,48
20013b3e:	fca42e23          	sw	a0,-36(s0)
20013b42:	fcb42c23          	sw	a1,-40(s0)
20013b46:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:213
    int hartid;
    int rc = -1;
20013b4a:	57fd                	li	a5,-1
20013b4c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:214
    struct __metal_driver_riscv_clint0 *clint =
20013b50:	fdc42783          	lw	a5,-36(s0)
20013b54:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:217
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(controller);
20013b58:	fdc42503          	lw	a0,-36(s0)
20013b5c:	a5dff0ef          	jal	ra,200135b8 <__metal_driver_sifive_clint0_control_base>
20013b60:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:219

    switch (command) {
20013b64:	fd842703          	lw	a4,-40(s0)
20013b68:	4789                	li	a5,2
20013b6a:	04f70963          	beq	a4,a5,20013bbc <__metal_driver_riscv_clint0_command_request+0x86>
20013b6e:	fd842703          	lw	a4,-40(s0)
20013b72:	4789                	li	a5,2
20013b74:	00e7c863          	blt	a5,a4,20013b84 <__metal_driver_riscv_clint0_command_request+0x4e>
20013b78:	fd842703          	lw	a4,-40(s0)
20013b7c:	4785                	li	a5,1
20013b7e:	00f70e63          	beq	a4,a5,20013b9a <__metal_driver_riscv_clint0_command_request+0x64>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:263
            rc = __METAL_ACCESS_ONCE(
                (__metal_io_u32 *)(control_base + (hartid * 4)));
        }
        break;
    default:
        break;
20013b82:	a8f1                	j	20013c5e <__metal_driver_riscv_clint0_command_request+0x128>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:219
    switch (command) {
20013b84:	fd842703          	lw	a4,-40(s0)
20013b88:	478d                	li	a5,3
20013b8a:	04f70d63          	beq	a4,a5,20013be4 <__metal_driver_riscv_clint0_command_request+0xae>
20013b8e:	fd842703          	lw	a4,-40(s0)
20013b92:	4791                	li	a5,4
20013b94:	08f70963          	beq	a4,a5,20013c26 <__metal_driver_riscv_clint0_command_request+0xf0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:263
        break;
20013b98:	a0d9                	j	20013c5e <__metal_driver_riscv_clint0_command_request+0x128>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:221
        if (data) {
20013b9a:	fd442783          	lw	a5,-44(s0)
20013b9e:	cbcd                	beqz	a5,20013c50 <__metal_driver_riscv_clint0_command_request+0x11a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:222
            *(unsigned long long *)data = __metal_clint0_mtime_get(clint);
20013ba0:	fe842503          	lw	a0,-24(s0)
20013ba4:	acbff0ef          	jal	ra,2001366e <__metal_clint0_mtime_get>
20013ba8:	87aa                	mv	a5,a0
20013baa:	882e                	mv	a6,a1
20013bac:	fd442703          	lw	a4,-44(s0)
20013bb0:	c31c                	sw	a5,0(a4)
20013bb2:	01072223          	sw	a6,4(a4) # 1000004 <__heap_size+0xfff804>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:223
            rc = 0;
20013bb6:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
20013bba:	a859                	j	20013c50 <__metal_driver_riscv_clint0_command_request+0x11a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:227
        if (data) {
20013bbc:	fd442783          	lw	a5,-44(s0)
20013bc0:	cbd1                	beqz	a5,20013c54 <__metal_driver_riscv_clint0_command_request+0x11e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:228
            hartid = *(int *)data;
20013bc2:	fd442783          	lw	a5,-44(s0)
20013bc6:	439c                	lw	a5,0(a5)
20013bc8:	fef42023          	sw	a5,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:229
            __METAL_ACCESS_ONCE((
20013bcc:	fe042783          	lw	a5,-32(s0)
20013bd0:	078a                	slli	a5,a5,0x2
20013bd2:	873e                	mv	a4,a5
20013bd4:	fe442783          	lw	a5,-28(s0)
20013bd8:	97ba                	add	a5,a5,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:230
                __metal_io_u32 *)(control_base + (hartid * 4))) = METAL_DISABLE;
20013bda:	0007a023          	sw	zero,0(a5) # 4000 <__heap_size+0x3800>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:231
            rc = 0;
20013bde:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
20013be2:	a88d                	j	20013c54 <__metal_driver_riscv_clint0_command_request+0x11e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:235
        if (data) {
20013be4:	fd442783          	lw	a5,-44(s0)
20013be8:	cba5                	beqz	a5,20013c58 <__metal_driver_riscv_clint0_command_request+0x122>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:236
            hartid = *(int *)data;
20013bea:	fd442783          	lw	a5,-44(s0)
20013bee:	439c                	lw	a5,0(a5)
20013bf0:	fef42023          	sw	a5,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:237
            __METAL_ACCESS_ONCE(
20013bf4:	fe042783          	lw	a5,-32(s0)
20013bf8:	078a                	slli	a5,a5,0x2
20013bfa:	873e                	mv	a4,a5
20013bfc:	fe442783          	lw	a5,-28(s0)
20013c00:	97ba                	add	a5,a5,a4
20013c02:	873e                	mv	a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:238
                (__metal_io_u32 *)(control_base + (hartid * 4))) = METAL_ENABLE;
20013c04:	4785                	li	a5,1
20013c06:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:248
            __METAL_IO_FENCE(o, i);
20013c08:	0480000f          	fence	o,i
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:249
            rc = __METAL_ACCESS_ONCE(
20013c0c:	fe042783          	lw	a5,-32(s0)
20013c10:	078a                	slli	a5,a5,0x2
20013c12:	873e                	mv	a4,a5
20013c14:	fe442783          	lw	a5,-28(s0)
20013c18:	97ba                	add	a5,a5,a4
20013c1a:	439c                	lw	a5,0(a5)
20013c1c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:251
            rc = 0;
20013c20:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
20013c24:	a815                	j	20013c58 <__metal_driver_riscv_clint0_command_request+0x122>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:255
        rc = 0;
20013c26:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:256
        if (data) {
20013c2a:	fd442783          	lw	a5,-44(s0)
20013c2e:	c79d                	beqz	a5,20013c5c <__metal_driver_riscv_clint0_command_request+0x126>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:257
            hartid = *(int *)data;
20013c30:	fd442783          	lw	a5,-44(s0)
20013c34:	439c                	lw	a5,0(a5)
20013c36:	fef42023          	sw	a5,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:258
            rc = __METAL_ACCESS_ONCE(
20013c3a:	fe042783          	lw	a5,-32(s0)
20013c3e:	078a                	slli	a5,a5,0x2
20013c40:	873e                	mv	a4,a5
20013c42:	fe442783          	lw	a5,-28(s0)
20013c46:	97ba                	add	a5,a5,a4
20013c48:	439c                	lw	a5,0(a5)
20013c4a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
20013c4e:	a039                	j	20013c5c <__metal_driver_riscv_clint0_command_request+0x126>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
20013c50:	0001                	nop
20013c52:	a031                	j	20013c5e <__metal_driver_riscv_clint0_command_request+0x128>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
20013c54:	0001                	nop
20013c56:	a021                	j	20013c5e <__metal_driver_riscv_clint0_command_request+0x128>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
20013c58:	0001                	nop
20013c5a:	a011                	j	20013c5e <__metal_driver_riscv_clint0_command_request+0x128>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
20013c5c:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:266
    }

    return rc;
20013c5e:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:267
}
20013c62:	853e                	mv	a0,a5
20013c64:	50b2                	lw	ra,44(sp)
20013c66:	5422                	lw	s0,40(sp)
20013c68:	6145                	addi	sp,sp,48
20013c6a:	8082                	ret

20013c6c <__metal_driver_riscv_clint0_clear_interrupt>:
__metal_driver_riscv_clint0_clear_interrupt():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:270

int __metal_driver_riscv_clint0_clear_interrupt(
    struct metal_interrupt *controller, int id) {
20013c6c:	7179                	addi	sp,sp,-48
20013c6e:	d606                	sw	ra,44(sp)
20013c70:	d422                	sw	s0,40(sp)
20013c72:	1800                	addi	s0,sp,48
20013c74:	fca42e23          	sw	a0,-36(s0)
20013c78:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:271
    int hartid = metal_cpu_get_current_hartid();
20013c7c:	193040ef          	jal	ra,2001860e <metal_cpu_get_current_hartid>
20013c80:	87aa                	mv	a5,a0
20013c82:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:272
    return __metal_driver_riscv_clint0_command_request(
20013c86:	fec40793          	addi	a5,s0,-20
20013c8a:	863e                	mv	a2,a5
20013c8c:	4589                	li	a1,2
20013c8e:	fdc42503          	lw	a0,-36(s0)
20013c92:	3555                	jal	20013b36 <__metal_driver_riscv_clint0_command_request>
20013c94:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:274
        controller, METAL_SOFTWARE_IPI_CLEAR, &hartid);
}
20013c96:	853e                	mv	a0,a5
20013c98:	50b2                	lw	ra,44(sp)
20013c9a:	5422                	lw	s0,40(sp)
20013c9c:	6145                	addi	sp,sp,48
20013c9e:	8082                	ret

20013ca0 <__metal_driver_riscv_clint0_set_interrupt>:
__metal_driver_riscv_clint0_set_interrupt():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:277

int __metal_driver_riscv_clint0_set_interrupt(
    struct metal_interrupt *controller, int id) {
20013ca0:	7179                	addi	sp,sp,-48
20013ca2:	d606                	sw	ra,44(sp)
20013ca4:	d422                	sw	s0,40(sp)
20013ca6:	1800                	addi	s0,sp,48
20013ca8:	fca42e23          	sw	a0,-36(s0)
20013cac:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:278
    int hartid = metal_cpu_get_current_hartid();
20013cb0:	15f040ef          	jal	ra,2001860e <metal_cpu_get_current_hartid>
20013cb4:	87aa                	mv	a5,a0
20013cb6:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:279
    return __metal_driver_riscv_clint0_command_request(
20013cba:	fec40793          	addi	a5,s0,-20
20013cbe:	863e                	mv	a2,a5
20013cc0:	458d                	li	a1,3
20013cc2:	fdc42503          	lw	a0,-36(s0)
20013cc6:	3d85                	jal	20013b36 <__metal_driver_riscv_clint0_command_request>
20013cc8:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:281
        controller, METAL_SOFTWARE_IPI_SET, &hartid);
}
20013cca:	853e                	mv	a0,a5
20013ccc:	50b2                	lw	ra,44(sp)
20013cce:	5422                	lw	s0,40(sp)
20013cd0:	6145                	addi	sp,sp,48
20013cd2:	8082                	ret

20013cd4 <__metal_driver_cpu_hartid>:
__metal_driver_cpu_hartid():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:292



/* --------------------- cpu ------------ */
static __inline__ int __metal_driver_cpu_hartid(struct metal_cpu *cpu)
{
20013cd4:	1101                	addi	sp,sp,-32
20013cd6:	ce22                	sw	s0,28(sp)
20013cd8:	1000                	addi	s0,sp,32
20013cda:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:293
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20013cde:	fec42703          	lw	a4,-20(s0)
20013ce2:	81818793          	addi	a5,gp,-2024 # 80000ad8 <__metal_dt_cpu_0>
20013ce6:	00f71463          	bne	a4,a5,20013cee <__metal_driver_cpu_hartid+0x1a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:294
		return 0;
20013cea:	4781                	li	a5,0
20013cec:	a011                	j	20013cf0 <__metal_driver_cpu_hartid+0x1c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:297
	}
	else {
		return -1;
20013cee:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:299
	}
}
20013cf0:	853e                	mv	a0,a5
20013cf2:	4472                	lw	s0,28(sp)
20013cf4:	6105                	addi	sp,sp,32
20013cf6:	8082                	ret

20013cf8 <__metal_driver_cpu_timebase>:
__metal_driver_cpu_timebase():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:302

static __inline__ int __metal_driver_cpu_timebase(struct metal_cpu *cpu)
{
20013cf8:	1101                	addi	sp,sp,-32
20013cfa:	ce22                	sw	s0,28(sp)
20013cfc:	1000                	addi	s0,sp,32
20013cfe:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:303
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20013d02:	fec42703          	lw	a4,-20(s0)
20013d06:	81818793          	addi	a5,gp,-2024 # 80000ad8 <__metal_dt_cpu_0>
20013d0a:	00f71763          	bne	a4,a5,20013d18 <__metal_driver_cpu_timebase+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:304
		return 16000000;
20013d0e:	00f427b7          	lui	a5,0xf42
20013d12:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
20013d16:	a011                	j	20013d1a <__metal_driver_cpu_timebase+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:307
	}
	else {
		return 0;
20013d18:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:309
	}
}
20013d1a:	853e                	mv	a0,a5
20013d1c:	4472                	lw	s0,28(sp)
20013d1e:	6105                	addi	sp,sp,32
20013d20:	8082                	ret

20013d22 <__metal_driver_cpu_interrupt_controller>:
__metal_driver_cpu_interrupt_controller():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:312

static __inline__ struct metal_interrupt * __metal_driver_cpu_interrupt_controller(struct metal_cpu *cpu)
{
20013d22:	1101                	addi	sp,sp,-32
20013d24:	ce22                	sw	s0,28(sp)
20013d26:	1000                	addi	s0,sp,32
20013d28:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:313
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20013d2c:	fec42703          	lw	a4,-20(s0)
20013d30:	81818793          	addi	a5,gp,-2024 # 80000ad8 <__metal_dt_cpu_0>
20013d34:	00f71763          	bne	a4,a5,20013d42 <__metal_driver_cpu_interrupt_controller+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:314
		return &__metal_dt_cpu_0_interrupt_controller.controller;
20013d38:	800007b7          	lui	a5,0x80000
20013d3c:	09078793          	addi	a5,a5,144 # 80000090 <metal_segment_heap_target_end+0xffffe8d0>
20013d40:	a011                	j	20013d44 <__metal_driver_cpu_interrupt_controller+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:317
	}
	else {
		return NULL;
20013d42:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:319
	}
}
20013d44:	853e                	mv	a0,a5
20013d46:	4472                	lw	s0,28(sp)
20013d48:	6105                	addi	sp,sp,32
20013d4a:	8082                	ret

20013d4c <__metal_driver_cpu_buserror>:
__metal_driver_cpu_buserror():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:332
		return 0;
	}
}

static __inline__ struct metal_buserror * __metal_driver_cpu_buserror(struct metal_cpu *cpu)
{
20013d4c:	1101                	addi	sp,sp,-32
20013d4e:	ce22                	sw	s0,28(sp)
20013d50:	1000                	addi	s0,sp,32
20013d52:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:333
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20013d56:	fec42703          	lw	a4,-20(s0)
20013d5a:	81818793          	addi	a5,gp,-2024 # 80000ad8 <__metal_dt_cpu_0>
20013d5e:	00f71463          	bne	a4,a5,20013d66 <__metal_driver_cpu_buserror+0x1a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:334
		return NULL;
20013d62:	4781                	li	a5,0
20013d64:	a011                	j	20013d68 <__metal_driver_cpu_buserror+0x1c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:337
	}
	else {
		return NULL;
20013d66:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:339
	}
}
20013d68:	853e                	mv	a0,a5
20013d6a:	4472                	lw	s0,28(sp)
20013d6c:	6105                	addi	sp,sp,32
20013d6e:	8082                	ret

20013d70 <__metal_driver_cpu_get>:
__metal_driver_cpu_get():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:25
extern void __metal_vector_table();
unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu);
int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time);

struct metal_cpu *__metal_driver_cpu_get(int hartid) {
20013d70:	1101                	addi	sp,sp,-32
20013d72:	ce22                	sw	s0,28(sp)
20013d74:	1000                	addi	s0,sp,32
20013d76:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:26
    if (hartid < __METAL_DT_MAX_HARTS) {
20013d7a:	fec42783          	lw	a5,-20(s0)
20013d7e:	00f04c63          	bgtz	a5,20013d96 <__metal_driver_cpu_get+0x26>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:27
        return &(__metal_cpu_table[hartid]->cpu);
20013d82:	800017b7          	lui	a5,0x80001
20013d86:	fec42703          	lw	a4,-20(s0)
20013d8a:	070a                	slli	a4,a4,0x2
20013d8c:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20013d90:	97ba                	add	a5,a5,a4
20013d92:	439c                	lw	a5,0(a5)
20013d94:	a011                	j	20013d98 <__metal_driver_cpu_get+0x28>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:29
    }
    return (struct metal_cpu *)NULL;
20013d96:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:30
}
20013d98:	853e                	mv	a0,a5
20013d9a:	4472                	lw	s0,28(sp)
20013d9c:	6105                	addi	sp,sp,32
20013d9e:	8082                	ret

20013da0 <__metal_myhart_id>:
__metal_myhart_id():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:32

uintptr_t __metal_myhart_id(void) {
20013da0:	1101                	addi	sp,sp,-32
20013da2:	ce22                	sw	s0,28(sp)
20013da4:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:34
    uintptr_t myhart;
    __asm__ volatile("csrr %0, mhartid" : "=r"(myhart));
20013da6:	f14027f3          	csrr	a5,mhartid
20013daa:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:35
    return myhart;
20013dae:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:36
}
20013db2:	853e                	mv	a0,a5
20013db4:	4472                	lw	s0,28(sp)
20013db6:	6105                	addi	sp,sp,32
20013db8:	8082                	ret

20013dba <__metal_interrupt_global_enable>:
__metal_interrupt_global_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:45
    for (ptr = base; ptr < (base + size); ptr++) {
        *ptr = 0;
    }
}

void __metal_interrupt_global_enable(void) {
20013dba:	1101                	addi	sp,sp,-32
20013dbc:	ce22                	sw	s0,28(sp)
20013dbe:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:47
    uintptr_t m;
    __asm__ volatile("csrrs %0, mstatus, %1"
20013dc0:	47a1                	li	a5,8
20013dc2:	3007a7f3          	csrrs	a5,mstatus,a5
20013dc6:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:50
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
20013dca:	0001                	nop
20013dcc:	4472                	lw	s0,28(sp)
20013dce:	6105                	addi	sp,sp,32
20013dd0:	8082                	ret

20013dd2 <__metal_interrupt_global_disable>:
__metal_interrupt_global_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:52

void __metal_interrupt_global_disable(void) {
20013dd2:	1101                	addi	sp,sp,-32
20013dd4:	ce22                	sw	s0,28(sp)
20013dd6:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:54
    uintptr_t m;
    __asm__ volatile("csrrc %0, mstatus, %1"
20013dd8:	47a1                	li	a5,8
20013dda:	3007b7f3          	csrrc	a5,mstatus,a5
20013dde:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:57
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
20013de2:	0001                	nop
20013de4:	4472                	lw	s0,28(sp)
20013de6:	6105                	addi	sp,sp,32
20013de8:	8082                	ret

20013dea <__metal_interrupt_software_enable>:
__metal_interrupt_software_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:59

void __metal_interrupt_software_enable(void) {
20013dea:	1101                	addi	sp,sp,-32
20013dec:	ce22                	sw	s0,28(sp)
20013dee:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:61
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20013df0:	47a1                	li	a5,8
20013df2:	3047a7f3          	csrrs	a5,mie,a5
20013df6:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:64
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
20013dfa:	0001                	nop
20013dfc:	4472                	lw	s0,28(sp)
20013dfe:	6105                	addi	sp,sp,32
20013e00:	8082                	ret

20013e02 <__metal_interrupt_software_disable>:
__metal_interrupt_software_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:66

void __metal_interrupt_software_disable(void) {
20013e02:	1101                	addi	sp,sp,-32
20013e04:	ce22                	sw	s0,28(sp)
20013e06:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:68
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
20013e08:	47a1                	li	a5,8
20013e0a:	3047b7f3          	csrrc	a5,mie,a5
20013e0e:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:71
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
20013e12:	0001                	nop
20013e14:	4472                	lw	s0,28(sp)
20013e16:	6105                	addi	sp,sp,32
20013e18:	8082                	ret

20013e1a <__metal_interrupt_timer_enable>:
__metal_interrupt_timer_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:73

void __metal_interrupt_timer_enable(void) {
20013e1a:	1101                	addi	sp,sp,-32
20013e1c:	ce22                	sw	s0,28(sp)
20013e1e:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:75
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20013e20:	08000793          	li	a5,128
20013e24:	3047a7f3          	csrrs	a5,mie,a5
20013e28:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:78
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
20013e2c:	0001                	nop
20013e2e:	4472                	lw	s0,28(sp)
20013e30:	6105                	addi	sp,sp,32
20013e32:	8082                	ret

20013e34 <__metal_interrupt_timer_disable>:
__metal_interrupt_timer_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:80

void __metal_interrupt_timer_disable(void) {
20013e34:	1101                	addi	sp,sp,-32
20013e36:	ce22                	sw	s0,28(sp)
20013e38:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:82
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
20013e3a:	08000793          	li	a5,128
20013e3e:	3047b7f3          	csrrc	a5,mie,a5
20013e42:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:85
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
20013e46:	0001                	nop
20013e48:	4472                	lw	s0,28(sp)
20013e4a:	6105                	addi	sp,sp,32
20013e4c:	8082                	ret

20013e4e <__metal_interrupt_external_enable>:
__metal_interrupt_external_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:87

void __metal_interrupt_external_enable(void) {
20013e4e:	1101                	addi	sp,sp,-32
20013e50:	ce22                	sw	s0,28(sp)
20013e52:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:89
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20013e54:	6785                	lui	a5,0x1
20013e56:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20013e5a:	3047a7f3          	csrrs	a5,mie,a5
20013e5e:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:92
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
20013e62:	0001                	nop
20013e64:	4472                	lw	s0,28(sp)
20013e66:	6105                	addi	sp,sp,32
20013e68:	8082                	ret

20013e6a <__metal_interrupt_external_disable>:
__metal_interrupt_external_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:94

void __metal_interrupt_external_disable(void) {
20013e6a:	1101                	addi	sp,sp,-32
20013e6c:	ce22                	sw	s0,28(sp)
20013e6e:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:96
    unsigned long m;
    __asm__ volatile("csrrc %0, mie, %1"
20013e70:	6785                	lui	a5,0x1
20013e72:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20013e76:	3047b7f3          	csrrc	a5,mie,a5
20013e7a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:99
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
20013e7e:	0001                	nop
20013e80:	4472                	lw	s0,28(sp)
20013e82:	6105                	addi	sp,sp,32
20013e84:	8082                	ret

20013e86 <__metal_interrupt_local_enable>:
__metal_interrupt_local_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:101

void __metal_interrupt_local_enable(int id) {
20013e86:	7179                	addi	sp,sp,-48
20013e88:	d622                	sw	s0,44(sp)
20013e8a:	1800                	addi	s0,sp,48
20013e8c:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:102
    uintptr_t b = 1 << id;
20013e90:	fdc42783          	lw	a5,-36(s0)
20013e94:	4705                	li	a4,1
20013e96:	00f717b3          	sll	a5,a4,a5
20013e9a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:104
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1" : "=r"(m) : "r"(b));
20013e9e:	fec42783          	lw	a5,-20(s0)
20013ea2:	3047a7f3          	csrrs	a5,mie,a5
20013ea6:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:105
}
20013eaa:	0001                	nop
20013eac:	5432                	lw	s0,44(sp)
20013eae:	6145                	addi	sp,sp,48
20013eb0:	8082                	ret

20013eb2 <__metal_interrupt_local_disable>:
__metal_interrupt_local_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:107

void __metal_interrupt_local_disable(int id) {
20013eb2:	7179                	addi	sp,sp,-48
20013eb4:	d622                	sw	s0,44(sp)
20013eb6:	1800                	addi	s0,sp,48
20013eb8:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:108
    uintptr_t b = 1 << id;
20013ebc:	fdc42783          	lw	a5,-36(s0)
20013ec0:	4705                	li	a4,1
20013ec2:	00f717b3          	sll	a5,a4,a5
20013ec6:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:110
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1" : "=r"(m) : "r"(b));
20013eca:	fec42783          	lw	a5,-20(s0)
20013ece:	3047b7f3          	csrrc	a5,mie,a5
20013ed2:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:111
}
20013ed6:	0001                	nop
20013ed8:	5432                	lw	s0,44(sp)
20013eda:	6145                	addi	sp,sp,48
20013edc:	8082                	ret

20013ede <__metal_default_exception_handler>:
__metal_default_exception_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:113

void __metal_default_exception_handler(struct metal_cpu *cpu, int ecode) {
20013ede:	1101                	addi	sp,sp,-32
20013ee0:	ce06                	sw	ra,28(sp)
20013ee2:	cc22                	sw	s0,24(sp)
20013ee4:	1000                	addi	s0,sp,32
20013ee6:	fea42623          	sw	a0,-20(s0)
20013eea:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:114
    metal_shutdown(100);
20013eee:	06400513          	li	a0,100
20013ef2:	055040ef          	jal	ra,20018746 <metal_shutdown>

20013ef6 <__metal_default_interrupt_handler>:
__metal_default_interrupt_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:117
}

void __metal_default_interrupt_handler(int id, void *priv) {
20013ef6:	1101                	addi	sp,sp,-32
20013ef8:	ce06                	sw	ra,28(sp)
20013efa:	cc22                	sw	s0,24(sp)
20013efc:	1000                	addi	s0,sp,32
20013efe:	fea42623          	sw	a0,-20(s0)
20013f02:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:118
    metal_shutdown(200);
20013f06:	0c800513          	li	a0,200
20013f0a:	03d040ef          	jal	ra,20018746 <metal_shutdown>

20013f0e <metal_interrupt_vector_handler>:
metal_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:122
}

/* The metal_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_interrupt_vector_handler(void) {
20013f0e:	715d                	addi	sp,sp,-80
20013f10:	c686                	sw	ra,76(sp)
20013f12:	c496                	sw	t0,72(sp)
20013f14:	c29a                	sw	t1,68(sp)
20013f16:	c09e                	sw	t2,64(sp)
20013f18:	de22                	sw	s0,60(sp)
20013f1a:	dc2a                	sw	a0,56(sp)
20013f1c:	da2e                	sw	a1,52(sp)
20013f1e:	d832                	sw	a2,48(sp)
20013f20:	d636                	sw	a3,44(sp)
20013f22:	d43a                	sw	a4,40(sp)
20013f24:	d23e                	sw	a5,36(sp)
20013f26:	d042                	sw	a6,32(sp)
20013f28:	ce46                	sw	a7,28(sp)
20013f2a:	cc72                	sw	t3,24(sp)
20013f2c:	ca76                	sw	t4,20(sp)
20013f2e:	c87a                	sw	t5,16(sp)
20013f30:	c67e                	sw	t6,12(sp)
20013f32:	0880                	addi	s0,sp,80
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:123
    metal_shutdown(300);
20013f34:	12c00513          	li	a0,300
20013f38:	00f040ef          	jal	ra,20018746 <metal_shutdown>

20013f3c <metal_software_interrupt_vector_handler>:
metal_software_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:128
}

/* The metal_software_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_software_interrupt_vector_handler(void) {
20013f3c:	711d                	addi	sp,sp,-96
20013f3e:	ce86                	sw	ra,92(sp)
20013f40:	cc96                	sw	t0,88(sp)
20013f42:	ca9a                	sw	t1,84(sp)
20013f44:	c89e                	sw	t2,80(sp)
20013f46:	c6a2                	sw	s0,76(sp)
20013f48:	c4aa                	sw	a0,72(sp)
20013f4a:	c2ae                	sw	a1,68(sp)
20013f4c:	c0b2                	sw	a2,64(sp)
20013f4e:	de36                	sw	a3,60(sp)
20013f50:	dc3a                	sw	a4,56(sp)
20013f52:	da3e                	sw	a5,52(sp)
20013f54:	d842                	sw	a6,48(sp)
20013f56:	d646                	sw	a7,44(sp)
20013f58:	d472                	sw	t3,40(sp)
20013f5a:	d276                	sw	t4,36(sp)
20013f5c:	d07a                	sw	t5,32(sp)
20013f5e:	ce7e                	sw	t6,28(sp)
20013f60:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:129
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_SW);
20013f62:	3d3d                	jal	20013da0 <__metal_myhart_id>
20013f64:	872a                	mv	a4,a0
20013f66:	800017b7          	lui	a5,0x80001
20013f6a:	070a                	slli	a4,a4,0x2
20013f6c:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20013f70:	97ba                	add	a5,a5,a4
20013f72:	439c                	lw	a5,0(a5)
20013f74:	faf42623          	sw	a5,-84(s0)
20013f78:	fac42783          	lw	a5,-84(s0)
20013f7c:	c785                	beqz	a5,20013fa4 <metal_software_interrupt_vector_handler+0x68>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:129 (discriminator 1)
20013f7e:	fac42503          	lw	a0,-84(s0)
20013f82:	3345                	jal	20013d22 <__metal_driver_cpu_interrupt_controller>
20013f84:	faa42423          	sw	a0,-88(s0)
20013f88:	fa842783          	lw	a5,-88(s0)
20013f8c:	0e07a783          	lw	a5,224(a5)
20013f90:	faf42223          	sw	a5,-92(s0)
20013f94:	fa842783          	lw	a5,-88(s0)
20013f98:	0d87a783          	lw	a5,216(a5)
20013f9c:	fa442583          	lw	a1,-92(s0)
20013fa0:	450d                	li	a0,3
20013fa2:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:130
}
20013fa4:	0001                	nop
20013fa6:	40f6                	lw	ra,92(sp)
20013fa8:	42e6                	lw	t0,88(sp)
20013faa:	4356                	lw	t1,84(sp)
20013fac:	43c6                	lw	t2,80(sp)
20013fae:	4436                	lw	s0,76(sp)
20013fb0:	4526                	lw	a0,72(sp)
20013fb2:	4596                	lw	a1,68(sp)
20013fb4:	4606                	lw	a2,64(sp)
20013fb6:	56f2                	lw	a3,60(sp)
20013fb8:	5762                	lw	a4,56(sp)
20013fba:	57d2                	lw	a5,52(sp)
20013fbc:	5842                	lw	a6,48(sp)
20013fbe:	58b2                	lw	a7,44(sp)
20013fc0:	5e22                	lw	t3,40(sp)
20013fc2:	5e92                	lw	t4,36(sp)
20013fc4:	5f02                	lw	t5,32(sp)
20013fc6:	4ff2                	lw	t6,28(sp)
20013fc8:	6125                	addi	sp,sp,96
20013fca:	30200073          	mret

20013fce <__metal_default_sw_handler>:
__metal_default_sw_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:132

void __metal_default_sw_handler(int id, void *priv) {
20013fce:	7179                	addi	sp,sp,-48
20013fd0:	d606                	sw	ra,44(sp)
20013fd2:	d422                	sw	s0,40(sp)
20013fd4:	1800                	addi	s0,sp,48
20013fd6:	fca42e23          	sw	a0,-36(s0)
20013fda:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:135
    uintptr_t mcause;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20013fde:	33c9                	jal	20013da0 <__metal_myhart_id>
20013fe0:	872a                	mv	a4,a0
20013fe2:	800017b7          	lui	a5,0x80001
20013fe6:	070a                	slli	a4,a4,0x2
20013fe8:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20013fec:	97ba                	add	a5,a5,a4
20013fee:	439c                	lw	a5,0(a5)
20013ff0:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:137

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
20013ff4:	342027f3          	csrr	a5,mcause
20013ff8:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:138
    if (cpu) {
20013ffc:	fec42783          	lw	a5,-20(s0)
20014000:	c795                	beqz	a5,2001402c <__metal_default_sw_handler+0x5e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:140
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20014002:	fec42503          	lw	a0,-20(s0)
20014006:	3b31                	jal	20013d22 <__metal_driver_cpu_interrupt_controller>
20014008:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:141
        intc->metal_exception_table[mcause & METAL_MCAUSE_CAUSE](
2001400c:	fe842783          	lw	a5,-24(s0)
20014010:	3ff7f793          	andi	a5,a5,1023
20014014:	fe442703          	lw	a4,-28(s0)
20014018:	0e878793          	addi	a5,a5,232
2001401c:	078a                	slli	a5,a5,0x2
2001401e:	97ba                	add	a5,a5,a4
20014020:	439c                	lw	a5,0(a5)
20014022:	fdc42583          	lw	a1,-36(s0)
20014026:	fec42503          	lw	a0,-20(s0)
2001402a:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:144
            (struct metal_cpu *)cpu, id);
    }
}
2001402c:	0001                	nop
2001402e:	50b2                	lw	ra,44(sp)
20014030:	5422                	lw	s0,40(sp)
20014032:	6145                	addi	sp,sp,48
20014034:	8082                	ret

20014036 <metal_timer_interrupt_vector_handler>:
metal_timer_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:148

/* The metal_timer_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_timer_interrupt_vector_handler(void) {
20014036:	711d                	addi	sp,sp,-96
20014038:	ce86                	sw	ra,92(sp)
2001403a:	cc96                	sw	t0,88(sp)
2001403c:	ca9a                	sw	t1,84(sp)
2001403e:	c89e                	sw	t2,80(sp)
20014040:	c6a2                	sw	s0,76(sp)
20014042:	c4aa                	sw	a0,72(sp)
20014044:	c2ae                	sw	a1,68(sp)
20014046:	c0b2                	sw	a2,64(sp)
20014048:	de36                	sw	a3,60(sp)
2001404a:	dc3a                	sw	a4,56(sp)
2001404c:	da3e                	sw	a5,52(sp)
2001404e:	d842                	sw	a6,48(sp)
20014050:	d646                	sw	a7,44(sp)
20014052:	d472                	sw	t3,40(sp)
20014054:	d276                	sw	t4,36(sp)
20014056:	d07a                	sw	t5,32(sp)
20014058:	ce7e                	sw	t6,28(sp)
2001405a:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:149
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_TMR);
2001405c:	3391                	jal	20013da0 <__metal_myhart_id>
2001405e:	872a                	mv	a4,a0
20014060:	800017b7          	lui	a5,0x80001
20014064:	070a                	slli	a4,a4,0x2
20014066:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
2001406a:	97ba                	add	a5,a5,a4
2001406c:	439c                	lw	a5,0(a5)
2001406e:	faf42623          	sw	a5,-84(s0)
20014072:	fac42783          	lw	a5,-84(s0)
20014076:	c785                	beqz	a5,2001409e <metal_timer_interrupt_vector_handler+0x68>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:149 (discriminator 1)
20014078:	fac42503          	lw	a0,-84(s0)
2001407c:	315d                	jal	20013d22 <__metal_driver_cpu_interrupt_controller>
2001407e:	faa42423          	sw	a0,-88(s0)
20014082:	fa842783          	lw	a5,-88(s0)
20014086:	1407a783          	lw	a5,320(a5)
2001408a:	faf42223          	sw	a5,-92(s0)
2001408e:	fa842783          	lw	a5,-88(s0)
20014092:	1387a783          	lw	a5,312(a5)
20014096:	fa442583          	lw	a1,-92(s0)
2001409a:	451d                	li	a0,7
2001409c:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:150
}
2001409e:	0001                	nop
200140a0:	40f6                	lw	ra,92(sp)
200140a2:	42e6                	lw	t0,88(sp)
200140a4:	4356                	lw	t1,84(sp)
200140a6:	43c6                	lw	t2,80(sp)
200140a8:	4436                	lw	s0,76(sp)
200140aa:	4526                	lw	a0,72(sp)
200140ac:	4596                	lw	a1,68(sp)
200140ae:	4606                	lw	a2,64(sp)
200140b0:	56f2                	lw	a3,60(sp)
200140b2:	5762                	lw	a4,56(sp)
200140b4:	57d2                	lw	a5,52(sp)
200140b6:	5842                	lw	a6,48(sp)
200140b8:	58b2                	lw	a7,44(sp)
200140ba:	5e22                	lw	t3,40(sp)
200140bc:	5e92                	lw	t4,36(sp)
200140be:	5f02                	lw	t5,32(sp)
200140c0:	4ff2                	lw	t6,28(sp)
200140c2:	6125                	addi	sp,sp,96
200140c4:	30200073          	mret

200140c8 <__metal_default_beu_handler>:
__metal_default_beu_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:152

void __metal_default_beu_handler(int id, void *priv) {}
200140c8:	1101                	addi	sp,sp,-32
200140ca:	ce22                	sw	s0,28(sp)
200140cc:	1000                	addi	s0,sp,32
200140ce:	fea42623          	sw	a0,-20(s0)
200140d2:	feb42423          	sw	a1,-24(s0)
200140d6:	0001                	nop
200140d8:	4472                	lw	s0,28(sp)
200140da:	6105                	addi	sp,sp,32
200140dc:	8082                	ret

200140de <__metal_default_timer_handler>:
__metal_default_timer_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:154

void __metal_default_timer_handler(int id, void *priv) {
200140de:	7179                	addi	sp,sp,-48
200140e0:	d606                	sw	ra,44(sp)
200140e2:	d422                	sw	s0,40(sp)
200140e4:	1800                	addi	s0,sp,48
200140e6:	fca42e23          	sw	a0,-36(s0)
200140ea:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:155
    struct metal_cpu *cpu = __metal_driver_cpu_get(__metal_myhart_id());
200140ee:	394d                	jal	20013da0 <__metal_myhart_id>
200140f0:	87aa                	mv	a5,a0
200140f2:	853e                	mv	a0,a5
200140f4:	39b5                	jal	20013d70 <__metal_driver_cpu_get>
200140f6:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:156
    unsigned long long time = __metal_driver_cpu_mtime_get(cpu);
200140fa:	fec42503          	lw	a0,-20(s0)
200140fe:	286010ef          	jal	ra,20015384 <__metal_driver_cpu_mtime_get>
20014102:	fea42023          	sw	a0,-32(s0)
20014106:	feb42223          	sw	a1,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:159

    /* Set a 10 cycle timer */
    __metal_driver_cpu_mtimecmp_set(cpu, time + 10);
2001410a:	fe042783          	lw	a5,-32(s0)
2001410e:	fe442803          	lw	a6,-28(s0)
20014112:	45a9                	li	a1,10
20014114:	4601                	li	a2,0
20014116:	00b786b3          	add	a3,a5,a1
2001411a:	8536                	mv	a0,a3
2001411c:	00f53533          	sltu	a0,a0,a5
20014120:	00c80733          	add	a4,a6,a2
20014124:	00e507b3          	add	a5,a0,a4
20014128:	873e                	mv	a4,a5
2001412a:	87b6                	mv	a5,a3
2001412c:	883a                	mv	a6,a4
2001412e:	85be                	mv	a1,a5
20014130:	8642                	mv	a2,a6
20014132:	fec42503          	lw	a0,-20(s0)
20014136:	2b4010ef          	jal	ra,200153ea <__metal_driver_cpu_mtimecmp_set>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:160
}
2001413a:	0001                	nop
2001413c:	50b2                	lw	ra,44(sp)
2001413e:	5422                	lw	s0,40(sp)
20014140:	6145                	addi	sp,sp,48
20014142:	8082                	ret
	...

20014180 <__metal_exception_handler>:
__metal_exception_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:169
metal_external_interrupt_vector_handler(void) {
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_EXT);
}

void __metal_exception_handler(void) __attribute__((interrupt, aligned(128)));
void __metal_exception_handler(void) {
20014180:	7119                	addi	sp,sp,-128
20014182:	de86                	sw	ra,124(sp)
20014184:	dc96                	sw	t0,120(sp)
20014186:	da9a                	sw	t1,116(sp)
20014188:	d89e                	sw	t2,112(sp)
2001418a:	d6a2                	sw	s0,108(sp)
2001418c:	d4aa                	sw	a0,104(sp)
2001418e:	d2ae                	sw	a1,100(sp)
20014190:	d0b2                	sw	a2,96(sp)
20014192:	ceb6                	sw	a3,92(sp)
20014194:	ccba                	sw	a4,88(sp)
20014196:	cabe                	sw	a5,84(sp)
20014198:	c8c2                	sw	a6,80(sp)
2001419a:	c6c6                	sw	a7,76(sp)
2001419c:	c4f2                	sw	t3,72(sp)
2001419e:	c2f6                	sw	t4,68(sp)
200141a0:	c0fa                	sw	t5,64(sp)
200141a2:	de7e                	sw	t6,60(sp)
200141a4:	0100                	addi	s0,sp,128
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:174
    int id;
    void *priv;
    uintptr_t mcause, mepc, mtval, mtvec;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
200141a6:	bfbff0ef          	jal	ra,20013da0 <__metal_myhart_id>
200141aa:	872a                	mv	a4,a0
200141ac:	800017b7          	lui	a5,0x80001
200141b0:	070a                	slli	a4,a4,0x2
200141b2:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
200141b6:	97ba                	add	a5,a5,a4
200141b8:	439c                	lw	a5,0(a5)
200141ba:	faf42623          	sw	a5,-84(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:176

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
200141be:	342027f3          	csrr	a5,mcause
200141c2:	faf42423          	sw	a5,-88(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:177
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
200141c6:	341027f3          	csrr	a5,mepc
200141ca:	faf42223          	sw	a5,-92(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:178
    __asm__ volatile("csrr %0, mtval" : "=r"(mtval));
200141ce:	343027f3          	csrr	a5,mtval
200141d2:	faf42023          	sw	a5,-96(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:179
    __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
200141d6:	305027f3          	csrr	a5,mtvec
200141da:	f8f42e23          	sw	a5,-100(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:181

    if (cpu) {
200141de:	fac42783          	lw	a5,-84(s0)
200141e2:	cbfd                	beqz	a5,200142d8 <__metal_exception_handler+0x158>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:183
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
200141e4:	fac42503          	lw	a0,-84(s0)
200141e8:	b3bff0ef          	jal	ra,20013d22 <__metal_driver_cpu_interrupt_controller>
200141ec:	f8a42c23          	sw	a0,-104(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:184
        id = mcause & METAL_MCAUSE_CAUSE;
200141f0:	fa842783          	lw	a5,-88(s0)
200141f4:	3ff7f793          	andi	a5,a5,1023
200141f8:	f8f42a23          	sw	a5,-108(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:185
        if (mcause & METAL_MCAUSE_INTR) {
200141fc:	fa842783          	lw	a5,-88(s0)
20014200:	0a07de63          	bgez	a5,200142bc <__metal_exception_handler+0x13c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:186
            if (id == METAL_INTERRUPT_ID_BEU) {
20014204:	f9442703          	lw	a4,-108(s0)
20014208:	08000793          	li	a5,128
2001420c:	02f71263          	bne	a4,a5,20014230 <__metal_exception_handler+0xb0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:187
                priv = intc->metal_int_beu.exint_data;
20014210:	f9842783          	lw	a5,-104(s0)
20014214:	3987a783          	lw	a5,920(a5)
20014218:	f8f42823          	sw	a5,-112(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:188
                intc->metal_int_beu.handler(id, priv);
2001421c:	f9842783          	lw	a5,-104(s0)
20014220:	3907a783          	lw	a5,912(a5)
20014224:	f9042583          	lw	a1,-112(s0)
20014228:	f9442503          	lw	a0,-108(s0)
2001422c:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:189
                return;
2001422e:	a06d                	j	200142d8 <__metal_exception_handler+0x158>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:191
            }
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20014230:	f9442703          	lw	a4,-108(s0)
20014234:	47ad                	li	a5,11
20014236:	00e7d763          	bge	a5,a4,20014244 <__metal_exception_handler+0xc4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:192 (discriminator 1)
                ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_DIRECT)) {
2001423a:	f9c42783          	lw	a5,-100(s0)
2001423e:	03f7f793          	andi	a5,a5,63
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:191 (discriminator 1)
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20014242:	ef9d                	bnez	a5,20014280 <__metal_exception_handler+0x100>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:193
                priv = intc->metal_int_table[id].exint_data;
20014244:	f9842683          	lw	a3,-104(s0)
20014248:	f9442703          	lw	a4,-108(s0)
2001424c:	87ba                	mv	a5,a4
2001424e:	0786                	slli	a5,a5,0x1
20014250:	97ba                	add	a5,a5,a4
20014252:	078e                	slli	a5,a5,0x3
20014254:	97b6                	add	a5,a5,a3
20014256:	0987a783          	lw	a5,152(a5)
2001425a:	f8f42823          	sw	a5,-112(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:194
                intc->metal_int_table[id].handler(id, priv);
2001425e:	f9842683          	lw	a3,-104(s0)
20014262:	f9442703          	lw	a4,-108(s0)
20014266:	87ba                	mv	a5,a4
20014268:	0786                	slli	a5,a5,0x1
2001426a:	97ba                	add	a5,a5,a4
2001426c:	078e                	slli	a5,a5,0x3
2001426e:	97b6                	add	a5,a5,a3
20014270:	0907a783          	lw	a5,144(a5)
20014274:	f9042583          	lw	a1,-112(s0)
20014278:	f9442503          	lw	a0,-108(s0)
2001427c:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:195
                return;
2001427e:	a8a9                	j	200142d8 <__metal_exception_handler+0x158>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:197
            }
            if ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_CLIC) {
20014280:	f9c42783          	lw	a5,-100(s0)
20014284:	03f7f713          	andi	a4,a5,63
20014288:	4789                	li	a5,2
2001428a:	04f71763          	bne	a4,a5,200142d8 <__metal_exception_handler+0x158>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:201
                uintptr_t mtvt;
                metal_interrupt_handler_t mtvt_handler;

                __asm__ volatile("csrr %0, 0x307" : "=r"(mtvt));
2001428e:	307027f3          	csrr	a5,mtvt
20014292:	f8f42623          	sw	a5,-116(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:202
                priv = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20014296:	f9842783          	lw	a5,-104(s0)
2001429a:	0dc7a783          	lw	a5,220(a5)
2001429e:	f8f42823          	sw	a5,-112(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:203
                mtvt_handler = (metal_interrupt_handler_t) * (uintptr_t *)mtvt;
200142a2:	f8c42783          	lw	a5,-116(s0)
200142a6:	439c                	lw	a5,0(a5)
200142a8:	f8f42423          	sw	a5,-120(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:204
                mtvt_handler(id, priv);
200142ac:	f8842783          	lw	a5,-120(s0)
200142b0:	f9042583          	lw	a1,-112(s0)
200142b4:	f9442503          	lw	a0,-108(s0)
200142b8:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:205
                return;
200142ba:	a839                	j	200142d8 <__metal_exception_handler+0x158>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:208
            }
        } else {
            intc->metal_exception_table[id]((struct metal_cpu *)cpu, id);
200142bc:	f9842703          	lw	a4,-104(s0)
200142c0:	f9442783          	lw	a5,-108(s0)
200142c4:	0e878793          	addi	a5,a5,232
200142c8:	078a                	slli	a5,a5,0x2
200142ca:	97ba                	add	a5,a5,a4
200142cc:	439c                	lw	a5,0(a5)
200142ce:	f9442583          	lw	a1,-108(s0)
200142d2:	fac42503          	lw	a0,-84(s0)
200142d6:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:211
        }
    }
}
200142d8:	50f6                	lw	ra,124(sp)
200142da:	52e6                	lw	t0,120(sp)
200142dc:	5356                	lw	t1,116(sp)
200142de:	53c6                	lw	t2,112(sp)
200142e0:	5436                	lw	s0,108(sp)
200142e2:	5526                	lw	a0,104(sp)
200142e4:	5596                	lw	a1,100(sp)
200142e6:	5606                	lw	a2,96(sp)
200142e8:	46f6                	lw	a3,92(sp)
200142ea:	4766                	lw	a4,88(sp)
200142ec:	47d6                	lw	a5,84(sp)
200142ee:	4846                	lw	a6,80(sp)
200142f0:	48b6                	lw	a7,76(sp)
200142f2:	4e26                	lw	t3,72(sp)
200142f4:	4e96                	lw	t4,68(sp)
200142f6:	4f06                	lw	t5,64(sp)
200142f8:	5ff2                	lw	t6,60(sp)
200142fa:	6109                	addi	sp,sp,128
200142fc:	30200073          	mret
	...

2001437a <metal_lc0_interrupt_vector_handler>:
metal_lc0_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:214

/* The metal_lc0_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc0_interrupt_vector_handler(void) {
2001437a:	711d                	addi	sp,sp,-96
2001437c:	ce86                	sw	ra,92(sp)
2001437e:	cc96                	sw	t0,88(sp)
20014380:	ca9a                	sw	t1,84(sp)
20014382:	c89e                	sw	t2,80(sp)
20014384:	c6a2                	sw	s0,76(sp)
20014386:	c4aa                	sw	a0,72(sp)
20014388:	c2ae                	sw	a1,68(sp)
2001438a:	c0b2                	sw	a2,64(sp)
2001438c:	de36                	sw	a3,60(sp)
2001438e:	dc3a                	sw	a4,56(sp)
20014390:	da3e                	sw	a5,52(sp)
20014392:	d842                	sw	a6,48(sp)
20014394:	d646                	sw	a7,44(sp)
20014396:	d472                	sw	t3,40(sp)
20014398:	d276                	sw	t4,36(sp)
2001439a:	d07a                	sw	t5,32(sp)
2001439c:	ce7e                	sw	t6,28(sp)
2001439e:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:215
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC0);
200143a0:	a01ff0ef          	jal	ra,20013da0 <__metal_myhart_id>
200143a4:	872a                	mv	a4,a0
200143a6:	800017b7          	lui	a5,0x80001
200143aa:	070a                	slli	a4,a4,0x2
200143ac:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
200143b0:	97ba                	add	a5,a5,a4
200143b2:	439c                	lw	a5,0(a5)
200143b4:	faf42623          	sw	a5,-84(s0)
200143b8:	fac42783          	lw	a5,-84(s0)
200143bc:	c78d                	beqz	a5,200143e6 <metal_lc0_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:215 (discriminator 1)
200143be:	fac42503          	lw	a0,-84(s0)
200143c2:	961ff0ef          	jal	ra,20013d22 <__metal_driver_cpu_interrupt_controller>
200143c6:	faa42423          	sw	a0,-88(s0)
200143ca:	fa842783          	lw	a5,-88(s0)
200143ce:	2187a783          	lw	a5,536(a5)
200143d2:	faf42223          	sw	a5,-92(s0)
200143d6:	fa842783          	lw	a5,-88(s0)
200143da:	2107a783          	lw	a5,528(a5)
200143de:	fa442583          	lw	a1,-92(s0)
200143e2:	4541                	li	a0,16
200143e4:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:216
}
200143e6:	0001                	nop
200143e8:	40f6                	lw	ra,92(sp)
200143ea:	42e6                	lw	t0,88(sp)
200143ec:	4356                	lw	t1,84(sp)
200143ee:	43c6                	lw	t2,80(sp)
200143f0:	4436                	lw	s0,76(sp)
200143f2:	4526                	lw	a0,72(sp)
200143f4:	4596                	lw	a1,68(sp)
200143f6:	4606                	lw	a2,64(sp)
200143f8:	56f2                	lw	a3,60(sp)
200143fa:	5762                	lw	a4,56(sp)
200143fc:	57d2                	lw	a5,52(sp)
200143fe:	5842                	lw	a6,48(sp)
20014400:	58b2                	lw	a7,44(sp)
20014402:	5e22                	lw	t3,40(sp)
20014404:	5e92                	lw	t4,36(sp)
20014406:	5f02                	lw	t5,32(sp)
20014408:	4ff2                	lw	t6,28(sp)
2001440a:	6125                	addi	sp,sp,96
2001440c:	30200073          	mret

20014410 <metal_lc1_interrupt_vector_handler>:
metal_lc1_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:219

/* The metal_lc1_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc1_interrupt_vector_handler(void) {
20014410:	711d                	addi	sp,sp,-96
20014412:	ce86                	sw	ra,92(sp)
20014414:	cc96                	sw	t0,88(sp)
20014416:	ca9a                	sw	t1,84(sp)
20014418:	c89e                	sw	t2,80(sp)
2001441a:	c6a2                	sw	s0,76(sp)
2001441c:	c4aa                	sw	a0,72(sp)
2001441e:	c2ae                	sw	a1,68(sp)
20014420:	c0b2                	sw	a2,64(sp)
20014422:	de36                	sw	a3,60(sp)
20014424:	dc3a                	sw	a4,56(sp)
20014426:	da3e                	sw	a5,52(sp)
20014428:	d842                	sw	a6,48(sp)
2001442a:	d646                	sw	a7,44(sp)
2001442c:	d472                	sw	t3,40(sp)
2001442e:	d276                	sw	t4,36(sp)
20014430:	d07a                	sw	t5,32(sp)
20014432:	ce7e                	sw	t6,28(sp)
20014434:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:220
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC1);
20014436:	96bff0ef          	jal	ra,20013da0 <__metal_myhart_id>
2001443a:	872a                	mv	a4,a0
2001443c:	800017b7          	lui	a5,0x80001
20014440:	070a                	slli	a4,a4,0x2
20014442:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20014446:	97ba                	add	a5,a5,a4
20014448:	439c                	lw	a5,0(a5)
2001444a:	faf42623          	sw	a5,-84(s0)
2001444e:	fac42783          	lw	a5,-84(s0)
20014452:	c78d                	beqz	a5,2001447c <metal_lc1_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:220 (discriminator 1)
20014454:	fac42503          	lw	a0,-84(s0)
20014458:	8cbff0ef          	jal	ra,20013d22 <__metal_driver_cpu_interrupt_controller>
2001445c:	faa42423          	sw	a0,-88(s0)
20014460:	fa842783          	lw	a5,-88(s0)
20014464:	2307a783          	lw	a5,560(a5)
20014468:	faf42223          	sw	a5,-92(s0)
2001446c:	fa842783          	lw	a5,-88(s0)
20014470:	2287a783          	lw	a5,552(a5)
20014474:	fa442583          	lw	a1,-92(s0)
20014478:	4545                	li	a0,17
2001447a:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:221
}
2001447c:	0001                	nop
2001447e:	40f6                	lw	ra,92(sp)
20014480:	42e6                	lw	t0,88(sp)
20014482:	4356                	lw	t1,84(sp)
20014484:	43c6                	lw	t2,80(sp)
20014486:	4436                	lw	s0,76(sp)
20014488:	4526                	lw	a0,72(sp)
2001448a:	4596                	lw	a1,68(sp)
2001448c:	4606                	lw	a2,64(sp)
2001448e:	56f2                	lw	a3,60(sp)
20014490:	5762                	lw	a4,56(sp)
20014492:	57d2                	lw	a5,52(sp)
20014494:	5842                	lw	a6,48(sp)
20014496:	58b2                	lw	a7,44(sp)
20014498:	5e22                	lw	t3,40(sp)
2001449a:	5e92                	lw	t4,36(sp)
2001449c:	5f02                	lw	t5,32(sp)
2001449e:	4ff2                	lw	t6,28(sp)
200144a0:	6125                	addi	sp,sp,96
200144a2:	30200073          	mret

200144a6 <metal_lc2_interrupt_vector_handler>:
metal_lc2_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:224

/* The metal_lc2_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc2_interrupt_vector_handler(void) {
200144a6:	711d                	addi	sp,sp,-96
200144a8:	ce86                	sw	ra,92(sp)
200144aa:	cc96                	sw	t0,88(sp)
200144ac:	ca9a                	sw	t1,84(sp)
200144ae:	c89e                	sw	t2,80(sp)
200144b0:	c6a2                	sw	s0,76(sp)
200144b2:	c4aa                	sw	a0,72(sp)
200144b4:	c2ae                	sw	a1,68(sp)
200144b6:	c0b2                	sw	a2,64(sp)
200144b8:	de36                	sw	a3,60(sp)
200144ba:	dc3a                	sw	a4,56(sp)
200144bc:	da3e                	sw	a5,52(sp)
200144be:	d842                	sw	a6,48(sp)
200144c0:	d646                	sw	a7,44(sp)
200144c2:	d472                	sw	t3,40(sp)
200144c4:	d276                	sw	t4,36(sp)
200144c6:	d07a                	sw	t5,32(sp)
200144c8:	ce7e                	sw	t6,28(sp)
200144ca:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:225
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC2);
200144cc:	8d5ff0ef          	jal	ra,20013da0 <__metal_myhart_id>
200144d0:	872a                	mv	a4,a0
200144d2:	800017b7          	lui	a5,0x80001
200144d6:	070a                	slli	a4,a4,0x2
200144d8:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
200144dc:	97ba                	add	a5,a5,a4
200144de:	439c                	lw	a5,0(a5)
200144e0:	faf42623          	sw	a5,-84(s0)
200144e4:	fac42783          	lw	a5,-84(s0)
200144e8:	c78d                	beqz	a5,20014512 <metal_lc2_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:225 (discriminator 1)
200144ea:	fac42503          	lw	a0,-84(s0)
200144ee:	835ff0ef          	jal	ra,20013d22 <__metal_driver_cpu_interrupt_controller>
200144f2:	faa42423          	sw	a0,-88(s0)
200144f6:	fa842783          	lw	a5,-88(s0)
200144fa:	2487a783          	lw	a5,584(a5)
200144fe:	faf42223          	sw	a5,-92(s0)
20014502:	fa842783          	lw	a5,-88(s0)
20014506:	2407a783          	lw	a5,576(a5)
2001450a:	fa442583          	lw	a1,-92(s0)
2001450e:	4549                	li	a0,18
20014510:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:226
}
20014512:	0001                	nop
20014514:	40f6                	lw	ra,92(sp)
20014516:	42e6                	lw	t0,88(sp)
20014518:	4356                	lw	t1,84(sp)
2001451a:	43c6                	lw	t2,80(sp)
2001451c:	4436                	lw	s0,76(sp)
2001451e:	4526                	lw	a0,72(sp)
20014520:	4596                	lw	a1,68(sp)
20014522:	4606                	lw	a2,64(sp)
20014524:	56f2                	lw	a3,60(sp)
20014526:	5762                	lw	a4,56(sp)
20014528:	57d2                	lw	a5,52(sp)
2001452a:	5842                	lw	a6,48(sp)
2001452c:	58b2                	lw	a7,44(sp)
2001452e:	5e22                	lw	t3,40(sp)
20014530:	5e92                	lw	t4,36(sp)
20014532:	5f02                	lw	t5,32(sp)
20014534:	4ff2                	lw	t6,28(sp)
20014536:	6125                	addi	sp,sp,96
20014538:	30200073          	mret

2001453c <metal_lc3_interrupt_vector_handler>:
metal_lc3_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:229

/* The metal_lc3_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc3_interrupt_vector_handler(void) {
2001453c:	711d                	addi	sp,sp,-96
2001453e:	ce86                	sw	ra,92(sp)
20014540:	cc96                	sw	t0,88(sp)
20014542:	ca9a                	sw	t1,84(sp)
20014544:	c89e                	sw	t2,80(sp)
20014546:	c6a2                	sw	s0,76(sp)
20014548:	c4aa                	sw	a0,72(sp)
2001454a:	c2ae                	sw	a1,68(sp)
2001454c:	c0b2                	sw	a2,64(sp)
2001454e:	de36                	sw	a3,60(sp)
20014550:	dc3a                	sw	a4,56(sp)
20014552:	da3e                	sw	a5,52(sp)
20014554:	d842                	sw	a6,48(sp)
20014556:	d646                	sw	a7,44(sp)
20014558:	d472                	sw	t3,40(sp)
2001455a:	d276                	sw	t4,36(sp)
2001455c:	d07a                	sw	t5,32(sp)
2001455e:	ce7e                	sw	t6,28(sp)
20014560:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:230
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC3);
20014562:	83fff0ef          	jal	ra,20013da0 <__metal_myhart_id>
20014566:	872a                	mv	a4,a0
20014568:	800017b7          	lui	a5,0x80001
2001456c:	070a                	slli	a4,a4,0x2
2001456e:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20014572:	97ba                	add	a5,a5,a4
20014574:	439c                	lw	a5,0(a5)
20014576:	faf42623          	sw	a5,-84(s0)
2001457a:	fac42783          	lw	a5,-84(s0)
2001457e:	c78d                	beqz	a5,200145a8 <metal_lc3_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:230 (discriminator 1)
20014580:	fac42503          	lw	a0,-84(s0)
20014584:	f9eff0ef          	jal	ra,20013d22 <__metal_driver_cpu_interrupt_controller>
20014588:	faa42423          	sw	a0,-88(s0)
2001458c:	fa842783          	lw	a5,-88(s0)
20014590:	2607a783          	lw	a5,608(a5)
20014594:	faf42223          	sw	a5,-92(s0)
20014598:	fa842783          	lw	a5,-88(s0)
2001459c:	2587a783          	lw	a5,600(a5)
200145a0:	fa442583          	lw	a1,-92(s0)
200145a4:	454d                	li	a0,19
200145a6:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:231
}
200145a8:	0001                	nop
200145aa:	40f6                	lw	ra,92(sp)
200145ac:	42e6                	lw	t0,88(sp)
200145ae:	4356                	lw	t1,84(sp)
200145b0:	43c6                	lw	t2,80(sp)
200145b2:	4436                	lw	s0,76(sp)
200145b4:	4526                	lw	a0,72(sp)
200145b6:	4596                	lw	a1,68(sp)
200145b8:	4606                	lw	a2,64(sp)
200145ba:	56f2                	lw	a3,60(sp)
200145bc:	5762                	lw	a4,56(sp)
200145be:	57d2                	lw	a5,52(sp)
200145c0:	5842                	lw	a6,48(sp)
200145c2:	58b2                	lw	a7,44(sp)
200145c4:	5e22                	lw	t3,40(sp)
200145c6:	5e92                	lw	t4,36(sp)
200145c8:	5f02                	lw	t5,32(sp)
200145ca:	4ff2                	lw	t6,28(sp)
200145cc:	6125                	addi	sp,sp,96
200145ce:	30200073          	mret

200145d2 <metal_lc4_interrupt_vector_handler>:
metal_lc4_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:234

/* The metal_lc4_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc4_interrupt_vector_handler(void) {
200145d2:	711d                	addi	sp,sp,-96
200145d4:	ce86                	sw	ra,92(sp)
200145d6:	cc96                	sw	t0,88(sp)
200145d8:	ca9a                	sw	t1,84(sp)
200145da:	c89e                	sw	t2,80(sp)
200145dc:	c6a2                	sw	s0,76(sp)
200145de:	c4aa                	sw	a0,72(sp)
200145e0:	c2ae                	sw	a1,68(sp)
200145e2:	c0b2                	sw	a2,64(sp)
200145e4:	de36                	sw	a3,60(sp)
200145e6:	dc3a                	sw	a4,56(sp)
200145e8:	da3e                	sw	a5,52(sp)
200145ea:	d842                	sw	a6,48(sp)
200145ec:	d646                	sw	a7,44(sp)
200145ee:	d472                	sw	t3,40(sp)
200145f0:	d276                	sw	t4,36(sp)
200145f2:	d07a                	sw	t5,32(sp)
200145f4:	ce7e                	sw	t6,28(sp)
200145f6:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:235
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC4);
200145f8:	fa8ff0ef          	jal	ra,20013da0 <__metal_myhart_id>
200145fc:	872a                	mv	a4,a0
200145fe:	800017b7          	lui	a5,0x80001
20014602:	070a                	slli	a4,a4,0x2
20014604:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20014608:	97ba                	add	a5,a5,a4
2001460a:	439c                	lw	a5,0(a5)
2001460c:	faf42623          	sw	a5,-84(s0)
20014610:	fac42783          	lw	a5,-84(s0)
20014614:	c78d                	beqz	a5,2001463e <metal_lc4_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:235 (discriminator 1)
20014616:	fac42503          	lw	a0,-84(s0)
2001461a:	f08ff0ef          	jal	ra,20013d22 <__metal_driver_cpu_interrupt_controller>
2001461e:	faa42423          	sw	a0,-88(s0)
20014622:	fa842783          	lw	a5,-88(s0)
20014626:	2787a783          	lw	a5,632(a5)
2001462a:	faf42223          	sw	a5,-92(s0)
2001462e:	fa842783          	lw	a5,-88(s0)
20014632:	2707a783          	lw	a5,624(a5)
20014636:	fa442583          	lw	a1,-92(s0)
2001463a:	4551                	li	a0,20
2001463c:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:236
}
2001463e:	0001                	nop
20014640:	40f6                	lw	ra,92(sp)
20014642:	42e6                	lw	t0,88(sp)
20014644:	4356                	lw	t1,84(sp)
20014646:	43c6                	lw	t2,80(sp)
20014648:	4436                	lw	s0,76(sp)
2001464a:	4526                	lw	a0,72(sp)
2001464c:	4596                	lw	a1,68(sp)
2001464e:	4606                	lw	a2,64(sp)
20014650:	56f2                	lw	a3,60(sp)
20014652:	5762                	lw	a4,56(sp)
20014654:	57d2                	lw	a5,52(sp)
20014656:	5842                	lw	a6,48(sp)
20014658:	58b2                	lw	a7,44(sp)
2001465a:	5e22                	lw	t3,40(sp)
2001465c:	5e92                	lw	t4,36(sp)
2001465e:	5f02                	lw	t5,32(sp)
20014660:	4ff2                	lw	t6,28(sp)
20014662:	6125                	addi	sp,sp,96
20014664:	30200073          	mret

20014668 <metal_lc5_interrupt_vector_handler>:
metal_lc5_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:239

/* The metal_lc5_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc5_interrupt_vector_handler(void) {
20014668:	711d                	addi	sp,sp,-96
2001466a:	ce86                	sw	ra,92(sp)
2001466c:	cc96                	sw	t0,88(sp)
2001466e:	ca9a                	sw	t1,84(sp)
20014670:	c89e                	sw	t2,80(sp)
20014672:	c6a2                	sw	s0,76(sp)
20014674:	c4aa                	sw	a0,72(sp)
20014676:	c2ae                	sw	a1,68(sp)
20014678:	c0b2                	sw	a2,64(sp)
2001467a:	de36                	sw	a3,60(sp)
2001467c:	dc3a                	sw	a4,56(sp)
2001467e:	da3e                	sw	a5,52(sp)
20014680:	d842                	sw	a6,48(sp)
20014682:	d646                	sw	a7,44(sp)
20014684:	d472                	sw	t3,40(sp)
20014686:	d276                	sw	t4,36(sp)
20014688:	d07a                	sw	t5,32(sp)
2001468a:	ce7e                	sw	t6,28(sp)
2001468c:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:240
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC5);
2001468e:	f12ff0ef          	jal	ra,20013da0 <__metal_myhart_id>
20014692:	872a                	mv	a4,a0
20014694:	800017b7          	lui	a5,0x80001
20014698:	070a                	slli	a4,a4,0x2
2001469a:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
2001469e:	97ba                	add	a5,a5,a4
200146a0:	439c                	lw	a5,0(a5)
200146a2:	faf42623          	sw	a5,-84(s0)
200146a6:	fac42783          	lw	a5,-84(s0)
200146aa:	c78d                	beqz	a5,200146d4 <metal_lc5_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:240 (discriminator 1)
200146ac:	fac42503          	lw	a0,-84(s0)
200146b0:	e72ff0ef          	jal	ra,20013d22 <__metal_driver_cpu_interrupt_controller>
200146b4:	faa42423          	sw	a0,-88(s0)
200146b8:	fa842783          	lw	a5,-88(s0)
200146bc:	2907a783          	lw	a5,656(a5)
200146c0:	faf42223          	sw	a5,-92(s0)
200146c4:	fa842783          	lw	a5,-88(s0)
200146c8:	2887a783          	lw	a5,648(a5)
200146cc:	fa442583          	lw	a1,-92(s0)
200146d0:	4555                	li	a0,21
200146d2:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:241
}
200146d4:	0001                	nop
200146d6:	40f6                	lw	ra,92(sp)
200146d8:	42e6                	lw	t0,88(sp)
200146da:	4356                	lw	t1,84(sp)
200146dc:	43c6                	lw	t2,80(sp)
200146de:	4436                	lw	s0,76(sp)
200146e0:	4526                	lw	a0,72(sp)
200146e2:	4596                	lw	a1,68(sp)
200146e4:	4606                	lw	a2,64(sp)
200146e6:	56f2                	lw	a3,60(sp)
200146e8:	5762                	lw	a4,56(sp)
200146ea:	57d2                	lw	a5,52(sp)
200146ec:	5842                	lw	a6,48(sp)
200146ee:	58b2                	lw	a7,44(sp)
200146f0:	5e22                	lw	t3,40(sp)
200146f2:	5e92                	lw	t4,36(sp)
200146f4:	5f02                	lw	t5,32(sp)
200146f6:	4ff2                	lw	t6,28(sp)
200146f8:	6125                	addi	sp,sp,96
200146fa:	30200073          	mret

200146fe <metal_lc6_interrupt_vector_handler>:
metal_lc6_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:244

/* The metal_lc6_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc6_interrupt_vector_handler(void) {
200146fe:	711d                	addi	sp,sp,-96
20014700:	ce86                	sw	ra,92(sp)
20014702:	cc96                	sw	t0,88(sp)
20014704:	ca9a                	sw	t1,84(sp)
20014706:	c89e                	sw	t2,80(sp)
20014708:	c6a2                	sw	s0,76(sp)
2001470a:	c4aa                	sw	a0,72(sp)
2001470c:	c2ae                	sw	a1,68(sp)
2001470e:	c0b2                	sw	a2,64(sp)
20014710:	de36                	sw	a3,60(sp)
20014712:	dc3a                	sw	a4,56(sp)
20014714:	da3e                	sw	a5,52(sp)
20014716:	d842                	sw	a6,48(sp)
20014718:	d646                	sw	a7,44(sp)
2001471a:	d472                	sw	t3,40(sp)
2001471c:	d276                	sw	t4,36(sp)
2001471e:	d07a                	sw	t5,32(sp)
20014720:	ce7e                	sw	t6,28(sp)
20014722:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:245
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC6);
20014724:	e7cff0ef          	jal	ra,20013da0 <__metal_myhart_id>
20014728:	872a                	mv	a4,a0
2001472a:	800017b7          	lui	a5,0x80001
2001472e:	070a                	slli	a4,a4,0x2
20014730:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20014734:	97ba                	add	a5,a5,a4
20014736:	439c                	lw	a5,0(a5)
20014738:	faf42623          	sw	a5,-84(s0)
2001473c:	fac42783          	lw	a5,-84(s0)
20014740:	c78d                	beqz	a5,2001476a <metal_lc6_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:245 (discriminator 1)
20014742:	fac42503          	lw	a0,-84(s0)
20014746:	ddcff0ef          	jal	ra,20013d22 <__metal_driver_cpu_interrupt_controller>
2001474a:	faa42423          	sw	a0,-88(s0)
2001474e:	fa842783          	lw	a5,-88(s0)
20014752:	2a87a783          	lw	a5,680(a5)
20014756:	faf42223          	sw	a5,-92(s0)
2001475a:	fa842783          	lw	a5,-88(s0)
2001475e:	2a07a783          	lw	a5,672(a5)
20014762:	fa442583          	lw	a1,-92(s0)
20014766:	4559                	li	a0,22
20014768:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:246
}
2001476a:	0001                	nop
2001476c:	40f6                	lw	ra,92(sp)
2001476e:	42e6                	lw	t0,88(sp)
20014770:	4356                	lw	t1,84(sp)
20014772:	43c6                	lw	t2,80(sp)
20014774:	4436                	lw	s0,76(sp)
20014776:	4526                	lw	a0,72(sp)
20014778:	4596                	lw	a1,68(sp)
2001477a:	4606                	lw	a2,64(sp)
2001477c:	56f2                	lw	a3,60(sp)
2001477e:	5762                	lw	a4,56(sp)
20014780:	57d2                	lw	a5,52(sp)
20014782:	5842                	lw	a6,48(sp)
20014784:	58b2                	lw	a7,44(sp)
20014786:	5e22                	lw	t3,40(sp)
20014788:	5e92                	lw	t4,36(sp)
2001478a:	5f02                	lw	t5,32(sp)
2001478c:	4ff2                	lw	t6,28(sp)
2001478e:	6125                	addi	sp,sp,96
20014790:	30200073          	mret

20014794 <metal_lc7_interrupt_vector_handler>:
metal_lc7_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:249

/* The metal_lc7_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc7_interrupt_vector_handler(void) {
20014794:	711d                	addi	sp,sp,-96
20014796:	ce86                	sw	ra,92(sp)
20014798:	cc96                	sw	t0,88(sp)
2001479a:	ca9a                	sw	t1,84(sp)
2001479c:	c89e                	sw	t2,80(sp)
2001479e:	c6a2                	sw	s0,76(sp)
200147a0:	c4aa                	sw	a0,72(sp)
200147a2:	c2ae                	sw	a1,68(sp)
200147a4:	c0b2                	sw	a2,64(sp)
200147a6:	de36                	sw	a3,60(sp)
200147a8:	dc3a                	sw	a4,56(sp)
200147aa:	da3e                	sw	a5,52(sp)
200147ac:	d842                	sw	a6,48(sp)
200147ae:	d646                	sw	a7,44(sp)
200147b0:	d472                	sw	t3,40(sp)
200147b2:	d276                	sw	t4,36(sp)
200147b4:	d07a                	sw	t5,32(sp)
200147b6:	ce7e                	sw	t6,28(sp)
200147b8:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:250
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC7);
200147ba:	de6ff0ef          	jal	ra,20013da0 <__metal_myhart_id>
200147be:	872a                	mv	a4,a0
200147c0:	800017b7          	lui	a5,0x80001
200147c4:	070a                	slli	a4,a4,0x2
200147c6:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
200147ca:	97ba                	add	a5,a5,a4
200147cc:	439c                	lw	a5,0(a5)
200147ce:	faf42623          	sw	a5,-84(s0)
200147d2:	fac42783          	lw	a5,-84(s0)
200147d6:	c78d                	beqz	a5,20014800 <metal_lc7_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:250 (discriminator 1)
200147d8:	fac42503          	lw	a0,-84(s0)
200147dc:	d46ff0ef          	jal	ra,20013d22 <__metal_driver_cpu_interrupt_controller>
200147e0:	faa42423          	sw	a0,-88(s0)
200147e4:	fa842783          	lw	a5,-88(s0)
200147e8:	2c07a783          	lw	a5,704(a5)
200147ec:	faf42223          	sw	a5,-92(s0)
200147f0:	fa842783          	lw	a5,-88(s0)
200147f4:	2b87a783          	lw	a5,696(a5)
200147f8:	fa442583          	lw	a1,-92(s0)
200147fc:	455d                	li	a0,23
200147fe:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:251
}
20014800:	0001                	nop
20014802:	40f6                	lw	ra,92(sp)
20014804:	42e6                	lw	t0,88(sp)
20014806:	4356                	lw	t1,84(sp)
20014808:	43c6                	lw	t2,80(sp)
2001480a:	4436                	lw	s0,76(sp)
2001480c:	4526                	lw	a0,72(sp)
2001480e:	4596                	lw	a1,68(sp)
20014810:	4606                	lw	a2,64(sp)
20014812:	56f2                	lw	a3,60(sp)
20014814:	5762                	lw	a4,56(sp)
20014816:	57d2                	lw	a5,52(sp)
20014818:	5842                	lw	a6,48(sp)
2001481a:	58b2                	lw	a7,44(sp)
2001481c:	5e22                	lw	t3,40(sp)
2001481e:	5e92                	lw	t4,36(sp)
20014820:	5f02                	lw	t5,32(sp)
20014822:	4ff2                	lw	t6,28(sp)
20014824:	6125                	addi	sp,sp,96
20014826:	30200073          	mret

2001482a <metal_lc8_interrupt_vector_handler>:
metal_lc8_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:254

/* The metal_lc8_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc8_interrupt_vector_handler(void) {
2001482a:	711d                	addi	sp,sp,-96
2001482c:	ce86                	sw	ra,92(sp)
2001482e:	cc96                	sw	t0,88(sp)
20014830:	ca9a                	sw	t1,84(sp)
20014832:	c89e                	sw	t2,80(sp)
20014834:	c6a2                	sw	s0,76(sp)
20014836:	c4aa                	sw	a0,72(sp)
20014838:	c2ae                	sw	a1,68(sp)
2001483a:	c0b2                	sw	a2,64(sp)
2001483c:	de36                	sw	a3,60(sp)
2001483e:	dc3a                	sw	a4,56(sp)
20014840:	da3e                	sw	a5,52(sp)
20014842:	d842                	sw	a6,48(sp)
20014844:	d646                	sw	a7,44(sp)
20014846:	d472                	sw	t3,40(sp)
20014848:	d276                	sw	t4,36(sp)
2001484a:	d07a                	sw	t5,32(sp)
2001484c:	ce7e                	sw	t6,28(sp)
2001484e:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:255
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC8);
20014850:	d50ff0ef          	jal	ra,20013da0 <__metal_myhart_id>
20014854:	872a                	mv	a4,a0
20014856:	800017b7          	lui	a5,0x80001
2001485a:	070a                	slli	a4,a4,0x2
2001485c:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20014860:	97ba                	add	a5,a5,a4
20014862:	439c                	lw	a5,0(a5)
20014864:	faf42623          	sw	a5,-84(s0)
20014868:	fac42783          	lw	a5,-84(s0)
2001486c:	c78d                	beqz	a5,20014896 <metal_lc8_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:255 (discriminator 1)
2001486e:	fac42503          	lw	a0,-84(s0)
20014872:	cb0ff0ef          	jal	ra,20013d22 <__metal_driver_cpu_interrupt_controller>
20014876:	faa42423          	sw	a0,-88(s0)
2001487a:	fa842783          	lw	a5,-88(s0)
2001487e:	2d87a783          	lw	a5,728(a5)
20014882:	faf42223          	sw	a5,-92(s0)
20014886:	fa842783          	lw	a5,-88(s0)
2001488a:	2d07a783          	lw	a5,720(a5)
2001488e:	fa442583          	lw	a1,-92(s0)
20014892:	4561                	li	a0,24
20014894:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:256
}
20014896:	0001                	nop
20014898:	40f6                	lw	ra,92(sp)
2001489a:	42e6                	lw	t0,88(sp)
2001489c:	4356                	lw	t1,84(sp)
2001489e:	43c6                	lw	t2,80(sp)
200148a0:	4436                	lw	s0,76(sp)
200148a2:	4526                	lw	a0,72(sp)
200148a4:	4596                	lw	a1,68(sp)
200148a6:	4606                	lw	a2,64(sp)
200148a8:	56f2                	lw	a3,60(sp)
200148aa:	5762                	lw	a4,56(sp)
200148ac:	57d2                	lw	a5,52(sp)
200148ae:	5842                	lw	a6,48(sp)
200148b0:	58b2                	lw	a7,44(sp)
200148b2:	5e22                	lw	t3,40(sp)
200148b4:	5e92                	lw	t4,36(sp)
200148b6:	5f02                	lw	t5,32(sp)
200148b8:	4ff2                	lw	t6,28(sp)
200148ba:	6125                	addi	sp,sp,96
200148bc:	30200073          	mret

200148c0 <metal_lc9_interrupt_vector_handler>:
metal_lc9_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:259

/* The metal_lc9_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc9_interrupt_vector_handler(void) {
200148c0:	711d                	addi	sp,sp,-96
200148c2:	ce86                	sw	ra,92(sp)
200148c4:	cc96                	sw	t0,88(sp)
200148c6:	ca9a                	sw	t1,84(sp)
200148c8:	c89e                	sw	t2,80(sp)
200148ca:	c6a2                	sw	s0,76(sp)
200148cc:	c4aa                	sw	a0,72(sp)
200148ce:	c2ae                	sw	a1,68(sp)
200148d0:	c0b2                	sw	a2,64(sp)
200148d2:	de36                	sw	a3,60(sp)
200148d4:	dc3a                	sw	a4,56(sp)
200148d6:	da3e                	sw	a5,52(sp)
200148d8:	d842                	sw	a6,48(sp)
200148da:	d646                	sw	a7,44(sp)
200148dc:	d472                	sw	t3,40(sp)
200148de:	d276                	sw	t4,36(sp)
200148e0:	d07a                	sw	t5,32(sp)
200148e2:	ce7e                	sw	t6,28(sp)
200148e4:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:260
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC9);
200148e6:	cbaff0ef          	jal	ra,20013da0 <__metal_myhart_id>
200148ea:	872a                	mv	a4,a0
200148ec:	800017b7          	lui	a5,0x80001
200148f0:	070a                	slli	a4,a4,0x2
200148f2:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
200148f6:	97ba                	add	a5,a5,a4
200148f8:	439c                	lw	a5,0(a5)
200148fa:	faf42623          	sw	a5,-84(s0)
200148fe:	fac42783          	lw	a5,-84(s0)
20014902:	c78d                	beqz	a5,2001492c <metal_lc9_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:260 (discriminator 1)
20014904:	fac42503          	lw	a0,-84(s0)
20014908:	c1aff0ef          	jal	ra,20013d22 <__metal_driver_cpu_interrupt_controller>
2001490c:	faa42423          	sw	a0,-88(s0)
20014910:	fa842783          	lw	a5,-88(s0)
20014914:	2f07a783          	lw	a5,752(a5)
20014918:	faf42223          	sw	a5,-92(s0)
2001491c:	fa842783          	lw	a5,-88(s0)
20014920:	2e87a783          	lw	a5,744(a5)
20014924:	fa442583          	lw	a1,-92(s0)
20014928:	4565                	li	a0,25
2001492a:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:261
}
2001492c:	0001                	nop
2001492e:	40f6                	lw	ra,92(sp)
20014930:	42e6                	lw	t0,88(sp)
20014932:	4356                	lw	t1,84(sp)
20014934:	43c6                	lw	t2,80(sp)
20014936:	4436                	lw	s0,76(sp)
20014938:	4526                	lw	a0,72(sp)
2001493a:	4596                	lw	a1,68(sp)
2001493c:	4606                	lw	a2,64(sp)
2001493e:	56f2                	lw	a3,60(sp)
20014940:	5762                	lw	a4,56(sp)
20014942:	57d2                	lw	a5,52(sp)
20014944:	5842                	lw	a6,48(sp)
20014946:	58b2                	lw	a7,44(sp)
20014948:	5e22                	lw	t3,40(sp)
2001494a:	5e92                	lw	t4,36(sp)
2001494c:	5f02                	lw	t5,32(sp)
2001494e:	4ff2                	lw	t6,28(sp)
20014950:	6125                	addi	sp,sp,96
20014952:	30200073          	mret

20014956 <metal_lc10_interrupt_vector_handler>:
metal_lc10_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:265

/* The metal_lc10_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc10_interrupt_vector_handler(void) {
20014956:	711d                	addi	sp,sp,-96
20014958:	ce86                	sw	ra,92(sp)
2001495a:	cc96                	sw	t0,88(sp)
2001495c:	ca9a                	sw	t1,84(sp)
2001495e:	c89e                	sw	t2,80(sp)
20014960:	c6a2                	sw	s0,76(sp)
20014962:	c4aa                	sw	a0,72(sp)
20014964:	c2ae                	sw	a1,68(sp)
20014966:	c0b2                	sw	a2,64(sp)
20014968:	de36                	sw	a3,60(sp)
2001496a:	dc3a                	sw	a4,56(sp)
2001496c:	da3e                	sw	a5,52(sp)
2001496e:	d842                	sw	a6,48(sp)
20014970:	d646                	sw	a7,44(sp)
20014972:	d472                	sw	t3,40(sp)
20014974:	d276                	sw	t4,36(sp)
20014976:	d07a                	sw	t5,32(sp)
20014978:	ce7e                	sw	t6,28(sp)
2001497a:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:266
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC10);
2001497c:	c24ff0ef          	jal	ra,20013da0 <__metal_myhart_id>
20014980:	872a                	mv	a4,a0
20014982:	800017b7          	lui	a5,0x80001
20014986:	070a                	slli	a4,a4,0x2
20014988:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
2001498c:	97ba                	add	a5,a5,a4
2001498e:	439c                	lw	a5,0(a5)
20014990:	faf42623          	sw	a5,-84(s0)
20014994:	fac42783          	lw	a5,-84(s0)
20014998:	c78d                	beqz	a5,200149c2 <metal_lc10_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:266 (discriminator 1)
2001499a:	fac42503          	lw	a0,-84(s0)
2001499e:	b84ff0ef          	jal	ra,20013d22 <__metal_driver_cpu_interrupt_controller>
200149a2:	faa42423          	sw	a0,-88(s0)
200149a6:	fa842783          	lw	a5,-88(s0)
200149aa:	3087a783          	lw	a5,776(a5)
200149ae:	faf42223          	sw	a5,-92(s0)
200149b2:	fa842783          	lw	a5,-88(s0)
200149b6:	3007a783          	lw	a5,768(a5)
200149ba:	fa442583          	lw	a1,-92(s0)
200149be:	4569                	li	a0,26
200149c0:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:267
}
200149c2:	0001                	nop
200149c4:	40f6                	lw	ra,92(sp)
200149c6:	42e6                	lw	t0,88(sp)
200149c8:	4356                	lw	t1,84(sp)
200149ca:	43c6                	lw	t2,80(sp)
200149cc:	4436                	lw	s0,76(sp)
200149ce:	4526                	lw	a0,72(sp)
200149d0:	4596                	lw	a1,68(sp)
200149d2:	4606                	lw	a2,64(sp)
200149d4:	56f2                	lw	a3,60(sp)
200149d6:	5762                	lw	a4,56(sp)
200149d8:	57d2                	lw	a5,52(sp)
200149da:	5842                	lw	a6,48(sp)
200149dc:	58b2                	lw	a7,44(sp)
200149de:	5e22                	lw	t3,40(sp)
200149e0:	5e92                	lw	t4,36(sp)
200149e2:	5f02                	lw	t5,32(sp)
200149e4:	4ff2                	lw	t6,28(sp)
200149e6:	6125                	addi	sp,sp,96
200149e8:	30200073          	mret

200149ec <metal_lc11_interrupt_vector_handler>:
metal_lc11_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:271

/* The metal_lc11_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc11_interrupt_vector_handler(void) {
200149ec:	711d                	addi	sp,sp,-96
200149ee:	ce86                	sw	ra,92(sp)
200149f0:	cc96                	sw	t0,88(sp)
200149f2:	ca9a                	sw	t1,84(sp)
200149f4:	c89e                	sw	t2,80(sp)
200149f6:	c6a2                	sw	s0,76(sp)
200149f8:	c4aa                	sw	a0,72(sp)
200149fa:	c2ae                	sw	a1,68(sp)
200149fc:	c0b2                	sw	a2,64(sp)
200149fe:	de36                	sw	a3,60(sp)
20014a00:	dc3a                	sw	a4,56(sp)
20014a02:	da3e                	sw	a5,52(sp)
20014a04:	d842                	sw	a6,48(sp)
20014a06:	d646                	sw	a7,44(sp)
20014a08:	d472                	sw	t3,40(sp)
20014a0a:	d276                	sw	t4,36(sp)
20014a0c:	d07a                	sw	t5,32(sp)
20014a0e:	ce7e                	sw	t6,28(sp)
20014a10:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:272
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC11);
20014a12:	b8eff0ef          	jal	ra,20013da0 <__metal_myhart_id>
20014a16:	872a                	mv	a4,a0
20014a18:	800017b7          	lui	a5,0x80001
20014a1c:	070a                	slli	a4,a4,0x2
20014a1e:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20014a22:	97ba                	add	a5,a5,a4
20014a24:	439c                	lw	a5,0(a5)
20014a26:	faf42623          	sw	a5,-84(s0)
20014a2a:	fac42783          	lw	a5,-84(s0)
20014a2e:	c78d                	beqz	a5,20014a58 <metal_lc11_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:272 (discriminator 1)
20014a30:	fac42503          	lw	a0,-84(s0)
20014a34:	aeeff0ef          	jal	ra,20013d22 <__metal_driver_cpu_interrupt_controller>
20014a38:	faa42423          	sw	a0,-88(s0)
20014a3c:	fa842783          	lw	a5,-88(s0)
20014a40:	3207a783          	lw	a5,800(a5)
20014a44:	faf42223          	sw	a5,-92(s0)
20014a48:	fa842783          	lw	a5,-88(s0)
20014a4c:	3187a783          	lw	a5,792(a5)
20014a50:	fa442583          	lw	a1,-92(s0)
20014a54:	456d                	li	a0,27
20014a56:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:273
}
20014a58:	0001                	nop
20014a5a:	40f6                	lw	ra,92(sp)
20014a5c:	42e6                	lw	t0,88(sp)
20014a5e:	4356                	lw	t1,84(sp)
20014a60:	43c6                	lw	t2,80(sp)
20014a62:	4436                	lw	s0,76(sp)
20014a64:	4526                	lw	a0,72(sp)
20014a66:	4596                	lw	a1,68(sp)
20014a68:	4606                	lw	a2,64(sp)
20014a6a:	56f2                	lw	a3,60(sp)
20014a6c:	5762                	lw	a4,56(sp)
20014a6e:	57d2                	lw	a5,52(sp)
20014a70:	5842                	lw	a6,48(sp)
20014a72:	58b2                	lw	a7,44(sp)
20014a74:	5e22                	lw	t3,40(sp)
20014a76:	5e92                	lw	t4,36(sp)
20014a78:	5f02                	lw	t5,32(sp)
20014a7a:	4ff2                	lw	t6,28(sp)
20014a7c:	6125                	addi	sp,sp,96
20014a7e:	30200073          	mret

20014a82 <metal_lc12_interrupt_vector_handler>:
metal_lc12_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:277

/* The metal_lc12_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc12_interrupt_vector_handler(void) {
20014a82:	711d                	addi	sp,sp,-96
20014a84:	ce86                	sw	ra,92(sp)
20014a86:	cc96                	sw	t0,88(sp)
20014a88:	ca9a                	sw	t1,84(sp)
20014a8a:	c89e                	sw	t2,80(sp)
20014a8c:	c6a2                	sw	s0,76(sp)
20014a8e:	c4aa                	sw	a0,72(sp)
20014a90:	c2ae                	sw	a1,68(sp)
20014a92:	c0b2                	sw	a2,64(sp)
20014a94:	de36                	sw	a3,60(sp)
20014a96:	dc3a                	sw	a4,56(sp)
20014a98:	da3e                	sw	a5,52(sp)
20014a9a:	d842                	sw	a6,48(sp)
20014a9c:	d646                	sw	a7,44(sp)
20014a9e:	d472                	sw	t3,40(sp)
20014aa0:	d276                	sw	t4,36(sp)
20014aa2:	d07a                	sw	t5,32(sp)
20014aa4:	ce7e                	sw	t6,28(sp)
20014aa6:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:278
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC12);
20014aa8:	af8ff0ef          	jal	ra,20013da0 <__metal_myhart_id>
20014aac:	872a                	mv	a4,a0
20014aae:	800017b7          	lui	a5,0x80001
20014ab2:	070a                	slli	a4,a4,0x2
20014ab4:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20014ab8:	97ba                	add	a5,a5,a4
20014aba:	439c                	lw	a5,0(a5)
20014abc:	faf42623          	sw	a5,-84(s0)
20014ac0:	fac42783          	lw	a5,-84(s0)
20014ac4:	c78d                	beqz	a5,20014aee <metal_lc12_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:278 (discriminator 1)
20014ac6:	fac42503          	lw	a0,-84(s0)
20014aca:	a58ff0ef          	jal	ra,20013d22 <__metal_driver_cpu_interrupt_controller>
20014ace:	faa42423          	sw	a0,-88(s0)
20014ad2:	fa842783          	lw	a5,-88(s0)
20014ad6:	3387a783          	lw	a5,824(a5)
20014ada:	faf42223          	sw	a5,-92(s0)
20014ade:	fa842783          	lw	a5,-88(s0)
20014ae2:	3307a783          	lw	a5,816(a5)
20014ae6:	fa442583          	lw	a1,-92(s0)
20014aea:	4571                	li	a0,28
20014aec:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:279
}
20014aee:	0001                	nop
20014af0:	40f6                	lw	ra,92(sp)
20014af2:	42e6                	lw	t0,88(sp)
20014af4:	4356                	lw	t1,84(sp)
20014af6:	43c6                	lw	t2,80(sp)
20014af8:	4436                	lw	s0,76(sp)
20014afa:	4526                	lw	a0,72(sp)
20014afc:	4596                	lw	a1,68(sp)
20014afe:	4606                	lw	a2,64(sp)
20014b00:	56f2                	lw	a3,60(sp)
20014b02:	5762                	lw	a4,56(sp)
20014b04:	57d2                	lw	a5,52(sp)
20014b06:	5842                	lw	a6,48(sp)
20014b08:	58b2                	lw	a7,44(sp)
20014b0a:	5e22                	lw	t3,40(sp)
20014b0c:	5e92                	lw	t4,36(sp)
20014b0e:	5f02                	lw	t5,32(sp)
20014b10:	4ff2                	lw	t6,28(sp)
20014b12:	6125                	addi	sp,sp,96
20014b14:	30200073          	mret

20014b18 <metal_lc13_interrupt_vector_handler>:
metal_lc13_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:283

/* The metal_lc13_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc13_interrupt_vector_handler(void) {
20014b18:	711d                	addi	sp,sp,-96
20014b1a:	ce86                	sw	ra,92(sp)
20014b1c:	cc96                	sw	t0,88(sp)
20014b1e:	ca9a                	sw	t1,84(sp)
20014b20:	c89e                	sw	t2,80(sp)
20014b22:	c6a2                	sw	s0,76(sp)
20014b24:	c4aa                	sw	a0,72(sp)
20014b26:	c2ae                	sw	a1,68(sp)
20014b28:	c0b2                	sw	a2,64(sp)
20014b2a:	de36                	sw	a3,60(sp)
20014b2c:	dc3a                	sw	a4,56(sp)
20014b2e:	da3e                	sw	a5,52(sp)
20014b30:	d842                	sw	a6,48(sp)
20014b32:	d646                	sw	a7,44(sp)
20014b34:	d472                	sw	t3,40(sp)
20014b36:	d276                	sw	t4,36(sp)
20014b38:	d07a                	sw	t5,32(sp)
20014b3a:	ce7e                	sw	t6,28(sp)
20014b3c:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:284
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC13);
20014b3e:	a62ff0ef          	jal	ra,20013da0 <__metal_myhart_id>
20014b42:	872a                	mv	a4,a0
20014b44:	800017b7          	lui	a5,0x80001
20014b48:	070a                	slli	a4,a4,0x2
20014b4a:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20014b4e:	97ba                	add	a5,a5,a4
20014b50:	439c                	lw	a5,0(a5)
20014b52:	faf42623          	sw	a5,-84(s0)
20014b56:	fac42783          	lw	a5,-84(s0)
20014b5a:	c78d                	beqz	a5,20014b84 <metal_lc13_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:284 (discriminator 1)
20014b5c:	fac42503          	lw	a0,-84(s0)
20014b60:	9c2ff0ef          	jal	ra,20013d22 <__metal_driver_cpu_interrupt_controller>
20014b64:	faa42423          	sw	a0,-88(s0)
20014b68:	fa842783          	lw	a5,-88(s0)
20014b6c:	3507a783          	lw	a5,848(a5)
20014b70:	faf42223          	sw	a5,-92(s0)
20014b74:	fa842783          	lw	a5,-88(s0)
20014b78:	3487a783          	lw	a5,840(a5)
20014b7c:	fa442583          	lw	a1,-92(s0)
20014b80:	4575                	li	a0,29
20014b82:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:285
}
20014b84:	0001                	nop
20014b86:	40f6                	lw	ra,92(sp)
20014b88:	42e6                	lw	t0,88(sp)
20014b8a:	4356                	lw	t1,84(sp)
20014b8c:	43c6                	lw	t2,80(sp)
20014b8e:	4436                	lw	s0,76(sp)
20014b90:	4526                	lw	a0,72(sp)
20014b92:	4596                	lw	a1,68(sp)
20014b94:	4606                	lw	a2,64(sp)
20014b96:	56f2                	lw	a3,60(sp)
20014b98:	5762                	lw	a4,56(sp)
20014b9a:	57d2                	lw	a5,52(sp)
20014b9c:	5842                	lw	a6,48(sp)
20014b9e:	58b2                	lw	a7,44(sp)
20014ba0:	5e22                	lw	t3,40(sp)
20014ba2:	5e92                	lw	t4,36(sp)
20014ba4:	5f02                	lw	t5,32(sp)
20014ba6:	4ff2                	lw	t6,28(sp)
20014ba8:	6125                	addi	sp,sp,96
20014baa:	30200073          	mret

20014bae <metal_lc14_interrupt_vector_handler>:
metal_lc14_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:289

/* The metal_lc14_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc14_interrupt_vector_handler(void) {
20014bae:	711d                	addi	sp,sp,-96
20014bb0:	ce86                	sw	ra,92(sp)
20014bb2:	cc96                	sw	t0,88(sp)
20014bb4:	ca9a                	sw	t1,84(sp)
20014bb6:	c89e                	sw	t2,80(sp)
20014bb8:	c6a2                	sw	s0,76(sp)
20014bba:	c4aa                	sw	a0,72(sp)
20014bbc:	c2ae                	sw	a1,68(sp)
20014bbe:	c0b2                	sw	a2,64(sp)
20014bc0:	de36                	sw	a3,60(sp)
20014bc2:	dc3a                	sw	a4,56(sp)
20014bc4:	da3e                	sw	a5,52(sp)
20014bc6:	d842                	sw	a6,48(sp)
20014bc8:	d646                	sw	a7,44(sp)
20014bca:	d472                	sw	t3,40(sp)
20014bcc:	d276                	sw	t4,36(sp)
20014bce:	d07a                	sw	t5,32(sp)
20014bd0:	ce7e                	sw	t6,28(sp)
20014bd2:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:290
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC14);
20014bd4:	9ccff0ef          	jal	ra,20013da0 <__metal_myhart_id>
20014bd8:	872a                	mv	a4,a0
20014bda:	800017b7          	lui	a5,0x80001
20014bde:	070a                	slli	a4,a4,0x2
20014be0:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20014be4:	97ba                	add	a5,a5,a4
20014be6:	439c                	lw	a5,0(a5)
20014be8:	faf42623          	sw	a5,-84(s0)
20014bec:	fac42783          	lw	a5,-84(s0)
20014bf0:	c78d                	beqz	a5,20014c1a <metal_lc14_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:290 (discriminator 1)
20014bf2:	fac42503          	lw	a0,-84(s0)
20014bf6:	92cff0ef          	jal	ra,20013d22 <__metal_driver_cpu_interrupt_controller>
20014bfa:	faa42423          	sw	a0,-88(s0)
20014bfe:	fa842783          	lw	a5,-88(s0)
20014c02:	3687a783          	lw	a5,872(a5)
20014c06:	faf42223          	sw	a5,-92(s0)
20014c0a:	fa842783          	lw	a5,-88(s0)
20014c0e:	3607a783          	lw	a5,864(a5)
20014c12:	fa442583          	lw	a1,-92(s0)
20014c16:	4579                	li	a0,30
20014c18:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:291
}
20014c1a:	0001                	nop
20014c1c:	40f6                	lw	ra,92(sp)
20014c1e:	42e6                	lw	t0,88(sp)
20014c20:	4356                	lw	t1,84(sp)
20014c22:	43c6                	lw	t2,80(sp)
20014c24:	4436                	lw	s0,76(sp)
20014c26:	4526                	lw	a0,72(sp)
20014c28:	4596                	lw	a1,68(sp)
20014c2a:	4606                	lw	a2,64(sp)
20014c2c:	56f2                	lw	a3,60(sp)
20014c2e:	5762                	lw	a4,56(sp)
20014c30:	57d2                	lw	a5,52(sp)
20014c32:	5842                	lw	a6,48(sp)
20014c34:	58b2                	lw	a7,44(sp)
20014c36:	5e22                	lw	t3,40(sp)
20014c38:	5e92                	lw	t4,36(sp)
20014c3a:	5f02                	lw	t5,32(sp)
20014c3c:	4ff2                	lw	t6,28(sp)
20014c3e:	6125                	addi	sp,sp,96
20014c40:	30200073          	mret

20014c44 <metal_lc15_interrupt_vector_handler>:
metal_lc15_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:295

/* The metal_lc15_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc15_interrupt_vector_handler(void) {
20014c44:	711d                	addi	sp,sp,-96
20014c46:	ce86                	sw	ra,92(sp)
20014c48:	cc96                	sw	t0,88(sp)
20014c4a:	ca9a                	sw	t1,84(sp)
20014c4c:	c89e                	sw	t2,80(sp)
20014c4e:	c6a2                	sw	s0,76(sp)
20014c50:	c4aa                	sw	a0,72(sp)
20014c52:	c2ae                	sw	a1,68(sp)
20014c54:	c0b2                	sw	a2,64(sp)
20014c56:	de36                	sw	a3,60(sp)
20014c58:	dc3a                	sw	a4,56(sp)
20014c5a:	da3e                	sw	a5,52(sp)
20014c5c:	d842                	sw	a6,48(sp)
20014c5e:	d646                	sw	a7,44(sp)
20014c60:	d472                	sw	t3,40(sp)
20014c62:	d276                	sw	t4,36(sp)
20014c64:	d07a                	sw	t5,32(sp)
20014c66:	ce7e                	sw	t6,28(sp)
20014c68:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:296
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC15);
20014c6a:	936ff0ef          	jal	ra,20013da0 <__metal_myhart_id>
20014c6e:	872a                	mv	a4,a0
20014c70:	800017b7          	lui	a5,0x80001
20014c74:	070a                	slli	a4,a4,0x2
20014c76:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20014c7a:	97ba                	add	a5,a5,a4
20014c7c:	439c                	lw	a5,0(a5)
20014c7e:	faf42623          	sw	a5,-84(s0)
20014c82:	fac42783          	lw	a5,-84(s0)
20014c86:	c78d                	beqz	a5,20014cb0 <metal_lc15_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:296 (discriminator 1)
20014c88:	fac42503          	lw	a0,-84(s0)
20014c8c:	896ff0ef          	jal	ra,20013d22 <__metal_driver_cpu_interrupt_controller>
20014c90:	faa42423          	sw	a0,-88(s0)
20014c94:	fa842783          	lw	a5,-88(s0)
20014c98:	3807a783          	lw	a5,896(a5)
20014c9c:	faf42223          	sw	a5,-92(s0)
20014ca0:	fa842783          	lw	a5,-88(s0)
20014ca4:	3787a783          	lw	a5,888(a5)
20014ca8:	fa442583          	lw	a1,-92(s0)
20014cac:	457d                	li	a0,31
20014cae:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:297
}
20014cb0:	0001                	nop
20014cb2:	40f6                	lw	ra,92(sp)
20014cb4:	42e6                	lw	t0,88(sp)
20014cb6:	4356                	lw	t1,84(sp)
20014cb8:	43c6                	lw	t2,80(sp)
20014cba:	4436                	lw	s0,76(sp)
20014cbc:	4526                	lw	a0,72(sp)
20014cbe:	4596                	lw	a1,68(sp)
20014cc0:	4606                	lw	a2,64(sp)
20014cc2:	56f2                	lw	a3,60(sp)
20014cc4:	5762                	lw	a4,56(sp)
20014cc6:	57d2                	lw	a5,52(sp)
20014cc8:	5842                	lw	a6,48(sp)
20014cca:	58b2                	lw	a7,44(sp)
20014ccc:	5e22                	lw	t3,40(sp)
20014cce:	5e92                	lw	t4,36(sp)
20014cd0:	5f02                	lw	t5,32(sp)
20014cd2:	4ff2                	lw	t6,28(sp)
20014cd4:	6125                	addi	sp,sp,96
20014cd6:	30200073          	mret

20014cda <__metal_controller_interrupt_vector_mode>:
__metal_controller_interrupt_vector_mode():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:299

metal_vector_mode __metal_controller_interrupt_vector_mode(void) {
20014cda:	1101                	addi	sp,sp,-32
20014cdc:	ce22                	sw	s0,28(sp)
20014cde:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:302
    uintptr_t val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
20014ce0:	305027f3          	csrr	a5,mtvec
20014ce4:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:303
    val &= METAL_MTVEC_MASK;
20014ce8:	fec42783          	lw	a5,-20(s0)
20014cec:	03f7f793          	andi	a5,a5,63
20014cf0:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:305

    switch (val) {
20014cf4:	fec42703          	lw	a4,-20(s0)
20014cf8:	4789                	li	a5,2
20014cfa:	00f70d63          	beq	a4,a5,20014d14 <__metal_controller_interrupt_vector_mode+0x3a>
20014cfe:	fec42703          	lw	a4,-20(s0)
20014d02:	478d                	li	a5,3
20014d04:	00f70a63          	beq	a4,a5,20014d18 <__metal_controller_interrupt_vector_mode+0x3e>
20014d08:	fec42703          	lw	a4,-20(s0)
20014d0c:	4785                	li	a5,1
20014d0e:	00f70763          	beq	a4,a5,20014d1c <__metal_controller_interrupt_vector_mode+0x42>
20014d12:	a039                	j	20014d20 <__metal_controller_interrupt_vector_mode+0x46>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:307
    case METAL_MTVEC_CLIC:
        return METAL_SELECTIVE_VECTOR_MODE;
20014d14:	478d                	li	a5,3
20014d16:	a031                	j	20014d22 <__metal_controller_interrupt_vector_mode+0x48>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:309
    case METAL_MTVEC_CLIC_VECTORED:
        return METAL_HARDWARE_VECTOR_MODE;
20014d18:	4791                	li	a5,4
20014d1a:	a021                	j	20014d22 <__metal_controller_interrupt_vector_mode+0x48>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:311
    case METAL_MTVEC_VECTORED:
        return METAL_VECTOR_MODE;
20014d1c:	4785                	li	a5,1
20014d1e:	a011                	j	20014d22 <__metal_controller_interrupt_vector_mode+0x48>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:313
    }
    return METAL_DIRECT_MODE;
20014d20:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:314
}
20014d22:	853e                	mv	a0,a5
20014d24:	4472                	lw	s0,28(sp)
20014d26:	6105                	addi	sp,sp,32
20014d28:	8082                	ret

20014d2a <__metal_controller_interrupt_vector>:
__metal_controller_interrupt_vector():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:317

void __metal_controller_interrupt_vector(metal_vector_mode mode,
                                         void *vec_table) {
20014d2a:	7179                	addi	sp,sp,-48
20014d2c:	d622                	sw	s0,44(sp)
20014d2e:	1800                	addi	s0,sp,48
20014d30:	fca42e23          	sw	a0,-36(s0)
20014d34:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:320
    uintptr_t trap_entry, val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
20014d38:	305027f3          	csrr	a5,mtvec
20014d3c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:321
    val &= ~(METAL_MTVEC_CLIC_VECTORED | METAL_MTVEC_CLIC_RESERVED);
20014d40:	fec42783          	lw	a5,-20(s0)
20014d44:	fc07f793          	andi	a5,a5,-64
20014d48:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:322
    trap_entry = (uintptr_t)vec_table;
20014d4c:	fd842783          	lw	a5,-40(s0)
20014d50:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:324

    switch (mode) {
20014d54:	fdc42703          	lw	a4,-36(s0)
20014d58:	4791                	li	a5,4
20014d5a:	06e7e063          	bltu	a5,a4,20014dba <__metal_controller_interrupt_vector+0x90>
20014d5e:	fdc42783          	lw	a5,-36(s0)
20014d62:	00279713          	slli	a4,a5,0x2
20014d66:	200107b7          	lui	a5,0x20010
20014d6a:	77078793          	addi	a5,a5,1904 # 20010770 <__metal_driver_vtable_riscv_clint0+0x64>
20014d6e:	97ba                	add	a5,a5,a4
20014d70:	439c                	lw	a5,0(a5)
20014d72:	8782                	jr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:327
    case METAL_SELECTIVE_NONVECTOR_MODE:
    case METAL_SELECTIVE_VECTOR_MODE:
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
20014d74:	fe842783          	lw	a5,-24(s0)
20014d78:	30779073          	csrw	mtvt,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:328
        __asm__ volatile("csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC));
20014d7c:	fec42783          	lw	a5,-20(s0)
20014d80:	0027e793          	ori	a5,a5,2
20014d84:	30579073          	csrw	mtvec,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:329
        break;
20014d88:	a80d                	j	20014dba <__metal_controller_interrupt_vector+0x90>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:331
    case METAL_HARDWARE_VECTOR_MODE:
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
20014d8a:	fe842783          	lw	a5,-24(s0)
20014d8e:	30779073          	csrw	mtvt,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:333
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC_VECTORED));
20014d92:	fec42783          	lw	a5,-20(s0)
20014d96:	0037e793          	ori	a5,a5,3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:332
        __asm__ volatile(
20014d9a:	30579073          	csrw	mtvec,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:334
        break;
20014d9e:	a831                	j	20014dba <__metal_controller_interrupt_vector+0x90>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:337
    case METAL_VECTOR_MODE:
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(trap_entry | METAL_MTVEC_VECTORED));
20014da0:	fe842783          	lw	a5,-24(s0)
20014da4:	0017e793          	ori	a5,a5,1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:336
        __asm__ volatile(
20014da8:	30579073          	csrw	mtvec,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:338
        break;
20014dac:	a039                	j	20014dba <__metal_controller_interrupt_vector+0x90>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:341
    case METAL_DIRECT_MODE:
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
20014dae:	fe842783          	lw	a5,-24(s0)
20014db2:	9bf1                	andi	a5,a5,-4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:340
        __asm__ volatile(
20014db4:	30579073          	csrw	mtvec,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:342
        break;
20014db8:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:344
    }
}
20014dba:	0001                	nop
20014dbc:	5432                	lw	s0,44(sp)
20014dbe:	6145                	addi	sp,sp,48
20014dc0:	8082                	ret

20014dc2 <__metal_valid_interrupt_id>:
__metal_valid_interrupt_id():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:346

int __metal_valid_interrupt_id(int id) {
20014dc2:	1101                	addi	sp,sp,-32
20014dc4:	ce22                	sw	s0,28(sp)
20014dc6:	1000                	addi	s0,sp,32
20014dc8:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
20014dcc:	fec42703          	lw	a4,-20(s0)
20014dd0:	47ad                	li	a5,11
20014dd2:	04f70263          	beq	a4,a5,20014e16 <__metal_valid_interrupt_id+0x54>
20014dd6:	fec42703          	lw	a4,-20(s0)
20014dda:	47ad                	li	a5,11
20014ddc:	00e7cd63          	blt	a5,a4,20014df6 <__metal_valid_interrupt_id+0x34>
20014de0:	fec42703          	lw	a4,-20(s0)
20014de4:	478d                	li	a5,3
20014de6:	02f70863          	beq	a4,a5,20014e16 <__metal_valid_interrupt_id+0x54>
20014dea:	fec42703          	lw	a4,-20(s0)
20014dee:	479d                	li	a5,7
20014df0:	02f70363          	beq	a4,a5,20014e16 <__metal_valid_interrupt_id+0x54>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:370
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
    case METAL_INTERRUPT_ID_BEU:
        return 1;
    default:
        break;
20014df4:	a01d                	j	20014e1a <__metal_valid_interrupt_id+0x58>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
20014df6:	fec42703          	lw	a4,-20(s0)
20014dfa:	47c1                	li	a5,16
20014dfc:	00f74f63          	blt	a4,a5,20014e1a <__metal_valid_interrupt_id+0x58>
20014e00:	fec42703          	lw	a4,-20(s0)
20014e04:	47fd                	li	a5,31
20014e06:	00e7d863          	bge	a5,a4,20014e16 <__metal_valid_interrupt_id+0x54>
20014e0a:	fec42703          	lw	a4,-20(s0)
20014e0e:	08000793          	li	a5,128
20014e12:	00f71463          	bne	a4,a5,20014e1a <__metal_valid_interrupt_id+0x58>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:368
        return 1;
20014e16:	4785                	li	a5,1
20014e18:	a019                	j	20014e1e <__metal_valid_interrupt_id+0x5c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:370
        break;
20014e1a:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:373
    }

    return 0;
20014e1c:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:374
}
20014e1e:	853e                	mv	a0,a5
20014e20:	4472                	lw	s0,28(sp)
20014e22:	6105                	addi	sp,sp,32
20014e24:	8082                	ret

20014e26 <__metal_local_interrupt_enable>:
__metal_local_interrupt_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:377

int __metal_local_interrupt_enable(struct metal_interrupt *controller,
                                   metal_interrupt_id_e id, int enable) {
20014e26:	7179                	addi	sp,sp,-48
20014e28:	d606                	sw	ra,44(sp)
20014e2a:	d422                	sw	s0,40(sp)
20014e2c:	1800                	addi	s0,sp,48
20014e2e:	fca42e23          	sw	a0,-36(s0)
20014e32:	fcb42c23          	sw	a1,-40(s0)
20014e36:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:378
    int rc = 0;
20014e3a:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:380

    if (!controller) {
20014e3e:	fdc42783          	lw	a5,-36(s0)
20014e42:	e399                	bnez	a5,20014e48 <__metal_local_interrupt_enable+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:381
        return -1;
20014e44:	57fd                	li	a5,-1
20014e46:	a849                	j	20014ed8 <__metal_local_interrupt_enable+0xb2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:384
    }

    switch (id) {
20014e48:	fd842703          	lw	a4,-40(s0)
20014e4c:	47fd                	li	a5,31
20014e4e:	08e7e063          	bltu	a5,a4,20014ece <__metal_local_interrupt_enable+0xa8>
20014e52:	fd842783          	lw	a5,-40(s0)
20014e56:	00279713          	slli	a4,a5,0x2
20014e5a:	200107b7          	lui	a5,0x20010
20014e5e:	78478793          	addi	a5,a5,1924 # 20010784 <__metal_driver_vtable_riscv_clint0+0x78>
20014e62:	97ba                	add	a5,a5,a4
20014e64:	439c                	lw	a5,0(a5)
20014e66:	8782                	jr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:386
    case METAL_INTERRUPT_ID_BASE:
        if (enable) {
20014e68:	fd442783          	lw	a5,-44(s0)
20014e6c:	c781                	beqz	a5,20014e74 <__metal_local_interrupt_enable+0x4e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:387
            __metal_interrupt_global_enable();
20014e6e:	f4dfe0ef          	jal	ra,20013dba <__metal_interrupt_global_enable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:391
        } else {
            __metal_interrupt_global_disable();
        }
        break;
20014e72:	a08d                	j	20014ed4 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:389
            __metal_interrupt_global_disable();
20014e74:	f5ffe0ef          	jal	ra,20013dd2 <__metal_interrupt_global_disable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:391
        break;
20014e78:	a8b1                	j	20014ed4 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:393
    case METAL_INTERRUPT_ID_SW:
        if (enable) {
20014e7a:	fd442783          	lw	a5,-44(s0)
20014e7e:	c781                	beqz	a5,20014e86 <__metal_local_interrupt_enable+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:394
            __metal_interrupt_software_enable();
20014e80:	f6bfe0ef          	jal	ra,20013dea <__metal_interrupt_software_enable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:398
        } else {
            __metal_interrupt_software_disable();
        }
        break;
20014e84:	a881                	j	20014ed4 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:396
            __metal_interrupt_software_disable();
20014e86:	f7dfe0ef          	jal	ra,20013e02 <__metal_interrupt_software_disable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:398
        break;
20014e8a:	a0a9                	j	20014ed4 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:400
    case METAL_INTERRUPT_ID_TMR:
        if (enable) {
20014e8c:	fd442783          	lw	a5,-44(s0)
20014e90:	c781                	beqz	a5,20014e98 <__metal_local_interrupt_enable+0x72>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:401
            __metal_interrupt_timer_enable();
20014e92:	f89fe0ef          	jal	ra,20013e1a <__metal_interrupt_timer_enable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:405
        } else {
            __metal_interrupt_timer_disable();
        }
        break;
20014e96:	a83d                	j	20014ed4 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:403
            __metal_interrupt_timer_disable();
20014e98:	f9dfe0ef          	jal	ra,20013e34 <__metal_interrupt_timer_disable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:405
        break;
20014e9c:	a825                	j	20014ed4 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:407
    case METAL_INTERRUPT_ID_EXT:
        if (enable) {
20014e9e:	fd442783          	lw	a5,-44(s0)
20014ea2:	c781                	beqz	a5,20014eaa <__metal_local_interrupt_enable+0x84>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:408
            __metal_interrupt_external_enable();
20014ea4:	fabfe0ef          	jal	ra,20013e4e <__metal_interrupt_external_enable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:412
        } else {
            __metal_interrupt_external_disable();
        }
        break;
20014ea8:	a035                	j	20014ed4 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:410
            __metal_interrupt_external_disable();
20014eaa:	fc1fe0ef          	jal	ra,20013e6a <__metal_interrupt_external_disable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:412
        break;
20014eae:	a01d                	j	20014ed4 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:429
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        if (enable) {
20014eb0:	fd442783          	lw	a5,-44(s0)
20014eb4:	c799                	beqz	a5,20014ec2 <__metal_local_interrupt_enable+0x9c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:430
            __metal_interrupt_local_enable(id);
20014eb6:	fd842783          	lw	a5,-40(s0)
20014eba:	853e                	mv	a0,a5
20014ebc:	fcbfe0ef          	jal	ra,20013e86 <__metal_interrupt_local_enable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:434
        } else {
            __metal_interrupt_local_disable(id);
        }
        break;
20014ec0:	a811                	j	20014ed4 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:432
            __metal_interrupt_local_disable(id);
20014ec2:	fd842783          	lw	a5,-40(s0)
20014ec6:	853e                	mv	a0,a5
20014ec8:	febfe0ef          	jal	ra,20013eb2 <__metal_interrupt_local_disable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:434
        break;
20014ecc:	a021                	j	20014ed4 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:436
    default:
        rc = -1;
20014ece:	57fd                	li	a5,-1
20014ed0:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:438
    }
    return rc;
20014ed4:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:439
}
20014ed8:	853e                	mv	a0,a5
20014eda:	50b2                	lw	ra,44(sp)
20014edc:	5422                	lw	s0,40(sp)
20014ede:	6145                	addi	sp,sp,48
20014ee0:	8082                	ret

20014ee2 <__metal_exception_register>:
__metal_exception_register():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:442

int __metal_exception_register(struct metal_interrupt *controller, int ecode,
                               metal_exception_handler_t isr) {
20014ee2:	7179                	addi	sp,sp,-48
20014ee4:	d622                	sw	s0,44(sp)
20014ee6:	1800                	addi	s0,sp,48
20014ee8:	fca42e23          	sw	a0,-36(s0)
20014eec:	fcb42c23          	sw	a1,-40(s0)
20014ef0:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:443
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20014ef4:	fdc42783          	lw	a5,-36(s0)
20014ef8:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:445

    if ((ecode < METAL_MAX_EXCEPTION_CODE) && isr) {
20014efc:	fd842703          	lw	a4,-40(s0)
20014f00:	47ad                	li	a5,11
20014f02:	02e7c263          	blt	a5,a4,20014f26 <__metal_exception_register+0x44>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:445 (discriminator 1)
20014f06:	fd442783          	lw	a5,-44(s0)
20014f0a:	cf91                	beqz	a5,20014f26 <__metal_exception_register+0x44>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:446
        intc->metal_exception_table[ecode] = isr;
20014f0c:	fec42703          	lw	a4,-20(s0)
20014f10:	fd842783          	lw	a5,-40(s0)
20014f14:	0e878793          	addi	a5,a5,232
20014f18:	078a                	slli	a5,a5,0x2
20014f1a:	97ba                	add	a5,a5,a4
20014f1c:	fd442703          	lw	a4,-44(s0)
20014f20:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:447
        return 0;
20014f22:	4781                	li	a5,0
20014f24:	a011                	j	20014f28 <__metal_exception_register+0x46>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:449
    }
    return -1;
20014f26:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:450
}
20014f28:	853e                	mv	a0,a5
20014f2a:	5432                	lw	s0,44(sp)
20014f2c:	6145                	addi	sp,sp,48
20014f2e:	8082                	ret

20014f30 <__metal_driver_riscv_cpu_controller_interrupt_init>:
__metal_driver_riscv_cpu_controller_interrupt_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:454

extern void early_trap_vector(void);
void __metal_driver_riscv_cpu_controller_interrupt_init(
    struct metal_interrupt *controller) {
20014f30:	7179                	addi	sp,sp,-48
20014f32:	d606                	sw	ra,44(sp)
20014f34:	d422                	sw	s0,40(sp)
20014f36:	1800                	addi	s0,sp,48
20014f38:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:455
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20014f3c:	fdc42783          	lw	a5,-36(s0)
20014f40:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:457

    if (!intc->init_done) {
20014f44:	fe442783          	lw	a5,-28(s0)
20014f48:	43dc                	lw	a5,4(a5)
20014f4a:	efdd                	bnez	a5,20015008 <__metal_driver_riscv_cpu_controller_interrupt_init+0xd8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:459
        /* Default to use direct interrupt, setup sw cb table*/
        for (int i = 0; i < METAL_MAX_MI; i++) {
20014f4c:	fe042623          	sw	zero,-20(s0)
20014f50:	a0b9                	j	20014f9e <__metal_driver_riscv_cpu_controller_interrupt_init+0x6e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:460 (discriminator 3)
            intc->metal_int_table[i].handler = NULL;
20014f52:	fe442683          	lw	a3,-28(s0)
20014f56:	fec42703          	lw	a4,-20(s0)
20014f5a:	87ba                	mv	a5,a4
20014f5c:	0786                	slli	a5,a5,0x1
20014f5e:	97ba                	add	a5,a5,a4
20014f60:	078e                	slli	a5,a5,0x3
20014f62:	97b6                	add	a5,a5,a3
20014f64:	0807a823          	sw	zero,144(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:461 (discriminator 3)
            intc->metal_int_table[i].sub_int = NULL;
20014f68:	fe442683          	lw	a3,-28(s0)
20014f6c:	fec42703          	lw	a4,-20(s0)
20014f70:	87ba                	mv	a5,a4
20014f72:	0786                	slli	a5,a5,0x1
20014f74:	97ba                	add	a5,a5,a4
20014f76:	078e                	slli	a5,a5,0x3
20014f78:	97b6                	add	a5,a5,a3
20014f7a:	0807aa23          	sw	zero,148(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:462 (discriminator 3)
            intc->metal_int_table[i].exint_data = NULL;
20014f7e:	fe442683          	lw	a3,-28(s0)
20014f82:	fec42703          	lw	a4,-20(s0)
20014f86:	87ba                	mv	a5,a4
20014f88:	0786                	slli	a5,a5,0x1
20014f8a:	97ba                	add	a5,a5,a4
20014f8c:	078e                	slli	a5,a5,0x3
20014f8e:	97b6                	add	a5,a5,a3
20014f90:	0807ac23          	sw	zero,152(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 3)
        for (int i = 0; i < METAL_MAX_MI; i++) {
20014f94:	fec42783          	lw	a5,-20(s0)
20014f98:	0785                	addi	a5,a5,1
20014f9a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 1)
20014f9e:	fec42703          	lw	a4,-20(s0)
20014fa2:	47fd                	li	a5,31
20014fa4:	fae7d7e3          	bge	a5,a4,20014f52 <__metal_driver_riscv_cpu_controller_interrupt_init+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:465
        }

        for (int i = 0; i < METAL_MAX_ME; i++) {
20014fa8:	fe042423          	sw	zero,-24(s0)
20014fac:	a01d                	j	20014fd2 <__metal_driver_riscv_cpu_controller_interrupt_init+0xa2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:466 (discriminator 3)
            intc->metal_exception_table[i] = __metal_default_exception_handler;
20014fae:	fe442703          	lw	a4,-28(s0)
20014fb2:	fe842783          	lw	a5,-24(s0)
20014fb6:	0e878793          	addi	a5,a5,232
20014fba:	078a                	slli	a5,a5,0x2
20014fbc:	97ba                	add	a5,a5,a4
20014fbe:	20014737          	lui	a4,0x20014
20014fc2:	ede70713          	addi	a4,a4,-290 # 20013ede <__metal_default_exception_handler>
20014fc6:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 3)
        for (int i = 0; i < METAL_MAX_ME; i++) {
20014fc8:	fe842783          	lw	a5,-24(s0)
20014fcc:	0785                	addi	a5,a5,1
20014fce:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 1)
20014fd2:	fe842703          	lw	a4,-24(s0)
20014fd6:	47ad                	li	a5,11
20014fd8:	fce7dbe3          	bge	a5,a4,20014fae <__metal_driver_riscv_cpu_controller_interrupt_init+0x7e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:475
         * Set the real trap handler if the value of mtvec is equal to
         * early_trap_vector. If mtvec is not equal to early_trap_vector,
         * that means user has own trap handler, then we don't overwrite it.
         */
        uintptr_t mtvec;
        __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
20014fdc:	305027f3          	csrr	a5,mtvec
20014fe0:	fef42023          	sw	a5,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:476
        if (mtvec == (uintptr_t)&early_trap_vector) {
20014fe4:	200107b7          	lui	a5,0x20010
20014fe8:	13c78793          	addi	a5,a5,316 # 2001013c <early_trap_vector>
20014fec:	fe042703          	lw	a4,-32(s0)
20014ff0:	00f71863          	bne	a4,a5,20015000 <__metal_driver_riscv_cpu_controller_interrupt_init+0xd0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:477
            __metal_controller_interrupt_vector(
20014ff4:	200147b7          	lui	a5,0x20014
20014ff8:	18078593          	addi	a1,a5,384 # 20014180 <__metal_exception_handler>
20014ffc:	4501                	li	a0,0
20014ffe:	3335                	jal	20014d2a <__metal_controller_interrupt_vector>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:481
                METAL_DIRECT_MODE,
                (void *)(uintptr_t)&__metal_exception_handler);
        }
        intc->init_done = 1;
20015000:	fe442783          	lw	a5,-28(s0)
20015004:	4705                	li	a4,1
20015006:	c3d8                	sw	a4,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:483
    }
}
20015008:	0001                	nop
2001500a:	50b2                	lw	ra,44(sp)
2001500c:	5422                	lw	s0,40(sp)
2001500e:	6145                	addi	sp,sp,48
20015010:	8082                	ret

20015012 <__metal_driver_riscv_cpu_controller_interrupt_register>:
__metal_driver_riscv_cpu_controller_interrupt_register():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:487

int __metal_driver_riscv_cpu_controller_interrupt_register(
    struct metal_interrupt *controller, int id, metal_interrupt_handler_t isr,
    void *priv) {
20015012:	7179                	addi	sp,sp,-48
20015014:	d606                	sw	ra,44(sp)
20015016:	d422                	sw	s0,40(sp)
20015018:	1800                	addi	s0,sp,48
2001501a:	fca42e23          	sw	a0,-36(s0)
2001501e:	fcb42c23          	sw	a1,-40(s0)
20015022:	fcc42a23          	sw	a2,-44(s0)
20015026:	fcd42823          	sw	a3,-48(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:488
    int rc = 0;
2001502a:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:489
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
2001502e:	fdc42783          	lw	a5,-36(s0)
20015032:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:491

    if (!__metal_valid_interrupt_id(id)) {
20015036:	fd842503          	lw	a0,-40(s0)
2001503a:	3361                	jal	20014dc2 <__metal_valid_interrupt_id>
2001503c:	87aa                	mv	a5,a0
2001503e:	e399                	bnez	a5,20015044 <__metal_driver_riscv_cpu_controller_interrupt_register+0x32>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:492
        return -11;
20015040:	57d5                	li	a5,-11
20015042:	aa71                	j	200151de <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:494
    }
    if ((id == METAL_INTERRUPT_ID_BEU) &&
20015044:	fd842703          	lw	a4,-40(s0)
20015048:	08000793          	li	a5,128
2001504c:	00f71763          	bne	a4,a5,2001505a <__metal_driver_riscv_cpu_controller_interrupt_register+0x48>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:495 (discriminator 1)
        (__metal_controller_interrupt_vector_mode() != METAL_DIRECT_MODE)) {
20015050:	3169                	jal	20014cda <__metal_controller_interrupt_vector_mode>
20015052:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:494 (discriminator 1)
    if ((id == METAL_INTERRUPT_ID_BEU) &&
20015054:	c399                	beqz	a5,2001505a <__metal_driver_riscv_cpu_controller_interrupt_register+0x48>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:498
        /* Only allow registration of the bus error unit interrupt if
         * interrupt vectoring if off */
        return -13;
20015056:	57cd                	li	a5,-13
20015058:	a259                	j	200151de <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:501
    }

    if (isr) {
2001505a:	fd442783          	lw	a5,-44(s0)
2001505e:	cfb9                	beqz	a5,200150bc <__metal_driver_riscv_cpu_controller_interrupt_register+0xaa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:502
        if (id == METAL_INTERRUPT_ID_BEU) {
20015060:	fd842703          	lw	a4,-40(s0)
20015064:	08000793          	li	a5,128
20015068:	00f71f63          	bne	a4,a5,20015086 <__metal_driver_riscv_cpu_controller_interrupt_register+0x74>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:503
            intc->metal_int_beu.handler = isr;
2001506c:	fe842783          	lw	a5,-24(s0)
20015070:	fd442703          	lw	a4,-44(s0)
20015074:	38e7a823          	sw	a4,912(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:504
            intc->metal_int_beu.exint_data = priv;
20015078:	fe842783          	lw	a5,-24(s0)
2001507c:	fd042703          	lw	a4,-48(s0)
20015080:	38e7ac23          	sw	a4,920(a5)
20015084:	aa99                	j	200151da <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:506
        } else {
            intc->metal_int_table[id].handler = isr;
20015086:	fe842683          	lw	a3,-24(s0)
2001508a:	fd842703          	lw	a4,-40(s0)
2001508e:	87ba                	mv	a5,a4
20015090:	0786                	slli	a5,a5,0x1
20015092:	97ba                	add	a5,a5,a4
20015094:	078e                	slli	a5,a5,0x3
20015096:	97b6                	add	a5,a5,a3
20015098:	fd442703          	lw	a4,-44(s0)
2001509c:	08e7a823          	sw	a4,144(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:507
            intc->metal_int_table[id].exint_data = priv;
200150a0:	fe842683          	lw	a3,-24(s0)
200150a4:	fd842703          	lw	a4,-40(s0)
200150a8:	87ba                	mv	a5,a4
200150aa:	0786                	slli	a5,a5,0x1
200150ac:	97ba                	add	a5,a5,a4
200150ae:	078e                	slli	a5,a5,0x3
200150b0:	97b6                	add	a5,a5,a3
200150b2:	fd042703          	lw	a4,-48(s0)
200150b6:	08e7ac23          	sw	a4,152(a5)
200150ba:	a205                	j	200151da <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:510
        }
    } else {
        switch (id) {
200150bc:	fd842703          	lw	a4,-40(s0)
200150c0:	47ad                	li	a5,11
200150c2:	0cf70c63          	beq	a4,a5,2001519a <__metal_driver_riscv_cpu_controller_interrupt_register+0x188>
200150c6:	fd842703          	lw	a4,-40(s0)
200150ca:	47ad                	li	a5,11
200150cc:	00e7cd63          	blt	a5,a4,200150e6 <__metal_driver_riscv_cpu_controller_interrupt_register+0xd4>
200150d0:	fd842703          	lw	a4,-40(s0)
200150d4:	478d                	li	a5,3
200150d6:	02f70963          	beq	a4,a5,20015108 <__metal_driver_riscv_cpu_controller_interrupt_register+0xf6>
200150da:	fd842703          	lw	a4,-40(s0)
200150de:	479d                	li	a5,7
200150e0:	06f70163          	beq	a4,a5,20015142 <__metal_driver_riscv_cpu_controller_interrupt_register+0x130>
200150e4:	a8c5                	j	200151d4 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c2>
200150e6:	fd842703          	lw	a4,-40(s0)
200150ea:	47c1                	li	a5,16
200150ec:	0ef74463          	blt	a4,a5,200151d4 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c2>
200150f0:	fd842703          	lw	a4,-40(s0)
200150f4:	47fd                	li	a5,31
200150f6:	0ae7d263          	bge	a5,a4,2001519a <__metal_driver_riscv_cpu_controller_interrupt_register+0x188>
200150fa:	fd842703          	lw	a4,-40(s0)
200150fe:	08000793          	li	a5,128
20015102:	06f70d63          	beq	a4,a5,2001517c <__metal_driver_riscv_cpu_controller_interrupt_register+0x16a>
20015106:	a0f9                	j	200151d4 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:512
        case METAL_INTERRUPT_ID_SW:
            intc->metal_int_table[id].handler = __metal_default_sw_handler;
20015108:	fe842683          	lw	a3,-24(s0)
2001510c:	fd842703          	lw	a4,-40(s0)
20015110:	87ba                	mv	a5,a4
20015112:	0786                	slli	a5,a5,0x1
20015114:	97ba                	add	a5,a5,a4
20015116:	078e                	slli	a5,a5,0x3
20015118:	97b6                	add	a5,a5,a3
2001511a:	20014737          	lui	a4,0x20014
2001511e:	fce70713          	addi	a4,a4,-50 # 20013fce <__metal_default_sw_handler>
20015122:	08e7a823          	sw	a4,144(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:513
            intc->metal_int_table[id].sub_int = priv;
20015126:	fe842683          	lw	a3,-24(s0)
2001512a:	fd842703          	lw	a4,-40(s0)
2001512e:	87ba                	mv	a5,a4
20015130:	0786                	slli	a5,a5,0x1
20015132:	97ba                	add	a5,a5,a4
20015134:	078e                	slli	a5,a5,0x3
20015136:	97b6                	add	a5,a5,a3
20015138:	fd042703          	lw	a4,-48(s0)
2001513c:	08e7aa23          	sw	a4,148(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:514
            break;
20015140:	a869                	j	200151da <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:516
        case METAL_INTERRUPT_ID_TMR:
            intc->metal_int_table[id].handler = __metal_default_timer_handler;
20015142:	fe842683          	lw	a3,-24(s0)
20015146:	fd842703          	lw	a4,-40(s0)
2001514a:	87ba                	mv	a5,a4
2001514c:	0786                	slli	a5,a5,0x1
2001514e:	97ba                	add	a5,a5,a4
20015150:	078e                	slli	a5,a5,0x3
20015152:	97b6                	add	a5,a5,a3
20015154:	20014737          	lui	a4,0x20014
20015158:	0de70713          	addi	a4,a4,222 # 200140de <__metal_default_timer_handler>
2001515c:	08e7a823          	sw	a4,144(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:517
            intc->metal_int_table[id].sub_int = priv;
20015160:	fe842683          	lw	a3,-24(s0)
20015164:	fd842703          	lw	a4,-40(s0)
20015168:	87ba                	mv	a5,a4
2001516a:	0786                	slli	a5,a5,0x1
2001516c:	97ba                	add	a5,a5,a4
2001516e:	078e                	slli	a5,a5,0x3
20015170:	97b6                	add	a5,a5,a3
20015172:	fd042703          	lw	a4,-48(s0)
20015176:	08e7aa23          	sw	a4,148(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:518
            break;
2001517a:	a085                	j	200151da <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:520
        case METAL_INTERRUPT_ID_BEU:
            intc->metal_int_beu.handler = __metal_default_beu_handler;
2001517c:	fe842783          	lw	a5,-24(s0)
20015180:	20014737          	lui	a4,0x20014
20015184:	0c870713          	addi	a4,a4,200 # 200140c8 <__metal_default_beu_handler>
20015188:	38e7a823          	sw	a4,912(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:521
            intc->metal_int_beu.exint_data = priv;
2001518c:	fe842783          	lw	a5,-24(s0)
20015190:	fd042703          	lw	a4,-48(s0)
20015194:	38e7ac23          	sw	a4,920(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:522
            break;
20015198:	a089                	j	200151da <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:540
        case METAL_INTERRUPT_ID_LC11:
        case METAL_INTERRUPT_ID_LC12:
        case METAL_INTERRUPT_ID_LC13:
        case METAL_INTERRUPT_ID_LC14:
        case METAL_INTERRUPT_ID_LC15:
            intc->metal_int_table[id].handler =
2001519a:	fe842683          	lw	a3,-24(s0)
2001519e:	fd842703          	lw	a4,-40(s0)
200151a2:	87ba                	mv	a5,a4
200151a4:	0786                	slli	a5,a5,0x1
200151a6:	97ba                	add	a5,a5,a4
200151a8:	078e                	slli	a5,a5,0x3
200151aa:	97b6                	add	a5,a5,a3
200151ac:	20014737          	lui	a4,0x20014
200151b0:	ef670713          	addi	a4,a4,-266 # 20013ef6 <__metal_default_interrupt_handler>
200151b4:	08e7a823          	sw	a4,144(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:542
                __metal_default_interrupt_handler;
            intc->metal_int_table[id].sub_int = priv;
200151b8:	fe842683          	lw	a3,-24(s0)
200151bc:	fd842703          	lw	a4,-40(s0)
200151c0:	87ba                	mv	a5,a4
200151c2:	0786                	slli	a5,a5,0x1
200151c4:	97ba                	add	a5,a5,a4
200151c6:	078e                	slli	a5,a5,0x3
200151c8:	97b6                	add	a5,a5,a3
200151ca:	fd042703          	lw	a4,-48(s0)
200151ce:	08e7aa23          	sw	a4,148(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:543
            break;
200151d2:	a021                	j	200151da <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:545
        default:
            rc = -12;
200151d4:	57d1                	li	a5,-12
200151d6:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:548
        }
    }
    return rc;
200151da:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:549
}
200151de:	853e                	mv	a0,a5
200151e0:	50b2                	lw	ra,44(sp)
200151e2:	5422                	lw	s0,40(sp)
200151e4:	6145                	addi	sp,sp,48
200151e6:	8082                	ret

200151e8 <__metal_driver_riscv_cpu_controller_interrupt_enable>:
__metal_driver_riscv_cpu_controller_interrupt_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:552

int __metal_driver_riscv_cpu_controller_interrupt_enable(
    struct metal_interrupt *controller, int id) {
200151e8:	1101                	addi	sp,sp,-32
200151ea:	ce06                	sw	ra,28(sp)
200151ec:	cc22                	sw	s0,24(sp)
200151ee:	1000                	addi	s0,sp,32
200151f0:	fea42623          	sw	a0,-20(s0)
200151f4:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:553
    return __metal_local_interrupt_enable(controller, id, METAL_ENABLE);
200151f8:	fe842783          	lw	a5,-24(s0)
200151fc:	4605                	li	a2,1
200151fe:	85be                	mv	a1,a5
20015200:	fec42503          	lw	a0,-20(s0)
20015204:	c23ff0ef          	jal	ra,20014e26 <__metal_local_interrupt_enable>
20015208:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:554
}
2001520a:	853e                	mv	a0,a5
2001520c:	40f2                	lw	ra,28(sp)
2001520e:	4462                	lw	s0,24(sp)
20015210:	6105                	addi	sp,sp,32
20015212:	8082                	ret

20015214 <__metal_driver_riscv_cpu_controller_interrupt_disable>:
__metal_driver_riscv_cpu_controller_interrupt_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:557

int __metal_driver_riscv_cpu_controller_interrupt_disable(
    struct metal_interrupt *controller, int id) {
20015214:	1101                	addi	sp,sp,-32
20015216:	ce06                	sw	ra,28(sp)
20015218:	cc22                	sw	s0,24(sp)
2001521a:	1000                	addi	s0,sp,32
2001521c:	fea42623          	sw	a0,-20(s0)
20015220:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:558
    return __metal_local_interrupt_enable(controller, id, METAL_DISABLE);
20015224:	fe842783          	lw	a5,-24(s0)
20015228:	4601                	li	a2,0
2001522a:	85be                	mv	a1,a5
2001522c:	fec42503          	lw	a0,-20(s0)
20015230:	bf7ff0ef          	jal	ra,20014e26 <__metal_local_interrupt_enable>
20015234:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:559
}
20015236:	853e                	mv	a0,a5
20015238:	40f2                	lw	ra,28(sp)
2001523a:	4462                	lw	s0,24(sp)
2001523c:	6105                	addi	sp,sp,32
2001523e:	8082                	ret

20015240 <__metal_driver_riscv_cpu_controller_get_vector_mode>:
__metal_driver_riscv_cpu_controller_get_vector_mode():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:591
    }
    return -1;
}

metal_vector_mode __metal_driver_riscv_cpu_controller_get_vector_mode(
    struct metal_interrupt *controller) {
20015240:	1101                	addi	sp,sp,-32
20015242:	ce06                	sw	ra,28(sp)
20015244:	cc22                	sw	s0,24(sp)
20015246:	1000                	addi	s0,sp,32
20015248:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:592
    return __metal_controller_interrupt_vector_mode();
2001524c:	a8fff0ef          	jal	ra,20014cda <__metal_controller_interrupt_vector_mode>
20015250:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:593
}
20015252:	853e                	mv	a0,a5
20015254:	40f2                	lw	ra,28(sp)
20015256:	4462                	lw	s0,24(sp)
20015258:	6105                	addi	sp,sp,32
2001525a:	8082                	ret

2001525c <__metal_driver_riscv_cpu_controller_set_vector_mode>:
__metal_driver_riscv_cpu_controller_set_vector_mode():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:596

int __metal_driver_riscv_cpu_controller_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
2001525c:	1101                	addi	sp,sp,-32
2001525e:	ce06                	sw	ra,28(sp)
20015260:	cc22                	sw	s0,24(sp)
20015262:	1000                	addi	s0,sp,32
20015264:	fea42623          	sw	a0,-20(s0)
20015268:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:598

    if (mode == METAL_DIRECT_MODE) {
2001526c:	fe842783          	lw	a5,-24(s0)
20015270:	eb99                	bnez	a5,20015286 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x2a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:599
        __metal_controller_interrupt_vector(
20015272:	200147b7          	lui	a5,0x20014
20015276:	18078593          	addi	a1,a5,384 # 20014180 <__metal_exception_handler>
2001527a:	fe842503          	lw	a0,-24(s0)
2001527e:	aadff0ef          	jal	ra,20014d2a <__metal_controller_interrupt_vector>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:601
            mode, (void *)(uintptr_t)&__metal_exception_handler);
        return 0;
20015282:	4781                	li	a5,0
20015284:	a00d                	j	200152a6 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:603
    }
    if (mode == METAL_VECTOR_MODE) {
20015286:	fe842703          	lw	a4,-24(s0)
2001528a:	4785                	li	a5,1
2001528c:	00f71c63          	bne	a4,a5,200152a4 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x48>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:604
        __metal_controller_interrupt_vector(
20015290:	200197b7          	lui	a5,0x20019
20015294:	90078593          	addi	a1,a5,-1792 # 20018900 <__metal_vector_table>
20015298:	fe842503          	lw	a0,-24(s0)
2001529c:	a8fff0ef          	jal	ra,20014d2a <__metal_controller_interrupt_vector>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:606
            mode, (void *)(uintptr_t)__metal_vector_table);
        return 0;
200152a0:	4781                	li	a5,0
200152a2:	a011                	j	200152a6 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:608
    }
    return -1;
200152a4:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:609
}
200152a6:	853e                	mv	a0,a5
200152a8:	40f2                	lw	ra,28(sp)
200152aa:	4462                	lw	s0,24(sp)
200152ac:	6105                	addi	sp,sp,32
200152ae:	8082                	ret

200152b0 <__metal_driver_riscv_cpu_controller_command_request>:
__metal_driver_riscv_cpu_controller_command_request():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:612

int __metal_driver_riscv_cpu_controller_command_request(
    struct metal_interrupt *controller, int cmd, void *data) {
200152b0:	1101                	addi	sp,sp,-32
200152b2:	ce22                	sw	s0,28(sp)
200152b4:	1000                	addi	s0,sp,32
200152b6:	fea42623          	sw	a0,-20(s0)
200152ba:	feb42423          	sw	a1,-24(s0)
200152be:	fec42223          	sw	a2,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:615
    /* NOP for now, unless local interrupt lines the like of clic, clint, plic
     */
    return 0;
200152c2:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:616
}
200152c4:	853e                	mv	a0,a5
200152c6:	4472                	lw	s0,28(sp)
200152c8:	6105                	addi	sp,sp,32
200152ca:	8082                	ret

200152cc <__metal_driver_cpu_mcycle_get>:
__metal_driver_cpu_mcycle_get():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:620

/* CPU driver !!! */

unsigned long long __metal_driver_cpu_mcycle_get(struct metal_cpu *cpu) {
200152cc:	7139                	addi	sp,sp,-64
200152ce:	de22                	sw	s0,60(sp)
200152d0:	0080                	addi	s0,sp,64
200152d2:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:621
    unsigned long long val = 0;
200152d6:	4301                	li	t1,0
200152d8:	4381                	li	t2,0
200152da:	fe642423          	sw	t1,-24(s0)
200152de:	fe742623          	sw	t2,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:627 (discriminator 1)

#if __riscv_xlen == 32
    unsigned long hi, hi1, lo;

    do {
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi));
200152e2:	b8002573          	csrr	a0,mcycleh
200152e6:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:628 (discriminator 1)
        __asm__ volatile("csrr %0, mcycle" : "=r"(lo));
200152ea:	b0002573          	csrr	a0,mcycle
200152ee:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:629 (discriminator 1)
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi1));
200152f2:	b8002573          	csrr	a0,mcycleh
200152f6:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:632 (discriminator 1)
        /* hi != hi1 means mcycle overflow during we get value,
         * so we must retry. */
    } while (hi != hi1);
200152fa:	fe442883          	lw	a7,-28(s0)
200152fe:	fdc42503          	lw	a0,-36(s0)
20015302:	fea890e3          	bne	a7,a0,200152e2 <__metal_driver_cpu_mcycle_get+0x16>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:634

    val = ((unsigned long long)hi << 32) | lo;
20015306:	fe442503          	lw	a0,-28(s0)
2001530a:	85aa                	mv	a1,a0
2001530c:	4601                	li	a2,0
2001530e:	00059813          	slli	a6,a1,0x0
20015312:	4781                	li	a5,0
20015314:	fe042603          	lw	a2,-32(s0)
20015318:	86b2                	mv	a3,a2
2001531a:	4701                	li	a4,0
2001531c:	00d7e633          	or	a2,a5,a3
20015320:	fec42423          	sw	a2,-24(s0)
20015324:	00e867b3          	or	a5,a6,a4
20015328:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:639
#else
    __asm__ volatile("csrr %0, mcycle" : "=r"(val));
#endif

    return val;
2001532c:	fe842783          	lw	a5,-24(s0)
20015330:	fec42803          	lw	a6,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:640
}
20015334:	853e                	mv	a0,a5
20015336:	85c2                	mv	a1,a6
20015338:	5472                	lw	s0,60(sp)
2001533a:	6121                	addi	sp,sp,64
2001533c:	8082                	ret

2001533e <__metal_driver_cpu_timebase_get>:
__metal_driver_cpu_timebase_get():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:642

unsigned long long __metal_driver_cpu_timebase_get(struct metal_cpu *cpu) {
2001533e:	7179                	addi	sp,sp,-48
20015340:	d606                	sw	ra,44(sp)
20015342:	d422                	sw	s0,40(sp)
20015344:	d24a                	sw	s2,36(sp)
20015346:	d04e                	sw	s3,32(sp)
20015348:	1800                	addi	s0,sp,48
2001534a:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:644
    int timebase;
    if (!cpu) {
2001534e:	fdc42783          	lw	a5,-36(s0)
20015352:	e781                	bnez	a5,2001535a <__metal_driver_cpu_timebase_get+0x1c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:645
        return 0;
20015354:	4901                	li	s2,0
20015356:	4981                	li	s3,0
20015358:	a821                	j	20015370 <__metal_driver_cpu_timebase_get+0x32>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:648
    }

    timebase = __metal_driver_cpu_timebase((struct metal_cpu *)cpu);
2001535a:	fdc42503          	lw	a0,-36(s0)
2001535e:	99bfe0ef          	jal	ra,20013cf8 <__metal_driver_cpu_timebase>
20015362:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:649
    return timebase;
20015366:	fec42783          	lw	a5,-20(s0)
2001536a:	893e                	mv	s2,a5
2001536c:	87fd                	srai	a5,a5,0x1f
2001536e:	89be                	mv	s3,a5
20015370:	87ca                	mv	a5,s2
20015372:	884e                	mv	a6,s3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:650
}
20015374:	853e                	mv	a0,a5
20015376:	85c2                	mv	a1,a6
20015378:	50b2                	lw	ra,44(sp)
2001537a:	5422                	lw	s0,40(sp)
2001537c:	5912                	lw	s2,36(sp)
2001537e:	5982                	lw	s3,32(sp)
20015380:	6145                	addi	sp,sp,48
20015382:	8082                	ret

20015384 <__metal_driver_cpu_mtime_get>:
__metal_driver_cpu_mtime_get():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:652

unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu) {
20015384:	7179                	addi	sp,sp,-48
20015386:	d606                	sw	ra,44(sp)
20015388:	d422                	sw	s0,40(sp)
2001538a:	1800                	addi	s0,sp,48
2001538c:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:653
    unsigned long long time = 0;
20015390:	4781                	li	a5,0
20015392:	4801                	li	a6,0
20015394:	fef42023          	sw	a5,-32(s0)
20015398:	ff042223          	sw	a6,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:657
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
2001539c:	fdc42503          	lw	a0,-36(s0)
200153a0:	983fe0ef          	jal	ra,20013d22 <__metal_driver_cpu_interrupt_controller>
200153a4:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:659

    if (intc) {
200153a8:	fec42783          	lw	a5,-20(s0)
200153ac:	c78d                	beqz	a5,200153d6 <__metal_driver_cpu_mtime_get+0x52>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:660
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
200153ae:	fec42783          	lw	a5,-20(s0)
200153b2:	13c7a783          	lw	a5,316(a5)
200153b6:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:661
        if (tmr_intc) {
200153ba:	fe842783          	lw	a5,-24(s0)
200153be:	cf81                	beqz	a5,200153d6 <__metal_driver_cpu_mtime_get+0x52>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:662
            tmr_intc->vtable->command_request(tmr_intc, METAL_TIMER_MTIME_GET,
200153c0:	fe842783          	lw	a5,-24(s0)
200153c4:	439c                	lw	a5,0(a5)
200153c6:	47f8                	lw	a4,76(a5)
200153c8:	fe040793          	addi	a5,s0,-32
200153cc:	863e                	mv	a2,a5
200153ce:	4585                	li	a1,1
200153d0:	fe842503          	lw	a0,-24(s0)
200153d4:	9702                	jalr	a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:666
                                              &time);
        }
    }
    return time;
200153d6:	fe042783          	lw	a5,-32(s0)
200153da:	fe442803          	lw	a6,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:667
}
200153de:	853e                	mv	a0,a5
200153e0:	85c2                	mv	a1,a6
200153e2:	50b2                	lw	ra,44(sp)
200153e4:	5422                	lw	s0,40(sp)
200153e6:	6145                	addi	sp,sp,48
200153e8:	8082                	ret

200153ea <__metal_driver_cpu_mtimecmp_set>:
__metal_driver_cpu_mtimecmp_set():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:670

int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time) {
200153ea:	7179                	addi	sp,sp,-48
200153ec:	d606                	sw	ra,44(sp)
200153ee:	d422                	sw	s0,40(sp)
200153f0:	d226                	sw	s1,36(sp)
200153f2:	1800                	addi	s0,sp,48
200153f4:	fca42e23          	sw	a0,-36(s0)
200153f8:	fcb42823          	sw	a1,-48(s0)
200153fc:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:671
    int rc = -1;
20015400:	57fd                	li	a5,-1
20015402:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:675
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20015406:	fdc42503          	lw	a0,-36(s0)
2001540a:	919fe0ef          	jal	ra,20013d22 <__metal_driver_cpu_interrupt_controller>
2001540e:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:677

    if (intc) {
20015412:	fe842783          	lw	a5,-24(s0)
20015416:	cf8d                	beqz	a5,20015450 <__metal_driver_cpu_mtimecmp_set+0x66>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:678
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20015418:	fe842783          	lw	a5,-24(s0)
2001541c:	13c7a783          	lw	a5,316(a5)
20015420:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:679
        if (tmr_intc) {
20015424:	fe442783          	lw	a5,-28(s0)
20015428:	c785                	beqz	a5,20015450 <__metal_driver_cpu_mtimecmp_set+0x66>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:680
            rc = tmr_intc->vtable->mtimecmp_set(
2001542a:	fe442783          	lw	a5,-28(s0)
2001542e:	439c                	lw	a5,0(a5)
20015430:	4ba4                	lw	s1,80(a5)
20015432:	fdc42503          	lw	a0,-36(s0)
20015436:	89ffe0ef          	jal	ra,20013cd4 <__metal_driver_cpu_hartid>
2001543a:	87aa                	mv	a5,a0
2001543c:	fd042603          	lw	a2,-48(s0)
20015440:	fd442683          	lw	a3,-44(s0)
20015444:	85be                	mv	a1,a5
20015446:	fe442503          	lw	a0,-28(s0)
2001544a:	9482                	jalr	s1
2001544c:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:684
                tmr_intc, __metal_driver_cpu_hartid(cpu), time);
        }
    }
    return rc;
20015450:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:685
}
20015454:	853e                	mv	a0,a5
20015456:	50b2                	lw	ra,44(sp)
20015458:	5422                	lw	s0,40(sp)
2001545a:	5492                	lw	s1,36(sp)
2001545c:	6145                	addi	sp,sp,48
2001545e:	8082                	ret

20015460 <__metal_driver_cpu_timer_controller_interrupt>:
__metal_driver_cpu_timer_controller_interrupt():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:688

struct metal_interrupt *
__metal_driver_cpu_timer_controller_interrupt(struct metal_cpu *cpu) {
20015460:	1101                	addi	sp,sp,-32
20015462:	ce22                	sw	s0,28(sp)
20015464:	1000                	addi	s0,sp,32
20015466:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:690
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
2001546a:	81018793          	addi	a5,gp,-2032 # 80000ad0 <__metal_dt_clint_2000000>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:699
#else
#pragma message("There is no interrupt controller for Timer interrupt")
    return NULL;
#endif
#endif
}
2001546e:	853e                	mv	a0,a5
20015470:	4472                	lw	s0,28(sp)
20015472:	6105                	addi	sp,sp,32
20015474:	8082                	ret

20015476 <__metal_driver_cpu_get_timer_interrupt_id>:
__metal_driver_cpu_get_timer_interrupt_id():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:701

int __metal_driver_cpu_get_timer_interrupt_id(struct metal_cpu *cpu) {
20015476:	1101                	addi	sp,sp,-32
20015478:	ce22                	sw	s0,28(sp)
2001547a:	1000                	addi	s0,sp,32
2001547c:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:702
    return METAL_INTERRUPT_ID_TMR;
20015480:	479d                	li	a5,7
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:703
}
20015482:	853e                	mv	a0,a5
20015484:	4472                	lw	s0,28(sp)
20015486:	6105                	addi	sp,sp,32
20015488:	8082                	ret

2001548a <__metal_driver_cpu_sw_controller_interrupt>:
__metal_driver_cpu_sw_controller_interrupt():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:706

struct metal_interrupt *
__metal_driver_cpu_sw_controller_interrupt(struct metal_cpu *cpu) {
2001548a:	1101                	addi	sp,sp,-32
2001548c:	ce22                	sw	s0,28(sp)
2001548e:	1000                	addi	s0,sp,32
20015490:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:708
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
20015494:	81018793          	addi	a5,gp,-2032 # 80000ad0 <__metal_dt_clint_2000000>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:717
#else
#pragma message("There is no interrupt controller for Software interrupt")
    return NULL;
#endif
#endif
}
20015498:	853e                	mv	a0,a5
2001549a:	4472                	lw	s0,28(sp)
2001549c:	6105                	addi	sp,sp,32
2001549e:	8082                	ret

200154a0 <__metal_driver_cpu_get_sw_interrupt_id>:
__metal_driver_cpu_get_sw_interrupt_id():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:719

int __metal_driver_cpu_get_sw_interrupt_id(struct metal_cpu *cpu) {
200154a0:	1101                	addi	sp,sp,-32
200154a2:	ce22                	sw	s0,28(sp)
200154a4:	1000                	addi	s0,sp,32
200154a6:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:720
    return METAL_INTERRUPT_ID_SW;
200154aa:	478d                	li	a5,3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:721
}
200154ac:	853e                	mv	a0,a5
200154ae:	4472                	lw	s0,28(sp)
200154b0:	6105                	addi	sp,sp,32
200154b2:	8082                	ret

200154b4 <__metal_driver_cpu_set_sw_ipi>:
__metal_driver_cpu_set_sw_ipi():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:723

int __metal_driver_cpu_set_sw_ipi(struct metal_cpu *cpu, int hartid) {
200154b4:	7179                	addi	sp,sp,-48
200154b6:	d606                	sw	ra,44(sp)
200154b8:	d422                	sw	s0,40(sp)
200154ba:	1800                	addi	s0,sp,48
200154bc:	fca42e23          	sw	a0,-36(s0)
200154c0:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:724
    int rc = -1;
200154c4:	57fd                	li	a5,-1
200154c6:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:728
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
200154ca:	fdc42503          	lw	a0,-36(s0)
200154ce:	855fe0ef          	jal	ra,20013d22 <__metal_driver_cpu_interrupt_controller>
200154d2:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:730

    if (intc) {
200154d6:	fe842783          	lw	a5,-24(s0)
200154da:	c79d                	beqz	a5,20015508 <__metal_driver_cpu_set_sw_ipi+0x54>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:731
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
200154dc:	fe842783          	lw	a5,-24(s0)
200154e0:	0dc7a783          	lw	a5,220(a5)
200154e4:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:732
        if (sw_intc) {
200154e8:	fe442783          	lw	a5,-28(s0)
200154ec:	cf91                	beqz	a5,20015508 <__metal_driver_cpu_set_sw_ipi+0x54>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:733
            rc = sw_intc->vtable->command_request(
200154ee:	fe442783          	lw	a5,-28(s0)
200154f2:	439c                	lw	a5,0(a5)
200154f4:	47f8                	lw	a4,76(a5)
200154f6:	fd840793          	addi	a5,s0,-40
200154fa:	863e                	mv	a2,a5
200154fc:	458d                	li	a1,3
200154fe:	fe442503          	lw	a0,-28(s0)
20015502:	9702                	jalr	a4
20015504:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:737
                sw_intc, METAL_SOFTWARE_IPI_SET, &hartid);
        }
    }
    return rc;
20015508:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:738
}
2001550c:	853e                	mv	a0,a5
2001550e:	50b2                	lw	ra,44(sp)
20015510:	5422                	lw	s0,40(sp)
20015512:	6145                	addi	sp,sp,48
20015514:	8082                	ret

20015516 <__metal_driver_cpu_clear_sw_ipi>:
__metal_driver_cpu_clear_sw_ipi():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:740

int __metal_driver_cpu_clear_sw_ipi(struct metal_cpu *cpu, int hartid) {
20015516:	7179                	addi	sp,sp,-48
20015518:	d606                	sw	ra,44(sp)
2001551a:	d422                	sw	s0,40(sp)
2001551c:	1800                	addi	s0,sp,48
2001551e:	fca42e23          	sw	a0,-36(s0)
20015522:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:741
    int rc = -1;
20015526:	57fd                	li	a5,-1
20015528:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:745
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
2001552c:	fdc42503          	lw	a0,-36(s0)
20015530:	ff2fe0ef          	jal	ra,20013d22 <__metal_driver_cpu_interrupt_controller>
20015534:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:747

    if (intc) {
20015538:	fe842783          	lw	a5,-24(s0)
2001553c:	c79d                	beqz	a5,2001556a <__metal_driver_cpu_clear_sw_ipi+0x54>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:748
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
2001553e:	fe842783          	lw	a5,-24(s0)
20015542:	0dc7a783          	lw	a5,220(a5)
20015546:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:749
        if (sw_intc) {
2001554a:	fe442783          	lw	a5,-28(s0)
2001554e:	cf91                	beqz	a5,2001556a <__metal_driver_cpu_clear_sw_ipi+0x54>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:750
            rc = sw_intc->vtable->command_request(
20015550:	fe442783          	lw	a5,-28(s0)
20015554:	439c                	lw	a5,0(a5)
20015556:	47f8                	lw	a4,76(a5)
20015558:	fd840793          	addi	a5,s0,-40
2001555c:	863e                	mv	a2,a5
2001555e:	4589                	li	a1,2
20015560:	fe442503          	lw	a0,-28(s0)
20015564:	9702                	jalr	a4
20015566:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:754
                sw_intc, METAL_SOFTWARE_IPI_CLEAR, &hartid);
        }
    }
    return rc;
2001556a:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:755
}
2001556e:	853e                	mv	a0,a5
20015570:	50b2                	lw	ra,44(sp)
20015572:	5422                	lw	s0,40(sp)
20015574:	6145                	addi	sp,sp,48
20015576:	8082                	ret

20015578 <__metal_driver_cpu_get_msip>:
__metal_driver_cpu_get_msip():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:757

int __metal_driver_cpu_get_msip(struct metal_cpu *cpu, int hartid) {
20015578:	7179                	addi	sp,sp,-48
2001557a:	d606                	sw	ra,44(sp)
2001557c:	d422                	sw	s0,40(sp)
2001557e:	1800                	addi	s0,sp,48
20015580:	fca42e23          	sw	a0,-36(s0)
20015584:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:758
    int rc = 0;
20015588:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:762
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
2001558c:	fdc42503          	lw	a0,-36(s0)
20015590:	f92fe0ef          	jal	ra,20013d22 <__metal_driver_cpu_interrupt_controller>
20015594:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:764

    if (intc) {
20015598:	fe842783          	lw	a5,-24(s0)
2001559c:	c79d                	beqz	a5,200155ca <__metal_driver_cpu_get_msip+0x52>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:765
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
2001559e:	fe842783          	lw	a5,-24(s0)
200155a2:	0dc7a783          	lw	a5,220(a5)
200155a6:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:766
        if (sw_intc) {
200155aa:	fe442783          	lw	a5,-28(s0)
200155ae:	cf91                	beqz	a5,200155ca <__metal_driver_cpu_get_msip+0x52>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:767
            rc = sw_intc->vtable->command_request(
200155b0:	fe442783          	lw	a5,-28(s0)
200155b4:	439c                	lw	a5,0(a5)
200155b6:	47f8                	lw	a4,76(a5)
200155b8:	fd840793          	addi	a5,s0,-40
200155bc:	863e                	mv	a2,a5
200155be:	4591                	li	a1,4
200155c0:	fe442503          	lw	a0,-28(s0)
200155c4:	9702                	jalr	a4
200155c6:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:771
                sw_intc, METAL_SOFTWARE_MSIP_GET, &hartid);
        }
    }
    return rc;
200155ca:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:772
}
200155ce:	853e                	mv	a0,a5
200155d0:	50b2                	lw	ra,44(sp)
200155d2:	5422                	lw	s0,40(sp)
200155d4:	6145                	addi	sp,sp,48
200155d6:	8082                	ret

200155d8 <__metal_driver_cpu_controller_interrupt>:
__metal_driver_cpu_controller_interrupt():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:775

struct metal_interrupt *
__metal_driver_cpu_controller_interrupt(struct metal_cpu *cpu) {
200155d8:	1101                	addi	sp,sp,-32
200155da:	ce06                	sw	ra,28(sp)
200155dc:	cc22                	sw	s0,24(sp)
200155de:	1000                	addi	s0,sp,32
200155e0:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:776
    return __metal_driver_cpu_interrupt_controller(cpu);
200155e4:	fec42503          	lw	a0,-20(s0)
200155e8:	f3afe0ef          	jal	ra,20013d22 <__metal_driver_cpu_interrupt_controller>
200155ec:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:777
}
200155ee:	853e                	mv	a0,a5
200155f0:	40f2                	lw	ra,28(sp)
200155f2:	4462                	lw	s0,24(sp)
200155f4:	6105                	addi	sp,sp,32
200155f6:	8082                	ret

200155f8 <__metal_driver_cpu_exception_register>:
__metal_driver_cpu_exception_register():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:798
    }
    return -1;
}

int __metal_driver_cpu_exception_register(struct metal_cpu *cpu, int ecode,
                                          metal_exception_handler_t isr) {
200155f8:	7179                	addi	sp,sp,-48
200155fa:	d606                	sw	ra,44(sp)
200155fc:	d422                	sw	s0,40(sp)
200155fe:	1800                	addi	s0,sp,48
20015600:	fca42e23          	sw	a0,-36(s0)
20015604:	fcb42c23          	sw	a1,-40(s0)
20015608:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:801
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
2001560c:	fdc42503          	lw	a0,-36(s0)
20015610:	f12fe0ef          	jal	ra,20013d22 <__metal_driver_cpu_interrupt_controller>
20015614:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:803

    if (intc) {
20015618:	fec42783          	lw	a5,-20(s0)
2001561c:	cb99                	beqz	a5,20015632 <__metal_driver_cpu_exception_register+0x3a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:804
        return __metal_exception_register((struct metal_interrupt *)intc, ecode,
2001561e:	fd442603          	lw	a2,-44(s0)
20015622:	fd842583          	lw	a1,-40(s0)
20015626:	fec42503          	lw	a0,-20(s0)
2001562a:	8b9ff0ef          	jal	ra,20014ee2 <__metal_exception_register>
2001562e:	87aa                	mv	a5,a0
20015630:	a011                	j	20015634 <__metal_driver_cpu_exception_register+0x3c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:807
                                          isr);
    }
    return -1;
20015632:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:808
}
20015634:	853e                	mv	a0,a5
20015636:	50b2                	lw	ra,44(sp)
20015638:	5422                	lw	s0,40(sp)
2001563a:	6145                	addi	sp,sp,48
2001563c:	8082                	ret

2001563e <__metal_driver_cpu_get_instruction_length>:
__metal_driver_cpu_get_instruction_length():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:811

int __metal_driver_cpu_get_instruction_length(struct metal_cpu *cpu,
                                              uintptr_t epc) {
2001563e:	1101                	addi	sp,sp,-32
20015640:	ce22                	sw	s0,28(sp)
20015642:	1000                	addi	s0,sp,32
20015644:	fea42623          	sw	a0,-20(s0)
20015648:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:817
    /**
     * Per ISA compressed instruction has last two bits of opcode set.
     * The encoding '00' '01' '10' are used for compressed instruction.
     * Only enconding '11' isn't regarded as compressed instruction (>16b).
     */
    return ((*(unsigned short *)epc & METAL_INSN_LENGTH_MASK) ==
2001564c:	fe842783          	lw	a5,-24(s0)
20015650:	0007d783          	lhu	a5,0(a5)
20015654:	0037f713          	andi	a4,a5,3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:820
            METAL_INSN_NOT_COMPRESSED)
               ? 4
               : 2;
20015658:	478d                	li	a5,3
2001565a:	00f71463          	bne	a4,a5,20015662 <__metal_driver_cpu_get_instruction_length+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 1)
2001565e:	4791                	li	a5,4
20015660:	a011                	j	20015664 <__metal_driver_cpu_get_instruction_length+0x26>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 2)
20015662:	4789                	li	a5,2
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:821 (discriminator 5)
}
20015664:	853e                	mv	a0,a5
20015666:	4472                	lw	s0,28(sp)
20015668:	6105                	addi	sp,sp,32
2001566a:	8082                	ret

2001566c <__metal_driver_cpu_get_exception_pc>:
__metal_driver_cpu_get_exception_pc():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:823

uintptr_t __metal_driver_cpu_get_exception_pc(struct metal_cpu *cpu) {
2001566c:	7179                	addi	sp,sp,-48
2001566e:	d622                	sw	s0,44(sp)
20015670:	1800                	addi	s0,sp,48
20015672:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:825
    uintptr_t mepc;
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
20015676:	341027f3          	csrr	a5,mepc
2001567a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:826
    return mepc;
2001567e:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:827
}
20015682:	853e                	mv	a0,a5
20015684:	5432                	lw	s0,44(sp)
20015686:	6145                	addi	sp,sp,48
20015688:	8082                	ret

2001568a <__metal_driver_cpu_set_exception_pc>:
__metal_driver_cpu_set_exception_pc():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:829

int __metal_driver_cpu_set_exception_pc(struct metal_cpu *cpu, uintptr_t mepc) {
2001568a:	1101                	addi	sp,sp,-32
2001568c:	ce22                	sw	s0,28(sp)
2001568e:	1000                	addi	s0,sp,32
20015690:	fea42623          	sw	a0,-20(s0)
20015694:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:830
    __asm__ volatile("csrw mepc, %0" ::"r"(mepc));
20015698:	fe842783          	lw	a5,-24(s0)
2001569c:	34179073          	csrw	mepc,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:831
    return 0;
200156a0:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:832
}
200156a2:	853e                	mv	a0,a5
200156a4:	4472                	lw	s0,28(sp)
200156a6:	6105                	addi	sp,sp,32
200156a8:	8082                	ret

200156aa <__metal_driver_cpu_get_buserror>:
__metal_driver_cpu_get_buserror():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:834

struct metal_buserror *__metal_driver_cpu_get_buserror(struct metal_cpu *cpu) {
200156aa:	1101                	addi	sp,sp,-32
200156ac:	ce06                	sw	ra,28(sp)
200156ae:	cc22                	sw	s0,24(sp)
200156b0:	1000                	addi	s0,sp,32
200156b2:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:835
    return __metal_driver_cpu_buserror(cpu);
200156b6:	fec42503          	lw	a0,-20(s0)
200156ba:	e92fe0ef          	jal	ra,20013d4c <__metal_driver_cpu_buserror>
200156be:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:836
}
200156c0:	853e                	mv	a0,a5
200156c2:	40f2                	lw	ra,28(sp)
200156c4:	4462                	lw	s0,24(sp)
200156c6:	6105                	addi	sp,sp,32
200156c8:	8082                	ret

200156ca <__metal_driver_sifive_plic0_control_base>:
__metal_driver_sifive_plic0_control_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:345



/* --------------------- sifive_plic0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_plic0_control_base(struct metal_interrupt *controller)
{
200156ca:	1101                	addi	sp,sp,-32
200156cc:	ce22                	sw	s0,28(sp)
200156ce:	1000                	addi	s0,sp,32
200156d0:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:346
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
200156d4:	fec42703          	lw	a4,-20(s0)
200156d8:	800007b7          	lui	a5,0x80000
200156dc:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffeca0>
200156e0:	00f71563          	bne	a4,a5,200156ea <__metal_driver_sifive_plic0_control_base+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:347
		return METAL_RISCV_PLIC0_C000000_BASE_ADDRESS;
200156e4:	0c0007b7          	lui	a5,0xc000
200156e8:	a011                	j	200156ec <__metal_driver_sifive_plic0_control_base+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:350
	}
	else {
		return 0;
200156ea:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:352
	}
}
200156ec:	853e                	mv	a0,a5
200156ee:	4472                	lw	s0,28(sp)
200156f0:	6105                	addi	sp,sp,32
200156f2:	8082                	ret

200156f4 <__metal_driver_sifive_plic0_num_interrupts>:
__metal_driver_sifive_plic0_num_interrupts():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:365
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_plic0_num_interrupts(struct metal_interrupt *controller)
{
200156f4:	1101                	addi	sp,sp,-32
200156f6:	ce22                	sw	s0,28(sp)
200156f8:	1000                	addi	s0,sp,32
200156fa:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:366
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
200156fe:	fec42703          	lw	a4,-20(s0)
20015702:	800007b7          	lui	a5,0x80000
20015706:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffeca0>
2001570a:	00f71563          	bne	a4,a5,20015714 <__metal_driver_sifive_plic0_num_interrupts+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:367
		return METAL_RISCV_PLIC0_C000000_RISCV_NDEV;
2001570e:	03500793          	li	a5,53
20015712:	a011                	j	20015716 <__metal_driver_sifive_plic0_num_interrupts+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:370
	}
	else {
		return 0;
20015714:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:372
	}
}
20015716:	853e                	mv	a0,a5
20015718:	4472                	lw	s0,28(sp)
2001571a:	6105                	addi	sp,sp,32
2001571c:	8082                	ret

2001571e <__metal_driver_sifive_plic0_max_priority>:
__metal_driver_sifive_plic0_max_priority():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:375

static __inline__ int __metal_driver_sifive_plic0_max_priority(struct metal_interrupt *controller)
{
2001571e:	1101                	addi	sp,sp,-32
20015720:	ce22                	sw	s0,28(sp)
20015722:	1000                	addi	s0,sp,32
20015724:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:376
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20015728:	fec42703          	lw	a4,-20(s0)
2001572c:	800007b7          	lui	a5,0x80000
20015730:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffeca0>
20015734:	00f71463          	bne	a4,a5,2001573c <__metal_driver_sifive_plic0_max_priority+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:377
		return METAL_RISCV_PLIC0_C000000_RISCV_MAX_PRIORITY;
20015738:	479d                	li	a5,7
2001573a:	a011                	j	2001573e <__metal_driver_sifive_plic0_max_priority+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:380
	}
	else {
		return 0;
2001573c:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:382
	}
}
2001573e:	853e                	mv	a0,a5
20015740:	4472                	lw	s0,28(sp)
20015742:	6105                	addi	sp,sp,32
20015744:	8082                	ret

20015746 <__metal_driver_sifive_plic0_interrupt_parents>:
__metal_driver_sifive_plic0_interrupt_parents():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:385

static __inline__ struct metal_interrupt * __metal_driver_sifive_plic0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
20015746:	1101                	addi	sp,sp,-32
20015748:	ce22                	sw	s0,28(sp)
2001574a:	1000                	addi	s0,sp,32
2001574c:	fea42623          	sw	a0,-20(s0)
20015750:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:386
	if (idx == 0) {
20015754:	fe842783          	lw	a5,-24(s0)
20015758:	e791                	bnez	a5,20015764 <__metal_driver_sifive_plic0_interrupt_parents+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:387
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
2001575a:	800007b7          	lui	a5,0x80000
2001575e:	09078793          	addi	a5,a5,144 # 80000090 <metal_segment_heap_target_end+0xffffe8d0>
20015762:	a011                	j	20015766 <__metal_driver_sifive_plic0_interrupt_parents+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:390
	}
	else {
		return NULL;
20015764:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:392
	}
}
20015766:	853e                	mv	a0,a5
20015768:	4472                	lw	s0,28(sp)
2001576a:	6105                	addi	sp,sp,32
2001576c:	8082                	ret

2001576e <__metal_driver_sifive_plic0_interrupt_lines>:
__metal_driver_sifive_plic0_interrupt_lines():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:395

static __inline__ int __metal_driver_sifive_plic0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
2001576e:	1101                	addi	sp,sp,-32
20015770:	ce22                	sw	s0,28(sp)
20015772:	1000                	addi	s0,sp,32
20015774:	fea42623          	sw	a0,-20(s0)
20015778:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:396
	if (idx == 0) {
2001577c:	fe842783          	lw	a5,-24(s0)
20015780:	e399                	bnez	a5,20015786 <__metal_driver_sifive_plic0_interrupt_lines+0x18>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:397
		return 11;
20015782:	47ad                	li	a5,11
20015784:	a011                	j	20015788 <__metal_driver_sifive_plic0_interrupt_lines+0x1a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:400
	}
	else {
		return 0;
20015786:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:402
	}
}
20015788:	853e                	mv	a0,a5
2001578a:	4472                	lw	s0,28(sp)
2001578c:	6105                	addi	sp,sp,32
2001578e:	8082                	ret

20015790 <__metal_driver_sifive_plic0_context_ids>:
__metal_driver_sifive_plic0_context_ids():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:405

static __inline__ int __metal_driver_sifive_plic0_context_ids(int hartid)
{
20015790:	1101                	addi	sp,sp,-32
20015792:	ce22                	sw	s0,28(sp)
20015794:	1000                	addi	s0,sp,32
20015796:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:406
	if (hartid == 0) {
2001579a:	fec42783          	lw	a5,-20(s0)
2001579e:	e399                	bnez	a5,200157a4 <__metal_driver_sifive_plic0_context_ids+0x14>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:407
		return 0;
200157a0:	4781                	li	a5,0
200157a2:	a011                	j	200157a6 <__metal_driver_sifive_plic0_context_ids+0x16>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:410
	}
	else {
		return -1;
200157a4:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:412
	}
}
200157a6:	853e                	mv	a0,a5
200157a8:	4472                	lw	s0,28(sp)
200157aa:	6105                	addi	sp,sp,32
200157ac:	8082                	ret

200157ae <__metal_plic0_claim_interrupt>:
__metal_plic0_claim_interrupt():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:18
#include <metal/machine.h>
#include <metal/shutdown.h>

unsigned int
__metal_plic0_claim_interrupt(struct __metal_driver_riscv_plic0 *plic,
                              int context_id) {
200157ae:	7179                	addi	sp,sp,-48
200157b0:	d606                	sw	ra,44(sp)
200157b2:	d422                	sw	s0,40(sp)
200157b4:	1800                	addi	s0,sp,48
200157b6:	fca42e23          	sw	a0,-36(s0)
200157ba:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:19
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
200157be:	fdc42503          	lw	a0,-36(s0)
200157c2:	3721                	jal	200156ca <__metal_driver_sifive_plic0_control_base>
200157c4:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:21
        (struct metal_interrupt *)plic);
    return __METAL_ACCESS_ONCE(
200157c8:	fd842783          	lw	a5,-40(s0)
200157cc:	00c79713          	slli	a4,a5,0xc
200157d0:	fec42783          	lw	a5,-20(s0)
200157d4:	973e                	add	a4,a4,a5
200157d6:	002007b7          	lui	a5,0x200
200157da:	0791                	addi	a5,a5,4
200157dc:	97ba                	add	a5,a5,a4
200157de:	439c                	lw	a5,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:25
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM));
}
200157e0:	853e                	mv	a0,a5
200157e2:	50b2                	lw	ra,44(sp)
200157e4:	5422                	lw	s0,40(sp)
200157e6:	6145                	addi	sp,sp,48
200157e8:	8082                	ret

200157ea <__metal_plic0_complete_interrupt>:
__metal_plic0_complete_interrupt():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:28

void __metal_plic0_complete_interrupt(struct __metal_driver_riscv_plic0 *plic,
                                      int context_id, unsigned int id) {
200157ea:	7179                	addi	sp,sp,-48
200157ec:	d606                	sw	ra,44(sp)
200157ee:	d422                	sw	s0,40(sp)
200157f0:	1800                	addi	s0,sp,48
200157f2:	fca42e23          	sw	a0,-36(s0)
200157f6:	fcb42c23          	sw	a1,-40(s0)
200157fa:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:29
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
200157fe:	fdc42503          	lw	a0,-36(s0)
20015802:	35e1                	jal	200156ca <__metal_driver_sifive_plic0_control_base>
20015804:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:31
        (struct metal_interrupt *)plic);
    __METAL_ACCESS_ONCE(
20015808:	fd842783          	lw	a5,-40(s0)
2001580c:	00c79713          	slli	a4,a5,0xc
20015810:	fec42783          	lw	a5,-20(s0)
20015814:	973e                	add	a4,a4,a5
20015816:	002007b7          	lui	a5,0x200
2001581a:	0791                	addi	a5,a5,4
2001581c:	97ba                	add	a5,a5,a4
2001581e:	873e                	mv	a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:34
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM)) = id;
20015820:	fd442783          	lw	a5,-44(s0)
20015824:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:35
}
20015826:	0001                	nop
20015828:	50b2                	lw	ra,44(sp)
2001582a:	5422                	lw	s0,40(sp)
2001582c:	6145                	addi	sp,sp,48
2001582e:	8082                	ret

20015830 <__metal_plic0_set_threshold>:
__metal_plic0_set_threshold():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:38

int __metal_plic0_set_threshold(struct metal_interrupt *controller,
                                int context_id, unsigned int threshold) {
20015830:	7179                	addi	sp,sp,-48
20015832:	d606                	sw	ra,44(sp)
20015834:	d422                	sw	s0,40(sp)
20015836:	1800                	addi	s0,sp,48
20015838:	fca42e23          	sw	a0,-36(s0)
2001583c:	fcb42c23          	sw	a1,-40(s0)
20015840:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:40
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
20015844:	fdc42503          	lw	a0,-36(s0)
20015848:	3549                	jal	200156ca <__metal_driver_sifive_plic0_control_base>
2001584a:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:41
    __METAL_ACCESS_ONCE(
2001584e:	fd842783          	lw	a5,-40(s0)
20015852:	00c79713          	slli	a4,a5,0xc
20015856:	fec42783          	lw	a5,-20(s0)
2001585a:	973e                	add	a4,a4,a5
2001585c:	002007b7          	lui	a5,0x200
20015860:	97ba                	add	a5,a5,a4
20015862:	873e                	mv	a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:44
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD)) = threshold;
20015864:	fd442783          	lw	a5,-44(s0)
20015868:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:45
    return 0;
2001586a:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:46
}
2001586c:	853e                	mv	a0,a5
2001586e:	50b2                	lw	ra,44(sp)
20015870:	5422                	lw	s0,40(sp)
20015872:	6145                	addi	sp,sp,48
20015874:	8082                	ret

20015876 <__metal_plic0_get_threshold>:
__metal_plic0_get_threshold():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:49

unsigned int __metal_plic0_get_threshold(struct metal_interrupt *controller,
                                         int context_id) {
20015876:	7179                	addi	sp,sp,-48
20015878:	d606                	sw	ra,44(sp)
2001587a:	d422                	sw	s0,40(sp)
2001587c:	1800                	addi	s0,sp,48
2001587e:	fca42e23          	sw	a0,-36(s0)
20015882:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:51
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
20015886:	fdc42503          	lw	a0,-36(s0)
2001588a:	3581                	jal	200156ca <__metal_driver_sifive_plic0_control_base>
2001588c:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:52
    return __METAL_ACCESS_ONCE(
20015890:	fd842783          	lw	a5,-40(s0)
20015894:	00c79713          	slli	a4,a5,0xc
20015898:	fec42783          	lw	a5,-20(s0)
2001589c:	973e                	add	a4,a4,a5
2001589e:	002007b7          	lui	a5,0x200
200158a2:	97ba                	add	a5,a5,a4
200158a4:	439c                	lw	a5,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:56
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD));
}
200158a6:	853e                	mv	a0,a5
200158a8:	50b2                	lw	ra,44(sp)
200158aa:	5422                	lw	s0,40(sp)
200158ac:	6145                	addi	sp,sp,48
200158ae:	8082                	ret

200158b0 <__metal_driver_riscv_plic0_set_priority>:
__metal_driver_riscv_plic0_set_priority():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:59

int __metal_driver_riscv_plic0_set_priority(struct metal_interrupt *controller,
                                            int id, unsigned int priority) {
200158b0:	7179                	addi	sp,sp,-48
200158b2:	d606                	sw	ra,44(sp)
200158b4:	d422                	sw	s0,40(sp)
200158b6:	1800                	addi	s0,sp,48
200158b8:	fca42e23          	sw	a0,-36(s0)
200158bc:	fcb42c23          	sw	a1,-40(s0)
200158c0:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:60
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
200158c4:	fdc42503          	lw	a0,-36(s0)
200158c8:	3509                	jal	200156ca <__metal_driver_sifive_plic0_control_base>
200158ca:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:62
        (struct metal_interrupt *)controller);
    unsigned int max_priority = __metal_driver_sifive_plic0_max_priority(
200158ce:	fdc42503          	lw	a0,-36(s0)
200158d2:	35b1                	jal	2001571e <__metal_driver_sifive_plic0_max_priority>
200158d4:	87aa                	mv	a5,a0
200158d6:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:64
        (struct metal_interrupt *)controller);
    if ((max_priority) && (priority < max_priority)) {
200158da:	fe842783          	lw	a5,-24(s0)
200158de:	c785                	beqz	a5,20015906 <__metal_driver_riscv_plic0_set_priority+0x56>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:64 (discriminator 1)
200158e0:	fd442703          	lw	a4,-44(s0)
200158e4:	fe842783          	lw	a5,-24(s0)
200158e8:	00f77f63          	bgeu	a4,a5,20015906 <__metal_driver_riscv_plic0_set_priority+0x56>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:65
        __METAL_ACCESS_ONCE(
200158ec:	fd842783          	lw	a5,-40(s0)
200158f0:	078a                	slli	a5,a5,0x2
200158f2:	873e                	mv	a4,a5
200158f4:	fec42783          	lw	a5,-20(s0)
200158f8:	97ba                	add	a5,a5,a4
200158fa:	873e                	mv	a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:67
            (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                               (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT))) =
200158fc:	fd442783          	lw	a5,-44(s0)
20015900:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:69
            priority;
        return 0;
20015902:	4781                	li	a5,0
20015904:	a011                	j	20015908 <__metal_driver_riscv_plic0_set_priority+0x58>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:71
    }
    return -1;
20015906:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:72
}
20015908:	853e                	mv	a0,a5
2001590a:	50b2                	lw	ra,44(sp)
2001590c:	5422                	lw	s0,40(sp)
2001590e:	6145                	addi	sp,sp,48
20015910:	8082                	ret

20015912 <__metal_driver_riscv_plic0_get_priority>:
__metal_driver_riscv_plic0_get_priority():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:76

unsigned int
__metal_driver_riscv_plic0_get_priority(struct metal_interrupt *controller,
                                        int id) {
20015912:	7179                	addi	sp,sp,-48
20015914:	d606                	sw	ra,44(sp)
20015916:	d422                	sw	s0,40(sp)
20015918:	1800                	addi	s0,sp,48
2001591a:	fca42e23          	sw	a0,-36(s0)
2001591e:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:78
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
20015922:	fdc42503          	lw	a0,-36(s0)
20015926:	3355                	jal	200156ca <__metal_driver_sifive_plic0_control_base>
20015928:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:80

    return __METAL_ACCESS_ONCE(
2001592c:	fd842783          	lw	a5,-40(s0)
20015930:	078a                	slli	a5,a5,0x2
20015932:	873e                	mv	a4,a5
20015934:	fec42783          	lw	a5,-20(s0)
20015938:	97ba                	add	a5,a5,a4
2001593a:	439c                	lw	a5,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:83
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                           (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT)));
}
2001593c:	853e                	mv	a0,a5
2001593e:	50b2                	lw	ra,44(sp)
20015940:	5422                	lw	s0,40(sp)
20015942:	6145                	addi	sp,sp,48
20015944:	8082                	ret

20015946 <__metal_plic0_enable>:
__metal_plic0_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:86

int __metal_plic0_enable(struct __metal_driver_riscv_plic0 *plic,
                         int context_id, int id, int enable) {
20015946:	7179                	addi	sp,sp,-48
20015948:	d606                	sw	ra,44(sp)
2001594a:	d422                	sw	s0,40(sp)
2001594c:	1800                	addi	s0,sp,48
2001594e:	fca42e23          	sw	a0,-36(s0)
20015952:	fcb42c23          	sw	a1,-40(s0)
20015956:	fcc42a23          	sw	a2,-44(s0)
2001595a:	fcd42823          	sw	a3,-48(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:88
    unsigned int current;
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
2001595e:	fdc42503          	lw	a0,-36(s0)
20015962:	33a5                	jal	200156ca <__metal_driver_sifive_plic0_control_base>
20015964:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:91
        (struct metal_interrupt *)plic);

    current = __METAL_ACCESS_ONCE(
20015968:	fd842783          	lw	a5,-40(s0)
2001596c:	00779713          	slli	a4,a5,0x7
20015970:	fec42783          	lw	a5,-20(s0)
20015974:	97ba                	add	a5,a5,a4
20015976:	fd442703          	lw	a4,-44(s0)
2001597a:	8715                	srai	a4,a4,0x5
2001597c:	070a                	slli	a4,a4,0x2
2001597e:	973e                	add	a4,a4,a5
20015980:	6789                	lui	a5,0x2
20015982:	97ba                	add	a5,a5,a4
20015984:	439c                	lw	a5,0(a5)
20015986:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:100
    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_ENABLE_BASE +
                           (context_id * METAL_RISCV_PLIC0_ENABLE_PER_HART) +
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
2001598a:	fd042783          	lw	a5,-48(s0)
2001598e:	cf81                	beqz	a5,200159a6 <__metal_plic0_enable+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:99 (discriminator 1)
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
20015990:	fd442783          	lw	a5,-44(s0)
20015994:	8bfd                	andi	a5,a5,31
20015996:	4705                	li	a4,1
20015998:	00f717b3          	sll	a5,a4,a5
2001599c:	873e                	mv	a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 1)
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
2001599e:	fe842783          	lw	a5,-24(s0)
200159a2:	8fd9                	or	a5,a5,a4
200159a4:	a829                	j	200159be <__metal_plic0_enable+0x78>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 2)
200159a6:	fd442783          	lw	a5,-44(s0)
200159aa:	8bfd                	andi	a5,a5,31
200159ac:	4705                	li	a4,1
200159ae:	00f717b3          	sll	a5,a4,a5
200159b2:	fff7c793          	not	a5,a5
200159b6:	873e                	mv	a4,a5
200159b8:	fe842783          	lw	a5,-24(s0)
200159bc:	8ff9                	and	a5,a5,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:95
    __METAL_ACCESS_ONCE(
200159be:	fd842703          	lw	a4,-40(s0)
200159c2:	00771693          	slli	a3,a4,0x7
200159c6:	fec42703          	lw	a4,-20(s0)
200159ca:	9736                	add	a4,a4,a3
200159cc:	fd442683          	lw	a3,-44(s0)
200159d0:	8695                	srai	a3,a3,0x5
200159d2:	068a                	slli	a3,a3,0x2
200159d4:	96ba                	add	a3,a3,a4
200159d6:	6709                	lui	a4,0x2
200159d8:	9736                	add	a4,a4,a3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:98
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
200159da:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:102

    return 0;
200159dc:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:103
}
200159de:	853e                	mv	a0,a5
200159e0:	50b2                	lw	ra,44(sp)
200159e2:	5422                	lw	s0,40(sp)
200159e4:	6145                	addi	sp,sp,48
200159e6:	8082                	ret

200159e8 <__metal_plic0_default_handler>:
__metal_plic0_default_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:105

void __metal_plic0_default_handler(int id, void *priv) { metal_shutdown(300); }
200159e8:	1101                	addi	sp,sp,-32
200159ea:	ce06                	sw	ra,28(sp)
200159ec:	cc22                	sw	s0,24(sp)
200159ee:	1000                	addi	s0,sp,32
200159f0:	fea42623          	sw	a0,-20(s0)
200159f4:	feb42423          	sw	a1,-24(s0)
200159f8:	12c00513          	li	a0,300
200159fc:	54b020ef          	jal	ra,20018746 <metal_shutdown>

20015a00 <__metal_plic0_handler>:
__metal_plic0_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:107

void __metal_plic0_handler(int id, void *priv) {
20015a00:	7179                	addi	sp,sp,-48
20015a02:	d606                	sw	ra,44(sp)
20015a04:	d422                	sw	s0,40(sp)
20015a06:	1800                	addi	s0,sp,48
20015a08:	fca42e23          	sw	a0,-36(s0)
20015a0c:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:108
    struct __metal_driver_riscv_plic0 *plic = priv;
20015a10:	fd842783          	lw	a5,-40(s0)
20015a14:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:110
    int contextid =
        __metal_driver_sifive_plic0_context_ids(__metal_myhart_id());
20015a18:	b88fe0ef          	jal	ra,20013da0 <__metal_myhart_id>
20015a1c:	87aa                	mv	a5,a0
20015a1e:	853e                	mv	a0,a5
20015a20:	3b85                	jal	20015790 <__metal_driver_sifive_plic0_context_ids>
20015a22:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:111
    unsigned int idx = __metal_plic0_claim_interrupt(plic, contextid);
20015a26:	fe842583          	lw	a1,-24(s0)
20015a2a:	fec42503          	lw	a0,-20(s0)
20015a2e:	3341                	jal	200157ae <__metal_plic0_claim_interrupt>
20015a30:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:112
    unsigned int num_interrupts = __metal_driver_sifive_plic0_num_interrupts(
20015a34:	fec42503          	lw	a0,-20(s0)
20015a38:	cbdff0ef          	jal	ra,200156f4 <__metal_driver_sifive_plic0_num_interrupts>
20015a3c:	87aa                	mv	a5,a0
20015a3e:	fef42023          	sw	a5,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:115
        (struct metal_interrupt *)plic);

    if ((idx < num_interrupts) && (plic->metal_exint_table[idx])) {
20015a42:	fe442703          	lw	a4,-28(s0)
20015a46:	fe042783          	lw	a5,-32(s0)
20015a4a:	04f77263          	bgeu	a4,a5,20015a8e <__metal_plic0_handler+0x8e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:115 (discriminator 1)
20015a4e:	fec42703          	lw	a4,-20(s0)
20015a52:	fe442783          	lw	a5,-28(s0)
20015a56:	078a                	slli	a5,a5,0x2
20015a58:	97ba                	add	a5,a5,a4
20015a5a:	479c                	lw	a5,8(a5)
20015a5c:	cb8d                	beqz	a5,20015a8e <__metal_plic0_handler+0x8e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:116
        plic->metal_exint_table[idx](idx,
20015a5e:	fec42703          	lw	a4,-20(s0)
20015a62:	fe442783          	lw	a5,-28(s0)
20015a66:	078a                	slli	a5,a5,0x2
20015a68:	97ba                	add	a5,a5,a4
20015a6a:	0087a803          	lw	a6,8(a5) # 2008 <__heap_size+0x1808>
20015a6e:	fe442603          	lw	a2,-28(s0)
20015a72:	fec42683          	lw	a3,-20(s0)
20015a76:	fe442703          	lw	a4,-28(s0)
20015a7a:	87ba                	mv	a5,a4
20015a7c:	0786                	slli	a5,a5,0x1
20015a7e:	97ba                	add	a5,a5,a4
20015a80:	078e                	slli	a5,a5,0x3
20015a82:	97b6                	add	a5,a5,a3
20015a84:	0f07a783          	lw	a5,240(a5)
20015a88:	85be                	mv	a1,a5
20015a8a:	8532                	mv	a0,a2
20015a8c:	9802                	jalr	a6
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:120
                                     plic->metal_exdata_table[idx].exint_data);
    }

    __metal_plic0_complete_interrupt(plic, contextid, idx);
20015a8e:	fe442603          	lw	a2,-28(s0)
20015a92:	fe842583          	lw	a1,-24(s0)
20015a96:	fec42503          	lw	a0,-20(s0)
20015a9a:	3b81                	jal	200157ea <__metal_plic0_complete_interrupt>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:121
}
20015a9c:	0001                	nop
20015a9e:	50b2                	lw	ra,44(sp)
20015aa0:	5422                	lw	s0,40(sp)
20015aa2:	6145                	addi	sp,sp,48
20015aa4:	8082                	ret

20015aa6 <__metal_driver_riscv_plic0_init>:
__metal_driver_riscv_plic0_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:123

void __metal_driver_riscv_plic0_init(struct metal_interrupt *controller) {
20015aa6:	7139                	addi	sp,sp,-64
20015aa8:	de06                	sw	ra,60(sp)
20015aaa:	dc22                	sw	s0,56(sp)
20015aac:	0080                	addi	s0,sp,64
20015aae:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:124
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20015ab2:	fcc42783          	lw	a5,-52(s0)
20015ab6:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:126

    if (!plic->init_done) {
20015aba:	fe442783          	lw	a5,-28(s0)
20015abe:	43dc                	lw	a5,4(a5)
20015ac0:	12079a63          	bnez	a5,20015bf4 <__metal_driver_riscv_plic0_init+0x14e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:130
        int num_interrupts, line;
        struct metal_interrupt *intc;

        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
20015ac4:	fe042623          	sw	zero,-20(s0)
20015ac8:	aa31                	j	20015be4 <__metal_driver_riscv_plic0_init+0x13e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:132
            num_interrupts =
                __metal_driver_sifive_plic0_num_interrupts(controller);
20015aca:	fcc42503          	lw	a0,-52(s0)
20015ace:	c27ff0ef          	jal	ra,200156f4 <__metal_driver_sifive_plic0_num_interrupts>
20015ad2:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:133
            intc = __metal_driver_sifive_plic0_interrupt_parents(controller,
20015ad6:	fec42583          	lw	a1,-20(s0)
20015ada:	fcc42503          	lw	a0,-52(s0)
20015ade:	c69ff0ef          	jal	ra,20015746 <__metal_driver_sifive_plic0_interrupt_parents>
20015ae2:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:136
                                                                 parent);
            line =
                __metal_driver_sifive_plic0_interrupt_lines(controller, parent);
20015ae6:	fec42583          	lw	a1,-20(s0)
20015aea:	fcc42503          	lw	a0,-52(s0)
20015aee:	c81ff0ef          	jal	ra,2001576e <__metal_driver_sifive_plic0_interrupt_lines>
20015af2:	fca42c23          	sw	a0,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:139

            /* Initialize ist parent controller, aka cpu_intc. */
            intc->vtable->interrupt_init(intc);
20015af6:	fdc42783          	lw	a5,-36(s0)
20015afa:	439c                	lw	a5,0(a5)
20015afc:	439c                	lw	a5,0(a5)
20015afe:	fdc42503          	lw	a0,-36(s0)
20015b02:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:141

            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
20015b04:	fe042423          	sw	zero,-24(s0)
20015b08:	a885                	j	20015b78 <__metal_driver_riscv_plic0_init+0xd2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:142
                __metal_plic0_enable(plic, parent, i, METAL_DISABLE);
20015b0a:	4681                	li	a3,0
20015b0c:	fe842603          	lw	a2,-24(s0)
20015b10:	fec42583          	lw	a1,-20(s0)
20015b14:	fe442503          	lw	a0,-28(s0)
20015b18:	353d                	jal	20015946 <__metal_plic0_enable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:143
                if (i < num_interrupts) {
20015b1a:	fe842703          	lw	a4,-24(s0)
20015b1e:	fe042783          	lw	a5,-32(s0)
20015b22:	04f75663          	bge	a4,a5,20015b6e <__metal_driver_riscv_plic0_init+0xc8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:144
                    __metal_driver_riscv_plic0_set_priority(controller, i, 0);
20015b26:	4601                	li	a2,0
20015b28:	fe842583          	lw	a1,-24(s0)
20015b2c:	fcc42503          	lw	a0,-52(s0)
20015b30:	3341                	jal	200158b0 <__metal_driver_riscv_plic0_set_priority>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:145
                    plic->metal_exint_table[i] = NULL;
20015b32:	fe442703          	lw	a4,-28(s0)
20015b36:	fe842783          	lw	a5,-24(s0)
20015b3a:	078a                	slli	a5,a5,0x2
20015b3c:	97ba                	add	a5,a5,a4
20015b3e:	0007a423          	sw	zero,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:146
                    plic->metal_exdata_table[i].sub_int = NULL;
20015b42:	fe442683          	lw	a3,-28(s0)
20015b46:	fe842703          	lw	a4,-24(s0)
20015b4a:	87ba                	mv	a5,a4
20015b4c:	0786                	slli	a5,a5,0x1
20015b4e:	97ba                	add	a5,a5,a4
20015b50:	078e                	slli	a5,a5,0x3
20015b52:	97b6                	add	a5,a5,a3
20015b54:	0e07a623          	sw	zero,236(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:147
                    plic->metal_exdata_table[i].exint_data = NULL;
20015b58:	fe442683          	lw	a3,-28(s0)
20015b5c:	fe842703          	lw	a4,-24(s0)
20015b60:	87ba                	mv	a5,a4
20015b62:	0786                	slli	a5,a5,0x1
20015b64:	97ba                	add	a5,a5,a4
20015b66:	078e                	slli	a5,a5,0x3
20015b68:	97b6                	add	a5,a5,a3
20015b6a:	0e07a823          	sw	zero,240(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 2)
            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
20015b6e:	fe842783          	lw	a5,-24(s0)
20015b72:	0785                	addi	a5,a5,1
20015b74:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 1)
20015b78:	fe842703          	lw	a4,-24(s0)
20015b7c:	3ff00793          	li	a5,1023
20015b80:	f8e7d5e3          	bge	a5,a4,20015b0a <__metal_driver_riscv_plic0_init+0x64>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:151 (discriminator 2)
                }
            }

            __metal_plic0_set_threshold(controller, parent, 0);
20015b84:	4601                	li	a2,0
20015b86:	fec42583          	lw	a1,-20(s0)
20015b8a:	fcc42503          	lw	a0,-52(s0)
20015b8e:	ca3ff0ef          	jal	ra,20015830 <__metal_plic0_set_threshold>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:154 (discriminator 2)

            /* Register plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_register(intc, line, NULL, plic);
20015b92:	fdc42783          	lw	a5,-36(s0)
20015b96:	439c                	lw	a5,0(a5)
20015b98:	4fdc                	lw	a5,28(a5)
20015b9a:	fe442683          	lw	a3,-28(s0)
20015b9e:	4601                	li	a2,0
20015ba0:	fd842583          	lw	a1,-40(s0)
20015ba4:	fdc42503          	lw	a0,-36(s0)
20015ba8:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:156 (discriminator 2)
            /* Register plic handler for dispatching its device interrupts */
            intc->vtable->interrupt_register(intc, line, __metal_plic0_handler,
20015baa:	fdc42783          	lw	a5,-36(s0)
20015bae:	439c                	lw	a5,0(a5)
20015bb0:	4fd8                	lw	a4,28(a5)
20015bb2:	fe442683          	lw	a3,-28(s0)
20015bb6:	200167b7          	lui	a5,0x20016
20015bba:	a0078613          	addi	a2,a5,-1536 # 20015a00 <__metal_plic0_handler>
20015bbe:	fd842583          	lw	a1,-40(s0)
20015bc2:	fdc42503          	lw	a0,-36(s0)
20015bc6:	9702                	jalr	a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:159 (discriminator 2)
                                             plic);
            /* Enable plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_enable(intc, line);
20015bc8:	fdc42783          	lw	a5,-36(s0)
20015bcc:	439c                	lw	a5,0(a5)
20015bce:	53dc                	lw	a5,36(a5)
20015bd0:	fd842583          	lw	a1,-40(s0)
20015bd4:	fdc42503          	lw	a0,-36(s0)
20015bd8:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 2)
        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
20015bda:	fec42783          	lw	a5,-20(s0)
20015bde:	0785                	addi	a5,a5,1
20015be0:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 1)
20015be4:	fec42783          	lw	a5,-20(s0)
20015be8:	eef051e3          	blez	a5,20015aca <__metal_driver_riscv_plic0_init+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:161
        }
        plic->init_done = 1;
20015bec:	fe442783          	lw	a5,-28(s0)
20015bf0:	4705                	li	a4,1
20015bf2:	c3d8                	sw	a4,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:163
    }
}
20015bf4:	0001                	nop
20015bf6:	50f2                	lw	ra,60(sp)
20015bf8:	5462                	lw	s0,56(sp)
20015bfa:	6121                	addi	sp,sp,64
20015bfc:	8082                	ret

20015bfe <__metal_driver_riscv_plic0_register>:
__metal_driver_riscv_plic0_register():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:167

int __metal_driver_riscv_plic0_register(struct metal_interrupt *controller,
                                        int id, metal_interrupt_handler_t isr,
                                        void *priv) {
20015bfe:	7179                	addi	sp,sp,-48
20015c00:	d606                	sw	ra,44(sp)
20015c02:	d422                	sw	s0,40(sp)
20015c04:	1800                	addi	s0,sp,48
20015c06:	fca42e23          	sw	a0,-36(s0)
20015c0a:	fcb42c23          	sw	a1,-40(s0)
20015c0e:	fcc42a23          	sw	a2,-44(s0)
20015c12:	fcd42823          	sw	a3,-48(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:168
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20015c16:	fdc42783          	lw	a5,-36(s0)
20015c1a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:170

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20015c1e:	fdc42503          	lw	a0,-36(s0)
20015c22:	ad3ff0ef          	jal	ra,200156f4 <__metal_driver_sifive_plic0_num_interrupts>
20015c26:	872a                	mv	a4,a0
20015c28:	fd842783          	lw	a5,-40(s0)
20015c2c:	00e7c463          	blt	a5,a4,20015c34 <__metal_driver_riscv_plic0_register+0x36>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:171
        return -1;
20015c30:	57fd                	li	a5,-1
20015c32:	a051                	j	20015cb6 <__metal_driver_riscv_plic0_register+0xb8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:174
    }

    if (isr) {
20015c34:	fd442783          	lw	a5,-44(s0)
20015c38:	cf9d                	beqz	a5,20015c76 <__metal_driver_riscv_plic0_register+0x78>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:175
        __metal_driver_riscv_plic0_set_priority(controller, id, 2);
20015c3a:	4609                	li	a2,2
20015c3c:	fd842583          	lw	a1,-40(s0)
20015c40:	fdc42503          	lw	a0,-36(s0)
20015c44:	c6dff0ef          	jal	ra,200158b0 <__metal_driver_riscv_plic0_set_priority>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:176
        plic->metal_exint_table[id] = isr;
20015c48:	fec42703          	lw	a4,-20(s0)
20015c4c:	fd842783          	lw	a5,-40(s0)
20015c50:	078a                	slli	a5,a5,0x2
20015c52:	97ba                	add	a5,a5,a4
20015c54:	fd442703          	lw	a4,-44(s0)
20015c58:	c798                	sw	a4,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:177
        plic->metal_exdata_table[id].exint_data = priv;
20015c5a:	fec42683          	lw	a3,-20(s0)
20015c5e:	fd842703          	lw	a4,-40(s0)
20015c62:	87ba                	mv	a5,a4
20015c64:	0786                	slli	a5,a5,0x1
20015c66:	97ba                	add	a5,a5,a4
20015c68:	078e                	slli	a5,a5,0x3
20015c6a:	97b6                	add	a5,a5,a3
20015c6c:	fd042703          	lw	a4,-48(s0)
20015c70:	0ee7a823          	sw	a4,240(a5)
20015c74:	a081                	j	20015cb4 <__metal_driver_riscv_plic0_register+0xb6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:179
    } else {
        __metal_driver_riscv_plic0_set_priority(controller, id, 1);
20015c76:	4605                	li	a2,1
20015c78:	fd842583          	lw	a1,-40(s0)
20015c7c:	fdc42503          	lw	a0,-36(s0)
20015c80:	c31ff0ef          	jal	ra,200158b0 <__metal_driver_riscv_plic0_set_priority>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:180
        plic->metal_exint_table[id] = __metal_plic0_default_handler;
20015c84:	fec42703          	lw	a4,-20(s0)
20015c88:	fd842783          	lw	a5,-40(s0)
20015c8c:	078a                	slli	a5,a5,0x2
20015c8e:	97ba                	add	a5,a5,a4
20015c90:	20016737          	lui	a4,0x20016
20015c94:	9e870713          	addi	a4,a4,-1560 # 200159e8 <__metal_plic0_default_handler>
20015c98:	c798                	sw	a4,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:181
        plic->metal_exdata_table[id].sub_int = priv;
20015c9a:	fec42683          	lw	a3,-20(s0)
20015c9e:	fd842703          	lw	a4,-40(s0)
20015ca2:	87ba                	mv	a5,a4
20015ca4:	0786                	slli	a5,a5,0x1
20015ca6:	97ba                	add	a5,a5,a4
20015ca8:	078e                	slli	a5,a5,0x3
20015caa:	97b6                	add	a5,a5,a3
20015cac:	fd042703          	lw	a4,-48(s0)
20015cb0:	0ee7a623          	sw	a4,236(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:184
    }

    return 0;
20015cb4:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:185
}
20015cb6:	853e                	mv	a0,a5
20015cb8:	50b2                	lw	ra,44(sp)
20015cba:	5422                	lw	s0,40(sp)
20015cbc:	6145                	addi	sp,sp,48
20015cbe:	8082                	ret

20015cc0 <__metal_driver_riscv_plic0_enable>:
__metal_driver_riscv_plic0_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:188

int __metal_driver_riscv_plic0_enable(struct metal_interrupt *controller,
                                      int id) {
20015cc0:	7179                	addi	sp,sp,-48
20015cc2:	d606                	sw	ra,44(sp)
20015cc4:	d422                	sw	s0,40(sp)
20015cc6:	1800                	addi	s0,sp,48
20015cc8:	fca42e23          	sw	a0,-36(s0)
20015ccc:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:189
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20015cd0:	fdc42783          	lw	a5,-36(s0)
20015cd4:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:191

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20015cd8:	fdc42503          	lw	a0,-36(s0)
20015cdc:	a19ff0ef          	jal	ra,200156f4 <__metal_driver_sifive_plic0_num_interrupts>
20015ce0:	872a                	mv	a4,a0
20015ce2:	fd842783          	lw	a5,-40(s0)
20015ce6:	00e7c463          	blt	a5,a4,20015cee <__metal_driver_riscv_plic0_enable+0x2e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:192
        return -1;
20015cea:	57fd                	li	a5,-1
20015cec:	a829                	j	20015d06 <__metal_driver_riscv_plic0_enable+0x46>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:195
    }

    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_ENABLE);
20015cee:	8b2fe0ef          	jal	ra,20013da0 <__metal_myhart_id>
20015cf2:	87aa                	mv	a5,a0
20015cf4:	4685                	li	a3,1
20015cf6:	fd842603          	lw	a2,-40(s0)
20015cfa:	85be                	mv	a1,a5
20015cfc:	fec42503          	lw	a0,-20(s0)
20015d00:	c47ff0ef          	jal	ra,20015946 <__metal_plic0_enable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:196
    return 0;
20015d04:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:197
}
20015d06:	853e                	mv	a0,a5
20015d08:	50b2                	lw	ra,44(sp)
20015d0a:	5422                	lw	s0,40(sp)
20015d0c:	6145                	addi	sp,sp,48
20015d0e:	8082                	ret

20015d10 <__metal_driver_riscv_plic0_disable>:
__metal_driver_riscv_plic0_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:200

int __metal_driver_riscv_plic0_disable(struct metal_interrupt *controller,
                                       int id) {
20015d10:	7179                	addi	sp,sp,-48
20015d12:	d606                	sw	ra,44(sp)
20015d14:	d422                	sw	s0,40(sp)
20015d16:	1800                	addi	s0,sp,48
20015d18:	fca42e23          	sw	a0,-36(s0)
20015d1c:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:201
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20015d20:	fdc42783          	lw	a5,-36(s0)
20015d24:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:203

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20015d28:	fdc42503          	lw	a0,-36(s0)
20015d2c:	9c9ff0ef          	jal	ra,200156f4 <__metal_driver_sifive_plic0_num_interrupts>
20015d30:	872a                	mv	a4,a0
20015d32:	fd842783          	lw	a5,-40(s0)
20015d36:	00e7c463          	blt	a5,a4,20015d3e <__metal_driver_riscv_plic0_disable+0x2e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:204
        return -1;
20015d3a:	57fd                	li	a5,-1
20015d3c:	a829                	j	20015d56 <__metal_driver_riscv_plic0_disable+0x46>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:206
    }
    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_DISABLE);
20015d3e:	862fe0ef          	jal	ra,20013da0 <__metal_myhart_id>
20015d42:	87aa                	mv	a5,a0
20015d44:	4681                	li	a3,0
20015d46:	fd842603          	lw	a2,-40(s0)
20015d4a:	85be                	mv	a1,a5
20015d4c:	fec42503          	lw	a0,-20(s0)
20015d50:	bf7ff0ef          	jal	ra,20015946 <__metal_plic0_enable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:207
    return 0;
20015d54:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:208
}
20015d56:	853e                	mv	a0,a5
20015d58:	50b2                	lw	ra,44(sp)
20015d5a:	5422                	lw	s0,40(sp)
20015d5c:	6145                	addi	sp,sp,48
20015d5e:	8082                	ret

20015d60 <__metal_driver_riscv_plic0_set_threshold>:
__metal_driver_riscv_plic0_set_threshold():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:211

int __metal_driver_riscv_plic0_set_threshold(struct metal_interrupt *controller,
                                             unsigned int threshold) {
20015d60:	1101                	addi	sp,sp,-32
20015d62:	ce06                	sw	ra,28(sp)
20015d64:	cc22                	sw	s0,24(sp)
20015d66:	1000                	addi	s0,sp,32
20015d68:	fea42623          	sw	a0,-20(s0)
20015d6c:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:212
    return __metal_plic0_set_threshold(controller, __metal_myhart_id(),
20015d70:	830fe0ef          	jal	ra,20013da0 <__metal_myhart_id>
20015d74:	87aa                	mv	a5,a0
20015d76:	fe842603          	lw	a2,-24(s0)
20015d7a:	85be                	mv	a1,a5
20015d7c:	fec42503          	lw	a0,-20(s0)
20015d80:	ab1ff0ef          	jal	ra,20015830 <__metal_plic0_set_threshold>
20015d84:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:214
                                       threshold);
}
20015d86:	853e                	mv	a0,a5
20015d88:	40f2                	lw	ra,28(sp)
20015d8a:	4462                	lw	s0,24(sp)
20015d8c:	6105                	addi	sp,sp,32
20015d8e:	8082                	ret

20015d90 <__metal_driver_riscv_plic0_get_threshold>:
__metal_driver_riscv_plic0_get_threshold():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:217

unsigned int
__metal_driver_riscv_plic0_get_threshold(struct metal_interrupt *controller) {
20015d90:	1101                	addi	sp,sp,-32
20015d92:	ce06                	sw	ra,28(sp)
20015d94:	cc22                	sw	s0,24(sp)
20015d96:	1000                	addi	s0,sp,32
20015d98:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:218
    return __metal_plic0_get_threshold(controller, __metal_myhart_id());
20015d9c:	804fe0ef          	jal	ra,20013da0 <__metal_myhart_id>
20015da0:	87aa                	mv	a5,a0
20015da2:	85be                	mv	a1,a5
20015da4:	fec42503          	lw	a0,-20(s0)
20015da8:	acfff0ef          	jal	ra,20015876 <__metal_plic0_get_threshold>
20015dac:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:219
}
20015dae:	853e                	mv	a0,a5
20015db0:	40f2                	lw	ra,28(sp)
20015db2:	4462                	lw	s0,24(sp)
20015db4:	6105                	addi	sp,sp,32
20015db6:	8082                	ret

20015db8 <__metal_driver_riscv_plic0_affinity_enable>:
__metal_driver_riscv_plic0_affinity_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:223

metal_affinity
__metal_driver_riscv_plic0_affinity_enable(struct metal_interrupt *controller,
                                           metal_affinity bitmask, int id) {
20015db8:	7179                	addi	sp,sp,-48
20015dba:	d606                	sw	ra,44(sp)
20015dbc:	d422                	sw	s0,40(sp)
20015dbe:	1800                	addi	s0,sp,48
20015dc0:	fca42e23          	sw	a0,-36(s0)
20015dc4:	fcb42c23          	sw	a1,-40(s0)
20015dc8:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:224
    metal_affinity ret = {0};
20015dcc:	fe042223          	sw	zero,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:227
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20015dd0:	fdc42783          	lw	a5,-36(s0)
20015dd4:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:229

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20015dd8:	fdc42503          	lw	a0,-36(s0)
20015ddc:	919ff0ef          	jal	ra,200156f4 <__metal_driver_sifive_plic0_num_interrupts>
20015de0:	872a                	mv	a4,a0
20015de2:	fd442783          	lw	a5,-44(s0)
20015de6:	00e7c863          	blt	a5,a4,20015df6 <__metal_driver_riscv_plic0_affinity_enable+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:230
        metal_affinity_set_val(ret, -1);
20015dea:	57fd                	li	a5,-1
20015dec:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:231
        return ret;
20015df0:	fe442783          	lw	a5,-28(s0)
20015df4:	a899                	j	20015e4a <__metal_driver_riscv_plic0_affinity_enable+0x92>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:234
    }

    for_each_metal_affinity(context, bitmask) {
20015df6:	fe042623          	sw	zero,-20(s0)
20015dfa:	a099                	j	20015e40 <__metal_driver_riscv_plic0_affinity_enable+0x88>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:235
        if (context != 0)
20015dfc:	fec42783          	lw	a5,-20(s0)
20015e00:	c795                	beqz	a5,20015e2c <__metal_driver_riscv_plic0_affinity_enable+0x74>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:236
            metal_affinity_set_bit(
20015e02:	4685                	li	a3,1
20015e04:	fd442603          	lw	a2,-44(s0)
20015e08:	fec42583          	lw	a1,-20(s0)
20015e0c:	fe842503          	lw	a0,-24(s0)
20015e10:	b37ff0ef          	jal	ra,20015946 <__metal_plic0_enable>
20015e14:	87aa                	mv	a5,a0
20015e16:	0017f713          	andi	a4,a5,1
20015e1a:	fec42783          	lw	a5,-20(s0)
20015e1e:	00f71733          	sll	a4,a4,a5
20015e22:	fe442783          	lw	a5,-28(s0)
20015e26:	8fd9                	or	a5,a5,a4
20015e28:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
20015e2c:	fec42783          	lw	a5,-20(s0)
20015e30:	0785                	addi	a5,a5,1
20015e32:	fef42623          	sw	a5,-20(s0)
20015e36:	fd842783          	lw	a5,-40(s0)
20015e3a:	8385                	srli	a5,a5,0x1
20015e3c:	fcf42c23          	sw	a5,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 1)
20015e40:	fd842783          	lw	a5,-40(s0)
20015e44:	ffc5                	bnez	a5,20015dfc <__metal_driver_riscv_plic0_affinity_enable+0x44>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:241
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_ENABLE));
    }

    return ret;
20015e46:	fe442783          	lw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:242 (discriminator 1)
}
20015e4a:	853e                	mv	a0,a5
20015e4c:	50b2                	lw	ra,44(sp)
20015e4e:	5422                	lw	s0,40(sp)
20015e50:	6145                	addi	sp,sp,48
20015e52:	8082                	ret

20015e54 <__metal_driver_riscv_plic0_affinity_disable>:
__metal_driver_riscv_plic0_affinity_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:246

metal_affinity
__metal_driver_riscv_plic0_affinity_disable(struct metal_interrupt *controller,
                                            metal_affinity bitmask, int id) {
20015e54:	7179                	addi	sp,sp,-48
20015e56:	d606                	sw	ra,44(sp)
20015e58:	d422                	sw	s0,40(sp)
20015e5a:	1800                	addi	s0,sp,48
20015e5c:	fca42e23          	sw	a0,-36(s0)
20015e60:	fcb42c23          	sw	a1,-40(s0)
20015e64:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:247
    metal_affinity ret = {0};
20015e68:	fe042223          	sw	zero,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:250
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20015e6c:	fdc42783          	lw	a5,-36(s0)
20015e70:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:252

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20015e74:	fdc42503          	lw	a0,-36(s0)
20015e78:	87dff0ef          	jal	ra,200156f4 <__metal_driver_sifive_plic0_num_interrupts>
20015e7c:	872a                	mv	a4,a0
20015e7e:	fd442783          	lw	a5,-44(s0)
20015e82:	00e7c863          	blt	a5,a4,20015e92 <__metal_driver_riscv_plic0_affinity_disable+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:253
        metal_affinity_set_val(ret, -1);
20015e86:	57fd                	li	a5,-1
20015e88:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:254
        return ret;
20015e8c:	fe442783          	lw	a5,-28(s0)
20015e90:	a899                	j	20015ee6 <__metal_driver_riscv_plic0_affinity_disable+0x92>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:257
    }

    for_each_metal_affinity(context, bitmask) {
20015e92:	fe042623          	sw	zero,-20(s0)
20015e96:	a099                	j	20015edc <__metal_driver_riscv_plic0_affinity_disable+0x88>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:258
        if (context != 0)
20015e98:	fec42783          	lw	a5,-20(s0)
20015e9c:	c795                	beqz	a5,20015ec8 <__metal_driver_riscv_plic0_affinity_disable+0x74>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:259
            metal_affinity_set_bit(
20015e9e:	4681                	li	a3,0
20015ea0:	fd442603          	lw	a2,-44(s0)
20015ea4:	fec42583          	lw	a1,-20(s0)
20015ea8:	fe842503          	lw	a0,-24(s0)
20015eac:	a9bff0ef          	jal	ra,20015946 <__metal_plic0_enable>
20015eb0:	87aa                	mv	a5,a0
20015eb2:	0017f713          	andi	a4,a5,1
20015eb6:	fec42783          	lw	a5,-20(s0)
20015eba:	00f71733          	sll	a4,a4,a5
20015ebe:	fe442783          	lw	a5,-28(s0)
20015ec2:	8fd9                	or	a5,a5,a4
20015ec4:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
20015ec8:	fec42783          	lw	a5,-20(s0)
20015ecc:	0785                	addi	a5,a5,1
20015ece:	fef42623          	sw	a5,-20(s0)
20015ed2:	fd842783          	lw	a5,-40(s0)
20015ed6:	8385                	srli	a5,a5,0x1
20015ed8:	fcf42c23          	sw	a5,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 1)
20015edc:	fd842783          	lw	a5,-40(s0)
20015ee0:	ffc5                	bnez	a5,20015e98 <__metal_driver_riscv_plic0_affinity_disable+0x44>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:264
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_DISABLE));
    }

    return ret;
20015ee2:	fe442783          	lw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:265 (discriminator 1)
}
20015ee6:	853e                	mv	a0,a5
20015ee8:	50b2                	lw	ra,44(sp)
20015eea:	5422                	lw	s0,40(sp)
20015eec:	6145                	addi	sp,sp,48
20015eee:	8082                	ret

20015ef0 <__metal_driver_riscv_plic0_affinity_set_threshold>:
__metal_driver_riscv_plic0_affinity_set_threshold():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:269

metal_affinity __metal_driver_riscv_plic0_affinity_set_threshold(
    struct metal_interrupt *controller, metal_affinity bitmask,
    unsigned int threshold) {
20015ef0:	7179                	addi	sp,sp,-48
20015ef2:	d606                	sw	ra,44(sp)
20015ef4:	d422                	sw	s0,40(sp)
20015ef6:	1800                	addi	s0,sp,48
20015ef8:	fca42e23          	sw	a0,-36(s0)
20015efc:	fcb42c23          	sw	a1,-40(s0)
20015f00:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:270
    metal_affinity ret = {0};
20015f04:	fe042423          	sw	zero,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:273
    int context;

    for_each_metal_affinity(context, bitmask) {
20015f08:	fe042623          	sw	zero,-20(s0)
20015f0c:	a091                	j	20015f50 <__metal_driver_riscv_plic0_affinity_set_threshold+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:274
        if (context != 0)
20015f0e:	fec42783          	lw	a5,-20(s0)
20015f12:	c78d                	beqz	a5,20015f3c <__metal_driver_riscv_plic0_affinity_set_threshold+0x4c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:275
            metal_affinity_set_bit(
20015f14:	fd442603          	lw	a2,-44(s0)
20015f18:	fec42583          	lw	a1,-20(s0)
20015f1c:	fdc42503          	lw	a0,-36(s0)
20015f20:	911ff0ef          	jal	ra,20015830 <__metal_plic0_set_threshold>
20015f24:	87aa                	mv	a5,a0
20015f26:	0017f713          	andi	a4,a5,1
20015f2a:	fec42783          	lw	a5,-20(s0)
20015f2e:	00f71733          	sll	a4,a4,a5
20015f32:	fe842783          	lw	a5,-24(s0)
20015f36:	8fd9                	or	a5,a5,a4
20015f38:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
20015f3c:	fec42783          	lw	a5,-20(s0)
20015f40:	0785                	addi	a5,a5,1
20015f42:	fef42623          	sw	a5,-20(s0)
20015f46:	fd842783          	lw	a5,-40(s0)
20015f4a:	8385                	srli	a5,a5,0x1
20015f4c:	fcf42c23          	sw	a5,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 1)
20015f50:	fd842783          	lw	a5,-40(s0)
20015f54:	ffcd                	bnez	a5,20015f0e <__metal_driver_riscv_plic0_affinity_set_threshold+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:280
                ret, context,
                __metal_plic0_set_threshold(controller, context, threshold));
    }

    return ret;
20015f56:	fe842783          	lw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:281
}
20015f5a:	853e                	mv	a0,a5
20015f5c:	50b2                	lw	ra,44(sp)
20015f5e:	5422                	lw	s0,40(sp)
20015f60:	6145                	addi	sp,sp,48
20015f62:	8082                	ret

20015f64 <__metal_driver_riscv_plic0_affinity_get_threshold>:
__metal_driver_riscv_plic0_affinity_get_threshold():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:284

unsigned int __metal_driver_riscv_plic0_affinity_get_threshold(
    struct metal_interrupt *controller, int context_id) {
20015f64:	1101                	addi	sp,sp,-32
20015f66:	ce06                	sw	ra,28(sp)
20015f68:	cc22                	sw	s0,24(sp)
20015f6a:	1000                	addi	s0,sp,32
20015f6c:	fea42623          	sw	a0,-20(s0)
20015f70:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:285
    __metal_plic0_get_threshold(controller, context_id);
20015f74:	fe842583          	lw	a1,-24(s0)
20015f78:	fec42503          	lw	a0,-20(s0)
20015f7c:	8fbff0ef          	jal	ra,20015876 <__metal_plic0_get_threshold>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:286
    return 0;
20015f80:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:287
}
20015f82:	853e                	mv	a0,a5
20015f84:	40f2                	lw	ra,28(sp)
20015f86:	4462                	lw	s0,24(sp)
20015f88:	6105                	addi	sp,sp,32
20015f8a:	8082                	ret

20015f8c <__metal_driver_sifive_fe310_g000_hfrosc_ref>:
__metal_driver_sifive_fe310_g000_hfrosc_ref():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1242



/* --------------------- sifive_fe310_g000_hfrosc ------------ */
static __inline__ struct metal_clock * __metal_driver_sifive_fe310_g000_hfrosc_ref(const struct metal_clock *clock)
{
20015f8c:	1101                	addi	sp,sp,-32
20015f8e:	ce22                	sw	s0,28(sp)
20015f90:	1000                	addi	s0,sp,32
20015f92:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1243
		return (struct metal_clock *)&__metal_dt_clock_2.clock;
20015f96:	800007b7          	lui	a5,0x80000
20015f9a:	06c78793          	addi	a5,a5,108 # 8000006c <metal_segment_heap_target_end+0xffffe8ac>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1244
}
20015f9e:	853e                	mv	a0,a5
20015fa0:	4472                	lw	s0,28(sp)
20015fa2:	6105                	addi	sp,sp,32
20015fa4:	8082                	ret

20015fa6 <__metal_driver_sifive_fe310_g000_hfrosc_config_base>:
__metal_driver_sifive_fe310_g000_hfrosc_config_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1247

static __inline__ struct __metal_driver_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_hfrosc_config_base(const struct metal_clock *clock)
{
20015fa6:	1101                	addi	sp,sp,-32
20015fa8:	ce22                	sw	s0,28(sp)
20015faa:	1000                	addi	s0,sp,32
20015fac:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1248
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20015fb0:	82418793          	addi	a5,gp,-2012 # 80000ae4 <__metal_dt_prci_10008000>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1249
}
20015fb4:	853e                	mv	a0,a5
20015fb6:	4472                	lw	s0,28(sp)
20015fb8:	6105                	addi	sp,sp,32
20015fba:	8082                	ret

20015fbc <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfrosc_config_offset():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1257
{
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
}

static __inline__ long __metal_driver_sifive_fe310_g000_hfrosc_config_offset(const struct metal_clock *clock)
{
20015fbc:	1101                	addi	sp,sp,-32
20015fbe:	ce22                	sw	s0,28(sp)
20015fc0:	1000                	addi	s0,sp,32
20015fc2:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1258
		return METAL_SIFIVE_FE310_G000_PRCI_HFROSCCFG;
20015fc6:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1259
}
20015fc8:	853e                	mv	a0,a5
20015fca:	4472                	lw	s0,28(sp)
20015fcc:	6105                	addi	sp,sp,32
20015fce:	8082                	ret

20015fd0 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1374
{
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_SIZE;
}

static __inline__ const struct __metal_driver_vtable_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_prci_vtable( )
{
20015fd0:	1141                	addi	sp,sp,-16
20015fd2:	c622                	sw	s0,12(sp)
20015fd4:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1375
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20015fd6:	83818793          	addi	a5,gp,-1992 # 80000af8 <__metal_driver_vtable_sifive_fe310_g000_prci>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1376
}
20015fda:	853e                	mv	a0,a5
20015fdc:	4432                	lw	s0,12(sp)
20015fde:	0141                	addi	sp,sp,16
20015fe0:	8082                	ret

20015fe2 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:17
#define CONFIG_TRIM 0x001F0000UL
#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(
    const struct metal_clock *clock) {
20015fe2:	7139                	addi	sp,sp,-64
20015fe4:	de06                	sw	ra,60(sp)
20015fe6:	dc22                	sw	s0,56(sp)
20015fe8:	0080                	addi	s0,sp,64
20015fea:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:19
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfrosc_ref(clock);
20015fee:	fcc42503          	lw	a0,-52(s0)
20015ff2:	3f69                	jal	20015f8c <__metal_driver_sifive_fe310_g000_hfrosc_ref>
20015ff4:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:21
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfrosc_config_offset(clock);
20015ff8:	fcc42503          	lw	a0,-52(s0)
20015ffc:	37c1                	jal	20015fbc <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>
20015ffe:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:23
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfrosc_config_base(clock);
20016002:	fcc42503          	lw	a0,-52(s0)
20016006:	3745                	jal	20015fa6 <__metal_driver_sifive_fe310_g000_hfrosc_config_base>
20016008:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:25
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
2001600c:	37d1                	jal	20015fd0 <__metal_driver_sifive_fe310_g000_prci_vtable>
2001600e:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:26
    long cfg = vtable->get_reg(config_base, config_offset);
20016012:	fe042783          	lw	a5,-32(s0)
20016016:	439c                	lw	a5,0(a5)
20016018:	fe842583          	lw	a1,-24(s0)
2001601c:	fe442503          	lw	a0,-28(s0)
20016020:	9782                	jalr	a5
20016022:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:28

    if ((cfg & CONFIG_ENABLE) == 0)
20016026:	fdc42703          	lw	a4,-36(s0)
2001602a:	400007b7          	lui	a5,0x40000
2001602e:	8ff9                	and	a5,a5,a4
20016030:	e399                	bnez	a5,20016036 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x54>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:29
        return -1;
20016032:	57fd                	li	a5,-1
20016034:	a025                	j	2001605c <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:30
    if ((cfg & CONFIG_READY) == 0)
20016036:	fdc42783          	lw	a5,-36(s0)
2001603a:	0007c463          	bltz	a5,20016042 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:31
        return -1;
2001603e:	57fd                	li	a5,-1
20016040:	a831                	j	2001605c <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:32
    return metal_clock_get_rate_hz(ref) / ((cfg & CONFIG_DIVIDER) + 1);
20016042:	fec42503          	lw	a0,-20(s0)
20016046:	44a020ef          	jal	ra,20018490 <metal_clock_get_rate_hz>
2001604a:	87aa                	mv	a5,a0
2001604c:	873e                	mv	a4,a5
2001604e:	fdc42783          	lw	a5,-36(s0)
20016052:	03f7f793          	andi	a5,a5,63
20016056:	0785                	addi	a5,a5,1
20016058:	02f757b3          	divu	a5,a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:33
}
2001605c:	853e                	mv	a0,a5
2001605e:	50f2                	lw	ra,60(sp)
20016060:	5462                	lw	s0,56(sp)
20016062:	6121                	addi	sp,sp,64
20016064:	8082                	ret

20016066 <__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:36

long __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
20016066:	1101                	addi	sp,sp,-32
20016068:	ce06                	sw	ra,28(sp)
2001606a:	cc22                	sw	s0,24(sp)
2001606c:	1000                	addi	s0,sp,32
2001606e:	fea42623          	sw	a0,-20(s0)
20016072:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:37
    return __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(clock);
20016076:	fec42503          	lw	a0,-20(s0)
2001607a:	37a5                	jal	20015fe2 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>
2001607c:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:38
}
2001607e:	853e                	mv	a0,a5
20016080:	40f2                	lw	ra,28(sp)
20016082:	4462                	lw	s0,24(sp)
20016084:	6105                	addi	sp,sp,32
20016086:	8082                	ret

20016088 <__metal_driver_sifive_fe310_g000_hfxosc_ref>:
__metal_driver_sifive_fe310_g000_hfxosc_ref():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1265
{
20016088:	1101                	addi	sp,sp,-32
2001608a:	ce22                	sw	s0,28(sp)
2001608c:	1000                	addi	s0,sp,32
2001608e:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1266
		return (struct metal_clock *)&__metal_dt_clock_0.clock;
20016092:	800007b7          	lui	a5,0x80000
20016096:	06078793          	addi	a5,a5,96 # 80000060 <metal_segment_heap_target_end+0xffffe8a0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1267
}
2001609a:	853e                	mv	a0,a5
2001609c:	4472                	lw	s0,28(sp)
2001609e:	6105                	addi	sp,sp,32
200160a0:	8082                	ret

200160a2 <__metal_driver_sifive_fe310_g000_hfxosc_config_base>:
__metal_driver_sifive_fe310_g000_hfxosc_config_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1270
{
200160a2:	1101                	addi	sp,sp,-32
200160a4:	ce22                	sw	s0,28(sp)
200160a6:	1000                	addi	s0,sp,32
200160a8:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1271
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
200160ac:	82418793          	addi	a5,gp,-2012 # 80000ae4 <__metal_dt_prci_10008000>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1272
}
200160b0:	853e                	mv	a0,a5
200160b2:	4472                	lw	s0,28(sp)
200160b4:	6105                	addi	sp,sp,32
200160b6:	8082                	ret

200160b8 <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfxosc_config_offset():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1275
{
200160b8:	1101                	addi	sp,sp,-32
200160ba:	ce22                	sw	s0,28(sp)
200160bc:	1000                	addi	s0,sp,32
200160be:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1276
		return METAL_SIFIVE_FE310_G000_PRCI_HFXOSCCFG;
200160c2:	4791                	li	a5,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1277
}
200160c4:	853e                	mv	a0,a5
200160c6:	4472                	lw	s0,28(sp)
200160c8:	6105                	addi	sp,sp,32
200160ca:	8082                	ret

200160cc <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1374
{
200160cc:	1141                	addi	sp,sp,-16
200160ce:	c622                	sw	s0,12(sp)
200160d0:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1375
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
200160d2:	83818793          	addi	a5,gp,-1992 # 80000af8 <__metal_driver_vtable_sifive_fe310_g000_prci>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1376
}
200160d6:	853e                	mv	a0,a5
200160d8:	4432                	lw	s0,12(sp)
200160da:	0141                	addi	sp,sp,16
200160dc:	8082                	ret

200160de <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:15

#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(
    const struct metal_clock *clock) {
200160de:	7139                	addi	sp,sp,-64
200160e0:	de06                	sw	ra,60(sp)
200160e2:	dc22                	sw	s0,56(sp)
200160e4:	0080                	addi	s0,sp,64
200160e6:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:17
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfxosc_ref(clock);
200160ea:	fcc42503          	lw	a0,-52(s0)
200160ee:	3f69                	jal	20016088 <__metal_driver_sifive_fe310_g000_hfxosc_ref>
200160f0:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:19
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfxosc_config_offset(clock);
200160f4:	fcc42503          	lw	a0,-52(s0)
200160f8:	37c1                	jal	200160b8 <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>
200160fa:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:21
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfxosc_config_base(clock);
200160fe:	fcc42503          	lw	a0,-52(s0)
20016102:	3745                	jal	200160a2 <__metal_driver_sifive_fe310_g000_hfxosc_config_base>
20016104:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:23
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
20016108:	37d1                	jal	200160cc <__metal_driver_sifive_fe310_g000_prci_vtable>
2001610a:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:24
    long cfg = vtable->get_reg(config_base, config_offset);
2001610e:	fe042783          	lw	a5,-32(s0)
20016112:	439c                	lw	a5,0(a5)
20016114:	fe842583          	lw	a1,-24(s0)
20016118:	fe442503          	lw	a0,-28(s0)
2001611c:	9782                	jalr	a5
2001611e:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:26

    if ((cfg & CONFIG_ENABLE) == 0)
20016122:	fdc42703          	lw	a4,-36(s0)
20016126:	400007b7          	lui	a5,0x40000
2001612a:	8ff9                	and	a5,a5,a4
2001612c:	e399                	bnez	a5,20016132 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x54>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:27
        return -1;
2001612e:	57fd                	li	a5,-1
20016130:	a821                	j	20016148 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:28
    if ((cfg & CONFIG_READY) == 0)
20016132:	fdc42783          	lw	a5,-36(s0)
20016136:	0007c463          	bltz	a5,2001613e <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:29
        return -1;
2001613a:	57fd                	li	a5,-1
2001613c:	a031                	j	20016148 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:30
    return metal_clock_get_rate_hz(ref);
2001613e:	fec42503          	lw	a0,-20(s0)
20016142:	34e020ef          	jal	ra,20018490 <metal_clock_get_rate_hz>
20016146:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:31
}
20016148:	853e                	mv	a0,a5
2001614a:	50f2                	lw	ra,60(sp)
2001614c:	5462                	lw	s0,56(sp)
2001614e:	6121                	addi	sp,sp,64
20016150:	8082                	ret

20016152 <__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:34

long __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
20016152:	1101                	addi	sp,sp,-32
20016154:	ce06                	sw	ra,28(sp)
20016156:	cc22                	sw	s0,24(sp)
20016158:	1000                	addi	s0,sp,32
2001615a:	fea42623          	sw	a0,-20(s0)
2001615e:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:35
    return __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(clock);
20016162:	fec42503          	lw	a0,-20(s0)
20016166:	3fa5                	jal	200160de <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>
20016168:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:36
}
2001616a:	853e                	mv	a0,a5
2001616c:	40f2                	lw	ra,28(sp)
2001616e:	4462                	lw	s0,24(sp)
20016170:	6105                	addi	sp,sp,32
20016172:	8082                	ret

20016174 <__metal_driver_sifive_fe310_g000_pll_pllsel0>:
__metal_driver_sifive_fe310_g000_pll_pllsel0():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1326
{
20016174:	1101                	addi	sp,sp,-32
20016176:	ce22                	sw	s0,28(sp)
20016178:	1000                	addi	s0,sp,32
2001617a:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1327
		return (struct metal_clock *)&__metal_dt_clock_3.clock;
2001617e:	800017b7          	lui	a5,0x80001
20016182:	a9c78793          	addi	a5,a5,-1380 # 80000a9c <metal_segment_heap_target_end+0xfffff2dc>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1328
}
20016186:	853e                	mv	a0,a5
20016188:	4472                	lw	s0,28(sp)
2001618a:	6105                	addi	sp,sp,32
2001618c:	8082                	ret

2001618e <__metal_driver_sifive_fe310_g000_pll_pllref>:
__metal_driver_sifive_fe310_g000_pll_pllref():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1331
{
2001618e:	1101                	addi	sp,sp,-32
20016190:	ce22                	sw	s0,28(sp)
20016192:	1000                	addi	s0,sp,32
20016194:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1332
		return (struct metal_clock *)&__metal_dt_clock_1.clock;
20016198:	800017b7          	lui	a5,0x80001
2001619c:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xfffff2e8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1333
}
200161a0:	853e                	mv	a0,a5
200161a2:	4472                	lw	s0,28(sp)
200161a4:	6105                	addi	sp,sp,32
200161a6:	8082                	ret

200161a8 <__metal_driver_sifive_fe310_g000_pll_divider_base>:
__metal_driver_sifive_fe310_g000_pll_divider_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1336
{
200161a8:	1101                	addi	sp,sp,-32
200161aa:	ce22                	sw	s0,28(sp)
200161ac:	1000                	addi	s0,sp,32
200161ae:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1337
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
200161b2:	82418793          	addi	a5,gp,-2012 # 80000ae4 <__metal_dt_prci_10008000>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1338
}
200161b6:	853e                	mv	a0,a5
200161b8:	4472                	lw	s0,28(sp)
200161ba:	6105                	addi	sp,sp,32
200161bc:	8082                	ret

200161be <__metal_driver_sifive_fe310_g000_pll_divider_offset>:
__metal_driver_sifive_fe310_g000_pll_divider_offset():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1341
{
200161be:	1101                	addi	sp,sp,-32
200161c0:	ce22                	sw	s0,28(sp)
200161c2:	1000                	addi	s0,sp,32
200161c4:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1342
		return METAL_SIFIVE_FE310_G000_PRCI_PLLOUTDIV;
200161c8:	47b1                	li	a5,12
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1343
}
200161ca:	853e                	mv	a0,a5
200161cc:	4472                	lw	s0,28(sp)
200161ce:	6105                	addi	sp,sp,32
200161d0:	8082                	ret

200161d2 <__metal_driver_sifive_fe310_g000_pll_config_base>:
__metal_driver_sifive_fe310_g000_pll_config_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1346
{
200161d2:	1141                	addi	sp,sp,-16
200161d4:	c622                	sw	s0,12(sp)
200161d6:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1347
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
200161d8:	82418793          	addi	a5,gp,-2012 # 80000ae4 <__metal_dt_prci_10008000>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1348
}
200161dc:	853e                	mv	a0,a5
200161de:	4432                	lw	s0,12(sp)
200161e0:	0141                	addi	sp,sp,16
200161e2:	8082                	ret

200161e4 <__metal_driver_sifive_fe310_g000_pll_config_offset>:
__metal_driver_sifive_fe310_g000_pll_config_offset():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1351
{
200161e4:	1141                	addi	sp,sp,-16
200161e6:	c622                	sw	s0,12(sp)
200161e8:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1352
		return METAL_SIFIVE_FE310_G000_PRCI_PLLCFG;
200161ea:	47a1                	li	a5,8
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1353
}
200161ec:	853e                	mv	a0,a5
200161ee:	4432                	lw	s0,12(sp)
200161f0:	0141                	addi	sp,sp,16
200161f2:	8082                	ret

200161f4 <__metal_driver_sifive_fe310_g000_pll_init_rate>:
__metal_driver_sifive_fe310_g000_pll_init_rate():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1356
{
200161f4:	1141                	addi	sp,sp,-16
200161f6:	c622                	sw	s0,12(sp)
200161f8:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1357
		return 16000000;
200161fa:	00f427b7          	lui	a5,0xf42
200161fe:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1358
}
20016202:	853e                	mv	a0,a5
20016204:	4432                	lw	s0,12(sp)
20016206:	0141                	addi	sp,sp,16
20016208:	8082                	ret

2001620a <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1364
{
2001620a:	1141                	addi	sp,sp,-16
2001620c:	c622                	sw	s0,12(sp)
2001620e:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1365
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
20016210:	100087b7          	lui	a5,0x10008
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1366
}
20016214:	853e                	mv	a0,a5
20016216:	4432                	lw	s0,12(sp)
20016218:	0141                	addi	sp,sp,16
2001621a:	8082                	ret

2001621c <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1374
{
2001621c:	1141                	addi	sp,sp,-16
2001621e:	c622                	sw	s0,12(sp)
20016220:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1375
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20016222:	83818793          	addi	a5,gp,-1992 # 80000af8 <__metal_driver_vtable_sifive_fe310_g000_prci>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1376
}
20016226:	853e                	mv	a0,a5
20016228:	4432                	lw	s0,12(sp)
2001622a:	0141                	addi	sp,sp,16
2001622c:	8082                	ret

2001622e <get_pll_config_freq>:
get_pll_config_freq():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:141
                                const struct pll_config_t *config) {
2001622e:	1101                	addi	sp,sp,-32
20016230:	ce22                	sw	s0,28(sp)
20016232:	1000                	addi	s0,sp,32
20016234:	fea42623          	sw	a0,-20(s0)
20016238:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142
    if (pll_input_rate < config->min_input_rate ||
2001623c:	fe842783          	lw	a5,-24(s0)
20016240:	479c                	lw	a5,8(a5)
20016242:	fec42703          	lw	a4,-20(s0)
20016246:	00f76963          	bltu	a4,a5,20016258 <get_pll_config_freq+0x2a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:143 (discriminator 1)
        pll_input_rate > config->max_input_rate)
2001624a:	fe842783          	lw	a5,-24(s0)
2001624e:	47dc                	lw	a5,12(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142 (discriminator 1)
    if (pll_input_rate < config->min_input_rate ||
20016250:	fec42703          	lw	a4,-20(s0)
20016254:	00e7f463          	bgeu	a5,a4,2001625c <get_pll_config_freq+0x2e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:144
        return PLL_CONFIG_NOT_VALID;
20016258:	57fd                	li	a5,-1
2001625a:	a829                	j	20016274 <get_pll_config_freq+0x46>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:146
    return pll_input_rate * config->multiplier / config->divisor;
2001625c:	fe842783          	lw	a5,-24(s0)
20016260:	4398                	lw	a4,0(a5)
20016262:	fec42783          	lw	a5,-20(s0)
20016266:	02f70733          	mul	a4,a4,a5
2001626a:	fe842783          	lw	a5,-24(s0)
2001626e:	43dc                	lw	a5,4(a5)
20016270:	02f757b3          	divu	a5,a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:147
}
20016274:	853e                	mv	a0,a5
20016276:	4472                	lw	s0,28(sp)
20016278:	6105                	addi	sp,sp,32
2001627a:	8082                	ret

2001627c <__metal_driver_sifive_fe310_g000_pll_init>:
__metal_driver_sifive_fe310_g000_pll_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:162
    struct __metal_driver_sifive_fe310_g000_pll *pll) {
2001627c:	7139                	addi	sp,sp,-64
2001627e:	de06                	sw	ra,60(sp)
20016280:	dc22                	sw	s0,56(sp)
20016282:	0080                	addi	s0,sp,64
20016284:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:164
        __metal_driver_sifive_fe310_g000_pll_pllref(&(pll->clock));
20016288:	fcc42783          	lw	a5,-52(s0)
2001628c:	853e                	mv	a0,a5
2001628e:	3701                	jal	2001618e <__metal_driver_sifive_fe310_g000_pll_pllref>
20016290:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:165
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20016294:	3785                	jal	200161f4 <__metal_driver_sifive_fe310_g000_pll_init_rate>
20016296:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:166
    long config_offset = __metal_driver_sifive_fe310_g000_pll_config_offset();
2001629a:	37a9                	jal	200161e4 <__metal_driver_sifive_fe310_g000_pll_config_offset>
2001629c:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:167
    long base = __metal_driver_sifive_fe310_g000_prci_base();
200162a0:	37ad                	jal	2001620a <__metal_driver_sifive_fe310_g000_prci_base>
200162a2:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:169
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
200162a6:	fe042703          	lw	a4,-32(s0)
200162aa:	fe442783          	lw	a5,-28(s0)
200162ae:	97ba                	add	a5,a5,a4
200162b0:	fcf42e23          	sw	a5,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:173
    _metal_clock_call_all_callbacks(pll->clock._pre_rate_change_callback);
200162b4:	fcc42783          	lw	a5,-52(s0)
200162b8:	43dc                	lw	a5,4(a5)
200162ba:	853e                	mv	a0,a5
200162bc:	140020ef          	jal	ra,200183fc <_metal_clock_call_all_callbacks>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:177
    if ((__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL) != 0)
200162c0:	fdc42783          	lw	a5,-36(s0)
200162c4:	4398                	lw	a4,0(a5)
200162c6:	67c1                	lui	a5,0x10
200162c8:	8ff9                	and	a5,a5,a4
200162ca:	cb91                	beqz	a5,200162de <__metal_driver_sifive_fe310_g000_pll_init+0x62>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:178
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
200162cc:	fdc42783          	lw	a5,-36(s0)
200162d0:	4398                	lw	a4,0(a5)
200162d2:	77c1                	lui	a5,0xffff0
200162d4:	17fd                	addi	a5,a5,-1
200162d6:	8f7d                	and	a4,a4,a5
200162d8:	fdc42783          	lw	a5,-36(s0)
200162dc:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:181
    if (pllref != NULL)
200162de:	fec42783          	lw	a5,-20(s0)
200162e2:	cb91                	beqz	a5,200162f6 <__metal_driver_sifive_fe310_g000_pll_init+0x7a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:182
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_REFSEL;
200162e4:	fdc42783          	lw	a5,-36(s0)
200162e8:	4398                	lw	a4,0(a5)
200162ea:	000207b7          	lui	a5,0x20
200162ee:	8f5d                	or	a4,a4,a5
200162f0:	fdc42783          	lw	a5,-36(s0)
200162f4:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:187
    pll->clock.vtable->set_rate_hz(&(pll->clock), init_rate);
200162f6:	fcc42783          	lw	a5,-52(s0)
200162fa:	439c                	lw	a5,0(a5)
200162fc:	43d8                	lw	a4,4(a5)
200162fe:	fcc42783          	lw	a5,-52(s0)
20016302:	fe842583          	lw	a1,-24(s0)
20016306:	853e                	mv	a0,a5
20016308:	9702                	jalr	a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:190
    _metal_clock_call_all_callbacks(pll->clock._post_rate_change_callback);
2001630a:	fcc42783          	lw	a5,-52(s0)
2001630e:	479c                	lw	a5,8(a5)
20016310:	853e                	mv	a0,a5
20016312:	0ea020ef          	jal	ra,200183fc <_metal_clock_call_all_callbacks>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:191
}
20016316:	0001                	nop
20016318:	50f2                	lw	ra,60(sp)
2001631a:	5462                	lw	s0,56(sp)
2001631c:	6121                	addi	sp,sp,64
2001631e:	8082                	ret

20016320 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_get_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:194
    const struct metal_clock *clock) {
20016320:	711d                	addi	sp,sp,-96
20016322:	ce86                	sw	ra,92(sp)
20016324:	cca2                	sw	s0,88(sp)
20016326:	1080                	addi	s0,sp,96
20016328:	faa42623          	sw	a0,-84(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:196
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
2001632c:	fac42503          	lw	a0,-84(s0)
20016330:	3db9                	jal	2001618e <__metal_driver_sifive_fe310_g000_pll_pllref>
20016332:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:198
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
20016336:	fac42503          	lw	a0,-84(s0)
2001633a:	3d2d                	jal	20016174 <__metal_driver_sifive_fe310_g000_pll_pllsel0>
2001633c:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:200
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
20016340:	fac42503          	lw	a0,-84(s0)
20016344:	3545                	jal	200161e4 <__metal_driver_sifive_fe310_g000_pll_config_offset>
20016346:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:202
        __metal_driver_sifive_fe310_g000_pll_config_base(clock);
2001634a:	fac42503          	lw	a0,-84(s0)
2001634e:	3551                	jal	200161d2 <__metal_driver_sifive_fe310_g000_pll_config_base>
20016350:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:204
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
20016354:	fac42503          	lw	a0,-84(s0)
20016358:	359d                	jal	200161be <__metal_driver_sifive_fe310_g000_pll_divider_offset>
2001635a:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:206
        __metal_driver_sifive_fe310_g000_pll_divider_base(clock);
2001635e:	fac42503          	lw	a0,-84(s0)
20016362:	3599                	jal	200161a8 <__metal_driver_sifive_fe310_g000_pll_divider_base>
20016364:	fca42c23          	sw	a0,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:208
        __metal_driver_sifive_fe310_g000_prci_vtable();
20016368:	3d55                	jal	2001621c <__metal_driver_sifive_fe310_g000_prci_vtable>
2001636a:	fca42a23          	sw	a0,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:210
    long cfg = vtable->get_reg(config_base, config_offset);
2001636e:	fd442783          	lw	a5,-44(s0)
20016372:	439c                	lw	a5,0(a5)
20016374:	fe442583          	lw	a1,-28(s0)
20016378:	fe042503          	lw	a0,-32(s0)
2001637c:	9782                	jalr	a5
2001637e:	fca42823          	sw	a0,-48(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:211
    long div = vtable->get_reg(divider_base, divider_offset);
20016382:	fd442783          	lw	a5,-44(s0)
20016386:	439c                	lw	a5,0(a5)
20016388:	fdc42583          	lw	a1,-36(s0)
2001638c:	fd842503          	lw	a0,-40(s0)
20016390:	9782                	jalr	a5
20016392:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:215
    if (__METAL_GET_FIELD(cfg, PLL_SEL) == 0)
20016396:	fd042703          	lw	a4,-48(s0)
2001639a:	67c1                	lui	a5,0x10
2001639c:	8f7d                	and	a4,a4,a5
2001639e:	67c1                	lui	a5,0x10
200163a0:	00f77863          	bgeu	a4,a5,200163b0 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x90>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:216
        return metal_clock_get_rate_hz(pllsel0);
200163a4:	fe842503          	lw	a0,-24(s0)
200163a8:	0e8020ef          	jal	ra,20018490 <metal_clock_get_rate_hz>
200163ac:	87aa                	mv	a5,a0
200163ae:	a8e1                	j	20016486 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:221
        __METAL_GET_FIELD(cfg, PLL_REFSEL) ? pllref : pllsel0);
200163b0:	fd042703          	lw	a4,-48(s0)
200163b4:	000207b7          	lui	a5,0x20
200163b8:	8f7d                	and	a4,a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220
    long ref_hz = metal_clock_get_rate_hz(
200163ba:	000207b7          	lui	a5,0x20
200163be:	00f76563          	bltu	a4,a5,200163c8 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xa8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 1)
200163c2:	fec42783          	lw	a5,-20(s0)
200163c6:	a019                	j	200163cc <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xac>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 2)
200163c8:	fe842783          	lw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 4)
200163cc:	853e                	mv	a0,a5
200163ce:	0c2020ef          	jal	ra,20018490 <metal_clock_get_rate_hz>
200163d2:	fca42423          	sw	a0,-56(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:225 (discriminator 4)
    if (__METAL_GET_FIELD(cfg, PLL_BYPASS))
200163d6:	fd042703          	lw	a4,-48(s0)
200163da:	000407b7          	lui	a5,0x40
200163de:	8f7d                	and	a4,a4,a5
200163e0:	000407b7          	lui	a5,0x40
200163e4:	00f76563          	bltu	a4,a5,200163ee <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xce>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:226
        return ref_hz;
200163e8:	fc842783          	lw	a5,-56(s0)
200163ec:	a869                	j	20016486 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:229
    long div_r = __METAL_GET_FIELD(cfg, PLL_R) + 1;
200163ee:	fd042783          	lw	a5,-48(s0)
200163f2:	8b9d                	andi	a5,a5,7
200163f4:	0785                	addi	a5,a5,1
200163f6:	fcf42223          	sw	a5,-60(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:230
    long mul_f = 2 * (__METAL_GET_FIELD(cfg, PLL_F) + 1);
200163fa:	fd042783          	lw	a5,-48(s0)
200163fe:	3f07f793          	andi	a5,a5,1008
20016402:	8391                	srli	a5,a5,0x4
20016404:	0785                	addi	a5,a5,1
20016406:	0786                	slli	a5,a5,0x1
20016408:	fcf42023          	sw	a5,-64(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:231
    if (__METAL_GET_FIELD(cfg, PLL_Q) == 0)
2001640c:	fd042703          	lw	a4,-48(s0)
20016410:	6785                	lui	a5,0x1
20016412:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20016416:	8f7d                	and	a4,a4,a5
20016418:	3ff00793          	li	a5,1023
2001641c:	00e7e463          	bltu	a5,a4,20016424 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x104>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:232
        return -1;
20016420:	57fd                	li	a5,-1
20016422:	a095                	j	20016486 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:233
    long div_q = 1 << __METAL_GET_FIELD(cfg, PLL_Q);
20016424:	fd042703          	lw	a4,-48(s0)
20016428:	6785                	lui	a5,0x1
2001642a:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
2001642e:	8ff9                	and	a5,a5,a4
20016430:	83a9                	srli	a5,a5,0xa
20016432:	4705                	li	a4,1
20016434:	00f717b3          	sll	a5,a4,a5
20016438:	faf42e23          	sw	a5,-68(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:238
    long pllout = (((ref_hz / div_r) * mul_f) / div_q);
2001643c:	fc842703          	lw	a4,-56(s0)
20016440:	fc442783          	lw	a5,-60(s0)
20016444:	02f74733          	div	a4,a4,a5
20016448:	fc042783          	lw	a5,-64(s0)
2001644c:	02f70733          	mul	a4,a4,a5
20016450:	fbc42783          	lw	a5,-68(s0)
20016454:	02f747b3          	div	a5,a4,a5
20016458:	faf42c23          	sw	a5,-72(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:239
    if (__METAL_GET_FIELD(div, DIV_1))
2001645c:	fcc42783          	lw	a5,-52(s0)
20016460:	1007f713          	andi	a4,a5,256
20016464:	0ff00793          	li	a5,255
20016468:	00e7f563          	bgeu	a5,a4,20016472 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x152>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:240
        return pllout;
2001646c:	fb842783          	lw	a5,-72(s0)
20016470:	a819                	j	20016486 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:242
    return pllout / (2 * (__METAL_GET_FIELD(div, DIV_DIV) + 1));
20016472:	fb842703          	lw	a4,-72(s0)
20016476:	fcc42783          	lw	a5,-52(s0)
2001647a:	03f7f793          	andi	a5,a5,63
2001647e:	0785                	addi	a5,a5,1
20016480:	0786                	slli	a5,a5,0x1
20016482:	02f757b3          	divu	a5,a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:243
}
20016486:	853e                	mv	a0,a5
20016488:	40f6                	lw	ra,92(sp)
2001648a:	4466                	lw	s0,88(sp)
2001648c:	6125                	addi	sp,sp,96
2001648e:	8082                	ret

20016490 <find_closest_config>:
find_closest_config():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:253
static int find_closest_config(long ref_hz, long rate) {
20016490:	7139                	addi	sp,sp,-64
20016492:	de06                	sw	ra,60(sp)
20016494:	dc22                	sw	s0,56(sp)
20016496:	0080                	addi	s0,sp,64
20016498:	fca42623          	sw	a0,-52(s0)
2001649c:	fcb42423          	sw	a1,-56(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:254
    int closest_index = -1;
200164a0:	57fd                	li	a5,-1
200164a2:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:255
    long closest_diff = LONG_MAX;
200164a6:	800007b7          	lui	a5,0x80000
200164aa:	fff7c793          	not	a5,a5
200164ae:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
200164b2:	04300793          	li	a5,67
200164b6:	fef42223          	sw	a5,-28(s0)
200164ba:	a0b5                	j	20016526 <find_closest_config+0x96>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:261
        long config_freq = get_pll_config_freq(ref_hz, &(pll_configs[i]));
200164bc:	fcc42683          	lw	a3,-52(s0)
200164c0:	fe442783          	lw	a5,-28(s0)
200164c4:	00579713          	slli	a4,a5,0x5
200164c8:	200117b7          	lui	a5,0x20011
200164cc:	91078793          	addi	a5,a5,-1776 # 20010910 <pll_configs>
200164d0:	97ba                	add	a5,a5,a4
200164d2:	85be                	mv	a1,a5
200164d4:	8536                	mv	a0,a3
200164d6:	d59ff0ef          	jal	ra,2001622e <get_pll_config_freq>
200164da:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:262
        if (config_freq != PLL_CONFIG_NOT_VALID) {
200164de:	fe042703          	lw	a4,-32(s0)
200164e2:	57fd                	li	a5,-1
200164e4:	02f70c63          	beq	a4,a5,2001651c <find_closest_config+0x8c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:263
            long freq_diff = labs(config_freq - rate);
200164e8:	fe042703          	lw	a4,-32(s0)
200164ec:	fc842783          	lw	a5,-56(s0)
200164f0:	8f1d                	sub	a4,a4,a5
200164f2:	41f75793          	srai	a5,a4,0x1f
200164f6:	8f3d                	xor	a4,a4,a5
200164f8:	40f707b3          	sub	a5,a4,a5
200164fc:	fcf42e23          	sw	a5,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:265
            if (freq_diff < closest_diff) {
20016500:	fdc42703          	lw	a4,-36(s0)
20016504:	fe842783          	lw	a5,-24(s0)
20016508:	00f75a63          	bge	a4,a5,2001651c <find_closest_config+0x8c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:266
                closest_index = i;
2001650c:	fe442783          	lw	a5,-28(s0)
20016510:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:267
                closest_diff = freq_diff;
20016514:	fdc42783          	lw	a5,-36(s0)
20016518:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:260
         i--) {
2001651c:	fe442783          	lw	a5,-28(s0)
20016520:	17fd                	addi	a5,a5,-1
20016522:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259 (discriminator 1)
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
20016526:	fe442783          	lw	a5,-28(s0)
2001652a:	f807d9e3          	bgez	a5,200164bc <find_closest_config+0x2c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:272
    return closest_index;
2001652e:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:273
}
20016532:	853e                	mv	a0,a5
20016534:	50f2                	lw	ra,60(sp)
20016536:	5462                	lw	s0,56(sp)
20016538:	6121                	addi	sp,sp,64
2001653a:	8082                	ret

2001653c <configure_pll>:
configure_pll():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:290
                          const struct pll_config_t *config) {
2001653c:	7179                	addi	sp,sp,-48
2001653e:	d606                	sw	ra,44(sp)
20016540:	d422                	sw	s0,40(sp)
20016542:	1800                	addi	s0,sp,48
20016544:	fca42e23          	sw	a0,-36(s0)
20016548:	fcb42c23          	sw	a1,-40(s0)
2001654c:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:291
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_R);
20016550:	fdc42783          	lw	a5,-36(s0)
20016554:	439c                	lw	a5,0(a5)
20016556:	ff87f713          	andi	a4,a5,-8
2001655a:	fdc42783          	lw	a5,-36(s0)
2001655e:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:292
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_R_SHIFT(config->r);
20016560:	fdc42783          	lw	a5,-36(s0)
20016564:	4398                	lw	a4,0(a5)
20016566:	fd442783          	lw	a5,-44(s0)
2001656a:	4b9c                	lw	a5,16(a5)
2001656c:	8b9d                	andi	a5,a5,7
2001656e:	8f5d                	or	a4,a4,a5
20016570:	fdc42783          	lw	a5,-36(s0)
20016574:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:294
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_F);
20016576:	fdc42783          	lw	a5,-36(s0)
2001657a:	439c                	lw	a5,0(a5)
2001657c:	c0f7f713          	andi	a4,a5,-1009
20016580:	fdc42783          	lw	a5,-36(s0)
20016584:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:295
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_F_SHIFT(config->f);
20016586:	fdc42783          	lw	a5,-36(s0)
2001658a:	4398                	lw	a4,0(a5)
2001658c:	fd442783          	lw	a5,-44(s0)
20016590:	4bdc                	lw	a5,20(a5)
20016592:	0792                	slli	a5,a5,0x4
20016594:	3f07f793          	andi	a5,a5,1008
20016598:	8f5d                	or	a4,a4,a5
2001659a:	fdc42783          	lw	a5,-36(s0)
2001659e:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:297
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_Q);
200165a0:	fdc42783          	lw	a5,-36(s0)
200165a4:	4398                	lw	a4,0(a5)
200165a6:	77fd                	lui	a5,0xfffff
200165a8:	3ff78793          	addi	a5,a5,1023 # fffff3ff <metal_segment_heap_target_end+0x7fffdc3f>
200165ac:	8f7d                	and	a4,a4,a5
200165ae:	fdc42783          	lw	a5,-36(s0)
200165b2:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:298
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_Q_SHIFT(config->q);
200165b4:	fdc42783          	lw	a5,-36(s0)
200165b8:	4398                	lw	a4,0(a5)
200165ba:	fd442783          	lw	a5,-44(s0)
200165be:	4f9c                	lw	a5,24(a5)
200165c0:	00a79693          	slli	a3,a5,0xa
200165c4:	6785                	lui	a5,0x1
200165c6:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
200165ca:	8ff5                	and	a5,a5,a3
200165cc:	8f5d                	or	a4,a4,a5
200165ce:	fdc42783          	lw	a5,-36(s0)
200165d2:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:300
    if (config->d < 0) {
200165d4:	fd442783          	lw	a5,-44(s0)
200165d8:	4fdc                	lw	a5,28(a5)
200165da:	0207db63          	bgez	a5,20016610 <configure_pll+0xd4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:302
        __METAL_ACCESS_ONCE(plloutdiv) |= DIV_1;
200165de:	fd842783          	lw	a5,-40(s0)
200165e2:	439c                	lw	a5,0(a5)
200165e4:	1007e713          	ori	a4,a5,256
200165e8:	fd842783          	lw	a5,-40(s0)
200165ec:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:304
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
200165ee:	fd842783          	lw	a5,-40(s0)
200165f2:	439c                	lw	a5,0(a5)
200165f4:	fc07f713          	andi	a4,a5,-64
200165f8:	fd842783          	lw	a5,-40(s0)
200165fc:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:305
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(1);
200165fe:	fd842783          	lw	a5,-40(s0)
20016602:	439c                	lw	a5,0(a5)
20016604:	0017e713          	ori	a4,a5,1
20016608:	fd842783          	lw	a5,-40(s0)
2001660c:	c398                	sw	a4,0(a5)
2001660e:	a82d                	j	20016648 <configure_pll+0x10c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:307
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_1);
20016610:	fd842783          	lw	a5,-40(s0)
20016614:	439c                	lw	a5,0(a5)
20016616:	eff7f713          	andi	a4,a5,-257
2001661a:	fd842783          	lw	a5,-40(s0)
2001661e:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:309
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
20016620:	fd842783          	lw	a5,-40(s0)
20016624:	439c                	lw	a5,0(a5)
20016626:	fc07f713          	andi	a4,a5,-64
2001662a:	fd842783          	lw	a5,-40(s0)
2001662e:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:310
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(config->d);
20016630:	fd842783          	lw	a5,-40(s0)
20016634:	4398                	lw	a4,0(a5)
20016636:	fd442783          	lw	a5,-44(s0)
2001663a:	4fdc                	lw	a5,28(a5)
2001663c:	03f7f793          	andi	a5,a5,63
20016640:	8f5d                	or	a4,a4,a5
20016642:	fd842783          	lw	a5,-40(s0)
20016646:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:313
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_BYPASS);
20016648:	fdc42783          	lw	a5,-36(s0)
2001664c:	4398                	lw	a4,0(a5)
2001664e:	fffc07b7          	lui	a5,0xfffc0
20016652:	17fd                	addi	a5,a5,-1
20016654:	8f7d                	and	a4,a4,a5
20016656:	fdc42783          	lw	a5,-36(s0)
2001665a:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:318
    __metal_driver_riscv_clint0_command_request(__METAL_DT_RISCV_CLINT0_HANDLE,
2001665c:	fe040793          	addi	a5,s0,-32
20016660:	863e                	mv	a2,a5
20016662:	4585                	li	a1,1
20016664:	81018513          	addi	a0,gp,-2032 # 80000ad0 <__metal_dt_clint_2000000>
20016668:	ccefd0ef          	jal	ra,20013b36 <__metal_driver_riscv_clint0_command_request>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:320
    mtime_end = mtime + PLL_LOCK_WAIT_TICKS;
2001666c:	fe042683          	lw	a3,-32(s0)
20016670:	fe442703          	lw	a4,-28(s0)
20016674:	4591                	li	a1,4
20016676:	4601                	li	a2,0
20016678:	00b687b3          	add	a5,a3,a1
2001667c:	853e                	mv	a0,a5
2001667e:	00d53533          	sltu	a0,a0,a3
20016682:	00c70833          	add	a6,a4,a2
20016686:	01050733          	add	a4,a0,a6
2001668a:	883a                	mv	a6,a4
2001668c:	fef42423          	sw	a5,-24(s0)
20016690:	ff042623          	sw	a6,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
20016694:	a809                	j	200166a6 <configure_pll+0x16a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:322
        __metal_driver_riscv_clint0_command_request(
20016696:	fe040793          	addi	a5,s0,-32
2001669a:	863e                	mv	a2,a5
2001669c:	4585                	li	a1,1
2001669e:	81018513          	addi	a0,gp,-2032 # 80000ad0 <__metal_dt_clint_2000000>
200166a2:	c94fd0ef          	jal	ra,20013b36 <__metal_driver_riscv_clint0_command_request>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
200166a6:	fe042783          	lw	a5,-32(s0)
200166aa:	fe442803          	lw	a6,-28(s0)
200166ae:	fec42703          	lw	a4,-20(s0)
200166b2:	86c2                	mv	a3,a6
200166b4:	00d76b63          	bltu	a4,a3,200166ca <configure_pll+0x18e>
200166b8:	fec42703          	lw	a4,-20(s0)
200166bc:	86c2                	mv	a3,a6
200166be:	fcd71ce3          	bne	a4,a3,20016696 <configure_pll+0x15a>
200166c2:	fe842703          	lw	a4,-24(s0)
200166c6:	fcf778e3          	bgeu	a4,a5,20016696 <configure_pll+0x15a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340
    while ((__METAL_ACCESS_ONCE(pllcfg) & PLL_LOCK) == 0)
200166ca:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340 (discriminator 1)
200166cc:	fdc42783          	lw	a5,-36(s0)
200166d0:	439c                	lw	a5,0(a5)
200166d2:	fe07dde3          	bgez	a5,200166cc <configure_pll+0x190>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:342
}
200166d6:	0001                	nop
200166d8:	50b2                	lw	ra,44(sp)
200166da:	5422                	lw	s0,40(sp)
200166dc:	6145                	addi	sp,sp,48
200166de:	8082                	ret

200166e0 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_set_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:345
                                                      long rate) {
200166e0:	715d                	addi	sp,sp,-80
200166e2:	c686                	sw	ra,76(sp)
200166e4:	c4a2                	sw	s0,72(sp)
200166e6:	0880                	addi	s0,sp,80
200166e8:	faa42e23          	sw	a0,-68(s0)
200166ec:	fab42c23          	sw	a1,-72(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:347
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
200166f0:	fbc42503          	lw	a0,-68(s0)
200166f4:	a9bff0ef          	jal	ra,2001618e <__metal_driver_sifive_fe310_g000_pll_pllref>
200166f8:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:349
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
200166fc:	fbc42503          	lw	a0,-68(s0)
20016700:	a75ff0ef          	jal	ra,20016174 <__metal_driver_sifive_fe310_g000_pll_pllsel0>
20016704:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:351
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
20016708:	fbc42503          	lw	a0,-68(s0)
2001670c:	ad9ff0ef          	jal	ra,200161e4 <__metal_driver_sifive_fe310_g000_pll_config_offset>
20016710:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:353
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
20016714:	fbc42503          	lw	a0,-68(s0)
20016718:	aa7ff0ef          	jal	ra,200161be <__metal_driver_sifive_fe310_g000_pll_divider_offset>
2001671c:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:354
    long base = __metal_driver_sifive_fe310_g000_prci_base();
20016720:	aebff0ef          	jal	ra,2001620a <__metal_driver_sifive_fe310_g000_prci_base>
20016724:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:356
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
20016728:	fdc42703          	lw	a4,-36(s0)
2001672c:	fe442783          	lw	a5,-28(s0)
20016730:	97ba                	add	a5,a5,a4
20016732:	fcf42c23          	sw	a5,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:357
    __metal_io_u32 *plloutdiv = (__metal_io_u32 *)(base + divider_offset);
20016736:	fdc42703          	lw	a4,-36(s0)
2001673a:	fe042783          	lw	a5,-32(s0)
2001673e:	97ba                	add	a5,a5,a4
20016740:	fcf42a23          	sw	a5,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:360
    if (__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL)
20016744:	fd842783          	lw	a5,-40(s0)
20016748:	4398                	lw	a4,0(a5)
2001674a:	67c1                	lui	a5,0x10
2001674c:	8ff9                	and	a5,a5,a4
2001674e:	cb91                	beqz	a5,20016762 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x82>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:361
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
20016750:	fd842783          	lw	a5,-40(s0)
20016754:	4398                	lw	a4,0(a5)
20016756:	77c1                	lui	a5,0xffff0
20016758:	17fd                	addi	a5,a5,-1
2001675a:	8f7d                	and	a4,a4,a5
2001675c:	fd842783          	lw	a5,-40(s0)
20016760:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:366
        __METAL_ACCESS_ONCE(pllcfg) & PLL_REFSEL ? pllref : pllsel0);
20016762:	fd842783          	lw	a5,-40(s0)
20016766:	4398                	lw	a4,0(a5)
20016768:	000207b7          	lui	a5,0x20
2001676c:	8ff9                	and	a5,a5,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365
    long ref_hz = metal_clock_get_rate_hz(
2001676e:	c781                	beqz	a5,20016776 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x96>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 1)
20016770:	fec42783          	lw	a5,-20(s0)
20016774:	a019                	j	2001677a <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x9a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 2)
20016776:	fe842783          	lw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 4)
2001677a:	853e                	mv	a0,a5
2001677c:	515010ef          	jal	ra,20018490 <metal_clock_get_rate_hz>
20016780:	fca42823          	sw	a0,-48(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 4)
    if ((ref_hz * 3 / 4) <= rate && (ref_hz * 5 / 4) >= rate) {
20016784:	fd042703          	lw	a4,-48(s0)
20016788:	87ba                	mv	a5,a4
2001678a:	0786                	slli	a5,a5,0x1
2001678c:	97ba                	add	a5,a5,a4
2001678e:	41f7d713          	srai	a4,a5,0x1f
20016792:	8b0d                	andi	a4,a4,3
20016794:	97ba                	add	a5,a5,a4
20016796:	8789                	srai	a5,a5,0x2
20016798:	873e                	mv	a4,a5
2001679a:	fb842783          	lw	a5,-72(s0)
2001679e:	02e7cb63          	blt	a5,a4,200167d4 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 1)
200167a2:	fd042703          	lw	a4,-48(s0)
200167a6:	87ba                	mv	a5,a4
200167a8:	078a                	slli	a5,a5,0x2
200167aa:	97ba                	add	a5,a5,a4
200167ac:	41f7d713          	srai	a4,a5,0x1f
200167b0:	8b0d                	andi	a4,a4,3
200167b2:	97ba                	add	a5,a5,a4
200167b4:	8789                	srai	a5,a5,0x2
200167b6:	873e                	mv	a4,a5
200167b8:	fb842783          	lw	a5,-72(s0)
200167bc:	00f74c63          	blt	a4,a5,200167d4 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:371
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
200167c0:	fd842783          	lw	a5,-40(s0)
200167c4:	4398                	lw	a4,0(a5)
200167c6:	000407b7          	lui	a5,0x40
200167ca:	8f5d                	or	a4,a4,a5
200167cc:	fd842783          	lw	a5,-40(s0)
200167d0:	c398                	sw	a4,0(a5)
200167d2:	a881                	j	20016822 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:373
        int config_index = find_closest_config(ref_hz, rate);
200167d4:	fb842583          	lw	a1,-72(s0)
200167d8:	fd042503          	lw	a0,-48(s0)
200167dc:	cb5ff0ef          	jal	ra,20016490 <find_closest_config>
200167e0:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:374
        if (config_index != -1) {
200167e4:	fcc42703          	lw	a4,-52(s0)
200167e8:	57fd                	li	a5,-1
200167ea:	02f70363          	beq	a4,a5,20016810 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x130>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:375
            configure_pll(pllcfg, plloutdiv, &(pll_configs[config_index]));
200167ee:	fcc42783          	lw	a5,-52(s0)
200167f2:	00579713          	slli	a4,a5,0x5
200167f6:	200117b7          	lui	a5,0x20011
200167fa:	91078793          	addi	a5,a5,-1776 # 20010910 <pll_configs>
200167fe:	97ba                	add	a5,a5,a4
20016800:	863e                	mv	a2,a5
20016802:	fd442583          	lw	a1,-44(s0)
20016806:	fd842503          	lw	a0,-40(s0)
2001680a:	d33ff0ef          	jal	ra,2001653c <configure_pll>
2001680e:	a811                	j	20016822 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:378
            __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
20016810:	fd842783          	lw	a5,-40(s0)
20016814:	4398                	lw	a4,0(a5)
20016816:	000407b7          	lui	a5,0x40
2001681a:	8f5d                	or	a4,a4,a5
2001681c:	fd842783          	lw	a5,-40(s0)
20016820:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:383
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_SEL;
20016822:	fd842783          	lw	a5,-40(s0)
20016826:	4398                	lw	a4,0(a5)
20016828:	67c1                	lui	a5,0x10
2001682a:	8f5d                	or	a4,a4,a5
2001682c:	fd842783          	lw	a5,-40(s0)
20016830:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:385
    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
20016832:	fbc42503          	lw	a0,-68(s0)
20016836:	aebff0ef          	jal	ra,20016320 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>
2001683a:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:386
}
2001683c:	853e                	mv	a0,a5
2001683e:	40b6                	lw	ra,76(sp)
20016840:	4426                	lw	s0,72(sp)
20016842:	6161                	addi	sp,sp,80
20016844:	8082                	ret

20016846 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1364
{
20016846:	1141                	addi	sp,sp,-16
20016848:	c622                	sw	s0,12(sp)
2001684a:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1365
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
2001684c:	100087b7          	lui	a5,0x10008
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1366
}
20016850:	853e                	mv	a0,a5
20016852:	4432                	lw	s0,12(sp)
20016854:	0141                	addi	sp,sp,16
20016856:	8082                	ret

20016858 <__metal_driver_sifive_fe310_g000_prci_get_reg>:
__metal_driver_sifive_fe310_g000_prci_get_reg():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:12

#include <metal/drivers/sifive_fe310-g000_prci.h>
#include <metal/machine.h>

long __metal_driver_sifive_fe310_g000_prci_get_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset) {
20016858:	7179                	addi	sp,sp,-48
2001685a:	d606                	sw	ra,44(sp)
2001685c:	d422                	sw	s0,40(sp)
2001685e:	1800                	addi	s0,sp,48
20016860:	fca42e23          	sw	a0,-36(s0)
20016864:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:13
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
20016868:	3ff9                	jal	20016846 <__metal_driver_sifive_fe310_g000_prci_base>
2001686a:	87aa                	mv	a5,a0
2001686c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:14
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset));
20016870:	fd842703          	lw	a4,-40(s0)
20016874:	fec42783          	lw	a5,-20(s0)
20016878:	97ba                	add	a5,a5,a4
2001687a:	439c                	lw	a5,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:15
}
2001687c:	853e                	mv	a0,a5
2001687e:	50b2                	lw	ra,44(sp)
20016880:	5422                	lw	s0,40(sp)
20016882:	6145                	addi	sp,sp,48
20016884:	8082                	ret

20016886 <__metal_driver_sifive_fe310_g000_prci_set_reg>:
__metal_driver_sifive_fe310_g000_prci_set_reg():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:19

long __metal_driver_sifive_fe310_g000_prci_set_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset,
    long value) {
20016886:	7179                	addi	sp,sp,-48
20016888:	d606                	sw	ra,44(sp)
2001688a:	d422                	sw	s0,40(sp)
2001688c:	1800                	addi	s0,sp,48
2001688e:	fca42e23          	sw	a0,-36(s0)
20016892:	fcb42c23          	sw	a1,-40(s0)
20016896:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:20
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
2001689a:	3775                	jal	20016846 <__metal_driver_sifive_fe310_g000_prci_base>
2001689c:	87aa                	mv	a5,a0
2001689e:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:21
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset)) = value;
200168a2:	fd842703          	lw	a4,-40(s0)
200168a6:	fec42783          	lw	a5,-20(s0)
200168aa:	97ba                	add	a5,a5,a4
200168ac:	873e                	mv	a4,a5
200168ae:	fd442783          	lw	a5,-44(s0)
200168b2:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:22
}
200168b4:	853e                	mv	a0,a5
200168b6:	50b2                	lw	ra,44(sp)
200168b8:	5422                	lw	s0,40(sp)
200168ba:	6145                	addi	sp,sp,48
200168bc:	8082                	ret

200168be <__metal_driver_sifive_gpio0_base>:
__metal_driver_sifive_gpio0_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:430
{
200168be:	1101                	addi	sp,sp,-32
200168c0:	ce22                	sw	s0,28(sp)
200168c2:	1000                	addi	s0,sp,32
200168c4:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:431
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
200168c8:	fec42703          	lw	a4,-20(s0)
200168cc:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
200168d0:	00f71563          	bne	a4,a5,200168da <__metal_driver_sifive_gpio0_base+0x1c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:432
		return METAL_SIFIVE_GPIO0_10012000_BASE_ADDRESS;
200168d4:	100127b7          	lui	a5,0x10012
200168d8:	a011                	j	200168dc <__metal_driver_sifive_gpio0_base+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:435
		return 0;
200168da:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:437
}
200168dc:	853e                	mv	a0,a5
200168de:	4472                	lw	s0,28(sp)
200168e0:	6105                	addi	sp,sp,32
200168e2:	8082                	ret

200168e4 <__metal_driver_sifive_gpio0_interrupt_parent>:
__metal_driver_sifive_gpio0_interrupt_parent():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:460
{
200168e4:	1101                	addi	sp,sp,-32
200168e6:	ce22                	sw	s0,28(sp)
200168e8:	1000                	addi	s0,sp,32
200168ea:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:461
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
200168ee:	fec42703          	lw	a4,-20(s0)
200168f2:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
200168f6:	00f71763          	bne	a4,a5,20016904 <__metal_driver_sifive_gpio0_interrupt_parent+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:462
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
200168fa:	800007b7          	lui	a5,0x80000
200168fe:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffeca0>
20016902:	a011                	j	20016906 <__metal_driver_sifive_gpio0_interrupt_parent+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:465
		return 0;
20016904:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:467
}
20016906:	853e                	mv	a0,a5
20016908:	4472                	lw	s0,28(sp)
2001690a:	6105                	addi	sp,sp,32
2001690c:	8082                	ret

2001690e <__metal_driver_sifive_gpio0_interrupt_lines>:
__metal_driver_sifive_gpio0_interrupt_lines():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:470
{
2001690e:	1101                	addi	sp,sp,-32
20016910:	ce22                	sw	s0,28(sp)
20016912:	1000                	addi	s0,sp,32
20016914:	fea42623          	sw	a0,-20(s0)
20016918:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:471
	if (((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 0)) {
2001691c:	fec42703          	lw	a4,-20(s0)
20016920:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20016924:	00f71763          	bne	a4,a5,20016932 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:471 (discriminator 1)
20016928:	fe842783          	lw	a5,-24(s0)
2001692c:	e399                	bnez	a5,20016932 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:472
		return 8;
2001692e:	47a1                	li	a5,8
20016930:	ae15                	j	20016c64 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:474
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 1))) {
20016932:	fec42703          	lw	a4,-20(s0)
20016936:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
2001693a:	00f71963          	bne	a4,a5,2001694c <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:474 (discriminator 1)
2001693e:	fe842703          	lw	a4,-24(s0)
20016942:	4785                	li	a5,1
20016944:	00f71463          	bne	a4,a5,2001694c <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:475
		return 9;
20016948:	47a5                	li	a5,9
2001694a:	ae29                	j	20016c64 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:477
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 2))) {
2001694c:	fec42703          	lw	a4,-20(s0)
20016950:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20016954:	00f71963          	bne	a4,a5,20016966 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:477 (discriminator 1)
20016958:	fe842703          	lw	a4,-24(s0)
2001695c:	4789                	li	a5,2
2001695e:	00f71463          	bne	a4,a5,20016966 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:478
		return 10;
20016962:	47a9                	li	a5,10
20016964:	a601                	j	20016c64 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:480
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 3))) {
20016966:	fec42703          	lw	a4,-20(s0)
2001696a:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
2001696e:	00f71963          	bne	a4,a5,20016980 <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:480 (discriminator 1)
20016972:	fe842703          	lw	a4,-24(s0)
20016976:	478d                	li	a5,3
20016978:	00f71463          	bne	a4,a5,20016980 <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:481
		return 11;
2001697c:	47ad                	li	a5,11
2001697e:	a4dd                	j	20016c64 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:483
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 4))) {
20016980:	fec42703          	lw	a4,-20(s0)
20016984:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20016988:	00f71963          	bne	a4,a5,2001699a <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:483 (discriminator 1)
2001698c:	fe842703          	lw	a4,-24(s0)
20016990:	4791                	li	a5,4
20016992:	00f71463          	bne	a4,a5,2001699a <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:484
		return 12;
20016996:	47b1                	li	a5,12
20016998:	a4f1                	j	20016c64 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:486
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 5))) {
2001699a:	fec42703          	lw	a4,-20(s0)
2001699e:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
200169a2:	00f71963          	bne	a4,a5,200169b4 <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:486 (discriminator 1)
200169a6:	fe842703          	lw	a4,-24(s0)
200169aa:	4795                	li	a5,5
200169ac:	00f71463          	bne	a4,a5,200169b4 <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:487
		return 13;
200169b0:	47b5                	li	a5,13
200169b2:	ac4d                	j	20016c64 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:489
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 6))) {
200169b4:	fec42703          	lw	a4,-20(s0)
200169b8:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
200169bc:	00f71963          	bne	a4,a5,200169ce <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:489 (discriminator 1)
200169c0:	fe842703          	lw	a4,-24(s0)
200169c4:	4799                	li	a5,6
200169c6:	00f71463          	bne	a4,a5,200169ce <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:490
		return 14;
200169ca:	47b9                	li	a5,14
200169cc:	ac61                	j	20016c64 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:492
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 7))) {
200169ce:	fec42703          	lw	a4,-20(s0)
200169d2:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
200169d6:	00f71963          	bne	a4,a5,200169e8 <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:492 (discriminator 1)
200169da:	fe842703          	lw	a4,-24(s0)
200169de:	479d                	li	a5,7
200169e0:	00f71463          	bne	a4,a5,200169e8 <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:493
		return 15;
200169e4:	47bd                	li	a5,15
200169e6:	acbd                	j	20016c64 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:495
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 8))) {
200169e8:	fec42703          	lw	a4,-20(s0)
200169ec:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
200169f0:	00f71963          	bne	a4,a5,20016a02 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:495 (discriminator 1)
200169f4:	fe842703          	lw	a4,-24(s0)
200169f8:	47a1                	li	a5,8
200169fa:	00f71463          	bne	a4,a5,20016a02 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:496
		return 16;
200169fe:	47c1                	li	a5,16
20016a00:	a495                	j	20016c64 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:498
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 9))) {
20016a02:	fec42703          	lw	a4,-20(s0)
20016a06:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20016a0a:	00f71963          	bne	a4,a5,20016a1c <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:498 (discriminator 1)
20016a0e:	fe842703          	lw	a4,-24(s0)
20016a12:	47a5                	li	a5,9
20016a14:	00f71463          	bne	a4,a5,20016a1c <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:499
		return 17;
20016a18:	47c5                	li	a5,17
20016a1a:	a4a9                	j	20016c64 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:501
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 10))) {
20016a1c:	fec42703          	lw	a4,-20(s0)
20016a20:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20016a24:	00f71963          	bne	a4,a5,20016a36 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:501 (discriminator 1)
20016a28:	fe842703          	lw	a4,-24(s0)
20016a2c:	47a9                	li	a5,10
20016a2e:	00f71463          	bne	a4,a5,20016a36 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:502
		return 18;
20016a32:	47c9                	li	a5,18
20016a34:	ac05                	j	20016c64 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:504
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 11))) {
20016a36:	fec42703          	lw	a4,-20(s0)
20016a3a:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20016a3e:	00f71963          	bne	a4,a5,20016a50 <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:504 (discriminator 1)
20016a42:	fe842703          	lw	a4,-24(s0)
20016a46:	47ad                	li	a5,11
20016a48:	00f71463          	bne	a4,a5,20016a50 <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:505
		return 19;
20016a4c:	47cd                	li	a5,19
20016a4e:	ac19                	j	20016c64 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:507
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 12))) {
20016a50:	fec42703          	lw	a4,-20(s0)
20016a54:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20016a58:	00f71963          	bne	a4,a5,20016a6a <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:507 (discriminator 1)
20016a5c:	fe842703          	lw	a4,-24(s0)
20016a60:	47b1                	li	a5,12
20016a62:	00f71463          	bne	a4,a5,20016a6a <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:508
		return 20;
20016a66:	47d1                	li	a5,20
20016a68:	aaf5                	j	20016c64 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:510
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 13))) {
20016a6a:	fec42703          	lw	a4,-20(s0)
20016a6e:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20016a72:	00f71963          	bne	a4,a5,20016a84 <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:510 (discriminator 1)
20016a76:	fe842703          	lw	a4,-24(s0)
20016a7a:	47b5                	li	a5,13
20016a7c:	00f71463          	bne	a4,a5,20016a84 <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:511
		return 21;
20016a80:	47d5                	li	a5,21
20016a82:	a2cd                	j	20016c64 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:513
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 14))) {
20016a84:	fec42703          	lw	a4,-20(s0)
20016a88:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20016a8c:	00f71963          	bne	a4,a5,20016a9e <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:513 (discriminator 1)
20016a90:	fe842703          	lw	a4,-24(s0)
20016a94:	47b9                	li	a5,14
20016a96:	00f71463          	bne	a4,a5,20016a9e <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:514
		return 22;
20016a9a:	47d9                	li	a5,22
20016a9c:	a2e1                	j	20016c64 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:516
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 15))) {
20016a9e:	fec42703          	lw	a4,-20(s0)
20016aa2:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20016aa6:	00f71963          	bne	a4,a5,20016ab8 <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:516 (discriminator 1)
20016aaa:	fe842703          	lw	a4,-24(s0)
20016aae:	47bd                	li	a5,15
20016ab0:	00f71463          	bne	a4,a5,20016ab8 <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:517
		return 23;
20016ab4:	47dd                	li	a5,23
20016ab6:	a27d                	j	20016c64 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:519
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 16))) {
20016ab8:	fec42703          	lw	a4,-20(s0)
20016abc:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20016ac0:	00f71963          	bne	a4,a5,20016ad2 <__metal_driver_sifive_gpio0_interrupt_lines+0x1c4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:519 (discriminator 1)
20016ac4:	fe842703          	lw	a4,-24(s0)
20016ac8:	47c1                	li	a5,16
20016aca:	00f71463          	bne	a4,a5,20016ad2 <__metal_driver_sifive_gpio0_interrupt_lines+0x1c4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:520
		return 24;
20016ace:	47e1                	li	a5,24
20016ad0:	aa51                	j	20016c64 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:522
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 17))) {
20016ad2:	fec42703          	lw	a4,-20(s0)
20016ad6:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20016ada:	00f71963          	bne	a4,a5,20016aec <__metal_driver_sifive_gpio0_interrupt_lines+0x1de>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:522 (discriminator 1)
20016ade:	fe842703          	lw	a4,-24(s0)
20016ae2:	47c5                	li	a5,17
20016ae4:	00f71463          	bne	a4,a5,20016aec <__metal_driver_sifive_gpio0_interrupt_lines+0x1de>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:523
		return 25;
20016ae8:	47e5                	li	a5,25
20016aea:	aaad                	j	20016c64 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:525
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 18))) {
20016aec:	fec42703          	lw	a4,-20(s0)
20016af0:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20016af4:	00f71963          	bne	a4,a5,20016b06 <__metal_driver_sifive_gpio0_interrupt_lines+0x1f8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:525 (discriminator 1)
20016af8:	fe842703          	lw	a4,-24(s0)
20016afc:	47c9                	li	a5,18
20016afe:	00f71463          	bne	a4,a5,20016b06 <__metal_driver_sifive_gpio0_interrupt_lines+0x1f8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:526
		return 26;
20016b02:	47e9                	li	a5,26
20016b04:	a285                	j	20016c64 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:528
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 19))) {
20016b06:	fec42703          	lw	a4,-20(s0)
20016b0a:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20016b0e:	00f71963          	bne	a4,a5,20016b20 <__metal_driver_sifive_gpio0_interrupt_lines+0x212>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:528 (discriminator 1)
20016b12:	fe842703          	lw	a4,-24(s0)
20016b16:	47cd                	li	a5,19
20016b18:	00f71463          	bne	a4,a5,20016b20 <__metal_driver_sifive_gpio0_interrupt_lines+0x212>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:529
		return 27;
20016b1c:	47ed                	li	a5,27
20016b1e:	a299                	j	20016c64 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:531
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 20))) {
20016b20:	fec42703          	lw	a4,-20(s0)
20016b24:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20016b28:	00f71963          	bne	a4,a5,20016b3a <__metal_driver_sifive_gpio0_interrupt_lines+0x22c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:531 (discriminator 1)
20016b2c:	fe842703          	lw	a4,-24(s0)
20016b30:	47d1                	li	a5,20
20016b32:	00f71463          	bne	a4,a5,20016b3a <__metal_driver_sifive_gpio0_interrupt_lines+0x22c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:532
		return 28;
20016b36:	47f1                	li	a5,28
20016b38:	a235                	j	20016c64 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:534
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 21))) {
20016b3a:	fec42703          	lw	a4,-20(s0)
20016b3e:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20016b42:	00f71963          	bne	a4,a5,20016b54 <__metal_driver_sifive_gpio0_interrupt_lines+0x246>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:534 (discriminator 1)
20016b46:	fe842703          	lw	a4,-24(s0)
20016b4a:	47d5                	li	a5,21
20016b4c:	00f71463          	bne	a4,a5,20016b54 <__metal_driver_sifive_gpio0_interrupt_lines+0x246>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:535
		return 29;
20016b50:	47f5                	li	a5,29
20016b52:	aa09                	j	20016c64 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:537
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 22))) {
20016b54:	fec42703          	lw	a4,-20(s0)
20016b58:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20016b5c:	00f71963          	bne	a4,a5,20016b6e <__metal_driver_sifive_gpio0_interrupt_lines+0x260>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:537 (discriminator 1)
20016b60:	fe842703          	lw	a4,-24(s0)
20016b64:	47d9                	li	a5,22
20016b66:	00f71463          	bne	a4,a5,20016b6e <__metal_driver_sifive_gpio0_interrupt_lines+0x260>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:538
		return 30;
20016b6a:	47f9                	li	a5,30
20016b6c:	a8e5                	j	20016c64 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:540
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 23))) {
20016b6e:	fec42703          	lw	a4,-20(s0)
20016b72:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20016b76:	00f71963          	bne	a4,a5,20016b88 <__metal_driver_sifive_gpio0_interrupt_lines+0x27a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:540 (discriminator 1)
20016b7a:	fe842703          	lw	a4,-24(s0)
20016b7e:	47dd                	li	a5,23
20016b80:	00f71463          	bne	a4,a5,20016b88 <__metal_driver_sifive_gpio0_interrupt_lines+0x27a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:541
		return 31;
20016b84:	47fd                	li	a5,31
20016b86:	a8f9                	j	20016c64 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:543
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 24))) {
20016b88:	fec42703          	lw	a4,-20(s0)
20016b8c:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20016b90:	00f71a63          	bne	a4,a5,20016ba4 <__metal_driver_sifive_gpio0_interrupt_lines+0x296>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:543 (discriminator 1)
20016b94:	fe842703          	lw	a4,-24(s0)
20016b98:	47e1                	li	a5,24
20016b9a:	00f71563          	bne	a4,a5,20016ba4 <__metal_driver_sifive_gpio0_interrupt_lines+0x296>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:544
		return 32;
20016b9e:	02000793          	li	a5,32
20016ba2:	a0c9                	j	20016c64 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:546
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 25))) {
20016ba4:	fec42703          	lw	a4,-20(s0)
20016ba8:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20016bac:	00f71a63          	bne	a4,a5,20016bc0 <__metal_driver_sifive_gpio0_interrupt_lines+0x2b2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:546 (discriminator 1)
20016bb0:	fe842703          	lw	a4,-24(s0)
20016bb4:	47e5                	li	a5,25
20016bb6:	00f71563          	bne	a4,a5,20016bc0 <__metal_driver_sifive_gpio0_interrupt_lines+0x2b2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:547
		return 33;
20016bba:	02100793          	li	a5,33
20016bbe:	a05d                	j	20016c64 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:549
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 26))) {
20016bc0:	fec42703          	lw	a4,-20(s0)
20016bc4:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20016bc8:	00f71a63          	bne	a4,a5,20016bdc <__metal_driver_sifive_gpio0_interrupt_lines+0x2ce>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:549 (discriminator 1)
20016bcc:	fe842703          	lw	a4,-24(s0)
20016bd0:	47e9                	li	a5,26
20016bd2:	00f71563          	bne	a4,a5,20016bdc <__metal_driver_sifive_gpio0_interrupt_lines+0x2ce>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:550
		return 34;
20016bd6:	02200793          	li	a5,34
20016bda:	a069                	j	20016c64 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:552
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 27))) {
20016bdc:	fec42703          	lw	a4,-20(s0)
20016be0:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20016be4:	00f71a63          	bne	a4,a5,20016bf8 <__metal_driver_sifive_gpio0_interrupt_lines+0x2ea>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:552 (discriminator 1)
20016be8:	fe842703          	lw	a4,-24(s0)
20016bec:	47ed                	li	a5,27
20016bee:	00f71563          	bne	a4,a5,20016bf8 <__metal_driver_sifive_gpio0_interrupt_lines+0x2ea>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:553
		return 35;
20016bf2:	02300793          	li	a5,35
20016bf6:	a0bd                	j	20016c64 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:555
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 28))) {
20016bf8:	fec42703          	lw	a4,-20(s0)
20016bfc:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20016c00:	00f71a63          	bne	a4,a5,20016c14 <__metal_driver_sifive_gpio0_interrupt_lines+0x306>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:555 (discriminator 1)
20016c04:	fe842703          	lw	a4,-24(s0)
20016c08:	47f1                	li	a5,28
20016c0a:	00f71563          	bne	a4,a5,20016c14 <__metal_driver_sifive_gpio0_interrupt_lines+0x306>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:556
		return 36;
20016c0e:	02400793          	li	a5,36
20016c12:	a889                	j	20016c64 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:558
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 29))) {
20016c14:	fec42703          	lw	a4,-20(s0)
20016c18:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20016c1c:	00f71963          	bne	a4,a5,20016c2e <__metal_driver_sifive_gpio0_interrupt_lines+0x320>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:558 (discriminator 1)
20016c20:	fe842703          	lw	a4,-24(s0)
20016c24:	47f5                	li	a5,29
20016c26:	00f71463          	bne	a4,a5,20016c2e <__metal_driver_sifive_gpio0_interrupt_lines+0x320>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:559
		return 27;
20016c2a:	47ed                	li	a5,27
20016c2c:	a825                	j	20016c64 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:561
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 30))) {
20016c2e:	fec42703          	lw	a4,-20(s0)
20016c32:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20016c36:	00f71963          	bne	a4,a5,20016c48 <__metal_driver_sifive_gpio0_interrupt_lines+0x33a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:561 (discriminator 1)
20016c3a:	fe842703          	lw	a4,-24(s0)
20016c3e:	47f9                	li	a5,30
20016c40:	00f71463          	bne	a4,a5,20016c48 <__metal_driver_sifive_gpio0_interrupt_lines+0x33a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:562
		return 28;
20016c44:	47f1                	li	a5,28
20016c46:	a839                	j	20016c64 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:564
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 31))) {
20016c48:	fec42703          	lw	a4,-20(s0)
20016c4c:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20016c50:	00f71963          	bne	a4,a5,20016c62 <__metal_driver_sifive_gpio0_interrupt_lines+0x354>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:564 (discriminator 1)
20016c54:	fe842703          	lw	a4,-24(s0)
20016c58:	47fd                	li	a5,31
20016c5a:	00f71463          	bne	a4,a5,20016c62 <__metal_driver_sifive_gpio0_interrupt_lines+0x354>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:565
		return 29;
20016c5e:	47f5                	li	a5,29
20016c60:	a011                	j	20016c64 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:568
		return 0;
20016c62:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:570
}
20016c64:	853e                	mv	a0,a5
20016c66:	4472                	lw	s0,28(sp)
20016c68:	6105                	addi	sp,sp,32
20016c6a:	8082                	ret

20016c6c <__metal_driver_sifive_gpio0_enable_input>:
__metal_driver_sifive_gpio0_enable_input():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:13
#include <metal/drivers/sifive_gpio0.h>
#include <metal/io.h>
#include <metal/machine.h>

int __metal_driver_sifive_gpio0_enable_input(struct metal_gpio *ggpio,
                                             long source) {
20016c6c:	7179                	addi	sp,sp,-48
20016c6e:	d606                	sw	ra,44(sp)
20016c70:	d422                	sw	s0,40(sp)
20016c72:	1800                	addi	s0,sp,48
20016c74:	fca42e23          	sw	a0,-36(s0)
20016c78:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:14
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20016c7c:	fdc42503          	lw	a0,-36(s0)
20016c80:	c3fff0ef          	jal	ra,200168be <__metal_driver_sifive_gpio0_base>
20016c84:	87aa                	mv	a5,a0
20016c86:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:17

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) |= source;
20016c8a:	fec42783          	lw	a5,-20(s0)
20016c8e:	0791                	addi	a5,a5,4
20016c90:	4398                	lw	a4,0(a5)
20016c92:	fd842783          	lw	a5,-40(s0)
20016c96:	fec42683          	lw	a3,-20(s0)
20016c9a:	0691                	addi	a3,a3,4
20016c9c:	8fd9                	or	a5,a5,a4
20016c9e:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:19

    return 0;
20016ca0:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:20
}
20016ca2:	853e                	mv	a0,a5
20016ca4:	50b2                	lw	ra,44(sp)
20016ca6:	5422                	lw	s0,40(sp)
20016ca8:	6145                	addi	sp,sp,48
20016caa:	8082                	ret

20016cac <__metal_driver_sifive_gpio0_disable_input>:
__metal_driver_sifive_gpio0_disable_input():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:23

int __metal_driver_sifive_gpio0_disable_input(struct metal_gpio *ggpio,
                                              long source) {
20016cac:	7179                	addi	sp,sp,-48
20016cae:	d606                	sw	ra,44(sp)
20016cb0:	d422                	sw	s0,40(sp)
20016cb2:	1800                	addi	s0,sp,48
20016cb4:	fca42e23          	sw	a0,-36(s0)
20016cb8:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:24
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20016cbc:	fdc42503          	lw	a0,-36(s0)
20016cc0:	bffff0ef          	jal	ra,200168be <__metal_driver_sifive_gpio0_base>
20016cc4:	87aa                	mv	a5,a0
20016cc6:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:27

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) &= ~source;
20016cca:	fec42783          	lw	a5,-20(s0)
20016cce:	0791                	addi	a5,a5,4
20016cd0:	439c                	lw	a5,0(a5)
20016cd2:	fd842703          	lw	a4,-40(s0)
20016cd6:	fff74713          	not	a4,a4
20016cda:	86ba                	mv	a3,a4
20016cdc:	fec42703          	lw	a4,-20(s0)
20016ce0:	0711                	addi	a4,a4,4
20016ce2:	8ff5                	and	a5,a5,a3
20016ce4:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:29

    return 0;
20016ce6:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:30
}
20016ce8:	853e                	mv	a0,a5
20016cea:	50b2                	lw	ra,44(sp)
20016cec:	5422                	lw	s0,40(sp)
20016cee:	6145                	addi	sp,sp,48
20016cf0:	8082                	ret

20016cf2 <__metal_driver_sifive_gpio0_input>:
__metal_driver_sifive_gpio0_input():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:32

long __metal_driver_sifive_gpio0_input(struct metal_gpio *ggpio) {
20016cf2:	7179                	addi	sp,sp,-48
20016cf4:	d606                	sw	ra,44(sp)
20016cf6:	d422                	sw	s0,40(sp)
20016cf8:	1800                	addi	s0,sp,48
20016cfa:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:33
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20016cfe:	fdc42503          	lw	a0,-36(s0)
20016d02:	bbdff0ef          	jal	ra,200168be <__metal_driver_sifive_gpio0_base>
20016d06:	87aa                	mv	a5,a0
20016d08:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:35

    return __METAL_ACCESS_ONCE(
20016d0c:	fec42783          	lw	a5,-20(s0)
20016d10:	439c                	lw	a5,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:37
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_VALUE));
}
20016d12:	853e                	mv	a0,a5
20016d14:	50b2                	lw	ra,44(sp)
20016d16:	5422                	lw	s0,40(sp)
20016d18:	6145                	addi	sp,sp,48
20016d1a:	8082                	ret

20016d1c <__metal_driver_sifive_gpio0_output>:
__metal_driver_sifive_gpio0_output():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:39

long __metal_driver_sifive_gpio0_output(struct metal_gpio *ggpio) {
20016d1c:	7179                	addi	sp,sp,-48
20016d1e:	d606                	sw	ra,44(sp)
20016d20:	d422                	sw	s0,40(sp)
20016d22:	1800                	addi	s0,sp,48
20016d24:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:40
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20016d28:	fdc42503          	lw	a0,-36(s0)
20016d2c:	b93ff0ef          	jal	ra,200168be <__metal_driver_sifive_gpio0_base>
20016d30:	87aa                	mv	a5,a0
20016d32:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:42

    return __METAL_ACCESS_ONCE(
20016d36:	fec42783          	lw	a5,-20(s0)
20016d3a:	07b1                	addi	a5,a5,12
20016d3c:	439c                	lw	a5,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:44
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT));
}
20016d3e:	853e                	mv	a0,a5
20016d40:	50b2                	lw	ra,44(sp)
20016d42:	5422                	lw	s0,40(sp)
20016d44:	6145                	addi	sp,sp,48
20016d46:	8082                	ret

20016d48 <__metal_driver_sifive_gpio0_disable_output>:
__metal_driver_sifive_gpio0_disable_output():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:47

int __metal_driver_sifive_gpio0_disable_output(struct metal_gpio *ggpio,
                                               long source) {
20016d48:	7179                	addi	sp,sp,-48
20016d4a:	d606                	sw	ra,44(sp)
20016d4c:	d422                	sw	s0,40(sp)
20016d4e:	1800                	addi	s0,sp,48
20016d50:	fca42e23          	sw	a0,-36(s0)
20016d54:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:48
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20016d58:	fdc42503          	lw	a0,-36(s0)
20016d5c:	b63ff0ef          	jal	ra,200168be <__metal_driver_sifive_gpio0_base>
20016d60:	87aa                	mv	a5,a0
20016d62:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:51

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) &= ~source;
20016d66:	fec42783          	lw	a5,-20(s0)
20016d6a:	07a1                	addi	a5,a5,8
20016d6c:	439c                	lw	a5,0(a5)
20016d6e:	fd842703          	lw	a4,-40(s0)
20016d72:	fff74713          	not	a4,a4
20016d76:	86ba                	mv	a3,a4
20016d78:	fec42703          	lw	a4,-20(s0)
20016d7c:	0721                	addi	a4,a4,8
20016d7e:	8ff5                	and	a5,a5,a3
20016d80:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:53

    return 0;
20016d82:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:54
}
20016d84:	853e                	mv	a0,a5
20016d86:	50b2                	lw	ra,44(sp)
20016d88:	5422                	lw	s0,40(sp)
20016d8a:	6145                	addi	sp,sp,48
20016d8c:	8082                	ret

20016d8e <__metal_driver_sifive_gpio0_enable_output>:
__metal_driver_sifive_gpio0_enable_output():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:57

int __metal_driver_sifive_gpio0_enable_output(struct metal_gpio *ggpio,
                                              long source) {
20016d8e:	7179                	addi	sp,sp,-48
20016d90:	d606                	sw	ra,44(sp)
20016d92:	d422                	sw	s0,40(sp)
20016d94:	1800                	addi	s0,sp,48
20016d96:	fca42e23          	sw	a0,-36(s0)
20016d9a:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:58
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20016d9e:	fdc42503          	lw	a0,-36(s0)
20016da2:	b1dff0ef          	jal	ra,200168be <__metal_driver_sifive_gpio0_base>
20016da6:	87aa                	mv	a5,a0
20016da8:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:61

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) |= source;
20016dac:	fec42783          	lw	a5,-20(s0)
20016db0:	07a1                	addi	a5,a5,8
20016db2:	4398                	lw	a4,0(a5)
20016db4:	fd842783          	lw	a5,-40(s0)
20016db8:	fec42683          	lw	a3,-20(s0)
20016dbc:	06a1                	addi	a3,a3,8
20016dbe:	8fd9                	or	a5,a5,a4
20016dc0:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:63

    return 0;
20016dc2:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:64
}
20016dc4:	853e                	mv	a0,a5
20016dc6:	50b2                	lw	ra,44(sp)
20016dc8:	5422                	lw	s0,40(sp)
20016dca:	6145                	addi	sp,sp,48
20016dcc:	8082                	ret

20016dce <__metal_driver_sifive_gpio0_output_set>:
__metal_driver_sifive_gpio0_output_set():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:67

int __metal_driver_sifive_gpio0_output_set(struct metal_gpio *ggpio,
                                           long value) {
20016dce:	7179                	addi	sp,sp,-48
20016dd0:	d606                	sw	ra,44(sp)
20016dd2:	d422                	sw	s0,40(sp)
20016dd4:	1800                	addi	s0,sp,48
20016dd6:	fca42e23          	sw	a0,-36(s0)
20016dda:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:68
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20016dde:	fdc42503          	lw	a0,-36(s0)
20016de2:	addff0ef          	jal	ra,200168be <__metal_driver_sifive_gpio0_base>
20016de6:	87aa                	mv	a5,a0
20016de8:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:70

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) |=
20016dec:	fec42783          	lw	a5,-20(s0)
20016df0:	07b1                	addi	a5,a5,12
20016df2:	4398                	lw	a4,0(a5)
20016df4:	fd842783          	lw	a5,-40(s0)
20016df8:	fec42683          	lw	a3,-20(s0)
20016dfc:	06b1                	addi	a3,a3,12
20016dfe:	8fd9                	or	a5,a5,a4
20016e00:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:73
        value;

    return 0;
20016e02:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:74
}
20016e04:	853e                	mv	a0,a5
20016e06:	50b2                	lw	ra,44(sp)
20016e08:	5422                	lw	s0,40(sp)
20016e0a:	6145                	addi	sp,sp,48
20016e0c:	8082                	ret

20016e0e <__metal_driver_sifive_gpio0_output_clear>:
__metal_driver_sifive_gpio0_output_clear():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:77

int __metal_driver_sifive_gpio0_output_clear(struct metal_gpio *ggpio,
                                             long value) {
20016e0e:	7179                	addi	sp,sp,-48
20016e10:	d606                	sw	ra,44(sp)
20016e12:	d422                	sw	s0,40(sp)
20016e14:	1800                	addi	s0,sp,48
20016e16:	fca42e23          	sw	a0,-36(s0)
20016e1a:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:78
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20016e1e:	fdc42503          	lw	a0,-36(s0)
20016e22:	a9dff0ef          	jal	ra,200168be <__metal_driver_sifive_gpio0_base>
20016e26:	87aa                	mv	a5,a0
20016e28:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:80

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
20016e2c:	fec42783          	lw	a5,-20(s0)
20016e30:	07b1                	addi	a5,a5,12
20016e32:	439c                	lw	a5,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:81
        ~value;
20016e34:	fd842703          	lw	a4,-40(s0)
20016e38:	fff74713          	not	a4,a4
20016e3c:	86ba                	mv	a3,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:80
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
20016e3e:	fec42703          	lw	a4,-20(s0)
20016e42:	0731                	addi	a4,a4,12
20016e44:	8ff5                	and	a5,a5,a3
20016e46:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:83

    return 0;
20016e48:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:84
}
20016e4a:	853e                	mv	a0,a5
20016e4c:	50b2                	lw	ra,44(sp)
20016e4e:	5422                	lw	s0,40(sp)
20016e50:	6145                	addi	sp,sp,48
20016e52:	8082                	ret

20016e54 <__metal_driver_sifive_gpio0_output_toggle>:
__metal_driver_sifive_gpio0_output_toggle():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:87

int __metal_driver_sifive_gpio0_output_toggle(struct metal_gpio *ggpio,
                                              long value) {
20016e54:	7179                	addi	sp,sp,-48
20016e56:	d606                	sw	ra,44(sp)
20016e58:	d422                	sw	s0,40(sp)
20016e5a:	1800                	addi	s0,sp,48
20016e5c:	fca42e23          	sw	a0,-36(s0)
20016e60:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:88
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20016e64:	fdc42503          	lw	a0,-36(s0)
20016e68:	a57ff0ef          	jal	ra,200168be <__metal_driver_sifive_gpio0_base>
20016e6c:	87aa                	mv	a5,a0
20016e6e:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:91

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
        __METAL_ACCESS_ONCE(
20016e72:	fec42783          	lw	a5,-20(s0)
20016e76:	07b1                	addi	a5,a5,12
20016e78:	4398                	lw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
20016e7a:	fd842783          	lw	a5,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
20016e7e:	fec42683          	lw	a3,-20(s0)
20016e82:	06b1                	addi	a3,a3,12
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
20016e84:	8fb9                	xor	a5,a5,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
20016e86:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:95
        value;

    return 0;
20016e88:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:96
}
20016e8a:	853e                	mv	a0,a5
20016e8c:	50b2                	lw	ra,44(sp)
20016e8e:	5422                	lw	s0,40(sp)
20016e90:	6145                	addi	sp,sp,48
20016e92:	8082                	ret

20016e94 <__metal_driver_sifive_gpio0_enable_io>:
__metal_driver_sifive_gpio0_enable_io():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:99

int __metal_driver_sifive_gpio0_enable_io(struct metal_gpio *ggpio, long source,
                                          long dest) {
20016e94:	7179                	addi	sp,sp,-48
20016e96:	d606                	sw	ra,44(sp)
20016e98:	d422                	sw	s0,40(sp)
20016e9a:	1800                	addi	s0,sp,48
20016e9c:	fca42e23          	sw	a0,-36(s0)
20016ea0:	fcb42c23          	sw	a1,-40(s0)
20016ea4:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:100
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20016ea8:	fdc42503          	lw	a0,-36(s0)
20016eac:	a13ff0ef          	jal	ra,200168be <__metal_driver_sifive_gpio0_base>
20016eb0:	87aa                	mv	a5,a0
20016eb2:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:103

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_SEL)) |= source;
20016eb6:	fec42783          	lw	a5,-20(s0)
20016eba:	03c78793          	addi	a5,a5,60
20016ebe:	4398                	lw	a4,0(a5)
20016ec0:	fd842783          	lw	a5,-40(s0)
20016ec4:	fec42683          	lw	a3,-20(s0)
20016ec8:	03c68693          	addi	a3,a3,60 # 1003c <__heap_size+0xf83c>
20016ecc:	8fd9                	or	a5,a5,a4
20016ece:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:104
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) |=
20016ed0:	fec42783          	lw	a5,-20(s0)
20016ed4:	03878793          	addi	a5,a5,56
20016ed8:	4398                	lw	a4,0(a5)
20016eda:	fd442783          	lw	a5,-44(s0)
20016ede:	fec42683          	lw	a3,-20(s0)
20016ee2:	03868693          	addi	a3,a3,56
20016ee6:	8fd9                	or	a5,a5,a4
20016ee8:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:107
        dest;

    return 0;
20016eea:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:108
}
20016eec:	853e                	mv	a0,a5
20016eee:	50b2                	lw	ra,44(sp)
20016ef0:	5422                	lw	s0,40(sp)
20016ef2:	6145                	addi	sp,sp,48
20016ef4:	8082                	ret

20016ef6 <__metal_driver_sifive_gpio0_disable_io>:
__metal_driver_sifive_gpio0_disable_io():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:111

int __metal_driver_sifive_gpio0_disable_io(struct metal_gpio *ggpio,
                                           long source) {
20016ef6:	7179                	addi	sp,sp,-48
20016ef8:	d606                	sw	ra,44(sp)
20016efa:	d422                	sw	s0,40(sp)
20016efc:	1800                	addi	s0,sp,48
20016efe:	fca42e23          	sw	a0,-36(s0)
20016f02:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:112
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20016f06:	fdc42503          	lw	a0,-36(s0)
20016f0a:	9b5ff0ef          	jal	ra,200168be <__metal_driver_sifive_gpio0_base>
20016f0e:	87aa                	mv	a5,a0
20016f10:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:114

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
20016f14:	fec42783          	lw	a5,-20(s0)
20016f18:	03878793          	addi	a5,a5,56
20016f1c:	439c                	lw	a5,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:115
        ~source;
20016f1e:	fd842703          	lw	a4,-40(s0)
20016f22:	fff74713          	not	a4,a4
20016f26:	86ba                	mv	a3,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:114
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
20016f28:	fec42703          	lw	a4,-20(s0)
20016f2c:	03870713          	addi	a4,a4,56
20016f30:	8ff5                	and	a5,a5,a3
20016f32:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:117

    return 0;
20016f34:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:118
}
20016f36:	853e                	mv	a0,a5
20016f38:	50b2                	lw	ra,44(sp)
20016f3a:	5422                	lw	s0,40(sp)
20016f3c:	6145                	addi	sp,sp,48
20016f3e:	8082                	ret

20016f40 <__metal_driver_sifive_gpio0_config_int>:
__metal_driver_sifive_gpio0_config_int():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:121

int __metal_driver_sifive_gpio0_config_int(struct metal_gpio *ggpio,
                                           long source, int intr_type) {
20016f40:	7179                	addi	sp,sp,-48
20016f42:	d606                	sw	ra,44(sp)
20016f44:	d422                	sw	s0,40(sp)
20016f46:	1800                	addi	s0,sp,48
20016f48:	fca42e23          	sw	a0,-36(s0)
20016f4c:	fcb42c23          	sw	a1,-40(s0)
20016f50:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:122
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20016f54:	fdc42503          	lw	a0,-36(s0)
20016f58:	967ff0ef          	jal	ra,200168be <__metal_driver_sifive_gpio0_base>
20016f5c:	87aa                	mv	a5,a0
20016f5e:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:124

    switch (intr_type) {
20016f62:	fd442703          	lw	a4,-44(s0)
20016f66:	479d                	li	a5,7
20016f68:	1ce7e963          	bltu	a5,a4,2001713a <__metal_driver_sifive_gpio0_config_int+0x1fa>
20016f6c:	fd442783          	lw	a5,-44(s0)
20016f70:	00279713          	slli	a4,a5,0x2
20016f74:	200117b7          	lui	a5,0x20011
20016f78:	19c78793          	addi	a5,a5,412 # 2001119c <__metal_driver_vtable_sifive_fe310_g000_pll+0xc>
20016f7c:	97ba                	add	a5,a5,a4
20016f7e:	439c                	lw	a5,0(a5)
20016f80:	8782                	jr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:127
    case METAL_GPIO_INT_DISABLE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) &= ~source;
20016f82:	fec42783          	lw	a5,-20(s0)
20016f86:	07e1                	addi	a5,a5,24
20016f88:	439c                	lw	a5,0(a5)
20016f8a:	fd842703          	lw	a4,-40(s0)
20016f8e:	fff74713          	not	a4,a4
20016f92:	86ba                	mv	a3,a4
20016f94:	fec42703          	lw	a4,-20(s0)
20016f98:	0761                	addi	a4,a4,24
20016f9a:	8ff5                	and	a5,a5,a3
20016f9c:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:129
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) &= ~source;
20016f9e:	fec42783          	lw	a5,-20(s0)
20016fa2:	02078793          	addi	a5,a5,32
20016fa6:	439c                	lw	a5,0(a5)
20016fa8:	fd842703          	lw	a4,-40(s0)
20016fac:	fff74713          	not	a4,a4
20016fb0:	86ba                	mv	a3,a4
20016fb2:	fec42703          	lw	a4,-20(s0)
20016fb6:	02070713          	addi	a4,a4,32
20016fba:	8ff5                	and	a5,a5,a3
20016fbc:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:131
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) &= ~source;
20016fbe:	fec42783          	lw	a5,-20(s0)
20016fc2:	02878793          	addi	a5,a5,40
20016fc6:	439c                	lw	a5,0(a5)
20016fc8:	fd842703          	lw	a4,-40(s0)
20016fcc:	fff74713          	not	a4,a4
20016fd0:	86ba                	mv	a3,a4
20016fd2:	fec42703          	lw	a4,-20(s0)
20016fd6:	02870713          	addi	a4,a4,40
20016fda:	8ff5                	and	a5,a5,a3
20016fdc:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:133
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) &= ~source;
20016fde:	fec42783          	lw	a5,-20(s0)
20016fe2:	03078793          	addi	a5,a5,48
20016fe6:	439c                	lw	a5,0(a5)
20016fe8:	fd842703          	lw	a4,-40(s0)
20016fec:	fff74713          	not	a4,a4
20016ff0:	86ba                	mv	a3,a4
20016ff2:	fec42703          	lw	a4,-20(s0)
20016ff6:	03070713          	addi	a4,a4,48
20016ffa:	8ff5                	and	a5,a5,a3
20016ffc:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:134
        break;
20016ffe:	aa35                	j	2001713a <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:137
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20017000:	fec42783          	lw	a5,-20(s0)
20017004:	07e1                	addi	a5,a5,24
20017006:	4398                	lw	a4,0(a5)
20017008:	fd842783          	lw	a5,-40(s0)
2001700c:	fec42683          	lw	a3,-20(s0)
20017010:	06e1                	addi	a3,a3,24
20017012:	8fd9                	or	a5,a5,a4
20017014:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:138
        break;
20017016:	a215                	j	2001713a <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:141
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20017018:	fec42783          	lw	a5,-20(s0)
2001701c:	02078793          	addi	a5,a5,32
20017020:	4398                	lw	a4,0(a5)
20017022:	fd842783          	lw	a5,-40(s0)
20017026:	fec42683          	lw	a3,-20(s0)
2001702a:	02068693          	addi	a3,a3,32
2001702e:	8fd9                	or	a5,a5,a4
20017030:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:142
        break;
20017032:	a221                	j	2001713a <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:145
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20017034:	fec42783          	lw	a5,-20(s0)
20017038:	07e1                	addi	a5,a5,24
2001703a:	4398                	lw	a4,0(a5)
2001703c:	fd842783          	lw	a5,-40(s0)
20017040:	fec42683          	lw	a3,-20(s0)
20017044:	06e1                	addi	a3,a3,24
20017046:	8fd9                	or	a5,a5,a4
20017048:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:147
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
2001704a:	fec42783          	lw	a5,-20(s0)
2001704e:	02078793          	addi	a5,a5,32
20017052:	4398                	lw	a4,0(a5)
20017054:	fd842783          	lw	a5,-40(s0)
20017058:	fec42683          	lw	a3,-20(s0)
2001705c:	02068693          	addi	a3,a3,32
20017060:	8fd9                	or	a5,a5,a4
20017062:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:148
        break;
20017064:	a8d9                	j	2001713a <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:151
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20017066:	fec42783          	lw	a5,-20(s0)
2001706a:	02878793          	addi	a5,a5,40
2001706e:	4398                	lw	a4,0(a5)
20017070:	fd842783          	lw	a5,-40(s0)
20017074:	fec42683          	lw	a3,-20(s0)
20017078:	02868693          	addi	a3,a3,40
2001707c:	8fd9                	or	a5,a5,a4
2001707e:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:152
        break;
20017080:	a86d                	j	2001713a <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:155
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20017082:	fec42783          	lw	a5,-20(s0)
20017086:	03078793          	addi	a5,a5,48
2001708a:	4398                	lw	a4,0(a5)
2001708c:	fd842783          	lw	a5,-40(s0)
20017090:	fec42683          	lw	a3,-20(s0)
20017094:	03068693          	addi	a3,a3,48
20017098:	8fd9                	or	a5,a5,a4
2001709a:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:156
        break;
2001709c:	a879                	j	2001713a <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:159
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
2001709e:	fec42783          	lw	a5,-20(s0)
200170a2:	02878793          	addi	a5,a5,40
200170a6:	4398                	lw	a4,0(a5)
200170a8:	fd842783          	lw	a5,-40(s0)
200170ac:	fec42683          	lw	a3,-20(s0)
200170b0:	02868693          	addi	a3,a3,40
200170b4:	8fd9                	or	a5,a5,a4
200170b6:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:161
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
200170b8:	fec42783          	lw	a5,-20(s0)
200170bc:	03078793          	addi	a5,a5,48
200170c0:	4398                	lw	a4,0(a5)
200170c2:	fd842783          	lw	a5,-40(s0)
200170c6:	fec42683          	lw	a3,-20(s0)
200170ca:	03068693          	addi	a3,a3,48
200170ce:	8fd9                	or	a5,a5,a4
200170d0:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:162
        break;
200170d2:	a0a5                	j	2001713a <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:165
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
200170d4:	fec42783          	lw	a5,-20(s0)
200170d8:	07e1                	addi	a5,a5,24
200170da:	4398                	lw	a4,0(a5)
200170dc:	fd842783          	lw	a5,-40(s0)
200170e0:	fec42683          	lw	a3,-20(s0)
200170e4:	06e1                	addi	a3,a3,24
200170e6:	8fd9                	or	a5,a5,a4
200170e8:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:167
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
200170ea:	fec42783          	lw	a5,-20(s0)
200170ee:	02078793          	addi	a5,a5,32
200170f2:	4398                	lw	a4,0(a5)
200170f4:	fd842783          	lw	a5,-40(s0)
200170f8:	fec42683          	lw	a3,-20(s0)
200170fc:	02068693          	addi	a3,a3,32
20017100:	8fd9                	or	a5,a5,a4
20017102:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:169
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20017104:	fec42783          	lw	a5,-20(s0)
20017108:	02878793          	addi	a5,a5,40
2001710c:	4398                	lw	a4,0(a5)
2001710e:	fd842783          	lw	a5,-40(s0)
20017112:	fec42683          	lw	a3,-20(s0)
20017116:	02868693          	addi	a3,a3,40
2001711a:	8fd9                	or	a5,a5,a4
2001711c:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:171
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
2001711e:	fec42783          	lw	a5,-20(s0)
20017122:	03078793          	addi	a5,a5,48
20017126:	4398                	lw	a4,0(a5)
20017128:	fd842783          	lw	a5,-40(s0)
2001712c:	fec42683          	lw	a3,-20(s0)
20017130:	03068693          	addi	a3,a3,48
20017134:	8fd9                	or	a5,a5,a4
20017136:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:172
        break;
20017138:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:174
    }
    return 0;
2001713a:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:175
}
2001713c:	853e                	mv	a0,a5
2001713e:	50b2                	lw	ra,44(sp)
20017140:	5422                	lw	s0,40(sp)
20017142:	6145                	addi	sp,sp,48
20017144:	8082                	ret

20017146 <__metal_driver_sifive_gpio0_clear_int>:
__metal_driver_sifive_gpio0_clear_int():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:178

int __metal_driver_sifive_gpio0_clear_int(struct metal_gpio *ggpio, long source,
                                          int intr_type) {
20017146:	7179                	addi	sp,sp,-48
20017148:	d606                	sw	ra,44(sp)
2001714a:	d422                	sw	s0,40(sp)
2001714c:	1800                	addi	s0,sp,48
2001714e:	fca42e23          	sw	a0,-36(s0)
20017152:	fcb42c23          	sw	a1,-40(s0)
20017156:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:179
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2001715a:	fdc42503          	lw	a0,-36(s0)
2001715e:	f60ff0ef          	jal	ra,200168be <__metal_driver_sifive_gpio0_base>
20017162:	87aa                	mv	a5,a0
20017164:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:181

    switch (intr_type) {
20017168:	fd442703          	lw	a4,-44(s0)
2001716c:	479d                	li	a5,7
2001716e:	14e7ea63          	bltu	a5,a4,200172c2 <__metal_driver_sifive_gpio0_clear_int+0x17c>
20017172:	fd442783          	lw	a5,-44(s0)
20017176:	00279713          	slli	a4,a5,0x2
2001717a:	200117b7          	lui	a5,0x20011
2001717e:	1bc78793          	addi	a5,a5,444 # 200111bc <__metal_driver_vtable_sifive_fe310_g000_pll+0x2c>
20017182:	97ba                	add	a5,a5,a4
20017184:	439c                	lw	a5,0(a5)
20017186:	8782                	jr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:184
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20017188:	fec42783          	lw	a5,-20(s0)
2001718c:	07f1                	addi	a5,a5,28
2001718e:	4398                	lw	a4,0(a5)
20017190:	fd842783          	lw	a5,-40(s0)
20017194:	fec42683          	lw	a3,-20(s0)
20017198:	06f1                	addi	a3,a3,28
2001719a:	8fd9                	or	a5,a5,a4
2001719c:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:185
        break;
2001719e:	a215                	j	200172c2 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:188
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
200171a0:	fec42783          	lw	a5,-20(s0)
200171a4:	02478793          	addi	a5,a5,36
200171a8:	4398                	lw	a4,0(a5)
200171aa:	fd842783          	lw	a5,-40(s0)
200171ae:	fec42683          	lw	a3,-20(s0)
200171b2:	02468693          	addi	a3,a3,36
200171b6:	8fd9                	or	a5,a5,a4
200171b8:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:189
        break;
200171ba:	a221                	j	200172c2 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:192
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
200171bc:	fec42783          	lw	a5,-20(s0)
200171c0:	07f1                	addi	a5,a5,28
200171c2:	4398                	lw	a4,0(a5)
200171c4:	fd842783          	lw	a5,-40(s0)
200171c8:	fec42683          	lw	a3,-20(s0)
200171cc:	06f1                	addi	a3,a3,28
200171ce:	8fd9                	or	a5,a5,a4
200171d0:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:194
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
200171d2:	fec42783          	lw	a5,-20(s0)
200171d6:	02478793          	addi	a5,a5,36
200171da:	4398                	lw	a4,0(a5)
200171dc:	fd842783          	lw	a5,-40(s0)
200171e0:	fec42683          	lw	a3,-20(s0)
200171e4:	02468693          	addi	a3,a3,36
200171e8:	8fd9                	or	a5,a5,a4
200171ea:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:195
        break;
200171ec:	a8d9                	j	200172c2 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:198
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
200171ee:	fec42783          	lw	a5,-20(s0)
200171f2:	02c78793          	addi	a5,a5,44
200171f6:	4398                	lw	a4,0(a5)
200171f8:	fd842783          	lw	a5,-40(s0)
200171fc:	fec42683          	lw	a3,-20(s0)
20017200:	02c68693          	addi	a3,a3,44
20017204:	8fd9                	or	a5,a5,a4
20017206:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:199
        break;
20017208:	a86d                	j	200172c2 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:202
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
2001720a:	fec42783          	lw	a5,-20(s0)
2001720e:	03478793          	addi	a5,a5,52
20017212:	4398                	lw	a4,0(a5)
20017214:	fd842783          	lw	a5,-40(s0)
20017218:	fec42683          	lw	a3,-20(s0)
2001721c:	03468693          	addi	a3,a3,52
20017220:	8fd9                	or	a5,a5,a4
20017222:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:203
        break;
20017224:	a879                	j	200172c2 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:206
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20017226:	fec42783          	lw	a5,-20(s0)
2001722a:	02c78793          	addi	a5,a5,44
2001722e:	4398                	lw	a4,0(a5)
20017230:	fd842783          	lw	a5,-40(s0)
20017234:	fec42683          	lw	a3,-20(s0)
20017238:	02c68693          	addi	a3,a3,44
2001723c:	8fd9                	or	a5,a5,a4
2001723e:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:208
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20017240:	fec42783          	lw	a5,-20(s0)
20017244:	03478793          	addi	a5,a5,52
20017248:	4398                	lw	a4,0(a5)
2001724a:	fd842783          	lw	a5,-40(s0)
2001724e:	fec42683          	lw	a3,-20(s0)
20017252:	03468693          	addi	a3,a3,52
20017256:	8fd9                	or	a5,a5,a4
20017258:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:209
        break;
2001725a:	a0a5                	j	200172c2 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:212
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
2001725c:	fec42783          	lw	a5,-20(s0)
20017260:	07f1                	addi	a5,a5,28
20017262:	4398                	lw	a4,0(a5)
20017264:	fd842783          	lw	a5,-40(s0)
20017268:	fec42683          	lw	a3,-20(s0)
2001726c:	06f1                	addi	a3,a3,28
2001726e:	8fd9                	or	a5,a5,a4
20017270:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:214
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20017272:	fec42783          	lw	a5,-20(s0)
20017276:	02478793          	addi	a5,a5,36
2001727a:	4398                	lw	a4,0(a5)
2001727c:	fd842783          	lw	a5,-40(s0)
20017280:	fec42683          	lw	a3,-20(s0)
20017284:	02468693          	addi	a3,a3,36
20017288:	8fd9                	or	a5,a5,a4
2001728a:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:216
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
2001728c:	fec42783          	lw	a5,-20(s0)
20017290:	02c78793          	addi	a5,a5,44
20017294:	4398                	lw	a4,0(a5)
20017296:	fd842783          	lw	a5,-40(s0)
2001729a:	fec42683          	lw	a3,-20(s0)
2001729e:	02c68693          	addi	a3,a3,44
200172a2:	8fd9                	or	a5,a5,a4
200172a4:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:218
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
200172a6:	fec42783          	lw	a5,-20(s0)
200172aa:	03478793          	addi	a5,a5,52
200172ae:	4398                	lw	a4,0(a5)
200172b0:	fd842783          	lw	a5,-40(s0)
200172b4:	fec42683          	lw	a3,-20(s0)
200172b8:	03468693          	addi	a3,a3,52
200172bc:	8fd9                	or	a5,a5,a4
200172be:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:219
        break;
200172c0:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:221
    }
    return 0;
200172c2:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:222
}
200172c4:	853e                	mv	a0,a5
200172c6:	50b2                	lw	ra,44(sp)
200172c8:	5422                	lw	s0,40(sp)
200172ca:	6145                	addi	sp,sp,48
200172cc:	8082                	ret

200172ce <__metal_driver_gpio_interrupt_controller>:
__metal_driver_gpio_interrupt_controller():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:225

struct metal_interrupt *
__metal_driver_gpio_interrupt_controller(struct metal_gpio *gpio) {
200172ce:	1101                	addi	sp,sp,-32
200172d0:	ce06                	sw	ra,28(sp)
200172d2:	cc22                	sw	s0,24(sp)
200172d4:	1000                	addi	s0,sp,32
200172d6:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:226
    return __metal_driver_sifive_gpio0_interrupt_parent(gpio);
200172da:	fec42503          	lw	a0,-20(s0)
200172de:	e06ff0ef          	jal	ra,200168e4 <__metal_driver_sifive_gpio0_interrupt_parent>
200172e2:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:227
}
200172e4:	853e                	mv	a0,a5
200172e6:	40f2                	lw	ra,28(sp)
200172e8:	4462                	lw	s0,24(sp)
200172ea:	6105                	addi	sp,sp,32
200172ec:	8082                	ret

200172ee <__metal_driver_gpio_get_interrupt_id>:
__metal_driver_gpio_get_interrupt_id():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:229

int __metal_driver_gpio_get_interrupt_id(struct metal_gpio *gpio, int pin) {
200172ee:	7179                	addi	sp,sp,-48
200172f0:	d606                	sw	ra,44(sp)
200172f2:	d422                	sw	s0,40(sp)
200172f4:	1800                	addi	s0,sp,48
200172f6:	fca42e23          	sw	a0,-36(s0)
200172fa:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:231
    int irq;
    irq = __metal_driver_sifive_gpio0_interrupt_lines(gpio, pin);
200172fe:	fd842583          	lw	a1,-40(s0)
20017302:	fdc42503          	lw	a0,-36(s0)
20017306:	e08ff0ef          	jal	ra,2001690e <__metal_driver_sifive_gpio0_interrupt_lines>
2001730a:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:232
    return irq;
2001730e:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:233
}
20017312:	853e                	mv	a0,a5
20017314:	50b2                	lw	ra,44(sp)
20017316:	5422                	lw	s0,40(sp)
20017318:	6145                	addi	sp,sp,48
2001731a:	8082                	ret

2001731c <__metal_driver_sifive_i2c0_control_base>:
__metal_driver_sifive_i2c0_control_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:633
{
2001731c:	1101                	addi	sp,sp,-32
2001731e:	ce22                	sw	s0,28(sp)
20017320:	1000                	addi	s0,sp,32
20017322:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:634
	if ((uintptr_t)i2c == (uintptr_t)&__metal_dt_i2c_10016000) {
20017326:	fec42703          	lw	a4,-20(s0)
2001732a:	800017b7          	lui	a5,0x80001
2001732e:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xfffff278>
20017332:	00f71563          	bne	a4,a5,2001733c <__metal_driver_sifive_i2c0_control_base+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:635
		return METAL_SIFIVE_I2C0_10016000_BASE_ADDRESS;
20017336:	100167b7          	lui	a5,0x10016
2001733a:	a011                	j	2001733e <__metal_driver_sifive_i2c0_control_base+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:638
		return 0;
2001733c:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:640
}
2001733e:	853e                	mv	a0,a5
20017340:	4472                	lw	s0,28(sp)
20017342:	6105                	addi	sp,sp,32
20017344:	8082                	ret

20017346 <__metal_driver_sifive_i2c0_clock>:
__metal_driver_sifive_i2c0_clock():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:653
{
20017346:	1101                	addi	sp,sp,-32
20017348:	ce22                	sw	s0,28(sp)
2001734a:	1000                	addi	s0,sp,32
2001734c:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:654
	if ((uintptr_t)i2c == (uintptr_t)&__metal_dt_i2c_10016000) {
20017350:	fec42703          	lw	a4,-20(s0)
20017354:	800017b7          	lui	a5,0x80001
20017358:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xfffff278>
2001735c:	00f71763          	bne	a4,a5,2001736a <__metal_driver_sifive_i2c0_clock+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:655
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
20017360:	800017b7          	lui	a5,0x80001
20017364:	ab478793          	addi	a5,a5,-1356 # 80000ab4 <metal_segment_heap_target_end+0xfffff2f4>
20017368:	a011                	j	2001736c <__metal_driver_sifive_i2c0_clock+0x26>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:658
		return NULL;
2001736a:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:660
}
2001736c:	853e                	mv	a0,a5
2001736e:	4472                	lw	s0,28(sp)
20017370:	6105                	addi	sp,sp,32
20017372:	8082                	ret

20017374 <__metal_driver_sifive_i2c0_pinmux>:
__metal_driver_sifive_i2c0_pinmux():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:663
{
20017374:	1101                	addi	sp,sp,-32
20017376:	ce22                	sw	s0,28(sp)
20017378:	1000                	addi	s0,sp,32
2001737a:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:664
	if ((uintptr_t)i2c == (uintptr_t)&__metal_dt_i2c_10016000) {
2001737e:	fec42703          	lw	a4,-20(s0)
20017382:	800017b7          	lui	a5,0x80001
20017386:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xfffff278>
2001738a:	00f71563          	bne	a4,a5,20017394 <__metal_driver_sifive_i2c0_pinmux+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:665
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
2001738e:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20017392:	a011                	j	20017396 <__metal_driver_sifive_i2c0_pinmux+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:668
		return NULL;
20017394:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:670
}
20017396:	853e                	mv	a0,a5
20017398:	4472                	lw	s0,28(sp)
2001739a:	6105                	addi	sp,sp,32
2001739c:	8082                	ret

2001739e <__metal_driver_sifive_i2c0_pinmux_output_selector>:
__metal_driver_sifive_i2c0_pinmux_output_selector():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:673
{
2001739e:	1101                	addi	sp,sp,-32
200173a0:	ce22                	sw	s0,28(sp)
200173a2:	1000                	addi	s0,sp,32
200173a4:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:674
	if ((uintptr_t)i2c == (uintptr_t)&__metal_dt_i2c_10016000) {
200173a8:	fec42703          	lw	a4,-20(s0)
200173ac:	800017b7          	lui	a5,0x80001
200173b0:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xfffff278>
200173b4:	00f71463          	bne	a4,a5,200173bc <__metal_driver_sifive_i2c0_pinmux_output_selector+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:675
		return 0;
200173b8:	4781                	li	a5,0
200173ba:	a011                	j	200173be <__metal_driver_sifive_i2c0_pinmux_output_selector+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:678
		return 0;
200173bc:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:680
}
200173be:	853e                	mv	a0,a5
200173c0:	4472                	lw	s0,28(sp)
200173c2:	6105                	addi	sp,sp,32
200173c4:	8082                	ret

200173c6 <__metal_driver_sifive_i2c0_pinmux_source_selector>:
__metal_driver_sifive_i2c0_pinmux_source_selector():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:683
{
200173c6:	1101                	addi	sp,sp,-32
200173c8:	ce22                	sw	s0,28(sp)
200173ca:	1000                	addi	s0,sp,32
200173cc:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:684
	if ((uintptr_t)i2c == (uintptr_t)&__metal_dt_i2c_10016000) {
200173d0:	fec42703          	lw	a4,-20(s0)
200173d4:	800017b7          	lui	a5,0x80001
200173d8:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xfffff278>
200173dc:	00f71463          	bne	a4,a5,200173e4 <__metal_driver_sifive_i2c0_pinmux_source_selector+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:685
		return 12288;
200173e0:	678d                	lui	a5,0x3
200173e2:	a011                	j	200173e6 <__metal_driver_sifive_i2c0_pinmux_source_selector+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:688
		return 0;
200173e4:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:690
}
200173e6:	853e                	mv	a0,a5
200173e8:	4472                	lw	s0,28(sp)
200173ea:	6105                	addi	sp,sp,32
200173ec:	8082                	ret

200173ee <pre_rate_change_callback>:
pre_rate_change_callback():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:77
    ((clock_rate / (baud_rate * 5)) - 1)
#define METAL_I2C_INIT_OK 1
#define METAL_I2C_RET_OK 0
#define METAL_I2C_RET_ERR -1

static void pre_rate_change_callback(void *priv) {
200173ee:	7179                	addi	sp,sp,-48
200173f0:	d606                	sw	ra,44(sp)
200173f2:	d422                	sw	s0,40(sp)
200173f4:	1800                	addi	s0,sp,48
200173f6:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:79
    unsigned long base =
        __metal_driver_sifive_i2c0_control_base((struct metal_i2c *)priv);
200173fa:	fdc42503          	lw	a0,-36(s0)
200173fe:	3f39                	jal	2001731c <__metal_driver_sifive_i2c0_control_base>
20017400:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:81
    /* Check for any pending transfers */
    while (METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) & METAL_I2C_STATUS_TIP)
20017404:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:81 (discriminator 1)
20017406:	fec42783          	lw	a5,-20(s0)
2001740a:	07c1                	addi	a5,a5,16
2001740c:	0007c783          	lbu	a5,0(a5) # 3000 <__heap_size+0x2800>
20017410:	0ff7f793          	andi	a5,a5,255
20017414:	8b89                	andi	a5,a5,2
20017416:	fbe5                	bnez	a5,20017406 <pre_rate_change_callback+0x18>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:83
        ;
}
20017418:	0001                	nop
2001741a:	50b2                	lw	ra,44(sp)
2001741c:	5422                	lw	s0,40(sp)
2001741e:	6145                	addi	sp,sp,48
20017420:	8082                	ret

20017422 <post_rate_change_callback>:
post_rate_change_callback():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:85

static void post_rate_change_callback(void *priv) {
20017422:	7179                	addi	sp,sp,-48
20017424:	d606                	sw	ra,44(sp)
20017426:	d422                	sw	s0,40(sp)
20017428:	1800                	addi	s0,sp,48
2001742a:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:86
    struct __metal_driver_sifive_i2c0 *i2c = priv;
2001742e:	fdc42783          	lw	a5,-36(s0)
20017432:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:88
    /* Set baud rate after clock rate change */
    metal_i2c_set_baud_rate(&i2c->i2c, i2c->baud_rate);
20017436:	fec42703          	lw	a4,-20(s0)
2001743a:	fec42783          	lw	a5,-20(s0)
2001743e:	479c                	lw	a5,8(a5)
20017440:	85be                	mv	a1,a5
20017442:	853a                	mv	a0,a4
20017444:	2a4010ef          	jal	ra,200186e8 <metal_i2c_set_baud_rate>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:89
}
20017448:	0001                	nop
2001744a:	50b2                	lw	ra,44(sp)
2001744c:	5422                	lw	s0,40(sp)
2001744e:	6145                	addi	sp,sp,48
20017450:	8082                	ret

20017452 <__metal_driver_sifive_i2c0_init>:
__metal_driver_sifive_i2c0_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:93

static void __metal_driver_sifive_i2c0_init(struct metal_i2c *gi2c,
                                            unsigned int baud_rate,
                                            metal_i2c_mode_t mode) {
20017452:	7179                	addi	sp,sp,-48
20017454:	d606                	sw	ra,44(sp)
20017456:	d422                	sw	s0,40(sp)
20017458:	1800                	addi	s0,sp,48
2001745a:	fca42e23          	sw	a0,-36(s0)
2001745e:	fcb42c23          	sw	a1,-40(s0)
20017462:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:95
    struct __metal_driver_sifive_gpio0 *pinmux =
        __metal_driver_sifive_i2c0_pinmux(gi2c);
20017466:	fdc42503          	lw	a0,-36(s0)
2001746a:	3729                	jal	20017374 <__metal_driver_sifive_i2c0_pinmux>
2001746c:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:96
    struct __metal_driver_sifive_i2c0 *i2c = (void *)gi2c;
20017470:	fdc42783          	lw	a5,-36(s0)
20017474:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:98

    if ((pinmux != NULL) && (gi2c != NULL)) {
20017478:	fec42783          	lw	a5,-20(s0)
2001747c:	cfa9                	beqz	a5,200174d6 <__metal_driver_sifive_i2c0_init+0x84>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:98 (discriminator 1)
2001747e:	fdc42783          	lw	a5,-36(s0)
20017482:	cbb1                	beqz	a5,200174d6 <__metal_driver_sifive_i2c0_init+0x84>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:101
        /* configure I2C I/O pins */
        long pinmux_output_selector =
            __metal_driver_sifive_i2c0_pinmux_output_selector(gi2c);
20017484:	fdc42503          	lw	a0,-36(s0)
20017488:	3f19                	jal	2001739e <__metal_driver_sifive_i2c0_pinmux_output_selector>
2001748a:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:100
        long pinmux_output_selector =
2001748c:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:103
        long pinmux_source_selector =
            __metal_driver_sifive_i2c0_pinmux_source_selector(gi2c);
20017490:	fdc42503          	lw	a0,-36(s0)
20017494:	3f0d                	jal	200173c6 <__metal_driver_sifive_i2c0_pinmux_source_selector>
20017496:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:102
        long pinmux_source_selector =
20017498:	fef42023          	sw	a5,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:104
        pinmux->gpio.vtable->enable_io((struct metal_gpio *)pinmux,
2001749c:	fec42783          	lw	a5,-20(s0)
200174a0:	439c                	lw	a5,0(a5)
200174a2:	53dc                	lw	a5,36(a5)
200174a4:	fe042603          	lw	a2,-32(s0)
200174a8:	fe442583          	lw	a1,-28(s0)
200174ac:	fec42503          	lw	a0,-20(s0)
200174b0:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:109
                                       pinmux_output_selector,
                                       pinmux_source_selector);

        /* 1: Master 0: Slave */
        if (mode == METAL_I2C_MASTER) {
200174b2:	fd442703          	lw	a4,-44(s0)
200174b6:	4785                	li	a5,1
200174b8:	00f71f63          	bne	a4,a5,200174d6 <__metal_driver_sifive_i2c0_init+0x84>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:111
            /* Set requested baud rate */
            if (metal_i2c_set_baud_rate(gi2c, baud_rate) == METAL_I2C_RET_OK) {
200174bc:	fd842783          	lw	a5,-40(s0)
200174c0:	85be                	mv	a1,a5
200174c2:	fdc42503          	lw	a0,-36(s0)
200174c6:	222010ef          	jal	ra,200186e8 <metal_i2c_set_baud_rate>
200174ca:	87aa                	mv	a5,a0
200174cc:	e789                	bnez	a5,200174d6 <__metal_driver_sifive_i2c0_init+0x84>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:112
                i2c->init_done = METAL_I2C_INIT_OK;
200174ce:	fe842783          	lw	a5,-24(s0)
200174d2:	4705                	li	a4,1
200174d4:	c3d8                	sw	a4,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:118
            }
        } else {
            /* Nothing to do. slave mode not supported */
        }
    }
}
200174d6:	0001                	nop
200174d8:	50b2                	lw	ra,44(sp)
200174da:	5422                	lw	s0,40(sp)
200174dc:	6145                	addi	sp,sp,48
200174de:	8082                	ret

200174e0 <__metal_driver_sifive_i2c0_get_baud_rate>:
__metal_driver_sifive_i2c0_get_baud_rate():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:120

static int __metal_driver_sifive_i2c0_get_baud_rate(struct metal_i2c *gi2c) {
200174e0:	7179                	addi	sp,sp,-48
200174e2:	d622                	sw	s0,44(sp)
200174e4:	1800                	addi	s0,sp,48
200174e6:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:121
    struct __metal_driver_sifive_i2c0 *i2c = (void *)gi2c;
200174ea:	fdc42783          	lw	a5,-36(s0)
200174ee:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:122
    return i2c->baud_rate;
200174f2:	fec42783          	lw	a5,-20(s0)
200174f6:	479c                	lw	a5,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:123
}
200174f8:	853e                	mv	a0,a5
200174fa:	5432                	lw	s0,44(sp)
200174fc:	6145                	addi	sp,sp,48
200174fe:	8082                	ret

20017500 <__metal_driver_sifive_i2c0_set_baud_rate>:
__metal_driver_sifive_i2c0_set_baud_rate():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:126

static int __metal_driver_sifive_i2c0_set_baud_rate(struct metal_i2c *gi2c,
                                                    unsigned int baud_rate) {
20017500:	7139                	addi	sp,sp,-64
20017502:	de06                	sw	ra,60(sp)
20017504:	dc22                	sw	s0,56(sp)
20017506:	0080                	addi	s0,sp,64
20017508:	fca42623          	sw	a0,-52(s0)
2001750c:	fcb42423          	sw	a1,-56(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:127
    struct metal_clock *clock = __metal_driver_sifive_i2c0_clock(gi2c);
20017510:	fcc42503          	lw	a0,-52(s0)
20017514:	e33ff0ef          	jal	ra,20017346 <__metal_driver_sifive_i2c0_clock>
20017518:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:128
    struct __metal_driver_sifive_i2c0 *i2c = (void *)gi2c;
2001751c:	fcc42783          	lw	a5,-52(s0)
20017520:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:129
    unsigned long base = __metal_driver_sifive_i2c0_control_base(gi2c);
20017524:	fcc42503          	lw	a0,-52(s0)
20017528:	df5ff0ef          	jal	ra,2001731c <__metal_driver_sifive_i2c0_control_base>
2001752c:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:130
    int ret = METAL_I2C_RET_ERR;
20017530:	57fd                	li	a5,-1
20017532:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:132

    if ((clock != NULL) && (gi2c != NULL)) {
20017536:	fe842783          	lw	a5,-24(s0)
2001753a:	10078763          	beqz	a5,20017648 <__metal_driver_sifive_i2c0_set_baud_rate+0x148>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:132 (discriminator 1)
2001753e:	fcc42783          	lw	a5,-52(s0)
20017542:	10078363          	beqz	a5,20017648 <__metal_driver_sifive_i2c0_set_baud_rate+0x148>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:133
        long clock_rate = clock->vtable->get_rate_hz(clock);
20017546:	fe842783          	lw	a5,-24(s0)
2001754a:	439c                	lw	a5,0(a5)
2001754c:	439c                	lw	a5,0(a5)
2001754e:	fe842503          	lw	a0,-24(s0)
20017552:	9782                	jalr	a5
20017554:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:135

        i2c->pre_rate_change_callback.callback = &pre_rate_change_callback;
20017558:	fe442783          	lw	a5,-28(s0)
2001755c:	20017737          	lui	a4,0x20017
20017560:	3ee70713          	addi	a4,a4,1006 # 200173ee <pre_rate_change_callback>
20017564:	c7d8                	sw	a4,12(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:136
        i2c->pre_rate_change_callback.priv = i2c;
20017566:	fe442783          	lw	a5,-28(s0)
2001756a:	fe442703          	lw	a4,-28(s0)
2001756e:	cb98                	sw	a4,16(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:137
        metal_clock_register_pre_rate_change_callback(
20017570:	fe442783          	lw	a5,-28(s0)
20017574:	07b1                	addi	a5,a5,12
20017576:	85be                	mv	a1,a5
20017578:	fe842503          	lw	a0,-24(s0)
2001757c:	787000ef          	jal	ra,20018502 <metal_clock_register_pre_rate_change_callback>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:140
            clock, &(i2c->pre_rate_change_callback));

        i2c->post_rate_change_callback.callback = &post_rate_change_callback;
20017580:	fe442783          	lw	a5,-28(s0)
20017584:	20017737          	lui	a4,0x20017
20017588:	42270713          	addi	a4,a4,1058 # 20017422 <post_rate_change_callback>
2001758c:	cf98                	sw	a4,24(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:141
        i2c->post_rate_change_callback.priv = i2c;
2001758e:	fe442783          	lw	a5,-28(s0)
20017592:	fe442703          	lw	a4,-28(s0)
20017596:	cfd8                	sw	a4,28(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:142
        metal_clock_register_post_rate_change_callback(
20017598:	fe442783          	lw	a5,-28(s0)
2001759c:	07e1                	addi	a5,a5,24
2001759e:	85be                	mv	a1,a5
200175a0:	fe842503          	lw	a0,-24(s0)
200175a4:	791000ef          	jal	ra,20018534 <metal_clock_register_post_rate_change_callback>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:146
            clock, &(i2c->post_rate_change_callback));

        /* Calculate prescaler value */
        long prescaler = METAL_SIFIVE_I2C_GET_PRESCALER(baud_rate);
200175a8:	fdc42683          	lw	a3,-36(s0)
200175ac:	fc842703          	lw	a4,-56(s0)
200175b0:	87ba                	mv	a5,a4
200175b2:	078a                	slli	a5,a5,0x2
200175b4:	97ba                	add	a5,a5,a4
200175b6:	02f6d7b3          	divu	a5,a3,a5
200175ba:	17fd                	addi	a5,a5,-1
200175bc:	fcf42c23          	sw	a5,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:148

        if ((prescaler > METAL_I2C_PRESCALE_MAX) || (prescaler < 0)) {
200175c0:	fd842703          	lw	a4,-40(s0)
200175c4:	67c1                	lui	a5,0x10
200175c6:	08f75163          	bge	a4,a5,20017648 <__metal_driver_sifive_i2c0_set_baud_rate+0x148>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:148 (discriminator 1)
200175ca:	fd842783          	lw	a5,-40(s0)
200175ce:	0607cd63          	bltz	a5,20017648 <__metal_driver_sifive_i2c0_set_baud_rate+0x148>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:153
            /* Out of range value, return error */
            METAL_I2C_LOG("I2C Set baud failed.\n");
        } else {
            /* Set pre-scaler value */
            METAL_I2C_REGB(METAL_SIFIVE_I2C0_CONTROL) &= ~METAL_I2C_CONTROL_EN;
200175d2:	fe042783          	lw	a5,-32(s0)
200175d6:	07a1                	addi	a5,a5,8
200175d8:	0007c783          	lbu	a5,0(a5) # 10000 <__heap_size+0xf800>
200175dc:	0ff7f793          	andi	a5,a5,255
200175e0:	fe042703          	lw	a4,-32(s0)
200175e4:	0721                	addi	a4,a4,8
200175e6:	07f7f793          	andi	a5,a5,127
200175ea:	0ff7f793          	andi	a5,a5,255
200175ee:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:154
            METAL_I2C_REGB(METAL_SIFIVE_I2C0_PRESCALE_LOW) = prescaler & 0xFF;
200175f2:	fe042783          	lw	a5,-32(s0)
200175f6:	fd842703          	lw	a4,-40(s0)
200175fa:	0ff77713          	andi	a4,a4,255
200175fe:	00e78023          	sb	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:156
            METAL_I2C_REGB(METAL_SIFIVE_I2C0_PRESCALE_HIGH) =
                (prescaler >> 8) & 0xFF;
20017602:	fd842783          	lw	a5,-40(s0)
20017606:	4087d693          	srai	a3,a5,0x8
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:155
            METAL_I2C_REGB(METAL_SIFIVE_I2C0_PRESCALE_HIGH) =
2001760a:	fe042783          	lw	a5,-32(s0)
2001760e:	0791                	addi	a5,a5,4
20017610:	873e                	mv	a4,a5
20017612:	0ff6f793          	andi	a5,a3,255
20017616:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:157
            METAL_I2C_REGB(METAL_SIFIVE_I2C0_CONTROL) |= METAL_I2C_CONTROL_EN;
2001761a:	fe042783          	lw	a5,-32(s0)
2001761e:	07a1                	addi	a5,a5,8
20017620:	0007c783          	lbu	a5,0(a5)
20017624:	0ff7f793          	andi	a5,a5,255
20017628:	fe042703          	lw	a4,-32(s0)
2001762c:	0721                	addi	a4,a4,8
2001762e:	f807e793          	ori	a5,a5,-128
20017632:	0ff7f793          	andi	a5,a5,255
20017636:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:159

            i2c->baud_rate = baud_rate;
2001763a:	fe442783          	lw	a5,-28(s0)
2001763e:	fc842703          	lw	a4,-56(s0)
20017642:	c798                	sw	a4,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:160
            ret = METAL_I2C_RET_OK;
20017644:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:166
        }
    } else {
        METAL_I2C_LOG("I2C Set baud failed.\n");
    }

    return ret;
20017648:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:167
}
2001764c:	853e                	mv	a0,a5
2001764e:	50f2                	lw	ra,60(sp)
20017650:	5462                	lw	s0,56(sp)
20017652:	6121                	addi	sp,sp,64
20017654:	8082                	ret

20017656 <__metal_driver_sifive_i2c0_write_addr>:
__metal_driver_sifive_i2c0_write_addr():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:171

static int __metal_driver_sifive_i2c0_write_addr(unsigned long base,
                                                 unsigned int addr,
                                                 unsigned char rw_flag) {
20017656:	7179                	addi	sp,sp,-48
20017658:	d606                	sw	ra,44(sp)
2001765a:	d422                	sw	s0,40(sp)
2001765c:	1800                	addi	s0,sp,48
2001765e:	fca42e23          	sw	a0,-36(s0)
20017662:	fcb42c23          	sw	a1,-40(s0)
20017666:	87b2                	mv	a5,a2
20017668:	fcf40ba3          	sb	a5,-41(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:173
    time_t timeout;
    int ret = METAL_I2C_RET_OK;
2001766c:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:175
    /* Reset timeout */
    METAL_I2C_TIMEOUT_RESET(timeout);
20017670:	1ca010ef          	jal	ra,2001883a <metal_time>
20017674:	86aa                	mv	a3,a0
20017676:	872e                	mv	a4,a1
20017678:	4585                	li	a1,1
2001767a:	4601                	li	a2,0
2001767c:	00b687b3          	add	a5,a3,a1
20017680:	853e                	mv	a0,a5
20017682:	00d53533          	sltu	a0,a0,a3
20017686:	00c70833          	add	a6,a4,a2
2001768a:	01050733          	add	a4,a0,a6
2001768e:	883a                	mv	a6,a4
20017690:	fef42023          	sw	a5,-32(s0)
20017694:	ff042223          	sw	a6,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:178

    /* Check if any transfer is in progress */
    METAL_I2C_REG_CHECK(
20017698:	a035                	j	200176c4 <__metal_driver_sifive_i2c0_write_addr+0x6e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:178 (discriminator 3)
2001769a:	1a0010ef          	jal	ra,2001883a <metal_time>
2001769e:	87aa                	mv	a5,a0
200176a0:	882e                	mv	a6,a1
200176a2:	fe442703          	lw	a4,-28(s0)
200176a6:	86c2                	mv	a3,a6
200176a8:	00d74c63          	blt	a4,a3,200176c0 <__metal_driver_sifive_i2c0_write_addr+0x6a>
200176ac:	fe442703          	lw	a4,-28(s0)
200176b0:	86c2                	mv	a3,a6
200176b2:	00d71963          	bne	a4,a3,200176c4 <__metal_driver_sifive_i2c0_write_addr+0x6e>
200176b6:	fe042703          	lw	a4,-32(s0)
200176ba:	00f76363          	bltu	a4,a5,200176c0 <__metal_driver_sifive_i2c0_write_addr+0x6a>
200176be:	a019                	j	200176c4 <__metal_driver_sifive_i2c0_write_addr+0x6e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:178 (discriminator 1)
200176c0:	57fd                	li	a5,-1
200176c2:	a8c9                	j	20017794 <__metal_driver_sifive_i2c0_write_addr+0x13e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:178 (discriminator 2)
200176c4:	fdc42783          	lw	a5,-36(s0)
200176c8:	07c1                	addi	a5,a5,16
200176ca:	0007c783          	lbu	a5,0(a5)
200176ce:	0ff7f793          	andi	a5,a5,255
200176d2:	8b89                	andi	a5,a5,2
200176d4:	f3f9                	bnez	a5,2001769a <__metal_driver_sifive_i2c0_write_addr+0x44>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:184
        (METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) & METAL_I2C_STATUS_TIP),
        timeout);

    /* Set transmit register to given address with read/write flag */
    METAL_I2C_REGB(METAL_SIFIVE_I2C0_TRANSMIT) =
        METAL_SIFIVE_I2C_INSERT_RW_BIT(addr, rw_flag);
200176d6:	fd842783          	lw	a5,-40(s0)
200176da:	0ff7f793          	andi	a5,a5,255
200176de:	0786                	slli	a5,a5,0x1
200176e0:	0ff7f713          	andi	a4,a5,255
200176e4:	fd744783          	lbu	a5,-41(s0)
200176e8:	8b85                	andi	a5,a5,1
200176ea:	0ff7f793          	andi	a5,a5,255
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:183
    METAL_I2C_REGB(METAL_SIFIVE_I2C0_TRANSMIT) =
200176ee:	fdc42683          	lw	a3,-36(s0)
200176f2:	06b1                	addi	a3,a3,12
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:184
        METAL_SIFIVE_I2C_INSERT_RW_BIT(addr, rw_flag);
200176f4:	8fd9                	or	a5,a5,a4
200176f6:	0ff7f793          	andi	a5,a5,255
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:183
    METAL_I2C_REGB(METAL_SIFIVE_I2C0_TRANSMIT) =
200176fa:	00f68023          	sb	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:187

    /* Set start flag to trigger the address transfer */
    METAL_I2C_REGB(METAL_SIFIVE_I2C0_COMMAND) =
200176fe:	fdc42783          	lw	a5,-36(s0)
20017702:	07c1                	addi	a5,a5,16
20017704:	873e                	mv	a4,a5
20017706:	f9000793          	li	a5,-112
2001770a:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:190
        METAL_I2C_CMD_WRITE | METAL_I2C_CMD_START;
    /* Reset timeout */
    METAL_I2C_TIMEOUT_RESET(timeout);
2001770e:	12c010ef          	jal	ra,2001883a <metal_time>
20017712:	86aa                	mv	a3,a0
20017714:	872e                	mv	a4,a1
20017716:	4585                	li	a1,1
20017718:	4601                	li	a2,0
2001771a:	00b687b3          	add	a5,a3,a1
2001771e:	853e                	mv	a0,a5
20017720:	00d53533          	sltu	a0,a0,a3
20017724:	00c70833          	add	a6,a4,a2
20017728:	01050733          	add	a4,a0,a6
2001772c:	883a                	mv	a6,a4
2001772e:	fef42023          	sw	a5,-32(s0)
20017732:	ff042223          	sw	a6,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:193

    /* Check for transmit completion */
    METAL_I2C_REG_CHECK(
20017736:	a035                	j	20017762 <__metal_driver_sifive_i2c0_write_addr+0x10c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:193 (discriminator 3)
20017738:	102010ef          	jal	ra,2001883a <metal_time>
2001773c:	87aa                	mv	a5,a0
2001773e:	882e                	mv	a6,a1
20017740:	fe442703          	lw	a4,-28(s0)
20017744:	86c2                	mv	a3,a6
20017746:	00d74c63          	blt	a4,a3,2001775e <__metal_driver_sifive_i2c0_write_addr+0x108>
2001774a:	fe442703          	lw	a4,-28(s0)
2001774e:	86c2                	mv	a3,a6
20017750:	00d71963          	bne	a4,a3,20017762 <__metal_driver_sifive_i2c0_write_addr+0x10c>
20017754:	fe042703          	lw	a4,-32(s0)
20017758:	00f76363          	bltu	a4,a5,2001775e <__metal_driver_sifive_i2c0_write_addr+0x108>
2001775c:	a019                	j	20017762 <__metal_driver_sifive_i2c0_write_addr+0x10c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:193 (discriminator 1)
2001775e:	57fd                	li	a5,-1
20017760:	a815                	j	20017794 <__metal_driver_sifive_i2c0_write_addr+0x13e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:193 (discriminator 2)
20017762:	fdc42783          	lw	a5,-36(s0)
20017766:	07c1                	addi	a5,a5,16
20017768:	0007c783          	lbu	a5,0(a5)
2001776c:	0ff7f793          	andi	a5,a5,255
20017770:	8b89                	andi	a5,a5,2
20017772:	f3f9                	bnez	a5,20017738 <__metal_driver_sifive_i2c0_write_addr+0xe2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:198
        (METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) & METAL_I2C_STATUS_TIP),
        timeout);

    /* Check for ACK from slave */
    if ((METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) & METAL_I2C_STATUS_RXACK)) {
20017774:	fdc42783          	lw	a5,-36(s0)
20017778:	07c1                	addi	a5,a5,16
2001777a:	0007c783          	lbu	a5,0(a5)
2001777e:	0ff7f793          	andi	a5,a5,255
20017782:	07e2                	slli	a5,a5,0x18
20017784:	87e1                	srai	a5,a5,0x18
20017786:	0007d563          	bgez	a5,20017790 <__metal_driver_sifive_i2c0_write_addr+0x13a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:201
        /* No ACK, return error */
        METAL_I2C_LOG("I2C RX ACK failed.\n");
        ret = METAL_I2C_RET_ERR;
2001778a:	57fd                	li	a5,-1
2001778c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:204
    }

    return ret;
20017790:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:205
}
20017794:	853e                	mv	a0,a5
20017796:	50b2                	lw	ra,44(sp)
20017798:	5422                	lw	s0,40(sp)
2001779a:	6145                	addi	sp,sp,48
2001779c:	8082                	ret

2001779e <__metal_driver_sifive_i2c0_write>:
__metal_driver_sifive_i2c0_write():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:210

static int __metal_driver_sifive_i2c0_write(struct metal_i2c *i2c,
                                            unsigned int addr, unsigned int len,
                                            unsigned char buf[],
                                            metal_i2c_stop_bit_t stop_bit) {
2001779e:	715d                	addi	sp,sp,-80
200177a0:	c686                	sw	ra,76(sp)
200177a2:	c4a2                	sw	s0,72(sp)
200177a4:	0880                	addi	s0,sp,80
200177a6:	fca42623          	sw	a0,-52(s0)
200177aa:	fcb42423          	sw	a1,-56(s0)
200177ae:	fcc42223          	sw	a2,-60(s0)
200177b2:	fcd42023          	sw	a3,-64(s0)
200177b6:	fae42e23          	sw	a4,-68(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:214
    __metal_io_u8 command;
    time_t timeout;
    int ret;
    unsigned long base = __metal_driver_sifive_i2c0_control_base(i2c);
200177ba:	fcc42503          	lw	a0,-52(s0)
200177be:	b5fff0ef          	jal	ra,2001731c <__metal_driver_sifive_i2c0_control_base>
200177c2:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:217
    unsigned int i;

    if ((i2c != NULL) &&
200177c6:	fcc42783          	lw	a5,-52(s0)
200177ca:	12078463          	beqz	a5,200178f2 <__metal_driver_sifive_i2c0_write+0x154>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:218 (discriminator 1)
        ((struct __metal_driver_sifive_i2c0 *)i2c)->init_done) {
200177ce:	fcc42783          	lw	a5,-52(s0)
200177d2:	43dc                	lw	a5,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:217 (discriminator 1)
    if ((i2c != NULL) &&
200177d4:	10078f63          	beqz	a5,200178f2 <__metal_driver_sifive_i2c0_write+0x154>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:223

        /* Send address over I2C bus, current driver supports only 7bit
         * addressing */
        ret =
            __metal_driver_sifive_i2c0_write_addr(base, addr, METAL_I2C_WRITE);
200177d8:	4601                	li	a2,0
200177da:	fc842583          	lw	a1,-56(s0)
200177de:	fe042503          	lw	a0,-32(s0)
200177e2:	e75ff0ef          	jal	ra,20017656 <__metal_driver_sifive_i2c0_write_addr>
200177e6:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:225

        if (ret != METAL_I2C_RET_OK) {
200177ea:	fe842783          	lw	a5,-24(s0)
200177ee:	10079563          	bnez	a5,200178f8 <__metal_driver_sifive_i2c0_write+0x15a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:230
            /* Write address failed */
            METAL_I2C_LOG("I2C Address Write failed.\n");
        } else {
            /* Set command flags */
            command = METAL_I2C_CMD_WRITE;
200177f2:	47c1                	li	a5,16
200177f4:	fef407a3          	sb	a5,-17(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:232

            for (i = 0; i < len; i++) {
200177f8:	fe042223          	sw	zero,-28(s0)
200177fc:	a0e5                	j	200178e4 <__metal_driver_sifive_i2c0_write+0x146>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:234
                /* Copy into transmit register */
                METAL_I2C_REGB(METAL_SIFIVE_I2C0_TRANSMIT) = buf[i];
200177fe:	fc042703          	lw	a4,-64(s0)
20017802:	fe442783          	lw	a5,-28(s0)
20017806:	97ba                	add	a5,a5,a4
20017808:	fe042703          	lw	a4,-32(s0)
2001780c:	0731                	addi	a4,a4,12
2001780e:	0007c783          	lbu	a5,0(a5)
20017812:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:238

                /* for last byte transfer, check if stop condition is requested
                 */
                if (i == (len - 1)) {
20017816:	fc442783          	lw	a5,-60(s0)
2001781a:	17fd                	addi	a5,a5,-1
2001781c:	fe442703          	lw	a4,-28(s0)
20017820:	02f71263          	bne	a4,a5,20017844 <__metal_driver_sifive_i2c0_write+0xa6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:239
                    command |= METAL_SIFIVE_I2C_INSERT_STOP(stop_bit);
20017824:	fbc42783          	lw	a5,-68(s0)
20017828:	0ff7f793          	andi	a5,a5,255
2001782c:	079a                	slli	a5,a5,0x6
2001782e:	0ff7f793          	andi	a5,a5,255
20017832:	0407f793          	andi	a5,a5,64
20017836:	0ff7f713          	andi	a4,a5,255
2001783a:	fef44783          	lbu	a5,-17(s0)
2001783e:	8fd9                	or	a5,a5,a4
20017840:	fef407a3          	sb	a5,-17(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:242
                }
                /* Write command register */
                METAL_I2C_REGB(METAL_SIFIVE_I2C0_COMMAND) = command;
20017844:	fe042783          	lw	a5,-32(s0)
20017848:	07c1                	addi	a5,a5,16
2001784a:	873e                	mv	a4,a5
2001784c:	fef44783          	lbu	a5,-17(s0)
20017850:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:244
                /* Reset timeout */
                METAL_I2C_TIMEOUT_RESET(timeout);
20017854:	7e7000ef          	jal	ra,2001883a <metal_time>
20017858:	86aa                	mv	a3,a0
2001785a:	872e                	mv	a4,a1
2001785c:	4585                	li	a1,1
2001785e:	4601                	li	a2,0
20017860:	00b687b3          	add	a5,a3,a1
20017864:	853e                	mv	a0,a5
20017866:	00d53533          	sltu	a0,a0,a3
2001786a:	00c70833          	add	a6,a4,a2
2001786e:	01050733          	add	a4,a0,a6
20017872:	883a                	mv	a6,a4
20017874:	fcf42c23          	sw	a5,-40(s0)
20017878:	fd042e23          	sw	a6,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:247

                /* Check for transfer completion */
                METAL_I2C_REG_CHECK((METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) &
2001787c:	a035                	j	200178a8 <__metal_driver_sifive_i2c0_write+0x10a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:247 (discriminator 3)
2001787e:	7bd000ef          	jal	ra,2001883a <metal_time>
20017882:	87aa                	mv	a5,a0
20017884:	882e                	mv	a6,a1
20017886:	fdc42703          	lw	a4,-36(s0)
2001788a:	86c2                	mv	a3,a6
2001788c:	00d74c63          	blt	a4,a3,200178a4 <__metal_driver_sifive_i2c0_write+0x106>
20017890:	fdc42703          	lw	a4,-36(s0)
20017894:	86c2                	mv	a3,a6
20017896:	00d71963          	bne	a4,a3,200178a8 <__metal_driver_sifive_i2c0_write+0x10a>
2001789a:	fd842703          	lw	a4,-40(s0)
2001789e:	00f76363          	bltu	a4,a5,200178a4 <__metal_driver_sifive_i2c0_write+0x106>
200178a2:	a019                	j	200178a8 <__metal_driver_sifive_i2c0_write+0x10a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:247 (discriminator 1)
200178a4:	57fd                	li	a5,-1
200178a6:	a899                	j	200178fc <__metal_driver_sifive_i2c0_write+0x15e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:247 (discriminator 2)
200178a8:	fe042783          	lw	a5,-32(s0)
200178ac:	07c1                	addi	a5,a5,16
200178ae:	0007c783          	lbu	a5,0(a5)
200178b2:	0ff7f793          	andi	a5,a5,255
200178b6:	8b89                	andi	a5,a5,2
200178b8:	f3f9                	bnez	a5,2001787e <__metal_driver_sifive_i2c0_write+0xe0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:252
                                     METAL_I2C_STATUS_TIP),
                                    timeout);

                /* Check for ACK from slave */
                if ((METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) &
200178ba:	fe042783          	lw	a5,-32(s0)
200178be:	07c1                	addi	a5,a5,16
200178c0:	0007c783          	lbu	a5,0(a5)
200178c4:	0ff7f793          	andi	a5,a5,255
200178c8:	07e2                	slli	a5,a5,0x18
200178ca:	87e1                	srai	a5,a5,0x18
200178cc:	0007d763          	bgez	a5,200178da <__metal_driver_sifive_i2c0_write+0x13c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:256
                     METAL_I2C_STATUS_RXACK)) {
                    /* No ACK, return error */
                    METAL_I2C_LOG("I2C RX ACK failed.\n");
                    ret = METAL_I2C_RET_ERR;
200178d0:	57fd                	li	a5,-1
200178d2:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:257
                    break;
200178d6:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:225
        if (ret != METAL_I2C_RET_OK) {
200178d8:	a005                	j	200178f8 <__metal_driver_sifive_i2c0_write+0x15a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:232 (discriminator 2)
            for (i = 0; i < len; i++) {
200178da:	fe442783          	lw	a5,-28(s0)
200178de:	0785                	addi	a5,a5,1
200178e0:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:232 (discriminator 1)
200178e4:	fe442703          	lw	a4,-28(s0)
200178e8:	fc442783          	lw	a5,-60(s0)
200178ec:	f0f769e3          	bltu	a4,a5,200177fe <__metal_driver_sifive_i2c0_write+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:225
        if (ret != METAL_I2C_RET_OK) {
200178f0:	a021                	j	200178f8 <__metal_driver_sifive_i2c0_write+0x15a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:265
        }

    } else {
        /* I2C device not initialized, return error */
        METAL_I2C_LOG("I2C device not initialized.\n");
        ret = METAL_I2C_RET_ERR;
200178f2:	57fd                	li	a5,-1
200178f4:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:268
    }

    return ret;
200178f8:	fe842783          	lw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:269
}
200178fc:	853e                	mv	a0,a5
200178fe:	40b6                	lw	ra,76(sp)
20017900:	4426                	lw	s0,72(sp)
20017902:	6161                	addi	sp,sp,80
20017904:	8082                	ret

20017906 <__metal_driver_sifive_i2c0_read>:
__metal_driver_sifive_i2c0_read():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:273
static int __metal_driver_sifive_i2c0_read(struct metal_i2c *i2c,
                                           unsigned int addr, unsigned int len,
                                           unsigned char buf[],
                                           metal_i2c_stop_bit_t stop_bit) {
20017906:	715d                	addi	sp,sp,-80
20017908:	c686                	sw	ra,76(sp)
2001790a:	c4a2                	sw	s0,72(sp)
2001790c:	0880                	addi	s0,sp,80
2001790e:	fca42623          	sw	a0,-52(s0)
20017912:	fcb42423          	sw	a1,-56(s0)
20017916:	fcc42223          	sw	a2,-60(s0)
2001791a:	fcd42023          	sw	a3,-64(s0)
2001791e:	fae42e23          	sw	a4,-68(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:278
    int ret;
    __metal_io_u8 command;
    time_t timeout;
    unsigned int i;
    unsigned long base = __metal_driver_sifive_i2c0_control_base(i2c);
20017922:	fcc42503          	lw	a0,-52(s0)
20017926:	9f7ff0ef          	jal	ra,2001731c <__metal_driver_sifive_i2c0_control_base>
2001792a:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:280

    if ((i2c != NULL) &&
2001792e:	fcc42783          	lw	a5,-52(s0)
20017932:	10078c63          	beqz	a5,20017a4a <__metal_driver_sifive_i2c0_read+0x144>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:281 (discriminator 1)
        ((struct __metal_driver_sifive_i2c0 *)i2c)->init_done) {
20017936:	fcc42783          	lw	a5,-52(s0)
2001793a:	43dc                	lw	a5,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:280 (discriminator 1)
    if ((i2c != NULL) &&
2001793c:	10078763          	beqz	a5,20017a4a <__metal_driver_sifive_i2c0_read+0x144>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:285

        /* Send address over I2C bus, current driver supports only 7bit
         * addressing */
        ret = __metal_driver_sifive_i2c0_write_addr(base, addr, METAL_I2C_READ);
20017940:	4605                	li	a2,1
20017942:	fc842583          	lw	a1,-56(s0)
20017946:	fe042503          	lw	a0,-32(s0)
2001794a:	d0dff0ef          	jal	ra,20017656 <__metal_driver_sifive_i2c0_write_addr>
2001794e:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:287

        if (ret != METAL_I2C_RET_OK) {
20017952:	fec42783          	lw	a5,-20(s0)
20017956:	0e079d63          	bnez	a5,20017a50 <__metal_driver_sifive_i2c0_read+0x14a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:292
            /* Write address failed */
            METAL_I2C_LOG("I2C Read failed.\n");
        } else {
            /* Set command flags */
            command = METAL_I2C_CMD_READ;
2001795a:	02000793          	li	a5,32
2001795e:	fef405a3          	sb	a5,-21(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:294

            for (i = 0; i < len; i++) {
20017962:	fe042223          	sw	zero,-28(s0)
20017966:	a8d9                	j	20017a3c <__metal_driver_sifive_i2c0_read+0x136>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:296
                /* check for last transfer */
                if (i == (len - 1)) {
20017968:	fc442783          	lw	a5,-60(s0)
2001796c:	17fd                	addi	a5,a5,-1
2001796e:	fe442703          	lw	a4,-28(s0)
20017972:	02f71663          	bne	a4,a5,2001799e <__metal_driver_sifive_i2c0_read+0x98>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:300
                    /* Set NACK to end read, if requested generate STOP
                     * condition */
                    command |= (METAL_I2C_CMD_ACK |
                                METAL_SIFIVE_I2C_INSERT_STOP(stop_bit));
20017976:	fbc42783          	lw	a5,-68(s0)
2001797a:	0ff7f793          	andi	a5,a5,255
2001797e:	079a                	slli	a5,a5,0x6
20017980:	0ff7f793          	andi	a5,a5,255
20017984:	0407f793          	andi	a5,a5,64
20017988:	0ff7f713          	andi	a4,a5,255
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:299
                    command |= (METAL_I2C_CMD_ACK |
2001798c:	feb44783          	lbu	a5,-21(s0)
20017990:	8fd9                	or	a5,a5,a4
20017992:	0ff7f793          	andi	a5,a5,255
20017996:	0087e793          	ori	a5,a5,8
2001799a:	fef405a3          	sb	a5,-21(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:303
                }
                /* Write command register */
                METAL_I2C_REGB(METAL_SIFIVE_I2C0_COMMAND) = command;
2001799e:	fe042783          	lw	a5,-32(s0)
200179a2:	07c1                	addi	a5,a5,16
200179a4:	873e                	mv	a4,a5
200179a6:	feb44783          	lbu	a5,-21(s0)
200179aa:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:305
                /* Reset timeout */
                METAL_I2C_TIMEOUT_RESET(timeout);
200179ae:	68d000ef          	jal	ra,2001883a <metal_time>
200179b2:	86aa                	mv	a3,a0
200179b4:	872e                	mv	a4,a1
200179b6:	4585                	li	a1,1
200179b8:	4601                	li	a2,0
200179ba:	00b687b3          	add	a5,a3,a1
200179be:	853e                	mv	a0,a5
200179c0:	00d53533          	sltu	a0,a0,a3
200179c4:	00c70833          	add	a6,a4,a2
200179c8:	01050733          	add	a4,a0,a6
200179cc:	883a                	mv	a6,a4
200179ce:	fcf42c23          	sw	a5,-40(s0)
200179d2:	fd042e23          	sw	a6,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:308

                /* Wait for the read to complete */
                METAL_I2C_REG_CHECK((METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) &
200179d6:	a035                	j	20017a02 <__metal_driver_sifive_i2c0_read+0xfc>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:308 (discriminator 3)
200179d8:	663000ef          	jal	ra,2001883a <metal_time>
200179dc:	87aa                	mv	a5,a0
200179de:	882e                	mv	a6,a1
200179e0:	fdc42703          	lw	a4,-36(s0)
200179e4:	86c2                	mv	a3,a6
200179e6:	00d74c63          	blt	a4,a3,200179fe <__metal_driver_sifive_i2c0_read+0xf8>
200179ea:	fdc42703          	lw	a4,-36(s0)
200179ee:	86c2                	mv	a3,a6
200179f0:	00d71963          	bne	a4,a3,20017a02 <__metal_driver_sifive_i2c0_read+0xfc>
200179f4:	fd842703          	lw	a4,-40(s0)
200179f8:	00f76363          	bltu	a4,a5,200179fe <__metal_driver_sifive_i2c0_read+0xf8>
200179fc:	a019                	j	20017a02 <__metal_driver_sifive_i2c0_read+0xfc>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:308 (discriminator 1)
200179fe:	57fd                	li	a5,-1
20017a00:	a891                	j	20017a54 <__metal_driver_sifive_i2c0_read+0x14e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:308 (discriminator 2)
20017a02:	fe042783          	lw	a5,-32(s0)
20017a06:	07c1                	addi	a5,a5,16
20017a08:	0007c783          	lbu	a5,0(a5)
20017a0c:	0ff7f793          	andi	a5,a5,255
20017a10:	8b89                	andi	a5,a5,2
20017a12:	f3f9                	bnez	a5,200179d8 <__metal_driver_sifive_i2c0_read+0xd2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:312 (discriminator 2)
                                     METAL_I2C_STATUS_TIP),
                                    timeout);
                /* Store the received byte */
                buf[i] = METAL_I2C_REGB(METAL_SIFIVE_I2C0_TRANSMIT);
20017a14:	fe042783          	lw	a5,-32(s0)
20017a18:	07b1                	addi	a5,a5,12
20017a1a:	86be                	mv	a3,a5
20017a1c:	fc042703          	lw	a4,-64(s0)
20017a20:	fe442783          	lw	a5,-28(s0)
20017a24:	97ba                	add	a5,a5,a4
20017a26:	0006c703          	lbu	a4,0(a3)
20017a2a:	0ff77713          	andi	a4,a4,255
20017a2e:	00e78023          	sb	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:294 (discriminator 2)
            for (i = 0; i < len; i++) {
20017a32:	fe442783          	lw	a5,-28(s0)
20017a36:	0785                	addi	a5,a5,1
20017a38:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:294 (discriminator 1)
20017a3c:	fe442703          	lw	a4,-28(s0)
20017a40:	fc442783          	lw	a5,-60(s0)
20017a44:	f2f762e3          	bltu	a4,a5,20017968 <__metal_driver_sifive_i2c0_read+0x62>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:287
        if (ret != METAL_I2C_RET_OK) {
20017a48:	a021                	j	20017a50 <__metal_driver_sifive_i2c0_read+0x14a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:318
            }
        }
    } else {
        /* I2C device not initialized, return error */
        METAL_I2C_LOG("I2C device not initialized.\n");
        ret = METAL_I2C_RET_ERR;
20017a4a:	57fd                	li	a5,-1
20017a4c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:321
    }

    return ret;
20017a50:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:322
}
20017a54:	853e                	mv	a0,a5
20017a56:	40b6                	lw	ra,76(sp)
20017a58:	4426                	lw	s0,72(sp)
20017a5a:	6161                	addi	sp,sp,80
20017a5c:	8082                	ret

20017a5e <__metal_driver_sifive_i2c0_transfer>:
__metal_driver_sifive_i2c0_transfer():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:327

static int
__metal_driver_sifive_i2c0_transfer(struct metal_i2c *i2c, unsigned int addr,
                                    unsigned char txbuf[], unsigned int txlen,
                                    unsigned char rxbuf[], unsigned int rxlen) {
20017a5e:	715d                	addi	sp,sp,-80
20017a60:	c686                	sw	ra,76(sp)
20017a62:	c4a2                	sw	s0,72(sp)
20017a64:	0880                	addi	s0,sp,80
20017a66:	fca42623          	sw	a0,-52(s0)
20017a6a:	fcb42423          	sw	a1,-56(s0)
20017a6e:	fcc42223          	sw	a2,-60(s0)
20017a72:	fcd42023          	sw	a3,-64(s0)
20017a76:	fae42e23          	sw	a4,-68(s0)
20017a7a:	faf42c23          	sw	a5,-72(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:332
    __metal_io_u8 command;
    time_t timeout;
    int ret;
    unsigned int i;
    unsigned long base = __metal_driver_sifive_i2c0_control_base(i2c);
20017a7e:	fcc42503          	lw	a0,-52(s0)
20017a82:	89bff0ef          	jal	ra,2001731c <__metal_driver_sifive_i2c0_control_base>
20017a86:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:334

    if ((i2c != NULL) &&
20017a8a:	fcc42783          	lw	a5,-52(s0)
20017a8e:	20078e63          	beqz	a5,20017caa <__metal_driver_sifive_i2c0_transfer+0x24c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:335 (discriminator 1)
        ((struct __metal_driver_sifive_i2c0 *)i2c)->init_done) {
20017a92:	fcc42783          	lw	a5,-52(s0)
20017a96:	43dc                	lw	a5,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:334 (discriminator 1)
    if ((i2c != NULL) &&
20017a98:	20078963          	beqz	a5,20017caa <__metal_driver_sifive_i2c0_transfer+0x24c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:336
        if (txlen) {
20017a9c:	fc042783          	lw	a5,-64(s0)
20017aa0:	10078863          	beqz	a5,20017bb0 <__metal_driver_sifive_i2c0_transfer+0x152>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:338
            /* Set command flags */
            command = METAL_I2C_CMD_WRITE;
20017aa4:	47c1                	li	a5,16
20017aa6:	fef407a3          	sb	a5,-17(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:341
            /* Send address over I2C bus, current driver supports only 7bit
             * addressing */
            ret = __metal_driver_sifive_i2c0_write_addr(base, addr,
20017aaa:	4601                	li	a2,0
20017aac:	fc842583          	lw	a1,-56(s0)
20017ab0:	fe042503          	lw	a0,-32(s0)
20017ab4:	ba3ff0ef          	jal	ra,20017656 <__metal_driver_sifive_i2c0_write_addr>
20017ab8:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:344
                                                        METAL_I2C_WRITE);

            if (ret != METAL_I2C_RET_OK) {
20017abc:	fe842783          	lw	a5,-24(s0)
20017ac0:	c781                	beqz	a5,20017ac8 <__metal_driver_sifive_i2c0_transfer+0x6a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:347
                /* Write address failed */
                METAL_I2C_LOG("I2C Write failed.\n");
                return ret;
20017ac2:	fe842783          	lw	a5,-24(s0)
20017ac6:	a2fd                	j	20017cb4 <__metal_driver_sifive_i2c0_transfer+0x256>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:349
            }
            for (i = 0; i < txlen; i++) {
20017ac8:	fe042223          	sw	zero,-28(s0)
20017acc:	a8e1                	j	20017ba4 <__metal_driver_sifive_i2c0_transfer+0x146>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:351
                /* Copy into transmit register */
                METAL_I2C_REGB(METAL_SIFIVE_I2C0_TRANSMIT) = txbuf[i];
20017ace:	fc442703          	lw	a4,-60(s0)
20017ad2:	fe442783          	lw	a5,-28(s0)
20017ad6:	97ba                	add	a5,a5,a4
20017ad8:	fe042703          	lw	a4,-32(s0)
20017adc:	0731                	addi	a4,a4,12
20017ade:	0007c783          	lbu	a5,0(a5)
20017ae2:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:353

                if (i == (txlen - 1) && (rxlen == 0)) {
20017ae6:	fc042783          	lw	a5,-64(s0)
20017aea:	17fd                	addi	a5,a5,-1
20017aec:	fe442703          	lw	a4,-28(s0)
20017af0:	00f71b63          	bne	a4,a5,20017b06 <__metal_driver_sifive_i2c0_transfer+0xa8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:353 (discriminator 1)
20017af4:	fb842783          	lw	a5,-72(s0)
20017af8:	e799                	bnez	a5,20017b06 <__metal_driver_sifive_i2c0_transfer+0xa8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:355
                    /* Insert stop condition to end transfer */
                    command |= METAL_I2C_CMD_STOP;
20017afa:	fef44783          	lbu	a5,-17(s0)
20017afe:	0407e793          	ori	a5,a5,64
20017b02:	fef407a3          	sb	a5,-17(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:358
                }
                /* Write command register */
                METAL_I2C_REGB(METAL_SIFIVE_I2C0_COMMAND) = command;
20017b06:	fe042783          	lw	a5,-32(s0)
20017b0a:	07c1                	addi	a5,a5,16
20017b0c:	873e                	mv	a4,a5
20017b0e:	fef44783          	lbu	a5,-17(s0)
20017b12:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:360
                /* Reset timeout */
                METAL_I2C_TIMEOUT_RESET(timeout);
20017b16:	525000ef          	jal	ra,2001883a <metal_time>
20017b1a:	86aa                	mv	a3,a0
20017b1c:	872e                	mv	a4,a1
20017b1e:	4585                	li	a1,1
20017b20:	4601                	li	a2,0
20017b22:	00b687b3          	add	a5,a3,a1
20017b26:	853e                	mv	a0,a5
20017b28:	00d53533          	sltu	a0,a0,a3
20017b2c:	00c70833          	add	a6,a4,a2
20017b30:	01050733          	add	a4,a0,a6
20017b34:	883a                	mv	a6,a4
20017b36:	fcf42c23          	sw	a5,-40(s0)
20017b3a:	fd042e23          	sw	a6,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:363

                /* Check for transfer completion. */
                METAL_I2C_REG_CHECK((METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) &
20017b3e:	a035                	j	20017b6a <__metal_driver_sifive_i2c0_transfer+0x10c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:363 (discriminator 3)
20017b40:	4fb000ef          	jal	ra,2001883a <metal_time>
20017b44:	87aa                	mv	a5,a0
20017b46:	882e                	mv	a6,a1
20017b48:	fdc42703          	lw	a4,-36(s0)
20017b4c:	86c2                	mv	a3,a6
20017b4e:	00d74c63          	blt	a4,a3,20017b66 <__metal_driver_sifive_i2c0_transfer+0x108>
20017b52:	fdc42703          	lw	a4,-36(s0)
20017b56:	86c2                	mv	a3,a6
20017b58:	00d71963          	bne	a4,a3,20017b6a <__metal_driver_sifive_i2c0_transfer+0x10c>
20017b5c:	fd842703          	lw	a4,-40(s0)
20017b60:	00f76363          	bltu	a4,a5,20017b66 <__metal_driver_sifive_i2c0_transfer+0x108>
20017b64:	a019                	j	20017b6a <__metal_driver_sifive_i2c0_transfer+0x10c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:363 (discriminator 1)
20017b66:	57fd                	li	a5,-1
20017b68:	a2b1                	j	20017cb4 <__metal_driver_sifive_i2c0_transfer+0x256>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:363 (discriminator 2)
20017b6a:	fe042783          	lw	a5,-32(s0)
20017b6e:	07c1                	addi	a5,a5,16
20017b70:	0007c783          	lbu	a5,0(a5)
20017b74:	0ff7f793          	andi	a5,a5,255
20017b78:	8b89                	andi	a5,a5,2
20017b7a:	f3f9                	bnez	a5,20017b40 <__metal_driver_sifive_i2c0_transfer+0xe2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:368
                                     METAL_I2C_STATUS_TIP),
                                    timeout);

                /* Check for ACK from slave. */
                if ((METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) &
20017b7c:	fe042783          	lw	a5,-32(s0)
20017b80:	07c1                	addi	a5,a5,16
20017b82:	0007c783          	lbu	a5,0(a5)
20017b86:	0ff7f793          	andi	a5,a5,255
20017b8a:	07e2                	slli	a5,a5,0x18
20017b8c:	87e1                	srai	a5,a5,0x18
20017b8e:	0007d663          	bgez	a5,20017b9a <__metal_driver_sifive_i2c0_transfer+0x13c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:372
                     METAL_I2C_STATUS_RXACK)) {
                    /* No ACK, return error */
                    METAL_I2C_LOG("I2C RX ACK failed.\n");
                    ret = METAL_I2C_RET_ERR;
20017b92:	57fd                	li	a5,-1
20017b94:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:373
                    break;
20017b98:	a821                	j	20017bb0 <__metal_driver_sifive_i2c0_transfer+0x152>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:349 (discriminator 2)
            for (i = 0; i < txlen; i++) {
20017b9a:	fe442783          	lw	a5,-28(s0)
20017b9e:	0785                	addi	a5,a5,1
20017ba0:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:349 (discriminator 1)
20017ba4:	fe442703          	lw	a4,-28(s0)
20017ba8:	fc042783          	lw	a5,-64(s0)
20017bac:	f2f761e3          	bltu	a4,a5,20017ace <__metal_driver_sifive_i2c0_transfer+0x70>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:377
                }
            }
        }
        if (rxlen) {
20017bb0:	fb842783          	lw	a5,-72(s0)
20017bb4:	0e078e63          	beqz	a5,20017cb0 <__metal_driver_sifive_i2c0_transfer+0x252>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:378
            command = METAL_I2C_CMD_READ; /* Set command flags */
20017bb8:	02000793          	li	a5,32
20017bbc:	fef407a3          	sb	a5,-17(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:381
            /* Send address over I2C bus, current driver supports only 7bit
             * addressing */
            ret = __metal_driver_sifive_i2c0_write_addr(base, addr,
20017bc0:	4605                	li	a2,1
20017bc2:	fc842583          	lw	a1,-56(s0)
20017bc6:	fe042503          	lw	a0,-32(s0)
20017bca:	a8dff0ef          	jal	ra,20017656 <__metal_driver_sifive_i2c0_write_addr>
20017bce:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:384
                                                        METAL_I2C_READ);

            if (ret != METAL_I2C_RET_OK) {
20017bd2:	fe842783          	lw	a5,-24(s0)
20017bd6:	c781                	beqz	a5,20017bde <__metal_driver_sifive_i2c0_transfer+0x180>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:387
                /* Return error */
                METAL_I2C_LOG("I2C Read failed.\n");
                return ret;
20017bd8:	fe842783          	lw	a5,-24(s0)
20017bdc:	a8e1                	j	20017cb4 <__metal_driver_sifive_i2c0_transfer+0x256>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:389
            }
            for (i = 0; i < rxlen; i++) {
20017bde:	fe042223          	sw	zero,-28(s0)
20017be2:	a86d                	j	20017c9c <__metal_driver_sifive_i2c0_transfer+0x23e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:391
                /* check for last transfer */
                if (i == (rxlen - 1)) {
20017be4:	fb842783          	lw	a5,-72(s0)
20017be8:	17fd                	addi	a5,a5,-1
20017bea:	fe442703          	lw	a4,-28(s0)
20017bee:	00f71863          	bne	a4,a5,20017bfe <__metal_driver_sifive_i2c0_transfer+0x1a0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:393
                    /* Set NACK to end read, generate STOP condition */
                    command |= (METAL_I2C_CMD_ACK | METAL_I2C_CMD_STOP);
20017bf2:	fef44783          	lbu	a5,-17(s0)
20017bf6:	0487e793          	ori	a5,a5,72
20017bfa:	fef407a3          	sb	a5,-17(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:396
                }
                /* Write command register */
                METAL_I2C_REGB(METAL_SIFIVE_I2C0_COMMAND) = command;
20017bfe:	fe042783          	lw	a5,-32(s0)
20017c02:	07c1                	addi	a5,a5,16
20017c04:	873e                	mv	a4,a5
20017c06:	fef44783          	lbu	a5,-17(s0)
20017c0a:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:398
                /* Reset timeout */
                METAL_I2C_TIMEOUT_RESET(timeout);
20017c0e:	42d000ef          	jal	ra,2001883a <metal_time>
20017c12:	86aa                	mv	a3,a0
20017c14:	872e                	mv	a4,a1
20017c16:	4585                	li	a1,1
20017c18:	4601                	li	a2,0
20017c1a:	00b687b3          	add	a5,a3,a1
20017c1e:	853e                	mv	a0,a5
20017c20:	00d53533          	sltu	a0,a0,a3
20017c24:	00c70833          	add	a6,a4,a2
20017c28:	01050733          	add	a4,a0,a6
20017c2c:	883a                	mv	a6,a4
20017c2e:	fcf42c23          	sw	a5,-40(s0)
20017c32:	fd042e23          	sw	a6,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:401

                /* Wait for the read to complete */
                METAL_I2C_REG_CHECK((METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) &
20017c36:	a035                	j	20017c62 <__metal_driver_sifive_i2c0_transfer+0x204>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:401 (discriminator 3)
20017c38:	403000ef          	jal	ra,2001883a <metal_time>
20017c3c:	87aa                	mv	a5,a0
20017c3e:	882e                	mv	a6,a1
20017c40:	fdc42703          	lw	a4,-36(s0)
20017c44:	86c2                	mv	a3,a6
20017c46:	00d74c63          	blt	a4,a3,20017c5e <__metal_driver_sifive_i2c0_transfer+0x200>
20017c4a:	fdc42703          	lw	a4,-36(s0)
20017c4e:	86c2                	mv	a3,a6
20017c50:	00d71963          	bne	a4,a3,20017c62 <__metal_driver_sifive_i2c0_transfer+0x204>
20017c54:	fd842703          	lw	a4,-40(s0)
20017c58:	00f76363          	bltu	a4,a5,20017c5e <__metal_driver_sifive_i2c0_transfer+0x200>
20017c5c:	a019                	j	20017c62 <__metal_driver_sifive_i2c0_transfer+0x204>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:401 (discriminator 1)
20017c5e:	57fd                	li	a5,-1
20017c60:	a891                	j	20017cb4 <__metal_driver_sifive_i2c0_transfer+0x256>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:401 (discriminator 2)
20017c62:	fe042783          	lw	a5,-32(s0)
20017c66:	07c1                	addi	a5,a5,16
20017c68:	0007c783          	lbu	a5,0(a5)
20017c6c:	0ff7f793          	andi	a5,a5,255
20017c70:	8b89                	andi	a5,a5,2
20017c72:	f3f9                	bnez	a5,20017c38 <__metal_driver_sifive_i2c0_transfer+0x1da>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:405 (discriminator 2)
                                     METAL_I2C_STATUS_TIP),
                                    timeout);
                /* Store the received byte */
                rxbuf[i] = METAL_I2C_REGB(METAL_SIFIVE_I2C0_TRANSMIT);
20017c74:	fe042783          	lw	a5,-32(s0)
20017c78:	07b1                	addi	a5,a5,12
20017c7a:	86be                	mv	a3,a5
20017c7c:	fbc42703          	lw	a4,-68(s0)
20017c80:	fe442783          	lw	a5,-28(s0)
20017c84:	97ba                	add	a5,a5,a4
20017c86:	0006c703          	lbu	a4,0(a3)
20017c8a:	0ff77713          	andi	a4,a4,255
20017c8e:	00e78023          	sb	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:389 (discriminator 2)
            for (i = 0; i < rxlen; i++) {
20017c92:	fe442783          	lw	a5,-28(s0)
20017c96:	0785                	addi	a5,a5,1
20017c98:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:389 (discriminator 1)
20017c9c:	fe442703          	lw	a4,-28(s0)
20017ca0:	fb842783          	lw	a5,-72(s0)
20017ca4:	f4f760e3          	bltu	a4,a5,20017be4 <__metal_driver_sifive_i2c0_transfer+0x186>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:377
        if (rxlen) {
20017ca8:	a021                	j	20017cb0 <__metal_driver_sifive_i2c0_transfer+0x252>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:411
            }
        }
    } else {
        /* I2C device not initialized, return error */
        METAL_I2C_LOG("I2C device not initialized.\n");
        ret = METAL_I2C_RET_ERR;
20017caa:	57fd                	li	a5,-1
20017cac:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:414
    }

    return ret;
20017cb0:	fe842783          	lw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:415
}
20017cb4:	853e                	mv	a0,a5
20017cb6:	40b6                	lw	ra,76(sp)
20017cb8:	4426                	lw	s0,72(sp)
20017cba:	6161                	addi	sp,sp,80
20017cbc:	8082                	ret

20017cbe <__metal_driver_sifive_uart0_control_base>:
__metal_driver_sifive_uart0_control_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1066
{
20017cbe:	1101                	addi	sp,sp,-32
20017cc0:	ce22                	sw	s0,28(sp)
20017cc2:	1000                	addi	s0,sp,32
20017cc4:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1067
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20017cc8:	fec42703          	lw	a4,-20(s0)
20017ccc:	800017b7          	lui	a5,0x80001
20017cd0:	a5c78793          	addi	a5,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
20017cd4:	00f71563          	bne	a4,a5,20017cde <__metal_driver_sifive_uart0_control_base+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1068
		return METAL_SIFIVE_UART0_10013000_BASE_ADDRESS;
20017cd8:	100137b7          	lui	a5,0x10013
20017cdc:	a829                	j	20017cf6 <__metal_driver_sifive_uart0_control_base+0x38>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1070
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20017cde:	fec42703          	lw	a4,-20(s0)
20017ce2:	800017b7          	lui	a5,0x80001
20017ce6:	a7c78793          	addi	a5,a5,-1412 # 80000a7c <metal_segment_heap_target_end+0xfffff2bc>
20017cea:	00f71563          	bne	a4,a5,20017cf4 <__metal_driver_sifive_uart0_control_base+0x36>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1071
		return METAL_SIFIVE_UART0_10023000_BASE_ADDRESS;
20017cee:	100237b7          	lui	a5,0x10023
20017cf2:	a011                	j	20017cf6 <__metal_driver_sifive_uart0_control_base+0x38>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1074
		return 0;
20017cf4:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1076
}
20017cf6:	853e                	mv	a0,a5
20017cf8:	4472                	lw	s0,28(sp)
20017cfa:	6105                	addi	sp,sp,32
20017cfc:	8082                	ret

20017cfe <__metal_driver_sifive_uart0_interrupt_parent>:
__metal_driver_sifive_uart0_interrupt_parent():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1105
{
20017cfe:	1101                	addi	sp,sp,-32
20017d00:	ce22                	sw	s0,28(sp)
20017d02:	1000                	addi	s0,sp,32
20017d04:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1106
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20017d08:	fec42703          	lw	a4,-20(s0)
20017d0c:	800017b7          	lui	a5,0x80001
20017d10:	a5c78793          	addi	a5,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
20017d14:	00f71763          	bne	a4,a5,20017d22 <__metal_driver_sifive_uart0_interrupt_parent+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1107
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20017d18:	800007b7          	lui	a5,0x80000
20017d1c:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffeca0>
20017d20:	a839                	j	20017d3e <__metal_driver_sifive_uart0_interrupt_parent+0x40>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1109
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20017d22:	fec42703          	lw	a4,-20(s0)
20017d26:	800017b7          	lui	a5,0x80001
20017d2a:	a7c78793          	addi	a5,a5,-1412 # 80000a7c <metal_segment_heap_target_end+0xfffff2bc>
20017d2e:	00f71763          	bne	a4,a5,20017d3c <__metal_driver_sifive_uart0_interrupt_parent+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1110
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20017d32:	800007b7          	lui	a5,0x80000
20017d36:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffeca0>
20017d3a:	a011                	j	20017d3e <__metal_driver_sifive_uart0_interrupt_parent+0x40>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1113
		return 0;
20017d3c:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1115
}
20017d3e:	853e                	mv	a0,a5
20017d40:	4472                	lw	s0,28(sp)
20017d42:	6105                	addi	sp,sp,32
20017d44:	8082                	ret

20017d46 <__metal_driver_sifive_uart0_interrupt_line>:
__metal_driver_sifive_uart0_interrupt_line():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1118
{
20017d46:	1101                	addi	sp,sp,-32
20017d48:	ce22                	sw	s0,28(sp)
20017d4a:	1000                	addi	s0,sp,32
20017d4c:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1119
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20017d50:	fec42703          	lw	a4,-20(s0)
20017d54:	800017b7          	lui	a5,0x80001
20017d58:	a5c78793          	addi	a5,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
20017d5c:	00f71463          	bne	a4,a5,20017d64 <__metal_driver_sifive_uart0_interrupt_line+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1120
		return 3;
20017d60:	478d                	li	a5,3
20017d62:	a821                	j	20017d7a <__metal_driver_sifive_uart0_interrupt_line+0x34>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1122
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20017d64:	fec42703          	lw	a4,-20(s0)
20017d68:	800017b7          	lui	a5,0x80001
20017d6c:	a7c78793          	addi	a5,a5,-1412 # 80000a7c <metal_segment_heap_target_end+0xfffff2bc>
20017d70:	00f71463          	bne	a4,a5,20017d78 <__metal_driver_sifive_uart0_interrupt_line+0x32>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1123
		return 4;
20017d74:	4791                	li	a5,4
20017d76:	a011                	j	20017d7a <__metal_driver_sifive_uart0_interrupt_line+0x34>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1126
		return 0;
20017d78:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1128
}
20017d7a:	853e                	mv	a0,a5
20017d7c:	4472                	lw	s0,28(sp)
20017d7e:	6105                	addi	sp,sp,32
20017d80:	8082                	ret

20017d82 <__metal_driver_sifive_uart0_clock>:
__metal_driver_sifive_uart0_clock():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1131
{
20017d82:	1101                	addi	sp,sp,-32
20017d84:	ce22                	sw	s0,28(sp)
20017d86:	1000                	addi	s0,sp,32
20017d88:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1132
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20017d8c:	fec42703          	lw	a4,-20(s0)
20017d90:	800017b7          	lui	a5,0x80001
20017d94:	a5c78793          	addi	a5,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
20017d98:	00f71763          	bne	a4,a5,20017da6 <__metal_driver_sifive_uart0_clock+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1133
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
20017d9c:	800017b7          	lui	a5,0x80001
20017da0:	ab478793          	addi	a5,a5,-1356 # 80000ab4 <metal_segment_heap_target_end+0xfffff2f4>
20017da4:	a839                	j	20017dc2 <__metal_driver_sifive_uart0_clock+0x40>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1135
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20017da6:	fec42703          	lw	a4,-20(s0)
20017daa:	800017b7          	lui	a5,0x80001
20017dae:	a7c78793          	addi	a5,a5,-1412 # 80000a7c <metal_segment_heap_target_end+0xfffff2bc>
20017db2:	00f71763          	bne	a4,a5,20017dc0 <__metal_driver_sifive_uart0_clock+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1136
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
20017db6:	800017b7          	lui	a5,0x80001
20017dba:	ab478793          	addi	a5,a5,-1356 # 80000ab4 <metal_segment_heap_target_end+0xfffff2f4>
20017dbe:	a011                	j	20017dc2 <__metal_driver_sifive_uart0_clock+0x40>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1139
		return 0;
20017dc0:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1141
}
20017dc2:	853e                	mv	a0,a5
20017dc4:	4472                	lw	s0,28(sp)
20017dc6:	6105                	addi	sp,sp,32
20017dc8:	8082                	ret

20017dca <__metal_driver_sifive_uart0_pinmux>:
__metal_driver_sifive_uart0_pinmux():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1144
{
20017dca:	1101                	addi	sp,sp,-32
20017dcc:	ce22                	sw	s0,28(sp)
20017dce:	1000                	addi	s0,sp,32
20017dd0:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1145
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20017dd4:	fec42703          	lw	a4,-20(s0)
20017dd8:	800017b7          	lui	a5,0x80001
20017ddc:	a5c78793          	addi	a5,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
20017de0:	00f71563          	bne	a4,a5,20017dea <__metal_driver_sifive_uart0_pinmux+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1146
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
20017de4:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20017de8:	a829                	j	20017e02 <__metal_driver_sifive_uart0_pinmux+0x38>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1148
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20017dea:	fec42703          	lw	a4,-20(s0)
20017dee:	800017b7          	lui	a5,0x80001
20017df2:	a7c78793          	addi	a5,a5,-1412 # 80000a7c <metal_segment_heap_target_end+0xfffff2bc>
20017df6:	00f71563          	bne	a4,a5,20017e00 <__metal_driver_sifive_uart0_pinmux+0x36>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1149
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
20017dfa:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20017dfe:	a011                	j	20017e02 <__metal_driver_sifive_uart0_pinmux+0x38>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1152
		return 0;
20017e00:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1154
}
20017e02:	853e                	mv	a0,a5
20017e04:	4472                	lw	s0,28(sp)
20017e06:	6105                	addi	sp,sp,32
20017e08:	8082                	ret

20017e0a <__metal_driver_sifive_uart0_pinmux_output_selector>:
__metal_driver_sifive_uart0_pinmux_output_selector():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1157
{
20017e0a:	1101                	addi	sp,sp,-32
20017e0c:	ce22                	sw	s0,28(sp)
20017e0e:	1000                	addi	s0,sp,32
20017e10:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1158
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20017e14:	fec42703          	lw	a4,-20(s0)
20017e18:	800017b7          	lui	a5,0x80001
20017e1c:	a5c78793          	addi	a5,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
20017e20:	00f71463          	bne	a4,a5,20017e28 <__metal_driver_sifive_uart0_pinmux_output_selector+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1159
		return 0;
20017e24:	4781                	li	a5,0
20017e26:	a821                	j	20017e3e <__metal_driver_sifive_uart0_pinmux_output_selector+0x34>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1161
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20017e28:	fec42703          	lw	a4,-20(s0)
20017e2c:	800017b7          	lui	a5,0x80001
20017e30:	a7c78793          	addi	a5,a5,-1412 # 80000a7c <metal_segment_heap_target_end+0xfffff2bc>
20017e34:	00f71463          	bne	a4,a5,20017e3c <__metal_driver_sifive_uart0_pinmux_output_selector+0x32>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1162
		return 0;
20017e38:	4781                	li	a5,0
20017e3a:	a011                	j	20017e3e <__metal_driver_sifive_uart0_pinmux_output_selector+0x34>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1165
		return 0;
20017e3c:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1167
}
20017e3e:	853e                	mv	a0,a5
20017e40:	4472                	lw	s0,28(sp)
20017e42:	6105                	addi	sp,sp,32
20017e44:	8082                	ret

20017e46 <__metal_driver_sifive_uart0_pinmux_source_selector>:
__metal_driver_sifive_uart0_pinmux_source_selector():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1170
{
20017e46:	1101                	addi	sp,sp,-32
20017e48:	ce22                	sw	s0,28(sp)
20017e4a:	1000                	addi	s0,sp,32
20017e4c:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1171
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20017e50:	fec42703          	lw	a4,-20(s0)
20017e54:	800017b7          	lui	a5,0x80001
20017e58:	a5c78793          	addi	a5,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
20017e5c:	00f71563          	bne	a4,a5,20017e66 <__metal_driver_sifive_uart0_pinmux_source_selector+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1172
		return 196608;
20017e60:	000307b7          	lui	a5,0x30
20017e64:	a829                	j	20017e7e <__metal_driver_sifive_uart0_pinmux_source_selector+0x38>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1174
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20017e66:	fec42703          	lw	a4,-20(s0)
20017e6a:	800017b7          	lui	a5,0x80001
20017e6e:	a7c78793          	addi	a5,a5,-1412 # 80000a7c <metal_segment_heap_target_end+0xfffff2bc>
20017e72:	00f71563          	bne	a4,a5,20017e7c <__metal_driver_sifive_uart0_pinmux_source_selector+0x36>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1175
		return 8650752;
20017e76:	008407b7          	lui	a5,0x840
20017e7a:	a011                	j	20017e7e <__metal_driver_sifive_uart0_pinmux_source_selector+0x38>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1178
		return 0;
20017e7c:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1180
}
20017e7e:	853e                	mv	a0,a5
20017e80:	4472                	lw	s0,28(sp)
20017e82:	6105                	addi	sp,sp,32
20017e84:	8082                	ret

20017e86 <__metal_driver_sifive_uart0_interrupt_controller>:
__metal_driver_sifive_uart0_interrupt_controller():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:37
    (__METAL_ACCESS_ONCE((__metal_io_u8 *)UART_REG(offset)))
#define UART_REGW(offset)                                                      \
    (__METAL_ACCESS_ONCE((__metal_io_u32 *)UART_REG(offset)))

struct metal_interrupt *
__metal_driver_sifive_uart0_interrupt_controller(struct metal_uart *uart) {
20017e86:	1101                	addi	sp,sp,-32
20017e88:	ce06                	sw	ra,28(sp)
20017e8a:	cc22                	sw	s0,24(sp)
20017e8c:	1000                	addi	s0,sp,32
20017e8e:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:38
    return __metal_driver_sifive_uart0_interrupt_parent(uart);
20017e92:	fec42503          	lw	a0,-20(s0)
20017e96:	e69ff0ef          	jal	ra,20017cfe <__metal_driver_sifive_uart0_interrupt_parent>
20017e9a:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:39
}
20017e9c:	853e                	mv	a0,a5
20017e9e:	40f2                	lw	ra,28(sp)
20017ea0:	4462                	lw	s0,24(sp)
20017ea2:	6105                	addi	sp,sp,32
20017ea4:	8082                	ret

20017ea6 <__metal_driver_sifive_uart0_get_interrupt_id>:
__metal_driver_sifive_uart0_get_interrupt_id():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:41

int __metal_driver_sifive_uart0_get_interrupt_id(struct metal_uart *uart) {
20017ea6:	1101                	addi	sp,sp,-32
20017ea8:	ce06                	sw	ra,28(sp)
20017eaa:	cc22                	sw	s0,24(sp)
20017eac:	1000                	addi	s0,sp,32
20017eae:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:42
    return __metal_driver_sifive_uart0_interrupt_line(uart);
20017eb2:	fec42503          	lw	a0,-20(s0)
20017eb6:	e91ff0ef          	jal	ra,20017d46 <__metal_driver_sifive_uart0_interrupt_line>
20017eba:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:43
}
20017ebc:	853e                	mv	a0,a5
20017ebe:	40f2                	lw	ra,28(sp)
20017ec0:	4462                	lw	s0,24(sp)
20017ec2:	6105                	addi	sp,sp,32
20017ec4:	8082                	ret

20017ec6 <__metal_driver_sifive_uart0_tx_interrupt_enable>:
__metal_driver_sifive_uart0_tx_interrupt_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:45

int __metal_driver_sifive_uart0_tx_interrupt_enable(struct metal_uart *uart) {
20017ec6:	7179                	addi	sp,sp,-48
20017ec8:	d606                	sw	ra,44(sp)
20017eca:	d422                	sw	s0,40(sp)
20017ecc:	1800                	addi	s0,sp,48
20017ece:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:46
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20017ed2:	fdc42503          	lw	a0,-36(s0)
20017ed6:	de9ff0ef          	jal	ra,20017cbe <__metal_driver_sifive_uart0_control_base>
20017eda:	87aa                	mv	a5,a0
20017edc:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:48

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_TXWM;
20017ee0:	fec42783          	lw	a5,-20(s0)
20017ee4:	07c1                	addi	a5,a5,16
20017ee6:	439c                	lw	a5,0(a5)
20017ee8:	fec42703          	lw	a4,-20(s0)
20017eec:	0741                	addi	a4,a4,16
20017eee:	0017e793          	ori	a5,a5,1
20017ef2:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:49
    return 0;
20017ef4:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:50
}
20017ef6:	853e                	mv	a0,a5
20017ef8:	50b2                	lw	ra,44(sp)
20017efa:	5422                	lw	s0,40(sp)
20017efc:	6145                	addi	sp,sp,48
20017efe:	8082                	ret

20017f00 <__metal_driver_sifive_uart0_tx_interrupt_disable>:
__metal_driver_sifive_uart0_tx_interrupt_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:52

int __metal_driver_sifive_uart0_tx_interrupt_disable(struct metal_uart *uart) {
20017f00:	7179                	addi	sp,sp,-48
20017f02:	d606                	sw	ra,44(sp)
20017f04:	d422                	sw	s0,40(sp)
20017f06:	1800                	addi	s0,sp,48
20017f08:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:53
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20017f0c:	fdc42503          	lw	a0,-36(s0)
20017f10:	dafff0ef          	jal	ra,20017cbe <__metal_driver_sifive_uart0_control_base>
20017f14:	87aa                	mv	a5,a0
20017f16:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:55

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_TXWM;
20017f1a:	fec42783          	lw	a5,-20(s0)
20017f1e:	07c1                	addi	a5,a5,16
20017f20:	439c                	lw	a5,0(a5)
20017f22:	fec42703          	lw	a4,-20(s0)
20017f26:	0741                	addi	a4,a4,16
20017f28:	9bf9                	andi	a5,a5,-2
20017f2a:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:56
    return 0;
20017f2c:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:57
}
20017f2e:	853e                	mv	a0,a5
20017f30:	50b2                	lw	ra,44(sp)
20017f32:	5422                	lw	s0,40(sp)
20017f34:	6145                	addi	sp,sp,48
20017f36:	8082                	ret

20017f38 <__metal_driver_sifive_uart0_rx_interrupt_enable>:
__metal_driver_sifive_uart0_rx_interrupt_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:59

int __metal_driver_sifive_uart0_rx_interrupt_enable(struct metal_uart *uart) {
20017f38:	7179                	addi	sp,sp,-48
20017f3a:	d606                	sw	ra,44(sp)
20017f3c:	d422                	sw	s0,40(sp)
20017f3e:	1800                	addi	s0,sp,48
20017f40:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:60
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20017f44:	fdc42503          	lw	a0,-36(s0)
20017f48:	d77ff0ef          	jal	ra,20017cbe <__metal_driver_sifive_uart0_control_base>
20017f4c:	87aa                	mv	a5,a0
20017f4e:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:62

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_RXWM;
20017f52:	fec42783          	lw	a5,-20(s0)
20017f56:	07c1                	addi	a5,a5,16
20017f58:	439c                	lw	a5,0(a5)
20017f5a:	fec42703          	lw	a4,-20(s0)
20017f5e:	0741                	addi	a4,a4,16
20017f60:	0027e793          	ori	a5,a5,2
20017f64:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:63
    return 0;
20017f66:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:64
}
20017f68:	853e                	mv	a0,a5
20017f6a:	50b2                	lw	ra,44(sp)
20017f6c:	5422                	lw	s0,40(sp)
20017f6e:	6145                	addi	sp,sp,48
20017f70:	8082                	ret

20017f72 <__metal_driver_sifive_uart0_rx_interrupt_disable>:
__metal_driver_sifive_uart0_rx_interrupt_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:66

int __metal_driver_sifive_uart0_rx_interrupt_disable(struct metal_uart *uart) {
20017f72:	7179                	addi	sp,sp,-48
20017f74:	d606                	sw	ra,44(sp)
20017f76:	d422                	sw	s0,40(sp)
20017f78:	1800                	addi	s0,sp,48
20017f7a:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:67
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20017f7e:	fdc42503          	lw	a0,-36(s0)
20017f82:	d3dff0ef          	jal	ra,20017cbe <__metal_driver_sifive_uart0_control_base>
20017f86:	87aa                	mv	a5,a0
20017f88:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:69

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_RXWM;
20017f8c:	fec42783          	lw	a5,-20(s0)
20017f90:	07c1                	addi	a5,a5,16
20017f92:	439c                	lw	a5,0(a5)
20017f94:	fec42703          	lw	a4,-20(s0)
20017f98:	0741                	addi	a4,a4,16
20017f9a:	9bf5                	andi	a5,a5,-3
20017f9c:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:70
    return 0;
20017f9e:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:71
}
20017fa0:	853e                	mv	a0,a5
20017fa2:	50b2                	lw	ra,44(sp)
20017fa4:	5422                	lw	s0,40(sp)
20017fa6:	6145                	addi	sp,sp,48
20017fa8:	8082                	ret

20017faa <__metal_driver_sifive_uart0_txready>:
__metal_driver_sifive_uart0_txready():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:73

int __metal_driver_sifive_uart0_txready(struct metal_uart *uart) {
20017faa:	7179                	addi	sp,sp,-48
20017fac:	d606                	sw	ra,44(sp)
20017fae:	d422                	sw	s0,40(sp)
20017fb0:	1800                	addi	s0,sp,48
20017fb2:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:74
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20017fb6:	fdc42503          	lw	a0,-36(s0)
20017fba:	d05ff0ef          	jal	ra,20017cbe <__metal_driver_sifive_uart0_control_base>
20017fbe:	87aa                	mv	a5,a0
20017fc0:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:76

    return !!((UART_REGW(METAL_SIFIVE_UART0_TXDATA) & UART_TXFULL));
20017fc4:	fec42783          	lw	a5,-20(s0)
20017fc8:	439c                	lw	a5,0(a5)
20017fca:	83fd                	srli	a5,a5,0x1f
20017fcc:	0ff7f793          	andi	a5,a5,255
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:77
}
20017fd0:	853e                	mv	a0,a5
20017fd2:	50b2                	lw	ra,44(sp)
20017fd4:	5422                	lw	s0,40(sp)
20017fd6:	6145                	addi	sp,sp,48
20017fd8:	8082                	ret

20017fda <__metal_driver_sifive_uart0_set_tx_watermark>:
__metal_driver_sifive_uart0_set_tx_watermark():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:80

int __metal_driver_sifive_uart0_set_tx_watermark(struct metal_uart *uart,
                                                 size_t level) {
20017fda:	7179                	addi	sp,sp,-48
20017fdc:	d606                	sw	ra,44(sp)
20017fde:	d422                	sw	s0,40(sp)
20017fe0:	1800                	addi	s0,sp,48
20017fe2:	fca42e23          	sw	a0,-36(s0)
20017fe6:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:81
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20017fea:	fdc42503          	lw	a0,-36(s0)
20017fee:	cd1ff0ef          	jal	ra,20017cbe <__metal_driver_sifive_uart0_control_base>
20017ff2:	87aa                	mv	a5,a0
20017ff4:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:83

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(level);
20017ff8:	fec42783          	lw	a5,-20(s0)
20017ffc:	07a1                	addi	a5,a5,8
20017ffe:	4398                	lw	a4,0(a5)
20018000:	fd842783          	lw	a5,-40(s0)
20018004:	01079693          	slli	a3,a5,0x10
20018008:	000707b7          	lui	a5,0x70
2001800c:	8ff5                	and	a5,a5,a3
2001800e:	fec42683          	lw	a3,-20(s0)
20018012:	06a1                	addi	a3,a3,8
20018014:	8fd9                	or	a5,a5,a4
20018016:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:84
    return 0;
20018018:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:85
}
2001801a:	853e                	mv	a0,a5
2001801c:	50b2                	lw	ra,44(sp)
2001801e:	5422                	lw	s0,40(sp)
20018020:	6145                	addi	sp,sp,48
20018022:	8082                	ret

20018024 <__metal_driver_sifive_uart0_get_tx_watermark>:
__metal_driver_sifive_uart0_get_tx_watermark():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:87

size_t __metal_driver_sifive_uart0_get_tx_watermark(struct metal_uart *uart) {
20018024:	7179                	addi	sp,sp,-48
20018026:	d606                	sw	ra,44(sp)
20018028:	d422                	sw	s0,40(sp)
2001802a:	1800                	addi	s0,sp,48
2001802c:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:88
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20018030:	fdc42503          	lw	a0,-36(s0)
20018034:	c8bff0ef          	jal	ra,20017cbe <__metal_driver_sifive_uart0_control_base>
20018038:	87aa                	mv	a5,a0
2001803a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:90

    return ((UART_REGW(METAL_SIFIVE_UART0_TXCTRL) >> 16) & 0x7);
2001803e:	fec42783          	lw	a5,-20(s0)
20018042:	07a1                	addi	a5,a5,8
20018044:	439c                	lw	a5,0(a5)
20018046:	83c1                	srli	a5,a5,0x10
20018048:	8b9d                	andi	a5,a5,7
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:91
}
2001804a:	853e                	mv	a0,a5
2001804c:	50b2                	lw	ra,44(sp)
2001804e:	5422                	lw	s0,40(sp)
20018050:	6145                	addi	sp,sp,48
20018052:	8082                	ret

20018054 <__metal_driver_sifive_uart0_set_rx_watermark>:
__metal_driver_sifive_uart0_set_rx_watermark():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:94

int __metal_driver_sifive_uart0_set_rx_watermark(struct metal_uart *uart,
                                                 size_t level) {
20018054:	7179                	addi	sp,sp,-48
20018056:	d606                	sw	ra,44(sp)
20018058:	d422                	sw	s0,40(sp)
2001805a:	1800                	addi	s0,sp,48
2001805c:	fca42e23          	sw	a0,-36(s0)
20018060:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:95
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20018064:	fdc42503          	lw	a0,-36(s0)
20018068:	c57ff0ef          	jal	ra,20017cbe <__metal_driver_sifive_uart0_control_base>
2001806c:	87aa                	mv	a5,a0
2001806e:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:97

    UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXCNT(level);
20018072:	fec42783          	lw	a5,-20(s0)
20018076:	07b1                	addi	a5,a5,12
20018078:	4398                	lw	a4,0(a5)
2001807a:	fd842783          	lw	a5,-40(s0)
2001807e:	01079693          	slli	a3,a5,0x10
20018082:	000707b7          	lui	a5,0x70
20018086:	8ff5                	and	a5,a5,a3
20018088:	fec42683          	lw	a3,-20(s0)
2001808c:	06b1                	addi	a3,a3,12
2001808e:	8fd9                	or	a5,a5,a4
20018090:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:98
    return 0;
20018092:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:99
}
20018094:	853e                	mv	a0,a5
20018096:	50b2                	lw	ra,44(sp)
20018098:	5422                	lw	s0,40(sp)
2001809a:	6145                	addi	sp,sp,48
2001809c:	8082                	ret

2001809e <__metal_driver_sifive_uart0_get_rx_watermark>:
__metal_driver_sifive_uart0_get_rx_watermark():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:101

size_t __metal_driver_sifive_uart0_get_rx_watermark(struct metal_uart *uart) {
2001809e:	7179                	addi	sp,sp,-48
200180a0:	d606                	sw	ra,44(sp)
200180a2:	d422                	sw	s0,40(sp)
200180a4:	1800                	addi	s0,sp,48
200180a6:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:102
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
200180aa:	fdc42503          	lw	a0,-36(s0)
200180ae:	c11ff0ef          	jal	ra,20017cbe <__metal_driver_sifive_uart0_control_base>
200180b2:	87aa                	mv	a5,a0
200180b4:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:104

    return ((UART_REGW(METAL_SIFIVE_UART0_RXCTRL) >> 16) & 0x7);
200180b8:	fec42783          	lw	a5,-20(s0)
200180bc:	07b1                	addi	a5,a5,12
200180be:	439c                	lw	a5,0(a5)
200180c0:	83c1                	srli	a5,a5,0x10
200180c2:	8b9d                	andi	a5,a5,7
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:105
}
200180c4:	853e                	mv	a0,a5
200180c6:	50b2                	lw	ra,44(sp)
200180c8:	5422                	lw	s0,40(sp)
200180ca:	6145                	addi	sp,sp,48
200180cc:	8082                	ret

200180ce <__metal_driver_sifive_uart0_putc>:
__metal_driver_sifive_uart0_putc():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:107

int __metal_driver_sifive_uart0_putc(struct metal_uart *uart, int c) {
200180ce:	7179                	addi	sp,sp,-48
200180d0:	d606                	sw	ra,44(sp)
200180d2:	d422                	sw	s0,40(sp)
200180d4:	1800                	addi	s0,sp,48
200180d6:	fca42e23          	sw	a0,-36(s0)
200180da:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:108
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
200180de:	fdc42503          	lw	a0,-36(s0)
200180e2:	bddff0ef          	jal	ra,20017cbe <__metal_driver_sifive_uart0_control_base>
200180e6:	87aa                	mv	a5,a0
200180e8:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:110

    while (__metal_driver_sifive_uart0_txready(uart) != 0) {
200180ec:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:110 (discriminator 1)
200180ee:	fdc42503          	lw	a0,-36(s0)
200180f2:	eb9ff0ef          	jal	ra,20017faa <__metal_driver_sifive_uart0_txready>
200180f6:	87aa                	mv	a5,a0
200180f8:	fbfd                	bnez	a5,200180ee <__metal_driver_sifive_uart0_putc+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:113
        /* wait */
    }
    UART_REGW(METAL_SIFIVE_UART0_TXDATA) = c;
200180fa:	fec42783          	lw	a5,-20(s0)
200180fe:	fd842703          	lw	a4,-40(s0)
20018102:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:114
    return 0;
20018104:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:115
}
20018106:	853e                	mv	a0,a5
20018108:	50b2                	lw	ra,44(sp)
2001810a:	5422                	lw	s0,40(sp)
2001810c:	6145                	addi	sp,sp,48
2001810e:	8082                	ret

20018110 <__metal_driver_sifive_uart0_getc>:
__metal_driver_sifive_uart0_getc():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:117

int __metal_driver_sifive_uart0_getc(struct metal_uart *uart, int *c) {
20018110:	7179                	addi	sp,sp,-48
20018112:	d606                	sw	ra,44(sp)
20018114:	d422                	sw	s0,40(sp)
20018116:	1800                	addi	s0,sp,48
20018118:	fca42e23          	sw	a0,-36(s0)
2001811c:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:119
    uint32_t ch;
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20018120:	fdc42503          	lw	a0,-36(s0)
20018124:	b9bff0ef          	jal	ra,20017cbe <__metal_driver_sifive_uart0_control_base>
20018128:	87aa                	mv	a5,a0
2001812a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:121
    /* No seperate status register, we get status and the byte at same time */
    ch = UART_REGW(METAL_SIFIVE_UART0_RXDATA);
2001812e:	fec42783          	lw	a5,-20(s0)
20018132:	0791                	addi	a5,a5,4
20018134:	439c                	lw	a5,0(a5)
20018136:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:123
    ;
    if (ch & UART_RXEMPTY) {
2001813a:	fe842783          	lw	a5,-24(s0)
2001813e:	0007d763          	bgez	a5,2001814c <__metal_driver_sifive_uart0_getc+0x3c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:124
        *c = -1; /* aka: EOF in most of the world */
20018142:	fd842783          	lw	a5,-40(s0)
20018146:	577d                	li	a4,-1
20018148:	c398                	sw	a4,0(a5)
2001814a:	a801                	j	2001815a <__metal_driver_sifive_uart0_getc+0x4a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:126
    } else {
        *c = ch & 0x0ff;
2001814c:	fe842783          	lw	a5,-24(s0)
20018150:	0ff7f713          	andi	a4,a5,255
20018154:	fd842783          	lw	a5,-40(s0)
20018158:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:128
    }
    return 0;
2001815a:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:129
}
2001815c:	853e                	mv	a0,a5
2001815e:	50b2                	lw	ra,44(sp)
20018160:	5422                	lw	s0,40(sp)
20018162:	6145                	addi	sp,sp,48
20018164:	8082                	ret

20018166 <__metal_driver_sifive_uart0_get_baud_rate>:
__metal_driver_sifive_uart0_get_baud_rate():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:131

int __metal_driver_sifive_uart0_get_baud_rate(struct metal_uart *guart) {
20018166:	7179                	addi	sp,sp,-48
20018168:	d622                	sw	s0,44(sp)
2001816a:	1800                	addi	s0,sp,48
2001816c:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:132
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
20018170:	fdc42783          	lw	a5,-36(s0)
20018174:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:133
    return uart->baud_rate;
20018178:	fec42783          	lw	a5,-20(s0)
2001817c:	43dc                	lw	a5,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:134
}
2001817e:	853e                	mv	a0,a5
20018180:	5432                	lw	s0,44(sp)
20018182:	6145                	addi	sp,sp,48
20018184:	8082                	ret

20018186 <__metal_driver_sifive_uart0_set_baud_rate>:
__metal_driver_sifive_uart0_set_baud_rate():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:137

int __metal_driver_sifive_uart0_set_baud_rate(struct metal_uart *guart,
                                              int baud_rate) {
20018186:	7179                	addi	sp,sp,-48
20018188:	d606                	sw	ra,44(sp)
2001818a:	d422                	sw	s0,40(sp)
2001818c:	1800                	addi	s0,sp,48
2001818e:	fca42e23          	sw	a0,-36(s0)
20018192:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:138
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
20018196:	fdc42783          	lw	a5,-36(s0)
2001819a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:139
    long control_base = __metal_driver_sifive_uart0_control_base(guart);
2001819e:	fdc42503          	lw	a0,-36(s0)
200181a2:	b1dff0ef          	jal	ra,20017cbe <__metal_driver_sifive_uart0_control_base>
200181a6:	87aa                	mv	a5,a0
200181a8:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:140
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
200181ac:	fdc42503          	lw	a0,-36(s0)
200181b0:	bd3ff0ef          	jal	ra,20017d82 <__metal_driver_sifive_uart0_clock>
200181b4:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:142

    uart->baud_rate = baud_rate;
200181b8:	fd842703          	lw	a4,-40(s0)
200181bc:	fec42783          	lw	a5,-20(s0)
200181c0:	c3d8                	sw	a4,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:144

    if (clock != NULL) {
200181c2:	fe442783          	lw	a5,-28(s0)
200181c6:	cbb1                	beqz	a5,2001821a <__metal_driver_sifive_uart0_set_baud_rate+0x94>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:145
        long clock_rate = clock->vtable->get_rate_hz(clock);
200181c8:	fe442783          	lw	a5,-28(s0)
200181cc:	439c                	lw	a5,0(a5)
200181ce:	439c                	lw	a5,0(a5)
200181d0:	fe442503          	lw	a0,-28(s0)
200181d4:	9782                	jalr	a5
200181d6:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:146
        UART_REGW(METAL_SIFIVE_UART0_DIV) = clock_rate / baud_rate - 1;
200181da:	fe042703          	lw	a4,-32(s0)
200181de:	fd842783          	lw	a5,-40(s0)
200181e2:	02f747b3          	div	a5,a4,a5
200181e6:	fff78713          	addi	a4,a5,-1 # 6ffff <__heap_size+0x6f7ff>
200181ea:	fe842783          	lw	a5,-24(s0)
200181ee:	07e1                	addi	a5,a5,24
200181f0:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:147
        UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXEN;
200181f2:	fe842783          	lw	a5,-24(s0)
200181f6:	07a1                	addi	a5,a5,8
200181f8:	439c                	lw	a5,0(a5)
200181fa:	fe842703          	lw	a4,-24(s0)
200181fe:	0721                	addi	a4,a4,8
20018200:	0017e793          	ori	a5,a5,1
20018204:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:148
        UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXEN;
20018206:	fe842783          	lw	a5,-24(s0)
2001820a:	07b1                	addi	a5,a5,12
2001820c:	439c                	lw	a5,0(a5)
2001820e:	fe842703          	lw	a4,-24(s0)
20018212:	0731                	addi	a4,a4,12
20018214:	0017e793          	ori	a5,a5,1
20018218:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:150
    }
    return 0;
2001821a:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:151
}
2001821c:	853e                	mv	a0,a5
2001821e:	50b2                	lw	ra,44(sp)
20018220:	5422                	lw	s0,40(sp)
20018222:	6145                	addi	sp,sp,48
20018224:	8082                	ret

20018226 <pre_rate_change_callback_func>:
pre_rate_change_callback_func():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:153

static void pre_rate_change_callback_func(void *priv) {
20018226:	7139                	addi	sp,sp,-64
20018228:	de06                	sw	ra,60(sp)
2001822a:	dc22                	sw	s0,56(sp)
2001822c:	0080                	addi	s0,sp,64
2001822e:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:154
    struct __metal_driver_sifive_uart0 *uart = priv;
20018232:	fcc42783          	lw	a5,-52(s0)
20018236:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:156
    long control_base =
        __metal_driver_sifive_uart0_control_base((struct metal_uart *)priv);
2001823a:	fcc42503          	lw	a0,-52(s0)
2001823e:	a81ff0ef          	jal	ra,20017cbe <__metal_driver_sifive_uart0_control_base>
20018242:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:155
    long control_base =
20018244:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:158
    struct metal_clock *clock =
        __metal_driver_sifive_uart0_clock((struct metal_uart *)priv);
20018248:	fcc42503          	lw	a0,-52(s0)
2001824c:	b37ff0ef          	jal	ra,20017d82 <__metal_driver_sifive_uart0_clock>
20018250:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:163

    /* Detect when the TXDATA is empty by setting the transmit watermark count
     * to one and waiting until an interrupt is pending */

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) &= ~(UART_TXCNT(0x7));
20018254:	fe842783          	lw	a5,-24(s0)
20018258:	07a1                	addi	a5,a5,8
2001825a:	4398                	lw	a4,0(a5)
2001825c:	fe842783          	lw	a5,-24(s0)
20018260:	07a1                	addi	a5,a5,8
20018262:	86be                	mv	a3,a5
20018264:	fff907b7          	lui	a5,0xfff90
20018268:	17fd                	addi	a5,a5,-1
2001826a:	8ff9                	and	a5,a5,a4
2001826c:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:164
    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(1);
2001826e:	fe842783          	lw	a5,-24(s0)
20018272:	07a1                	addi	a5,a5,8
20018274:	4398                	lw	a4,0(a5)
20018276:	fe842783          	lw	a5,-24(s0)
2001827a:	07a1                	addi	a5,a5,8
2001827c:	86be                	mv	a3,a5
2001827e:	67c1                	lui	a5,0x10
20018280:	8fd9                	or	a5,a5,a4
20018282:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:166

    while ((UART_REGW(METAL_SIFIVE_UART0_IP) & UART_TXWM) == 0)
20018284:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:166 (discriminator 1)
20018286:	fe842783          	lw	a5,-24(s0)
2001828a:	07d1                	addi	a5,a5,20
2001828c:	439c                	lw	a5,0(a5)
2001828e:	8b85                	andi	a5,a5,1
20018290:	dbfd                	beqz	a5,20018286 <pre_rate_change_callback_func+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:174
    /* When the TXDATA clears, the UART is still shifting out the last byte.
     * Calculate the time we must drain to finish transmitting and then wait
     * that long. */

    long bits_per_symbol =
        (UART_REGW(METAL_SIFIVE_UART0_TXCTRL) & (1 << 1)) ? 9 : 10;
20018292:	fe842783          	lw	a5,-24(s0)
20018296:	07a1                	addi	a5,a5,8
20018298:	439c                	lw	a5,0(a5)
2001829a:	8b89                	andi	a5,a5,2
2001829c:	c399                	beqz	a5,200182a2 <pre_rate_change_callback_func+0x7c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 1)
2001829e:	47a5                	li	a5,9
200182a0:	a011                	j	200182a4 <pre_rate_change_callback_func+0x7e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 2)
200182a2:	47a9                	li	a5,10
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:173
    long bits_per_symbol =
200182a4:	fef42023          	sw	a5,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:175
    long clk_freq = clock->vtable->get_rate_hz(clock);
200182a8:	fe442783          	lw	a5,-28(s0)
200182ac:	439c                	lw	a5,0(a5)
200182ae:	439c                	lw	a5,0(a5)
200182b0:	fe442503          	lw	a0,-28(s0)
200182b4:	9782                	jalr	a5
200182b6:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:176
    long cycles_to_wait = bits_per_symbol * clk_freq / uart->baud_rate;
200182ba:	fe042703          	lw	a4,-32(s0)
200182be:	fdc42783          	lw	a5,-36(s0)
200182c2:	02f707b3          	mul	a5,a4,a5
200182c6:	873e                	mv	a4,a5
200182c8:	fec42783          	lw	a5,-20(s0)
200182cc:	43dc                	lw	a5,4(a5)
200182ce:	02f757b3          	divu	a5,a4,a5
200182d2:	fcf42c23          	sw	a5,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:178

    for (volatile long x = 0; x < cycles_to_wait; x++)
200182d6:	fc042a23          	sw	zero,-44(s0)
200182da:	a039                	j	200182e8 <pre_rate_change_callback_func+0xc2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:179 (discriminator 3)
        __asm__("nop");
200182dc:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 3)
    for (volatile long x = 0; x < cycles_to_wait; x++)
200182de:	fd442783          	lw	a5,-44(s0)
200182e2:	0785                	addi	a5,a5,1
200182e4:	fcf42a23          	sw	a5,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 1)
200182e8:	fd442783          	lw	a5,-44(s0)
200182ec:	fd842703          	lw	a4,-40(s0)
200182f0:	fee7c6e3          	blt	a5,a4,200182dc <pre_rate_change_callback_func+0xb6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:180
}
200182f4:	0001                	nop
200182f6:	50f2                	lw	ra,60(sp)
200182f8:	5462                	lw	s0,56(sp)
200182fa:	6121                	addi	sp,sp,64
200182fc:	8082                	ret

200182fe <post_rate_change_callback_func>:
post_rate_change_callback_func():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:182

static void post_rate_change_callback_func(void *priv) {
200182fe:	7179                	addi	sp,sp,-48
20018300:	d606                	sw	ra,44(sp)
20018302:	d422                	sw	s0,40(sp)
20018304:	1800                	addi	s0,sp,48
20018306:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:183
    struct __metal_driver_sifive_uart0 *uart = priv;
2001830a:	fdc42783          	lw	a5,-36(s0)
2001830e:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:184
    metal_uart_set_baud_rate(&uart->uart, uart->baud_rate);
20018312:	fec42703          	lw	a4,-20(s0)
20018316:	fec42783          	lw	a5,-20(s0)
2001831a:	43dc                	lw	a5,4(a5)
2001831c:	85be                	mv	a1,a5
2001831e:	853a                	mv	a0,a4
20018320:	237d                	jal	200188ce <metal_uart_set_baud_rate>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:185
}
20018322:	0001                	nop
20018324:	50b2                	lw	ra,44(sp)
20018326:	5422                	lw	s0,40(sp)
20018328:	6145                	addi	sp,sp,48
2001832a:	8082                	ret

2001832c <__metal_driver_sifive_uart0_init>:
__metal_driver_sifive_uart0_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:187

void __metal_driver_sifive_uart0_init(struct metal_uart *guart, int baud_rate) {
2001832c:	7139                	addi	sp,sp,-64
2001832e:	de06                	sw	ra,60(sp)
20018330:	dc22                	sw	s0,56(sp)
20018332:	0080                	addi	s0,sp,64
20018334:	fca42623          	sw	a0,-52(s0)
20018338:	fcb42423          	sw	a1,-56(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:188
    struct __metal_driver_sifive_uart0 *uart = (void *)(guart);
2001833c:	fcc42783          	lw	a5,-52(s0)
20018340:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:189
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
20018344:	fcc42503          	lw	a0,-52(s0)
20018348:	a3bff0ef          	jal	ra,20017d82 <__metal_driver_sifive_uart0_clock>
2001834c:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:191
    struct __metal_driver_sifive_gpio0 *pinmux =
        __metal_driver_sifive_uart0_pinmux(guart);
20018350:	fcc42503          	lw	a0,-52(s0)
20018354:	a77ff0ef          	jal	ra,20017dca <__metal_driver_sifive_uart0_pinmux>
20018358:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:193

    if (clock != NULL) {
2001835c:	fe842783          	lw	a5,-24(s0)
20018360:	c7b9                	beqz	a5,200183ae <__metal_driver_sifive_uart0_init+0x82>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:194
        uart->pre_rate_change_callback.callback =
20018362:	fec42783          	lw	a5,-20(s0)
20018366:	20018737          	lui	a4,0x20018
2001836a:	22670713          	addi	a4,a4,550 # 20018226 <pre_rate_change_callback_func>
2001836e:	c798                	sw	a4,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:196
            &pre_rate_change_callback_func;
        uart->pre_rate_change_callback.priv = guart;
20018370:	fec42783          	lw	a5,-20(s0)
20018374:	fcc42703          	lw	a4,-52(s0)
20018378:	c7d8                	sw	a4,12(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:197
        metal_clock_register_pre_rate_change_callback(
2001837a:	fec42783          	lw	a5,-20(s0)
2001837e:	07a1                	addi	a5,a5,8
20018380:	85be                	mv	a1,a5
20018382:	fe842503          	lw	a0,-24(s0)
20018386:	2ab5                	jal	20018502 <metal_clock_register_pre_rate_change_callback>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:200
            clock, &(uart->pre_rate_change_callback));

        uart->post_rate_change_callback.callback =
20018388:	fec42783          	lw	a5,-20(s0)
2001838c:	20018737          	lui	a4,0x20018
20018390:	2fe70713          	addi	a4,a4,766 # 200182fe <post_rate_change_callback_func>
20018394:	cbd8                	sw	a4,20(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:202
            &post_rate_change_callback_func;
        uart->post_rate_change_callback.priv = guart;
20018396:	fec42783          	lw	a5,-20(s0)
2001839a:	fcc42703          	lw	a4,-52(s0)
2001839e:	cf98                	sw	a4,24(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:203
        metal_clock_register_post_rate_change_callback(
200183a0:	fec42783          	lw	a5,-20(s0)
200183a4:	07d1                	addi	a5,a5,20
200183a6:	85be                	mv	a1,a5
200183a8:	fe842503          	lw	a0,-24(s0)
200183ac:	2261                	jal	20018534 <metal_clock_register_post_rate_change_callback>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:207
            clock, &(uart->post_rate_change_callback));
    }

    metal_uart_set_baud_rate(&(uart->uart), baud_rate);
200183ae:	fec42783          	lw	a5,-20(s0)
200183b2:	fc842583          	lw	a1,-56(s0)
200183b6:	853e                	mv	a0,a5
200183b8:	2b19                	jal	200188ce <metal_uart_set_baud_rate>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:209

    if (pinmux != NULL) {
200183ba:	fe442783          	lw	a5,-28(s0)
200183be:	cb95                	beqz	a5,200183f2 <__metal_driver_sifive_uart0_init+0xc6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:211
        long pinmux_output_selector =
            __metal_driver_sifive_uart0_pinmux_output_selector(guart);
200183c0:	fcc42503          	lw	a0,-52(s0)
200183c4:	a47ff0ef          	jal	ra,20017e0a <__metal_driver_sifive_uart0_pinmux_output_selector>
200183c8:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:210
        long pinmux_output_selector =
200183ca:	fef42023          	sw	a5,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:213
        long pinmux_source_selector =
            __metal_driver_sifive_uart0_pinmux_source_selector(guart);
200183ce:	fcc42503          	lw	a0,-52(s0)
200183d2:	a75ff0ef          	jal	ra,20017e46 <__metal_driver_sifive_uart0_pinmux_source_selector>
200183d6:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:212
        long pinmux_source_selector =
200183d8:	fcf42e23          	sw	a5,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:214
        pinmux->gpio.vtable->enable_io((struct metal_gpio *)pinmux,
200183dc:	fe442783          	lw	a5,-28(s0)
200183e0:	439c                	lw	a5,0(a5)
200183e2:	53dc                	lw	a5,36(a5)
200183e4:	fdc42603          	lw	a2,-36(s0)
200183e8:	fe042583          	lw	a1,-32(s0)
200183ec:	fe442503          	lw	a0,-28(s0)
200183f0:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:218
                                       pinmux_output_selector,
                                       pinmux_source_selector);
    }
}
200183f2:	0001                	nop
200183f4:	50f2                	lw	ra,60(sp)
200183f6:	5462                	lw	s0,56(sp)
200183f8:	6121                	addi	sp,sp,64
200183fa:	8082                	ret

200183fc <_metal_clock_call_all_callbacks>:
_metal_clock_call_all_callbacks():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:50

/*!
 * @brief Call all callbacks in the linked list, if any are registered
 */
__inline__ void
_metal_clock_call_all_callbacks(const metal_clock_callback *const list) {
200183fc:	7179                	addi	sp,sp,-48
200183fe:	d606                	sw	ra,44(sp)
20018400:	d422                	sw	s0,40(sp)
20018402:	1800                	addi	s0,sp,48
20018404:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:51
    const metal_clock_callback *current = list;
20018408:	fdc42783          	lw	a5,-36(s0)
2001840c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:52
    while (current) {
20018410:	a831                	j	2001842c <_metal_clock_call_all_callbacks+0x30>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:53
        current->callback(current->priv);
20018412:	fec42783          	lw	a5,-20(s0)
20018416:	4398                	lw	a4,0(a5)
20018418:	fec42783          	lw	a5,-20(s0)
2001841c:	43dc                	lw	a5,4(a5)
2001841e:	853e                	mv	a0,a5
20018420:	9702                	jalr	a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:54
        current = current->_next;
20018422:	fec42783          	lw	a5,-20(s0)
20018426:	479c                	lw	a5,8(a5)
20018428:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:52
    while (current) {
2001842c:	fec42783          	lw	a5,-20(s0)
20018430:	f3ed                	bnez	a5,20018412 <_metal_clock_call_all_callbacks+0x16>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:56
    }
}
20018432:	0001                	nop
20018434:	50b2                	lw	ra,44(sp)
20018436:	5422                	lw	s0,40(sp)
20018438:	6145                	addi	sp,sp,48
2001843a:	8082                	ret

2001843c <_metal_clock_append_to_callbacks>:
_metal_clock_append_to_callbacks():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:63
/*!
 * @brief Append a callback to the linked list and return the head of the list
 */
__inline__ metal_clock_callback *
_metal_clock_append_to_callbacks(metal_clock_callback *list,
                                 metal_clock_callback *const cb) {
2001843c:	7179                	addi	sp,sp,-48
2001843e:	d622                	sw	s0,44(sp)
20018440:	1800                	addi	s0,sp,48
20018442:	fca42e23          	sw	a0,-36(s0)
20018446:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:64
    cb->_next = NULL;
2001844a:	fd842783          	lw	a5,-40(s0)
2001844e:	0007a423          	sw	zero,8(a5) # 10008 <__heap_size+0xf808>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:66

    if (!list) {
20018452:	fdc42783          	lw	a5,-36(s0)
20018456:	e781                	bnez	a5,2001845e <_metal_clock_append_to_callbacks+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:67
        return cb;
20018458:	fd842783          	lw	a5,-40(s0)
2001845c:	a035                	j	20018488 <_metal_clock_append_to_callbacks+0x4c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:70
    }

    metal_clock_callback *current = list;
2001845e:	fdc42783          	lw	a5,-36(s0)
20018462:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:72

    while ((current->_next) != NULL) {
20018466:	a031                	j	20018472 <_metal_clock_append_to_callbacks+0x36>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:73
        current = current->_next;
20018468:	fec42783          	lw	a5,-20(s0)
2001846c:	479c                	lw	a5,8(a5)
2001846e:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:72
    while ((current->_next) != NULL) {
20018472:	fec42783          	lw	a5,-20(s0)
20018476:	479c                	lw	a5,8(a5)
20018478:	fbe5                	bnez	a5,20018468 <_metal_clock_append_to_callbacks+0x2c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:76
    }

    current->_next = cb;
2001847a:	fec42783          	lw	a5,-20(s0)
2001847e:	fd842703          	lw	a4,-40(s0)
20018482:	c798                	sw	a4,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:78

    return list;
20018484:	fdc42783          	lw	a5,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:79
}
20018488:	853e                	mv	a0,a5
2001848a:	5432                	lw	s0,44(sp)
2001848c:	6145                	addi	sp,sp,48
2001848e:	8082                	ret

20018490 <metal_clock_get_rate_hz>:
metal_clock_get_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:110
 * @brief Returns the current rate of the given clock
 *
 * @param clk The handle for the clock
 * @return The current rate of the clock in Hz
 */
__inline__ long metal_clock_get_rate_hz(const struct metal_clock *clk) {
20018490:	1101                	addi	sp,sp,-32
20018492:	ce06                	sw	ra,28(sp)
20018494:	cc22                	sw	s0,24(sp)
20018496:	1000                	addi	s0,sp,32
20018498:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:111
    return clk->vtable->get_rate_hz(clk);
2001849c:	fec42783          	lw	a5,-20(s0)
200184a0:	439c                	lw	a5,0(a5)
200184a2:	439c                	lw	a5,0(a5)
200184a4:	fec42503          	lw	a0,-20(s0)
200184a8:	9782                	jalr	a5
200184aa:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:112
}
200184ac:	853e                	mv	a0,a5
200184ae:	40f2                	lw	ra,28(sp)
200184b0:	4462                	lw	s0,24(sp)
200184b2:	6105                	addi	sp,sp,32
200184b4:	8082                	ret

200184b6 <metal_clock_set_rate_hz>:
metal_clock_set_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:128
 * could be anything!
 *
 * Prior to and after the rate change of the clock, this will call the
 * registered pre- and post-rate change callbacks.
 */
__inline__ long metal_clock_set_rate_hz(struct metal_clock *clk, long hz) {
200184b6:	7179                	addi	sp,sp,-48
200184b8:	d606                	sw	ra,44(sp)
200184ba:	d422                	sw	s0,40(sp)
200184bc:	1800                	addi	s0,sp,48
200184be:	fca42e23          	sw	a0,-36(s0)
200184c2:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:129
    _metal_clock_call_all_callbacks(clk->_pre_rate_change_callback);
200184c6:	fdc42783          	lw	a5,-36(s0)
200184ca:	43dc                	lw	a5,4(a5)
200184cc:	853e                	mv	a0,a5
200184ce:	f2fff0ef          	jal	ra,200183fc <_metal_clock_call_all_callbacks>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:131

    long out = clk->vtable->set_rate_hz(clk, hz);
200184d2:	fdc42783          	lw	a5,-36(s0)
200184d6:	439c                	lw	a5,0(a5)
200184d8:	43dc                	lw	a5,4(a5)
200184da:	fd842583          	lw	a1,-40(s0)
200184de:	fdc42503          	lw	a0,-36(s0)
200184e2:	9782                	jalr	a5
200184e4:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:133

    _metal_clock_call_all_callbacks(clk->_post_rate_change_callback);
200184e8:	fdc42783          	lw	a5,-36(s0)
200184ec:	479c                	lw	a5,8(a5)
200184ee:	853e                	mv	a0,a5
200184f0:	f0dff0ef          	jal	ra,200183fc <_metal_clock_call_all_callbacks>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:135

    return out;
200184f4:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:136
}
200184f8:	853e                	mv	a0,a5
200184fa:	50b2                	lw	ra,44(sp)
200184fc:	5422                	lw	s0,40(sp)
200184fe:	6145                	addi	sp,sp,48
20018500:	8082                	ret

20018502 <metal_clock_register_pre_rate_change_callback>:
metal_clock_register_pre_rate_change_callback():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:146
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_pre_rate_change_callback(struct metal_clock *clk,
                                              metal_clock_callback *cb) {
20018502:	1101                	addi	sp,sp,-32
20018504:	ce06                	sw	ra,28(sp)
20018506:	cc22                	sw	s0,24(sp)
20018508:	1000                	addi	s0,sp,32
2001850a:	fea42623          	sw	a0,-20(s0)
2001850e:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:148
    clk->_pre_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_pre_rate_change_callback, cb);
20018512:	fec42783          	lw	a5,-20(s0)
20018516:	43dc                	lw	a5,4(a5)
20018518:	fe842583          	lw	a1,-24(s0)
2001851c:	853e                	mv	a0,a5
2001851e:	f1fff0ef          	jal	ra,2001843c <_metal_clock_append_to_callbacks>
20018522:	872a                	mv	a4,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:147
    clk->_pre_rate_change_callback =
20018524:	fec42783          	lw	a5,-20(s0)
20018528:	c3d8                	sw	a4,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:149
}
2001852a:	0001                	nop
2001852c:	40f2                	lw	ra,28(sp)
2001852e:	4462                	lw	s0,24(sp)
20018530:	6105                	addi	sp,sp,32
20018532:	8082                	ret

20018534 <metal_clock_register_post_rate_change_callback>:
metal_clock_register_post_rate_change_callback():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:159
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_post_rate_change_callback(struct metal_clock *clk,
                                               metal_clock_callback *cb) {
20018534:	1101                	addi	sp,sp,-32
20018536:	ce06                	sw	ra,28(sp)
20018538:	cc22                	sw	s0,24(sp)
2001853a:	1000                	addi	s0,sp,32
2001853c:	fea42623          	sw	a0,-20(s0)
20018540:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:161
    clk->_post_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_post_rate_change_callback, cb);
20018544:	fec42783          	lw	a5,-20(s0)
20018548:	479c                	lw	a5,8(a5)
2001854a:	fe842583          	lw	a1,-24(s0)
2001854e:	853e                	mv	a0,a5
20018550:	eedff0ef          	jal	ra,2001843c <_metal_clock_append_to_callbacks>
20018554:	872a                	mv	a4,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:160
    clk->_post_rate_change_callback =
20018556:	fec42783          	lw	a5,-20(s0)
2001855a:	c798                	sw	a4,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:162
}
2001855c:	0001                	nop
2001855e:	40f2                	lw	ra,28(sp)
20018560:	4462                	lw	s0,24(sp)
20018562:	6105                	addi	sp,sp,32
20018564:	8082                	ret

20018566 <metal_cpu_get_timer>:
metal_cpu_get_timer():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:73
 * Get the value of the cycle count timer for a given CPU
 *
 * @param cpu The CPU device handle
 * @return The value of the CPU cycle count timer
 */
__inline__ unsigned long long metal_cpu_get_timer(struct metal_cpu *cpu) {
20018566:	1101                	addi	sp,sp,-32
20018568:	ce06                	sw	ra,28(sp)
2001856a:	cc22                	sw	s0,24(sp)
2001856c:	1000                	addi	s0,sp,32
2001856e:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:74
    return cpu->vtable->mcycle_get(cpu);
20018572:	fec42783          	lw	a5,-20(s0)
20018576:	439c                	lw	a5,0(a5)
20018578:	439c                	lw	a5,0(a5)
2001857a:	fec42503          	lw	a0,-20(s0)
2001857e:	9782                	jalr	a5
20018580:	87aa                	mv	a5,a0
20018582:	882e                	mv	a6,a1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:75
}
20018584:	853e                	mv	a0,a5
20018586:	85c2                	mv	a1,a6
20018588:	40f2                	lw	ra,28(sp)
2001858a:	4462                	lw	s0,24(sp)
2001858c:	6105                	addi	sp,sp,32
2001858e:	8082                	ret

20018590 <metal_cpu_get_timebase>:
metal_cpu_get_timebase():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:84
 * Get the value of the timebase of the cycle count timer
 *
 * @param cpu The CPU device handle
 * @return The value of the cycle count timer timebase
 */
__inline__ unsigned long long metal_cpu_get_timebase(struct metal_cpu *cpu) {
20018590:	1101                	addi	sp,sp,-32
20018592:	ce06                	sw	ra,28(sp)
20018594:	cc22                	sw	s0,24(sp)
20018596:	1000                	addi	s0,sp,32
20018598:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:85
    return cpu->vtable->timebase_get(cpu);
2001859c:	fec42783          	lw	a5,-20(s0)
200185a0:	439c                	lw	a5,0(a5)
200185a2:	43dc                	lw	a5,4(a5)
200185a4:	fec42503          	lw	a0,-20(s0)
200185a8:	9782                	jalr	a5
200185aa:	87aa                	mv	a5,a0
200185ac:	882e                	mv	a6,a1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:86
}
200185ae:	853e                	mv	a0,a5
200185b0:	85c2                	mv	a1,a6
200185b2:	40f2                	lw	ra,28(sp)
200185b4:	4462                	lw	s0,24(sp)
200185b6:	6105                	addi	sp,sp,32
200185b8:	8082                	ret

200185ba <metal_cpu_interrupt_controller>:
metal_cpu_interrupt_controller():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:224
 *
 * @param cpu The CPU device handle
 * @return The handle for the CPU interrupt controller
 */
__inline__ struct metal_interrupt *
metal_cpu_interrupt_controller(struct metal_cpu *cpu) {
200185ba:	1101                	addi	sp,sp,-32
200185bc:	ce06                	sw	ra,28(sp)
200185be:	cc22                	sw	s0,24(sp)
200185c0:	1000                	addi	s0,sp,32
200185c2:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:225
    return cpu->vtable->controller_interrupt(cpu);
200185c6:	fec42783          	lw	a5,-20(s0)
200185ca:	439c                	lw	a5,0(a5)
200185cc:	57dc                	lw	a5,44(a5)
200185ce:	fec42503          	lw	a0,-20(s0)
200185d2:	9782                	jalr	a5
200185d4:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:226
}
200185d6:	853e                	mv	a0,a5
200185d8:	40f2                	lw	ra,28(sp)
200185da:	4462                	lw	s0,24(sp)
200185dc:	6105                	addi	sp,sp,32
200185de:	8082                	ret

200185e0 <metal_cpu_get>:
metal_cpu_get():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:7
/* SPDX-License-Identifier: Apache-2.0 */

#include <metal/cpu.h>
#include <metal/machine.h>

struct metal_cpu *metal_cpu_get(unsigned int hartid) {
200185e0:	1101                	addi	sp,sp,-32
200185e2:	ce22                	sw	s0,28(sp)
200185e4:	1000                	addi	s0,sp,32
200185e6:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:8
    if (hartid < __METAL_DT_MAX_HARTS) {
200185ea:	fec42783          	lw	a5,-20(s0)
200185ee:	eb99                	bnez	a5,20018604 <metal_cpu_get+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:9
        return (struct metal_cpu *)__metal_cpu_table[hartid];
200185f0:	800017b7          	lui	a5,0x80001
200185f4:	fec42703          	lw	a4,-20(s0)
200185f8:	070a                	slli	a4,a4,0x2
200185fa:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
200185fe:	97ba                	add	a5,a5,a4
20018600:	439c                	lw	a5,0(a5)
20018602:	a011                	j	20018606 <metal_cpu_get+0x26>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:11
    }
    return NULL;
20018604:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:12
}
20018606:	853e                	mv	a0,a5
20018608:	4472                	lw	s0,28(sp)
2001860a:	6105                	addi	sp,sp,32
2001860c:	8082                	ret

2001860e <metal_cpu_get_current_hartid>:
metal_cpu_get_current_hartid():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:14

int metal_cpu_get_current_hartid() {
2001860e:	1101                	addi	sp,sp,-32
20018610:	ce22                	sw	s0,28(sp)
20018612:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:17
#ifdef __riscv
    int mhartid;
    __asm__ volatile("csrr %0, mhartid" : "=r"(mhartid));
20018614:	f14027f3          	csrr	a5,mhartid
20018618:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:18
    return mhartid;
2001861c:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:20
#endif
}
20018620:	853e                	mv	a0,a5
20018622:	4472                	lw	s0,28(sp)
20018624:	6105                	addi	sp,sp,32
20018626:	8082                	ret

20018628 <metal_i2c_init>:
metal_i2c_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:48
 * @param i2c The handle for the I2C device to initialize.
 * @param baud_rate The baud rate for the I2C device to operate at.
 * @param mode I2C operation mode.
 */
inline void metal_i2c_init(struct metal_i2c *i2c, unsigned int baud_rate,
                           metal_i2c_mode_t mode) {
20018628:	1101                	addi	sp,sp,-32
2001862a:	ce06                	sw	ra,28(sp)
2001862c:	cc22                	sw	s0,24(sp)
2001862e:	1000                	addi	s0,sp,32
20018630:	fea42623          	sw	a0,-20(s0)
20018634:	feb42423          	sw	a1,-24(s0)
20018638:	fec42223          	sw	a2,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:49
    i2c->vtable->init(i2c, baud_rate, mode);
2001863c:	fec42783          	lw	a5,-20(s0)
20018640:	439c                	lw	a5,0(a5)
20018642:	439c                	lw	a5,0(a5)
20018644:	fe442603          	lw	a2,-28(s0)
20018648:	fe842583          	lw	a1,-24(s0)
2001864c:	fec42503          	lw	a0,-20(s0)
20018650:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:50
}
20018652:	0001                	nop
20018654:	40f2                	lw	ra,28(sp)
20018656:	4462                	lw	s0,24(sp)
20018658:	6105                	addi	sp,sp,32
2001865a:	8082                	ret

2001865c <metal_i2c_write>:
metal_i2c_write():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:62
 * @param stop_bit Enable / Disable STOP condition.
 * @return 0 if the write succeeds.
 */
inline int metal_i2c_write(struct metal_i2c *i2c, unsigned int addr,
                           unsigned int len, unsigned char buf[],
                           metal_i2c_stop_bit_t stop_bit) {
2001865c:	7179                	addi	sp,sp,-48
2001865e:	d606                	sw	ra,44(sp)
20018660:	d422                	sw	s0,40(sp)
20018662:	1800                	addi	s0,sp,48
20018664:	fea42623          	sw	a0,-20(s0)
20018668:	feb42423          	sw	a1,-24(s0)
2001866c:	fec42223          	sw	a2,-28(s0)
20018670:	fed42023          	sw	a3,-32(s0)
20018674:	fce42e23          	sw	a4,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:63
    return i2c->vtable->write(i2c, addr, len, buf, stop_bit);
20018678:	fec42783          	lw	a5,-20(s0)
2001867c:	439c                	lw	a5,0(a5)
2001867e:	43dc                	lw	a5,4(a5)
20018680:	fdc42703          	lw	a4,-36(s0)
20018684:	fe042683          	lw	a3,-32(s0)
20018688:	fe442603          	lw	a2,-28(s0)
2001868c:	fe842583          	lw	a1,-24(s0)
20018690:	fec42503          	lw	a0,-20(s0)
20018694:	9782                	jalr	a5
20018696:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:64
}
20018698:	853e                	mv	a0,a5
2001869a:	50b2                	lw	ra,44(sp)
2001869c:	5422                	lw	s0,40(sp)
2001869e:	6145                	addi	sp,sp,48
200186a0:	8082                	ret

200186a2 <metal_i2c_read>:
metal_i2c_read():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:76
 * @param stop_bit Enable / Disable STOP condition.
 * @return 0 if the read succeeds.
 */
inline int metal_i2c_read(struct metal_i2c *i2c, unsigned int addr,
                          unsigned int len, unsigned char buf[],
                          metal_i2c_stop_bit_t stop_bit) {
200186a2:	7179                	addi	sp,sp,-48
200186a4:	d606                	sw	ra,44(sp)
200186a6:	d422                	sw	s0,40(sp)
200186a8:	1800                	addi	s0,sp,48
200186aa:	fea42623          	sw	a0,-20(s0)
200186ae:	feb42423          	sw	a1,-24(s0)
200186b2:	fec42223          	sw	a2,-28(s0)
200186b6:	fed42023          	sw	a3,-32(s0)
200186ba:	fce42e23          	sw	a4,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:77
    return i2c->vtable->read(i2c, addr, len, buf, stop_bit);
200186be:	fec42783          	lw	a5,-20(s0)
200186c2:	439c                	lw	a5,0(a5)
200186c4:	479c                	lw	a5,8(a5)
200186c6:	fdc42703          	lw	a4,-36(s0)
200186ca:	fe042683          	lw	a3,-32(s0)
200186ce:	fe442603          	lw	a2,-28(s0)
200186d2:	fe842583          	lw	a1,-24(s0)
200186d6:	fec42503          	lw	a0,-20(s0)
200186da:	9782                	jalr	a5
200186dc:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:78
}
200186de:	853e                	mv	a0,a5
200186e0:	50b2                	lw	ra,44(sp)
200186e2:	5422                	lw	s0,40(sp)
200186e4:	6145                	addi	sp,sp,48
200186e6:	8082                	ret

200186e8 <metal_i2c_set_baud_rate>:
metal_i2c_set_baud_rate():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:108
/*! @brief Set the current baud rate of the I2C device.
 * @param i2c The handle for the I2C device.
 * @param baud_rate The desired baud rate of the I2C device.
 * @return 0 If the baud rate is successfully changed.
 */
inline int metal_i2c_set_baud_rate(struct metal_i2c *i2c, int baud_rate) {
200186e8:	1101                	addi	sp,sp,-32
200186ea:	ce06                	sw	ra,28(sp)
200186ec:	cc22                	sw	s0,24(sp)
200186ee:	1000                	addi	s0,sp,32
200186f0:	fea42623          	sw	a0,-20(s0)
200186f4:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:109
    return i2c->vtable->set_baud_rate(i2c, baud_rate);
200186f8:	fec42783          	lw	a5,-20(s0)
200186fc:	439c                	lw	a5,0(a5)
200186fe:	4bd8                	lw	a4,20(a5)
20018700:	fe842783          	lw	a5,-24(s0)
20018704:	85be                	mv	a1,a5
20018706:	fec42503          	lw	a0,-20(s0)
2001870a:	9702                	jalr	a4
2001870c:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:110
}
2001870e:	853e                	mv	a0,a5
20018710:	40f2                	lw	ra,28(sp)
20018712:	4462                	lw	s0,24(sp)
20018714:	6105                	addi	sp,sp,32
20018716:	8082                	ret

20018718 <metal_i2c_get_device>:
metal_i2c_get_device():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/i2c.c:21
                                     unsigned char txbuf[], unsigned int txlen,
                                     unsigned char rxbuf[], unsigned int rxlen);
extern inline int metal_i2c_get_baud_rate(struct metal_i2c *i2c);
extern inline int metal_i2c_set_baud_rate(struct metal_i2c *i2c, int baud_rate);

struct metal_i2c *metal_i2c_get_device(unsigned int device_num) {
20018718:	1101                	addi	sp,sp,-32
2001871a:	ce22                	sw	s0,28(sp)
2001871c:	1000                	addi	s0,sp,32
2001871e:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/i2c.c:23
#if __METAL_DT_MAX_I2CS > 0
    if (device_num < __METAL_DT_MAX_I2CS) {
20018722:	fec42783          	lw	a5,-20(s0)
20018726:	eb99                	bnez	a5,2001873c <metal_i2c_get_device+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/i2c.c:24
        return (struct metal_i2c *)__metal_i2c_table[device_num];
20018728:	800017b7          	lui	a5,0x80001
2001872c:	fec42703          	lw	a4,-20(s0)
20018730:	070a                	slli	a4,a4,0x2
20018732:	ac478793          	addi	a5,a5,-1340 # 80000ac4 <metal_segment_heap_target_end+0xfffff304>
20018736:	97ba                	add	a5,a5,a4
20018738:	439c                	lw	a5,0(a5)
2001873a:	a011                	j	2001873e <metal_i2c_get_device+0x26>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/i2c.c:27
    }
#endif
    return NULL;
2001873c:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/i2c.c:28
}
2001873e:	853e                	mv	a0,a5
20018740:	4472                	lw	s0,28(sp)
20018742:	6105                	addi	sp,sp,32
20018744:	8082                	ret

20018746 <metal_shutdown>:
metal_shutdown():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/shutdown.c:17
    __metal_shutdown_exit(__METAL_DT_SHUTDOWN_HANDLE, code);
}
#else
#pragma message(                                                               \
    "There is no defined shutdown mechanism, metal_shutdown() will spin.")
void metal_shutdown(int code) {
20018746:	1101                	addi	sp,sp,-32
20018748:	ce22                	sw	s0,28(sp)
2001874a:	1000                	addi	s0,sp,32
2001874c:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/shutdown.c:19 (discriminator 1)
    while (1) {
        __asm__ volatile("nop");
20018750:	0001                	nop
20018752:	bffd                	j	20018750 <metal_shutdown+0xa>

20018754 <metal_gettimeofday>:
metal_gettimeofday():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:9
#include <metal/time.h>
#include <metal/timer.h>

#include <stddef.h>

int metal_gettimeofday(struct timeval *tp, void *tzp) {
20018754:	7139                	addi	sp,sp,-64
20018756:	de06                	sw	ra,60(sp)
20018758:	dc22                	sw	s0,56(sp)
2001875a:	da4a                	sw	s2,52(sp)
2001875c:	d84e                	sw	s3,48(sp)
2001875e:	0080                	addi	s0,sp,64
20018760:	fca42623          	sw	a0,-52(s0)
20018764:	fcb42423          	sw	a1,-56(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:12
    int rv;
    unsigned long long mcc, timebase;
    rv = metal_timer_get_cyclecount(0, &mcc);
20018768:	fe040793          	addi	a5,s0,-32
2001876c:	85be                	mv	a1,a5
2001876e:	4501                	li	a0,0
20018770:	24d1                	jal	20018a34 <metal_timer_get_cyclecount>
20018772:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:13
    if (rv != 0) {
20018776:	fec42783          	lw	a5,-20(s0)
2001877a:	c399                	beqz	a5,20018780 <metal_gettimeofday+0x2c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:14
        return -1;
2001877c:	57fd                	li	a5,-1
2001877e:	a07d                	j	2001882c <metal_gettimeofday+0xd8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:16
    }
    rv = metal_timer_get_timebase_frequency(0, &timebase);
20018780:	fd840793          	addi	a5,s0,-40
20018784:	85be                	mv	a1,a5
20018786:	4501                	li	a0,0
20018788:	2cdd                	jal	20018a7e <metal_timer_get_timebase_frequency>
2001878a:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:17
    if (rv != 0) {
2001878e:	fec42783          	lw	a5,-20(s0)
20018792:	c399                	beqz	a5,20018798 <metal_gettimeofday+0x44>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:18
        return -1;
20018794:	57fd                	li	a5,-1
20018796:	a859                	j	2001882c <metal_gettimeofday+0xd8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:20
    }
    tp->tv_sec = mcc / timebase;
20018798:	fe042783          	lw	a5,-32(s0)
2001879c:	fe442803          	lw	a6,-28(s0)
200187a0:	fd842683          	lw	a3,-40(s0)
200187a4:	fdc42703          	lw	a4,-36(s0)
200187a8:	8636                	mv	a2,a3
200187aa:	86ba                	mv	a3,a4
200187ac:	853e                	mv	a0,a5
200187ae:	85c2                	mv	a1,a6
200187b0:	2df9                	jal	20018e8e <__udivdi3>
200187b2:	87aa                	mv	a5,a0
200187b4:	882e                	mv	a6,a1
200187b6:	fcc42703          	lw	a4,-52(s0)
200187ba:	c31c                	sw	a5,0(a4)
200187bc:	01072223          	sw	a6,4(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:21
    tp->tv_usec = mcc % timebase * 1000000 / timebase;
200187c0:	fe042783          	lw	a5,-32(s0)
200187c4:	fe442803          	lw	a6,-28(s0)
200187c8:	fd842683          	lw	a3,-40(s0)
200187cc:	fdc42703          	lw	a4,-36(s0)
200187d0:	8636                	mv	a2,a3
200187d2:	86ba                	mv	a3,a4
200187d4:	853e                	mv	a0,a5
200187d6:	85c2                	mv	a1,a6
200187d8:	215000ef          	jal	ra,200191ec <__umoddi3>
200187dc:	87aa                	mv	a5,a0
200187de:	882e                	mv	a6,a1
200187e0:	000f4737          	lui	a4,0xf4
200187e4:	24070713          	addi	a4,a4,576 # f4240 <__heap_size+0xf3a40>
200187e8:	02e806b3          	mul	a3,a6,a4
200187ec:	4701                	li	a4,0
200187ee:	02e78733          	mul	a4,a5,a4
200187f2:	96ba                	add	a3,a3,a4
200187f4:	000f4737          	lui	a4,0xf4
200187f8:	24070713          	addi	a4,a4,576 # f4240 <__heap_size+0xf3a40>
200187fc:	02e78633          	mul	a2,a5,a4
20018800:	02e7b9b3          	mulhu	s3,a5,a4
20018804:	8932                	mv	s2,a2
20018806:	013687b3          	add	a5,a3,s3
2001880a:	89be                	mv	s3,a5
2001880c:	fd842783          	lw	a5,-40(s0)
20018810:	fdc42803          	lw	a6,-36(s0)
20018814:	863e                	mv	a2,a5
20018816:	86c2                	mv	a3,a6
20018818:	854a                	mv	a0,s2
2001881a:	85ce                	mv	a1,s3
2001881c:	2d8d                	jal	20018e8e <__udivdi3>
2001881e:	87aa                	mv	a5,a0
20018820:	882e                	mv	a6,a1
20018822:	873e                	mv	a4,a5
20018824:	fcc42783          	lw	a5,-52(s0)
20018828:	c798                	sw	a4,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:22
    return 0;
2001882a:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:23 (discriminator 1)
}
2001882c:	853e                	mv	a0,a5
2001882e:	50f2                	lw	ra,60(sp)
20018830:	5462                	lw	s0,56(sp)
20018832:	5952                	lw	s2,52(sp)
20018834:	59c2                	lw	s3,48(sp)
20018836:	6121                	addi	sp,sp,64
20018838:	8082                	ret

2001883a <metal_time>:
metal_time():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:25

time_t metal_time(void) {
2001883a:	1101                	addi	sp,sp,-32
2001883c:	ce06                	sw	ra,28(sp)
2001883e:	cc22                	sw	s0,24(sp)
20018840:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:28
    struct timeval now;

    if (metal_gettimeofday(&now, NULL) < 0)
20018842:	fe040793          	addi	a5,s0,-32
20018846:	4581                	li	a1,0
20018848:	853e                	mv	a0,a5
2001884a:	f0bff0ef          	jal	ra,20018754 <metal_gettimeofday>
2001884e:	87aa                	mv	a5,a0
20018850:	0007d863          	bgez	a5,20018860 <metal_time+0x26>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:29
        now.tv_sec = (time_t)-1;
20018854:	57fd                	li	a5,-1
20018856:	587d                	li	a6,-1
20018858:	fef42023          	sw	a5,-32(s0)
2001885c:	ff042223          	sw	a6,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:31

    return now.tv_sec;
20018860:	fe042783          	lw	a5,-32(s0)
20018864:	fe442803          	lw	a6,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:32
}
20018868:	853e                	mv	a0,a5
2001886a:	85c2                	mv	a1,a6
2001886c:	40f2                	lw	ra,28(sp)
2001886e:	4462                	lw	s0,24(sp)
20018870:	6105                	addi	sp,sp,32
20018872:	8082                	ret

20018874 <metal_uart_init>:
metal_uart_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:59
 more than once.
 *
 * @param uart The UART device handle
 * @param baud_rate the baud rate to set the UART to
 */
__inline__ void metal_uart_init(struct metal_uart *uart, int baud_rate) {
20018874:	1101                	addi	sp,sp,-32
20018876:	ce06                	sw	ra,28(sp)
20018878:	cc22                	sw	s0,24(sp)
2001887a:	1000                	addi	s0,sp,32
2001887c:	fea42623          	sw	a0,-20(s0)
20018880:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:60
    uart->vtable->init(uart, baud_rate);
20018884:	fec42783          	lw	a5,-20(s0)
20018888:	439c                	lw	a5,0(a5)
2001888a:	439c                	lw	a5,0(a5)
2001888c:	fe842583          	lw	a1,-24(s0)
20018890:	fec42503          	lw	a0,-20(s0)
20018894:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:61
}
20018896:	0001                	nop
20018898:	40f2                	lw	ra,28(sp)
2001889a:	4462                	lw	s0,24(sp)
2001889c:	6105                	addi	sp,sp,32
2001889e:	8082                	ret

200188a0 <metal_uart_putc>:
metal_uart_putc():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:69
 * @brief Output a character over the UART
 * @param uart The UART device handle
 * @param c The character to send over the UART
 * @return 0 upon success
 */
__inline__ int metal_uart_putc(struct metal_uart *uart, int c) {
200188a0:	1101                	addi	sp,sp,-32
200188a2:	ce06                	sw	ra,28(sp)
200188a4:	cc22                	sw	s0,24(sp)
200188a6:	1000                	addi	s0,sp,32
200188a8:	fea42623          	sw	a0,-20(s0)
200188ac:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:70
    return uart->vtable->putc(uart, c);
200188b0:	fec42783          	lw	a5,-20(s0)
200188b4:	439c                	lw	a5,0(a5)
200188b6:	43dc                	lw	a5,4(a5)
200188b8:	fe842583          	lw	a1,-24(s0)
200188bc:	fec42503          	lw	a0,-20(s0)
200188c0:	9782                	jalr	a5
200188c2:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:71
}
200188c4:	853e                	mv	a0,a5
200188c6:	40f2                	lw	ra,28(sp)
200188c8:	4462                	lw	s0,24(sp)
200188ca:	6105                	addi	sp,sp,32
200188cc:	8082                	ret

200188ce <metal_uart_set_baud_rate>:
metal_uart_set_baud_rate():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:111
 * @param uart The UART device handle
 * @param baud_rate The baud rate to configure
 * @return the new baud rate of the UART
 */
__inline__ int metal_uart_set_baud_rate(struct metal_uart *uart,
                                        int baud_rate) {
200188ce:	1101                	addi	sp,sp,-32
200188d0:	ce06                	sw	ra,28(sp)
200188d2:	cc22                	sw	s0,24(sp)
200188d4:	1000                	addi	s0,sp,32
200188d6:	fea42623          	sw	a0,-20(s0)
200188da:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:112
    return uart->vtable->set_baud_rate(uart, baud_rate);
200188de:	fec42783          	lw	a5,-20(s0)
200188e2:	439c                	lw	a5,0(a5)
200188e4:	4bdc                	lw	a5,20(a5)
200188e6:	fe842583          	lw	a1,-24(s0)
200188ea:	fec42503          	lw	a0,-20(s0)
200188ee:	9782                	jalr	a5
200188f0:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:113
}
200188f2:	853e                	mv	a0,a5
200188f4:	40f2                	lw	ra,28(sp)
200188f6:	4462                	lw	s0,24(sp)
200188f8:	6105                	addi	sp,sp,32
200188fa:	8082                	ret
200188fc:	0000                	unimp
	...

20018900 <__metal_vector_table>:
IRQ_0():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:96
#endif
.option norvc
.global __metal_vector_table
__metal_vector_table:
IRQ_0:
        j metal_interrupt_vector_handler
20018900:	e0efb06f          	j	20013f0e <metal_interrupt_vector_handler>

20018904 <IRQ_1>:
IRQ_1():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:98
IRQ_1:
        j metal_interrupt_vector_handler
20018904:	e0afb06f          	j	20013f0e <metal_interrupt_vector_handler>

20018908 <IRQ_2>:
IRQ_2():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:100
IRQ_2:
        j metal_interrupt_vector_handler
20018908:	e06fb06f          	j	20013f0e <metal_interrupt_vector_handler>

2001890c <IRQ_3>:
IRQ_3():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:102
IRQ_3:
        j metal_software_interrupt_vector_handler
2001890c:	e30fb06f          	j	20013f3c <metal_software_interrupt_vector_handler>

20018910 <IRQ_4>:
IRQ_4():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:104
IRQ_4:
        j metal_interrupt_vector_handler
20018910:	dfefb06f          	j	20013f0e <metal_interrupt_vector_handler>

20018914 <IRQ_5>:
IRQ_5():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:106
IRQ_5:
        j metal_interrupt_vector_handler
20018914:	dfafb06f          	j	20013f0e <metal_interrupt_vector_handler>

20018918 <IRQ_6>:
IRQ_6():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:108
IRQ_6:
        j metal_interrupt_vector_handler
20018918:	df6fb06f          	j	20013f0e <metal_interrupt_vector_handler>

2001891c <IRQ_7>:
IRQ_7():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:110
IRQ_7:
        j metal_timer_interrupt_vector_handler
2001891c:	f1afb06f          	j	20014036 <metal_timer_interrupt_vector_handler>

20018920 <IRQ_8>:
IRQ_8():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:112
IRQ_8:
        j metal_interrupt_vector_handler
20018920:	deefb06f          	j	20013f0e <metal_interrupt_vector_handler>

20018924 <IRQ_9>:
IRQ_9():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:114
IRQ_9:
        j metal_interrupt_vector_handler
20018924:	deafb06f          	j	20013f0e <metal_interrupt_vector_handler>

20018928 <IRQ_10>:
IRQ_10():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:116
IRQ_10:
        j metal_interrupt_vector_handler
20018928:	de6fb06f          	j	20013f0e <metal_interrupt_vector_handler>

2001892c <IRQ_11>:
IRQ_11():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:118
IRQ_11:
        j metal_interrupt_vector_handler
2001892c:	de2fb06f          	j	20013f0e <metal_interrupt_vector_handler>

20018930 <IRQ_12>:
IRQ_12():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:120
IRQ_12:
        j metal_interrupt_vector_handler
20018930:	ddefb06f          	j	20013f0e <metal_interrupt_vector_handler>

20018934 <IRQ_13>:
IRQ_13():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:122
IRQ_13:
        j metal_interrupt_vector_handler
20018934:	ddafb06f          	j	20013f0e <metal_interrupt_vector_handler>

20018938 <IRQ_14>:
IRQ_14():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:124
IRQ_14:
        j metal_interrupt_vector_handler
20018938:	dd6fb06f          	j	20013f0e <metal_interrupt_vector_handler>

2001893c <IRQ_15>:
IRQ_15():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:126
IRQ_15:
        j metal_interrupt_vector_handler
2001893c:	dd2fb06f          	j	20013f0e <metal_interrupt_vector_handler>

20018940 <IRQ_LC0>:
IRQ_LC0():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:128
IRQ_LC0:
        j metal_lc0_interrupt_vector_handler
20018940:	a3bfb06f          	j	2001437a <metal_lc0_interrupt_vector_handler>

20018944 <IRQ_LC1>:
IRQ_LC1():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:130
IRQ_LC1:
        j metal_lc1_interrupt_vector_handler
20018944:	acdfb06f          	j	20014410 <metal_lc1_interrupt_vector_handler>

20018948 <IRQ_LC2>:
IRQ_LC2():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:132
IRQ_LC2:
        j metal_lc2_interrupt_vector_handler
20018948:	b5ffb06f          	j	200144a6 <metal_lc2_interrupt_vector_handler>

2001894c <IRQ_LC3>:
IRQ_LC3():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:134
IRQ_LC3:
        j metal_lc3_interrupt_vector_handler
2001894c:	bf1fb06f          	j	2001453c <metal_lc3_interrupt_vector_handler>

20018950 <IRQ_LC4>:
IRQ_LC4():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:136
IRQ_LC4:
        j metal_lc4_interrupt_vector_handler
20018950:	c83fb06f          	j	200145d2 <metal_lc4_interrupt_vector_handler>

20018954 <IRQ_LC5>:
IRQ_LC5():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:138
IRQ_LC5:
        j metal_lc5_interrupt_vector_handler
20018954:	d15fb06f          	j	20014668 <metal_lc5_interrupt_vector_handler>

20018958 <IRQ_LC6>:
IRQ_LC6():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:140
IRQ_LC6:
        j metal_lc6_interrupt_vector_handler
20018958:	da7fb06f          	j	200146fe <metal_lc6_interrupt_vector_handler>

2001895c <IRQ_LC7>:
IRQ_LC7():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:142
IRQ_LC7:
        j metal_lc7_interrupt_vector_handler
2001895c:	e39fb06f          	j	20014794 <metal_lc7_interrupt_vector_handler>

20018960 <IRQ_LC8>:
IRQ_LC8():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:144
IRQ_LC8:
        j metal_lc8_interrupt_vector_handler
20018960:	ecbfb06f          	j	2001482a <metal_lc8_interrupt_vector_handler>

20018964 <IRQ_LC9>:
IRQ_LC9():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:146
IRQ_LC9:
        j metal_lc9_interrupt_vector_handler
20018964:	f5dfb06f          	j	200148c0 <metal_lc9_interrupt_vector_handler>

20018968 <IRQ_LC10>:
IRQ_LC10():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:148
IRQ_LC10:
        j metal_lc10_interrupt_vector_handler
20018968:	feffb06f          	j	20014956 <metal_lc10_interrupt_vector_handler>

2001896c <IRQ_LC11>:
IRQ_LC11():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:150
IRQ_LC11:
        j metal_lc11_interrupt_vector_handler
2001896c:	880fc06f          	j	200149ec <metal_lc11_interrupt_vector_handler>

20018970 <IRQ_LC12>:
IRQ_LC12():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:152
IRQ_LC12:
        j metal_lc12_interrupt_vector_handler
20018970:	912fc06f          	j	20014a82 <metal_lc12_interrupt_vector_handler>

20018974 <IRQ_LC13>:
IRQ_LC13():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:154
IRQ_LC13:
        j metal_lc13_interrupt_vector_handler
20018974:	9a4fc06f          	j	20014b18 <metal_lc13_interrupt_vector_handler>

20018978 <IRQ_LC14>:
IRQ_LC14():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:156
IRQ_LC14:
        j metal_lc14_interrupt_vector_handler
20018978:	a36fc06f          	j	20014bae <metal_lc14_interrupt_vector_handler>

2001897c <IRQ_LC15>:
IRQ_LC15():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:158
IRQ_LC15:
        j metal_lc15_interrupt_vector_handler
2001897c:	ac8fc06f          	j	20014c44 <metal_lc15_interrupt_vector_handler>

20018980 <__metal_driver_fixed_clock_rate>:
__metal_driver_fixed_clock_rate():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:208
{
20018980:	1101                	addi	sp,sp,-32
20018982:	ce22                	sw	s0,28(sp)
20018984:	1000                	addi	s0,sp,32
20018986:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:209
	if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_0) {
2001898a:	fec42703          	lw	a4,-20(s0)
2001898e:	800007b7          	lui	a5,0x80000
20018992:	06078793          	addi	a5,a5,96 # 80000060 <metal_segment_heap_target_end+0xffffe8a0>
20018996:	00f71763          	bne	a4,a5,200189a4 <__metal_driver_fixed_clock_rate+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:210
		return METAL_FIXED_CLOCK_0_CLOCK_FREQUENCY;
2001899a:	00f427b7          	lui	a5,0xf42
2001899e:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
200189a2:	a099                	j	200189e8 <__metal_driver_fixed_clock_rate+0x68>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:212
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_2) {
200189a4:	fec42703          	lw	a4,-20(s0)
200189a8:	800007b7          	lui	a5,0x80000
200189ac:	06c78793          	addi	a5,a5,108 # 8000006c <metal_segment_heap_target_end+0xffffe8ac>
200189b0:	00f71763          	bne	a4,a5,200189be <__metal_driver_fixed_clock_rate+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:213
		return METAL_FIXED_CLOCK_2_CLOCK_FREQUENCY;
200189b4:	044aa7b7          	lui	a5,0x44aa
200189b8:	20078793          	addi	a5,a5,512 # 44aa200 <__heap_size+0x44a9a00>
200189bc:	a035                	j	200189e8 <__metal_driver_fixed_clock_rate+0x68>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:215
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_5) {
200189be:	fec42703          	lw	a4,-20(s0)
200189c2:	800007b7          	lui	a5,0x80000
200189c6:	07878793          	addi	a5,a5,120 # 80000078 <metal_segment_heap_target_end+0xffffe8b8>
200189ca:	00f71463          	bne	a4,a5,200189d2 <__metal_driver_fixed_clock_rate+0x52>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:216
		return METAL_FIXED_CLOCK_5_CLOCK_FREQUENCY;
200189ce:	67a1                	lui	a5,0x8
200189d0:	a821                	j	200189e8 <__metal_driver_fixed_clock_rate+0x68>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:218
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_6) {
200189d2:	fec42703          	lw	a4,-20(s0)
200189d6:	800007b7          	lui	a5,0x80000
200189da:	08478793          	addi	a5,a5,132 # 80000084 <metal_segment_heap_target_end+0xffffe8c4>
200189de:	00f71463          	bne	a4,a5,200189e6 <__metal_driver_fixed_clock_rate+0x66>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:219
		return METAL_FIXED_CLOCK_6_CLOCK_FREQUENCY;
200189e2:	67a1                	lui	a5,0x8
200189e4:	a011                	j	200189e8 <__metal_driver_fixed_clock_rate+0x68>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:222
		return 0;
200189e6:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:224
}
200189e8:	853e                	mv	a0,a5
200189ea:	4472                	lw	s0,28(sp)
200189ec:	6105                	addi	sp,sp,32
200189ee:	8082                	ret

200189f0 <__metal_driver_fixed_clock_get_rate_hz>:
__metal_driver_fixed_clock_get_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/fixed-clock.c:12

#include <metal/drivers/fixed-clock.h>
#include <metal/machine.h>
#include <stddef.h>

long __metal_driver_fixed_clock_get_rate_hz(const struct metal_clock *gclk) {
200189f0:	1101                	addi	sp,sp,-32
200189f2:	ce06                	sw	ra,28(sp)
200189f4:	cc22                	sw	s0,24(sp)
200189f6:	1000                	addi	s0,sp,32
200189f8:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/fixed-clock.c:13
    return __metal_driver_fixed_clock_rate(gclk);
200189fc:	fec42503          	lw	a0,-20(s0)
20018a00:	f81ff0ef          	jal	ra,20018980 <__metal_driver_fixed_clock_rate>
20018a04:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/fixed-clock.c:14
}
20018a06:	853e                	mv	a0,a5
20018a08:	40f2                	lw	ra,28(sp)
20018a0a:	4462                	lw	s0,24(sp)
20018a0c:	6105                	addi	sp,sp,32
20018a0e:	8082                	ret

20018a10 <__metal_driver_fixed_clock_set_rate_hz>:
__metal_driver_fixed_clock_set_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/fixed-clock.c:17

long __metal_driver_fixed_clock_set_rate_hz(struct metal_clock *gclk,
                                            long target_hz) {
20018a10:	1101                	addi	sp,sp,-32
20018a12:	ce06                	sw	ra,28(sp)
20018a14:	cc22                	sw	s0,24(sp)
20018a16:	1000                	addi	s0,sp,32
20018a18:	fea42623          	sw	a0,-20(s0)
20018a1c:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/fixed-clock.c:18
    return __metal_driver_fixed_clock_get_rate_hz(gclk);
20018a20:	fec42503          	lw	a0,-20(s0)
20018a24:	fcdff0ef          	jal	ra,200189f0 <__metal_driver_fixed_clock_get_rate_hz>
20018a28:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/fixed-clock.c:19
}
20018a2a:	853e                	mv	a0,a5
20018a2c:	40f2                	lw	ra,28(sp)
20018a2e:	4462                	lw	s0,24(sp)
20018a30:	6105                	addi	sp,sp,32
20018a32:	8082                	ret

20018a34 <metal_timer_get_cyclecount>:
metal_timer_get_cyclecount():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:15
#endif

#if defined(__METAL_DT_MAX_HARTS)
/* This implementation serves as a small shim that interfaces with the first
 * timer on a system. */
int metal_timer_get_cyclecount(int hartid, unsigned long long *mcc) {
20018a34:	7179                	addi	sp,sp,-48
20018a36:	d606                	sw	ra,44(sp)
20018a38:	d422                	sw	s0,40(sp)
20018a3a:	1800                	addi	s0,sp,48
20018a3c:	fca42e23          	sw	a0,-36(s0)
20018a40:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:16
    struct metal_cpu *cpu = metal_cpu_get(hartid);
20018a44:	fdc42783          	lw	a5,-36(s0)
20018a48:	853e                	mv	a0,a5
20018a4a:	b97ff0ef          	jal	ra,200185e0 <metal_cpu_get>
20018a4e:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:18

    if (cpu) {
20018a52:	fec42783          	lw	a5,-20(s0)
20018a56:	cf91                	beqz	a5,20018a72 <metal_timer_get_cyclecount+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:19
        *mcc = metal_cpu_get_timer(cpu);
20018a58:	fec42503          	lw	a0,-20(s0)
20018a5c:	b0bff0ef          	jal	ra,20018566 <metal_cpu_get_timer>
20018a60:	87aa                	mv	a5,a0
20018a62:	882e                	mv	a6,a1
20018a64:	fd842703          	lw	a4,-40(s0)
20018a68:	c31c                	sw	a5,0(a4)
20018a6a:	01072223          	sw	a6,4(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:20
        return 0;
20018a6e:	4781                	li	a5,0
20018a70:	a011                	j	20018a74 <metal_timer_get_cyclecount+0x40>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:22
    }
    return -1;
20018a72:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:23
}
20018a74:	853e                	mv	a0,a5
20018a76:	50b2                	lw	ra,44(sp)
20018a78:	5422                	lw	s0,40(sp)
20018a7a:	6145                	addi	sp,sp,48
20018a7c:	8082                	ret

20018a7e <metal_timer_get_timebase_frequency>:
metal_timer_get_timebase_frequency():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:26

int metal_timer_get_timebase_frequency(int hartid,
                                       unsigned long long *timebase) {
20018a7e:	7179                	addi	sp,sp,-48
20018a80:	d606                	sw	ra,44(sp)
20018a82:	d422                	sw	s0,40(sp)
20018a84:	1800                	addi	s0,sp,48
20018a86:	fca42e23          	sw	a0,-36(s0)
20018a8a:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:27
    struct metal_cpu *cpu = metal_cpu_get(hartid);
20018a8e:	fdc42783          	lw	a5,-36(s0)
20018a92:	853e                	mv	a0,a5
20018a94:	b4dff0ef          	jal	ra,200185e0 <metal_cpu_get>
20018a98:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:29

    if (cpu) {
20018a9c:	fec42783          	lw	a5,-20(s0)
20018aa0:	cf91                	beqz	a5,20018abc <metal_timer_get_timebase_frequency+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:30
        *timebase = metal_cpu_get_timebase(cpu);
20018aa2:	fec42503          	lw	a0,-20(s0)
20018aa6:	aebff0ef          	jal	ra,20018590 <metal_cpu_get_timebase>
20018aaa:	87aa                	mv	a5,a0
20018aac:	882e                	mv	a6,a1
20018aae:	fd842703          	lw	a4,-40(s0)
20018ab2:	c31c                	sw	a5,0(a4)
20018ab4:	01072223          	sw	a6,4(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:31
        return 0;
20018ab8:	4781                	li	a5,0
20018aba:	a011                	j	20018abe <metal_timer_get_timebase_frequency+0x40>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:33
    }
    return -1;
20018abc:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:34
}
20018abe:	853e                	mv	a0,a5
20018ac0:	50b2                	lw	ra,44(sp)
20018ac2:	5422                	lw	s0,40(sp)
20018ac4:	6145                	addi	sp,sp,48
20018ac6:	8082                	ret

20018ac8 <_close>:
_close():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_close.c:3
#include <errno.h>

int _close(int file) {
20018ac8:	1101                	addi	sp,sp,-32
20018aca:	ce06                	sw	ra,28(sp)
20018acc:	cc22                	sw	s0,24(sp)
20018ace:	1000                	addi	s0,sp,32
20018ad0:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_close.c:4
    errno = ENOSYS;
20018ad4:	2a51                	jal	20018c68 <__errno>
20018ad6:	872a                	mv	a4,a0
20018ad8:	05800793          	li	a5,88
20018adc:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_close.c:5
    return -1;
20018ade:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_close.c:6
}
20018ae0:	853e                	mv	a0,a5
20018ae2:	40f2                	lw	ra,28(sp)
20018ae4:	4462                	lw	s0,24(sp)
20018ae6:	6105                	addi	sp,sp,32
20018ae8:	8082                	ret

20018aea <_fstat>:
_fstat():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_fstat.c:4
#include <errno.h>
#include <sys/stat.h>

int _fstat(int file, struct stat *st) {
20018aea:	1101                	addi	sp,sp,-32
20018aec:	ce06                	sw	ra,28(sp)
20018aee:	cc22                	sw	s0,24(sp)
20018af0:	1000                	addi	s0,sp,32
20018af2:	fea42623          	sw	a0,-20(s0)
20018af6:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_fstat.c:5
    errno = -ENOSYS;
20018afa:	22bd                	jal	20018c68 <__errno>
20018afc:	872a                	mv	a4,a0
20018afe:	fa800793          	li	a5,-88
20018b02:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_fstat.c:6
    return -1;
20018b04:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_fstat.c:7
}
20018b06:	853e                	mv	a0,a5
20018b08:	40f2                	lw	ra,28(sp)
20018b0a:	4462                	lw	s0,24(sp)
20018b0c:	6105                	addi	sp,sp,32
20018b0e:	8082                	ret

20018b10 <_isatty>:
_isatty():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_isatty.c:3
#include <unistd.h>

int _isatty(int file) { return (file == STDOUT_FILENO); }
20018b10:	1101                	addi	sp,sp,-32
20018b12:	ce22                	sw	s0,28(sp)
20018b14:	1000                	addi	s0,sp,32
20018b16:	fea42623          	sw	a0,-20(s0)
20018b1a:	fec42783          	lw	a5,-20(s0)
20018b1e:	17fd                	addi	a5,a5,-1
20018b20:	0017b793          	seqz	a5,a5
20018b24:	0ff7f793          	andi	a5,a5,255
20018b28:	853e                	mv	a0,a5
20018b2a:	4472                	lw	s0,28(sp)
20018b2c:	6105                	addi	sp,sp,32
20018b2e:	8082                	ret

20018b30 <_lseek>:
_lseek():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_lseek.c:4
#include <errno.h>
#include <sys/types.h>

off_t _lseek(int file, off_t ptr, int dir) {
20018b30:	1101                	addi	sp,sp,-32
20018b32:	ce06                	sw	ra,28(sp)
20018b34:	cc22                	sw	s0,24(sp)
20018b36:	1000                	addi	s0,sp,32
20018b38:	fea42623          	sw	a0,-20(s0)
20018b3c:	feb42423          	sw	a1,-24(s0)
20018b40:	fec42223          	sw	a2,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_lseek.c:5
    errno = ENOSYS;
20018b44:	2215                	jal	20018c68 <__errno>
20018b46:	872a                	mv	a4,a0
20018b48:	05800793          	li	a5,88
20018b4c:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_lseek.c:6
    return -1;
20018b4e:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_lseek.c:7
}
20018b50:	853e                	mv	a0,a5
20018b52:	40f2                	lw	ra,28(sp)
20018b54:	4462                	lw	s0,24(sp)
20018b56:	6105                	addi	sp,sp,32
20018b58:	8082                	ret

20018b5a <_read>:
_read():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_read.c:4
#include <errno.h>
#include <sys/types.h>

ssize_t _read(int file, void *ptr, size_t len) {
20018b5a:	1101                	addi	sp,sp,-32
20018b5c:	ce06                	sw	ra,28(sp)
20018b5e:	cc22                	sw	s0,24(sp)
20018b60:	1000                	addi	s0,sp,32
20018b62:	fea42623          	sw	a0,-20(s0)
20018b66:	feb42423          	sw	a1,-24(s0)
20018b6a:	fec42223          	sw	a2,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_read.c:5
    errno = ENOSYS;
20018b6e:	28ed                	jal	20018c68 <__errno>
20018b70:	872a                	mv	a4,a0
20018b72:	05800793          	li	a5,88
20018b76:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_read.c:6
    return -1;
20018b78:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_read.c:7
}
20018b7a:	853e                	mv	a0,a5
20018b7c:	40f2                	lw	ra,28(sp)
20018b7e:	4462                	lw	s0,24(sp)
20018b80:	6105                	addi	sp,sp,32
20018b82:	8082                	ret

20018b84 <_sbrk>:
_sbrk():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:24
int _brk(void *addr) {
    __brk = addr;
    return 0;
}

char *_sbrk(ptrdiff_t incr) {
20018b84:	7179                	addi	sp,sp,-48
20018b86:	d606                	sw	ra,44(sp)
20018b88:	d422                	sw	s0,40(sp)
20018b8a:	1800                	addi	s0,sp,48
20018b8c:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:25
    char *old = __brk;
20018b90:	8481a783          	lw	a5,-1976(gp) # 80000b08 <__brk>
20018b94:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:28

    /* If __heap_size == 0, we can't allocate memory on the heap */
    if (&metal_segment_heap_target_start == &metal_segment_heap_target_end) {
20018b98:	d0018713          	addi	a4,gp,-768 # 80000fc0 <_sp>
20018b9c:	50018793          	addi	a5,gp,1280 # 800017c0 <metal_segment_heap_target_end>
20018ba0:	00f71463          	bne	a4,a5,20018ba8 <_sbrk+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:29
        return (void *)-1;
20018ba4:	57fd                	li	a5,-1
20018ba6:	a83d                	j	20018be4 <_sbrk+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:33
    }

    /* Don't move the break past the end of the heap */
    if ((__brk + incr) < &metal_segment_heap_target_end) {
20018ba8:	8481a703          	lw	a4,-1976(gp) # 80000b08 <__brk>
20018bac:	fdc42783          	lw	a5,-36(s0)
20018bb0:	973e                	add	a4,a4,a5
20018bb2:	50018793          	addi	a5,gp,1280 # 800017c0 <metal_segment_heap_target_end>
20018bb6:	02f77263          	bgeu	a4,a5,20018bda <_sbrk+0x56>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:34
        __brk += incr;
20018bba:	8481a703          	lw	a4,-1976(gp) # 80000b08 <__brk>
20018bbe:	fdc42783          	lw	a5,-36(s0)
20018bc2:	973e                	add	a4,a4,a5
20018bc4:	84e1a423          	sw	a4,-1976(gp) # 80000b08 <__brk>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:40
    } else {
        __brk = &metal_segment_heap_target_end;
        return (void *)-1;
    }
    /* Scrub out allocated memory to avoid spurious ECC errors */
    metal_mem_scrub(old, incr);
20018bc8:	fdc42583          	lw	a1,-36(s0)
20018bcc:	fec42503          	lw	a0,-20(s0)
20018bd0:	cc2f70ef          	jal	ra,20010092 <metal_mem_scrub>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:42

    return old;
20018bd4:	fec42783          	lw	a5,-20(s0)
20018bd8:	a031                	j	20018be4 <_sbrk+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:36
        __brk = &metal_segment_heap_target_end;
20018bda:	50018713          	addi	a4,gp,1280 # 800017c0 <metal_segment_heap_target_end>
20018bde:	84e1a423          	sw	a4,-1976(gp) # 80000b08 <__brk>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:37
        return (void *)-1;
20018be2:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:43
}
20018be4:	853e                	mv	a0,a5
20018be6:	50b2                	lw	ra,44(sp)
20018be8:	5422                	lw	s0,40(sp)
20018bea:	6145                	addi	sp,sp,48
20018bec:	8082                	ret

20018bee <_write>:
_write():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:7
#include <metal/tty.h>
#include <sys/types.h>
#include <unistd.h>

/* Write to a file.  */
ssize_t _write(int file, const void *ptr, size_t len) {
20018bee:	7179                	addi	sp,sp,-48
20018bf0:	d606                	sw	ra,44(sp)
20018bf2:	d422                	sw	s0,40(sp)
20018bf4:	1800                	addi	s0,sp,48
20018bf6:	fca42e23          	sw	a0,-36(s0)
20018bfa:	fcb42c23          	sw	a1,-40(s0)
20018bfe:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:8
    if (file != STDOUT_FILENO) {
20018c02:	fdc42703          	lw	a4,-36(s0)
20018c06:	4785                	li	a5,1
20018c08:	00f70963          	beq	a4,a5,20018c1a <_write+0x2c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:9
        errno = ENOSYS;
20018c0c:	28b1                	jal	20018c68 <__errno>
20018c0e:	872a                	mv	a4,a0
20018c10:	05800793          	li	a5,88
20018c14:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:10
        return -1;
20018c16:	57fd                	li	a5,-1
20018c18:	a835                	j	20018c54 <_write+0x66>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:13
    }

    const char *bptr = ptr;
20018c1a:	fd842783          	lw	a5,-40(s0)
20018c1e:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:14
    for (size_t i = 0; i < len; ++i)
20018c22:	fe042623          	sw	zero,-20(s0)
20018c26:	a005                	j	20018c46 <_write+0x58>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:15 (discriminator 3)
        metal_tty_putc(bptr[i]);
20018c28:	fe842703          	lw	a4,-24(s0)
20018c2c:	fec42783          	lw	a5,-20(s0)
20018c30:	97ba                	add	a5,a5,a4
20018c32:	0007c783          	lbu	a5,0(a5) # 8000 <__heap_size+0x7800>
20018c36:	853e                	mv	a0,a5
20018c38:	223000ef          	jal	ra,2001965a <metal_tty_putc>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:14 (discriminator 3)
    for (size_t i = 0; i < len; ++i)
20018c3c:	fec42783          	lw	a5,-20(s0)
20018c40:	0785                	addi	a5,a5,1
20018c42:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:14 (discriminator 1)
20018c46:	fec42703          	lw	a4,-20(s0)
20018c4a:	fd442783          	lw	a5,-44(s0)
20018c4e:	fcf76de3          	bltu	a4,a5,20018c28 <_write+0x3a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:16
    return 0;
20018c52:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:17
}
20018c54:	853e                	mv	a0,a5
20018c56:	50b2                	lw	ra,44(sp)
20018c58:	5422                	lw	s0,40(sp)
20018c5a:	6145                	addi	sp,sp,48
20018c5c:	8082                	ret

20018c5e <atexit>:
atexit():
20018c5e:	85aa                	mv	a1,a0
20018c60:	4681                	li	a3,0
20018c62:	4601                	li	a2,0
20018c64:	4501                	li	a0,0
20018c66:	a8e1                	j	20018d3e <__register_exitproc>

20018c68 <__errno>:
__errno():
20018c68:	5ffe8797          	auipc	a5,0x5ffe8
20018c6c:	e6078793          	addi	a5,a5,-416 # 80000ac8 <_impure_ptr>
20018c70:	4388                	lw	a0,0(a5)
20018c72:	8082                	ret

20018c74 <exit>:
exit():
20018c74:	1141                	addi	sp,sp,-16
20018c76:	c422                	sw	s0,8(sp)
20018c78:	c606                	sw	ra,12(sp)
20018c7a:	00000797          	auipc	a5,0x0
20018c7e:	14c78793          	addi	a5,a5,332 # 20018dc6 <__call_exitprocs>
20018c82:	842a                	mv	s0,a0
20018c84:	c399                	beqz	a5,20018c8a <exit+0x16>
20018c86:	4581                	li	a1,0
20018c88:	2a3d                	jal	20018dc6 <__call_exitprocs>
20018c8a:	80c18793          	addi	a5,gp,-2036 # 80000acc <_global_impure_ptr>
20018c8e:	4388                	lw	a0,0(a5)
20018c90:	551c                	lw	a5,40(a0)
20018c92:	c391                	beqz	a5,20018c96 <exit+0x22>
20018c94:	9782                	jalr	a5
20018c96:	8522                	mv	a0,s0
20018c98:	1eb000ef          	jal	ra,20019682 <_exit>

20018c9c <__libc_fini_array>:
__libc_fini_array():
20018c9c:	1141                	addi	sp,sp,-16
20018c9e:	ffff7797          	auipc	a5,0xffff7
20018ca2:	65a78793          	addi	a5,a5,1626 # 200102f8 <__fini_array_end>
20018ca6:	c422                	sw	s0,8(sp)
20018ca8:	ffff7417          	auipc	s0,0xffff7
20018cac:	65040413          	addi	s0,s0,1616 # 200102f8 <__fini_array_end>
20018cb0:	8c1d                	sub	s0,s0,a5
20018cb2:	c226                	sw	s1,4(sp)
20018cb4:	c606                	sw	ra,12(sp)
20018cb6:	8409                	srai	s0,s0,0x2
20018cb8:	84be                	mv	s1,a5
20018cba:	e411                	bnez	s0,20018cc6 <__libc_fini_array+0x2a>
20018cbc:	40b2                	lw	ra,12(sp)
20018cbe:	4422                	lw	s0,8(sp)
20018cc0:	4492                	lw	s1,4(sp)
20018cc2:	0141                	addi	sp,sp,16
20018cc4:	8082                	ret
20018cc6:	147d                	addi	s0,s0,-1
20018cc8:	00241793          	slli	a5,s0,0x2
20018ccc:	97a6                	add	a5,a5,s1
20018cce:	439c                	lw	a5,0(a5)
20018cd0:	9782                	jalr	a5
20018cd2:	b7e5                	j	20018cba <__libc_fini_array+0x1e>

20018cd4 <__libc_init_array>:
__libc_init_array():
20018cd4:	1141                	addi	sp,sp,-16
20018cd6:	ffff7797          	auipc	a5,0xffff7
20018cda:	61278793          	addi	a5,a5,1554 # 200102e8 <_metal_sifive_fe310_g000_pll_init_ptr>
20018cde:	c422                	sw	s0,8(sp)
20018ce0:	ffff7417          	auipc	s0,0xffff7
20018ce4:	60840413          	addi	s0,s0,1544 # 200102e8 <_metal_sifive_fe310_g000_pll_init_ptr>
20018ce8:	8c1d                	sub	s0,s0,a5
20018cea:	c226                	sw	s1,4(sp)
20018cec:	c04a                	sw	s2,0(sp)
20018cee:	c606                	sw	ra,12(sp)
20018cf0:	8409                	srai	s0,s0,0x2
20018cf2:	4481                	li	s1,0
20018cf4:	893e                	mv	s2,a5
20018cf6:	02849663          	bne	s1,s0,20018d22 <__libc_init_array+0x4e>
20018cfa:	ffff7797          	auipc	a5,0xffff7
20018cfe:	5ee78793          	addi	a5,a5,1518 # 200102e8 <_metal_sifive_fe310_g000_pll_init_ptr>
20018d02:	ffff7417          	auipc	s0,0xffff7
20018d06:	5e640413          	addi	s0,s0,1510 # 200102e8 <_metal_sifive_fe310_g000_pll_init_ptr>
20018d0a:	8c1d                	sub	s0,s0,a5
20018d0c:	8409                	srai	s0,s0,0x2
20018d0e:	4481                	li	s1,0
20018d10:	893e                	mv	s2,a5
20018d12:	00849f63          	bne	s1,s0,20018d30 <__libc_init_array+0x5c>
20018d16:	40b2                	lw	ra,12(sp)
20018d18:	4422                	lw	s0,8(sp)
20018d1a:	4492                	lw	s1,4(sp)
20018d1c:	4902                	lw	s2,0(sp)
20018d1e:	0141                	addi	sp,sp,16
20018d20:	8082                	ret
20018d22:	00249793          	slli	a5,s1,0x2
20018d26:	97ca                	add	a5,a5,s2
20018d28:	439c                	lw	a5,0(a5)
20018d2a:	0485                	addi	s1,s1,1
20018d2c:	9782                	jalr	a5
20018d2e:	b7e1                	j	20018cf6 <__libc_init_array+0x22>
20018d30:	00249793          	slli	a5,s1,0x2
20018d34:	97ca                	add	a5,a5,s2
20018d36:	439c                	lw	a5,0(a5)
20018d38:	0485                	addi	s1,s1,1
20018d3a:	9782                	jalr	a5
20018d3c:	bfd9                	j	20018d12 <__libc_init_array+0x3e>

20018d3e <__register_exitproc>:
__register_exitproc():
20018d3e:	5ffe8797          	auipc	a5,0x5ffe8
20018d42:	dda78793          	addi	a5,a5,-550 # 80000b18 <_global_atexit>
20018d46:	439c                	lw	a5,0(a5)
20018d48:	8e2a                	mv	t3,a0
20018d4a:	e39d                	bnez	a5,20018d70 <__register_exitproc+0x32>
20018d4c:	5ffe8717          	auipc	a4,0x5ffe8
20018d50:	dd870713          	addi	a4,a4,-552 # 80000b24 <_global_atexit0>
20018d54:	5ffe8797          	auipc	a5,0x5ffe8
20018d58:	dce7a223          	sw	a4,-572(a5) # 80000b18 <_global_atexit>
20018d5c:	dffe7517          	auipc	a0,0xdffe7
20018d60:	2a450513          	addi	a0,a0,676 # 0 <__metal_boot_hart>
20018d64:	87ba                	mv	a5,a4
20018d66:	c509                	beqz	a0,20018d70 <__register_exitproc+0x32>
20018d68:	411c                	lw	a5,0(a0)
20018d6a:	8ef1a623          	sw	a5,-1812(gp) # 80000bac <_global_atexit0+0x88>
20018d6e:	87ba                	mv	a5,a4
20018d70:	43d8                	lw	a4,4(a5)
20018d72:	487d                	li	a6,31
20018d74:	557d                	li	a0,-1
20018d76:	04e84763          	blt	a6,a4,20018dc4 <__register_exitproc+0x86>
20018d7a:	020e0e63          	beqz	t3,20018db6 <__register_exitproc+0x78>
20018d7e:	0887a803          	lw	a6,136(a5)
20018d82:	04080163          	beqz	a6,20018dc4 <__register_exitproc+0x86>
20018d86:	00271893          	slli	a7,a4,0x2
20018d8a:	98c2                	add	a7,a7,a6
20018d8c:	00c8a023          	sw	a2,0(a7)
20018d90:	10082303          	lw	t1,256(a6)
20018d94:	4605                	li	a2,1
20018d96:	00e61633          	sll	a2,a2,a4
20018d9a:	00c36333          	or	t1,t1,a2
20018d9e:	10682023          	sw	t1,256(a6)
20018da2:	08d8a023          	sw	a3,128(a7)
20018da6:	4689                	li	a3,2
20018da8:	00de1763          	bne	t3,a3,20018db6 <__register_exitproc+0x78>
20018dac:	10482683          	lw	a3,260(a6)
20018db0:	8e55                	or	a2,a2,a3
20018db2:	10c82223          	sw	a2,260(a6)
20018db6:	00170693          	addi	a3,a4,1
20018dba:	070a                	slli	a4,a4,0x2
20018dbc:	c3d4                	sw	a3,4(a5)
20018dbe:	97ba                	add	a5,a5,a4
20018dc0:	c78c                	sw	a1,8(a5)
20018dc2:	4501                	li	a0,0
20018dc4:	8082                	ret

20018dc6 <__call_exitprocs>:
__call_exitprocs():
20018dc6:	7179                	addi	sp,sp,-48
20018dc8:	cc52                	sw	s4,24(sp)
20018dca:	ca56                	sw	s5,20(sp)
20018dcc:	c85a                	sw	s6,16(sp)
20018dce:	c65e                	sw	s7,12(sp)
20018dd0:	d606                	sw	ra,44(sp)
20018dd2:	d422                	sw	s0,40(sp)
20018dd4:	d226                	sw	s1,36(sp)
20018dd6:	d04a                	sw	s2,32(sp)
20018dd8:	ce4e                	sw	s3,28(sp)
20018dda:	c462                	sw	s8,8(sp)
20018ddc:	8b2a                	mv	s6,a0
20018dde:	8a2e                	mv	s4,a1
20018de0:	5ffe8a97          	auipc	s5,0x5ffe8
20018de4:	d38a8a93          	addi	s5,s5,-712 # 80000b18 <_global_atexit>
20018de8:	4b85                	li	s7,1
20018dea:	000aa403          	lw	s0,0(s5)
20018dee:	c811                	beqz	s0,20018e02 <__call_exitprocs+0x3c>
20018df0:	4044                	lw	s1,4(s0)
20018df2:	08842983          	lw	s3,136(s0)
20018df6:	fff48913          	addi	s2,s1,-1 # 7ffff <__heap_size+0x7f7ff>
20018dfa:	048a                	slli	s1,s1,0x2
20018dfc:	94a2                	add	s1,s1,s0
20018dfe:	00095e63          	bgez	s2,20018e1a <__call_exitprocs+0x54>
20018e02:	50b2                	lw	ra,44(sp)
20018e04:	5422                	lw	s0,40(sp)
20018e06:	5492                	lw	s1,36(sp)
20018e08:	5902                	lw	s2,32(sp)
20018e0a:	49f2                	lw	s3,28(sp)
20018e0c:	4a62                	lw	s4,24(sp)
20018e0e:	4ad2                	lw	s5,20(sp)
20018e10:	4b42                	lw	s6,16(sp)
20018e12:	4bb2                	lw	s7,12(sp)
20018e14:	4c22                	lw	s8,8(sp)
20018e16:	6145                	addi	sp,sp,48
20018e18:	8082                	ret
20018e1a:	000a0e63          	beqz	s4,20018e36 <__call_exitprocs+0x70>
20018e1e:	00099563          	bnez	s3,20018e28 <__call_exitprocs+0x62>
20018e22:	197d                	addi	s2,s2,-1
20018e24:	14f1                	addi	s1,s1,-4
20018e26:	bfe1                	j	20018dfe <__call_exitprocs+0x38>
20018e28:	00291793          	slli	a5,s2,0x2
20018e2c:	97ce                	add	a5,a5,s3
20018e2e:	0807a783          	lw	a5,128(a5)
20018e32:	ff4798e3          	bne	a5,s4,20018e22 <__call_exitprocs+0x5c>
20018e36:	4058                	lw	a4,4(s0)
20018e38:	40dc                	lw	a5,4(s1)
20018e3a:	177d                	addi	a4,a4,-1
20018e3c:	03271863          	bne	a4,s2,20018e6c <__call_exitprocs+0xa6>
20018e40:	01242223          	sw	s2,4(s0)
20018e44:	dff9                	beqz	a5,20018e22 <__call_exitprocs+0x5c>
20018e46:	00442c03          	lw	s8,4(s0)
20018e4a:	00098863          	beqz	s3,20018e5a <__call_exitprocs+0x94>
20018e4e:	1009a683          	lw	a3,256(s3)
20018e52:	012b9733          	sll	a4,s7,s2
20018e56:	8ef9                	and	a3,a3,a4
20018e58:	ee89                	bnez	a3,20018e72 <__call_exitprocs+0xac>
20018e5a:	9782                	jalr	a5
20018e5c:	4058                	lw	a4,4(s0)
20018e5e:	000aa783          	lw	a5,0(s5)
20018e62:	f98714e3          	bne	a4,s8,20018dea <__call_exitprocs+0x24>
20018e66:	faf40ee3          	beq	s0,a5,20018e22 <__call_exitprocs+0x5c>
20018e6a:	b741                	j	20018dea <__call_exitprocs+0x24>
20018e6c:	0004a223          	sw	zero,4(s1)
20018e70:	bfd1                	j	20018e44 <__call_exitprocs+0x7e>
20018e72:	00291693          	slli	a3,s2,0x2
20018e76:	96ce                	add	a3,a3,s3
20018e78:	428c                	lw	a1,0(a3)
20018e7a:	1049a683          	lw	a3,260(s3)
20018e7e:	8f75                	and	a4,a4,a3
20018e80:	e701                	bnez	a4,20018e88 <__call_exitprocs+0xc2>
20018e82:	855a                	mv	a0,s6
20018e84:	9782                	jalr	a5
20018e86:	bfd9                	j	20018e5c <__call_exitprocs+0x96>
20018e88:	852e                	mv	a0,a1
20018e8a:	9782                	jalr	a5
20018e8c:	bfc1                	j	20018e5c <__call_exitprocs+0x96>

20018e8e <__udivdi3>:
__udivdi3():
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1319
20018e8e:	87ae                	mv	a5,a1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1024
20018e90:	8832                	mv	a6,a2
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1025
20018e92:	8736                	mv	a4,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1026
20018e94:	832a                	mv	t1,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1064
20018e96:	20069663          	bnez	a3,200190a2 <__udivdi3+0x214>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1066
20018e9a:	ffff7897          	auipc	a7,0xffff7
20018e9e:	77288893          	addi	a7,a7,1906 # 2001060c <__clz_tab>
20018ea2:	0ac5fe63          	bgeu	a1,a2,20018f5e <__udivdi3+0xd0>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
20018ea6:	6741                	lui	a4,0x10
20018ea8:	0ae67463          	bgeu	a2,a4,20018f50 <__udivdi3+0xc2>
20018eac:	0ff00713          	li	a4,255
20018eb0:	00c73733          	sltu	a4,a4,a2
20018eb4:	070e                	slli	a4,a4,0x3
20018eb6:	00e656b3          	srl	a3,a2,a4
20018eba:	98b6                	add	a7,a7,a3
20018ebc:	0008c683          	lbu	a3,0(a7)
20018ec0:	9736                	add	a4,a4,a3
20018ec2:	02000693          	li	a3,32
20018ec6:	8e99                	sub	a3,a3,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1072
20018ec8:	ca99                	beqz	a3,20018ede <__udivdi3+0x50>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
20018eca:	00d797b3          	sll	a5,a5,a3
20018ece:	00e55733          	srl	a4,a0,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1077
20018ed2:	00d61833          	sll	a6,a2,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
20018ed6:	00f765b3          	or	a1,a4,a5
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1079
20018eda:	00d51333          	sll	t1,a0,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1082
20018ede:	01085513          	srli	a0,a6,0x10
20018ee2:	02a5f733          	remu	a4,a1,a0
20018ee6:	01081613          	slli	a2,a6,0x10
20018eea:	8241                	srli	a2,a2,0x10
20018eec:	01035693          	srli	a3,t1,0x10
20018ef0:	02a5d5b3          	divu	a1,a1,a0
20018ef4:	0742                	slli	a4,a4,0x10
20018ef6:	8ed9                	or	a3,a3,a4
20018ef8:	02b607b3          	mul	a5,a2,a1
20018efc:	872e                	mv	a4,a1
20018efe:	00f6fc63          	bgeu	a3,a5,20018f16 <__udivdi3+0x88>
20018f02:	96c2                	add	a3,a3,a6
20018f04:	fff58713          	addi	a4,a1,-1
20018f08:	0106e763          	bltu	a3,a6,20018f16 <__udivdi3+0x88>
20018f0c:	00f6f563          	bgeu	a3,a5,20018f16 <__udivdi3+0x88>
20018f10:	ffe58713          	addi	a4,a1,-2
20018f14:	96c2                	add	a3,a3,a6
20018f16:	8e9d                	sub	a3,a3,a5
20018f18:	02a6f7b3          	remu	a5,a3,a0
20018f1c:	0342                	slli	t1,t1,0x10
20018f1e:	01035313          	srli	t1,t1,0x10
20018f22:	02a6d6b3          	divu	a3,a3,a0
20018f26:	07c2                	slli	a5,a5,0x10
20018f28:	0067e333          	or	t1,a5,t1
20018f2c:	02d605b3          	mul	a1,a2,a3
20018f30:	8536                	mv	a0,a3
20018f32:	00b37b63          	bgeu	t1,a1,20018f48 <__udivdi3+0xba>
20018f36:	9342                	add	t1,t1,a6
20018f38:	fff68513          	addi	a0,a3,-1
20018f3c:	01036663          	bltu	t1,a6,20018f48 <__udivdi3+0xba>
20018f40:	00b37463          	bgeu	t1,a1,20018f48 <__udivdi3+0xba>
20018f44:	ffe68513          	addi	a0,a3,-2
20018f48:	0742                	slli	a4,a4,0x10
20018f4a:	8f49                	or	a4,a4,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1209
20018f4c:	4581                	li	a1,0
20018f4e:	a84d                	j	20019000 <__udivdi3+0x172>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
20018f50:	010006b7          	lui	a3,0x1000
20018f54:	4741                	li	a4,16
20018f56:	f6d660e3          	bltu	a2,a3,20018eb6 <__udivdi3+0x28>
20018f5a:	4761                	li	a4,24
20018f5c:	bfa9                	j	20018eb6 <__udivdi3+0x28>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1091
20018f5e:	e601                	bnez	a2,20018f66 <__udivdi3+0xd8>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1092
20018f60:	4685                	li	a3,1
20018f62:	02c6d833          	divu	a6,a3,a2
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
20018f66:	66c1                	lui	a3,0x10
20018f68:	08d87e63          	bgeu	a6,a3,20019004 <__udivdi3+0x176>
20018f6c:	0ff00693          	li	a3,255
20018f70:	0106f363          	bgeu	a3,a6,20018f76 <__udivdi3+0xe8>
20018f74:	4721                	li	a4,8
20018f76:	00e856b3          	srl	a3,a6,a4
20018f7a:	98b6                	add	a7,a7,a3
20018f7c:	0008c683          	lbu	a3,0(a7)
20018f80:	96ba                	add	a3,a3,a4
20018f82:	02000713          	li	a4,32
20018f86:	8f15                	sub	a4,a4,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1096
20018f88:	e749                	bnez	a4,20019012 <__udivdi3+0x184>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1105
20018f8a:	410787b3          	sub	a5,a5,a6
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1106
20018f8e:	4585                	li	a1,1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1124
20018f90:	01085613          	srli	a2,a6,0x10
20018f94:	01081893          	slli	a7,a6,0x10
20018f98:	0108d893          	srli	a7,a7,0x10
20018f9c:	01035693          	srli	a3,t1,0x10
20018fa0:	02c7f733          	remu	a4,a5,a2
20018fa4:	02c7d7b3          	divu	a5,a5,a2
20018fa8:	0742                	slli	a4,a4,0x10
20018faa:	8ed9                	or	a3,a3,a4
20018fac:	02f88533          	mul	a0,a7,a5
20018fb0:	873e                	mv	a4,a5
20018fb2:	00a6fc63          	bgeu	a3,a0,20018fca <__udivdi3+0x13c>
20018fb6:	96c2                	add	a3,a3,a6
20018fb8:	fff78713          	addi	a4,a5,-1
20018fbc:	0106e763          	bltu	a3,a6,20018fca <__udivdi3+0x13c>
20018fc0:	00a6f563          	bgeu	a3,a0,20018fca <__udivdi3+0x13c>
20018fc4:	ffe78713          	addi	a4,a5,-2
20018fc8:	96c2                	add	a3,a3,a6
20018fca:	8e89                	sub	a3,a3,a0
20018fcc:	02c6f7b3          	remu	a5,a3,a2
20018fd0:	0342                	slli	t1,t1,0x10
20018fd2:	01035313          	srli	t1,t1,0x10
20018fd6:	02c6d6b3          	divu	a3,a3,a2
20018fda:	07c2                	slli	a5,a5,0x10
20018fdc:	0067e333          	or	t1,a5,t1
20018fe0:	02d888b3          	mul	a7,a7,a3
20018fe4:	8536                	mv	a0,a3
20018fe6:	01137b63          	bgeu	t1,a7,20018ffc <__udivdi3+0x16e>
20018fea:	9342                	add	t1,t1,a6
20018fec:	fff68513          	addi	a0,a3,-1 # ffff <__heap_size+0xf7ff>
20018ff0:	01036663          	bltu	t1,a6,20018ffc <__udivdi3+0x16e>
20018ff4:	01137463          	bgeu	t1,a7,20018ffc <__udivdi3+0x16e>
20018ff8:	ffe68513          	addi	a0,a3,-2
20018ffc:	0742                	slli	a4,a4,0x10
20018ffe:	8f49                	or	a4,a4,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1321
20019000:	853a                	mv	a0,a4
20019002:	8082                	ret
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
20019004:	010006b7          	lui	a3,0x1000
20019008:	4741                	li	a4,16
2001900a:	f6d866e3          	bltu	a6,a3,20018f76 <__udivdi3+0xe8>
2001900e:	4761                	li	a4,24
20019010:	b79d                	j	20018f76 <__udivdi3+0xe8>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1114
20019012:	00e81833          	sll	a6,a6,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1115
20019016:	00d7d5b3          	srl	a1,a5,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1117
2001901a:	00e51333          	sll	t1,a0,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
2001901e:	00d556b3          	srl	a3,a0,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
20019022:	01085513          	srli	a0,a6,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
20019026:	00e797b3          	sll	a5,a5,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
2001902a:	02a5f733          	remu	a4,a1,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
2001902e:	00f6e8b3          	or	a7,a3,a5
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
20019032:	01081793          	slli	a5,a6,0x10
20019036:	83c1                	srli	a5,a5,0x10
20019038:	0108d613          	srli	a2,a7,0x10
2001903c:	02a5d5b3          	divu	a1,a1,a0
20019040:	0742                	slli	a4,a4,0x10
20019042:	8f51                	or	a4,a4,a2
20019044:	02b786b3          	mul	a3,a5,a1
20019048:	862e                	mv	a2,a1
2001904a:	00d77c63          	bgeu	a4,a3,20019062 <__udivdi3+0x1d4>
2001904e:	9742                	add	a4,a4,a6
20019050:	fff58613          	addi	a2,a1,-1
20019054:	01076763          	bltu	a4,a6,20019062 <__udivdi3+0x1d4>
20019058:	00d77563          	bgeu	a4,a3,20019062 <__udivdi3+0x1d4>
2001905c:	ffe58613          	addi	a2,a1,-2
20019060:	9742                	add	a4,a4,a6
20019062:	40d706b3          	sub	a3,a4,a3
20019066:	02a6f733          	remu	a4,a3,a0
2001906a:	08c2                	slli	a7,a7,0x10
2001906c:	0108d893          	srli	a7,a7,0x10
20019070:	02a6d6b3          	divu	a3,a3,a0
20019074:	0742                	slli	a4,a4,0x10
20019076:	02d785b3          	mul	a1,a5,a3
2001907a:	011767b3          	or	a5,a4,a7
2001907e:	8736                	mv	a4,a3
20019080:	00b7fc63          	bgeu	a5,a1,20019098 <__udivdi3+0x20a>
20019084:	97c2                	add	a5,a5,a6
20019086:	fff68713          	addi	a4,a3,-1 # ffffff <__heap_size+0xfff7ff>
2001908a:	0107e763          	bltu	a5,a6,20019098 <__udivdi3+0x20a>
2001908e:	00b7f563          	bgeu	a5,a1,20019098 <__udivdi3+0x20a>
20019092:	ffe68713          	addi	a4,a3,-2
20019096:	97c2                	add	a5,a5,a6
20019098:	8f8d                	sub	a5,a5,a1
2001909a:	01061593          	slli	a1,a2,0x10
2001909e:	8dd9                	or	a1,a1,a4
200190a0:	bdc5                	j	20018f90 <__udivdi3+0x102>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1140
200190a2:	14d5e263          	bltu	a1,a3,200191e6 <__udivdi3+0x358>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
200190a6:	6741                	lui	a4,0x10
200190a8:	02e6fe63          	bgeu	a3,a4,200190e4 <__udivdi3+0x256>
200190ac:	0ff00813          	li	a6,255
200190b0:	00d83733          	sltu	a4,a6,a3
200190b4:	070e                	slli	a4,a4,0x3
200190b6:	00e6d833          	srl	a6,a3,a4
200190ba:	ffff7597          	auipc	a1,0xffff7
200190be:	55258593          	addi	a1,a1,1362 # 2001060c <__clz_tab>
200190c2:	95c2                	add	a1,a1,a6
200190c4:	0005c803          	lbu	a6,0(a1)
200190c8:	02000593          	li	a1,32
200190cc:	983a                	add	a6,a6,a4
200190ce:	410585b3          	sub	a1,a1,a6
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1160
200190d2:	e185                	bnez	a1,200190f2 <__udivdi3+0x264>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1172
200190d4:	4705                	li	a4,1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1170
200190d6:	f2f6e5e3          	bltu	a3,a5,20019000 <__udivdi3+0x172>
200190da:	00c53533          	sltu	a0,a0,a2
200190de:	00154713          	xori	a4,a0,1
200190e2:	bf39                	j	20019000 <__udivdi3+0x172>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
200190e4:	010005b7          	lui	a1,0x1000
200190e8:	4741                	li	a4,16
200190ea:	fcb6e6e3          	bltu	a3,a1,200190b6 <__udivdi3+0x228>
200190ee:	4761                	li	a4,24
200190f0:	b7d9                	j	200190b6 <__udivdi3+0x228>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1194
200190f2:	01065733          	srl	a4,a2,a6
200190f6:	00b696b3          	sll	a3,a3,a1
200190fa:	8ed9                	or	a3,a3,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
200190fc:	0106de93          	srli	t4,a3,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1196
20019100:	0107d733          	srl	a4,a5,a6
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20019104:	03d778b3          	remu	a7,a4,t4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1197
20019108:	00b797b3          	sll	a5,a5,a1
2001910c:	01055833          	srl	a6,a0,a6
20019110:	00f86333          	or	t1,a6,a5
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20019114:	01069793          	slli	a5,a3,0x10
20019118:	83c1                	srli	a5,a5,0x10
2001911a:	01035813          	srli	a6,t1,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1195
2001911e:	00b61633          	sll	a2,a2,a1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20019122:	03d75733          	divu	a4,a4,t4
20019126:	08c2                	slli	a7,a7,0x10
20019128:	0108e833          	or	a6,a7,a6
2001912c:	02e78f33          	mul	t5,a5,a4
20019130:	8e3a                	mv	t3,a4
20019132:	01e87c63          	bgeu	a6,t5,2001914a <__udivdi3+0x2bc>
20019136:	9836                	add	a6,a6,a3
20019138:	fff70e13          	addi	t3,a4,-1 # ffff <__heap_size+0xf7ff>
2001913c:	00d86763          	bltu	a6,a3,2001914a <__udivdi3+0x2bc>
20019140:	01e87563          	bgeu	a6,t5,2001914a <__udivdi3+0x2bc>
20019144:	ffe70e13          	addi	t3,a4,-2
20019148:	9836                	add	a6,a6,a3
2001914a:	41e80833          	sub	a6,a6,t5
2001914e:	03d878b3          	remu	a7,a6,t4
20019152:	03d85833          	divu	a6,a6,t4
20019156:	08c2                	slli	a7,a7,0x10
20019158:	03078eb3          	mul	t4,a5,a6
2001915c:	01031793          	slli	a5,t1,0x10
20019160:	83c1                	srli	a5,a5,0x10
20019162:	00f8e7b3          	or	a5,a7,a5
20019166:	8742                	mv	a4,a6
20019168:	01d7fc63          	bgeu	a5,t4,20019180 <__udivdi3+0x2f2>
2001916c:	97b6                	add	a5,a5,a3
2001916e:	fff80713          	addi	a4,a6,-1
20019172:	00d7e763          	bltu	a5,a3,20019180 <__udivdi3+0x2f2>
20019176:	01d7f563          	bgeu	a5,t4,20019180 <__udivdi3+0x2f2>
2001917a:	ffe80713          	addi	a4,a6,-2
2001917e:	97b6                	add	a5,a5,a3
20019180:	0e42                	slli	t3,t3,0x10
20019182:	41d787b3          	sub	a5,a5,t4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
20019186:	6ec1                	lui	t4,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20019188:	00ee6733          	or	a4,t3,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
2001918c:	fffe8813          	addi	a6,t4,-1 # ffff <__heap_size+0xf7ff>
20019190:	01077333          	and	t1,a4,a6
20019194:	01075893          	srli	a7,a4,0x10
20019198:	01067833          	and	a6,a2,a6
2001919c:	8241                	srli	a2,a2,0x10
2001919e:	03030e33          	mul	t3,t1,a6
200191a2:	03088833          	mul	a6,a7,a6
200191a6:	010e5693          	srli	a3,t3,0x10
200191aa:	02c30333          	mul	t1,t1,a2
200191ae:	9342                	add	t1,t1,a6
200191b0:	969a                	add	a3,a3,t1
200191b2:	02c888b3          	mul	a7,a7,a2
200191b6:	0106f363          	bgeu	a3,a6,200191bc <__udivdi3+0x32e>
200191ba:	98f6                	add	a7,a7,t4
200191bc:	0106d613          	srli	a2,a3,0x10
200191c0:	98b2                	add	a7,a7,a2
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1203
200191c2:	0317e063          	bltu	a5,a7,200191e2 <__udivdi3+0x354>
200191c6:	d91793e3          	bne	a5,a7,20018f4c <__udivdi3+0xbe>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
200191ca:	67c1                	lui	a5,0x10
200191cc:	17fd                	addi	a5,a5,-1
200191ce:	8efd                	and	a3,a3,a5
200191d0:	06c2                	slli	a3,a3,0x10
200191d2:	00fe7e33          	and	t3,t3,a5
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1198
200191d6:	00b51533          	sll	a0,a0,a1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
200191da:	96f2                	add	a3,a3,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1209
200191dc:	4581                	li	a1,0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1203
200191de:	e2d571e3          	bgeu	a0,a3,20019000 <__udivdi3+0x172>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1205
200191e2:	177d                	addi	a4,a4,-1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1206
200191e4:	b3a5                	j	20018f4c <__udivdi3+0xbe>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1145
200191e6:	4581                	li	a1,0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1144
200191e8:	4701                	li	a4,0
200191ea:	bd19                	j	20019000 <__udivdi3+0x172>

200191ec <__umoddi3>:
__udivmoddi4():
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1024
200191ec:	88b2                	mv	a7,a2
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1025
200191ee:	8736                	mv	a4,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1026
200191f0:	87aa                	mv	a5,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1027
200191f2:	882e                	mv	a6,a1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1064
200191f4:	1c069863          	bnez	a3,200193c4 <__umoddi3+0x1d8>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1066
200191f8:	ffff7697          	auipc	a3,0xffff7
200191fc:	41468693          	addi	a3,a3,1044 # 2001060c <__clz_tab>
20019200:	0ac5f863          	bgeu	a1,a2,200192b0 <__umoddi3+0xc4>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
20019204:	6341                	lui	t1,0x10
20019206:	08667e63          	bgeu	a2,t1,200192a2 <__umoddi3+0xb6>
2001920a:	0ff00313          	li	t1,255
2001920e:	00c37363          	bgeu	t1,a2,20019214 <__umoddi3+0x28>
20019212:	4721                	li	a4,8
20019214:	00e65333          	srl	t1,a2,a4
20019218:	969a                	add	a3,a3,t1
2001921a:	0006ce03          	lbu	t3,0(a3)
2001921e:	02000313          	li	t1,32
20019222:	9e3a                	add	t3,t3,a4
20019224:	41c30333          	sub	t1,t1,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1072
20019228:	00030c63          	beqz	t1,20019240 <__umoddi3+0x54>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
2001922c:	006595b3          	sll	a1,a1,t1
20019230:	01c55e33          	srl	t3,a0,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1077
20019234:	006618b3          	sll	a7,a2,t1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
20019238:	00be6833          	or	a6,t3,a1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1079
2001923c:	006517b3          	sll	a5,a0,t1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1082
20019240:	0108d613          	srli	a2,a7,0x10
20019244:	02c87733          	remu	a4,a6,a2
20019248:	01089513          	slli	a0,a7,0x10
2001924c:	8141                	srli	a0,a0,0x10
2001924e:	0107d693          	srli	a3,a5,0x10
20019252:	02c85833          	divu	a6,a6,a2
20019256:	0742                	slli	a4,a4,0x10
20019258:	8ed9                	or	a3,a3,a4
2001925a:	03050833          	mul	a6,a0,a6
2001925e:	0106f863          	bgeu	a3,a6,2001926e <__umoddi3+0x82>
20019262:	96c6                	add	a3,a3,a7
20019264:	0116e563          	bltu	a3,a7,2001926e <__umoddi3+0x82>
20019268:	0106f363          	bgeu	a3,a6,2001926e <__umoddi3+0x82>
2001926c:	96c6                	add	a3,a3,a7
2001926e:	410686b3          	sub	a3,a3,a6
20019272:	02c6f733          	remu	a4,a3,a2
20019276:	07c2                	slli	a5,a5,0x10
20019278:	83c1                	srli	a5,a5,0x10
2001927a:	02c6d6b3          	divu	a3,a3,a2
2001927e:	02d506b3          	mul	a3,a0,a3
20019282:	01071513          	slli	a0,a4,0x10
20019286:	8fc9                	or	a5,a5,a0
20019288:	00d7f863          	bgeu	a5,a3,20019298 <__umoddi3+0xac>
2001928c:	97c6                	add	a5,a5,a7
2001928e:	0117e563          	bltu	a5,a7,20019298 <__umoddi3+0xac>
20019292:	00d7f363          	bgeu	a5,a3,20019298 <__umoddi3+0xac>
20019296:	97c6                	add	a5,a5,a7
20019298:	8f95                	sub	a5,a5,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1131
2001929a:	0067d533          	srl	a0,a5,t1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1133
2001929e:	4581                	li	a1,0
__umoddi3():
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1313
200192a0:	8082                	ret
__udivmoddi4():
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
200192a2:	01000337          	lui	t1,0x1000
200192a6:	4741                	li	a4,16
200192a8:	f66666e3          	bltu	a2,t1,20019214 <__umoddi3+0x28>
200192ac:	4761                	li	a4,24
200192ae:	b79d                	j	20019214 <__umoddi3+0x28>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1091
200192b0:	e601                	bnez	a2,200192b8 <__umoddi3+0xcc>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1092
200192b2:	4605                	li	a2,1
200192b4:	031658b3          	divu	a7,a2,a7
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
200192b8:	6641                	lui	a2,0x10
200192ba:	08c8f363          	bgeu	a7,a2,20019340 <__umoddi3+0x154>
200192be:	0ff00613          	li	a2,255
200192c2:	01167363          	bgeu	a2,a7,200192c8 <__umoddi3+0xdc>
200192c6:	4721                	li	a4,8
200192c8:	00e8d633          	srl	a2,a7,a4
200192cc:	96b2                	add	a3,a3,a2
200192ce:	0006ce03          	lbu	t3,0(a3)
200192d2:	02000313          	li	t1,32
200192d6:	9e3a                	add	t3,t3,a4
200192d8:	41c30333          	sub	t1,t1,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1096
200192dc:	06031963          	bnez	t1,2001934e <__umoddi3+0x162>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1105
200192e0:	411585b3          	sub	a1,a1,a7
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1124
200192e4:	0108d713          	srli	a4,a7,0x10
200192e8:	01089513          	slli	a0,a7,0x10
200192ec:	8141                	srli	a0,a0,0x10
200192ee:	0107d613          	srli	a2,a5,0x10
200192f2:	02e5f6b3          	remu	a3,a1,a4
200192f6:	02e5d5b3          	divu	a1,a1,a4
200192fa:	06c2                	slli	a3,a3,0x10
200192fc:	8ed1                	or	a3,a3,a2
200192fe:	02b505b3          	mul	a1,a0,a1
20019302:	00b6f863          	bgeu	a3,a1,20019312 <__umoddi3+0x126>
20019306:	96c6                	add	a3,a3,a7
20019308:	0116e563          	bltu	a3,a7,20019312 <__umoddi3+0x126>
2001930c:	00b6f363          	bgeu	a3,a1,20019312 <__umoddi3+0x126>
20019310:	96c6                	add	a3,a3,a7
20019312:	40b685b3          	sub	a1,a3,a1
20019316:	02e5f6b3          	remu	a3,a1,a4
2001931a:	07c2                	slli	a5,a5,0x10
2001931c:	83c1                	srli	a5,a5,0x10
2001931e:	02e5d5b3          	divu	a1,a1,a4
20019322:	02b505b3          	mul	a1,a0,a1
20019326:	01069513          	slli	a0,a3,0x10
2001932a:	8fc9                	or	a5,a5,a0
2001932c:	00b7f863          	bgeu	a5,a1,2001933c <__umoddi3+0x150>
20019330:	97c6                	add	a5,a5,a7
20019332:	0117e563          	bltu	a5,a7,2001933c <__umoddi3+0x150>
20019336:	00b7f363          	bgeu	a5,a1,2001933c <__umoddi3+0x150>
2001933a:	97c6                	add	a5,a5,a7
2001933c:	8f8d                	sub	a5,a5,a1
2001933e:	bfb1                	j	2001929a <__umoddi3+0xae>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
20019340:	01000637          	lui	a2,0x1000
20019344:	4741                	li	a4,16
20019346:	f8c8e1e3          	bltu	a7,a2,200192c8 <__umoddi3+0xdc>
2001934a:	4761                	li	a4,24
2001934c:	bfb5                	j	200192c8 <__umoddi3+0xdc>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1114
2001934e:	006898b3          	sll	a7,a7,t1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1115
20019352:	01c5d733          	srl	a4,a1,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1117
20019356:	006517b3          	sll	a5,a0,t1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
2001935a:	01c55e33          	srl	t3,a0,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
2001935e:	0108d513          	srli	a0,a7,0x10
20019362:	02a776b3          	remu	a3,a4,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
20019366:	006595b3          	sll	a1,a1,t1
2001936a:	00be6e33          	or	t3,t3,a1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
2001936e:	01089593          	slli	a1,a7,0x10
20019372:	81c1                	srli	a1,a1,0x10
20019374:	010e5613          	srli	a2,t3,0x10
20019378:	02a75733          	divu	a4,a4,a0
2001937c:	06c2                	slli	a3,a3,0x10
2001937e:	8ed1                	or	a3,a3,a2
20019380:	02e58733          	mul	a4,a1,a4
20019384:	00e6f863          	bgeu	a3,a4,20019394 <__umoddi3+0x1a8>
20019388:	96c6                	add	a3,a3,a7
2001938a:	0116e563          	bltu	a3,a7,20019394 <__umoddi3+0x1a8>
2001938e:	00e6f363          	bgeu	a3,a4,20019394 <__umoddi3+0x1a8>
20019392:	96c6                	add	a3,a3,a7
20019394:	40e68633          	sub	a2,a3,a4
20019398:	02a676b3          	remu	a3,a2,a0
2001939c:	0e42                	slli	t3,t3,0x10
2001939e:	010e5e13          	srli	t3,t3,0x10
200193a2:	02a65633          	divu	a2,a2,a0
200193a6:	06c2                	slli	a3,a3,0x10
200193a8:	02c58633          	mul	a2,a1,a2
200193ac:	01c6e5b3          	or	a1,a3,t3
200193b0:	00c5f863          	bgeu	a1,a2,200193c0 <__umoddi3+0x1d4>
200193b4:	95c6                	add	a1,a1,a7
200193b6:	0115e563          	bltu	a1,a7,200193c0 <__umoddi3+0x1d4>
200193ba:	00c5f363          	bgeu	a1,a2,200193c0 <__umoddi3+0x1d4>
200193be:	95c6                	add	a1,a1,a7
200193c0:	8d91                	sub	a1,a1,a2
200193c2:	b70d                	j	200192e4 <__umoddi3+0xf8>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1140
200193c4:	ecd5eee3          	bltu	a1,a3,200192a0 <__umoddi3+0xb4>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
200193c8:	6741                	lui	a4,0x10
200193ca:	04e6f563          	bgeu	a3,a4,20019414 <__umoddi3+0x228>
200193ce:	0ff00e93          	li	t4,255
200193d2:	00deb733          	sltu	a4,t4,a3
200193d6:	070e                	slli	a4,a4,0x3
200193d8:	00e6d333          	srl	t1,a3,a4
200193dc:	ffff7897          	auipc	a7,0xffff7
200193e0:	23088893          	addi	a7,a7,560 # 2001060c <__clz_tab>
200193e4:	989a                	add	a7,a7,t1
200193e6:	0008ce83          	lbu	t4,0(a7)
200193ea:	02000e13          	li	t3,32
200193ee:	9eba                	add	t4,t4,a4
200193f0:	41de0e33          	sub	t3,t3,t4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1160
200193f4:	020e1763          	bnez	t3,20019422 <__umoddi3+0x236>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1170
200193f8:	00b6e463          	bltu	a3,a1,20019400 <__umoddi3+0x214>
200193fc:	00c56963          	bltu	a0,a2,2001940e <__umoddi3+0x222>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1173
20019400:	40c507b3          	sub	a5,a0,a2
20019404:	8d95                	sub	a1,a1,a3
20019406:	00f53533          	sltu	a0,a0,a5
2001940a:	40a58833          	sub	a6,a1,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1184
2001940e:	853e                	mv	a0,a5
20019410:	85c2                	mv	a1,a6
20019412:	b579                	j	200192a0 <__umoddi3+0xb4>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
20019414:	010008b7          	lui	a7,0x1000
20019418:	4741                	li	a4,16
2001941a:	fb16efe3          	bltu	a3,a7,200193d8 <__umoddi3+0x1ec>
2001941e:	4761                	li	a4,24
20019420:	bf65                	j	200193d8 <__umoddi3+0x1ec>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1194
20019422:	01d65733          	srl	a4,a2,t4
20019426:	01c696b3          	sll	a3,a3,t3
2001942a:	8ed9                	or	a3,a3,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
2001942c:	0106d813          	srli	a6,a3,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1196
20019430:	01d5d733          	srl	a4,a1,t4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20019434:	03077333          	remu	t1,a4,a6
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1197
20019438:	01c595b3          	sll	a1,a1,t3
2001943c:	01d557b3          	srl	a5,a0,t4
20019440:	8fcd                	or	a5,a5,a1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20019442:	01069593          	slli	a1,a3,0x10
20019446:	81c1                	srli	a1,a1,0x10
20019448:	0107d893          	srli	a7,a5,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1195
2001944c:	01c61633          	sll	a2,a2,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1198
20019450:	01c51533          	sll	a0,a0,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20019454:	03075733          	divu	a4,a4,a6
20019458:	0342                	slli	t1,t1,0x10
2001945a:	011368b3          	or	a7,t1,a7
2001945e:	02e58f33          	mul	t5,a1,a4
20019462:	833a                	mv	t1,a4
20019464:	01e8fc63          	bgeu	a7,t5,2001947c <__umoddi3+0x290>
20019468:	98b6                	add	a7,a7,a3
2001946a:	fff70313          	addi	t1,a4,-1 # ffff <__heap_size+0xf7ff>
2001946e:	00d8e763          	bltu	a7,a3,2001947c <__umoddi3+0x290>
20019472:	01e8f563          	bgeu	a7,t5,2001947c <__umoddi3+0x290>
20019476:	ffe70313          	addi	t1,a4,-2
2001947a:	98b6                	add	a7,a7,a3
2001947c:	41e888b3          	sub	a7,a7,t5
20019480:	0308ff33          	remu	t5,a7,a6
20019484:	0308d8b3          	divu	a7,a7,a6
20019488:	0f42                	slli	t5,t5,0x10
2001948a:	03158833          	mul	a6,a1,a7
2001948e:	01079593          	slli	a1,a5,0x10
20019492:	81c1                	srli	a1,a1,0x10
20019494:	00bf65b3          	or	a1,t5,a1
20019498:	87c6                	mv	a5,a7
2001949a:	0105fc63          	bgeu	a1,a6,200194b2 <__umoddi3+0x2c6>
2001949e:	95b6                	add	a1,a1,a3
200194a0:	fff88793          	addi	a5,a7,-1 # ffffff <__heap_size+0xfff7ff>
200194a4:	00d5e763          	bltu	a1,a3,200194b2 <__umoddi3+0x2c6>
200194a8:	0105f563          	bgeu	a1,a6,200194b2 <__umoddi3+0x2c6>
200194ac:	ffe88793          	addi	a5,a7,-2
200194b0:	95b6                	add	a1,a1,a3
200194b2:	0342                	slli	t1,t1,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
200194b4:	6f41                	lui	t5,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
200194b6:	00f36333          	or	t1,t1,a5
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
200194ba:	ffff0793          	addi	a5,t5,-1 # ffff <__heap_size+0xf7ff>
200194be:	00f378b3          	and	a7,t1,a5
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
200194c2:	410585b3          	sub	a1,a1,a6
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
200194c6:	01035313          	srli	t1,t1,0x10
200194ca:	01065813          	srli	a6,a2,0x10
200194ce:	8ff1                	and	a5,a5,a2
200194d0:	02f88733          	mul	a4,a7,a5
200194d4:	02f307b3          	mul	a5,t1,a5
200194d8:	030888b3          	mul	a7,a7,a6
200194dc:	03030333          	mul	t1,t1,a6
200194e0:	98be                	add	a7,a7,a5
200194e2:	01075813          	srli	a6,a4,0x10
200194e6:	9846                	add	a6,a6,a7
200194e8:	00f87363          	bgeu	a6,a5,200194ee <__umoddi3+0x302>
200194ec:	937a                	add	t1,t1,t5
200194ee:	01085793          	srli	a5,a6,0x10
200194f2:	933e                	add	t1,t1,a5
200194f4:	67c1                	lui	a5,0x10
200194f6:	17fd                	addi	a5,a5,-1
200194f8:	00f87833          	and	a6,a6,a5
200194fc:	0842                	slli	a6,a6,0x10
200194fe:	8f7d                	and	a4,a4,a5
20019500:	9742                	add	a4,a4,a6
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1203
20019502:	0065e663          	bltu	a1,t1,2001950e <__umoddi3+0x322>
20019506:	00659c63          	bne	a1,t1,2001951e <__umoddi3+0x332>
2001950a:	00e57a63          	bgeu	a0,a4,2001951e <__umoddi3+0x332>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1206
2001950e:	40c70633          	sub	a2,a4,a2
20019512:	00c73733          	sltu	a4,a4,a2
20019516:	9736                	add	a4,a4,a3
20019518:	40e30333          	sub	t1,t1,a4
2001951c:	8732                	mv	a4,a2
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1214
2001951e:	40e50733          	sub	a4,a0,a4
20019522:	00e53533          	sltu	a0,a0,a4
20019526:	406585b3          	sub	a1,a1,t1
2001952a:	8d89                	sub	a1,a1,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1215
2001952c:	01d597b3          	sll	a5,a1,t4
20019530:	01c75733          	srl	a4,a4,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1217
20019534:	00e7e533          	or	a0,a5,a4
20019538:	01c5d5b3          	srl	a1,a1,t3
__umoddi3():
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1312
2001953c:	b395                	j	200192a0 <__umoddi3+0xb4>

2001953e <metal_init>:
metal_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:17
extern metal_constructor_t metal_constructors_start;
extern metal_constructor_t metal_constructors_end;
extern metal_destructor_t metal_destructors_start;
extern metal_destructor_t metal_destructors_end;

void metal_init(void) {
2001953e:	1101                	addi	sp,sp,-32
20019540:	ce06                	sw	ra,28(sp)
20019542:	cc22                	sw	s0,24(sp)
20019544:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:20
    /* Make sure the constructors only run once */
    static int init_done = 0;
    if (init_done) {
20019546:	800017b7          	lui	a5,0x80001
2001954a:	b1c7a783          	lw	a5,-1252(a5) # 80000b1c <metal_segment_heap_target_end+0xfffff35c>
2001954e:	efa9                	bnez	a5,200195a8 <metal_init+0x6a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:23
        return;
    }
    init_done = 1;
20019550:	800017b7          	lui	a5,0x80001
20019554:	4705                	li	a4,1
20019556:	b0e7ae23          	sw	a4,-1252(a5) # 80000b1c <metal_segment_heap_target_end+0xfffff35c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:25

    if (&metal_constructors_end <= &metal_constructors_start) {
2001955a:	200107b7          	lui	a5,0x20010
2001955e:	2f478713          	addi	a4,a5,756 # 200102f4 <metal_constructors_end>
20019562:	200107b7          	lui	a5,0x20010
20019566:	2e878793          	addi	a5,a5,744 # 200102e8 <_metal_sifive_fe310_g000_pll_init_ptr>
2001956a:	04e7f163          	bgeu	a5,a4,200195ac <metal_init+0x6e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:29
        return;
    }

    metal_constructor_t *funcptr = &metal_constructors_start;
2001956e:	200107b7          	lui	a5,0x20010
20019572:	2e878793          	addi	a5,a5,744 # 200102e8 <_metal_sifive_fe310_g000_pll_init_ptr>
20019576:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
2001957a:	a831                	j	20019596 <metal_init+0x58>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:31
        metal_constructor_t func = *funcptr;
2001957c:	fec42783          	lw	a5,-20(s0)
20019580:	439c                	lw	a5,0(a5)
20019582:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:33

        func();
20019586:	fe842783          	lw	a5,-24(s0)
2001958a:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:35

        funcptr += 1;
2001958c:	fec42783          	lw	a5,-20(s0)
20019590:	0791                	addi	a5,a5,4
20019592:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
20019596:	fec42703          	lw	a4,-20(s0)
2001959a:	200107b7          	lui	a5,0x20010
2001959e:	2f478793          	addi	a5,a5,756 # 200102f4 <metal_constructors_end>
200195a2:	fcf71de3          	bne	a4,a5,2001957c <metal_init+0x3e>
200195a6:	a021                	j	200195ae <metal_init+0x70>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:21
        return;
200195a8:	0001                	nop
200195aa:	a011                	j	200195ae <metal_init+0x70>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:26
        return;
200195ac:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:37
    }
}
200195ae:	40f2                	lw	ra,28(sp)
200195b0:	4462                	lw	s0,24(sp)
200195b2:	6105                	addi	sp,sp,32
200195b4:	8082                	ret

200195b6 <metal_fini>:
metal_fini():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:39

void metal_fini(void) {
200195b6:	1101                	addi	sp,sp,-32
200195b8:	ce06                	sw	ra,28(sp)
200195ba:	cc22                	sw	s0,24(sp)
200195bc:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:42
    /* Make sure the destructors only run once */
    static int fini_done = 0;
    if (fini_done) {
200195be:	800017b7          	lui	a5,0x80001
200195c2:	b207a783          	lw	a5,-1248(a5) # 80000b20 <metal_segment_heap_target_end+0xfffff360>
200195c6:	efa9                	bnez	a5,20019620 <metal_fini+0x6a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:45
        return;
    }
    fini_done = 1;
200195c8:	800017b7          	lui	a5,0x80001
200195cc:	4705                	li	a4,1
200195ce:	b2e7a023          	sw	a4,-1248(a5) # 80000b20 <metal_segment_heap_target_end+0xfffff360>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:47

    if (&metal_destructors_end <= &metal_destructors_start) {
200195d2:	200107b7          	lui	a5,0x20010
200195d6:	2f878713          	addi	a4,a5,760 # 200102f8 <__fini_array_end>
200195da:	200107b7          	lui	a5,0x20010
200195de:	2f878793          	addi	a5,a5,760 # 200102f8 <__fini_array_end>
200195e2:	04e7f163          	bgeu	a5,a4,20019624 <metal_fini+0x6e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:51
        return;
    }

    metal_destructor_t *funcptr = &metal_destructors_start;
200195e6:	200107b7          	lui	a5,0x20010
200195ea:	2f878793          	addi	a5,a5,760 # 200102f8 <__fini_array_end>
200195ee:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
200195f2:	a831                	j	2001960e <metal_fini+0x58>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:53
        metal_destructor_t func = *funcptr;
200195f4:	fec42783          	lw	a5,-20(s0)
200195f8:	439c                	lw	a5,0(a5)
200195fa:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:55

        func();
200195fe:	fe842783          	lw	a5,-24(s0)
20019602:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:57

        funcptr += 1;
20019604:	fec42783          	lw	a5,-20(s0)
20019608:	0791                	addi	a5,a5,4
2001960a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
2001960e:	fec42703          	lw	a4,-20(s0)
20019612:	200107b7          	lui	a5,0x20010
20019616:	2f878793          	addi	a5,a5,760 # 200102f8 <__fini_array_end>
2001961a:	fcf71de3          	bne	a4,a5,200195f4 <metal_fini+0x3e>
2001961e:	a021                	j	20019626 <metal_fini+0x70>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:43
        return;
20019620:	0001                	nop
20019622:	a011                	j	20019626 <metal_fini+0x70>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:48
        return;
20019624:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:59
    }
}
20019626:	40f2                	lw	ra,28(sp)
20019628:	4462                	lw	s0,24(sp)
2001962a:	6105                	addi	sp,sp,32
2001962c:	8082                	ret

2001962e <metal_init_run>:
metal_init_run():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:69
 * in the case that users don't want the metal constructors or
 * destructors to run.
 */

void metal_init_run(void) __attribute__((weak));
void metal_init_run(void) { metal_init(); }
2001962e:	1141                	addi	sp,sp,-16
20019630:	c606                	sw	ra,12(sp)
20019632:	c422                	sw	s0,8(sp)
20019634:	0800                	addi	s0,sp,16
20019636:	f09ff0ef          	jal	ra,2001953e <metal_init>
2001963a:	0001                	nop
2001963c:	40b2                	lw	ra,12(sp)
2001963e:	4422                	lw	s0,8(sp)
20019640:	0141                	addi	sp,sp,16
20019642:	8082                	ret

20019644 <metal_fini_run>:
metal_fini_run():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:72

void metal_fini_run(void) __attribute__((weak));
void metal_fini_run(void) { metal_fini(); }
20019644:	1141                	addi	sp,sp,-16
20019646:	c606                	sw	ra,12(sp)
20019648:	c422                	sw	s0,8(sp)
2001964a:	0800                	addi	s0,sp,16
2001964c:	f6bff0ef          	jal	ra,200195b6 <metal_fini>
20019650:	0001                	nop
20019652:	40b2                	lw	ra,12(sp)
20019654:	4422                	lw	s0,8(sp)
20019656:	0141                	addi	sp,sp,16
20019658:	8082                	ret

2001965a <metal_tty_putc>:
metal_tty_putc():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/tty.c:12
int metal_tty_putc(int c) {
2001965a:	1101                	addi	sp,sp,-32
2001965c:	ce06                	sw	ra,28(sp)
2001965e:	cc22                	sw	s0,24(sp)
20019660:	1000                	addi	s0,sp,32
20019662:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/tty.c:13
    return metal_uart_putc(__METAL_DT_STDOUT_UART_HANDLE, c);
20019666:	fec42583          	lw	a1,-20(s0)
2001966a:	800017b7          	lui	a5,0x80001
2001966e:	a5c78513          	addi	a0,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
20019672:	a2eff0ef          	jal	ra,200188a0 <metal_uart_putc>
20019676:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/tty.c:14
}
20019678:	853e                	mv	a0,a5
2001967a:	40f2                	lw	ra,28(sp)
2001967c:	4462                	lw	s0,24(sp)
2001967e:	6105                	addi	sp,sp,32
20019680:	8082                	ret

20019682 <_exit>:
_exit():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_exit.c:3
#include <metal/shutdown.h>

void _exit(int exit_status) {
20019682:	1101                	addi	sp,sp,-32
20019684:	ce06                	sw	ra,28(sp)
20019686:	cc22                	sw	s0,24(sp)
20019688:	1000                	addi	s0,sp,32
2001968a:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_exit.c:4
    metal_shutdown(exit_status);
2001968e:	fec42503          	lw	a0,-20(s0)
20019692:	8b4ff0ef          	jal	ra,20018746 <metal_shutdown>
