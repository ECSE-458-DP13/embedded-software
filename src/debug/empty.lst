
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/debug/empty.elf:     file format elf32-littleriscv
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/debug/empty.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x20010000

Program Header:
    LOAD off    0x00001000 vaddr 0x20010000 paddr 0x20010000 align 2**12
         filesz 0x000011b4 memsz 0x000011b4 flags rwx
    LOAD off    0x00003000 vaddr 0x80000000 paddr 0x20018818 align 2**12
         filesz 0x00000b0c memsz 0x00000b0c flags rw-
     TLS off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**2
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00003b10 vaddr 0x80000b10 paddr 0x80000b10 align 2**12
         filesz 0x00000000 memsz 0x00000cb0 flags rw-
    LOAD off    0x00003b0c vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00004200 vaddr 0x20011200 paddr 0x20011200 align 2**12
         filesz 0x00007616 memsz 0x00007616 flags r-x
    LOAD off    0x0000b816 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .init             000002e6  20010000  20010000  00001000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .init_array       0000000c  200102e8  200102e8  000012e8  2**3  CONTENTS, ALLOC, LOAD, DATA
  2 .ctors            0000007a  200102f4  200102f4  000012f4  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata           00000e44  20010370  20010370  00001370  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .text             00007616  20011200  20011200  00004200  2**7  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .data             00000b0c  80000000  20018818  00003000  2**3  CONTENTS, ALLOC, LOAD, DATA
  6 .bss              000000a4  80000b10  80000b10  00003b10  2**3  ALLOC
  7 .stack            00000400  80000bc0  80000bc0  00003b10  2**4  ALLOC
  8 .heap             00000800  80000fc0  80000fc0  00003b10  2**3  ALLOC
  9 .debug_info       000367e1  00000000  00000000  0000b816  2**0  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev     00004326  00000000  00000000  00041ff7  2**0  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges    00000ce0  00000000  00000000  00046320  2**3  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges     00000c38  00000000  00000000  00047000  2**3  CONTENTS, READONLY, DEBUGGING
 13 .debug_line       0000f0ff  00000000  00000000  00047c38  2**0  CONTENTS, READONLY, DEBUGGING
 14 .debug_str        0000591f  00000000  00000000  00056d37  2**0  CONTENTS, READONLY, DEBUGGING
 15 .comment          00000028  00000000  00000000  0005c656  2**0  CONTENTS, READONLY
 16 .riscv.attributes 0000002b  00000000  00000000  0005c67e  2**0  CONTENTS, READONLY
 17 .debug_frame      000031ec  00000000  00000000  0005c6ac  2**2  CONTENTS, READONLY, DEBUGGING
 18 .debug_loc        00001539  00000000  00000000  0005f898  2**0  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
20010000 l    d  .init	00000000 .init
200102e8 l    d  .init_array	00000000 .init_array
200102f4 l    d  .ctors	00000000 .ctors
20010370 l    d  .rodata	00000000 .rodata
20011200 l    d  .text	00000000 .text
80000000 l    d  .data	00000000 .data
80000b10 l    d  .bss	00000000 .bss
80000bc0 l    d  .stack	00000000 .stack
80000fc0 l    d  .heap	00000000 .heap
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    df *ABS*	00000000 scrub.o
200100ca l     F .init	00000000 __metal_memory_scrub
20010138 l       .init	00000000 skip_scrub
00000000 l    df *ABS*	00000000 synchronize_harts.c
00000000 l    df *ABS*	00000000 crt0.o
20010248 l       .init	00000000 _skip_init
20011094 l       .rodata	00000000 argv
20011098 l       .rodata	00000000 envp
2001109c l       .rodata	00000000 name
00000000 l    df *ABS*	00000000 sifive_fe310-g000_pll.c
200152e6 l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllsel0
20015300 l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllref
2001531a l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_divider_base
20015330 l     F .text	00000014 __metal_driver_sifive_fe310_g000_pll_divider_offset
20015344 l     F .text	00000012 __metal_driver_sifive_fe310_g000_pll_config_base
20015356 l     F .text	00000010 __metal_driver_sifive_fe310_g000_pll_config_offset
20015366 l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_init_rate
2001537c l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
2001538e l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
20010734 l     O .rodata	00000880 pll_configs
200153a0 l     F .text	0000004e get_pll_config_freq
20015602 l     F .text	000000ac find_closest_config
200156ae l     F .text	000001a4 configure_pll
00000000 l    df *ABS*	00000000 tty.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 findfp.c
200119b8 l     F .text	00000068 std
00000000 l    df *ABS*	00000000 nano-vfprintf.c
20011e68 l     F .text	0000002a __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 riscv_clint0.c
20012726 l     F .text	00000026 __metal_driver_sifive_clint0_control_base
2001274c l     F .text	00000024 __metal_driver_sifive_clint0_num_interrupts
20012770 l     F .text	0000003c __metal_driver_sifive_clint0_interrupt_parents
200127ac l     F .text	00000030 __metal_driver_sifive_clint0_interrupt_lines
2001290c l     F .text	00000036 _get_cpu_intc
00000000 l    df *ABS*	00000000 riscv_cpu.c
20012e40 l     F .text	00000024 __metal_driver_cpu_hartid
20012e64 l     F .text	0000002a __metal_driver_cpu_timebase
20012e8e l     F .text	0000002a __metal_driver_cpu_interrupt_controller
20012eb8 l     F .text	00000024 __metal_driver_cpu_buserror
00000000 l    df *ABS*	00000000 riscv_plic0.c
20014844 l     F .text	0000002a __metal_driver_sifive_plic0_control_base
2001486e l     F .text	0000002a __metal_driver_sifive_plic0_num_interrupts
20014898 l     F .text	00000028 __metal_driver_sifive_plic0_max_priority
200148c0 l     F .text	00000028 __metal_driver_sifive_plic0_interrupt_parents
200148e8 l     F .text	00000022 __metal_driver_sifive_plic0_interrupt_lines
2001490a l     F .text	0000001e __metal_driver_sifive_plic0_context_ids
00000000 l    df *ABS*	00000000 sifive_gpio0.c
20015a30 l     F .text	00000026 __metal_driver_sifive_gpio0_base
20015a56 l     F .text	0000002a __metal_driver_sifive_gpio0_interrupt_parent
20015a80 l     F .text	0000035e __metal_driver_sifive_gpio0_interrupt_lines
00000000 l    df *ABS*	00000000 sifive_i2c0.c
2001648e l     F .text	0000002a __metal_driver_sifive_i2c0_control_base
200164b8 l     F .text	0000002e __metal_driver_sifive_i2c0_clock
200164e6 l     F .text	0000002a __metal_driver_sifive_i2c0_pinmux
20016510 l     F .text	00000028 __metal_driver_sifive_i2c0_pinmux_output_selector
20016538 l     F .text	00000028 __metal_driver_sifive_i2c0_pinmux_source_selector
20016560 l     F .text	00000034 pre_rate_change_callback
20016594 l     F .text	00000030 post_rate_change_callback
200165c4 l     F .text	0000008e __metal_driver_sifive_i2c0_init
20016652 l     F .text	00000020 __metal_driver_sifive_i2c0_get_baud_rate
20016672 l     F .text	00000156 __metal_driver_sifive_i2c0_set_baud_rate
200167c8 l     F .text	00000148 __metal_driver_sifive_i2c0_write_addr
20016910 l     F .text	00000168 __metal_driver_sifive_i2c0_write
20016a78 l     F .text	00000158 __metal_driver_sifive_i2c0_read
20016bd0 l     F .text	00000260 __metal_driver_sifive_i2c0_transfer
00000000 l    df *ABS*	00000000 sifive_uart0.c
20016e30 l     F .text	00000040 __metal_driver_sifive_uart0_control_base
20016e70 l     F .text	00000048 __metal_driver_sifive_uart0_interrupt_parent
20016eb8 l     F .text	0000003c __metal_driver_sifive_uart0_interrupt_line
20016ef4 l     F .text	00000048 __metal_driver_sifive_uart0_clock
20016f3c l     F .text	00000040 __metal_driver_sifive_uart0_pinmux
20016f7c l     F .text	0000003c __metal_driver_sifive_uart0_pinmux_output_selector
20016fb8 l     F .text	00000040 __metal_driver_sifive_uart0_pinmux_source_selector
20017398 l     F .text	000000d8 pre_rate_change_callback_func
20017470 l     F .text	0000002e post_rate_change_callback_func
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfrosc.c
200150fe l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfrosc_ref
20015118 l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfrosc_config_base
2001512e l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfrosc_config_offset
20015142 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfxosc.c
200151fa l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfxosc_ref
20015214 l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfxosc_config_base
2001522a l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfxosc_config_offset
2001523e l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_prci.c
200159b8 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 cpu.c
00000000 l    df *ABS*	00000000 i2c.c
00000000 l    df *ABS*	00000000 shutdown.c
00000000 l    df *ABS*	00000000 time.c
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 vector.o
20017a80 l       .text	00000000 IRQ_0
20017a84 l       .text	00000000 IRQ_1
20017a88 l       .text	00000000 IRQ_2
20017a8c l       .text	00000000 IRQ_3
20017a90 l       .text	00000000 IRQ_4
20017a94 l       .text	00000000 IRQ_5
20017a98 l       .text	00000000 IRQ_6
20017a9c l       .text	00000000 IRQ_7
20017aa0 l       .text	00000000 IRQ_8
20017aa4 l       .text	00000000 IRQ_9
20017aa8 l       .text	00000000 IRQ_10
20017aac l       .text	00000000 IRQ_11
20017ab0 l       .text	00000000 IRQ_12
20017ab4 l       .text	00000000 IRQ_13
20017ab8 l       .text	00000000 IRQ_14
20017abc l       .text	00000000 IRQ_15
20017ac0 l       .text	00000000 IRQ_LC0
20017ac4 l       .text	00000000 IRQ_LC1
20017ac8 l       .text	00000000 IRQ_LC2
20017acc l       .text	00000000 IRQ_LC3
20017ad0 l       .text	00000000 IRQ_LC4
20017ad4 l       .text	00000000 IRQ_LC5
20017ad8 l       .text	00000000 IRQ_LC6
20017adc l       .text	00000000 IRQ_LC7
20017ae0 l       .text	00000000 IRQ_LC8
20017ae4 l       .text	00000000 IRQ_LC9
20017ae8 l       .text	00000000 IRQ_LC10
20017aec l       .text	00000000 IRQ_LC11
20017af0 l       .text	00000000 IRQ_LC12
20017af4 l       .text	00000000 IRQ_LC13
20017af8 l       .text	00000000 IRQ_LC14
20017afc l       .text	00000000 IRQ_LC15
00000000 l    df *ABS*	00000000 fixed-clock.c
20017b00 l     F .text	00000070 __metal_driver_fixed_clock_rate
00000000 l    df *ABS*	00000000 timer.c
00000000 l    df *ABS*	00000000 sys_close.c
00000000 l    df *ABS*	00000000 sys_fstat.c
00000000 l    df *ABS*	00000000 sys_isatty.c
00000000 l    df *ABS*	00000000 sys_lseek.c
00000000 l    df *ABS*	00000000 sys_read.c
00000000 l    df *ABS*	00000000 sys_sbrk.c
80000b08 l     O .data	00000004 __brk
00000000 l    df *ABS*	00000000 sys_write.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 __atexit.c
80000b24 l     O .bss	0000008c _global_atexit0
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 init.c
80000b1c l     O .bss	00000004 init_done.1531
80000b20 l     O .bss	00000004 fini_done.1540
00000000 l    df *ABS*	00000000 sys_exit.c
00000000 l    df *ABS*	00000000 impure.c
80000000 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 inline.c
00000000 l    df *ABS*	00000000 
200102f4 l       .init_array	00000000 metal_constructors_end
200102f8 l       .init_array	00000000 __fini_array_end
200102f8 l       .init_array	00000000 metal_destructors_end
200102f8 l       .init_array	00000000 metal_destructors_start
200102f8 l       .init_array	00000000 __fini_array_start
200102e8 l       .init_array	00000000 __init_array_end
200102e8 l       .init_array	00000000 __preinit_array_end
200102e8 l       .init_array	00000000 __init_array_start
200102e8 l       .init_array	00000000 metal_constructors_start
200102e8 l       .init_array	00000000 __preinit_array_start
20011054 g     O .rodata	00000040 __metal_driver_vtable_sifive_uart0
200122d4 g     F .text	0000002a _isatty_r
20013750  w    F .text	00000096 metal_lc4_interrupt_vector_handler
20011552 g     F .text	000000da _puts_r
200177ce g     F .text	00000046 metal_i2c_write
200122fe g     F .text	0000002e _lseek_r
20017602 g     F .text	00000026 metal_clock_get_rate_hz
200172f8 g     F .text	000000a0 __metal_driver_sifive_uart0_set_baud_rate
20012ae8 g     F .text	00000058 __metal_driver_riscv_clint0_set_vector_mode
2001714c g     F .text	0000004a __metal_driver_sifive_uart0_set_tx_watermark
200136ba  w    F .text	00000096 metal_lc3_interrupt_vector_handler
20013f40 g     F .text	00000064 __metal_valid_interrupt_id
2001150e g     F .text	00000044 printf
800012c0 g       .data	00000000 __global_pointer$
200102ec g     O .init_array	00000004 _use_hfxosc_ptr
200143ba g     F .text	0000001c __metal_driver_riscv_cpu_controller_get_vector_mode
2001034a g     F .ctors	00000024 metal_tty_init
200175ae g     F .text	00000054 _metal_clock_append_to_callbacks
20014964 g     F .text	00000046 __metal_plic0_complete_interrupt
20014190 g     F .text	000001d6 __metal_driver_riscv_cpu_controller_interrupt_register
200102e8 g     O .init_array	00000004 _metal_sifive_fe310_g000_pll_init_ptr
20012214 g     F .text	00000036 __sseek
20011a6e g     F .text	00000066 __sinit
80000ac4  w    O .data	00000004 __metal_i2c_table
2001163a g     F .text	000000c0 __swbuf_r
80000b10 g       .data	00000000 __tls_base
20011a2a g     F .text	00000044 __sfmoreglue
20012348 g     F .text	00000002 __malloc_unlock
2001779a g     F .text	00000034 metal_i2c_init
20017752 g     F .text	0000002e metal_cpu_get
80000a5c g     O .data	00000020 __metal_dt_serial_10013000
20016068 g     F .text	0000004a __metal_driver_sifive_gpio0_disable_io
20010530 g     O .rodata	00000064 __metal_driver_vtable_riscv_clint0
80000bb4 g       .bss	00000000 metal_segment_bss_target_end
200127dc g     F .text	0000009a __metal_clint0_mtime_get
200147b8 g     F .text	0000002e __metal_driver_cpu_get_instruction_length
00000001 g       *ABS*	00000000 __metal_chicken_bit
20017210 g     F .text	00000030 __metal_driver_sifive_uart0_get_rx_watermark
20015e1e g     F .text	00000046 __metal_driver_sifive_gpio0_disable_input
20017de8 g     F .text	0000000c __errno
08000000 g       .rodata	00000000 metal_segment_itim_target_start
20017702 g     F .text	0000002a metal_cpu_get_timebase
2001711c g     F .text	00000030 __metal_driver_sifive_uart0_txready
200170aa g     F .text	0000003a __metal_driver_sifive_uart0_rx_interrupt_enable
2001014a g     F .init	0000000e __metal_synchronize_harts
80000b10 g       .data	00000000 metal_segment_bss_target_start
20012876 g     F .text	00000096 __metal_driver_riscv_clint0_mtimecmp_set
200122a8 g     F .text	0000002c _fstat_r
200162b8 g     F .text	00000188 __metal_driver_sifive_gpio0_clear_int
80000bb0 g     O .bss	00000004 errno
20015492 g     F .text	00000170 __metal_driver_sifive_fe310_g000_pll_get_rate_hz
00000400 g       *ABS*	00000000 __stack_size
20017674 g     F .text	00000032 metal_clock_register_pre_rate_change_callback
20013a3e  w    F .text	00000096 metal_lc9_interrupt_vector_handler
200100d6  w    F .init	00000000 __metal_before_start
200187ae  w    F .text	00000016 metal_init_run
80000a7c g     O .data	00000020 __metal_dt_serial_10023000
200106d0 g     O .rodata	00000064 __metal_driver_vtable_riscv_plic0
2001068c g     O .rodata	00000044 __metal_driver_vtable_cpu
20017a40 g     F .text	0000002e metal_uart_set_baud_rate
2001749e g     F .text	000000d0 __metal_driver_sifive_uart0_init
00000000 g       *ABS*	00000000 __metal_eccscrub_bit
80000a38 g     O .data	00000024 __metal_dt_i2c_10016000
20014446 g     F .text	00000072 __metal_driver_cpu_mcycle_get
20010fb4 g     O .rodata	0000000c __metal_driver_vtable_sifive_fe310_g000_pll
80000fc0 g       .heap	00000000 metal_segment_heap_target_start
20011a20 g     F .text	0000000a _cleanup_r
80000ad8 g     O .data	00000008 __metal_dt_cpu_0
200139a8  w    F .text	00000096 metal_lc8_interrupt_vector_handler
20015852 g     F .text	00000166 __metal_driver_sifive_fe310_g000_pll_set_rate_hz
20017bfe g     F .text	0000004a metal_timer_get_timebase_frequency
20015062 g     F .text	00000074 __metal_driver_riscv_plic0_affinity_set_threshold
2001162c g     F .text	0000000e puts
20013c96  w    F .text	00000096 metal_lc13_interrupt_vector_handler
2001304a g     F .text	00000018 __metal_default_exception_handler
20017c6a g     F .text	00000026 _fstat
20012e0c g     F .text	00000034 __metal_driver_riscv_clint0_set_interrupt
200143d6 g     F .text	00000054 __metal_driver_riscv_cpu_controller_set_vector_mode
20012edc g     F .text	00000030 __metal_driver_cpu_get
20010628 g     O .rodata	00000064 __metal_driver_vtable_riscv_cpu_intc
20012f3e g     F .text	00000018 __metal_interrupt_global_disable
200150d6 g     F .text	00000028 __metal_driver_riscv_plic0_affinity_get_threshold
20013912  w    F .text	00000096 metal_lc7_interrupt_vector_handler
20013ad4  w    F .text	00000096 metal_lc10_interrupt_vector_handler
2001216c g     F .text	0000002a _sbrk_r
20014e82 g     F .text	00000050 __metal_driver_riscv_plic0_disable
20014060 g     F .text	0000004e __metal_exception_register
200186be g     F .text	00000078 metal_init
200126f8 g     F .text	0000002e _read_r
200145da g     F .text	00000016 __metal_driver_cpu_timer_controller_interrupt
20015f00 g     F .text	00000040 __metal_driver_sifive_gpio0_enable_output
80000000 g       .rodata	00000000 metal_segment_lim_target_end
2001313a g     F .text	00000068 __metal_default_sw_handler
200176a6 g     F .text	00000032 metal_clock_register_post_rate_change_callback
8000006c g     O .data	0000000c __metal_dt_clock_2
20016ff8 g     F .text	00000020 __metal_driver_sifive_uart0_interrupt_controller
2001836c g     F .text	00000352 .hidden __umoddi3
20017c90 g     F .text	00000020 _isatty
20015fc6 g     F .text	00000040 __metal_driver_sifive_gpio0_output_toggle
20017038 g     F .text	0000003a __metal_driver_sifive_uart0_tx_interrupt_enable
80000b00 g     O .data	00000008 __metal_driver_vtable_fixed_clock
80000acc g     O .data	00000004 _global_impure_ptr
200131a2  w    F .text	00000092 metal_timer_interrupt_vector_handler
20017e54 g     F .text	0000006a __libc_init_array
20015f40 g     F .text	00000040 __metal_driver_sifive_gpio0_output_set
20013b6a  w    F .text	00000096 metal_lc11_interrupt_vector_handler
2001800e g     F .text	0000035e .hidden __udivdi3
2001103c g     O .rodata	00000018 __metal_driver_vtable_sifive_i2c0
200152c4 g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz
20014366 g     F .text	0000002a __metal_driver_riscv_cpu_controller_interrupt_enable
20017d04 g     F .text	0000006a _sbrk
20015eba g     F .text	00000046 __metal_driver_sifive_gpio0_disable_output
2001756e g     F .text	00000040 _metal_clock_call_all_callbacks
200102c4 g     F .init	00000002 _init
20012fa0 g     F .text	0000001a __metal_interrupt_timer_disable
200160b2 g     F .text	00000206 __metal_driver_sifive_gpio0_config_int
20014690 g     F .text	00000062 __metal_driver_cpu_clear_sw_ipi
20011000 g     O .rodata	0000003c __metal_driver_vtable_sifive_gpio0
20017072 g     F .text	00000038 __metal_driver_sifive_uart0_tx_interrupt_disable
20016006 g     F .text	00000062 __metal_driver_sifive_gpio0_enable_io
20017e1c g     F .text	00000038 __libc_fini_array
80000ab4 g     O .data	0000000c __metal_dt_clock_4
20018736 g     F .text	00000078 metal_fini
20016440 g     F .text	00000020 __metal_driver_gpio_interrupt_controller
2001461a g     F .text	00000014 __metal_driver_cpu_get_sw_interrupt_id
20014824 g     F .text	00000020 __metal_driver_cpu_get_buserror
80000000 g       .data	00000000 metal_segment_data_target_start
20012ff2 g     F .text	0000002c __metal_interrupt_local_enable
20012dd8 g     F .text	00000034 __metal_driver_riscv_clint0_clear_interrupt
200187da g     F .text	00000028 metal_tty_putc
20014b62 g     F .text	00000018 __metal_plic0_default_handler
20017d6e  w    F .text	00000070 write
00000000 g       *ABS*	00000000 __tbss_size
80000060 g     O .data	0000000c __metal_dt_clock_0
200178c6 g     F .text	000000e6 metal_gettimeofday
00000800 g       *ABS*	00000000 __heap_size
20014ed2 g     F .text	00000030 __metal_driver_riscv_plic0_set_threshold
20013234 g     F .text	00000016 __metal_default_beu_handler
20010494 g     O .rodata	00000020 __sf_fake_stderr
20012fd6 g     F .text	0000001c __metal_interrupt_external_disable
20017018 g     F .text	00000020 __metal_driver_sifive_uart0_get_interrupt_id
20017814 g     F .text	00000046 metal_i2c_read
2001442a g     F .text	0000001c __metal_driver_riscv_cpu_controller_command_request
200140ae g     F .text	000000e2 __metal_driver_riscv_cpu_controller_interrupt_init
20011e92 g     F .text	00000042 __sfputs_r
20014772 g     F .text	00000046 __metal_driver_cpu_exception_register
20012f56 g     F .text	00000018 __metal_interrupt_software_enable
2001358e  w    F .text	00000096 metal_lc1_interrupt_vector_handler
2001232c g     F .text	0000001a memchr
2001785a g     F .text	00000030 metal_i2c_set_baud_rate
20011cde g     F .text	000000ac _free_r
80000b18 g     O .bss	00000004 _global_atexit
20014a2a g     F .text	00000062 __metal_driver_riscv_plic0_set_priority
20013e58 g     F .text	00000050 __metal_controller_interrupt_vector_mode
20017f46 g     F .text	000000c8 __call_exitprocs
80000fc0 g       .stack	00000000 _sp
200102f0 g     O .init_array	00000004 _metal_tty_init_ptr
20010158 g     F .init	00000000 _start
20015154 g     F .text	00000084 __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz
20017bb4 g     F .text	0000004a metal_timer_get_cyclecount
20017cb0 g     F .text	0000002a _lseek
20014752 g     F .text	00000020 __metal_driver_cpu_controller_interrupt
200147e6 g     F .text	0000001e __metal_driver_cpu_get_exception_pc
20012fba g     F .text	0000001c __metal_interrupt_external_enable
20017ebe g     F .text	00000088 __register_exitproc
20017240 g     F .text	00000042 __metal_driver_sifive_uart0_putc
20014c1e g     F .text	00000152 __metal_driver_riscv_plic0_init
20014e32 g     F .text	00000050 __metal_driver_riscv_plic0_enable
20015e8e g     F .text	0000002c __metal_driver_sifive_gpio0_output
2001387c  w    F .text	00000096 metal_lc6_interrupt_vector_handler
20012f0c g     F .text	0000001a __metal_myhart_id
20016460 g     F .text	0000002e __metal_driver_gpio_get_interrupt_id
200130a8  w    F .text	00000092 metal_software_interrupt_vector_handler
20014390 g     F .text	0000002a __metal_driver_riscv_cpu_controller_interrupt_disable
2001227e g     F .text	0000002a _close_r
200176d8 g     F .text	0000002a metal_cpu_get_timer
200172d8 g     F .text	00000020 __metal_driver_sifive_uart0_get_baud_rate
200129ca g     F .text	000000da __metal_driver_riscv_clint0_register
80000ad0 g     O .data	00000008 __metal_dt_clint_2000000
200116fa g     F .text	00000110 __swsetup_r
20011ad4 g     F .text	0000009a __sfp
20017628 g     F .text	0000004c metal_clock_set_rate_hz
20012196 g     F .text	00000030 __sread
20015dde g     F .text	00000040 __metal_driver_sifive_gpio0_enable_input
200102c6  w    F .init	00000000 secondary_main
2001307a  w    F .text	0000002e metal_interrupt_vector_handler
20012346 g     F .text	00000002 __malloc_lock
200170e4 g     F .text	00000038 __metal_driver_sifive_uart0_rx_interrupt_disable
20011954 g     F .text	00000064 _fflush_r
200149f0 g     F .text	0000003a __metal_plic0_get_threshold
200159ca g     F .text	0000002e __metal_driver_sifive_fe310_g000_prci_get_reg
200104b4 g     O .rodata	00000020 __sf_fake_stdin
20013fa4 g     F .text	000000bc __metal_local_interrupt_enable
20012ca4 g     F .text	00000134 __metal_driver_riscv_clint0_command_request
20011cce g     F .text	00000010 memset
200137e6  w    F .text	00000096 metal_lc5_interrupt_vector_handler
20011200 g     F .text	0000030e main
80000b10 g       .data	00000000 metal_segment_data_target_end
200171c6 g     F .text	0000004a __metal_driver_sifive_uart0_set_rx_watermark
80000ae8 g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_hfrosc
2001462e g     F .text	00000062 __metal_driver_cpu_set_sw_ipi
200146f2 g     F .text	00000060 __metal_driver_cpu_get_msip
200178b8 g     F .text	0000000e metal_shutdown
08000000 g       .rodata	00000000 metal_segment_itim_target_end
20014804 g     F .text	00000020 __metal_driver_cpu_set_exception_pc
20014928 g     F .text	0000003c __metal_plic0_claim_interrupt
20017196 g     F .text	00000030 __metal_driver_sifive_uart0_get_tx_watermark
2001224a g     F .text	00000006 __sclose
20013c00  w    F .text	00000096 metal_lc12_interrupt_vector_handler
20010092 g     F .init	00000000 metal_mem_scrub
20011d8a g     F .text	000000de _malloc_r
20012acc g     F .text	0000001c __metal_driver_riscv_clint0_get_vector_mode
80000ae4 g     O .data	00000004 __metal_dt_prci_10008000
200144b8 g     F .text	00000046 __metal_driver_cpu_timebase_get
20014fc6 g     F .text	0000009c __metal_driver_riscv_plic0_affinity_disable
20010000 g       .init	00000000 _enter
20017780 g     F .text	0000001a metal_cpu_get_current_hartid
20015250 g     F .text	00000074 __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz
20017a80 g       .text	00000000 __metal_vector_table
200111b8 g       *ABS*	00000000 metal_segment_itim_source_start
80000ac0  w    O .data	00000004 __metal_cpu_table
80000090 g     O .data	000003d0 __metal_dt_cpu_0_interrupt_controller
200102c4 g     F .init	00000002 _fini
2001150e g     F .text	00000044 iprintf
80000000 g       .rodata	00000000 metal_segment_lim_target_start
200110a8 g     O .rodata	00000100 .hidden __clz_tab
20014a8c g     F .text	00000034 __metal_driver_riscv_plic0_get_priority
20010320 g     F .ctors	0000002a use_hfxosc
20012f26 g     F .text	00000018 __metal_interrupt_global_enable
20017dde g     F .text	0000000a atexit
20012250 g     F .text	0000002e _write_r
20012f86 g     F .text	0000001a __metal_interrupt_timer_enable
20017282 g     F .text	00000056 __metal_driver_sifive_uart0_getc
20012bf2 g     F .text	000000b2 __metal_driver_riscv_clint0_disable
2001234a g     F .text	0000010c _printf_common
80000ac8 g     O .data	00000004 _impure_ptr
20014564 g     F .text	00000076 __metal_driver_cpu_mtimecmp_set
2001180a g     F .text	0000014a __sflush_r
20014f02 g     F .text	00000028 __metal_driver_riscv_plic0_get_threshold
200153ee g     F .text	000000a4 __metal_driver_sifive_fe310_g000_pll_init
80000078 g     O .data	0000000c __metal_dt_clock_5
200159f8 g     F .text	00000038 __metal_driver_sifive_fe310_g000_prci_set_reg
20017b70 g     F .text	00000020 __metal_driver_fixed_clock_get_rate_hz
20012b40 g     F .text	000000b2 __metal_driver_riscv_clint0_enable
20018818 g       *ABS*	00000000 metal_segment_data_source_start
2001013c g       .init	00000000 early_trap_vector
800017c0 g       .heap	00000000 metal_segment_heap_target_end
20013ea8 g     F .text	00000098 __metal_controller_interrupt_vector
80000aa8 g     O .data	0000000c __metal_dt_clock_1
80000460 g     O .data	000005d8 __metal_dt_interrupt_controller_c000000
20011bda g     F .text	00000058 __swhatbuf_r
20015f80 g     F .text	00000046 __metal_driver_sifive_gpio0_output_clear
2001324a g     F .text	00000066 __metal_default_timer_handler
20017d6e g     F .text	00000070 _write
20014b7a g     F .text	000000a4 __metal_plic0_handler
20013624  w    F .text	00000096 metal_lc2_interrupt_vector_handler
20013dc2  w    F .text	00000096 metal_lc15_interrupt_vector_handler
2001772c g     F .text	00000026 metal_cpu_interrupt_controller
200121c6 g     F .text	0000004e __swrite
20017df4 g     F .text	00000028 exit
20011ed4 g     F .text	00000298 _vfiprintf_r
20011b6e g     F .text	0000006c _fwalk_reent
20017b90 g     F .text	00000024 __metal_driver_fixed_clock_set_rate_hz
200111b8 g       *ABS*	00000000 metal_segment_lim_source_start
200104d4 g     O .rodata	00000020 __sf_fake_stdout
80000ae0 g     O .data	00000004 __metal_dt_gpio_10012000
20013062 g     F .text	00000018 __metal_default_interrupt_handler
20017a12 g     F .text	0000002e metal_uart_putc
20017cda g     F .text	0000002a _read
200187c4  w    F .text	00000016 metal_fini_run
20015e64 g     F .text	0000002a __metal_driver_sifive_gpio0_input
20013300 g     F .text	0000017e __metal_exception_handler
200134f8  w    F .text	00000096 metal_lc0_interrupt_vector_handler
20018802 g     F .text	00000014 _exit
2001788a g     F .text	0000002e metal_i2c_get_device
200144fe g     F .text	00000066 __metal_driver_cpu_mtime_get
20011c32 g     F .text	0000009c __smakebuf_r
20012aa4 g     F .text	00000028 __metal_driver_riscv_clint0_vector_register
20012456 g     F .text	000002a2 _printf_i
80000b14 g     O .bss	00000004 __malloc_sbrk_start
20013d2c  w    F .text	00000096 metal_lc14_interrupt_vector_handler
80000af0 g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_hfxosc
20012942 g     F .text	00000088 __metal_driver_riscv_clint0_init
80000b10 g     O .bss	00000004 __malloc_free_list
200102f4 g     F .ctors	0000002c metal_sifive_fe310_g000_pll_init
20011ed4 g     F .text	00000298 _vfprintf_r
200145f0 g     F .text	00000014 __metal_driver_cpu_get_timer_interrupt_id
20014ac0 g     F .text	000000a2 __metal_plic0_enable
20010090  w      .init	00000000 __register_frame_info
200151d8 g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz
20014604 g     F .text	00000016 __metal_driver_cpu_sw_controller_interrupt
2001301e g     F .text	0000002c __metal_interrupt_local_disable
20012f6e g     F .text	00000018 __metal_interrupt_software_disable
200179ac g     F .text	0000003a metal_time
200179e6 g     F .text	0000002c metal_uart_init
80000a9c g     O .data	0000000c __metal_dt_clock_3
80000084 g     O .data	0000000c __metal_dt_clock_6
200149aa g     F .text	00000046 __metal_plic0_set_threshold
20014f2a g     F .text	0000009c __metal_driver_riscv_plic0_affinity_enable
20017c48 g     F .text	00000022 _close
80000af8 g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_prci
00000000 g       *ABS*	00000000 __metal_boot_hart
20014d70 g     F .text	000000c2 __metal_driver_riscv_plic0_register



Disassembly of section .init:

20010000 <_enter>:
_enter():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:24
     * it's not valid to obtain the address of any symbol without GP
     * configured.  The C environment might go ahead and do this again, but
     * that's safe as it's a fixed register. */
.option push
.option norelax
    la gp, __global_pointer$
20010000:	5fff1197          	auipc	gp,0x5fff1
20010004:	2c018193          	addi	gp,gp,704 # 800012c0 <__global_pointer$>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:28
.option pop

    /* trap over the chicken bit register clearing, aloe & fe310 dont have it */
    la t0, 1f
20010008:	00000297          	auipc	t0,0x0
2001000c:	01828293          	addi	t0,t0,24 # 20010020 <_enter+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:29
    csrw mtvec, t0
20010010:	30529073          	csrw	mtvec,t0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:31
    /* chicken bit is enable if core are sifive series. */
    la t0, __metal_chicken_bit
20010014:	00100293          	li	t0,1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:32
    beqz t0, 1f
20010018:	00028463          	beqz	t0,20010020 <_enter+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:34
    /* If set, always clear the feature disable register for all cores series */
    csrwi 0x7C1, 0
2001001c:	7c105073          	csrwi	0x7c1,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:39
.align 4
1:
    /* Set up a simple trap vector to catch anything that goes wrong early in
     * the boot process. */
    la t0, early_trap_vector
20010020:	00000297          	auipc	t0,0x0
20010024:	11c28293          	addi	t0,t0,284 # 2001013c <early_trap_vector>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:40
    csrw mtvec, t0
20010028:	30529073          	csrw	mtvec,t0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:48
     * C, so here we set up a C environment. First we set up a stack pointer,
     * which is left as a weak reference in order to allow initialization
     * routines that do not need a stack to be set up to transparently be
     * called. */
    .weak __metal_stack_pointer
    la sp, __metal_stack_pointer
2001002c:	dfff0117          	auipc	sp,0xdfff0
20010030:	fd410113          	addi	sp,sp,-44 # 0 <__metal_boot_hart>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:55
   /* The METAL is designed for a bare-metal environment and therefore is expected
    * to define its own stack pointer. We also align the stack pointer here
    * because the only RISC-V ABI that's currently defined, mandates 16-byte
    * stack alignment. */

    bne sp, zero, 1f
20010034:	00011463          	bnez	sp,2001003c <_enter+0x3c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:56
    la sp, _sp
20010038:	d0018113          	addi	sp,gp,-768 # 80000fc0 <_sp>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:59
1:
    /* Increment by hartid number of stack sizes */
    csrr a0, mhartid
2001003c:	f1402573          	csrr	a0,mhartid
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:60
    li t0, 0
20010040:	4281                	li	t0,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:61
    la t1, __stack_size
20010042:	40000313          	li	t1,1024
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:63
1:
    andi sp, sp, -16
20010046:	ff017113          	andi	sp,sp,-16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:64
    beq t0, a0, 1f
2001004a:	00a28563          	beq	t0,a0,20010054 <_enter+0x54>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:65
    add sp, sp, t1
2001004e:	911a                	add	sp,sp,t1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:66
    addi t0, t0, 1
20010050:	0285                	addi	t0,t0,1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:67
    j 1b
20010052:	bfd5                	j	20010046 <_enter+0x46>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:76
     * just skip over the call entirely.   Note that __metal_initialize isn't
     * actually a full C function, as it doesn't end up with the .bss or .data
     * segments having been initialized.  This is done to avoid putting a
     * burden on systems that can be initialized without having a C environment
     * set up. */
    la ra, __metal_before_start
20010054:	00000097          	auipc	ra,0x0
20010058:	08208093          	addi	ra,ra,130 # 200100d6 <__metal_before_start>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:77
    beqz ra, 1f
2001005c:	00008363          	beqz	ra,20010062 <_enter+0x62>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:78
    jalr ra
20010060:	9082                	jalr	ra
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:84
1:

    /* At this point we can enter the C runtime's startup file.  The arguments
     * to this function are designed to match those provided to the SEE, just
     * so we don't have to write another ABI. */
    csrr a0, mhartid
20010062:	f1402573          	csrr	a0,mhartid
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:85
    li a1, 0
20010066:	4581                	li	a1,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:86
    li a2, 0
20010068:	4601                	li	a2,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:87
    call _start
2001006a:	20fd                	jal	20010158 <_start>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:92

    /* If we've made it back here then there's probably something wrong.  We
     * allow the METAL to register a handler here. */
    .weak __metal_after_main
    la ra, __metal_after_main
2001006c:	dfff0097          	auipc	ra,0xdfff0
20010070:	f9408093          	addi	ra,ra,-108 # 0 <__metal_boot_hart>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:93
    beqz ra, 1f
20010074:	00008363          	beqz	ra,2001007a <_enter+0x7a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:94
    jalr ra
20010078:	9082                	jalr	ra
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:99
1:

    /* If that handler returns then there's not a whole lot we can do.  Just
     * try to make some noise. */
     la t0, 1f
2001007a:	00000297          	auipc	t0,0x0
2001007e:	00c28293          	addi	t0,t0,12 # 20010086 <_enter+0x86>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:100
     csrw mtvec, t0
20010082:	30529073          	csrw	mtvec,t0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:102
1:
     lw t1, 0(x0)
20010086:	00002303          	lw	t1,0(zero) # 0 <__metal_boot_hart>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:103
     j 1b
2001008a:	bff5                	j	20010086 <_enter+0x86>
2001008c:	0000                	unimp
	...

20010090 <__register_frame_info>:
__register_frame_info():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:117
.weak __register_frame_info
.global __register_frame_info
.section .text.metal.init.__register_frame_info
__register_frame_info:
    .cfi_startproc
    ret
20010090:	8082                	ret

20010092 <metal_mem_scrub>:
metal_mem_scrub():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:24
.type metal_mem_scrub, @function
metal_mem_scrub:

    /* Disable machine interrupts,
    restore previous mstatus value at exit */
    li      a3, 8
20010092:	46a1                	li	a3,8
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:25
    csrrc   t1, mstatus, a3
20010094:	3006b373          	csrrc	t1,mstatus,a3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:28

#if __riscv_xlen == 32
    addi    t0, x0, 4
20010098:	00400293          	li	t0,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:30
1:
    blt     a1, t0, 2f
2001009c:	0055c563          	blt	a1,t0,200100a6 <metal_mem_scrub+0x14>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:31
    andi    a2, a0, 3
200100a0:	00357613          	andi	a2,a0,3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:32
    beqz    a2, 3f
200100a4:	ca11                	beqz	a2,200100b8 <metal_mem_scrub+0x26>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:34
2:
    sb      x0, 0(a0)
200100a6:	00050023          	sb	zero,0(a0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:35
    addi    a0, a0, 1
200100aa:	0505                	addi	a0,a0,1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:36
    addi    a1, a1, -1
200100ac:	15fd                	addi	a1,a1,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:37
    bgtz    a1, 1b
200100ae:	feb047e3          	bgtz	a1,2001009c <metal_mem_scrub+0xa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:38
    csrw    mstatus, t1
200100b2:	30031073          	csrw	mstatus,t1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:39
    ret
200100b6:	8082                	ret
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:41
3:
    sw      x0, 0(a0)
200100b8:	00052023          	sw	zero,0(a0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:42
    addi    a0, a0, 4
200100bc:	0511                	addi	a0,a0,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:43
    addi    a1, a1, -4
200100be:	15f1                	addi	a1,a1,-4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:44
    bgtz    a1, 1b
200100c0:	fcb04ee3          	bgtz	a1,2001009c <metal_mem_scrub+0xa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:45
    csrw    mstatus, t1
200100c4:	30031073          	csrw	mstatus,t1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:46
    ret
200100c8:	8082                	ret

200100ca <__metal_memory_scrub>:
__metal_memory_scrub():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:74
.type __metal_memory_scrub, @function
__metal_memory_scrub:
/* Zero out specified memory regions */
1:
#if __riscv_xlen == 32
    sw      x0, 0(t1)
200100ca:	00032023          	sw	zero,0(t1)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:75
    addi    t1, t1, 4
200100ce:	0311                	addi	t1,t1,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:76
    blt     t1, t2, 1b
200100d0:	fe734de3          	blt	t1,t2,200100ca <__metal_memory_scrub>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:82
#else
    sd      x0, 0(t1)
    addi    t1, t1, 8
    blt     t1, t2, 1b
#endif
    ret
200100d4:	8082                	ret

200100d6 <__metal_before_start>:
__metal_before_start():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:94
.weak __metal_before_start
.global __metal_before_start
.type __metal_before_start, @function
__metal_before_start:
    /* Save caller ra */
    mv      s0, ra
200100d6:	8406                	mv	s0,ra
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:96

    la      t0, __metal_eccscrub_bit
200100d8:	dfff0297          	auipc	t0,0xdfff0
200100dc:	f2828293          	addi	t0,t0,-216 # 0 <__metal_boot_hart>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:97
    beqz    t0, skip_scrub
200100e0:	04028c63          	beqz	t0,20010138 <skip_scrub>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:99

    la      t0, __metal_boot_hart
200100e4:	dfff0297          	auipc	t0,0xdfff0
200100e8:	f1c28293          	addi	t0,t0,-228 # 0 <__metal_boot_hart>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:100
    csrr    a5, mhartid
200100ec:	f14027f3          	csrr	a5,mhartid
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:103

    /* Disable machine interrupts to be safe */
    li      a3, 8
200100f0:	46a1                	li	a3,8
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:104
    csrc    mstatus, a3
200100f2:	3006b073          	csrc	mstatus,a3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:107

    /* Zero out per hart stack */
    mv      t1, sp
200100f6:	830a                	mv	t1,sp
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:108
    la      t2, __stack_size
200100f8:	dfff0397          	auipc	t2,0xdfff0
200100fc:	30838393          	addi	t2,t2,776 # 400 <__stack_size>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:109
    add     t2, t2, sp
20010100:	938a                	add	t2,t2,sp
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:110
    beq     t1, t2, 1f
20010102:	00730363          	beq	t1,t2,20010108 <__metal_before_start+0x32>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:111
    jal     __metal_memory_scrub
20010106:	37d1                	jal	200100ca <__metal_memory_scrub>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:113
1:
    bne     a5, t0, skip_scrub
20010108:	02579863          	bne	a5,t0,20010138 <skip_scrub>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:116

    /* Zero out data segment */
    la      t1, metal_segment_data_target_start
2001010c:	5fff0317          	auipc	t1,0x5fff0
20010110:	ef430313          	addi	t1,t1,-268 # 80000000 <metal_segment_lim_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:117
    la      t2, metal_segment_data_target_end
20010114:	5fff1397          	auipc	t2,0x5fff1
20010118:	9fc38393          	addi	t2,t2,-1540 # 80000b10 <__tls_base>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:118
    beq     t1, t2, 1f
2001011c:	00730363          	beq	t1,t2,20010122 <__metal_before_start+0x4c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:119
    jal     __metal_memory_scrub
20010120:	376d                	jal	200100ca <__metal_memory_scrub>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:122
1:
    /* Zero out itim memory */
    la      t1, metal_segment_itim_target_start
20010122:	e7ff0317          	auipc	t1,0xe7ff0
20010126:	ede30313          	addi	t1,t1,-290 # 8000000 <metal_segment_itim_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:123
    la      t2, metal_segment_itim_target_end
2001012a:	e7ff0397          	auipc	t2,0xe7ff0
2001012e:	ed638393          	addi	t2,t2,-298 # 8000000 <metal_segment_itim_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:124
    beq     t1, t2, skip_scrub
20010132:	00730363          	beq	t1,t2,20010138 <skip_scrub>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:125
    jal     __metal_memory_scrub
20010136:	3f51                	jal	200100ca <__metal_memory_scrub>

20010138 <skip_scrub>:
skip_scrub():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:129

skip_scrub:
    /* Restore caller ra */
    mv      ra, s0
20010138:	80a2                	mv	ra,s0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:130
    ret
2001013a:	8082                	ret

2001013c <early_trap_vector>:
early_trap_vector():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/trap.S:64
.section .text.metal.init.trapvec
.global early_trap_vector
.align 2
early_trap_vector:
    .cfi_startproc
    csrr t0, mcause
2001013c:	342022f3          	csrr	t0,mcause
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/trap.S:65
    csrr t1, mepc
20010140:	34102373          	csrr	t1,mepc
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/trap.S:66
    csrr t2, mtval
20010144:	343023f3          	csrr	t2,mtval
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/trap.S:67
    j early_trap_vector
20010148:	bfd5                	j	2001013c <early_trap_vector>

2001014a <__metal_synchronize_harts>:
__metal_synchronize_harts():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/synchronize_harts.c:19
/*
 * _synchronize_harts() is called by crt0.S to cause harts > 0 to wait for
 * hart 0 to finish copying the datat section, zeroing the BSS, and running
 * the libc contstructors.
 */
__attribute__((section(".init"))) void __metal_synchronize_harts() {
2001014a:	1141                	addi	sp,sp,-16
2001014c:	c622                	sw	s0,12(sp)
2001014e:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/synchronize_harts.c:66
        while (METAL_MSIP(msip_base, hart) == 1)
            ;
    }

#endif /* __METAL_DT_MAX_HARTS > 1 */
}
20010150:	0001                	nop
20010152:	4432                	lw	s0,12(sp)
20010154:	0141                	addi	sp,sp,16
20010156:	8082                	ret

20010158 <_start>:
_start():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:36
.cfi_startproc
.cfi_undefined ra

  /* This is a bit funky: it's not usually sane for _start to return, but in
   * this case we actually want to in order to signal an error to the METAL. */
  mv s0, ra
20010158:	8406                	mv	s0,ra
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:44
   * safely perform any access that may be relaxed without GP being set.  This
   * is done with relaxation disabled to avoid relaxing the address calculation
   * to just "addi gp, gp, 0". */
.option push
.option norelax
  la gp, __global_pointer$
2001015a:	5fff1197          	auipc	gp,0x5fff1
2001015e:	16618193          	addi	gp,gp,358 # 800012c0 <__global_pointer$>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:50
.option pop

  /* Stack pointer is expected to be initialized before _start */

  /* If we're not hart 0, skip the initialization work */
  la t0, __metal_boot_hart
20010162:	00000293          	li	t0,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:51
  bne a0, t0, _skip_init
20010166:	0e551163          	bne	a0,t0,20010248 <_skip_init>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:60
   * boot and then need to get relocated into a non-persistant writable memory
   * before C code can execute.  If this is the case we do so here.  This step
   * is optional: if the METAL provides an environment in which this relocation
   * is not necessary then it must simply set metal_segment_data_source_start to
   * be equal to metal_segment_data_target_start. */
  la t0, metal_segment_data_source_start
2001016a:	00008297          	auipc	t0,0x8
2001016e:	6ae28293          	addi	t0,t0,1710 # 20018818 <metal_segment_data_source_start>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:61
  la t1, metal_segment_data_target_start
20010172:	5fff0317          	auipc	t1,0x5fff0
20010176:	e8e30313          	addi	t1,t1,-370 # 80000000 <metal_segment_lim_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:62
  la t2, metal_segment_data_target_end
2001017a:	5fff1397          	auipc	t2,0x5fff1
2001017e:	99638393          	addi	t2,t2,-1642 # 80000b10 <__tls_base>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:64

  beq t0, t1, 2f
20010182:	00628c63          	beq	t0,t1,2001019a <_start+0x42>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:65
  bge t1, t2, 2f
20010186:	00735a63          	bge	t1,t2,2001019a <_start+0x42>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:69

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
2001018a:	0002a503          	lw	a0,0(t0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:70
  addi t0, t0, 4
2001018e:	0291                	addi	t0,t0,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:71
  sw   a0, 0(t1)
20010190:	00a32023          	sw	a0,0(t1)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:72
  addi t1, t1, 4
20010194:	0311                	addi	t1,t1,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:73
  blt  t1, t2, 1b
20010196:	fe734ae3          	blt	t1,t2,2001018a <_start+0x32>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:84
  blt  t1, t2, 1b
#endif
2:

  /* Copy the ITIM section */
  la t0, metal_segment_itim_source_start
2001019a:	00001297          	auipc	t0,0x1
2001019e:	01e28293          	addi	t0,t0,30 # 200111b8 <metal_segment_itim_source_start>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:85
  la t1, metal_segment_itim_target_start
200101a2:	e7ff0317          	auipc	t1,0xe7ff0
200101a6:	e5e30313          	addi	t1,t1,-418 # 8000000 <metal_segment_itim_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:86
  la t2, metal_segment_itim_target_end
200101aa:	e7ff0397          	auipc	t2,0xe7ff0
200101ae:	e5638393          	addi	t2,t2,-426 # 8000000 <metal_segment_itim_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:88

  beq t0, t1, 2f
200101b2:	00628c63          	beq	t0,t1,200101ca <_start+0x72>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:89
  bge t1, t2, 2f
200101b6:	00735a63          	bge	t1,t2,200101ca <_start+0x72>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:93

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
200101ba:	0002a503          	lw	a0,0(t0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:94
  addi t0, t0, 4
200101be:	0291                	addi	t0,t0,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:95
  sw   a0, 0(t1)
200101c0:	00a32023          	sw	a0,0(t1)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:96
  addi t1, t1, 4
200101c4:	0311                	addi	t1,t1,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:97
  blt  t1, t2, 1b
200101c6:	fe734ae3          	blt	t1,t2,200101ba <_start+0x62>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:109
#endif
2:

  /* Fence all subsequent instruction fetches until after the ITIM writes
     complete */
  fence.i
200101ca:	0000100f          	fence.i
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:114

2:

  /* Copy the LIM section */
  la t0, metal_segment_lim_source_start
200101ce:	00001297          	auipc	t0,0x1
200101d2:	fea28293          	addi	t0,t0,-22 # 200111b8 <metal_segment_itim_source_start>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:115
  la t1, metal_segment_lim_target_start
200101d6:	5fff0317          	auipc	t1,0x5fff0
200101da:	e2a30313          	addi	t1,t1,-470 # 80000000 <metal_segment_lim_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:116
  la t2, metal_segment_lim_target_end
200101de:	5fff0397          	auipc	t2,0x5fff0
200101e2:	e2238393          	addi	t2,t2,-478 # 80000000 <metal_segment_lim_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:118

  beq t0, t1, 2f
200101e6:	00628c63          	beq	t0,t1,200101fe <_start+0xa6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:119
  bge t1, t2, 2f
200101ea:	00735a63          	bge	t1,t2,200101fe <_start+0xa6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:123

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
200101ee:	0002a503          	lw	a0,0(t0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:124
  addi t0, t0, 4
200101f2:	0291                	addi	t0,t0,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:125
  sw   a0, 0(t1)
200101f4:	00a32023          	sw	a0,0(t1)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:126
  addi t1, t1, 4
200101f8:	0311                	addi	t1,t1,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:127
  blt  t1, t2, 1b
200101fa:	fe734ae3          	blt	t1,t2,200101ee <_start+0x96>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:139
#endif
2:

  /* Fence all subsequent instruction fetches until after the LIM writes
     complete */
  fence.i
200101fe:	0000100f          	fence.i
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:142

  /* Zero the BSS segment. */
  la t1, metal_segment_bss_target_start
20010202:	5fff1317          	auipc	t1,0x5fff1
20010206:	90e30313          	addi	t1,t1,-1778 # 80000b10 <__tls_base>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:143
  la t2, metal_segment_bss_target_end
2001020a:	8f418393          	addi	t2,gp,-1804 # 80000bb4 <metal_segment_bss_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:145

  bge t1, t2, 2f
2001020e:	00735763          	bge	t1,t2,2001021c <_start+0xc4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:149

1:
#if __riscv_xlen == 32
  sw   x0, 0(t1)
20010212:	00032023          	sw	zero,0(t1)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:150
  addi t1, t1, 4
20010216:	0311                	addi	t1,t1,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:151
  blt  t1, t2, 1b
20010218:	fe734de3          	blt	t1,t2,20010212 <_start+0xba>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:161
#endif
2:

  /* Set TLS pointer */
  .weak __tls_base	
  la tp, __tls_base
2001021c:	5fff1217          	auipc	tp,0x5fff1
20010220:	8f420213          	addi	tp,tp,-1804 # 80000b10 <__tls_base>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:166

  /* At this point we're in an environment that can execute C code.  The first
   * thing to do is to make the callback to the parent environment if it's been
   * requested to do so. */
  beqz a2, 1f
20010224:	c211                	beqz	a2,20010228 <_start+0xd0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:167
  jalr a2
20010226:	9602                	jalr	a2
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:171
1:

  /* The RISC-V port only uses new-style constructors and destructors. */
  la a0, __libc_fini_array
20010228:	00008517          	auipc	a0,0x8
2001022c:	bf450513          	addi	a0,a0,-1036 # 20017e1c <__libc_fini_array>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:172
  call atexit
20010230:	3af070ef          	jal	ra,20017dde <atexit>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:173
  call __libc_init_array
20010234:	421070ef          	jal	ra,20017e54 <__libc_init_array>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:177

  /* Register metal_fini_run as a destructor and call metal_init_run to
   * run and setup Metal constructors */
  la a0, metal_fini_run
20010238:	00008517          	auipc	a0,0x8
2001023c:	58c50513          	addi	a0,a0,1420 # 200187c4 <metal_fini_run>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:178
  call atexit
20010240:	39f070ef          	jal	ra,20017dde <atexit>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:179
  call metal_init_run
20010244:	56a080ef          	jal	ra,200187ae <metal_init_run>

20010248 <_skip_init>:
_skip_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:185

_skip_init:

  /* Synchronize harts so that secondary harts wait until hart 0 finishes
     initializing */
  call __metal_synchronize_harts
20010248:	3709                	jal	2001014a <__metal_synchronize_harts>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:188

  /* Disable and clear all interrupt sources */
  li   a3, -1
2001024a:	56fd                	li	a3,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:189
  csrc mie, a3
2001024c:	3046b073          	csrc	mie,a3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:190
  csrc mip, a3
20010250:	3446b073          	csrc	mip,a3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:194

  /* The delegation CSRs exist if user mode interrupts (N extension) or
   * supervisor mode (S extension) are supported */
  csrr a5, misa
20010254:	301027f3          	csrr	a5,misa
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:195
  lui  a4, 0x42
20010258:	00042737          	lui	a4,0x42
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:196
  and  a4, a4, a5
2001025c:	8f7d                	and	a4,a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:197
  beqz a4, 1f
2001025e:	c709                	beqz	a4,20010268 <_skip_init+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:198
  csrc mideleg, a3
20010260:	3036b073          	csrc	mideleg,a3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:199
  csrc medeleg, a3
20010264:	3026b073          	csrc	medeleg,a3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:203
1:

  /* The satp CSR exists if supervisor mode (S extension) is supported */
  lui  a4, 0x40
20010268:	00040737          	lui	a4,0x40
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:204
  and  a4, a4, a5
2001026c:	8f7d                	and	a4,a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:205
  beqz a4, 1f
2001026e:	c319                	beqz	a4,20010274 <_skip_init+0x2c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:206
  csrc satp, a3
20010270:	1806b073          	csrc	satp,a3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:210
1:

  /* Check RISC-V isa and enable FS bits if Floating Point architecture. */
  li   a4, 0x10028
20010274:	00010737          	lui	a4,0x10
20010278:	02870713          	addi	a4,a4,40 # 10028 <__heap_size+0xf828>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:211
  and  a5, a5, a4
2001027c:	8ff9                	and	a5,a5,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:212
  beqz a5, 1f
2001027e:	cb89                	beqz	a5,20010290 <_skip_init+0x48>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:213
  csrr a5, mstatus
20010280:	300027f3          	csrr	a5,mstatus
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:214
  lui  a4, 0x2
20010284:	6709                	lui	a4,0x2
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:215
  or   a5, a5, a4
20010286:	8fd9                	or	a5,a5,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:216
  csrw mstatus, a5
20010288:	30079073          	csrw	mstatus,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:217
  csrwi fcsr, 0
2001028c:	00305073          	csrwi	fcsr,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:221
1:

  /* Check for vector extension support and enable it if found */
  csrr a5, misa
20010290:	301027f3          	csrr	a5,misa
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:222
  li a4, 0x200000
20010294:	00200737          	lui	a4,0x200
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:223
  and a5, a5, a4
20010298:	8ff9                	and	a5,a5,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:224
  beqz a5, 1f
2001029a:	c799                	beqz	a5,200102a8 <_skip_init+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:225
  csrr a5, mstatus
2001029c:	300027f3          	csrr	a5,mstatus
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:226
  ori a5, a5, 0x200
200102a0:	2007e793          	ori	a5,a5,512
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:227
  csrw mstatus, a5
200102a4:	30079073          	csrw	mstatus,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:233
1:

  /* This is a C runtime, so main() is defined to have some arguments.  Since
   * there's nothing sane the METAL can pass we don't bother with that but
   * instead just setup as close to a NOP as we can. */
  li a0, 1     /* argc=1 */
200102a8:	4505                	li	a0,1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:234
  la a1, argv  /* argv = {"libgloss", NULL} */
200102aa:	00001597          	auipc	a1,0x1
200102ae:	dea58593          	addi	a1,a1,-534 # 20011094 <argv>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:235
  la a2, envp  /* envp = {NULL} */
200102b2:	00001617          	auipc	a2,0x1
200102b6:	de660613          	addi	a2,a2,-538 # 20011098 <envp>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:236
  call secondary_main
200102ba:	2031                	jal	200102c6 <secondary_main>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:242

  /* Call exit to handle libc's cleanup routines.  Under normal contains this
   * shouldn't even get called, but I'm still not using a tail call here
   * because returning to the METAL is the right thing to do in pathological
   * situations. */
  call exit
200102bc:	339070ef          	jal	ra,20017df4 <exit>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:247

  /* And here's where we return.  Again, it's a bit odd but the METAL defines
   * this as a bad idea (ie, as opposed to leaving it undefined) and at this
   * point it's really the only thing left to do. */
  mv ra, s0
200102c0:	80a2                	mv	ra,s0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:248
  ret
200102c2:	8082                	ret

200102c4 <_fini>:
_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:260
.type   _init, @function
.global _fini
.type   _fini, @function
_init:
_fini:
  ret
200102c4:	8082                	ret

200102c6 <secondary_main>:
secondary_main():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:271
.weak   secondary_main
.global secondary_main
.type   secondary_main, @function

secondary_main:
  addi sp, sp, -16
200102c6:	1141                	addi	sp,sp,-16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:273
#if __riscv_xlen == 32
  sw ra, 4(sp)
200102c8:	c206                	sw	ra,4(sp)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:277
#else
  sd ra, 8(sp)
#endif
  csrr t0, mhartid
200102ca:	f14022f3          	csrr	t0,mhartid
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:278
  la t1, __metal_boot_hart
200102ce:	00000313          	li	t1,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:279
  beq t0, t1, 2f
200102d2:	00628563          	beq	t0,t1,200102dc <secondary_main+0x16>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:281
1:
  wfi
200102d6:	10500073          	wfi
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:282
  j 1b
200102da:	bff5                	j	200102d6 <secondary_main+0x10>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:284
2:
  call main
200102dc:	725000ef          	jal	ra,20011200 <main>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:286
#if __riscv_xlen == 32
  lw ra, 4(sp)
200102e0:	4092                	lw	ra,4(sp)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:290
#else
  ld ra, 8(sp)
#endif
  addi sp, sp, 16
200102e2:	0141                	addi	sp,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:291
  ret
200102e4:	8082                	ret

Disassembly of section .ctors:

200102f4 <metal_sifive_fe310_g000_pll_init>:
metal_sifive_fe310_g000_pll_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:151
    return pll_input_rate * config->multiplier / config->divisor;
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE

METAL_CONSTRUCTOR(metal_sifive_fe310_g000_pll_init) {
200102f4:	1101                	addi	sp,sp,-32
200102f6:	ce06                	sw	ra,28(sp)
200102f8:	cc22                	sw	s0,24(sp)
200102fa:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:152
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
200102fc:	06a050ef          	jal	ra,20015366 <__metal_driver_sifive_fe310_g000_pll_init_rate>
20010300:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:154
    /* If the PLL init_rate is zero, don't initialize the PLL */
    if (init_rate != 0)
20010304:	fec42783          	lw	a5,-20(s0)
20010308:	c799                	beqz	a5,20010316 <__fini_array_end+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:155
        __metal_driver_sifive_fe310_g000_pll_init(
2001030a:	800017b7          	lui	a5,0x80001
2001030e:	ab478513          	addi	a0,a5,-1356 # 80000ab4 <metal_segment_heap_target_end+0xfffff2f4>
20010312:	0dc050ef          	jal	ra,200153ee <__metal_driver_sifive_fe310_g000_pll_init>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:157
            __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE);
}
20010316:	0001                	nop
20010318:	40f2                	lw	ra,28(sp)
2001031a:	4462                	lw	s0,24(sp)
2001031c:	6105                	addi	sp,sp,32
2001031e:	8082                	ret

20010320 <use_hfxosc>:
use_hfxosc():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:389

    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE
METAL_CONSTRUCTOR(use_hfxosc) {
20010320:	1101                	addi	sp,sp,-32
20010322:	ce06                	sw	ra,28(sp)
20010324:	cc22                	sw	s0,24(sp)
20010326:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:390
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20010328:	03e050ef          	jal	ra,20015366 <__metal_driver_sifive_fe310_g000_pll_init_rate>
2001032c:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:391
    metal_clock_set_rate_hz(&__METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE->clock,
20010330:	fec42583          	lw	a1,-20(s0)
20010334:	800017b7          	lui	a5,0x80001
20010338:	ab478513          	addi	a0,a5,-1356 # 80000ab4 <metal_segment_heap_target_end+0xfffff2f4>
2001033c:	2ec070ef          	jal	ra,20017628 <metal_clock_set_rate_hz>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:393
                            init_rate);
}
20010340:	0001                	nop
20010342:	40f2                	lw	ra,28(sp)
20010344:	4462                	lw	s0,24(sp)
20010346:	6105                	addi	sp,sp,32
20010348:	8082                	ret

2001034a <metal_tty_init>:
metal_tty_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/tty.c:28

#ifndef __METAL_DT_STDOUT_UART_BAUD
#define __METAL_DT_STDOUT_UART_BAUD 115200
#endif

METAL_CONSTRUCTOR(metal_tty_init) {
2001034a:	1141                	addi	sp,sp,-16
2001034c:	c606                	sw	ra,12(sp)
2001034e:	c422                	sw	s0,8(sp)
20010350:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/tty.c:29
    metal_uart_init(__METAL_DT_STDOUT_UART_HANDLE, __METAL_DT_STDOUT_UART_BAUD);
20010352:	67f1                	lui	a5,0x1c
20010354:	20078593          	addi	a1,a5,512 # 1c200 <__heap_size+0x1ba00>
20010358:	800017b7          	lui	a5,0x80001
2001035c:	a5c78513          	addi	a0,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
20010360:	686070ef          	jal	ra,200179e6 <metal_uart_init>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/tty.c:30
}
20010364:	0001                	nop
20010366:	40b2                	lw	ra,12(sp)
20010368:	4422                	lw	s0,8(sp)
2001036a:	0141                	addi	sp,sp,16
2001036c:	8082                	ret

Disassembly of section .text:

20011200 <main>:
main():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:54
#define WAIT_1S(timeout)                                                       \
  timeout = time(NULL) + 1;                                                    \
  while (timeout > time(NULL))                                                 \
    ;

int main() {
20011200:	7179                	addi	sp,sp,-48
20011202:	d606                	sw	ra,44(sp)
20011204:	d422                	sw	s0,40(sp)
20011206:	1800                	addi	s0,sp,48
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:66
	 * [4] accelero x-axis MSB
	 * [5] accelero x-axis LSB
	 * [6] accelero y-axis MSB
	 * [7] accelero y-axis LSB
	 * */
	unsigned char imu_addr_buf[LEN8] = { IMU_WHO_AM_I_SUBADDR, IMU_STATUS_REG_SUBADDR,
20011208:	200117b7          	lui	a5,0x20011
2001120c:	1a878793          	addi	a5,a5,424 # 200111a8 <__clz_tab+0x100>
20011210:	4398                	lw	a4,0(a5)
20011212:	fee42223          	sw	a4,-28(s0)
20011216:	43dc                	lw	a5,4(a5)
20011218:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:75
	unsigned char imu_buf[LEN8];
	time_t timeout;
	struct metal_i2c *i2c;
//	struct metal_gpio *gpio;

	i2c = metal_i2c_get_device(0);
2001121c:	4501                	li	a0,0
2001121e:	66c060ef          	jal	ra,2001788a <metal_i2c_get_device>
20011222:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:78
//	gpio = metal_gpio_get_device(0);

	if (i2c == NULL) {
20011226:	fec42783          	lw	a5,-20(s0)
2001122a:	eb81                	bnez	a5,2001123a <main+0x3a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:79
		printf("I2C not available \n");
2001122c:	200107b7          	lui	a5,0x20010
20011230:	37078513          	addi	a0,a5,880 # 20010370 <metal_tty_init+0x26>
20011234:	2ee5                	jal	2001162c <puts>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:80
		return RET_NOK;
20011236:	4785                	li	a5,1
20011238:	a4f1                	j	20011504 <main+0x304>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:87
//	if (gpio == NULL) {
//		printf("GPIO not available \n");
//		return RET_NOK;
//	}

	metal_i2c_init(i2c, I2C_BAUDRATE, METAL_I2C_MASTER);
2001123a:	4605                	li	a2,1
2001123c:	67e1                	lui	a5,0x18
2001123e:	6a078593          	addi	a1,a5,1696 # 186a0 <__heap_size+0x17ea0>
20011242:	fec42503          	lw	a0,-20(s0)
20011246:	554060ef          	jal	ra,2001779a <metal_i2c_init>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:90

	/* Read IMU Chip ID */
	if (metal_i2c_write(i2c, IMU_I2C_ADDR, LEN1, imu_addr_buf, METAL_I2C_STOP_DISABLE) == RET_OK) {
2001124a:	fe440793          	addi	a5,s0,-28
2001124e:	4701                	li	a4,0
20011250:	86be                	mv	a3,a5
20011252:	4605                	li	a2,1
20011254:	06a00593          	li	a1,106
20011258:	fec42503          	lw	a0,-20(s0)
2001125c:	572060ef          	jal	ra,200177ce <metal_i2c_write>
20011260:	87aa                	mv	a5,a0
20011262:	e795                	bnez	a5,2001128e <main+0x8e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:91
		if (metal_i2c_read(i2c, IMU_I2C_ADDR, LEN1, imu_buf, METAL_I2C_STOP_ENABLE) == RET_OK) {
20011264:	fdc40793          	addi	a5,s0,-36
20011268:	4705                	li	a4,1
2001126a:	86be                	mv	a3,a5
2001126c:	4605                	li	a2,1
2001126e:	06a00593          	li	a1,106
20011272:	fec42503          	lw	a0,-20(s0)
20011276:	59e060ef          	jal	ra,20017814 <metal_i2c_read>
2001127a:	87aa                	mv	a5,a0
2001127c:	eb89                	bnez	a5,2001128e <main+0x8e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:92
			printf("Data read = %X\n", imu_buf[0]);
2001127e:	fdc44783          	lbu	a5,-36(s0)
20011282:	85be                	mv	a1,a5
20011284:	200107b7          	lui	a5,0x20010
20011288:	38478513          	addi	a0,a5,900 # 20010384 <metal_tty_init+0x3a>
2001128c:	2449                	jal	2001150e <iprintf>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:97
		}
	}

	/* Verify IMU Chip ID */
	if (imu_buf[0] == IMU_SENSOR_ID) {
2001128e:	fdc44703          	lbu	a4,-36(s0)
20011292:	06900793          	li	a5,105
20011296:	00f71863          	bne	a4,a5,200112a6 <main+0xa6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:98
		printf("IMU module detected!\n");
2001129a:	200107b7          	lui	a5,0x20010
2001129e:	39478513          	addi	a0,a5,916 # 20010394 <metal_tty_init+0x4a>
200112a2:	2669                	jal	2001162c <puts>
200112a4:	a031                	j	200112b0 <main+0xb0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:100
	} else {
		printf("Failed to detect IMU module!\n");
200112a6:	200107b7          	lui	a5,0x20010
200112aa:	3ac78513          	addi	a0,a5,940 # 200103ac <metal_tty_init+0x62>
200112ae:	2ebd                	jal	2001162c <puts>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:105
		//return RET_NOK;
	}

	/* Enable IMU */
	unsigned char imu_ctrl_buf[LEN4] = { IMU_CTRL1_XL_SUBADDR, 0xA0,
200112b0:	200117b7          	lui	a5,0x20011
200112b4:	1b07a783          	lw	a5,432(a5) # 200111b0 <__clz_tab+0x108>
200112b8:	fcf42c23          	sw	a5,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:107
										IMU_CTRL2_G_SUBADDR, 0x80 };
	if (metal_i2c_write(i2c, IMU_I2C_ADDR, LEN2, imu_ctrl_buf, METAL_I2C_STOP_ENABLE) == RET_OK) {
200112bc:	fd840793          	addi	a5,s0,-40
200112c0:	4705                	li	a4,1
200112c2:	86be                	mv	a3,a5
200112c4:	4609                	li	a2,2
200112c6:	06a00593          	li	a1,106
200112ca:	fec42503          	lw	a0,-20(s0)
200112ce:	500060ef          	jal	ra,200177ce <metal_i2c_write>
200112d2:	87aa                	mv	a5,a0
200112d4:	e791                	bnez	a5,200112e0 <main+0xe0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:108
		printf("IMU accelero enabled!\n");
200112d6:	200107b7          	lui	a5,0x20010
200112da:	3cc78513          	addi	a0,a5,972 # 200103cc <metal_tty_init+0x82>
200112de:	26b9                	jal	2001162c <puts>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:110
	}
	if (metal_i2c_write(i2c, IMU_I2C_ADDR, LEN2, imu_ctrl_buf + 2, METAL_I2C_STOP_ENABLE) == RET_OK) {
200112e0:	fd840793          	addi	a5,s0,-40
200112e4:	0789                	addi	a5,a5,2
200112e6:	4705                	li	a4,1
200112e8:	86be                	mv	a3,a5
200112ea:	4609                	li	a2,2
200112ec:	06a00593          	li	a1,106
200112f0:	fec42503          	lw	a0,-20(s0)
200112f4:	4da060ef          	jal	ra,200177ce <metal_i2c_write>
200112f8:	87aa                	mv	a5,a0
200112fa:	e791                	bnez	a5,20011306 <main+0x106>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:111
		printf("IMU gyro enabled!\n");
200112fc:	200107b7          	lui	a5,0x20010
20011300:	3e478513          	addi	a0,a5,996 # 200103e4 <metal_tty_init+0x9a>
20011304:	2625                	jal	2001162c <puts>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:117
	}

	while(1) {

		/* Read IMU Status Register */
		if (metal_i2c_write(i2c, IMU_I2C_ADDR, LEN1, imu_addr_buf + 1, METAL_I2C_STOP_DISABLE) == RET_OK) {
20011306:	fe440793          	addi	a5,s0,-28
2001130a:	0785                	addi	a5,a5,1
2001130c:	4701                	li	a4,0
2001130e:	86be                	mv	a3,a5
20011310:	4605                	li	a2,1
20011312:	06a00593          	li	a1,106
20011316:	fec42503          	lw	a0,-20(s0)
2001131a:	4b4060ef          	jal	ra,200177ce <metal_i2c_write>
2001131e:	87aa                	mv	a5,a0
20011320:	e79d                	bnez	a5,2001134e <main+0x14e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:118
			if (metal_i2c_read(i2c, IMU_I2C_ADDR, LEN1, imu_buf + 1, METAL_I2C_STOP_ENABLE) == RET_OK) {
20011322:	fdc40793          	addi	a5,s0,-36
20011326:	0785                	addi	a5,a5,1
20011328:	4705                	li	a4,1
2001132a:	86be                	mv	a3,a5
2001132c:	4605                	li	a2,1
2001132e:	06a00593          	li	a1,106
20011332:	fec42503          	lw	a0,-20(s0)
20011336:	4de060ef          	jal	ra,20017814 <metal_i2c_read>
2001133a:	87aa                	mv	a5,a0
2001133c:	eb89                	bnez	a5,2001134e <main+0x14e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:119
				printf("Status Reg = %X\n", imu_buf[1]);
2001133e:	fdd44783          	lbu	a5,-35(s0)
20011342:	85be                	mv	a1,a5
20011344:	200107b7          	lui	a5,0x20010
20011348:	3f878513          	addi	a0,a5,1016 # 200103f8 <metal_tty_init+0xae>
2001134c:	22c9                	jal	2001150e <iprintf>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:124
			}
		}

		/* Read IMU Gyro (z-axis) */
		if (metal_i2c_write(i2c, IMU_I2C_ADDR, LEN1, imu_addr_buf + 2, METAL_I2C_STOP_DISABLE) == RET_OK) {
2001134e:	fe440793          	addi	a5,s0,-28
20011352:	0789                	addi	a5,a5,2
20011354:	4701                	li	a4,0
20011356:	86be                	mv	a3,a5
20011358:	4605                	li	a2,1
2001135a:	06a00593          	li	a1,106
2001135e:	fec42503          	lw	a0,-20(s0)
20011362:	46c060ef          	jal	ra,200177ce <metal_i2c_write>
20011366:	87aa                	mv	a5,a0
20011368:	e79d                	bnez	a5,20011396 <main+0x196>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:125
			if (metal_i2c_read(i2c, IMU_I2C_ADDR, LEN1, imu_buf + 2, METAL_I2C_STOP_ENABLE) == RET_OK) {
2001136a:	fdc40793          	addi	a5,s0,-36
2001136e:	0789                	addi	a5,a5,2
20011370:	4705                	li	a4,1
20011372:	86be                	mv	a3,a5
20011374:	4605                	li	a2,1
20011376:	06a00593          	li	a1,106
2001137a:	fec42503          	lw	a0,-20(s0)
2001137e:	496060ef          	jal	ra,20017814 <metal_i2c_read>
20011382:	87aa                	mv	a5,a0
20011384:	eb89                	bnez	a5,20011396 <main+0x196>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:126
				printf("Gyro Z MSB = %X\n", imu_buf[2]);
20011386:	fde44783          	lbu	a5,-34(s0)
2001138a:	85be                	mv	a1,a5
2001138c:	200107b7          	lui	a5,0x20010
20011390:	40c78513          	addi	a0,a5,1036 # 2001040c <metal_tty_init+0xc2>
20011394:	2aad                	jal	2001150e <iprintf>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:129
			}
		}
		if (metal_i2c_write(i2c, IMU_I2C_ADDR, LEN1, imu_addr_buf + 3, METAL_I2C_STOP_DISABLE) == RET_OK) {
20011396:	fe440793          	addi	a5,s0,-28
2001139a:	078d                	addi	a5,a5,3
2001139c:	4701                	li	a4,0
2001139e:	86be                	mv	a3,a5
200113a0:	4605                	li	a2,1
200113a2:	06a00593          	li	a1,106
200113a6:	fec42503          	lw	a0,-20(s0)
200113aa:	424060ef          	jal	ra,200177ce <metal_i2c_write>
200113ae:	87aa                	mv	a5,a0
200113b0:	e79d                	bnez	a5,200113de <main+0x1de>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:130
			if (metal_i2c_read(i2c, IMU_I2C_ADDR, LEN1, imu_buf + 3, METAL_I2C_STOP_ENABLE) == RET_OK) {
200113b2:	fdc40793          	addi	a5,s0,-36
200113b6:	078d                	addi	a5,a5,3
200113b8:	4705                	li	a4,1
200113ba:	86be                	mv	a3,a5
200113bc:	4605                	li	a2,1
200113be:	06a00593          	li	a1,106
200113c2:	fec42503          	lw	a0,-20(s0)
200113c6:	44e060ef          	jal	ra,20017814 <metal_i2c_read>
200113ca:	87aa                	mv	a5,a0
200113cc:	eb89                	bnez	a5,200113de <main+0x1de>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:131
				printf("Gyro Z LSB = %X\n", imu_buf[3]);
200113ce:	fdf44783          	lbu	a5,-33(s0)
200113d2:	85be                	mv	a1,a5
200113d4:	200107b7          	lui	a5,0x20010
200113d8:	42078513          	addi	a0,a5,1056 # 20010420 <metal_tty_init+0xd6>
200113dc:	2a0d                	jal	2001150e <iprintf>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:136
			}
		}

		/* Read IMU Accelero (x-y plane) */
		if (metal_i2c_write(i2c, IMU_I2C_ADDR, LEN1, imu_addr_buf + 4, METAL_I2C_STOP_DISABLE) == RET_OK) {
200113de:	fe440793          	addi	a5,s0,-28
200113e2:	0791                	addi	a5,a5,4
200113e4:	4701                	li	a4,0
200113e6:	86be                	mv	a3,a5
200113e8:	4605                	li	a2,1
200113ea:	06a00593          	li	a1,106
200113ee:	fec42503          	lw	a0,-20(s0)
200113f2:	3dc060ef          	jal	ra,200177ce <metal_i2c_write>
200113f6:	87aa                	mv	a5,a0
200113f8:	e79d                	bnez	a5,20011426 <main+0x226>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:137
			if (metal_i2c_read(i2c, IMU_I2C_ADDR, LEN1, imu_buf + 4, METAL_I2C_STOP_ENABLE) == RET_OK) {
200113fa:	fdc40793          	addi	a5,s0,-36
200113fe:	0791                	addi	a5,a5,4
20011400:	4705                	li	a4,1
20011402:	86be                	mv	a3,a5
20011404:	4605                	li	a2,1
20011406:	06a00593          	li	a1,106
2001140a:	fec42503          	lw	a0,-20(s0)
2001140e:	406060ef          	jal	ra,20017814 <metal_i2c_read>
20011412:	87aa                	mv	a5,a0
20011414:	eb89                	bnez	a5,20011426 <main+0x226>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:138
				printf("Accelero X MSB = %X\n", imu_buf[4]);
20011416:	fe044783          	lbu	a5,-32(s0)
2001141a:	85be                	mv	a1,a5
2001141c:	200107b7          	lui	a5,0x20010
20011420:	43478513          	addi	a0,a5,1076 # 20010434 <metal_tty_init+0xea>
20011424:	20ed                	jal	2001150e <iprintf>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:141
			}
		}
		if (metal_i2c_write(i2c, IMU_I2C_ADDR, LEN1, imu_addr_buf + 5, METAL_I2C_STOP_DISABLE) == RET_OK) {
20011426:	fe440793          	addi	a5,s0,-28
2001142a:	0795                	addi	a5,a5,5
2001142c:	4701                	li	a4,0
2001142e:	86be                	mv	a3,a5
20011430:	4605                	li	a2,1
20011432:	06a00593          	li	a1,106
20011436:	fec42503          	lw	a0,-20(s0)
2001143a:	394060ef          	jal	ra,200177ce <metal_i2c_write>
2001143e:	87aa                	mv	a5,a0
20011440:	e79d                	bnez	a5,2001146e <main+0x26e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:142
			if (metal_i2c_read(i2c, IMU_I2C_ADDR, LEN1, imu_buf + 5, METAL_I2C_STOP_ENABLE) == RET_OK) {
20011442:	fdc40793          	addi	a5,s0,-36
20011446:	0795                	addi	a5,a5,5
20011448:	4705                	li	a4,1
2001144a:	86be                	mv	a3,a5
2001144c:	4605                	li	a2,1
2001144e:	06a00593          	li	a1,106
20011452:	fec42503          	lw	a0,-20(s0)
20011456:	3be060ef          	jal	ra,20017814 <metal_i2c_read>
2001145a:	87aa                	mv	a5,a0
2001145c:	eb89                	bnez	a5,2001146e <main+0x26e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:143
				printf("Accelero X LSB = %X\n", imu_buf[5]);
2001145e:	fe144783          	lbu	a5,-31(s0)
20011462:	85be                	mv	a1,a5
20011464:	200107b7          	lui	a5,0x20010
20011468:	44c78513          	addi	a0,a5,1100 # 2001044c <metal_tty_init+0x102>
2001146c:	204d                	jal	2001150e <iprintf>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:146
			}
		}
		if (metal_i2c_write(i2c, IMU_I2C_ADDR, LEN1, imu_addr_buf + 6, METAL_I2C_STOP_DISABLE) == RET_OK) {
2001146e:	fe440793          	addi	a5,s0,-28
20011472:	0799                	addi	a5,a5,6
20011474:	4701                	li	a4,0
20011476:	86be                	mv	a3,a5
20011478:	4605                	li	a2,1
2001147a:	06a00593          	li	a1,106
2001147e:	fec42503          	lw	a0,-20(s0)
20011482:	34c060ef          	jal	ra,200177ce <metal_i2c_write>
20011486:	87aa                	mv	a5,a0
20011488:	e79d                	bnez	a5,200114b6 <main+0x2b6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:147
			if (metal_i2c_read(i2c, IMU_I2C_ADDR, LEN1, imu_buf + 6, METAL_I2C_STOP_ENABLE) == RET_OK) {
2001148a:	fdc40793          	addi	a5,s0,-36
2001148e:	0799                	addi	a5,a5,6
20011490:	4705                	li	a4,1
20011492:	86be                	mv	a3,a5
20011494:	4605                	li	a2,1
20011496:	06a00593          	li	a1,106
2001149a:	fec42503          	lw	a0,-20(s0)
2001149e:	376060ef          	jal	ra,20017814 <metal_i2c_read>
200114a2:	87aa                	mv	a5,a0
200114a4:	eb89                	bnez	a5,200114b6 <main+0x2b6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:148
				printf("Accelero Y MSB = %X\n", imu_buf[6]);
200114a6:	fe244783          	lbu	a5,-30(s0)
200114aa:	85be                	mv	a1,a5
200114ac:	200107b7          	lui	a5,0x20010
200114b0:	46478513          	addi	a0,a5,1124 # 20010464 <metal_tty_init+0x11a>
200114b4:	28a9                	jal	2001150e <iprintf>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:151
			}
		}
		if (metal_i2c_write(i2c, IMU_I2C_ADDR, LEN1, imu_addr_buf + 7, METAL_I2C_STOP_DISABLE) == RET_OK) {
200114b6:	fe440793          	addi	a5,s0,-28
200114ba:	079d                	addi	a5,a5,7
200114bc:	4701                	li	a4,0
200114be:	86be                	mv	a3,a5
200114c0:	4605                	li	a2,1
200114c2:	06a00593          	li	a1,106
200114c6:	fec42503          	lw	a0,-20(s0)
200114ca:	304060ef          	jal	ra,200177ce <metal_i2c_write>
200114ce:	87aa                	mv	a5,a0
200114d0:	e2079be3          	bnez	a5,20011306 <main+0x106>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:152
			if (metal_i2c_read(i2c, IMU_I2C_ADDR, LEN1, imu_buf + 7, METAL_I2C_STOP_ENABLE) == RET_OK) {
200114d4:	fdc40793          	addi	a5,s0,-36
200114d8:	079d                	addi	a5,a5,7
200114da:	4705                	li	a4,1
200114dc:	86be                	mv	a3,a5
200114de:	4605                	li	a2,1
200114e0:	06a00593          	li	a1,106
200114e4:	fec42503          	lw	a0,-20(s0)
200114e8:	32c060ef          	jal	ra,20017814 <metal_i2c_read>
200114ec:	87aa                	mv	a5,a0
200114ee:	e0079ce3          	bnez	a5,20011306 <main+0x106>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:153
				printf("Accelero Y LSB = %X\n", imu_buf[7]);
200114f2:	fe344783          	lbu	a5,-29(s0)
200114f6:	85be                	mv	a1,a5
200114f8:	200107b7          	lui	a5,0x20010
200114fc:	47c78513          	addi	a0,a5,1148 # 2001047c <metal_tty_init+0x132>
20011500:	2039                	jal	2001150e <iprintf>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:117
		if (metal_i2c_write(i2c, IMU_I2C_ADDR, LEN1, imu_addr_buf + 1, METAL_I2C_STOP_DISABLE) == RET_OK) {
20011502:	b511                	j	20011306 <main+0x106>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:167 (discriminator 1)

	}


	return 0;
}
20011504:	853e                	mv	a0,a5
20011506:	50b2                	lw	ra,44(sp)
20011508:	5422                	lw	s0,40(sp)
2001150a:	6145                	addi	sp,sp,48
2001150c:	8082                	ret

2001150e <iprintf>:
printf():
2001150e:	7139                	addi	sp,sp,-64
20011510:	da3e                	sw	a5,52(sp)
20011512:	d22e                	sw	a1,36(sp)
20011514:	d432                	sw	a2,40(sp)
20011516:	d636                	sw	a3,44(sp)
20011518:	d83a                	sw	a4,48(sp)
2001151a:	dc42                	sw	a6,56(sp)
2001151c:	de46                	sw	a7,60(sp)
2001151e:	5ffef797          	auipc	a5,0x5ffef
20011522:	5aa78793          	addi	a5,a5,1450 # 80000ac8 <_impure_ptr>
20011526:	cc22                	sw	s0,24(sp)
20011528:	4380                	lw	s0,0(a5)
2001152a:	ca26                	sw	s1,20(sp)
2001152c:	ce06                	sw	ra,28(sp)
2001152e:	84aa                	mv	s1,a0
20011530:	c409                	beqz	s0,2001153a <iprintf+0x2c>
20011532:	4c1c                	lw	a5,24(s0)
20011534:	e399                	bnez	a5,2001153a <iprintf+0x2c>
20011536:	8522                	mv	a0,s0
20011538:	2b1d                	jal	20011a6e <__sinit>
2001153a:	440c                	lw	a1,8(s0)
2001153c:	1054                	addi	a3,sp,36
2001153e:	8626                	mv	a2,s1
20011540:	8522                	mv	a0,s0
20011542:	c636                	sw	a3,12(sp)
20011544:	191000ef          	jal	ra,20011ed4 <_vfiprintf_r>
20011548:	40f2                	lw	ra,28(sp)
2001154a:	4462                	lw	s0,24(sp)
2001154c:	44d2                	lw	s1,20(sp)
2001154e:	6121                	addi	sp,sp,64
20011550:	8082                	ret

20011552 <_puts_r>:
_puts_r():
20011552:	1101                	addi	sp,sp,-32
20011554:	ca26                	sw	s1,20(sp)
20011556:	c84a                	sw	s2,16(sp)
20011558:	ce06                	sw	ra,28(sp)
2001155a:	cc22                	sw	s0,24(sp)
2001155c:	c64e                	sw	s3,12(sp)
2001155e:	c452                	sw	s4,8(sp)
20011560:	84aa                	mv	s1,a0
20011562:	892e                	mv	s2,a1
20011564:	c501                	beqz	a0,2001156c <_puts_r+0x1a>
20011566:	4d1c                	lw	a5,24(a0)
20011568:	e391                	bnez	a5,2001156c <_puts_r+0x1a>
2001156a:	2311                	jal	20011a6e <__sinit>
2001156c:	4c9c                	lw	a5,24(s1)
2001156e:	4480                	lw	s0,8(s1)
20011570:	e399                	bnez	a5,20011576 <_puts_r+0x24>
20011572:	8526                	mv	a0,s1
20011574:	29ed                	jal	20011a6e <__sinit>
20011576:	fffff797          	auipc	a5,0xfffff
2001157a:	f3e78793          	addi	a5,a5,-194 # 200104b4 <__sf_fake_stdin>
2001157e:	02f41c63          	bne	s0,a5,200115b6 <_puts_r+0x64>
20011582:	40c0                	lw	s0,4(s1)
20011584:	00c45783          	lhu	a5,12(s0)
20011588:	8ba1                	andi	a5,a5,8
2001158a:	c7b1                	beqz	a5,200115d6 <_puts_r+0x84>
2001158c:	481c                	lw	a5,16(s0)
2001158e:	c7a1                	beqz	a5,200115d6 <_puts_r+0x84>
20011590:	59fd                	li	s3,-1
20011592:	4a29                	li	s4,10
20011594:	441c                	lw	a5,8(s0)
20011596:	00094583          	lbu	a1,0(s2)
2001159a:	17fd                	addi	a5,a5,-1
2001159c:	e9b1                	bnez	a1,200115f0 <_puts_r+0x9e>
2001159e:	c41c                	sw	a5,8(s0)
200115a0:	0607de63          	bgez	a5,2001161c <_puts_r+0xca>
200115a4:	8622                	mv	a2,s0
200115a6:	45a9                	li	a1,10
200115a8:	8526                	mv	a0,s1
200115aa:	2841                	jal	2001163a <__swbuf_r>
200115ac:	57fd                	li	a5,-1
200115ae:	02f50863          	beq	a0,a5,200115de <_puts_r+0x8c>
200115b2:	4529                	li	a0,10
200115b4:	a035                	j	200115e0 <_puts_r+0x8e>
200115b6:	fffff797          	auipc	a5,0xfffff
200115ba:	f1e78793          	addi	a5,a5,-226 # 200104d4 <__sf_fake_stdout>
200115be:	00f41463          	bne	s0,a5,200115c6 <_puts_r+0x74>
200115c2:	4480                	lw	s0,8(s1)
200115c4:	b7c1                	j	20011584 <_puts_r+0x32>
200115c6:	fffff797          	auipc	a5,0xfffff
200115ca:	ece78793          	addi	a5,a5,-306 # 20010494 <__sf_fake_stderr>
200115ce:	faf41be3          	bne	s0,a5,20011584 <_puts_r+0x32>
200115d2:	44c0                	lw	s0,12(s1)
200115d4:	bf45                	j	20011584 <_puts_r+0x32>
200115d6:	85a2                	mv	a1,s0
200115d8:	8526                	mv	a0,s1
200115da:	2205                	jal	200116fa <__swsetup_r>
200115dc:	d955                	beqz	a0,20011590 <_puts_r+0x3e>
200115de:	557d                	li	a0,-1
200115e0:	40f2                	lw	ra,28(sp)
200115e2:	4462                	lw	s0,24(sp)
200115e4:	44d2                	lw	s1,20(sp)
200115e6:	4942                	lw	s2,16(sp)
200115e8:	49b2                	lw	s3,12(sp)
200115ea:	4a22                	lw	s4,8(sp)
200115ec:	6105                	addi	sp,sp,32
200115ee:	8082                	ret
200115f0:	c41c                	sw	a5,8(s0)
200115f2:	0905                	addi	s2,s2,1
200115f4:	0007d763          	bgez	a5,20011602 <_puts_r+0xb0>
200115f8:	4c18                	lw	a4,24(s0)
200115fa:	00e7cb63          	blt	a5,a4,20011610 <_puts_r+0xbe>
200115fe:	01458963          	beq	a1,s4,20011610 <_puts_r+0xbe>
20011602:	401c                	lw	a5,0(s0)
20011604:	00178713          	addi	a4,a5,1
20011608:	c018                	sw	a4,0(s0)
2001160a:	00b78023          	sb	a1,0(a5)
2001160e:	b759                	j	20011594 <_puts_r+0x42>
20011610:	8622                	mv	a2,s0
20011612:	8526                	mv	a0,s1
20011614:	201d                	jal	2001163a <__swbuf_r>
20011616:	f7351fe3          	bne	a0,s3,20011594 <_puts_r+0x42>
2001161a:	b7d1                	j	200115de <_puts_r+0x8c>
2001161c:	401c                	lw	a5,0(s0)
2001161e:	00178713          	addi	a4,a5,1
20011622:	c018                	sw	a4,0(s0)
20011624:	4729                	li	a4,10
20011626:	00e78023          	sb	a4,0(a5)
2001162a:	b761                	j	200115b2 <_puts_r+0x60>

2001162c <puts>:
puts():
2001162c:	5ffef797          	auipc	a5,0x5ffef
20011630:	49c78793          	addi	a5,a5,1180 # 80000ac8 <_impure_ptr>
20011634:	85aa                	mv	a1,a0
20011636:	4388                	lw	a0,0(a5)
20011638:	bf29                	j	20011552 <_puts_r>

2001163a <__swbuf_r>:
__swbuf_r():
2001163a:	1101                	addi	sp,sp,-32
2001163c:	cc22                	sw	s0,24(sp)
2001163e:	ca26                	sw	s1,20(sp)
20011640:	c84a                	sw	s2,16(sp)
20011642:	ce06                	sw	ra,28(sp)
20011644:	c64e                	sw	s3,12(sp)
20011646:	84aa                	mv	s1,a0
20011648:	892e                	mv	s2,a1
2001164a:	8432                	mv	s0,a2
2001164c:	c501                	beqz	a0,20011654 <__swbuf_r+0x1a>
2001164e:	4d1c                	lw	a5,24(a0)
20011650:	e391                	bnez	a5,20011654 <__swbuf_r+0x1a>
20011652:	2931                	jal	20011a6e <__sinit>
20011654:	fffff797          	auipc	a5,0xfffff
20011658:	e6078793          	addi	a5,a5,-416 # 200104b4 <__sf_fake_stdin>
2001165c:	06f41963          	bne	s0,a5,200116ce <__swbuf_r+0x94>
20011660:	40c0                	lw	s0,4(s1)
20011662:	4c1c                	lw	a5,24(s0)
20011664:	c41c                	sw	a5,8(s0)
20011666:	00c45783          	lhu	a5,12(s0)
2001166a:	8ba1                	andi	a5,a5,8
2001166c:	c3c9                	beqz	a5,200116ee <__swbuf_r+0xb4>
2001166e:	481c                	lw	a5,16(s0)
20011670:	cfbd                	beqz	a5,200116ee <__swbuf_r+0xb4>
20011672:	481c                	lw	a5,16(s0)
20011674:	4008                	lw	a0,0(s0)
20011676:	0ff97993          	andi	s3,s2,255
2001167a:	0ff97913          	andi	s2,s2,255
2001167e:	8d1d                	sub	a0,a0,a5
20011680:	485c                	lw	a5,20(s0)
20011682:	00f54663          	blt	a0,a5,2001168e <__swbuf_r+0x54>
20011686:	85a2                	mv	a1,s0
20011688:	8526                	mv	a0,s1
2001168a:	24e9                	jal	20011954 <_fflush_r>
2001168c:	e52d                	bnez	a0,200116f6 <__swbuf_r+0xbc>
2001168e:	441c                	lw	a5,8(s0)
20011690:	0505                	addi	a0,a0,1
20011692:	17fd                	addi	a5,a5,-1
20011694:	c41c                	sw	a5,8(s0)
20011696:	401c                	lw	a5,0(s0)
20011698:	00178713          	addi	a4,a5,1
2001169c:	c018                	sw	a4,0(s0)
2001169e:	01378023          	sb	s3,0(a5)
200116a2:	485c                	lw	a5,20(s0)
200116a4:	00a78963          	beq	a5,a0,200116b6 <__swbuf_r+0x7c>
200116a8:	00c45783          	lhu	a5,12(s0)
200116ac:	8b85                	andi	a5,a5,1
200116ae:	cb81                	beqz	a5,200116be <__swbuf_r+0x84>
200116b0:	47a9                	li	a5,10
200116b2:	00f91663          	bne	s2,a5,200116be <__swbuf_r+0x84>
200116b6:	85a2                	mv	a1,s0
200116b8:	8526                	mv	a0,s1
200116ba:	2c69                	jal	20011954 <_fflush_r>
200116bc:	ed0d                	bnez	a0,200116f6 <__swbuf_r+0xbc>
200116be:	40f2                	lw	ra,28(sp)
200116c0:	4462                	lw	s0,24(sp)
200116c2:	854a                	mv	a0,s2
200116c4:	44d2                	lw	s1,20(sp)
200116c6:	4942                	lw	s2,16(sp)
200116c8:	49b2                	lw	s3,12(sp)
200116ca:	6105                	addi	sp,sp,32
200116cc:	8082                	ret
200116ce:	fffff797          	auipc	a5,0xfffff
200116d2:	e0678793          	addi	a5,a5,-506 # 200104d4 <__sf_fake_stdout>
200116d6:	00f41463          	bne	s0,a5,200116de <__swbuf_r+0xa4>
200116da:	4480                	lw	s0,8(s1)
200116dc:	b759                	j	20011662 <__swbuf_r+0x28>
200116de:	fffff797          	auipc	a5,0xfffff
200116e2:	db678793          	addi	a5,a5,-586 # 20010494 <__sf_fake_stderr>
200116e6:	f6f41ee3          	bne	s0,a5,20011662 <__swbuf_r+0x28>
200116ea:	44c0                	lw	s0,12(s1)
200116ec:	bf9d                	j	20011662 <__swbuf_r+0x28>
200116ee:	85a2                	mv	a1,s0
200116f0:	8526                	mv	a0,s1
200116f2:	2021                	jal	200116fa <__swsetup_r>
200116f4:	dd3d                	beqz	a0,20011672 <__swbuf_r+0x38>
200116f6:	597d                	li	s2,-1
200116f8:	b7d9                	j	200116be <__swbuf_r+0x84>

200116fa <__swsetup_r>:
__swsetup_r():
200116fa:	1141                	addi	sp,sp,-16
200116fc:	5ffef797          	auipc	a5,0x5ffef
20011700:	3cc78793          	addi	a5,a5,972 # 80000ac8 <_impure_ptr>
20011704:	c226                	sw	s1,4(sp)
20011706:	4384                	lw	s1,0(a5)
20011708:	c422                	sw	s0,8(sp)
2001170a:	c04a                	sw	s2,0(sp)
2001170c:	c606                	sw	ra,12(sp)
2001170e:	892a                	mv	s2,a0
20011710:	842e                	mv	s0,a1
20011712:	c489                	beqz	s1,2001171c <__swsetup_r+0x22>
20011714:	4c9c                	lw	a5,24(s1)
20011716:	e399                	bnez	a5,2001171c <__swsetup_r+0x22>
20011718:	8526                	mv	a0,s1
2001171a:	2e91                	jal	20011a6e <__sinit>
2001171c:	fffff797          	auipc	a5,0xfffff
20011720:	d9878793          	addi	a5,a5,-616 # 200104b4 <__sf_fake_stdin>
20011724:	02f41c63          	bne	s0,a5,2001175c <__swsetup_r+0x62>
20011728:	40c0                	lw	s0,4(s1)
2001172a:	00c41703          	lh	a4,12(s0)
2001172e:	01071793          	slli	a5,a4,0x10
20011732:	83c1                	srli	a5,a5,0x10
20011734:	0087f693          	andi	a3,a5,8
20011738:	eeb5                	bnez	a3,200117b4 <__swsetup_r+0xba>
2001173a:	0107f693          	andi	a3,a5,16
2001173e:	ee9d                	bnez	a3,2001177c <__swsetup_r+0x82>
20011740:	47a5                	li	a5,9
20011742:	00f92023          	sw	a5,0(s2)
20011746:	04076713          	ori	a4,a4,64
2001174a:	00e41623          	sh	a4,12(s0)
2001174e:	557d                	li	a0,-1
20011750:	40b2                	lw	ra,12(sp)
20011752:	4422                	lw	s0,8(sp)
20011754:	4492                	lw	s1,4(sp)
20011756:	4902                	lw	s2,0(sp)
20011758:	0141                	addi	sp,sp,16
2001175a:	8082                	ret
2001175c:	fffff797          	auipc	a5,0xfffff
20011760:	d7878793          	addi	a5,a5,-648 # 200104d4 <__sf_fake_stdout>
20011764:	00f41463          	bne	s0,a5,2001176c <__swsetup_r+0x72>
20011768:	4480                	lw	s0,8(s1)
2001176a:	b7c1                	j	2001172a <__swsetup_r+0x30>
2001176c:	fffff797          	auipc	a5,0xfffff
20011770:	d2878793          	addi	a5,a5,-728 # 20010494 <__sf_fake_stderr>
20011774:	faf41be3          	bne	s0,a5,2001172a <__swsetup_r+0x30>
20011778:	44c0                	lw	s0,12(s1)
2001177a:	bf45                	j	2001172a <__swsetup_r+0x30>
2001177c:	8b91                	andi	a5,a5,4
2001177e:	c78d                	beqz	a5,200117a8 <__swsetup_r+0xae>
20011780:	584c                	lw	a1,52(s0)
20011782:	c989                	beqz	a1,20011794 <__swsetup_r+0x9a>
20011784:	04440793          	addi	a5,s0,68
20011788:	00f58463          	beq	a1,a5,20011790 <__swsetup_r+0x96>
2001178c:	854a                	mv	a0,s2
2001178e:	2b81                	jal	20011cde <_free_r>
20011790:	02042a23          	sw	zero,52(s0)
20011794:	00c45783          	lhu	a5,12(s0)
20011798:	00042223          	sw	zero,4(s0)
2001179c:	fdb7f793          	andi	a5,a5,-37
200117a0:	00f41623          	sh	a5,12(s0)
200117a4:	481c                	lw	a5,16(s0)
200117a6:	c01c                	sw	a5,0(s0)
200117a8:	00c45783          	lhu	a5,12(s0)
200117ac:	0087e793          	ori	a5,a5,8
200117b0:	00f41623          	sh	a5,12(s0)
200117b4:	481c                	lw	a5,16(s0)
200117b6:	ef81                	bnez	a5,200117ce <__swsetup_r+0xd4>
200117b8:	00c45783          	lhu	a5,12(s0)
200117bc:	20000713          	li	a4,512
200117c0:	2807f793          	andi	a5,a5,640
200117c4:	00e78563          	beq	a5,a4,200117ce <__swsetup_r+0xd4>
200117c8:	85a2                	mv	a1,s0
200117ca:	854a                	mv	a0,s2
200117cc:	219d                	jal	20011c32 <__smakebuf_r>
200117ce:	00c45783          	lhu	a5,12(s0)
200117d2:	0017f713          	andi	a4,a5,1
200117d6:	c705                	beqz	a4,200117fe <__swsetup_r+0x104>
200117d8:	485c                	lw	a5,20(s0)
200117da:	00042423          	sw	zero,8(s0)
200117de:	40f007b3          	neg	a5,a5
200117e2:	cc1c                	sw	a5,24(s0)
200117e4:	481c                	lw	a5,16(s0)
200117e6:	4501                	li	a0,0
200117e8:	f7a5                	bnez	a5,20011750 <__swsetup_r+0x56>
200117ea:	00c41783          	lh	a5,12(s0)
200117ee:	0807f713          	andi	a4,a5,128
200117f2:	df39                	beqz	a4,20011750 <__swsetup_r+0x56>
200117f4:	0407e793          	ori	a5,a5,64
200117f8:	00f41623          	sh	a5,12(s0)
200117fc:	bf89                	j	2001174e <__swsetup_r+0x54>
200117fe:	8b89                	andi	a5,a5,2
20011800:	4701                	li	a4,0
20011802:	e391                	bnez	a5,20011806 <__swsetup_r+0x10c>
20011804:	4858                	lw	a4,20(s0)
20011806:	c418                	sw	a4,8(s0)
20011808:	bff1                	j	200117e4 <__swsetup_r+0xea>

2001180a <__sflush_r>:
__sflush_r():
2001180a:	00c5d783          	lhu	a5,12(a1)
2001180e:	1101                	addi	sp,sp,-32
20011810:	cc22                	sw	s0,24(sp)
20011812:	ca26                	sw	s1,20(sp)
20011814:	ce06                	sw	ra,28(sp)
20011816:	c84a                	sw	s2,16(sp)
20011818:	c64e                	sw	s3,12(sp)
2001181a:	0087f713          	andi	a4,a5,8
2001181e:	84aa                	mv	s1,a0
20011820:	842e                	mv	s0,a1
20011822:	e765                	bnez	a4,2001190a <__sflush_r+0x100>
20011824:	41d8                	lw	a4,4(a1)
20011826:	00e04763          	bgtz	a4,20011834 <__sflush_r+0x2a>
2001182a:	41b8                	lw	a4,64(a1)
2001182c:	00e04463          	bgtz	a4,20011834 <__sflush_r+0x2a>
20011830:	4501                	li	a0,0
20011832:	a0c1                	j	200118f2 <__sflush_r+0xe8>
20011834:	5458                	lw	a4,44(s0)
20011836:	df6d                	beqz	a4,20011830 <__sflush_r+0x26>
20011838:	0004a903          	lw	s2,0(s1)
2001183c:	01379693          	slli	a3,a5,0x13
20011840:	0004a023          	sw	zero,0(s1)
20011844:	0606de63          	bgez	a3,200118c0 <__sflush_r+0xb6>
20011848:	4868                	lw	a0,84(s0)
2001184a:	00c45783          	lhu	a5,12(s0)
2001184e:	8b91                	andi	a5,a5,4
20011850:	c799                	beqz	a5,2001185e <__sflush_r+0x54>
20011852:	405c                	lw	a5,4(s0)
20011854:	8d1d                	sub	a0,a0,a5
20011856:	585c                	lw	a5,52(s0)
20011858:	c399                	beqz	a5,2001185e <__sflush_r+0x54>
2001185a:	403c                	lw	a5,64(s0)
2001185c:	8d1d                	sub	a0,a0,a5
2001185e:	545c                	lw	a5,44(s0)
20011860:	500c                	lw	a1,32(s0)
20011862:	862a                	mv	a2,a0
20011864:	4681                	li	a3,0
20011866:	8526                	mv	a0,s1
20011868:	9782                	jalr	a5
2001186a:	57fd                	li	a5,-1
2001186c:	00c45703          	lhu	a4,12(s0)
20011870:	00f51d63          	bne	a0,a5,2001188a <__sflush_r+0x80>
20011874:	4094                	lw	a3,0(s1)
20011876:	47f5                	li	a5,29
20011878:	08d7e463          	bltu	a5,a3,20011900 <__sflush_r+0xf6>
2001187c:	204007b7          	lui	a5,0x20400
20011880:	0785                	addi	a5,a5,1
20011882:	00d7d7b3          	srl	a5,a5,a3
20011886:	8b85                	andi	a5,a5,1
20011888:	cfa5                	beqz	a5,20011900 <__sflush_r+0xf6>
2001188a:	481c                	lw	a5,16(s0)
2001188c:	00042223          	sw	zero,4(s0)
20011890:	c01c                	sw	a5,0(s0)
20011892:	01371793          	slli	a5,a4,0x13
20011896:	0007d863          	bgez	a5,200118a6 <__sflush_r+0x9c>
2001189a:	57fd                	li	a5,-1
2001189c:	00f51463          	bne	a0,a5,200118a4 <__sflush_r+0x9a>
200118a0:	409c                	lw	a5,0(s1)
200118a2:	e391                	bnez	a5,200118a6 <__sflush_r+0x9c>
200118a4:	c868                	sw	a0,84(s0)
200118a6:	584c                	lw	a1,52(s0)
200118a8:	0124a023          	sw	s2,0(s1)
200118ac:	d1d1                	beqz	a1,20011830 <__sflush_r+0x26>
200118ae:	04440793          	addi	a5,s0,68
200118b2:	00f58463          	beq	a1,a5,200118ba <__sflush_r+0xb0>
200118b6:	8526                	mv	a0,s1
200118b8:	211d                	jal	20011cde <_free_r>
200118ba:	02042a23          	sw	zero,52(s0)
200118be:	bf8d                	j	20011830 <__sflush_r+0x26>
200118c0:	500c                	lw	a1,32(s0)
200118c2:	4685                	li	a3,1
200118c4:	4601                	li	a2,0
200118c6:	8526                	mv	a0,s1
200118c8:	9702                	jalr	a4
200118ca:	57fd                	li	a5,-1
200118cc:	f6f51fe3          	bne	a0,a5,2001184a <__sflush_r+0x40>
200118d0:	409c                	lw	a5,0(s1)
200118d2:	dfa5                	beqz	a5,2001184a <__sflush_r+0x40>
200118d4:	4775                	li	a4,29
200118d6:	00e78563          	beq	a5,a4,200118e0 <__sflush_r+0xd6>
200118da:	4759                	li	a4,22
200118dc:	00e79563          	bne	a5,a4,200118e6 <__sflush_r+0xdc>
200118e0:	0124a023          	sw	s2,0(s1)
200118e4:	b7b1                	j	20011830 <__sflush_r+0x26>
200118e6:	00c45783          	lhu	a5,12(s0)
200118ea:	0407e793          	ori	a5,a5,64
200118ee:	00f41623          	sh	a5,12(s0)
200118f2:	40f2                	lw	ra,28(sp)
200118f4:	4462                	lw	s0,24(sp)
200118f6:	44d2                	lw	s1,20(sp)
200118f8:	4942                	lw	s2,16(sp)
200118fa:	49b2                	lw	s3,12(sp)
200118fc:	6105                	addi	sp,sp,32
200118fe:	8082                	ret
20011900:	04076713          	ori	a4,a4,64
20011904:	00e41623          	sh	a4,12(s0)
20011908:	b7ed                	j	200118f2 <__sflush_r+0xe8>
2001190a:	0105a983          	lw	s3,16(a1)
2001190e:	f20981e3          	beqz	s3,20011830 <__sflush_r+0x26>
20011912:	0005a903          	lw	s2,0(a1)
20011916:	8b8d                	andi	a5,a5,3
20011918:	0135a023          	sw	s3,0(a1)
2001191c:	41390933          	sub	s2,s2,s3
20011920:	4701                	li	a4,0
20011922:	e391                	bnez	a5,20011926 <__sflush_r+0x11c>
20011924:	49d8                	lw	a4,20(a1)
20011926:	c418                	sw	a4,8(s0)
20011928:	f12054e3          	blez	s2,20011830 <__sflush_r+0x26>
2001192c:	541c                	lw	a5,40(s0)
2001192e:	500c                	lw	a1,32(s0)
20011930:	86ca                	mv	a3,s2
20011932:	864e                	mv	a2,s3
20011934:	8526                	mv	a0,s1
20011936:	9782                	jalr	a5
20011938:	00a04a63          	bgtz	a0,2001194c <__sflush_r+0x142>
2001193c:	00c45783          	lhu	a5,12(s0)
20011940:	557d                	li	a0,-1
20011942:	0407e793          	ori	a5,a5,64
20011946:	00f41623          	sh	a5,12(s0)
2001194a:	b765                	j	200118f2 <__sflush_r+0xe8>
2001194c:	99aa                	add	s3,s3,a0
2001194e:	40a90933          	sub	s2,s2,a0
20011952:	bfd9                	j	20011928 <__sflush_r+0x11e>

20011954 <_fflush_r>:
_fflush_r():
20011954:	499c                	lw	a5,16(a1)
20011956:	cfb9                	beqz	a5,200119b4 <_fflush_r+0x60>
20011958:	1101                	addi	sp,sp,-32
2001195a:	cc22                	sw	s0,24(sp)
2001195c:	ce06                	sw	ra,28(sp)
2001195e:	842a                	mv	s0,a0
20011960:	c511                	beqz	a0,2001196c <_fflush_r+0x18>
20011962:	4d1c                	lw	a5,24(a0)
20011964:	e781                	bnez	a5,2001196c <_fflush_r+0x18>
20011966:	c62e                	sw	a1,12(sp)
20011968:	2219                	jal	20011a6e <__sinit>
2001196a:	45b2                	lw	a1,12(sp)
2001196c:	fffff797          	auipc	a5,0xfffff
20011970:	b4878793          	addi	a5,a5,-1208 # 200104b4 <__sf_fake_stdin>
20011974:	00f59b63          	bne	a1,a5,2001198a <_fflush_r+0x36>
20011978:	404c                	lw	a1,4(s0)
2001197a:	00c59783          	lh	a5,12(a1)
2001197e:	c795                	beqz	a5,200119aa <_fflush_r+0x56>
20011980:	8522                	mv	a0,s0
20011982:	4462                	lw	s0,24(sp)
20011984:	40f2                	lw	ra,28(sp)
20011986:	6105                	addi	sp,sp,32
20011988:	b549                	j	2001180a <__sflush_r>
2001198a:	fffff797          	auipc	a5,0xfffff
2001198e:	b4a78793          	addi	a5,a5,-1206 # 200104d4 <__sf_fake_stdout>
20011992:	00f59463          	bne	a1,a5,2001199a <_fflush_r+0x46>
20011996:	440c                	lw	a1,8(s0)
20011998:	b7cd                	j	2001197a <_fflush_r+0x26>
2001199a:	fffff797          	auipc	a5,0xfffff
2001199e:	afa78793          	addi	a5,a5,-1286 # 20010494 <__sf_fake_stderr>
200119a2:	fcf59ce3          	bne	a1,a5,2001197a <_fflush_r+0x26>
200119a6:	444c                	lw	a1,12(s0)
200119a8:	bfc9                	j	2001197a <_fflush_r+0x26>
200119aa:	40f2                	lw	ra,28(sp)
200119ac:	4462                	lw	s0,24(sp)
200119ae:	4501                	li	a0,0
200119b0:	6105                	addi	sp,sp,32
200119b2:	8082                	ret
200119b4:	4501                	li	a0,0
200119b6:	8082                	ret

200119b8 <std>:
std():
200119b8:	1141                	addi	sp,sp,-16
200119ba:	c422                	sw	s0,8(sp)
200119bc:	c606                	sw	ra,12(sp)
200119be:	842a                	mv	s0,a0
200119c0:	00b51623          	sh	a1,12(a0)
200119c4:	00c51723          	sh	a2,14(a0)
200119c8:	00052023          	sw	zero,0(a0)
200119cc:	00052223          	sw	zero,4(a0)
200119d0:	00052423          	sw	zero,8(a0)
200119d4:	06052223          	sw	zero,100(a0)
200119d8:	00052823          	sw	zero,16(a0)
200119dc:	00052a23          	sw	zero,20(a0)
200119e0:	00052c23          	sw	zero,24(a0)
200119e4:	4621                	li	a2,8
200119e6:	4581                	li	a1,0
200119e8:	05c50513          	addi	a0,a0,92
200119ec:	24cd                	jal	20011cce <memset>
200119ee:	00000797          	auipc	a5,0x0
200119f2:	7a878793          	addi	a5,a5,1960 # 20012196 <__sread>
200119f6:	d05c                	sw	a5,36(s0)
200119f8:	00000797          	auipc	a5,0x0
200119fc:	7ce78793          	addi	a5,a5,1998 # 200121c6 <__swrite>
20011a00:	d41c                	sw	a5,40(s0)
20011a02:	00001797          	auipc	a5,0x1
20011a06:	81278793          	addi	a5,a5,-2030 # 20012214 <__sseek>
20011a0a:	d45c                	sw	a5,44(s0)
20011a0c:	00001797          	auipc	a5,0x1
20011a10:	83e78793          	addi	a5,a5,-1986 # 2001224a <__sclose>
20011a14:	d000                	sw	s0,32(s0)
20011a16:	d81c                	sw	a5,48(s0)
20011a18:	40b2                	lw	ra,12(sp)
20011a1a:	4422                	lw	s0,8(sp)
20011a1c:	0141                	addi	sp,sp,16
20011a1e:	8082                	ret

20011a20 <_cleanup_r>:
_cleanup_r():
20011a20:	00000597          	auipc	a1,0x0
20011a24:	f3458593          	addi	a1,a1,-204 # 20011954 <_fflush_r>
20011a28:	a299                	j	20011b6e <_fwalk_reent>

20011a2a <__sfmoreglue>:
__sfmoreglue():
20011a2a:	1141                	addi	sp,sp,-16
20011a2c:	c226                	sw	s1,4(sp)
20011a2e:	06800613          	li	a2,104
20011a32:	fff58493          	addi	s1,a1,-1
20011a36:	02c484b3          	mul	s1,s1,a2
20011a3a:	c04a                	sw	s2,0(sp)
20011a3c:	892e                	mv	s2,a1
20011a3e:	c422                	sw	s0,8(sp)
20011a40:	c606                	sw	ra,12(sp)
20011a42:	07448593          	addi	a1,s1,116
20011a46:	2691                	jal	20011d8a <_malloc_r>
20011a48:	842a                	mv	s0,a0
20011a4a:	c919                	beqz	a0,20011a60 <__sfmoreglue+0x36>
20011a4c:	00052023          	sw	zero,0(a0)
20011a50:	01252223          	sw	s2,4(a0)
20011a54:	0531                	addi	a0,a0,12
20011a56:	c408                	sw	a0,8(s0)
20011a58:	06848613          	addi	a2,s1,104
20011a5c:	4581                	li	a1,0
20011a5e:	2c85                	jal	20011cce <memset>
20011a60:	8522                	mv	a0,s0
20011a62:	40b2                	lw	ra,12(sp)
20011a64:	4422                	lw	s0,8(sp)
20011a66:	4492                	lw	s1,4(sp)
20011a68:	4902                	lw	s2,0(sp)
20011a6a:	0141                	addi	sp,sp,16
20011a6c:	8082                	ret

20011a6e <__sinit>:
__sinit():
20011a6e:	4d1c                	lw	a5,24(a0)
20011a70:	e3ad                	bnez	a5,20011ad2 <__sinit+0x64>
20011a72:	1141                	addi	sp,sp,-16
20011a74:	c606                	sw	ra,12(sp)
20011a76:	c422                	sw	s0,8(sp)
20011a78:	00000797          	auipc	a5,0x0
20011a7c:	fa878793          	addi	a5,a5,-88 # 20011a20 <_cleanup_r>
20011a80:	d51c                	sw	a5,40(a0)
20011a82:	80c18793          	addi	a5,gp,-2036 # 80000acc <_global_impure_ptr>
20011a86:	439c                	lw	a5,0(a5)
20011a88:	04052423          	sw	zero,72(a0)
20011a8c:	04052623          	sw	zero,76(a0)
20011a90:	04052823          	sw	zero,80(a0)
20011a94:	00f51463          	bne	a0,a5,20011a9c <__sinit+0x2e>
20011a98:	4785                	li	a5,1
20011a9a:	cd1c                	sw	a5,24(a0)
20011a9c:	842a                	mv	s0,a0
20011a9e:	281d                	jal	20011ad4 <__sfp>
20011aa0:	c048                	sw	a0,4(s0)
20011aa2:	8522                	mv	a0,s0
20011aa4:	2805                	jal	20011ad4 <__sfp>
20011aa6:	c408                	sw	a0,8(s0)
20011aa8:	8522                	mv	a0,s0
20011aaa:	202d                	jal	20011ad4 <__sfp>
20011aac:	c448                	sw	a0,12(s0)
20011aae:	4048                	lw	a0,4(s0)
20011ab0:	4601                	li	a2,0
20011ab2:	4591                	li	a1,4
20011ab4:	3711                	jal	200119b8 <std>
20011ab6:	4408                	lw	a0,8(s0)
20011ab8:	4605                	li	a2,1
20011aba:	45a5                	li	a1,9
20011abc:	3df5                	jal	200119b8 <std>
20011abe:	4448                	lw	a0,12(s0)
20011ac0:	4609                	li	a2,2
20011ac2:	45c9                	li	a1,18
20011ac4:	3dd5                	jal	200119b8 <std>
20011ac6:	4785                	li	a5,1
20011ac8:	cc1c                	sw	a5,24(s0)
20011aca:	40b2                	lw	ra,12(sp)
20011acc:	4422                	lw	s0,8(sp)
20011ace:	0141                	addi	sp,sp,16
20011ad0:	8082                	ret
20011ad2:	8082                	ret

20011ad4 <__sfp>:
__sfp():
20011ad4:	1141                	addi	sp,sp,-16
20011ad6:	80c18793          	addi	a5,gp,-2036 # 80000acc <_global_impure_ptr>
20011ada:	c226                	sw	s1,4(sp)
20011adc:	4384                	lw	s1,0(a5)
20011ade:	c04a                	sw	s2,0(sp)
20011ae0:	c606                	sw	ra,12(sp)
20011ae2:	4c9c                	lw	a5,24(s1)
20011ae4:	c422                	sw	s0,8(sp)
20011ae6:	892a                	mv	s2,a0
20011ae8:	e399                	bnez	a5,20011aee <__sfp+0x1a>
20011aea:	8526                	mv	a0,s1
20011aec:	3749                	jal	20011a6e <__sinit>
20011aee:	04848493          	addi	s1,s1,72
20011af2:	4480                	lw	s0,8(s1)
20011af4:	40dc                	lw	a5,4(s1)
20011af6:	17fd                	addi	a5,a5,-1
20011af8:	0007d663          	bgez	a5,20011b04 <__sfp+0x30>
20011afc:	409c                	lw	a5,0(s1)
20011afe:	cfb1                	beqz	a5,20011b5a <__sfp+0x86>
20011b00:	4084                	lw	s1,0(s1)
20011b02:	bfc5                	j	20011af2 <__sfp+0x1e>
20011b04:	00c41703          	lh	a4,12(s0)
20011b08:	e731                	bnez	a4,20011b54 <__sfp+0x80>
20011b0a:	77c1                	lui	a5,0xffff0
20011b0c:	0785                	addi	a5,a5,1
20011b0e:	06042223          	sw	zero,100(s0)
20011b12:	00042023          	sw	zero,0(s0)
20011b16:	00042223          	sw	zero,4(s0)
20011b1a:	00042423          	sw	zero,8(s0)
20011b1e:	c45c                	sw	a5,12(s0)
20011b20:	00042823          	sw	zero,16(s0)
20011b24:	00042a23          	sw	zero,20(s0)
20011b28:	00042c23          	sw	zero,24(s0)
20011b2c:	4621                	li	a2,8
20011b2e:	4581                	li	a1,0
20011b30:	05c40513          	addi	a0,s0,92
20011b34:	2a69                	jal	20011cce <memset>
20011b36:	02042a23          	sw	zero,52(s0)
20011b3a:	02042c23          	sw	zero,56(s0)
20011b3e:	04042423          	sw	zero,72(s0)
20011b42:	04042623          	sw	zero,76(s0)
20011b46:	8522                	mv	a0,s0
20011b48:	40b2                	lw	ra,12(sp)
20011b4a:	4422                	lw	s0,8(sp)
20011b4c:	4492                	lw	s1,4(sp)
20011b4e:	4902                	lw	s2,0(sp)
20011b50:	0141                	addi	sp,sp,16
20011b52:	8082                	ret
20011b54:	06840413          	addi	s0,s0,104
20011b58:	bf79                	j	20011af6 <__sfp+0x22>
20011b5a:	4591                	li	a1,4
20011b5c:	854a                	mv	a0,s2
20011b5e:	35f1                	jal	20011a2a <__sfmoreglue>
20011b60:	c088                	sw	a0,0(s1)
20011b62:	842a                	mv	s0,a0
20011b64:	fd51                	bnez	a0,20011b00 <__sfp+0x2c>
20011b66:	47b1                	li	a5,12
20011b68:	00f92023          	sw	a5,0(s2)
20011b6c:	bfe9                	j	20011b46 <__sfp+0x72>

20011b6e <_fwalk_reent>:
_fwalk_reent():
20011b6e:	7179                	addi	sp,sp,-48
20011b70:	d422                	sw	s0,40(sp)
20011b72:	d04a                	sw	s2,32(sp)
20011b74:	cc52                	sw	s4,24(sp)
20011b76:	ca56                	sw	s5,20(sp)
20011b78:	c85a                	sw	s6,16(sp)
20011b7a:	c65e                	sw	s7,12(sp)
20011b7c:	d606                	sw	ra,44(sp)
20011b7e:	d226                	sw	s1,36(sp)
20011b80:	ce4e                	sw	s3,28(sp)
20011b82:	8a2a                	mv	s4,a0
20011b84:	8aae                	mv	s5,a1
20011b86:	04850413          	addi	s0,a0,72
20011b8a:	4901                	li	s2,0
20011b8c:	4b05                	li	s6,1
20011b8e:	5bfd                	li	s7,-1
20011b90:	ec09                	bnez	s0,20011baa <_fwalk_reent+0x3c>
20011b92:	50b2                	lw	ra,44(sp)
20011b94:	5422                	lw	s0,40(sp)
20011b96:	854a                	mv	a0,s2
20011b98:	5492                	lw	s1,36(sp)
20011b9a:	5902                	lw	s2,32(sp)
20011b9c:	49f2                	lw	s3,28(sp)
20011b9e:	4a62                	lw	s4,24(sp)
20011ba0:	4ad2                	lw	s5,20(sp)
20011ba2:	4b42                	lw	s6,16(sp)
20011ba4:	4bb2                	lw	s7,12(sp)
20011ba6:	6145                	addi	sp,sp,48
20011ba8:	8082                	ret
20011baa:	4404                	lw	s1,8(s0)
20011bac:	00442983          	lw	s3,4(s0)
20011bb0:	19fd                	addi	s3,s3,-1
20011bb2:	0009d463          	bgez	s3,20011bba <_fwalk_reent+0x4c>
20011bb6:	4000                	lw	s0,0(s0)
20011bb8:	bfe1                	j	20011b90 <_fwalk_reent+0x22>
20011bba:	00c4d783          	lhu	a5,12(s1)
20011bbe:	00fb7b63          	bgeu	s6,a5,20011bd4 <_fwalk_reent+0x66>
20011bc2:	00e49783          	lh	a5,14(s1)
20011bc6:	01778763          	beq	a5,s7,20011bd4 <_fwalk_reent+0x66>
20011bca:	85a6                	mv	a1,s1
20011bcc:	8552                	mv	a0,s4
20011bce:	9a82                	jalr	s5
20011bd0:	00a96933          	or	s2,s2,a0
20011bd4:	06848493          	addi	s1,s1,104
20011bd8:	bfe1                	j	20011bb0 <_fwalk_reent+0x42>

20011bda <__swhatbuf_r>:
__swhatbuf_r():
20011bda:	7119                	addi	sp,sp,-128
20011bdc:	daa6                	sw	s1,116(sp)
20011bde:	84ae                	mv	s1,a1
20011be0:	00e59583          	lh	a1,14(a1)
20011be4:	dca2                	sw	s0,120(sp)
20011be6:	de86                	sw	ra,124(sp)
20011be8:	8432                	mv	s0,a2
20011bea:	0005dc63          	bgez	a1,20011c02 <__swhatbuf_r+0x28>
20011bee:	00c4d783          	lhu	a5,12(s1)
20011bf2:	0006a023          	sw	zero,0(a3)
20011bf6:	0807f793          	andi	a5,a5,128
20011bfa:	e39d                	bnez	a5,20011c20 <__swhatbuf_r+0x46>
20011bfc:	40000793          	li	a5,1024
20011c00:	a015                	j	20011c24 <__swhatbuf_r+0x4a>
20011c02:	0830                	addi	a2,sp,24
20011c04:	c636                	sw	a3,12(sp)
20011c06:	254d                	jal	200122a8 <_fstat_r>
20011c08:	46b2                	lw	a3,12(sp)
20011c0a:	fe0542e3          	bltz	a0,20011bee <__swhatbuf_r+0x14>
20011c0e:	4772                	lw	a4,28(sp)
20011c10:	67bd                	lui	a5,0xf
20011c12:	8ff9                	and	a5,a5,a4
20011c14:	7779                	lui	a4,0xffffe
20011c16:	97ba                	add	a5,a5,a4
20011c18:	0017b793          	seqz	a5,a5
20011c1c:	c29c                	sw	a5,0(a3)
20011c1e:	bff9                	j	20011bfc <__swhatbuf_r+0x22>
20011c20:	04000793          	li	a5,64
20011c24:	c01c                	sw	a5,0(s0)
20011c26:	50f6                	lw	ra,124(sp)
20011c28:	5466                	lw	s0,120(sp)
20011c2a:	54d6                	lw	s1,116(sp)
20011c2c:	4501                	li	a0,0
20011c2e:	6109                	addi	sp,sp,128
20011c30:	8082                	ret

20011c32 <__smakebuf_r>:
__smakebuf_r():
20011c32:	00c5d783          	lhu	a5,12(a1)
20011c36:	1101                	addi	sp,sp,-32
20011c38:	cc22                	sw	s0,24(sp)
20011c3a:	ce06                	sw	ra,28(sp)
20011c3c:	ca26                	sw	s1,20(sp)
20011c3e:	c84a                	sw	s2,16(sp)
20011c40:	8b89                	andi	a5,a5,2
20011c42:	842e                	mv	s0,a1
20011c44:	cf89                	beqz	a5,20011c5e <__smakebuf_r+0x2c>
20011c46:	04740793          	addi	a5,s0,71
20011c4a:	c01c                	sw	a5,0(s0)
20011c4c:	c81c                	sw	a5,16(s0)
20011c4e:	4785                	li	a5,1
20011c50:	c85c                	sw	a5,20(s0)
20011c52:	40f2                	lw	ra,28(sp)
20011c54:	4462                	lw	s0,24(sp)
20011c56:	44d2                	lw	s1,20(sp)
20011c58:	4942                	lw	s2,16(sp)
20011c5a:	6105                	addi	sp,sp,32
20011c5c:	8082                	ret
20011c5e:	0074                	addi	a3,sp,12
20011c60:	0030                	addi	a2,sp,8
20011c62:	84aa                	mv	s1,a0
20011c64:	3f9d                	jal	20011bda <__swhatbuf_r>
20011c66:	45a2                	lw	a1,8(sp)
20011c68:	892a                	mv	s2,a0
20011c6a:	8526                	mv	a0,s1
20011c6c:	2a39                	jal	20011d8a <_malloc_r>
20011c6e:	ed01                	bnez	a0,20011c86 <__smakebuf_r+0x54>
20011c70:	00c41783          	lh	a5,12(s0)
20011c74:	2007f713          	andi	a4,a5,512
20011c78:	ff69                	bnez	a4,20011c52 <__smakebuf_r+0x20>
20011c7a:	9bf1                	andi	a5,a5,-4
20011c7c:	0027e793          	ori	a5,a5,2
20011c80:	00f41623          	sh	a5,12(s0)
20011c84:	b7c9                	j	20011c46 <__smakebuf_r+0x14>
20011c86:	00000797          	auipc	a5,0x0
20011c8a:	d9a78793          	addi	a5,a5,-614 # 20011a20 <_cleanup_r>
20011c8e:	d49c                	sw	a5,40(s1)
20011c90:	00c45783          	lhu	a5,12(s0)
20011c94:	c008                	sw	a0,0(s0)
20011c96:	c808                	sw	a0,16(s0)
20011c98:	0807e793          	ori	a5,a5,128
20011c9c:	00f41623          	sh	a5,12(s0)
20011ca0:	47a2                	lw	a5,8(sp)
20011ca2:	c85c                	sw	a5,20(s0)
20011ca4:	47b2                	lw	a5,12(sp)
20011ca6:	cf89                	beqz	a5,20011cc0 <__smakebuf_r+0x8e>
20011ca8:	00e41583          	lh	a1,14(s0)
20011cac:	8526                	mv	a0,s1
20011cae:	251d                	jal	200122d4 <_isatty_r>
20011cb0:	c901                	beqz	a0,20011cc0 <__smakebuf_r+0x8e>
20011cb2:	00c45783          	lhu	a5,12(s0)
20011cb6:	9bf1                	andi	a5,a5,-4
20011cb8:	0017e793          	ori	a5,a5,1
20011cbc:	00f41623          	sh	a5,12(s0)
20011cc0:	00c45783          	lhu	a5,12(s0)
20011cc4:	00f96933          	or	s2,s2,a5
20011cc8:	01241623          	sh	s2,12(s0)
20011ccc:	b759                	j	20011c52 <__smakebuf_r+0x20>

20011cce <memset>:
memset():
20011cce:	832a                	mv	t1,a0
20011cd0:	c611                	beqz	a2,20011cdc <memset+0xe>
20011cd2:	00b30023          	sb	a1,0(t1)
20011cd6:	167d                	addi	a2,a2,-1
20011cd8:	0305                	addi	t1,t1,1
20011cda:	fe65                	bnez	a2,20011cd2 <memset+0x4>
20011cdc:	8082                	ret

20011cde <_free_r>:
_free_r():
20011cde:	c5cd                	beqz	a1,20011d88 <_free_r+0xaa>
20011ce0:	ffc5a783          	lw	a5,-4(a1)
20011ce4:	1141                	addi	sp,sp,-16
20011ce6:	c422                	sw	s0,8(sp)
20011ce8:	c606                	sw	ra,12(sp)
20011cea:	c226                	sw	s1,4(sp)
20011cec:	ffc58413          	addi	s0,a1,-4
20011cf0:	0007d363          	bgez	a5,20011cf6 <_free_r+0x18>
20011cf4:	943e                	add	s0,s0,a5
20011cf6:	84aa                	mv	s1,a0
20011cf8:	25b9                	jal	20012346 <__malloc_lock>
20011cfa:	5ffef797          	auipc	a5,0x5ffef
20011cfe:	e1678793          	addi	a5,a5,-490 # 80000b10 <__tls_base>
20011d02:	439c                	lw	a5,0(a5)
20011d04:	ef89                	bnez	a5,20011d1e <_free_r+0x40>
20011d06:	00042223          	sw	zero,4(s0)
20011d0a:	5ffef797          	auipc	a5,0x5ffef
20011d0e:	e087a323          	sw	s0,-506(a5) # 80000b10 <__tls_base>
20011d12:	4422                	lw	s0,8(sp)
20011d14:	40b2                	lw	ra,12(sp)
20011d16:	8526                	mv	a0,s1
20011d18:	4492                	lw	s1,4(sp)
20011d1a:	0141                	addi	sp,sp,16
20011d1c:	a535                	j	20012348 <__malloc_unlock>
20011d1e:	00f47e63          	bgeu	s0,a5,20011d3a <_free_r+0x5c>
20011d22:	4014                	lw	a3,0(s0)
20011d24:	00d40733          	add	a4,s0,a3
20011d28:	00e79663          	bne	a5,a4,20011d34 <_free_r+0x56>
20011d2c:	4398                	lw	a4,0(a5)
20011d2e:	43dc                	lw	a5,4(a5)
20011d30:	9736                	add	a4,a4,a3
20011d32:	c018                	sw	a4,0(s0)
20011d34:	c05c                	sw	a5,4(s0)
20011d36:	bfd1                	j	20011d0a <_free_r+0x2c>
20011d38:	87ba                	mv	a5,a4
20011d3a:	43d8                	lw	a4,4(a5)
20011d3c:	c319                	beqz	a4,20011d42 <_free_r+0x64>
20011d3e:	fee47de3          	bgeu	s0,a4,20011d38 <_free_r+0x5a>
20011d42:	4394                	lw	a3,0(a5)
20011d44:	00d78633          	add	a2,a5,a3
20011d48:	00861f63          	bne	a2,s0,20011d66 <_free_r+0x88>
20011d4c:	4010                	lw	a2,0(s0)
20011d4e:	96b2                	add	a3,a3,a2
20011d50:	c394                	sw	a3,0(a5)
20011d52:	00d78633          	add	a2,a5,a3
20011d56:	fac71ee3          	bne	a4,a2,20011d12 <_free_r+0x34>
20011d5a:	4310                	lw	a2,0(a4)
20011d5c:	4358                	lw	a4,4(a4)
20011d5e:	96b2                	add	a3,a3,a2
20011d60:	c394                	sw	a3,0(a5)
20011d62:	c3d8                	sw	a4,4(a5)
20011d64:	b77d                	j	20011d12 <_free_r+0x34>
20011d66:	00c47563          	bgeu	s0,a2,20011d70 <_free_r+0x92>
20011d6a:	47b1                	li	a5,12
20011d6c:	c09c                	sw	a5,0(s1)
20011d6e:	b755                	j	20011d12 <_free_r+0x34>
20011d70:	4010                	lw	a2,0(s0)
20011d72:	00c406b3          	add	a3,s0,a2
20011d76:	00d71663          	bne	a4,a3,20011d82 <_free_r+0xa4>
20011d7a:	4314                	lw	a3,0(a4)
20011d7c:	4358                	lw	a4,4(a4)
20011d7e:	96b2                	add	a3,a3,a2
20011d80:	c014                	sw	a3,0(s0)
20011d82:	c058                	sw	a4,4(s0)
20011d84:	c3c0                	sw	s0,4(a5)
20011d86:	b771                	j	20011d12 <_free_r+0x34>
20011d88:	8082                	ret

20011d8a <_malloc_r>:
_malloc_r():
20011d8a:	1101                	addi	sp,sp,-32
20011d8c:	ca26                	sw	s1,20(sp)
20011d8e:	00358493          	addi	s1,a1,3
20011d92:	98f1                	andi	s1,s1,-4
20011d94:	ce06                	sw	ra,28(sp)
20011d96:	cc22                	sw	s0,24(sp)
20011d98:	c84a                	sw	s2,16(sp)
20011d9a:	c64e                	sw	s3,12(sp)
20011d9c:	04a1                	addi	s1,s1,8
20011d9e:	47b1                	li	a5,12
20011da0:	04f4f763          	bgeu	s1,a5,20011dee <_malloc_r+0x64>
20011da4:	44b1                	li	s1,12
20011da6:	04b4e663          	bltu	s1,a1,20011df2 <_malloc_r+0x68>
20011daa:	892a                	mv	s2,a0
20011dac:	2b69                	jal	20012346 <__malloc_lock>
20011dae:	5ffef797          	auipc	a5,0x5ffef
20011db2:	d6278793          	addi	a5,a5,-670 # 80000b10 <__tls_base>
20011db6:	4398                	lw	a4,0(a5)
20011db8:	843a                	mv	s0,a4
20011dba:	e431                	bnez	s0,20011e06 <_malloc_r+0x7c>
20011dbc:	5ffef797          	auipc	a5,0x5ffef
20011dc0:	d5878793          	addi	a5,a5,-680 # 80000b14 <__malloc_sbrk_start>
20011dc4:	439c                	lw	a5,0(a5)
20011dc6:	eb81                	bnez	a5,20011dd6 <_malloc_r+0x4c>
20011dc8:	4581                	li	a1,0
20011dca:	854a                	mv	a0,s2
20011dcc:	2645                	jal	2001216c <_sbrk_r>
20011dce:	5ffef797          	auipc	a5,0x5ffef
20011dd2:	d4a7a323          	sw	a0,-698(a5) # 80000b14 <__malloc_sbrk_start>
20011dd6:	85a6                	mv	a1,s1
20011dd8:	854a                	mv	a0,s2
20011dda:	2e49                	jal	2001216c <_sbrk_r>
20011ddc:	59fd                	li	s3,-1
20011dde:	07351963          	bne	a0,s3,20011e50 <_malloc_r+0xc6>
20011de2:	47b1                	li	a5,12
20011de4:	00f92023          	sw	a5,0(s2)
20011de8:	854a                	mv	a0,s2
20011dea:	2bb9                	jal	20012348 <__malloc_unlock>
20011dec:	a029                	j	20011df6 <_malloc_r+0x6c>
20011dee:	fa04dce3          	bgez	s1,20011da6 <_malloc_r+0x1c>
20011df2:	47b1                	li	a5,12
20011df4:	c11c                	sw	a5,0(a0)
20011df6:	4501                	li	a0,0
20011df8:	40f2                	lw	ra,28(sp)
20011dfa:	4462                	lw	s0,24(sp)
20011dfc:	44d2                	lw	s1,20(sp)
20011dfe:	4942                	lw	s2,16(sp)
20011e00:	49b2                	lw	s3,12(sp)
20011e02:	6105                	addi	sp,sp,32
20011e04:	8082                	ret
20011e06:	401c                	lw	a5,0(s0)
20011e08:	8f85                	sub	a5,a5,s1
20011e0a:	0407c063          	bltz	a5,20011e4a <_malloc_r+0xc0>
20011e0e:	46ad                	li	a3,11
20011e10:	00f6f663          	bgeu	a3,a5,20011e1c <_malloc_r+0x92>
20011e14:	c01c                	sw	a5,0(s0)
20011e16:	943e                	add	s0,s0,a5
20011e18:	c004                	sw	s1,0(s0)
20011e1a:	a801                	j	20011e2a <_malloc_r+0xa0>
20011e1c:	405c                	lw	a5,4(s0)
20011e1e:	02871463          	bne	a4,s0,20011e46 <_malloc_r+0xbc>
20011e22:	5ffef717          	auipc	a4,0x5ffef
20011e26:	cef72723          	sw	a5,-786(a4) # 80000b10 <__tls_base>
20011e2a:	854a                	mv	a0,s2
20011e2c:	2b31                	jal	20012348 <__malloc_unlock>
20011e2e:	00b40513          	addi	a0,s0,11
20011e32:	00440793          	addi	a5,s0,4
20011e36:	9961                	andi	a0,a0,-8
20011e38:	40f50733          	sub	a4,a0,a5
20011e3c:	df55                	beqz	a4,20011df8 <_malloc_r+0x6e>
20011e3e:	943a                	add	s0,s0,a4
20011e40:	8f89                	sub	a5,a5,a0
20011e42:	c01c                	sw	a5,0(s0)
20011e44:	bf55                	j	20011df8 <_malloc_r+0x6e>
20011e46:	c35c                	sw	a5,4(a4)
20011e48:	b7cd                	j	20011e2a <_malloc_r+0xa0>
20011e4a:	8722                	mv	a4,s0
20011e4c:	4040                	lw	s0,4(s0)
20011e4e:	b7b5                	j	20011dba <_malloc_r+0x30>
20011e50:	00350413          	addi	s0,a0,3
20011e54:	9871                	andi	s0,s0,-4
20011e56:	fc8501e3          	beq	a0,s0,20011e18 <_malloc_r+0x8e>
20011e5a:	40a405b3          	sub	a1,s0,a0
20011e5e:	854a                	mv	a0,s2
20011e60:	2631                	jal	2001216c <_sbrk_r>
20011e62:	fb351be3          	bne	a0,s3,20011e18 <_malloc_r+0x8e>
20011e66:	bfb5                	j	20011de2 <_malloc_r+0x58>

20011e68 <__sfputc_r>:
__sfputc_r():
20011e68:	461c                	lw	a5,8(a2)
20011e6a:	17fd                	addi	a5,a5,-1
20011e6c:	c61c                	sw	a5,8(a2)
20011e6e:	0007da63          	bgez	a5,20011e82 <__sfputc_r+0x1a>
20011e72:	4e18                	lw	a4,24(a2)
20011e74:	00e7c563          	blt	a5,a4,20011e7e <__sfputc_r+0x16>
20011e78:	47a9                	li	a5,10
20011e7a:	00f59463          	bne	a1,a5,20011e82 <__sfputc_r+0x1a>
20011e7e:	fbcff06f          	j	2001163a <__swbuf_r>
20011e82:	421c                	lw	a5,0(a2)
20011e84:	852e                	mv	a0,a1
20011e86:	00178713          	addi	a4,a5,1
20011e8a:	c218                	sw	a4,0(a2)
20011e8c:	00b78023          	sb	a1,0(a5)
20011e90:	8082                	ret

20011e92 <__sfputs_r>:
__sfputs_r():
20011e92:	1101                	addi	sp,sp,-32
20011e94:	cc22                	sw	s0,24(sp)
20011e96:	ca26                	sw	s1,20(sp)
20011e98:	c84a                	sw	s2,16(sp)
20011e9a:	c64e                	sw	s3,12(sp)
20011e9c:	c452                	sw	s4,8(sp)
20011e9e:	ce06                	sw	ra,28(sp)
20011ea0:	892a                	mv	s2,a0
20011ea2:	89ae                	mv	s3,a1
20011ea4:	8432                	mv	s0,a2
20011ea6:	00d604b3          	add	s1,a2,a3
20011eaa:	5a7d                	li	s4,-1
20011eac:	00941463          	bne	s0,s1,20011eb4 <__sfputs_r+0x22>
20011eb0:	4501                	li	a0,0
20011eb2:	a809                	j	20011ec4 <__sfputs_r+0x32>
20011eb4:	00044583          	lbu	a1,0(s0)
20011eb8:	864e                	mv	a2,s3
20011eba:	854a                	mv	a0,s2
20011ebc:	3775                	jal	20011e68 <__sfputc_r>
20011ebe:	0405                	addi	s0,s0,1
20011ec0:	ff4516e3          	bne	a0,s4,20011eac <__sfputs_r+0x1a>
20011ec4:	40f2                	lw	ra,28(sp)
20011ec6:	4462                	lw	s0,24(sp)
20011ec8:	44d2                	lw	s1,20(sp)
20011eca:	4942                	lw	s2,16(sp)
20011ecc:	49b2                	lw	s3,12(sp)
20011ece:	4a22                	lw	s4,8(sp)
20011ed0:	6105                	addi	sp,sp,32
20011ed2:	8082                	ret

20011ed4 <_vfiprintf_r>:
_vfiprintf_r():
20011ed4:	7135                	addi	sp,sp,-160
20011ed6:	cd22                	sw	s0,152(sp)
20011ed8:	cb26                	sw	s1,148(sp)
20011eda:	c94a                	sw	s2,144(sp)
20011edc:	c74e                	sw	s3,140(sp)
20011ede:	cf06                	sw	ra,156(sp)
20011ee0:	c552                	sw	s4,136(sp)
20011ee2:	c356                	sw	s5,132(sp)
20011ee4:	c15a                	sw	s6,128(sp)
20011ee6:	dede                	sw	s7,124(sp)
20011ee8:	dce2                	sw	s8,120(sp)
20011eea:	dae6                	sw	s9,116(sp)
20011eec:	89aa                	mv	s3,a0
20011eee:	84ae                	mv	s1,a1
20011ef0:	8932                	mv	s2,a2
20011ef2:	8436                	mv	s0,a3
20011ef4:	c501                	beqz	a0,20011efc <_vfiprintf_r+0x28>
20011ef6:	4d1c                	lw	a5,24(a0)
20011ef8:	e391                	bnez	a5,20011efc <_vfiprintf_r+0x28>
20011efa:	3e95                	jal	20011a6e <__sinit>
20011efc:	ffffe797          	auipc	a5,0xffffe
20011f00:	5b878793          	addi	a5,a5,1464 # 200104b4 <__sf_fake_stdin>
20011f04:	0cf49b63          	bne	s1,a5,20011fda <_vfiprintf_r+0x106>
20011f08:	0049a483          	lw	s1,4(s3)
20011f0c:	00c4d783          	lhu	a5,12(s1)
20011f10:	8ba1                	andi	a5,a5,8
20011f12:	c7f5                	beqz	a5,20011ffe <_vfiprintf_r+0x12a>
20011f14:	489c                	lw	a5,16(s1)
20011f16:	c7e5                	beqz	a5,20011ffe <_vfiprintf_r+0x12a>
20011f18:	02000793          	li	a5,32
20011f1c:	02f104a3          	sb	a5,41(sp)
20011f20:	03000793          	li	a5,48
20011f24:	d202                	sw	zero,36(sp)
20011f26:	02f10523          	sb	a5,42(sp)
20011f2a:	c622                	sw	s0,12(sp)
20011f2c:	02500b93          	li	s7,37
20011f30:	ffffea97          	auipc	s5,0xffffe
20011f34:	5c4a8a93          	addi	s5,s5,1476 # 200104f4 <__sf_fake_stdout+0x20>
20011f38:	4c05                	li	s8,1
20011f3a:	4b29                	li	s6,10
20011f3c:	844a                	mv	s0,s2
20011f3e:	00044783          	lbu	a5,0(s0)
20011f42:	c399                	beqz	a5,20011f48 <_vfiprintf_r+0x74>
20011f44:	0f779063          	bne	a5,s7,20012024 <_vfiprintf_r+0x150>
20011f48:	41240cb3          	sub	s9,s0,s2
20011f4c:	000c8d63          	beqz	s9,20011f66 <_vfiprintf_r+0x92>
20011f50:	86e6                	mv	a3,s9
20011f52:	864a                	mv	a2,s2
20011f54:	85a6                	mv	a1,s1
20011f56:	854e                	mv	a0,s3
20011f58:	3f2d                	jal	20011e92 <__sfputs_r>
20011f5a:	57fd                	li	a5,-1
20011f5c:	1ef50663          	beq	a0,a5,20012148 <_vfiprintf_r+0x274>
20011f60:	5692                	lw	a3,36(sp)
20011f62:	96e6                	add	a3,a3,s9
20011f64:	d236                	sw	a3,36(sp)
20011f66:	00044783          	lbu	a5,0(s0)
20011f6a:	1c078f63          	beqz	a5,20012148 <_vfiprintf_r+0x274>
20011f6e:	57fd                	li	a5,-1
20011f70:	00140913          	addi	s2,s0,1
20011f74:	c802                	sw	zero,16(sp)
20011f76:	ce02                	sw	zero,28(sp)
20011f78:	ca3e                	sw	a5,20(sp)
20011f7a:	cc02                	sw	zero,24(sp)
20011f7c:	040109a3          	sb	zero,83(sp)
20011f80:	d482                	sw	zero,104(sp)
20011f82:	00094583          	lbu	a1,0(s2)
20011f86:	4615                	li	a2,5
20011f88:	8556                	mv	a0,s5
20011f8a:	264d                	jal	2001232c <memchr>
20011f8c:	00190413          	addi	s0,s2,1
20011f90:	47c2                	lw	a5,16(sp)
20011f92:	e959                	bnez	a0,20012028 <_vfiprintf_r+0x154>
20011f94:	0107f713          	andi	a4,a5,16
20011f98:	c709                	beqz	a4,20011fa2 <_vfiprintf_r+0xce>
20011f9a:	02000713          	li	a4,32
20011f9e:	04e109a3          	sb	a4,83(sp)
20011fa2:	0087f713          	andi	a4,a5,8
20011fa6:	c709                	beqz	a4,20011fb0 <_vfiprintf_r+0xdc>
20011fa8:	02b00713          	li	a4,43
20011fac:	04e109a3          	sb	a4,83(sp)
20011fb0:	00094683          	lbu	a3,0(s2)
20011fb4:	02a00713          	li	a4,42
20011fb8:	08e68063          	beq	a3,a4,20012038 <_vfiprintf_r+0x164>
20011fbc:	47f2                	lw	a5,28(sp)
20011fbe:	844a                	mv	s0,s2
20011fc0:	4681                	li	a3,0
20011fc2:	4625                	li	a2,9
20011fc4:	00044703          	lbu	a4,0(s0)
20011fc8:	00140593          	addi	a1,s0,1
20011fcc:	fd070713          	addi	a4,a4,-48
20011fd0:	0ae67963          	bgeu	a2,a4,20012082 <_vfiprintf_r+0x1ae>
20011fd4:	cab5                	beqz	a3,20012048 <_vfiprintf_r+0x174>
20011fd6:	ce3e                	sw	a5,28(sp)
20011fd8:	a885                	j	20012048 <_vfiprintf_r+0x174>
20011fda:	ffffe797          	auipc	a5,0xffffe
20011fde:	4fa78793          	addi	a5,a5,1274 # 200104d4 <__sf_fake_stdout>
20011fe2:	00f49563          	bne	s1,a5,20011fec <_vfiprintf_r+0x118>
20011fe6:	0089a483          	lw	s1,8(s3)
20011fea:	b70d                	j	20011f0c <_vfiprintf_r+0x38>
20011fec:	ffffe797          	auipc	a5,0xffffe
20011ff0:	4a878793          	addi	a5,a5,1192 # 20010494 <__sf_fake_stderr>
20011ff4:	f0f49ce3          	bne	s1,a5,20011f0c <_vfiprintf_r+0x38>
20011ff8:	00c9a483          	lw	s1,12(s3)
20011ffc:	bf01                	j	20011f0c <_vfiprintf_r+0x38>
20011ffe:	85a6                	mv	a1,s1
20012000:	854e                	mv	a0,s3
20012002:	ef8ff0ef          	jal	ra,200116fa <__swsetup_r>
20012006:	d909                	beqz	a0,20011f18 <_vfiprintf_r+0x44>
20012008:	557d                	li	a0,-1
2001200a:	40fa                	lw	ra,156(sp)
2001200c:	446a                	lw	s0,152(sp)
2001200e:	44da                	lw	s1,148(sp)
20012010:	494a                	lw	s2,144(sp)
20012012:	49ba                	lw	s3,140(sp)
20012014:	4a2a                	lw	s4,136(sp)
20012016:	4a9a                	lw	s5,132(sp)
20012018:	4b0a                	lw	s6,128(sp)
2001201a:	5bf6                	lw	s7,124(sp)
2001201c:	5c66                	lw	s8,120(sp)
2001201e:	5cd6                	lw	s9,116(sp)
20012020:	610d                	addi	sp,sp,160
20012022:	8082                	ret
20012024:	0405                	addi	s0,s0,1
20012026:	bf21                	j	20011f3e <_vfiprintf_r+0x6a>
20012028:	41550533          	sub	a0,a0,s5
2001202c:	00ac1533          	sll	a0,s8,a0
20012030:	8fc9                	or	a5,a5,a0
20012032:	c83e                	sw	a5,16(sp)
20012034:	8922                	mv	s2,s0
20012036:	b7b1                	j	20011f82 <_vfiprintf_r+0xae>
20012038:	4732                	lw	a4,12(sp)
2001203a:	00470693          	addi	a3,a4,4
2001203e:	4318                	lw	a4,0(a4)
20012040:	c636                	sw	a3,12(sp)
20012042:	02074963          	bltz	a4,20012074 <_vfiprintf_r+0x1a0>
20012046:	ce3a                	sw	a4,28(sp)
20012048:	00044703          	lbu	a4,0(s0)
2001204c:	02e00793          	li	a5,46
20012050:	04f71f63          	bne	a4,a5,200120ae <_vfiprintf_r+0x1da>
20012054:	00144703          	lbu	a4,1(s0)
20012058:	02a00793          	li	a5,42
2001205c:	02f71b63          	bne	a4,a5,20012092 <_vfiprintf_r+0x1be>
20012060:	47b2                	lw	a5,12(sp)
20012062:	0409                	addi	s0,s0,2
20012064:	00478713          	addi	a4,a5,4
20012068:	439c                	lw	a5,0(a5)
2001206a:	c63a                	sw	a4,12(sp)
2001206c:	0207c163          	bltz	a5,2001208e <_vfiprintf_r+0x1ba>
20012070:	ca3e                	sw	a5,20(sp)
20012072:	a835                	j	200120ae <_vfiprintf_r+0x1da>
20012074:	40e00733          	neg	a4,a4
20012078:	0027e793          	ori	a5,a5,2
2001207c:	ce3a                	sw	a4,28(sp)
2001207e:	c83e                	sw	a5,16(sp)
20012080:	b7e1                	j	20012048 <_vfiprintf_r+0x174>
20012082:	036787b3          	mul	a5,a5,s6
20012086:	4685                	li	a3,1
20012088:	842e                	mv	s0,a1
2001208a:	97ba                	add	a5,a5,a4
2001208c:	bf25                	j	20011fc4 <_vfiprintf_r+0xf0>
2001208e:	57fd                	li	a5,-1
20012090:	b7c5                	j	20012070 <_vfiprintf_r+0x19c>
20012092:	0405                	addi	s0,s0,1
20012094:	ca02                	sw	zero,20(sp)
20012096:	4681                	li	a3,0
20012098:	4781                	li	a5,0
2001209a:	4625                	li	a2,9
2001209c:	00044703          	lbu	a4,0(s0)
200120a0:	00140593          	addi	a1,s0,1
200120a4:	fd070713          	addi	a4,a4,-48
200120a8:	06e67663          	bgeu	a2,a4,20012114 <_vfiprintf_r+0x240>
200120ac:	f2f1                	bnez	a3,20012070 <_vfiprintf_r+0x19c>
200120ae:	00044583          	lbu	a1,0(s0)
200120b2:	460d                	li	a2,3
200120b4:	ffffe517          	auipc	a0,0xffffe
200120b8:	44850513          	addi	a0,a0,1096 # 200104fc <__sf_fake_stdout+0x28>
200120bc:	2c85                	jal	2001232c <memchr>
200120be:	cd11                	beqz	a0,200120da <_vfiprintf_r+0x206>
200120c0:	ffffe797          	auipc	a5,0xffffe
200120c4:	43c78793          	addi	a5,a5,1084 # 200104fc <__sf_fake_stdout+0x28>
200120c8:	8d1d                	sub	a0,a0,a5
200120ca:	04000793          	li	a5,64
200120ce:	00a797b3          	sll	a5,a5,a0
200120d2:	4542                	lw	a0,16(sp)
200120d4:	0405                	addi	s0,s0,1
200120d6:	8d5d                	or	a0,a0,a5
200120d8:	c82a                	sw	a0,16(sp)
200120da:	00044583          	lbu	a1,0(s0)
200120de:	4619                	li	a2,6
200120e0:	ffffe517          	auipc	a0,0xffffe
200120e4:	42050513          	addi	a0,a0,1056 # 20010500 <__sf_fake_stdout+0x2c>
200120e8:	00140913          	addi	s2,s0,1
200120ec:	02b10423          	sb	a1,40(sp)
200120f0:	2c35                	jal	2001232c <memchr>
200120f2:	c13d                	beqz	a0,20012158 <_vfiprintf_r+0x284>
200120f4:	dffee797          	auipc	a5,0xdffee
200120f8:	f0c78793          	addi	a5,a5,-244 # 0 <__metal_boot_hart>
200120fc:	e795                	bnez	a5,20012128 <_vfiprintf_r+0x254>
200120fe:	4742                	lw	a4,16(sp)
20012100:	47b2                	lw	a5,12(sp)
20012102:	10077713          	andi	a4,a4,256
20012106:	cf09                	beqz	a4,20012120 <_vfiprintf_r+0x24c>
20012108:	0791                	addi	a5,a5,4
2001210a:	c63e                	sw	a5,12(sp)
2001210c:	5792                	lw	a5,36(sp)
2001210e:	97d2                	add	a5,a5,s4
20012110:	d23e                	sw	a5,36(sp)
20012112:	b52d                	j	20011f3c <_vfiprintf_r+0x68>
20012114:	036787b3          	mul	a5,a5,s6
20012118:	4685                	li	a3,1
2001211a:	842e                	mv	s0,a1
2001211c:	97ba                	add	a5,a5,a4
2001211e:	bfbd                	j	2001209c <_vfiprintf_r+0x1c8>
20012120:	079d                	addi	a5,a5,7
20012122:	9be1                	andi	a5,a5,-8
20012124:	07a1                	addi	a5,a5,8
20012126:	b7d5                	j	2001210a <_vfiprintf_r+0x236>
20012128:	0078                	addi	a4,sp,12
2001212a:	00000697          	auipc	a3,0x0
2001212e:	d6868693          	addi	a3,a3,-664 # 20011e92 <__sfputs_r>
20012132:	8626                	mv	a2,s1
20012134:	080c                	addi	a1,sp,16
20012136:	854e                	mv	a0,s3
20012138:	00000097          	auipc	ra,0x0
2001213c:	000000e7          	jalr	zero # 0 <__metal_boot_hart>
20012140:	57fd                	li	a5,-1
20012142:	8a2a                	mv	s4,a0
20012144:	fcf514e3          	bne	a0,a5,2001210c <_vfiprintf_r+0x238>
20012148:	00c4d783          	lhu	a5,12(s1)
2001214c:	0407f793          	andi	a5,a5,64
20012150:	ea079ce3          	bnez	a5,20012008 <_vfiprintf_r+0x134>
20012154:	5512                	lw	a0,36(sp)
20012156:	bd55                	j	2001200a <_vfiprintf_r+0x136>
20012158:	0078                	addi	a4,sp,12
2001215a:	00000697          	auipc	a3,0x0
2001215e:	d3868693          	addi	a3,a3,-712 # 20011e92 <__sfputs_r>
20012162:	8626                	mv	a2,s1
20012164:	080c                	addi	a1,sp,16
20012166:	854e                	mv	a0,s3
20012168:	24fd                	jal	20012456 <_printf_i>
2001216a:	bfd9                	j	20012140 <_vfiprintf_r+0x26c>

2001216c <_sbrk_r>:
_sbrk_r():
2001216c:	1141                	addi	sp,sp,-16
2001216e:	c422                	sw	s0,8(sp)
20012170:	842a                	mv	s0,a0
20012172:	852e                	mv	a0,a1
20012174:	8e01a823          	sw	zero,-1808(gp) # 80000bb0 <errno>
20012178:	c606                	sw	ra,12(sp)
2001217a:	38b050ef          	jal	ra,20017d04 <_sbrk>
2001217e:	57fd                	li	a5,-1
20012180:	00f51763          	bne	a0,a5,2001218e <_sbrk_r+0x22>
20012184:	8f018793          	addi	a5,gp,-1808 # 80000bb0 <errno>
20012188:	439c                	lw	a5,0(a5)
2001218a:	c391                	beqz	a5,2001218e <_sbrk_r+0x22>
2001218c:	c01c                	sw	a5,0(s0)
2001218e:	40b2                	lw	ra,12(sp)
20012190:	4422                	lw	s0,8(sp)
20012192:	0141                	addi	sp,sp,16
20012194:	8082                	ret

20012196 <__sread>:
__sread():
20012196:	1141                	addi	sp,sp,-16
20012198:	c422                	sw	s0,8(sp)
2001219a:	842e                	mv	s0,a1
2001219c:	00e59583          	lh	a1,14(a1)
200121a0:	c606                	sw	ra,12(sp)
200121a2:	2b99                	jal	200126f8 <_read_r>
200121a4:	00054963          	bltz	a0,200121b6 <__sread+0x20>
200121a8:	487c                	lw	a5,84(s0)
200121aa:	97aa                	add	a5,a5,a0
200121ac:	c87c                	sw	a5,84(s0)
200121ae:	40b2                	lw	ra,12(sp)
200121b0:	4422                	lw	s0,8(sp)
200121b2:	0141                	addi	sp,sp,16
200121b4:	8082                	ret
200121b6:	00c45783          	lhu	a5,12(s0)
200121ba:	777d                	lui	a4,0xfffff
200121bc:	177d                	addi	a4,a4,-1
200121be:	8ff9                	and	a5,a5,a4
200121c0:	00f41623          	sh	a5,12(s0)
200121c4:	b7ed                	j	200121ae <__sread+0x18>

200121c6 <__swrite>:
__swrite():
200121c6:	00c5d783          	lhu	a5,12(a1)
200121ca:	1101                	addi	sp,sp,-32
200121cc:	cc22                	sw	s0,24(sp)
200121ce:	ca26                	sw	s1,20(sp)
200121d0:	c84a                	sw	s2,16(sp)
200121d2:	c64e                	sw	s3,12(sp)
200121d4:	ce06                	sw	ra,28(sp)
200121d6:	1007f793          	andi	a5,a5,256
200121da:	84aa                	mv	s1,a0
200121dc:	842e                	mv	s0,a1
200121de:	8932                	mv	s2,a2
200121e0:	89b6                	mv	s3,a3
200121e2:	c791                	beqz	a5,200121ee <__swrite+0x28>
200121e4:	00e59583          	lh	a1,14(a1)
200121e8:	4689                	li	a3,2
200121ea:	4601                	li	a2,0
200121ec:	2a09                	jal	200122fe <_lseek_r>
200121ee:	00c45783          	lhu	a5,12(s0)
200121f2:	777d                	lui	a4,0xfffff
200121f4:	177d                	addi	a4,a4,-1
200121f6:	8ff9                	and	a5,a5,a4
200121f8:	00f41623          	sh	a5,12(s0)
200121fc:	00e41583          	lh	a1,14(s0)
20012200:	4462                	lw	s0,24(sp)
20012202:	40f2                	lw	ra,28(sp)
20012204:	86ce                	mv	a3,s3
20012206:	864a                	mv	a2,s2
20012208:	49b2                	lw	s3,12(sp)
2001220a:	4942                	lw	s2,16(sp)
2001220c:	8526                	mv	a0,s1
2001220e:	44d2                	lw	s1,20(sp)
20012210:	6105                	addi	sp,sp,32
20012212:	a83d                	j	20012250 <_write_r>

20012214 <__sseek>:
__sseek():
20012214:	1141                	addi	sp,sp,-16
20012216:	c422                	sw	s0,8(sp)
20012218:	842e                	mv	s0,a1
2001221a:	00e59583          	lh	a1,14(a1)
2001221e:	c606                	sw	ra,12(sp)
20012220:	28f9                	jal	200122fe <_lseek_r>
20012222:	57fd                	li	a5,-1
20012224:	00c45703          	lhu	a4,12(s0)
20012228:	00f51b63          	bne	a0,a5,2001223e <__sseek+0x2a>
2001222c:	77fd                	lui	a5,0xfffff
2001222e:	17fd                	addi	a5,a5,-1
20012230:	8ff9                	and	a5,a5,a4
20012232:	00f41623          	sh	a5,12(s0)
20012236:	40b2                	lw	ra,12(sp)
20012238:	4422                	lw	s0,8(sp)
2001223a:	0141                	addi	sp,sp,16
2001223c:	8082                	ret
2001223e:	6785                	lui	a5,0x1
20012240:	8fd9                	or	a5,a5,a4
20012242:	00f41623          	sh	a5,12(s0)
20012246:	c868                	sw	a0,84(s0)
20012248:	b7fd                	j	20012236 <__sseek+0x22>

2001224a <__sclose>:
__sclose():
2001224a:	00e59583          	lh	a1,14(a1)
2001224e:	a805                	j	2001227e <_close_r>

20012250 <_write_r>:
_write_r():
20012250:	1141                	addi	sp,sp,-16
20012252:	c422                	sw	s0,8(sp)
20012254:	842a                	mv	s0,a0
20012256:	852e                	mv	a0,a1
20012258:	85b2                	mv	a1,a2
2001225a:	8636                	mv	a2,a3
2001225c:	8e01a823          	sw	zero,-1808(gp) # 80000bb0 <errno>
20012260:	c606                	sw	ra,12(sp)
20012262:	30d050ef          	jal	ra,20017d6e <_write>
20012266:	57fd                	li	a5,-1
20012268:	00f51763          	bne	a0,a5,20012276 <_write_r+0x26>
2001226c:	8f018793          	addi	a5,gp,-1808 # 80000bb0 <errno>
20012270:	439c                	lw	a5,0(a5)
20012272:	c391                	beqz	a5,20012276 <_write_r+0x26>
20012274:	c01c                	sw	a5,0(s0)
20012276:	40b2                	lw	ra,12(sp)
20012278:	4422                	lw	s0,8(sp)
2001227a:	0141                	addi	sp,sp,16
2001227c:	8082                	ret

2001227e <_close_r>:
_close_r():
2001227e:	1141                	addi	sp,sp,-16
20012280:	c422                	sw	s0,8(sp)
20012282:	842a                	mv	s0,a0
20012284:	852e                	mv	a0,a1
20012286:	8e01a823          	sw	zero,-1808(gp) # 80000bb0 <errno>
2001228a:	c606                	sw	ra,12(sp)
2001228c:	1bd050ef          	jal	ra,20017c48 <_close>
20012290:	57fd                	li	a5,-1
20012292:	00f51763          	bne	a0,a5,200122a0 <_close_r+0x22>
20012296:	8f018793          	addi	a5,gp,-1808 # 80000bb0 <errno>
2001229a:	439c                	lw	a5,0(a5)
2001229c:	c391                	beqz	a5,200122a0 <_close_r+0x22>
2001229e:	c01c                	sw	a5,0(s0)
200122a0:	40b2                	lw	ra,12(sp)
200122a2:	4422                	lw	s0,8(sp)
200122a4:	0141                	addi	sp,sp,16
200122a6:	8082                	ret

200122a8 <_fstat_r>:
_fstat_r():
200122a8:	1141                	addi	sp,sp,-16
200122aa:	c422                	sw	s0,8(sp)
200122ac:	842a                	mv	s0,a0
200122ae:	852e                	mv	a0,a1
200122b0:	85b2                	mv	a1,a2
200122b2:	8e01a823          	sw	zero,-1808(gp) # 80000bb0 <errno>
200122b6:	c606                	sw	ra,12(sp)
200122b8:	1b3050ef          	jal	ra,20017c6a <_fstat>
200122bc:	57fd                	li	a5,-1
200122be:	00f51763          	bne	a0,a5,200122cc <_fstat_r+0x24>
200122c2:	8f018793          	addi	a5,gp,-1808 # 80000bb0 <errno>
200122c6:	439c                	lw	a5,0(a5)
200122c8:	c391                	beqz	a5,200122cc <_fstat_r+0x24>
200122ca:	c01c                	sw	a5,0(s0)
200122cc:	40b2                	lw	ra,12(sp)
200122ce:	4422                	lw	s0,8(sp)
200122d0:	0141                	addi	sp,sp,16
200122d2:	8082                	ret

200122d4 <_isatty_r>:
_isatty_r():
200122d4:	1141                	addi	sp,sp,-16
200122d6:	c422                	sw	s0,8(sp)
200122d8:	842a                	mv	s0,a0
200122da:	852e                	mv	a0,a1
200122dc:	8e01a823          	sw	zero,-1808(gp) # 80000bb0 <errno>
200122e0:	c606                	sw	ra,12(sp)
200122e2:	1af050ef          	jal	ra,20017c90 <_isatty>
200122e6:	57fd                	li	a5,-1
200122e8:	00f51763          	bne	a0,a5,200122f6 <_isatty_r+0x22>
200122ec:	8f018793          	addi	a5,gp,-1808 # 80000bb0 <errno>
200122f0:	439c                	lw	a5,0(a5)
200122f2:	c391                	beqz	a5,200122f6 <_isatty_r+0x22>
200122f4:	c01c                	sw	a5,0(s0)
200122f6:	40b2                	lw	ra,12(sp)
200122f8:	4422                	lw	s0,8(sp)
200122fa:	0141                	addi	sp,sp,16
200122fc:	8082                	ret

200122fe <_lseek_r>:
_lseek_r():
200122fe:	1141                	addi	sp,sp,-16
20012300:	c422                	sw	s0,8(sp)
20012302:	842a                	mv	s0,a0
20012304:	852e                	mv	a0,a1
20012306:	85b2                	mv	a1,a2
20012308:	8636                	mv	a2,a3
2001230a:	8e01a823          	sw	zero,-1808(gp) # 80000bb0 <errno>
2001230e:	c606                	sw	ra,12(sp)
20012310:	1a1050ef          	jal	ra,20017cb0 <_lseek>
20012314:	57fd                	li	a5,-1
20012316:	00f51763          	bne	a0,a5,20012324 <_lseek_r+0x26>
2001231a:	8f018793          	addi	a5,gp,-1808 # 80000bb0 <errno>
2001231e:	439c                	lw	a5,0(a5)
20012320:	c391                	beqz	a5,20012324 <_lseek_r+0x26>
20012322:	c01c                	sw	a5,0(s0)
20012324:	40b2                	lw	ra,12(sp)
20012326:	4422                	lw	s0,8(sp)
20012328:	0141                	addi	sp,sp,16
2001232a:	8082                	ret

2001232c <memchr>:
memchr():
2001232c:	0ff5f593          	andi	a1,a1,255
20012330:	962a                	add	a2,a2,a0
20012332:	00c51463          	bne	a0,a2,2001233a <memchr+0xe>
20012336:	4501                	li	a0,0
20012338:	8082                	ret
2001233a:	00054783          	lbu	a5,0(a0)
2001233e:	feb78de3          	beq	a5,a1,20012338 <memchr+0xc>
20012342:	0505                	addi	a0,a0,1
20012344:	b7fd                	j	20012332 <memchr+0x6>

20012346 <__malloc_lock>:
__malloc_lock():
20012346:	8082                	ret

20012348 <__malloc_unlock>:
__malloc_unlock():
20012348:	8082                	ret

2001234a <_printf_common>:
_printf_common():
2001234a:	7179                	addi	sp,sp,-48
2001234c:	ca56                	sw	s5,20(sp)
2001234e:	499c                	lw	a5,16(a1)
20012350:	8aba                	mv	s5,a4
20012352:	4598                	lw	a4,8(a1)
20012354:	d422                	sw	s0,40(sp)
20012356:	d226                	sw	s1,36(sp)
20012358:	ce4e                	sw	s3,28(sp)
2001235a:	cc52                	sw	s4,24(sp)
2001235c:	d606                	sw	ra,44(sp)
2001235e:	d04a                	sw	s2,32(sp)
20012360:	c85a                	sw	s6,16(sp)
20012362:	c65e                	sw	s7,12(sp)
20012364:	89aa                	mv	s3,a0
20012366:	842e                	mv	s0,a1
20012368:	84b2                	mv	s1,a2
2001236a:	8a36                	mv	s4,a3
2001236c:	00e7d363          	bge	a5,a4,20012372 <_printf_common+0x28>
20012370:	87ba                	mv	a5,a4
20012372:	c09c                	sw	a5,0(s1)
20012374:	04344703          	lbu	a4,67(s0)
20012378:	c319                	beqz	a4,2001237e <_printf_common+0x34>
2001237a:	0785                	addi	a5,a5,1
2001237c:	c09c                	sw	a5,0(s1)
2001237e:	401c                	lw	a5,0(s0)
20012380:	0207f793          	andi	a5,a5,32
20012384:	c781                	beqz	a5,2001238c <_printf_common+0x42>
20012386:	409c                	lw	a5,0(s1)
20012388:	0789                	addi	a5,a5,2
2001238a:	c09c                	sw	a5,0(s1)
2001238c:	00042903          	lw	s2,0(s0)
20012390:	00697913          	andi	s2,s2,6
20012394:	00091a63          	bnez	s2,200123a8 <_printf_common+0x5e>
20012398:	01940b13          	addi	s6,s0,25
2001239c:	5bfd                	li	s7,-1
2001239e:	445c                	lw	a5,12(s0)
200123a0:	4098                	lw	a4,0(s1)
200123a2:	8f99                	sub	a5,a5,a4
200123a4:	04f94c63          	blt	s2,a5,200123fc <_printf_common+0xb2>
200123a8:	401c                	lw	a5,0(s0)
200123aa:	04344683          	lbu	a3,67(s0)
200123ae:	0207f793          	andi	a5,a5,32
200123b2:	00d036b3          	snez	a3,a3
200123b6:	eba5                	bnez	a5,20012426 <_printf_common+0xdc>
200123b8:	04340613          	addi	a2,s0,67
200123bc:	85d2                	mv	a1,s4
200123be:	854e                	mv	a0,s3
200123c0:	9a82                	jalr	s5
200123c2:	57fd                	li	a5,-1
200123c4:	04f50363          	beq	a0,a5,2001240a <_printf_common+0xc0>
200123c8:	401c                	lw	a5,0(s0)
200123ca:	4611                	li	a2,4
200123cc:	4098                	lw	a4,0(s1)
200123ce:	8b99                	andi	a5,a5,6
200123d0:	4454                	lw	a3,12(s0)
200123d2:	4481                	li	s1,0
200123d4:	00c79763          	bne	a5,a2,200123e2 <_printf_common+0x98>
200123d8:	40e684b3          	sub	s1,a3,a4
200123dc:	0004d363          	bgez	s1,200123e2 <_printf_common+0x98>
200123e0:	4481                	li	s1,0
200123e2:	441c                	lw	a5,8(s0)
200123e4:	4818                	lw	a4,16(s0)
200123e6:	00f75463          	bge	a4,a5,200123ee <_printf_common+0xa4>
200123ea:	8f99                	sub	a5,a5,a4
200123ec:	94be                	add	s1,s1,a5
200123ee:	4901                	li	s2,0
200123f0:	0469                	addi	s0,s0,26
200123f2:	5b7d                	li	s6,-1
200123f4:	05249863          	bne	s1,s2,20012444 <_printf_common+0xfa>
200123f8:	4501                	li	a0,0
200123fa:	a809                	j	2001240c <_printf_common+0xc2>
200123fc:	4685                	li	a3,1
200123fe:	865a                	mv	a2,s6
20012400:	85d2                	mv	a1,s4
20012402:	854e                	mv	a0,s3
20012404:	9a82                	jalr	s5
20012406:	01751e63          	bne	a0,s7,20012422 <_printf_common+0xd8>
2001240a:	557d                	li	a0,-1
2001240c:	50b2                	lw	ra,44(sp)
2001240e:	5422                	lw	s0,40(sp)
20012410:	5492                	lw	s1,36(sp)
20012412:	5902                	lw	s2,32(sp)
20012414:	49f2                	lw	s3,28(sp)
20012416:	4a62                	lw	s4,24(sp)
20012418:	4ad2                	lw	s5,20(sp)
2001241a:	4b42                	lw	s6,16(sp)
2001241c:	4bb2                	lw	s7,12(sp)
2001241e:	6145                	addi	sp,sp,48
20012420:	8082                	ret
20012422:	0905                	addi	s2,s2,1
20012424:	bfad                	j	2001239e <_printf_common+0x54>
20012426:	00d40733          	add	a4,s0,a3
2001242a:	03000613          	li	a2,48
2001242e:	04c701a3          	sb	a2,67(a4) # fffff043 <metal_segment_heap_target_end+0x7fffd883>
20012432:	04544703          	lbu	a4,69(s0)
20012436:	00168793          	addi	a5,a3,1
2001243a:	97a2                	add	a5,a5,s0
2001243c:	0689                	addi	a3,a3,2
2001243e:	04e781a3          	sb	a4,67(a5) # 1043 <__heap_size+0x843>
20012442:	bf9d                	j	200123b8 <_printf_common+0x6e>
20012444:	4685                	li	a3,1
20012446:	8622                	mv	a2,s0
20012448:	85d2                	mv	a1,s4
2001244a:	854e                	mv	a0,s3
2001244c:	9a82                	jalr	s5
2001244e:	fb650ee3          	beq	a0,s6,2001240a <_printf_common+0xc0>
20012452:	0905                	addi	s2,s2,1
20012454:	b745                	j	200123f4 <_printf_common+0xaa>

20012456 <_printf_i>:
_printf_i():
20012456:	7179                	addi	sp,sp,-48
20012458:	d422                	sw	s0,40(sp)
2001245a:	d226                	sw	s1,36(sp)
2001245c:	d04a                	sw	s2,32(sp)
2001245e:	ce4e                	sw	s3,28(sp)
20012460:	d606                	sw	ra,44(sp)
20012462:	cc52                	sw	s4,24(sp)
20012464:	ca56                	sw	s5,20(sp)
20012466:	c85a                	sw	s6,16(sp)
20012468:	89b6                	mv	s3,a3
2001246a:	0185c683          	lbu	a3,24(a1)
2001246e:	06e00793          	li	a5,110
20012472:	8932                	mv	s2,a2
20012474:	84aa                	mv	s1,a0
20012476:	842e                	mv	s0,a1
20012478:	04358613          	addi	a2,a1,67
2001247c:	1ef68063          	beq	a3,a5,2001265c <_printf_i+0x206>
20012480:	06d7e263          	bltu	a5,a3,200124e4 <_printf_i+0x8e>
20012484:	06300793          	li	a5,99
20012488:	0af68263          	beq	a3,a5,2001252c <_printf_i+0xd6>
2001248c:	00d7ed63          	bltu	a5,a3,200124a6 <_printf_i+0x50>
20012490:	1e068a63          	beqz	a3,20012684 <_printf_i+0x22e>
20012494:	05800793          	li	a5,88
20012498:	16f68663          	beq	a3,a5,20012604 <_printf_i+0x1ae>
2001249c:	04240a93          	addi	s5,s0,66
200124a0:	04d40123          	sb	a3,66(s0)
200124a4:	a869                	j	2001253e <_printf_i+0xe8>
200124a6:	06400793          	li	a5,100
200124aa:	00f68663          	beq	a3,a5,200124b6 <_printf_i+0x60>
200124ae:	06900793          	li	a5,105
200124b2:	fef695e3          	bne	a3,a5,2001249c <_printf_i+0x46>
200124b6:	401c                	lw	a5,0(s0)
200124b8:	4308                	lw	a0,0(a4)
200124ba:	0807f693          	andi	a3,a5,128
200124be:	00450593          	addi	a1,a0,4
200124c2:	c2c1                	beqz	a3,20012542 <_printf_i+0xec>
200124c4:	411c                	lw	a5,0(a0)
200124c6:	c30c                	sw	a1,0(a4)
200124c8:	0007d863          	bgez	a5,200124d8 <_printf_i+0x82>
200124cc:	02d00713          	li	a4,45
200124d0:	40f007b3          	neg	a5,a5
200124d4:	04e401a3          	sb	a4,67(s0)
200124d8:	ffffe697          	auipc	a3,0xffffe
200124dc:	03068693          	addi	a3,a3,48 # 20010508 <__sf_fake_stdout+0x34>
200124e0:	4729                	li	a4,10
200124e2:	a065                	j	2001258a <_printf_i+0x134>
200124e4:	07300793          	li	a5,115
200124e8:	1af68263          	beq	a3,a5,2001268c <_printf_i+0x236>
200124ec:	00d7ef63          	bltu	a5,a3,2001250a <_printf_i+0xb4>
200124f0:	06f00793          	li	a5,111
200124f4:	04f68f63          	beq	a3,a5,20012552 <_printf_i+0xfc>
200124f8:	07000793          	li	a5,112
200124fc:	faf690e3          	bne	a3,a5,2001249c <_printf_i+0x46>
20012500:	419c                	lw	a5,0(a1)
20012502:	0207e793          	ori	a5,a5,32
20012506:	c19c                	sw	a5,0(a1)
20012508:	a809                	j	2001251a <_printf_i+0xc4>
2001250a:	07500793          	li	a5,117
2001250e:	04f68263          	beq	a3,a5,20012552 <_printf_i+0xfc>
20012512:	07800793          	li	a5,120
20012516:	f8f693e3          	bne	a3,a5,2001249c <_printf_i+0x46>
2001251a:	07800793          	li	a5,120
2001251e:	04f402a3          	sb	a5,69(s0)
20012522:	ffffe697          	auipc	a3,0xffffe
20012526:	ffa68693          	addi	a3,a3,-6 # 2001051c <__sf_fake_stdout+0x48>
2001252a:	a0dd                	j	20012610 <_printf_i+0x1ba>
2001252c:	431c                	lw	a5,0(a4)
2001252e:	04258a93          	addi	s5,a1,66
20012532:	00478693          	addi	a3,a5,4
20012536:	439c                	lw	a5,0(a5)
20012538:	c314                	sw	a3,0(a4)
2001253a:	04f58123          	sb	a5,66(a1)
2001253e:	4785                	li	a5,1
20012540:	a2ad                	j	200126aa <_printf_i+0x254>
20012542:	0407f693          	andi	a3,a5,64
20012546:	411c                	lw	a5,0(a0)
20012548:	c30c                	sw	a1,0(a4)
2001254a:	debd                	beqz	a3,200124c8 <_printf_i+0x72>
2001254c:	07c2                	slli	a5,a5,0x10
2001254e:	87c1                	srai	a5,a5,0x10
20012550:	bfa5                	j	200124c8 <_printf_i+0x72>
20012552:	400c                	lw	a1,0(s0)
20012554:	431c                	lw	a5,0(a4)
20012556:	0805f813          	andi	a6,a1,128
2001255a:	00478513          	addi	a0,a5,4
2001255e:	00080563          	beqz	a6,20012568 <_printf_i+0x112>
20012562:	c308                	sw	a0,0(a4)
20012564:	439c                	lw	a5,0(a5)
20012566:	a039                	j	20012574 <_printf_i+0x11e>
20012568:	0405f593          	andi	a1,a1,64
2001256c:	c308                	sw	a0,0(a4)
2001256e:	d9fd                	beqz	a1,20012564 <_printf_i+0x10e>
20012570:	0007d783          	lhu	a5,0(a5)
20012574:	06f00713          	li	a4,111
20012578:	0ce68a63          	beq	a3,a4,2001264c <_printf_i+0x1f6>
2001257c:	ffffe697          	auipc	a3,0xffffe
20012580:	f8c68693          	addi	a3,a3,-116 # 20010508 <__sf_fake_stdout+0x34>
20012584:	4729                	li	a4,10
20012586:	040401a3          	sb	zero,67(s0)
2001258a:	404c                	lw	a1,4(s0)
2001258c:	c40c                	sw	a1,8(s0)
2001258e:	0005c563          	bltz	a1,20012598 <_printf_i+0x142>
20012592:	4008                	lw	a0,0(s0)
20012594:	996d                	andi	a0,a0,-5
20012596:	c008                	sw	a0,0(s0)
20012598:	e399                	bnez	a5,2001259e <_printf_i+0x148>
2001259a:	8ab2                	mv	s5,a2
2001259c:	cd91                	beqz	a1,200125b8 <_printf_i+0x162>
2001259e:	8ab2                	mv	s5,a2
200125a0:	02e7f5b3          	remu	a1,a5,a4
200125a4:	1afd                	addi	s5,s5,-1
200125a6:	95b6                	add	a1,a1,a3
200125a8:	0005c583          	lbu	a1,0(a1)
200125ac:	00ba8023          	sb	a1,0(s5)
200125b0:	02e7d5b3          	divu	a1,a5,a4
200125b4:	0ae7f263          	bgeu	a5,a4,20012658 <_printf_i+0x202>
200125b8:	47a1                	li	a5,8
200125ba:	00f71e63          	bne	a4,a5,200125d6 <_printf_i+0x180>
200125be:	401c                	lw	a5,0(s0)
200125c0:	8b85                	andi	a5,a5,1
200125c2:	cb91                	beqz	a5,200125d6 <_printf_i+0x180>
200125c4:	4058                	lw	a4,4(s0)
200125c6:	481c                	lw	a5,16(s0)
200125c8:	00e7c763          	blt	a5,a4,200125d6 <_printf_i+0x180>
200125cc:	03000793          	li	a5,48
200125d0:	fefa8fa3          	sb	a5,-1(s5)
200125d4:	1afd                	addi	s5,s5,-1
200125d6:	41560633          	sub	a2,a2,s5
200125da:	c810                	sw	a2,16(s0)
200125dc:	874e                	mv	a4,s3
200125de:	86ca                	mv	a3,s2
200125e0:	0070                	addi	a2,sp,12
200125e2:	85a2                	mv	a1,s0
200125e4:	8526                	mv	a0,s1
200125e6:	3395                	jal	2001234a <_printf_common>
200125e8:	5a7d                	li	s4,-1
200125ea:	0d451463          	bne	a0,s4,200126b2 <_printf_i+0x25c>
200125ee:	557d                	li	a0,-1
200125f0:	50b2                	lw	ra,44(sp)
200125f2:	5422                	lw	s0,40(sp)
200125f4:	5492                	lw	s1,36(sp)
200125f6:	5902                	lw	s2,32(sp)
200125f8:	49f2                	lw	s3,28(sp)
200125fa:	4a62                	lw	s4,24(sp)
200125fc:	4ad2                	lw	s5,20(sp)
200125fe:	4b42                	lw	s6,16(sp)
20012600:	6145                	addi	sp,sp,48
20012602:	8082                	ret
20012604:	04d582a3          	sb	a3,69(a1)
20012608:	ffffe697          	auipc	a3,0xffffe
2001260c:	f0068693          	addi	a3,a3,-256 # 20010508 <__sf_fake_stdout+0x34>
20012610:	400c                	lw	a1,0(s0)
20012612:	4308                	lw	a0,0(a4)
20012614:	0805f813          	andi	a6,a1,128
20012618:	411c                	lw	a5,0(a0)
2001261a:	0511                	addi	a0,a0,4
2001261c:	02080063          	beqz	a6,2001263c <_printf_i+0x1e6>
20012620:	c308                	sw	a0,0(a4)
20012622:	0015f713          	andi	a4,a1,1
20012626:	c701                	beqz	a4,2001262e <_printf_i+0x1d8>
20012628:	0205e593          	ori	a1,a1,32
2001262c:	c00c                	sw	a1,0(s0)
2001262e:	4741                	li	a4,16
20012630:	fbb9                	bnez	a5,20012586 <_printf_i+0x130>
20012632:	400c                	lw	a1,0(s0)
20012634:	fdf5f593          	andi	a1,a1,-33
20012638:	c00c                	sw	a1,0(s0)
2001263a:	b7b1                	j	20012586 <_printf_i+0x130>
2001263c:	0405f813          	andi	a6,a1,64
20012640:	c308                	sw	a0,0(a4)
20012642:	fe0800e3          	beqz	a6,20012622 <_printf_i+0x1cc>
20012646:	07c2                	slli	a5,a5,0x10
20012648:	83c1                	srli	a5,a5,0x10
2001264a:	bfe1                	j	20012622 <_printf_i+0x1cc>
2001264c:	ffffe697          	auipc	a3,0xffffe
20012650:	ebc68693          	addi	a3,a3,-324 # 20010508 <__sf_fake_stdout+0x34>
20012654:	4721                	li	a4,8
20012656:	bf05                	j	20012586 <_printf_i+0x130>
20012658:	87ae                	mv	a5,a1
2001265a:	b799                	j	200125a0 <_printf_i+0x14a>
2001265c:	4194                	lw	a3,0(a1)
2001265e:	431c                	lw	a5,0(a4)
20012660:	49cc                	lw	a1,20(a1)
20012662:	0806f813          	andi	a6,a3,128
20012666:	00478513          	addi	a0,a5,4
2001266a:	00080663          	beqz	a6,20012676 <_printf_i+0x220>
2001266e:	c308                	sw	a0,0(a4)
20012670:	439c                	lw	a5,0(a5)
20012672:	c38c                	sw	a1,0(a5)
20012674:	a801                	j	20012684 <_printf_i+0x22e>
20012676:	c308                	sw	a0,0(a4)
20012678:	0406f693          	andi	a3,a3,64
2001267c:	439c                	lw	a5,0(a5)
2001267e:	daf5                	beqz	a3,20012672 <_printf_i+0x21c>
20012680:	00b79023          	sh	a1,0(a5)
20012684:	00042823          	sw	zero,16(s0)
20012688:	8ab2                	mv	s5,a2
2001268a:	bf89                	j	200125dc <_printf_i+0x186>
2001268c:	431c                	lw	a5,0(a4)
2001268e:	41d0                	lw	a2,4(a1)
20012690:	4581                	li	a1,0
20012692:	00478693          	addi	a3,a5,4
20012696:	c314                	sw	a3,0(a4)
20012698:	0007aa83          	lw	s5,0(a5)
2001269c:	8556                	mv	a0,s5
2001269e:	3179                	jal	2001232c <memchr>
200126a0:	c501                	beqz	a0,200126a8 <_printf_i+0x252>
200126a2:	41550533          	sub	a0,a0,s5
200126a6:	c048                	sw	a0,4(s0)
200126a8:	405c                	lw	a5,4(s0)
200126aa:	c81c                	sw	a5,16(s0)
200126ac:	040401a3          	sb	zero,67(s0)
200126b0:	b735                	j	200125dc <_printf_i+0x186>
200126b2:	4814                	lw	a3,16(s0)
200126b4:	8656                	mv	a2,s5
200126b6:	85ca                	mv	a1,s2
200126b8:	8526                	mv	a0,s1
200126ba:	9982                	jalr	s3
200126bc:	f34509e3          	beq	a0,s4,200125ee <_printf_i+0x198>
200126c0:	401c                	lw	a5,0(s0)
200126c2:	8b89                	andi	a5,a5,2
200126c4:	e78d                	bnez	a5,200126ee <_printf_i+0x298>
200126c6:	47b2                	lw	a5,12(sp)
200126c8:	4448                	lw	a0,12(s0)
200126ca:	f2f553e3          	bge	a0,a5,200125f0 <_printf_i+0x19a>
200126ce:	853e                	mv	a0,a5
200126d0:	b705                	j	200125f0 <_printf_i+0x19a>
200126d2:	4685                	li	a3,1
200126d4:	8656                	mv	a2,s5
200126d6:	85ca                	mv	a1,s2
200126d8:	8526                	mv	a0,s1
200126da:	9982                	jalr	s3
200126dc:	f16509e3          	beq	a0,s6,200125ee <_printf_i+0x198>
200126e0:	0a05                	addi	s4,s4,1
200126e2:	445c                	lw	a5,12(s0)
200126e4:	4732                	lw	a4,12(sp)
200126e6:	8f99                	sub	a5,a5,a4
200126e8:	fefa45e3          	blt	s4,a5,200126d2 <_printf_i+0x27c>
200126ec:	bfe9                	j	200126c6 <_printf_i+0x270>
200126ee:	4a01                	li	s4,0
200126f0:	01940a93          	addi	s5,s0,25
200126f4:	5b7d                	li	s6,-1
200126f6:	b7f5                	j	200126e2 <_printf_i+0x28c>

200126f8 <_read_r>:
_read_r():
200126f8:	1141                	addi	sp,sp,-16
200126fa:	c422                	sw	s0,8(sp)
200126fc:	842a                	mv	s0,a0
200126fe:	852e                	mv	a0,a1
20012700:	85b2                	mv	a1,a2
20012702:	8636                	mv	a2,a3
20012704:	8e01a823          	sw	zero,-1808(gp) # 80000bb0 <errno>
20012708:	c606                	sw	ra,12(sp)
2001270a:	5d0050ef          	jal	ra,20017cda <_read>
2001270e:	57fd                	li	a5,-1
20012710:	00f51763          	bne	a0,a5,2001271e <_read_r+0x26>
20012714:	8f018793          	addi	a5,gp,-1808 # 80000bb0 <errno>
20012718:	439c                	lw	a5,0(a5)
2001271a:	c391                	beqz	a5,2001271e <_read_r+0x26>
2001271c:	c01c                	sw	a5,0(s0)
2001271e:	40b2                	lw	ra,12(sp)
20012720:	4422                	lw	s0,8(sp)
20012722:	0141                	addi	sp,sp,16
20012724:	8082                	ret

20012726 <__metal_driver_sifive_clint0_control_base>:
__metal_driver_sifive_clint0_control_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:233
/* --------------------- fixed_factor_clock ------------ */


/* --------------------- sifive_clint0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_clint0_control_base(struct metal_interrupt *controller)
{
20012726:	1101                	addi	sp,sp,-32
20012728:	ce22                	sw	s0,28(sp)
2001272a:	1000                	addi	s0,sp,32
2001272c:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:234
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20012730:	fec42703          	lw	a4,-20(s0)
20012734:	81018793          	addi	a5,gp,-2032 # 80000ad0 <__metal_dt_clint_2000000>
20012738:	00f71563          	bne	a4,a5,20012742 <__metal_driver_sifive_clint0_control_base+0x1c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:235
		return METAL_RISCV_CLINT0_2000000_BASE_ADDRESS;
2001273c:	020007b7          	lui	a5,0x2000
20012740:	a011                	j	20012744 <__metal_driver_sifive_clint0_control_base+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:238
	}
	else {
		return 0;
20012742:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:240
	}
}
20012744:	853e                	mv	a0,a5
20012746:	4472                	lw	s0,28(sp)
20012748:	6105                	addi	sp,sp,32
2001274a:	8082                	ret

2001274c <__metal_driver_sifive_clint0_num_interrupts>:
__metal_driver_sifive_clint0_num_interrupts():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:253
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_clint0_num_interrupts(struct metal_interrupt *controller)
{
2001274c:	1101                	addi	sp,sp,-32
2001274e:	ce22                	sw	s0,28(sp)
20012750:	1000                	addi	s0,sp,32
20012752:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:254
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20012756:	fec42703          	lw	a4,-20(s0)
2001275a:	81018793          	addi	a5,gp,-2032 # 80000ad0 <__metal_dt_clint_2000000>
2001275e:	00f71463          	bne	a4,a5,20012766 <__metal_driver_sifive_clint0_num_interrupts+0x1a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:255
		return METAL_MAX_CLINT_INTERRUPTS;
20012762:	4789                	li	a5,2
20012764:	a011                	j	20012768 <__metal_driver_sifive_clint0_num_interrupts+0x1c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:258
	}
	else {
		return 0;
20012766:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:260
	}
}
20012768:	853e                	mv	a0,a5
2001276a:	4472                	lw	s0,28(sp)
2001276c:	6105                	addi	sp,sp,32
2001276e:	8082                	ret

20012770 <__metal_driver_sifive_clint0_interrupt_parents>:
__metal_driver_sifive_clint0_interrupt_parents():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:263

static __inline__ struct metal_interrupt * __metal_driver_sifive_clint0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
20012770:	1101                	addi	sp,sp,-32
20012772:	ce22                	sw	s0,28(sp)
20012774:	1000                	addi	s0,sp,32
20012776:	fea42623          	sw	a0,-20(s0)
2001277a:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:264
	if (idx == 0) {
2001277e:	fe842783          	lw	a5,-24(s0)
20012782:	e791                	bnez	a5,2001278e <__metal_driver_sifive_clint0_interrupt_parents+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:265
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20012784:	800007b7          	lui	a5,0x80000
20012788:	09078793          	addi	a5,a5,144 # 80000090 <metal_segment_heap_target_end+0xffffe8d0>
2001278c:	a821                	j	200127a4 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:267
	}
	else if (idx == 1) {
2001278e:	fe842703          	lw	a4,-24(s0)
20012792:	4785                	li	a5,1
20012794:	00f71763          	bne	a4,a5,200127a2 <__metal_driver_sifive_clint0_interrupt_parents+0x32>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:268
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20012798:	800007b7          	lui	a5,0x80000
2001279c:	09078793          	addi	a5,a5,144 # 80000090 <metal_segment_heap_target_end+0xffffe8d0>
200127a0:	a011                	j	200127a4 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:271
	}
	else {
		return NULL;
200127a2:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:273
	}
}
200127a4:	853e                	mv	a0,a5
200127a6:	4472                	lw	s0,28(sp)
200127a8:	6105                	addi	sp,sp,32
200127aa:	8082                	ret

200127ac <__metal_driver_sifive_clint0_interrupt_lines>:
__metal_driver_sifive_clint0_interrupt_lines():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:276

static __inline__ int __metal_driver_sifive_clint0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
200127ac:	1101                	addi	sp,sp,-32
200127ae:	ce22                	sw	s0,28(sp)
200127b0:	1000                	addi	s0,sp,32
200127b2:	fea42623          	sw	a0,-20(s0)
200127b6:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:277
	if (idx == 0) {
200127ba:	fe842783          	lw	a5,-24(s0)
200127be:	e399                	bnez	a5,200127c4 <__metal_driver_sifive_clint0_interrupt_lines+0x18>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:278
		return 3;
200127c0:	478d                	li	a5,3
200127c2:	a809                	j	200127d4 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:280
	}
	else if (idx == 1) {
200127c4:	fe842703          	lw	a4,-24(s0)
200127c8:	4785                	li	a5,1
200127ca:	00f71463          	bne	a4,a5,200127d2 <__metal_driver_sifive_clint0_interrupt_lines+0x26>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:281
		return 7;
200127ce:	479d                	li	a5,7
200127d0:	a011                	j	200127d4 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:284
	}
	else {
		return 0;
200127d2:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:286
	}
}
200127d4:	853e                	mv	a0,a5
200127d6:	4472                	lw	s0,28(sp)
200127d8:	6105                	addi	sp,sp,32
200127da:	8082                	ret

200127dc <__metal_clint0_mtime_get>:
__metal_clint0_mtime_get():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:14
#include <metal/drivers/riscv_clint0.h>
#include <metal/io.h>
#include <metal/machine.h>

unsigned long long
__metal_clint0_mtime_get(struct __metal_driver_riscv_clint0 *clint) {
200127dc:	715d                	addi	sp,sp,-80
200127de:	c686                	sw	ra,76(sp)
200127e0:	c4a2                	sw	s0,72(sp)
200127e2:	c2ca                	sw	s2,68(sp)
200127e4:	c0ce                	sw	s3,64(sp)
200127e6:	de52                	sw	s4,60(sp)
200127e8:	dc56                	sw	s5,56(sp)
200127ea:	da5a                	sw	s6,52(sp)
200127ec:	d85e                	sw	s7,48(sp)
200127ee:	d662                	sw	s8,44(sp)
200127f0:	d466                	sw	s9,40(sp)
200127f2:	0880                	addi	s0,sp,80
200127f4:	faa42e23          	sw	a0,-68(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:17
    __metal_io_u32 lo, hi;
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
200127f8:	fbc42783          	lw	a5,-68(s0)
200127fc:	853e                	mv	a0,a5
200127fe:	3725                	jal	20012726 <__metal_driver_sifive_clint0_control_base>
20012800:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:21 (discriminator 1)

    /* Guard against rollover when reading */
    do {
        hi = __METAL_ACCESS_ONCE(
20012804:	fcc42703          	lw	a4,-52(s0)
20012808:	67b1                	lui	a5,0xc
2001280a:	17f1                	addi	a5,a5,-4
2001280c:	97ba                	add	a5,a5,a4
2001280e:	439c                	lw	a5,0(a5)
20012810:	fcf42423          	sw	a5,-56(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:23 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4));
        lo = __METAL_ACCESS_ONCE(
20012814:	fcc42703          	lw	a4,-52(s0)
20012818:	67b1                	lui	a5,0xc
2001281a:	17e1                	addi	a5,a5,-8
2001281c:	97ba                	add	a5,a5,a4
2001281e:	439c                	lw	a5,0(a5)
20012820:	fcf42223          	sw	a5,-60(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:25 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME));
    } while (__METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20012824:	fcc42703          	lw	a4,-52(s0)
20012828:	67b1                	lui	a5,0xc
2001282a:	17f1                	addi	a5,a5,-4
2001282c:	97ba                	add	a5,a5,a4
2001282e:	439c                	lw	a5,0(a5)
20012830:	fc842703          	lw	a4,-56(s0)
20012834:	fcf718e3          	bne	a4,a5,20012804 <__metal_clint0_mtime_get+0x28>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:29
                                                    METAL_RISCV_CLINT0_MTIME +
                                                    4)) != hi);

    return (((unsigned long long)hi) << 32) | lo;
20012838:	fc842783          	lw	a5,-56(s0)
2001283c:	8c3e                	mv	s8,a5
2001283e:	4c81                	li	s9,0
20012840:	000c1993          	slli	s3,s8,0x0
20012844:	4901                	li	s2,0
20012846:	fc442783          	lw	a5,-60(s0)
2001284a:	8a3e                	mv	s4,a5
2001284c:	4a81                	li	s5,0
2001284e:	01496b33          	or	s6,s2,s4
20012852:	0159ebb3          	or	s7,s3,s5
20012856:	87da                	mv	a5,s6
20012858:	885e                	mv	a6,s7
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:30
}
2001285a:	853e                	mv	a0,a5
2001285c:	85c2                	mv	a1,a6
2001285e:	40b6                	lw	ra,76(sp)
20012860:	4426                	lw	s0,72(sp)
20012862:	4916                	lw	s2,68(sp)
20012864:	4986                	lw	s3,64(sp)
20012866:	5a72                	lw	s4,60(sp)
20012868:	5ae2                	lw	s5,56(sp)
2001286a:	5b52                	lw	s6,52(sp)
2001286c:	5bc2                	lw	s7,48(sp)
2001286e:	5c32                	lw	s8,44(sp)
20012870:	5ca2                	lw	s9,40(sp)
20012872:	6161                	addi	sp,sp,80
20012874:	8082                	ret

20012876 <__metal_driver_riscv_clint0_mtimecmp_set>:
__metal_driver_riscv_clint0_mtimecmp_set():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:34

int __metal_driver_riscv_clint0_mtimecmp_set(struct metal_interrupt *controller,
                                             int hartid,
                                             unsigned long long time) {
20012876:	7179                	addi	sp,sp,-48
20012878:	d606                	sw	ra,44(sp)
2001287a:	d422                	sw	s0,40(sp)
2001287c:	d24a                	sw	s2,36(sp)
2001287e:	d04e                	sw	s3,32(sp)
20012880:	1800                	addi	s0,sp,48
20012882:	fca42e23          	sw	a0,-36(s0)
20012886:	fcb42c23          	sw	a1,-40(s0)
2001288a:	fcc42823          	sw	a2,-48(s0)
2001288e:	fcd42a23          	sw	a3,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:35
    struct __metal_driver_riscv_clint0 *clint =
20012892:	fdc42783          	lw	a5,-36(s0)
20012896:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:38
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
2001289a:	fec42783          	lw	a5,-20(s0)
2001289e:	853e                	mv	a0,a5
200128a0:	3559                	jal	20012726 <__metal_driver_sifive_clint0_control_base>
200128a2:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:45
     * and are NOT internally latched for multiword transfers.
     * Need to be careful about sequencing to avoid triggering
     * spurious interrupts: For that set the high word to a max
     * value first.
     */
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
200128a6:	fd842783          	lw	a5,-40(s0)
200128aa:	078e                	slli	a5,a5,0x3
200128ac:	873e                	mv	a4,a5
200128ae:	fe842783          	lw	a5,-24(s0)
200128b2:	973e                	add	a4,a4,a5
200128b4:	6791                	lui	a5,0x4
200128b6:	0791                	addi	a5,a5,4
200128b8:	97ba                	add	a5,a5,a4
200128ba:	873e                	mv	a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:47
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = 0xFFFFFFFF;
200128bc:	57fd                	li	a5,-1
200128be:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:48
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
200128c0:	fd842783          	lw	a5,-40(s0)
200128c4:	078e                	slli	a5,a5,0x3
200128c6:	873e                	mv	a4,a5
200128c8:	fe842783          	lw	a5,-24(s0)
200128cc:	973e                	add	a4,a4,a5
200128ce:	6791                	lui	a5,0x4
200128d0:	97ba                	add	a5,a5,a4
200128d2:	873e                	mv	a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:50
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
        (__metal_io_u32)time;
200128d4:	fd042783          	lw	a5,-48(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:49
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
200128d8:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:53
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = (__metal_io_u32)(time >> 32);
200128da:	fd442783          	lw	a5,-44(s0)
200128de:	0007d913          	srli	s2,a5,0x0
200128e2:	4981                	li	s3,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:51
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
200128e4:	fd842783          	lw	a5,-40(s0)
200128e8:	078e                	slli	a5,a5,0x3
200128ea:	873e                	mv	a4,a5
200128ec:	fe842783          	lw	a5,-24(s0)
200128f0:	973e                	add	a4,a4,a5
200128f2:	6791                	lui	a5,0x4
200128f4:	0791                	addi	a5,a5,4
200128f6:	97ba                	add	a5,a5,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:53
                                           4)) = (__metal_io_u32)(time >> 32);
200128f8:	874a                	mv	a4,s2
200128fa:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:54
    return 0;
200128fc:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:55
}
200128fe:	853e                	mv	a0,a5
20012900:	50b2                	lw	ra,44(sp)
20012902:	5422                	lw	s0,40(sp)
20012904:	5912                	lw	s2,36(sp)
20012906:	5982                	lw	s3,32(sp)
20012908:	6145                	addi	sp,sp,48
2001290a:	8082                	ret

2001290c <_get_cpu_intc>:
_get_cpu_intc():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:57

static struct metal_interrupt *_get_cpu_intc() {
2001290c:	1101                	addi	sp,sp,-32
2001290e:	ce06                	sw	ra,28(sp)
20012910:	cc22                	sw	s0,24(sp)
20012912:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:58
    int hartid = 0;
20012914:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:59
    __asm__ volatile("csrr %[hartid], mhartid"
20012918:	f14027f3          	csrr	a5,mhartid
2001291c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:62
                     : [hartid] "=r"(hartid)::"memory");

    struct metal_cpu *cpu = metal_cpu_get(hartid);
20012920:	fec42783          	lw	a5,-20(s0)
20012924:	853e                	mv	a0,a5
20012926:	62d040ef          	jal	ra,20017752 <metal_cpu_get>
2001292a:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:64

    return metal_cpu_interrupt_controller(cpu);
2001292e:	fe842503          	lw	a0,-24(s0)
20012932:	5fb040ef          	jal	ra,2001772c <metal_cpu_interrupt_controller>
20012936:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:65
}
20012938:	853e                	mv	a0,a5
2001293a:	40f2                	lw	ra,28(sp)
2001293c:	4462                	lw	s0,24(sp)
2001293e:	6105                	addi	sp,sp,32
20012940:	8082                	ret

20012942 <__metal_driver_riscv_clint0_init>:
__metal_driver_riscv_clint0_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:67

void __metal_driver_riscv_clint0_init(struct metal_interrupt *controller) {
20012942:	7139                	addi	sp,sp,-64
20012944:	de06                	sw	ra,60(sp)
20012946:	dc22                	sw	s0,56(sp)
20012948:	0080                	addi	s0,sp,64
2001294a:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:69
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
2001294e:	fcc42503          	lw	a0,-52(s0)
20012952:	3bed                	jal	2001274c <__metal_driver_sifive_clint0_num_interrupts>
20012954:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:70
    struct __metal_driver_riscv_clint0 *clint =
20012958:	fcc42783          	lw	a5,-52(s0)
2001295c:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:73
        (struct __metal_driver_riscv_clint0 *)(controller);

    if (!clint->init_done) {
20012960:	fe442783          	lw	a5,-28(s0)
20012964:	43dc                	lw	a5,4(a5)
20012966:	efa9                	bnez	a5,200129c0 <__metal_driver_riscv_clint0_init+0x7e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:76
        /* Register its interrupts with with parent controller, aka sw and
         * timerto its default isr */
        for (int i = 0; i < num_interrupts; i++) {
20012968:	fe042623          	sw	zero,-20(s0)
2001296c:	a081                	j	200129ac <__metal_driver_riscv_clint0_init+0x6a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:78 (discriminator 3)
            struct metal_interrupt *intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
2001296e:	fec42583          	lw	a1,-20(s0)
20012972:	fcc42503          	lw	a0,-52(s0)
20012976:	3bed                	jal	20012770 <__metal_driver_sifive_clint0_interrupt_parents>
20012978:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:80 (discriminator 3)
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
2001297c:	fec42583          	lw	a1,-20(s0)
20012980:	fcc42503          	lw	a0,-52(s0)
20012984:	3525                	jal	200127ac <__metal_driver_sifive_clint0_interrupt_lines>
20012986:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:81 (discriminator 3)
            intc->vtable->interrupt_register(intc, line, NULL, controller);
2001298a:	fe042783          	lw	a5,-32(s0)
2001298e:	439c                	lw	a5,0(a5)
20012990:	4fdc                	lw	a5,28(a5)
20012992:	fcc42683          	lw	a3,-52(s0)
20012996:	4601                	li	a2,0
20012998:	fdc42583          	lw	a1,-36(s0)
2001299c:	fe042503          	lw	a0,-32(s0)
200129a0:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 3)
        for (int i = 0; i < num_interrupts; i++) {
200129a2:	fec42783          	lw	a5,-20(s0)
200129a6:	0785                	addi	a5,a5,1
200129a8:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 1)
200129ac:	fec42703          	lw	a4,-20(s0)
200129b0:	fe842783          	lw	a5,-24(s0)
200129b4:	faf74de3          	blt	a4,a5,2001296e <__metal_driver_riscv_clint0_init+0x2c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:83
        }
        clint->init_done = 1;
200129b8:	fe442783          	lw	a5,-28(s0)
200129bc:	4705                	li	a4,1
200129be:	c3d8                	sw	a4,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:85
    }
}
200129c0:	0001                	nop
200129c2:	50f2                	lw	ra,60(sp)
200129c4:	5462                	lw	s0,56(sp)
200129c6:	6121                	addi	sp,sp,64
200129c8:	8082                	ret

200129ca <__metal_driver_riscv_clint0_register>:
__metal_driver_riscv_clint0_register():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:89

int __metal_driver_riscv_clint0_register(struct metal_interrupt *controller,
                                         int id, metal_interrupt_handler_t isr,
                                         void *priv) {
200129ca:	7139                	addi	sp,sp,-64
200129cc:	de06                	sw	ra,60(sp)
200129ce:	dc22                	sw	s0,56(sp)
200129d0:	0080                	addi	s0,sp,64
200129d2:	fca42623          	sw	a0,-52(s0)
200129d6:	fcb42423          	sw	a1,-56(s0)
200129da:	fcc42223          	sw	a2,-60(s0)
200129de:	fcd42023          	sw	a3,-64(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:90
    int rc = -1;
200129e2:	57fd                	li	a5,-1
200129e4:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:91
    metal_vector_mode mode = __metal_controller_interrupt_vector_mode();
200129e8:	470010ef          	jal	ra,20013e58 <__metal_controller_interrupt_vector_mode>
200129ec:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:92
    struct metal_interrupt *intc = NULL;
200129f0:	fe042423          	sw	zero,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:93
    struct metal_interrupt *cpu_intc = _get_cpu_intc();
200129f4:	3f21                	jal	2001290c <_get_cpu_intc>
200129f6:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:95
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
200129fa:	fcc42503          	lw	a0,-52(s0)
200129fe:	33b9                	jal	2001274c <__metal_driver_sifive_clint0_num_interrupts>
20012a00:	fca42c23          	sw	a0,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:97

    if ((mode != METAL_VECTOR_MODE) && (mode != METAL_DIRECT_MODE)) {
20012a04:	fe042703          	lw	a4,-32(s0)
20012a08:	4785                	li	a5,1
20012a0a:	00f70863          	beq	a4,a5,20012a1a <__metal_driver_riscv_clint0_register+0x50>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:97 (discriminator 1)
20012a0e:	fe042783          	lw	a5,-32(s0)
20012a12:	c781                	beqz	a5,20012a1a <__metal_driver_riscv_clint0_register+0x50>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:98
        return rc;
20012a14:	fec42783          	lw	a5,-20(s0)
20012a18:	a049                	j	20012a9a <__metal_driver_riscv_clint0_register+0xd0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:101
    }

    for (int i = 0; i < num_interrupts; i++) {
20012a1a:	fe042223          	sw	zero,-28(s0)
20012a1e:	a091                	j	20012a62 <__metal_driver_riscv_clint0_register+0x98>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:102
        int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20012a20:	fe442583          	lw	a1,-28(s0)
20012a24:	fcc42503          	lw	a0,-52(s0)
20012a28:	3351                	jal	200127ac <__metal_driver_sifive_clint0_interrupt_lines>
20012a2a:	fca42a23          	sw	a0,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:103
        intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20012a2e:	fe442583          	lw	a1,-28(s0)
20012a32:	fcc42503          	lw	a0,-52(s0)
20012a36:	3b2d                	jal	20012770 <__metal_driver_sifive_clint0_interrupt_parents>
20012a38:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:104
        if (cpu_intc == intc && id == line) {
20012a3c:	fdc42703          	lw	a4,-36(s0)
20012a40:	fe842783          	lw	a5,-24(s0)
20012a44:	00f71863          	bne	a4,a5,20012a54 <__metal_driver_riscv_clint0_register+0x8a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:104 (discriminator 1)
20012a48:	fc842703          	lw	a4,-56(s0)
20012a4c:	fd442783          	lw	a5,-44(s0)
20012a50:	02f70063          	beq	a4,a5,20012a70 <__metal_driver_riscv_clint0_register+0xa6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:107 (discriminator 2)
            break;
        }
        intc = NULL;
20012a54:	fe042423          	sw	zero,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 2)
    for (int i = 0; i < num_interrupts; i++) {
20012a58:	fe442783          	lw	a5,-28(s0)
20012a5c:	0785                	addi	a5,a5,1
20012a5e:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 1)
20012a62:	fe442703          	lw	a4,-28(s0)
20012a66:	fd842783          	lw	a5,-40(s0)
20012a6a:	faf74be3          	blt	a4,a5,20012a20 <__metal_driver_riscv_clint0_register+0x56>
20012a6e:	a011                	j	20012a72 <__metal_driver_riscv_clint0_register+0xa8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:105
            break;
20012a70:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:111
    }

    /* Register its interrupts with parent controller */
    if (intc) {
20012a72:	fe842783          	lw	a5,-24(s0)
20012a76:	c385                	beqz	a5,20012a96 <__metal_driver_riscv_clint0_register+0xcc>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:112
        rc = intc->vtable->interrupt_register(intc, id, isr, priv);
20012a78:	fe842783          	lw	a5,-24(s0)
20012a7c:	439c                	lw	a5,0(a5)
20012a7e:	4fdc                	lw	a5,28(a5)
20012a80:	fc042683          	lw	a3,-64(s0)
20012a84:	fc442603          	lw	a2,-60(s0)
20012a88:	fc842583          	lw	a1,-56(s0)
20012a8c:	fe842503          	lw	a0,-24(s0)
20012a90:	9782                	jalr	a5
20012a92:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:114
    }
    return rc;
20012a96:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:115
}
20012a9a:	853e                	mv	a0,a5
20012a9c:	50f2                	lw	ra,60(sp)
20012a9e:	5462                	lw	s0,56(sp)
20012aa0:	6121                	addi	sp,sp,64
20012aa2:	8082                	ret

20012aa4 <__metal_driver_riscv_clint0_vector_register>:
__metal_driver_riscv_clint0_vector_register():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:119

int __metal_driver_riscv_clint0_vector_register(
    struct metal_interrupt *controller, int id,
    metal_interrupt_vector_handler_t isr, void *priv) {
20012aa4:	7179                	addi	sp,sp,-48
20012aa6:	d622                	sw	s0,44(sp)
20012aa8:	1800                	addi	s0,sp,48
20012aaa:	fca42e23          	sw	a0,-36(s0)
20012aae:	fcb42c23          	sw	a1,-40(s0)
20012ab2:	fcc42a23          	sw	a2,-44(s0)
20012ab6:	fcd42823          	sw	a3,-48(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:121
    /* Not supported. User can override the 'weak' handler with their own */
    int rc = -1;
20012aba:	57fd                	li	a5,-1
20012abc:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:122
    return rc;
20012ac0:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:123
}
20012ac4:	853e                	mv	a0,a5
20012ac6:	5432                	lw	s0,44(sp)
20012ac8:	6145                	addi	sp,sp,48
20012aca:	8082                	ret

20012acc <__metal_driver_riscv_clint0_get_vector_mode>:
__metal_driver_riscv_clint0_get_vector_mode():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:126

metal_vector_mode __metal_driver_riscv_clint0_get_vector_mode(
    struct metal_interrupt *controller) {
20012acc:	1101                	addi	sp,sp,-32
20012ace:	ce06                	sw	ra,28(sp)
20012ad0:	cc22                	sw	s0,24(sp)
20012ad2:	1000                	addi	s0,sp,32
20012ad4:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:127
    return __metal_controller_interrupt_vector_mode();
20012ad8:	380010ef          	jal	ra,20013e58 <__metal_controller_interrupt_vector_mode>
20012adc:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:128
}
20012ade:	853e                	mv	a0,a5
20012ae0:	40f2                	lw	ra,28(sp)
20012ae2:	4462                	lw	s0,24(sp)
20012ae4:	6105                	addi	sp,sp,32
20012ae6:	8082                	ret

20012ae8 <__metal_driver_riscv_clint0_set_vector_mode>:
__metal_driver_riscv_clint0_set_vector_mode():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:131

int __metal_driver_riscv_clint0_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
20012ae8:	7179                	addi	sp,sp,-48
20012aea:	d606                	sw	ra,44(sp)
20012aec:	d422                	sw	s0,40(sp)
20012aee:	1800                	addi	s0,sp,48
20012af0:	fca42e23          	sw	a0,-36(s0)
20012af4:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:132
    int rc = -1;
20012af8:	57fd                	li	a5,-1
20012afa:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:133
    struct metal_interrupt *intc = _get_cpu_intc();
20012afe:	3539                	jal	2001290c <_get_cpu_intc>
20012b00:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:135

    if (intc) {
20012b04:	fe842783          	lw	a5,-24(s0)
20012b08:	c395                	beqz	a5,20012b2c <__metal_driver_riscv_clint0_set_vector_mode+0x44>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:138
        /* Valid vector modes are VECTOR and DIRECT, anything else is invalid
         * (-1) */
        switch (mode) {
20012b0a:	fd842703          	lw	a4,-40(s0)
20012b0e:	4785                	li	a5,1
20012b10:	02e7e063          	bltu	a5,a4,20012b30 <__metal_driver_riscv_clint0_set_vector_mode+0x48>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:141
        case METAL_VECTOR_MODE:
        case METAL_DIRECT_MODE:
            rc = intc->vtable->interrupt_set_vector_mode(intc, mode);
20012b14:	fe842783          	lw	a5,-24(s0)
20012b18:	439c                	lw	a5,0(a5)
20012b1a:	43dc                	lw	a5,4(a5)
20012b1c:	fd842583          	lw	a1,-40(s0)
20012b20:	fe842503          	lw	a0,-24(s0)
20012b24:	9782                	jalr	a5
20012b26:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:142
            break;
20012b2a:	a021                	j	20012b32 <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:146
        default:
            break;
        }
    }
20012b2c:	0001                	nop
20012b2e:	a011                	j	20012b32 <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:144
            break;
20012b30:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:147
    return rc;
20012b32:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:148
}
20012b36:	853e                	mv	a0,a5
20012b38:	50b2                	lw	ra,44(sp)
20012b3a:	5422                	lw	s0,40(sp)
20012b3c:	6145                	addi	sp,sp,48
20012b3e:	8082                	ret

20012b40 <__metal_driver_riscv_clint0_enable>:
__metal_driver_riscv_clint0_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:151

int __metal_driver_riscv_clint0_enable(struct metal_interrupt *controller,
                                       int id) {
20012b40:	7139                	addi	sp,sp,-64
20012b42:	de06                	sw	ra,60(sp)
20012b44:	dc22                	sw	s0,56(sp)
20012b46:	0080                	addi	s0,sp,64
20012b48:	fca42623          	sw	a0,-52(s0)
20012b4c:	fcb42423          	sw	a1,-56(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:152
    int rc = -1;
20012b50:	57fd                	li	a5,-1
20012b52:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:154

    if (id) {
20012b56:	fc842783          	lw	a5,-56(s0)
20012b5a:	c7c9                	beqz	a5,20012be4 <__metal_driver_riscv_clint0_enable+0xa4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:155
        struct metal_interrupt *intc = NULL;
20012b5c:	fe042423          	sw	zero,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:156
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
20012b60:	3375                	jal	2001290c <_get_cpu_intc>
20012b62:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:158
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
20012b66:	fcc42503          	lw	a0,-52(s0)
20012b6a:	36cd                	jal	2001274c <__metal_driver_sifive_clint0_num_interrupts>
20012b6c:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:160

        for (int i = 0; i < num_interrupts; i++) {
20012b70:	fe042223          	sw	zero,-28(s0)
20012b74:	a091                	j	20012bb8 <__metal_driver_riscv_clint0_enable+0x78>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:162
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20012b76:	fe442583          	lw	a1,-28(s0)
20012b7a:	fcc42503          	lw	a0,-52(s0)
20012b7e:	313d                	jal	200127ac <__metal_driver_sifive_clint0_interrupt_lines>
20012b80:	fca42c23          	sw	a0,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:164
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20012b84:	fe442583          	lw	a1,-28(s0)
20012b88:	fcc42503          	lw	a0,-52(s0)
20012b8c:	36d5                	jal	20012770 <__metal_driver_sifive_clint0_interrupt_parents>
20012b8e:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:165
            if (cpu_intc == intc && id == line) {
20012b92:	fe042703          	lw	a4,-32(s0)
20012b96:	fe842783          	lw	a5,-24(s0)
20012b9a:	00f71863          	bne	a4,a5,20012baa <__metal_driver_riscv_clint0_enable+0x6a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:165 (discriminator 1)
20012b9e:	fc842703          	lw	a4,-56(s0)
20012ba2:	fd842783          	lw	a5,-40(s0)
20012ba6:	02f70063          	beq	a4,a5,20012bc6 <__metal_driver_riscv_clint0_enable+0x86>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:168 (discriminator 2)
                break;
            }
            intc = NULL;
20012baa:	fe042423          	sw	zero,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
20012bae:	fe442783          	lw	a5,-28(s0)
20012bb2:	0785                	addi	a5,a5,1
20012bb4:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 1)
20012bb8:	fe442703          	lw	a4,-28(s0)
20012bbc:	fdc42783          	lw	a5,-36(s0)
20012bc0:	faf74be3          	blt	a4,a5,20012b76 <__metal_driver_riscv_clint0_enable+0x36>
20012bc4:	a011                	j	20012bc8 <__metal_driver_riscv_clint0_enable+0x88>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:166
                break;
20012bc6:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:172
        }

        /* Enable its interrupts with parent controller */
        if (intc) {
20012bc8:	fe842783          	lw	a5,-24(s0)
20012bcc:	cf81                	beqz	a5,20012be4 <__metal_driver_riscv_clint0_enable+0xa4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:173
            rc = intc->vtable->interrupt_enable(intc, id);
20012bce:	fe842783          	lw	a5,-24(s0)
20012bd2:	439c                	lw	a5,0(a5)
20012bd4:	53dc                	lw	a5,36(a5)
20012bd6:	fc842583          	lw	a1,-56(s0)
20012bda:	fe842503          	lw	a0,-24(s0)
20012bde:	9782                	jalr	a5
20012be0:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:177
        }
    }

    return rc;
20012be4:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:178
}
20012be8:	853e                	mv	a0,a5
20012bea:	50f2                	lw	ra,60(sp)
20012bec:	5462                	lw	s0,56(sp)
20012bee:	6121                	addi	sp,sp,64
20012bf0:	8082                	ret

20012bf2 <__metal_driver_riscv_clint0_disable>:
__metal_driver_riscv_clint0_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:181

int __metal_driver_riscv_clint0_disable(struct metal_interrupt *controller,
                                        int id) {
20012bf2:	7139                	addi	sp,sp,-64
20012bf4:	de06                	sw	ra,60(sp)
20012bf6:	dc22                	sw	s0,56(sp)
20012bf8:	0080                	addi	s0,sp,64
20012bfa:	fca42623          	sw	a0,-52(s0)
20012bfe:	fcb42423          	sw	a1,-56(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:182
    int rc = -1;
20012c02:	57fd                	li	a5,-1
20012c04:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:184

    if (id) {
20012c08:	fc842783          	lw	a5,-56(s0)
20012c0c:	c7c9                	beqz	a5,20012c96 <__metal_driver_riscv_clint0_disable+0xa4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:185
        struct metal_interrupt *intc = NULL;
20012c0e:	fe042423          	sw	zero,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:186
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
20012c12:	39ed                	jal	2001290c <_get_cpu_intc>
20012c14:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:188
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
20012c18:	fcc42503          	lw	a0,-52(s0)
20012c1c:	3e05                	jal	2001274c <__metal_driver_sifive_clint0_num_interrupts>
20012c1e:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:190

        for (int i = 0; i < num_interrupts; i++) {
20012c22:	fe042223          	sw	zero,-28(s0)
20012c26:	a091                	j	20012c6a <__metal_driver_riscv_clint0_disable+0x78>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:192
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20012c28:	fe442583          	lw	a1,-28(s0)
20012c2c:	fcc42503          	lw	a0,-52(s0)
20012c30:	3eb5                	jal	200127ac <__metal_driver_sifive_clint0_interrupt_lines>
20012c32:	fca42c23          	sw	a0,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:194
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20012c36:	fe442583          	lw	a1,-28(s0)
20012c3a:	fcc42503          	lw	a0,-52(s0)
20012c3e:	3e0d                	jal	20012770 <__metal_driver_sifive_clint0_interrupt_parents>
20012c40:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:195
            if (cpu_intc == intc && id == line) {
20012c44:	fe042703          	lw	a4,-32(s0)
20012c48:	fe842783          	lw	a5,-24(s0)
20012c4c:	00f71863          	bne	a4,a5,20012c5c <__metal_driver_riscv_clint0_disable+0x6a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:195 (discriminator 1)
20012c50:	fc842703          	lw	a4,-56(s0)
20012c54:	fd842783          	lw	a5,-40(s0)
20012c58:	02f70063          	beq	a4,a5,20012c78 <__metal_driver_riscv_clint0_disable+0x86>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:198 (discriminator 2)
                break;
            }
            intc = NULL;
20012c5c:	fe042423          	sw	zero,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
20012c60:	fe442783          	lw	a5,-28(s0)
20012c64:	0785                	addi	a5,a5,1
20012c66:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 1)
20012c6a:	fe442703          	lw	a4,-28(s0)
20012c6e:	fdc42783          	lw	a5,-36(s0)
20012c72:	faf74be3          	blt	a4,a5,20012c28 <__metal_driver_riscv_clint0_disable+0x36>
20012c76:	a011                	j	20012c7a <__metal_driver_riscv_clint0_disable+0x88>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:196
                break;
20012c78:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:202
        }

        /* Disable its interrupts with parent controller */
        if (intc) {
20012c7a:	fe842783          	lw	a5,-24(s0)
20012c7e:	cf81                	beqz	a5,20012c96 <__metal_driver_riscv_clint0_disable+0xa4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:203
            rc = intc->vtable->interrupt_disable(intc, id);
20012c80:	fe842783          	lw	a5,-24(s0)
20012c84:	439c                	lw	a5,0(a5)
20012c86:	579c                	lw	a5,40(a5)
20012c88:	fc842583          	lw	a1,-56(s0)
20012c8c:	fe842503          	lw	a0,-24(s0)
20012c90:	9782                	jalr	a5
20012c92:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:207
        }
    }

    return rc;
20012c96:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:208
}
20012c9a:	853e                	mv	a0,a5
20012c9c:	50f2                	lw	ra,60(sp)
20012c9e:	5462                	lw	s0,56(sp)
20012ca0:	6121                	addi	sp,sp,64
20012ca2:	8082                	ret

20012ca4 <__metal_driver_riscv_clint0_command_request>:
__metal_driver_riscv_clint0_command_request():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:211

int __metal_driver_riscv_clint0_command_request(
    struct metal_interrupt *controller, int command, void *data) {
20012ca4:	7179                	addi	sp,sp,-48
20012ca6:	d606                	sw	ra,44(sp)
20012ca8:	d422                	sw	s0,40(sp)
20012caa:	1800                	addi	s0,sp,48
20012cac:	fca42e23          	sw	a0,-36(s0)
20012cb0:	fcb42c23          	sw	a1,-40(s0)
20012cb4:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:213
    int hartid;
    int rc = -1;
20012cb8:	57fd                	li	a5,-1
20012cba:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:214
    struct __metal_driver_riscv_clint0 *clint =
20012cbe:	fdc42783          	lw	a5,-36(s0)
20012cc2:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:217
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(controller);
20012cc6:	fdc42503          	lw	a0,-36(s0)
20012cca:	a5dff0ef          	jal	ra,20012726 <__metal_driver_sifive_clint0_control_base>
20012cce:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:219

    switch (command) {
20012cd2:	fd842703          	lw	a4,-40(s0)
20012cd6:	4789                	li	a5,2
20012cd8:	04f70863          	beq	a4,a5,20012d28 <__metal_driver_riscv_clint0_command_request+0x84>
20012cdc:	fd842703          	lw	a4,-40(s0)
20012ce0:	4789                	li	a5,2
20012ce2:	00e7c863          	blt	a5,a4,20012cf2 <__metal_driver_riscv_clint0_command_request+0x4e>
20012ce6:	fd842703          	lw	a4,-40(s0)
20012cea:	4785                	li	a5,1
20012cec:	00f70e63          	beq	a4,a5,20012d08 <__metal_driver_riscv_clint0_command_request+0x64>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:263
            rc = __METAL_ACCESS_ONCE(
                (__metal_io_u32 *)(control_base + (hartid * 4)));
        }
        break;
    default:
        break;
20012cf0:	a8e9                	j	20012dca <__metal_driver_riscv_clint0_command_request+0x126>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:219
    switch (command) {
20012cf2:	fd842703          	lw	a4,-40(s0)
20012cf6:	478d                	li	a5,3
20012cf8:	04f70c63          	beq	a4,a5,20012d50 <__metal_driver_riscv_clint0_command_request+0xac>
20012cfc:	fd842703          	lw	a4,-40(s0)
20012d00:	4791                	li	a5,4
20012d02:	08f70863          	beq	a4,a5,20012d92 <__metal_driver_riscv_clint0_command_request+0xee>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:263
        break;
20012d06:	a0d1                	j	20012dca <__metal_driver_riscv_clint0_command_request+0x126>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:221
        if (data) {
20012d08:	fd442783          	lw	a5,-44(s0)
20012d0c:	cbc5                	beqz	a5,20012dbc <__metal_driver_riscv_clint0_command_request+0x118>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:222
            *(unsigned long long *)data = __metal_clint0_mtime_get(clint);
20012d0e:	fe842503          	lw	a0,-24(s0)
20012d12:	34e9                	jal	200127dc <__metal_clint0_mtime_get>
20012d14:	87aa                	mv	a5,a0
20012d16:	882e                	mv	a6,a1
20012d18:	fd442703          	lw	a4,-44(s0)
20012d1c:	c31c                	sw	a5,0(a4)
20012d1e:	01072223          	sw	a6,4(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:223
            rc = 0;
20012d22:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
20012d26:	a859                	j	20012dbc <__metal_driver_riscv_clint0_command_request+0x118>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:227
        if (data) {
20012d28:	fd442783          	lw	a5,-44(s0)
20012d2c:	cbd1                	beqz	a5,20012dc0 <__metal_driver_riscv_clint0_command_request+0x11c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:228
            hartid = *(int *)data;
20012d2e:	fd442783          	lw	a5,-44(s0)
20012d32:	439c                	lw	a5,0(a5)
20012d34:	fef42023          	sw	a5,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:229
            __METAL_ACCESS_ONCE((
20012d38:	fe042783          	lw	a5,-32(s0)
20012d3c:	078a                	slli	a5,a5,0x2
20012d3e:	873e                	mv	a4,a5
20012d40:	fe442783          	lw	a5,-28(s0)
20012d44:	97ba                	add	a5,a5,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:230
                __metal_io_u32 *)(control_base + (hartid * 4))) = METAL_DISABLE;
20012d46:	0007a023          	sw	zero,0(a5) # 4000 <__heap_size+0x3800>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:231
            rc = 0;
20012d4a:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
20012d4e:	a88d                	j	20012dc0 <__metal_driver_riscv_clint0_command_request+0x11c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:235
        if (data) {
20012d50:	fd442783          	lw	a5,-44(s0)
20012d54:	cba5                	beqz	a5,20012dc4 <__metal_driver_riscv_clint0_command_request+0x120>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:236
            hartid = *(int *)data;
20012d56:	fd442783          	lw	a5,-44(s0)
20012d5a:	439c                	lw	a5,0(a5)
20012d5c:	fef42023          	sw	a5,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:237
            __METAL_ACCESS_ONCE(
20012d60:	fe042783          	lw	a5,-32(s0)
20012d64:	078a                	slli	a5,a5,0x2
20012d66:	873e                	mv	a4,a5
20012d68:	fe442783          	lw	a5,-28(s0)
20012d6c:	97ba                	add	a5,a5,a4
20012d6e:	873e                	mv	a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:238
                (__metal_io_u32 *)(control_base + (hartid * 4))) = METAL_ENABLE;
20012d70:	4785                	li	a5,1
20012d72:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:248
            __METAL_IO_FENCE(o, i);
20012d74:	0480000f          	fence	o,i
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:249
            rc = __METAL_ACCESS_ONCE(
20012d78:	fe042783          	lw	a5,-32(s0)
20012d7c:	078a                	slli	a5,a5,0x2
20012d7e:	873e                	mv	a4,a5
20012d80:	fe442783          	lw	a5,-28(s0)
20012d84:	97ba                	add	a5,a5,a4
20012d86:	439c                	lw	a5,0(a5)
20012d88:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:251
            rc = 0;
20012d8c:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
20012d90:	a815                	j	20012dc4 <__metal_driver_riscv_clint0_command_request+0x120>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:255
        rc = 0;
20012d92:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:256
        if (data) {
20012d96:	fd442783          	lw	a5,-44(s0)
20012d9a:	c79d                	beqz	a5,20012dc8 <__metal_driver_riscv_clint0_command_request+0x124>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:257
            hartid = *(int *)data;
20012d9c:	fd442783          	lw	a5,-44(s0)
20012da0:	439c                	lw	a5,0(a5)
20012da2:	fef42023          	sw	a5,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:258
            rc = __METAL_ACCESS_ONCE(
20012da6:	fe042783          	lw	a5,-32(s0)
20012daa:	078a                	slli	a5,a5,0x2
20012dac:	873e                	mv	a4,a5
20012dae:	fe442783          	lw	a5,-28(s0)
20012db2:	97ba                	add	a5,a5,a4
20012db4:	439c                	lw	a5,0(a5)
20012db6:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
20012dba:	a039                	j	20012dc8 <__metal_driver_riscv_clint0_command_request+0x124>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
20012dbc:	0001                	nop
20012dbe:	a031                	j	20012dca <__metal_driver_riscv_clint0_command_request+0x126>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
20012dc0:	0001                	nop
20012dc2:	a021                	j	20012dca <__metal_driver_riscv_clint0_command_request+0x126>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
20012dc4:	0001                	nop
20012dc6:	a011                	j	20012dca <__metal_driver_riscv_clint0_command_request+0x126>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
20012dc8:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:266
    }

    return rc;
20012dca:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:267
}
20012dce:	853e                	mv	a0,a5
20012dd0:	50b2                	lw	ra,44(sp)
20012dd2:	5422                	lw	s0,40(sp)
20012dd4:	6145                	addi	sp,sp,48
20012dd6:	8082                	ret

20012dd8 <__metal_driver_riscv_clint0_clear_interrupt>:
__metal_driver_riscv_clint0_clear_interrupt():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:270

int __metal_driver_riscv_clint0_clear_interrupt(
    struct metal_interrupt *controller, int id) {
20012dd8:	7179                	addi	sp,sp,-48
20012dda:	d606                	sw	ra,44(sp)
20012ddc:	d422                	sw	s0,40(sp)
20012dde:	1800                	addi	s0,sp,48
20012de0:	fca42e23          	sw	a0,-36(s0)
20012de4:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:271
    int hartid = metal_cpu_get_current_hartid();
20012de8:	199040ef          	jal	ra,20017780 <metal_cpu_get_current_hartid>
20012dec:	87aa                	mv	a5,a0
20012dee:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:272
    return __metal_driver_riscv_clint0_command_request(
20012df2:	fec40793          	addi	a5,s0,-20
20012df6:	863e                	mv	a2,a5
20012df8:	4589                	li	a1,2
20012dfa:	fdc42503          	lw	a0,-36(s0)
20012dfe:	355d                	jal	20012ca4 <__metal_driver_riscv_clint0_command_request>
20012e00:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:274
        controller, METAL_SOFTWARE_IPI_CLEAR, &hartid);
}
20012e02:	853e                	mv	a0,a5
20012e04:	50b2                	lw	ra,44(sp)
20012e06:	5422                	lw	s0,40(sp)
20012e08:	6145                	addi	sp,sp,48
20012e0a:	8082                	ret

20012e0c <__metal_driver_riscv_clint0_set_interrupt>:
__metal_driver_riscv_clint0_set_interrupt():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:277

int __metal_driver_riscv_clint0_set_interrupt(
    struct metal_interrupt *controller, int id) {
20012e0c:	7179                	addi	sp,sp,-48
20012e0e:	d606                	sw	ra,44(sp)
20012e10:	d422                	sw	s0,40(sp)
20012e12:	1800                	addi	s0,sp,48
20012e14:	fca42e23          	sw	a0,-36(s0)
20012e18:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:278
    int hartid = metal_cpu_get_current_hartid();
20012e1c:	165040ef          	jal	ra,20017780 <metal_cpu_get_current_hartid>
20012e20:	87aa                	mv	a5,a0
20012e22:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:279
    return __metal_driver_riscv_clint0_command_request(
20012e26:	fec40793          	addi	a5,s0,-20
20012e2a:	863e                	mv	a2,a5
20012e2c:	458d                	li	a1,3
20012e2e:	fdc42503          	lw	a0,-36(s0)
20012e32:	3d8d                	jal	20012ca4 <__metal_driver_riscv_clint0_command_request>
20012e34:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:281
        controller, METAL_SOFTWARE_IPI_SET, &hartid);
}
20012e36:	853e                	mv	a0,a5
20012e38:	50b2                	lw	ra,44(sp)
20012e3a:	5422                	lw	s0,40(sp)
20012e3c:	6145                	addi	sp,sp,48
20012e3e:	8082                	ret

20012e40 <__metal_driver_cpu_hartid>:
__metal_driver_cpu_hartid():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:292



/* --------------------- cpu ------------ */
static __inline__ int __metal_driver_cpu_hartid(struct metal_cpu *cpu)
{
20012e40:	1101                	addi	sp,sp,-32
20012e42:	ce22                	sw	s0,28(sp)
20012e44:	1000                	addi	s0,sp,32
20012e46:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:293
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20012e4a:	fec42703          	lw	a4,-20(s0)
20012e4e:	81818793          	addi	a5,gp,-2024 # 80000ad8 <__metal_dt_cpu_0>
20012e52:	00f71463          	bne	a4,a5,20012e5a <__metal_driver_cpu_hartid+0x1a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:294
		return 0;
20012e56:	4781                	li	a5,0
20012e58:	a011                	j	20012e5c <__metal_driver_cpu_hartid+0x1c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:297
	}
	else {
		return -1;
20012e5a:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:299
	}
}
20012e5c:	853e                	mv	a0,a5
20012e5e:	4472                	lw	s0,28(sp)
20012e60:	6105                	addi	sp,sp,32
20012e62:	8082                	ret

20012e64 <__metal_driver_cpu_timebase>:
__metal_driver_cpu_timebase():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:302

static __inline__ int __metal_driver_cpu_timebase(struct metal_cpu *cpu)
{
20012e64:	1101                	addi	sp,sp,-32
20012e66:	ce22                	sw	s0,28(sp)
20012e68:	1000                	addi	s0,sp,32
20012e6a:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:303
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20012e6e:	fec42703          	lw	a4,-20(s0)
20012e72:	81818793          	addi	a5,gp,-2024 # 80000ad8 <__metal_dt_cpu_0>
20012e76:	00f71763          	bne	a4,a5,20012e84 <__metal_driver_cpu_timebase+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:304
		return 16000000;
20012e7a:	00f427b7          	lui	a5,0xf42
20012e7e:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
20012e82:	a011                	j	20012e86 <__metal_driver_cpu_timebase+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:307
	}
	else {
		return 0;
20012e84:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:309
	}
}
20012e86:	853e                	mv	a0,a5
20012e88:	4472                	lw	s0,28(sp)
20012e8a:	6105                	addi	sp,sp,32
20012e8c:	8082                	ret

20012e8e <__metal_driver_cpu_interrupt_controller>:
__metal_driver_cpu_interrupt_controller():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:312

static __inline__ struct metal_interrupt * __metal_driver_cpu_interrupt_controller(struct metal_cpu *cpu)
{
20012e8e:	1101                	addi	sp,sp,-32
20012e90:	ce22                	sw	s0,28(sp)
20012e92:	1000                	addi	s0,sp,32
20012e94:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:313
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20012e98:	fec42703          	lw	a4,-20(s0)
20012e9c:	81818793          	addi	a5,gp,-2024 # 80000ad8 <__metal_dt_cpu_0>
20012ea0:	00f71763          	bne	a4,a5,20012eae <__metal_driver_cpu_interrupt_controller+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:314
		return &__metal_dt_cpu_0_interrupt_controller.controller;
20012ea4:	800007b7          	lui	a5,0x80000
20012ea8:	09078793          	addi	a5,a5,144 # 80000090 <metal_segment_heap_target_end+0xffffe8d0>
20012eac:	a011                	j	20012eb0 <__metal_driver_cpu_interrupt_controller+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:317
	}
	else {
		return NULL;
20012eae:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:319
	}
}
20012eb0:	853e                	mv	a0,a5
20012eb2:	4472                	lw	s0,28(sp)
20012eb4:	6105                	addi	sp,sp,32
20012eb6:	8082                	ret

20012eb8 <__metal_driver_cpu_buserror>:
__metal_driver_cpu_buserror():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:332
		return 0;
	}
}

static __inline__ struct metal_buserror * __metal_driver_cpu_buserror(struct metal_cpu *cpu)
{
20012eb8:	1101                	addi	sp,sp,-32
20012eba:	ce22                	sw	s0,28(sp)
20012ebc:	1000                	addi	s0,sp,32
20012ebe:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:333
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20012ec2:	fec42703          	lw	a4,-20(s0)
20012ec6:	81818793          	addi	a5,gp,-2024 # 80000ad8 <__metal_dt_cpu_0>
20012eca:	00f71463          	bne	a4,a5,20012ed2 <__metal_driver_cpu_buserror+0x1a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:334
		return NULL;
20012ece:	4781                	li	a5,0
20012ed0:	a011                	j	20012ed4 <__metal_driver_cpu_buserror+0x1c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:337
	}
	else {
		return NULL;
20012ed2:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:339
	}
}
20012ed4:	853e                	mv	a0,a5
20012ed6:	4472                	lw	s0,28(sp)
20012ed8:	6105                	addi	sp,sp,32
20012eda:	8082                	ret

20012edc <__metal_driver_cpu_get>:
__metal_driver_cpu_get():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:25
extern void __metal_vector_table();
unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu);
int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time);

struct metal_cpu *__metal_driver_cpu_get(int hartid) {
20012edc:	1101                	addi	sp,sp,-32
20012ede:	ce22                	sw	s0,28(sp)
20012ee0:	1000                	addi	s0,sp,32
20012ee2:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:26
    if (hartid < __METAL_DT_MAX_HARTS) {
20012ee6:	fec42783          	lw	a5,-20(s0)
20012eea:	00f04c63          	bgtz	a5,20012f02 <__metal_driver_cpu_get+0x26>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:27
        return &(__metal_cpu_table[hartid]->cpu);
20012eee:	800017b7          	lui	a5,0x80001
20012ef2:	fec42703          	lw	a4,-20(s0)
20012ef6:	070a                	slli	a4,a4,0x2
20012ef8:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20012efc:	97ba                	add	a5,a5,a4
20012efe:	439c                	lw	a5,0(a5)
20012f00:	a011                	j	20012f04 <__metal_driver_cpu_get+0x28>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:29
    }
    return (struct metal_cpu *)NULL;
20012f02:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:30
}
20012f04:	853e                	mv	a0,a5
20012f06:	4472                	lw	s0,28(sp)
20012f08:	6105                	addi	sp,sp,32
20012f0a:	8082                	ret

20012f0c <__metal_myhart_id>:
__metal_myhart_id():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:32

uintptr_t __metal_myhart_id(void) {
20012f0c:	1101                	addi	sp,sp,-32
20012f0e:	ce22                	sw	s0,28(sp)
20012f10:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:34
    uintptr_t myhart;
    __asm__ volatile("csrr %0, mhartid" : "=r"(myhart));
20012f12:	f14027f3          	csrr	a5,mhartid
20012f16:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:35
    return myhart;
20012f1a:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:36
}
20012f1e:	853e                	mv	a0,a5
20012f20:	4472                	lw	s0,28(sp)
20012f22:	6105                	addi	sp,sp,32
20012f24:	8082                	ret

20012f26 <__metal_interrupt_global_enable>:
__metal_interrupt_global_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:45
    for (ptr = base; ptr < (base + size); ptr++) {
        *ptr = 0;
    }
}

void __metal_interrupt_global_enable(void) {
20012f26:	1101                	addi	sp,sp,-32
20012f28:	ce22                	sw	s0,28(sp)
20012f2a:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:47
    uintptr_t m;
    __asm__ volatile("csrrs %0, mstatus, %1"
20012f2c:	47a1                	li	a5,8
20012f2e:	3007a7f3          	csrrs	a5,mstatus,a5
20012f32:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:50
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
20012f36:	0001                	nop
20012f38:	4472                	lw	s0,28(sp)
20012f3a:	6105                	addi	sp,sp,32
20012f3c:	8082                	ret

20012f3e <__metal_interrupt_global_disable>:
__metal_interrupt_global_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:52

void __metal_interrupt_global_disable(void) {
20012f3e:	1101                	addi	sp,sp,-32
20012f40:	ce22                	sw	s0,28(sp)
20012f42:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:54
    uintptr_t m;
    __asm__ volatile("csrrc %0, mstatus, %1"
20012f44:	47a1                	li	a5,8
20012f46:	3007b7f3          	csrrc	a5,mstatus,a5
20012f4a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:57
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
20012f4e:	0001                	nop
20012f50:	4472                	lw	s0,28(sp)
20012f52:	6105                	addi	sp,sp,32
20012f54:	8082                	ret

20012f56 <__metal_interrupt_software_enable>:
__metal_interrupt_software_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:59

void __metal_interrupt_software_enable(void) {
20012f56:	1101                	addi	sp,sp,-32
20012f58:	ce22                	sw	s0,28(sp)
20012f5a:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:61
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20012f5c:	47a1                	li	a5,8
20012f5e:	3047a7f3          	csrrs	a5,mie,a5
20012f62:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:64
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
20012f66:	0001                	nop
20012f68:	4472                	lw	s0,28(sp)
20012f6a:	6105                	addi	sp,sp,32
20012f6c:	8082                	ret

20012f6e <__metal_interrupt_software_disable>:
__metal_interrupt_software_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:66

void __metal_interrupt_software_disable(void) {
20012f6e:	1101                	addi	sp,sp,-32
20012f70:	ce22                	sw	s0,28(sp)
20012f72:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:68
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
20012f74:	47a1                	li	a5,8
20012f76:	3047b7f3          	csrrc	a5,mie,a5
20012f7a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:71
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
20012f7e:	0001                	nop
20012f80:	4472                	lw	s0,28(sp)
20012f82:	6105                	addi	sp,sp,32
20012f84:	8082                	ret

20012f86 <__metal_interrupt_timer_enable>:
__metal_interrupt_timer_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:73

void __metal_interrupt_timer_enable(void) {
20012f86:	1101                	addi	sp,sp,-32
20012f88:	ce22                	sw	s0,28(sp)
20012f8a:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:75
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20012f8c:	08000793          	li	a5,128
20012f90:	3047a7f3          	csrrs	a5,mie,a5
20012f94:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:78
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
20012f98:	0001                	nop
20012f9a:	4472                	lw	s0,28(sp)
20012f9c:	6105                	addi	sp,sp,32
20012f9e:	8082                	ret

20012fa0 <__metal_interrupt_timer_disable>:
__metal_interrupt_timer_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:80

void __metal_interrupt_timer_disable(void) {
20012fa0:	1101                	addi	sp,sp,-32
20012fa2:	ce22                	sw	s0,28(sp)
20012fa4:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:82
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
20012fa6:	08000793          	li	a5,128
20012faa:	3047b7f3          	csrrc	a5,mie,a5
20012fae:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:85
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
20012fb2:	0001                	nop
20012fb4:	4472                	lw	s0,28(sp)
20012fb6:	6105                	addi	sp,sp,32
20012fb8:	8082                	ret

20012fba <__metal_interrupt_external_enable>:
__metal_interrupt_external_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:87

void __metal_interrupt_external_enable(void) {
20012fba:	1101                	addi	sp,sp,-32
20012fbc:	ce22                	sw	s0,28(sp)
20012fbe:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:89
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20012fc0:	6785                	lui	a5,0x1
20012fc2:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20012fc6:	3047a7f3          	csrrs	a5,mie,a5
20012fca:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:92
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
20012fce:	0001                	nop
20012fd0:	4472                	lw	s0,28(sp)
20012fd2:	6105                	addi	sp,sp,32
20012fd4:	8082                	ret

20012fd6 <__metal_interrupt_external_disable>:
__metal_interrupt_external_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:94

void __metal_interrupt_external_disable(void) {
20012fd6:	1101                	addi	sp,sp,-32
20012fd8:	ce22                	sw	s0,28(sp)
20012fda:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:96
    unsigned long m;
    __asm__ volatile("csrrc %0, mie, %1"
20012fdc:	6785                	lui	a5,0x1
20012fde:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20012fe2:	3047b7f3          	csrrc	a5,mie,a5
20012fe6:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:99
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
20012fea:	0001                	nop
20012fec:	4472                	lw	s0,28(sp)
20012fee:	6105                	addi	sp,sp,32
20012ff0:	8082                	ret

20012ff2 <__metal_interrupt_local_enable>:
__metal_interrupt_local_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:101

void __metal_interrupt_local_enable(int id) {
20012ff2:	7179                	addi	sp,sp,-48
20012ff4:	d622                	sw	s0,44(sp)
20012ff6:	1800                	addi	s0,sp,48
20012ff8:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:102
    uintptr_t b = 1 << id;
20012ffc:	fdc42783          	lw	a5,-36(s0)
20013000:	4705                	li	a4,1
20013002:	00f717b3          	sll	a5,a4,a5
20013006:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:104
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1" : "=r"(m) : "r"(b));
2001300a:	fec42783          	lw	a5,-20(s0)
2001300e:	3047a7f3          	csrrs	a5,mie,a5
20013012:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:105
}
20013016:	0001                	nop
20013018:	5432                	lw	s0,44(sp)
2001301a:	6145                	addi	sp,sp,48
2001301c:	8082                	ret

2001301e <__metal_interrupt_local_disable>:
__metal_interrupt_local_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:107

void __metal_interrupt_local_disable(int id) {
2001301e:	7179                	addi	sp,sp,-48
20013020:	d622                	sw	s0,44(sp)
20013022:	1800                	addi	s0,sp,48
20013024:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:108
    uintptr_t b = 1 << id;
20013028:	fdc42783          	lw	a5,-36(s0)
2001302c:	4705                	li	a4,1
2001302e:	00f717b3          	sll	a5,a4,a5
20013032:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:110
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1" : "=r"(m) : "r"(b));
20013036:	fec42783          	lw	a5,-20(s0)
2001303a:	3047b7f3          	csrrc	a5,mie,a5
2001303e:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:111
}
20013042:	0001                	nop
20013044:	5432                	lw	s0,44(sp)
20013046:	6145                	addi	sp,sp,48
20013048:	8082                	ret

2001304a <__metal_default_exception_handler>:
__metal_default_exception_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:113

void __metal_default_exception_handler(struct metal_cpu *cpu, int ecode) {
2001304a:	1101                	addi	sp,sp,-32
2001304c:	ce06                	sw	ra,28(sp)
2001304e:	cc22                	sw	s0,24(sp)
20013050:	1000                	addi	s0,sp,32
20013052:	fea42623          	sw	a0,-20(s0)
20013056:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:114
    metal_shutdown(100);
2001305a:	06400513          	li	a0,100
2001305e:	05b040ef          	jal	ra,200178b8 <metal_shutdown>

20013062 <__metal_default_interrupt_handler>:
__metal_default_interrupt_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:117
}

void __metal_default_interrupt_handler(int id, void *priv) {
20013062:	1101                	addi	sp,sp,-32
20013064:	ce06                	sw	ra,28(sp)
20013066:	cc22                	sw	s0,24(sp)
20013068:	1000                	addi	s0,sp,32
2001306a:	fea42623          	sw	a0,-20(s0)
2001306e:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:118
    metal_shutdown(200);
20013072:	0c800513          	li	a0,200
20013076:	043040ef          	jal	ra,200178b8 <metal_shutdown>

2001307a <metal_interrupt_vector_handler>:
metal_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:122
}

/* The metal_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_interrupt_vector_handler(void) {
2001307a:	715d                	addi	sp,sp,-80
2001307c:	c686                	sw	ra,76(sp)
2001307e:	c496                	sw	t0,72(sp)
20013080:	c29a                	sw	t1,68(sp)
20013082:	c09e                	sw	t2,64(sp)
20013084:	de22                	sw	s0,60(sp)
20013086:	dc2a                	sw	a0,56(sp)
20013088:	da2e                	sw	a1,52(sp)
2001308a:	d832                	sw	a2,48(sp)
2001308c:	d636                	sw	a3,44(sp)
2001308e:	d43a                	sw	a4,40(sp)
20013090:	d23e                	sw	a5,36(sp)
20013092:	d042                	sw	a6,32(sp)
20013094:	ce46                	sw	a7,28(sp)
20013096:	cc72                	sw	t3,24(sp)
20013098:	ca76                	sw	t4,20(sp)
2001309a:	c87a                	sw	t5,16(sp)
2001309c:	c67e                	sw	t6,12(sp)
2001309e:	0880                	addi	s0,sp,80
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:123
    metal_shutdown(300);
200130a0:	12c00513          	li	a0,300
200130a4:	015040ef          	jal	ra,200178b8 <metal_shutdown>

200130a8 <metal_software_interrupt_vector_handler>:
metal_software_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:128
}

/* The metal_software_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_software_interrupt_vector_handler(void) {
200130a8:	711d                	addi	sp,sp,-96
200130aa:	ce86                	sw	ra,92(sp)
200130ac:	cc96                	sw	t0,88(sp)
200130ae:	ca9a                	sw	t1,84(sp)
200130b0:	c89e                	sw	t2,80(sp)
200130b2:	c6a2                	sw	s0,76(sp)
200130b4:	c4aa                	sw	a0,72(sp)
200130b6:	c2ae                	sw	a1,68(sp)
200130b8:	c0b2                	sw	a2,64(sp)
200130ba:	de36                	sw	a3,60(sp)
200130bc:	dc3a                	sw	a4,56(sp)
200130be:	da3e                	sw	a5,52(sp)
200130c0:	d842                	sw	a6,48(sp)
200130c2:	d646                	sw	a7,44(sp)
200130c4:	d472                	sw	t3,40(sp)
200130c6:	d276                	sw	t4,36(sp)
200130c8:	d07a                	sw	t5,32(sp)
200130ca:	ce7e                	sw	t6,28(sp)
200130cc:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:129
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_SW);
200130ce:	3d3d                	jal	20012f0c <__metal_myhart_id>
200130d0:	872a                	mv	a4,a0
200130d2:	800017b7          	lui	a5,0x80001
200130d6:	070a                	slli	a4,a4,0x2
200130d8:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
200130dc:	97ba                	add	a5,a5,a4
200130de:	439c                	lw	a5,0(a5)
200130e0:	faf42623          	sw	a5,-84(s0)
200130e4:	fac42783          	lw	a5,-84(s0)
200130e8:	c785                	beqz	a5,20013110 <metal_software_interrupt_vector_handler+0x68>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:129 (discriminator 1)
200130ea:	fac42503          	lw	a0,-84(s0)
200130ee:	3345                	jal	20012e8e <__metal_driver_cpu_interrupt_controller>
200130f0:	faa42423          	sw	a0,-88(s0)
200130f4:	fa842783          	lw	a5,-88(s0)
200130f8:	0e07a783          	lw	a5,224(a5)
200130fc:	faf42223          	sw	a5,-92(s0)
20013100:	fa842783          	lw	a5,-88(s0)
20013104:	0d87a783          	lw	a5,216(a5)
20013108:	fa442583          	lw	a1,-92(s0)
2001310c:	450d                	li	a0,3
2001310e:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:130
}
20013110:	0001                	nop
20013112:	40f6                	lw	ra,92(sp)
20013114:	42e6                	lw	t0,88(sp)
20013116:	4356                	lw	t1,84(sp)
20013118:	43c6                	lw	t2,80(sp)
2001311a:	4436                	lw	s0,76(sp)
2001311c:	4526                	lw	a0,72(sp)
2001311e:	4596                	lw	a1,68(sp)
20013120:	4606                	lw	a2,64(sp)
20013122:	56f2                	lw	a3,60(sp)
20013124:	5762                	lw	a4,56(sp)
20013126:	57d2                	lw	a5,52(sp)
20013128:	5842                	lw	a6,48(sp)
2001312a:	58b2                	lw	a7,44(sp)
2001312c:	5e22                	lw	t3,40(sp)
2001312e:	5e92                	lw	t4,36(sp)
20013130:	5f02                	lw	t5,32(sp)
20013132:	4ff2                	lw	t6,28(sp)
20013134:	6125                	addi	sp,sp,96
20013136:	30200073          	mret

2001313a <__metal_default_sw_handler>:
__metal_default_sw_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:132

void __metal_default_sw_handler(int id, void *priv) {
2001313a:	7179                	addi	sp,sp,-48
2001313c:	d606                	sw	ra,44(sp)
2001313e:	d422                	sw	s0,40(sp)
20013140:	1800                	addi	s0,sp,48
20013142:	fca42e23          	sw	a0,-36(s0)
20013146:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:135
    uintptr_t mcause;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
2001314a:	33c9                	jal	20012f0c <__metal_myhart_id>
2001314c:	872a                	mv	a4,a0
2001314e:	800017b7          	lui	a5,0x80001
20013152:	070a                	slli	a4,a4,0x2
20013154:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20013158:	97ba                	add	a5,a5,a4
2001315a:	439c                	lw	a5,0(a5)
2001315c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:137

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
20013160:	342027f3          	csrr	a5,mcause
20013164:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:138
    if (cpu) {
20013168:	fec42783          	lw	a5,-20(s0)
2001316c:	c795                	beqz	a5,20013198 <__metal_default_sw_handler+0x5e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:140
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
2001316e:	fec42503          	lw	a0,-20(s0)
20013172:	3b31                	jal	20012e8e <__metal_driver_cpu_interrupt_controller>
20013174:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:141
        intc->metal_exception_table[mcause & METAL_MCAUSE_CAUSE](
20013178:	fe842783          	lw	a5,-24(s0)
2001317c:	3ff7f793          	andi	a5,a5,1023
20013180:	fe442703          	lw	a4,-28(s0)
20013184:	0e878793          	addi	a5,a5,232
20013188:	078a                	slli	a5,a5,0x2
2001318a:	97ba                	add	a5,a5,a4
2001318c:	439c                	lw	a5,0(a5)
2001318e:	fdc42583          	lw	a1,-36(s0)
20013192:	fec42503          	lw	a0,-20(s0)
20013196:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:144
            (struct metal_cpu *)cpu, id);
    }
}
20013198:	0001                	nop
2001319a:	50b2                	lw	ra,44(sp)
2001319c:	5422                	lw	s0,40(sp)
2001319e:	6145                	addi	sp,sp,48
200131a0:	8082                	ret

200131a2 <metal_timer_interrupt_vector_handler>:
metal_timer_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:148

/* The metal_timer_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_timer_interrupt_vector_handler(void) {
200131a2:	711d                	addi	sp,sp,-96
200131a4:	ce86                	sw	ra,92(sp)
200131a6:	cc96                	sw	t0,88(sp)
200131a8:	ca9a                	sw	t1,84(sp)
200131aa:	c89e                	sw	t2,80(sp)
200131ac:	c6a2                	sw	s0,76(sp)
200131ae:	c4aa                	sw	a0,72(sp)
200131b0:	c2ae                	sw	a1,68(sp)
200131b2:	c0b2                	sw	a2,64(sp)
200131b4:	de36                	sw	a3,60(sp)
200131b6:	dc3a                	sw	a4,56(sp)
200131b8:	da3e                	sw	a5,52(sp)
200131ba:	d842                	sw	a6,48(sp)
200131bc:	d646                	sw	a7,44(sp)
200131be:	d472                	sw	t3,40(sp)
200131c0:	d276                	sw	t4,36(sp)
200131c2:	d07a                	sw	t5,32(sp)
200131c4:	ce7e                	sw	t6,28(sp)
200131c6:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:149
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_TMR);
200131c8:	3391                	jal	20012f0c <__metal_myhart_id>
200131ca:	872a                	mv	a4,a0
200131cc:	800017b7          	lui	a5,0x80001
200131d0:	070a                	slli	a4,a4,0x2
200131d2:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
200131d6:	97ba                	add	a5,a5,a4
200131d8:	439c                	lw	a5,0(a5)
200131da:	faf42623          	sw	a5,-84(s0)
200131de:	fac42783          	lw	a5,-84(s0)
200131e2:	c785                	beqz	a5,2001320a <metal_timer_interrupt_vector_handler+0x68>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:149 (discriminator 1)
200131e4:	fac42503          	lw	a0,-84(s0)
200131e8:	315d                	jal	20012e8e <__metal_driver_cpu_interrupt_controller>
200131ea:	faa42423          	sw	a0,-88(s0)
200131ee:	fa842783          	lw	a5,-88(s0)
200131f2:	1407a783          	lw	a5,320(a5)
200131f6:	faf42223          	sw	a5,-92(s0)
200131fa:	fa842783          	lw	a5,-88(s0)
200131fe:	1387a783          	lw	a5,312(a5)
20013202:	fa442583          	lw	a1,-92(s0)
20013206:	451d                	li	a0,7
20013208:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:150
}
2001320a:	0001                	nop
2001320c:	40f6                	lw	ra,92(sp)
2001320e:	42e6                	lw	t0,88(sp)
20013210:	4356                	lw	t1,84(sp)
20013212:	43c6                	lw	t2,80(sp)
20013214:	4436                	lw	s0,76(sp)
20013216:	4526                	lw	a0,72(sp)
20013218:	4596                	lw	a1,68(sp)
2001321a:	4606                	lw	a2,64(sp)
2001321c:	56f2                	lw	a3,60(sp)
2001321e:	5762                	lw	a4,56(sp)
20013220:	57d2                	lw	a5,52(sp)
20013222:	5842                	lw	a6,48(sp)
20013224:	58b2                	lw	a7,44(sp)
20013226:	5e22                	lw	t3,40(sp)
20013228:	5e92                	lw	t4,36(sp)
2001322a:	5f02                	lw	t5,32(sp)
2001322c:	4ff2                	lw	t6,28(sp)
2001322e:	6125                	addi	sp,sp,96
20013230:	30200073          	mret

20013234 <__metal_default_beu_handler>:
__metal_default_beu_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:152

void __metal_default_beu_handler(int id, void *priv) {}
20013234:	1101                	addi	sp,sp,-32
20013236:	ce22                	sw	s0,28(sp)
20013238:	1000                	addi	s0,sp,32
2001323a:	fea42623          	sw	a0,-20(s0)
2001323e:	feb42423          	sw	a1,-24(s0)
20013242:	0001                	nop
20013244:	4472                	lw	s0,28(sp)
20013246:	6105                	addi	sp,sp,32
20013248:	8082                	ret

2001324a <__metal_default_timer_handler>:
__metal_default_timer_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:154

void __metal_default_timer_handler(int id, void *priv) {
2001324a:	7179                	addi	sp,sp,-48
2001324c:	d606                	sw	ra,44(sp)
2001324e:	d422                	sw	s0,40(sp)
20013250:	1800                	addi	s0,sp,48
20013252:	fca42e23          	sw	a0,-36(s0)
20013256:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:155
    struct metal_cpu *cpu = __metal_driver_cpu_get(__metal_myhart_id());
2001325a:	394d                	jal	20012f0c <__metal_myhart_id>
2001325c:	87aa                	mv	a5,a0
2001325e:	853e                	mv	a0,a5
20013260:	39b5                	jal	20012edc <__metal_driver_cpu_get>
20013262:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:156
    unsigned long long time = __metal_driver_cpu_mtime_get(cpu);
20013266:	fec42503          	lw	a0,-20(s0)
2001326a:	294010ef          	jal	ra,200144fe <__metal_driver_cpu_mtime_get>
2001326e:	fea42023          	sw	a0,-32(s0)
20013272:	feb42223          	sw	a1,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:159

    /* Set a 10 cycle timer */
    __metal_driver_cpu_mtimecmp_set(cpu, time + 10);
20013276:	fe042783          	lw	a5,-32(s0)
2001327a:	fe442803          	lw	a6,-28(s0)
2001327e:	45a9                	li	a1,10
20013280:	4601                	li	a2,0
20013282:	00b786b3          	add	a3,a5,a1
20013286:	8536                	mv	a0,a3
20013288:	00f53533          	sltu	a0,a0,a5
2001328c:	00c80733          	add	a4,a6,a2
20013290:	00e507b3          	add	a5,a0,a4
20013294:	873e                	mv	a4,a5
20013296:	87b6                	mv	a5,a3
20013298:	883a                	mv	a6,a4
2001329a:	85be                	mv	a1,a5
2001329c:	8642                	mv	a2,a6
2001329e:	fec42503          	lw	a0,-20(s0)
200132a2:	2c2010ef          	jal	ra,20014564 <__metal_driver_cpu_mtimecmp_set>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:160
}
200132a6:	0001                	nop
200132a8:	50b2                	lw	ra,44(sp)
200132aa:	5422                	lw	s0,40(sp)
200132ac:	6145                	addi	sp,sp,48
200132ae:	8082                	ret
	...

20013300 <__metal_exception_handler>:
__metal_exception_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:169
metal_external_interrupt_vector_handler(void) {
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_EXT);
}

void __metal_exception_handler(void) __attribute__((interrupt, aligned(128)));
void __metal_exception_handler(void) {
20013300:	7119                	addi	sp,sp,-128
20013302:	de86                	sw	ra,124(sp)
20013304:	dc96                	sw	t0,120(sp)
20013306:	da9a                	sw	t1,116(sp)
20013308:	d89e                	sw	t2,112(sp)
2001330a:	d6a2                	sw	s0,108(sp)
2001330c:	d4aa                	sw	a0,104(sp)
2001330e:	d2ae                	sw	a1,100(sp)
20013310:	d0b2                	sw	a2,96(sp)
20013312:	ceb6                	sw	a3,92(sp)
20013314:	ccba                	sw	a4,88(sp)
20013316:	cabe                	sw	a5,84(sp)
20013318:	c8c2                	sw	a6,80(sp)
2001331a:	c6c6                	sw	a7,76(sp)
2001331c:	c4f2                	sw	t3,72(sp)
2001331e:	c2f6                	sw	t4,68(sp)
20013320:	c0fa                	sw	t5,64(sp)
20013322:	de7e                	sw	t6,60(sp)
20013324:	0100                	addi	s0,sp,128
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:174
    int id;
    void *priv;
    uintptr_t mcause, mepc, mtval, mtvec;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20013326:	36dd                	jal	20012f0c <__metal_myhart_id>
20013328:	872a                	mv	a4,a0
2001332a:	800017b7          	lui	a5,0x80001
2001332e:	070a                	slli	a4,a4,0x2
20013330:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20013334:	97ba                	add	a5,a5,a4
20013336:	439c                	lw	a5,0(a5)
20013338:	faf42623          	sw	a5,-84(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:176

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
2001333c:	342027f3          	csrr	a5,mcause
20013340:	faf42423          	sw	a5,-88(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:177
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
20013344:	341027f3          	csrr	a5,mepc
20013348:	faf42223          	sw	a5,-92(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:178
    __asm__ volatile("csrr %0, mtval" : "=r"(mtval));
2001334c:	343027f3          	csrr	a5,mtval
20013350:	faf42023          	sw	a5,-96(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:179
    __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
20013354:	305027f3          	csrr	a5,mtvec
20013358:	f8f42e23          	sw	a5,-100(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:181

    if (cpu) {
2001335c:	fac42783          	lw	a5,-84(s0)
20013360:	cbfd                	beqz	a5,20013456 <__metal_exception_handler+0x156>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:183
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20013362:	fac42503          	lw	a0,-84(s0)
20013366:	b29ff0ef          	jal	ra,20012e8e <__metal_driver_cpu_interrupt_controller>
2001336a:	f8a42c23          	sw	a0,-104(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:184
        id = mcause & METAL_MCAUSE_CAUSE;
2001336e:	fa842783          	lw	a5,-88(s0)
20013372:	3ff7f793          	andi	a5,a5,1023
20013376:	f8f42a23          	sw	a5,-108(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:185
        if (mcause & METAL_MCAUSE_INTR) {
2001337a:	fa842783          	lw	a5,-88(s0)
2001337e:	0a07de63          	bgez	a5,2001343a <__metal_exception_handler+0x13a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:186
            if (id == METAL_INTERRUPT_ID_BEU) {
20013382:	f9442703          	lw	a4,-108(s0)
20013386:	08000793          	li	a5,128
2001338a:	02f71263          	bne	a4,a5,200133ae <__metal_exception_handler+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:187
                priv = intc->metal_int_beu.exint_data;
2001338e:	f9842783          	lw	a5,-104(s0)
20013392:	3987a783          	lw	a5,920(a5)
20013396:	f8f42823          	sw	a5,-112(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:188
                intc->metal_int_beu.handler(id, priv);
2001339a:	f9842783          	lw	a5,-104(s0)
2001339e:	3907a783          	lw	a5,912(a5)
200133a2:	f9042583          	lw	a1,-112(s0)
200133a6:	f9442503          	lw	a0,-108(s0)
200133aa:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:189
                return;
200133ac:	a06d                	j	20013456 <__metal_exception_handler+0x156>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:191
            }
            if ((id < METAL_INTERRUPT_ID_CSW) ||
200133ae:	f9442703          	lw	a4,-108(s0)
200133b2:	47ad                	li	a5,11
200133b4:	00e7d763          	bge	a5,a4,200133c2 <__metal_exception_handler+0xc2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:192 (discriminator 1)
                ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_DIRECT)) {
200133b8:	f9c42783          	lw	a5,-100(s0)
200133bc:	03f7f793          	andi	a5,a5,63
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:191 (discriminator 1)
            if ((id < METAL_INTERRUPT_ID_CSW) ||
200133c0:	ef9d                	bnez	a5,200133fe <__metal_exception_handler+0xfe>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:193
                priv = intc->metal_int_table[id].exint_data;
200133c2:	f9842683          	lw	a3,-104(s0)
200133c6:	f9442703          	lw	a4,-108(s0)
200133ca:	87ba                	mv	a5,a4
200133cc:	0786                	slli	a5,a5,0x1
200133ce:	97ba                	add	a5,a5,a4
200133d0:	078e                	slli	a5,a5,0x3
200133d2:	97b6                	add	a5,a5,a3
200133d4:	0987a783          	lw	a5,152(a5)
200133d8:	f8f42823          	sw	a5,-112(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:194
                intc->metal_int_table[id].handler(id, priv);
200133dc:	f9842683          	lw	a3,-104(s0)
200133e0:	f9442703          	lw	a4,-108(s0)
200133e4:	87ba                	mv	a5,a4
200133e6:	0786                	slli	a5,a5,0x1
200133e8:	97ba                	add	a5,a5,a4
200133ea:	078e                	slli	a5,a5,0x3
200133ec:	97b6                	add	a5,a5,a3
200133ee:	0907a783          	lw	a5,144(a5)
200133f2:	f9042583          	lw	a1,-112(s0)
200133f6:	f9442503          	lw	a0,-108(s0)
200133fa:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:195
                return;
200133fc:	a8a9                	j	20013456 <__metal_exception_handler+0x156>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:197
            }
            if ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_CLIC) {
200133fe:	f9c42783          	lw	a5,-100(s0)
20013402:	03f7f713          	andi	a4,a5,63
20013406:	4789                	li	a5,2
20013408:	04f71763          	bne	a4,a5,20013456 <__metal_exception_handler+0x156>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:201
                uintptr_t mtvt;
                metal_interrupt_handler_t mtvt_handler;

                __asm__ volatile("csrr %0, 0x307" : "=r"(mtvt));
2001340c:	307027f3          	csrr	a5,mtvt
20013410:	f8f42623          	sw	a5,-116(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:202
                priv = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20013414:	f9842783          	lw	a5,-104(s0)
20013418:	0dc7a783          	lw	a5,220(a5)
2001341c:	f8f42823          	sw	a5,-112(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:203
                mtvt_handler = (metal_interrupt_handler_t) * (uintptr_t *)mtvt;
20013420:	f8c42783          	lw	a5,-116(s0)
20013424:	439c                	lw	a5,0(a5)
20013426:	f8f42423          	sw	a5,-120(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:204
                mtvt_handler(id, priv);
2001342a:	f8842783          	lw	a5,-120(s0)
2001342e:	f9042583          	lw	a1,-112(s0)
20013432:	f9442503          	lw	a0,-108(s0)
20013436:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:205
                return;
20013438:	a839                	j	20013456 <__metal_exception_handler+0x156>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:208
            }
        } else {
            intc->metal_exception_table[id]((struct metal_cpu *)cpu, id);
2001343a:	f9842703          	lw	a4,-104(s0)
2001343e:	f9442783          	lw	a5,-108(s0)
20013442:	0e878793          	addi	a5,a5,232
20013446:	078a                	slli	a5,a5,0x2
20013448:	97ba                	add	a5,a5,a4
2001344a:	439c                	lw	a5,0(a5)
2001344c:	f9442583          	lw	a1,-108(s0)
20013450:	fac42503          	lw	a0,-84(s0)
20013454:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:211
        }
    }
}
20013456:	50f6                	lw	ra,124(sp)
20013458:	52e6                	lw	t0,120(sp)
2001345a:	5356                	lw	t1,116(sp)
2001345c:	53c6                	lw	t2,112(sp)
2001345e:	5436                	lw	s0,108(sp)
20013460:	5526                	lw	a0,104(sp)
20013462:	5596                	lw	a1,100(sp)
20013464:	5606                	lw	a2,96(sp)
20013466:	46f6                	lw	a3,92(sp)
20013468:	4766                	lw	a4,88(sp)
2001346a:	47d6                	lw	a5,84(sp)
2001346c:	4846                	lw	a6,80(sp)
2001346e:	48b6                	lw	a7,76(sp)
20013470:	4e26                	lw	t3,72(sp)
20013472:	4e96                	lw	t4,68(sp)
20013474:	4f06                	lw	t5,64(sp)
20013476:	5ff2                	lw	t6,60(sp)
20013478:	6109                	addi	sp,sp,128
2001347a:	30200073          	mret
	...

200134f8 <metal_lc0_interrupt_vector_handler>:
metal_lc0_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:214

/* The metal_lc0_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc0_interrupt_vector_handler(void) {
200134f8:	711d                	addi	sp,sp,-96
200134fa:	ce86                	sw	ra,92(sp)
200134fc:	cc96                	sw	t0,88(sp)
200134fe:	ca9a                	sw	t1,84(sp)
20013500:	c89e                	sw	t2,80(sp)
20013502:	c6a2                	sw	s0,76(sp)
20013504:	c4aa                	sw	a0,72(sp)
20013506:	c2ae                	sw	a1,68(sp)
20013508:	c0b2                	sw	a2,64(sp)
2001350a:	de36                	sw	a3,60(sp)
2001350c:	dc3a                	sw	a4,56(sp)
2001350e:	da3e                	sw	a5,52(sp)
20013510:	d842                	sw	a6,48(sp)
20013512:	d646                	sw	a7,44(sp)
20013514:	d472                	sw	t3,40(sp)
20013516:	d276                	sw	t4,36(sp)
20013518:	d07a                	sw	t5,32(sp)
2001351a:	ce7e                	sw	t6,28(sp)
2001351c:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:215
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC0);
2001351e:	9efff0ef          	jal	ra,20012f0c <__metal_myhart_id>
20013522:	872a                	mv	a4,a0
20013524:	800017b7          	lui	a5,0x80001
20013528:	070a                	slli	a4,a4,0x2
2001352a:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
2001352e:	97ba                	add	a5,a5,a4
20013530:	439c                	lw	a5,0(a5)
20013532:	faf42623          	sw	a5,-84(s0)
20013536:	fac42783          	lw	a5,-84(s0)
2001353a:	c78d                	beqz	a5,20013564 <metal_lc0_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:215 (discriminator 1)
2001353c:	fac42503          	lw	a0,-84(s0)
20013540:	94fff0ef          	jal	ra,20012e8e <__metal_driver_cpu_interrupt_controller>
20013544:	faa42423          	sw	a0,-88(s0)
20013548:	fa842783          	lw	a5,-88(s0)
2001354c:	2187a783          	lw	a5,536(a5)
20013550:	faf42223          	sw	a5,-92(s0)
20013554:	fa842783          	lw	a5,-88(s0)
20013558:	2107a783          	lw	a5,528(a5)
2001355c:	fa442583          	lw	a1,-92(s0)
20013560:	4541                	li	a0,16
20013562:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:216
}
20013564:	0001                	nop
20013566:	40f6                	lw	ra,92(sp)
20013568:	42e6                	lw	t0,88(sp)
2001356a:	4356                	lw	t1,84(sp)
2001356c:	43c6                	lw	t2,80(sp)
2001356e:	4436                	lw	s0,76(sp)
20013570:	4526                	lw	a0,72(sp)
20013572:	4596                	lw	a1,68(sp)
20013574:	4606                	lw	a2,64(sp)
20013576:	56f2                	lw	a3,60(sp)
20013578:	5762                	lw	a4,56(sp)
2001357a:	57d2                	lw	a5,52(sp)
2001357c:	5842                	lw	a6,48(sp)
2001357e:	58b2                	lw	a7,44(sp)
20013580:	5e22                	lw	t3,40(sp)
20013582:	5e92                	lw	t4,36(sp)
20013584:	5f02                	lw	t5,32(sp)
20013586:	4ff2                	lw	t6,28(sp)
20013588:	6125                	addi	sp,sp,96
2001358a:	30200073          	mret

2001358e <metal_lc1_interrupt_vector_handler>:
metal_lc1_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:219

/* The metal_lc1_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc1_interrupt_vector_handler(void) {
2001358e:	711d                	addi	sp,sp,-96
20013590:	ce86                	sw	ra,92(sp)
20013592:	cc96                	sw	t0,88(sp)
20013594:	ca9a                	sw	t1,84(sp)
20013596:	c89e                	sw	t2,80(sp)
20013598:	c6a2                	sw	s0,76(sp)
2001359a:	c4aa                	sw	a0,72(sp)
2001359c:	c2ae                	sw	a1,68(sp)
2001359e:	c0b2                	sw	a2,64(sp)
200135a0:	de36                	sw	a3,60(sp)
200135a2:	dc3a                	sw	a4,56(sp)
200135a4:	da3e                	sw	a5,52(sp)
200135a6:	d842                	sw	a6,48(sp)
200135a8:	d646                	sw	a7,44(sp)
200135aa:	d472                	sw	t3,40(sp)
200135ac:	d276                	sw	t4,36(sp)
200135ae:	d07a                	sw	t5,32(sp)
200135b0:	ce7e                	sw	t6,28(sp)
200135b2:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:220
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC1);
200135b4:	959ff0ef          	jal	ra,20012f0c <__metal_myhart_id>
200135b8:	872a                	mv	a4,a0
200135ba:	800017b7          	lui	a5,0x80001
200135be:	070a                	slli	a4,a4,0x2
200135c0:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
200135c4:	97ba                	add	a5,a5,a4
200135c6:	439c                	lw	a5,0(a5)
200135c8:	faf42623          	sw	a5,-84(s0)
200135cc:	fac42783          	lw	a5,-84(s0)
200135d0:	c78d                	beqz	a5,200135fa <metal_lc1_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:220 (discriminator 1)
200135d2:	fac42503          	lw	a0,-84(s0)
200135d6:	8b9ff0ef          	jal	ra,20012e8e <__metal_driver_cpu_interrupt_controller>
200135da:	faa42423          	sw	a0,-88(s0)
200135de:	fa842783          	lw	a5,-88(s0)
200135e2:	2307a783          	lw	a5,560(a5)
200135e6:	faf42223          	sw	a5,-92(s0)
200135ea:	fa842783          	lw	a5,-88(s0)
200135ee:	2287a783          	lw	a5,552(a5)
200135f2:	fa442583          	lw	a1,-92(s0)
200135f6:	4545                	li	a0,17
200135f8:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:221
}
200135fa:	0001                	nop
200135fc:	40f6                	lw	ra,92(sp)
200135fe:	42e6                	lw	t0,88(sp)
20013600:	4356                	lw	t1,84(sp)
20013602:	43c6                	lw	t2,80(sp)
20013604:	4436                	lw	s0,76(sp)
20013606:	4526                	lw	a0,72(sp)
20013608:	4596                	lw	a1,68(sp)
2001360a:	4606                	lw	a2,64(sp)
2001360c:	56f2                	lw	a3,60(sp)
2001360e:	5762                	lw	a4,56(sp)
20013610:	57d2                	lw	a5,52(sp)
20013612:	5842                	lw	a6,48(sp)
20013614:	58b2                	lw	a7,44(sp)
20013616:	5e22                	lw	t3,40(sp)
20013618:	5e92                	lw	t4,36(sp)
2001361a:	5f02                	lw	t5,32(sp)
2001361c:	4ff2                	lw	t6,28(sp)
2001361e:	6125                	addi	sp,sp,96
20013620:	30200073          	mret

20013624 <metal_lc2_interrupt_vector_handler>:
metal_lc2_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:224

/* The metal_lc2_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc2_interrupt_vector_handler(void) {
20013624:	711d                	addi	sp,sp,-96
20013626:	ce86                	sw	ra,92(sp)
20013628:	cc96                	sw	t0,88(sp)
2001362a:	ca9a                	sw	t1,84(sp)
2001362c:	c89e                	sw	t2,80(sp)
2001362e:	c6a2                	sw	s0,76(sp)
20013630:	c4aa                	sw	a0,72(sp)
20013632:	c2ae                	sw	a1,68(sp)
20013634:	c0b2                	sw	a2,64(sp)
20013636:	de36                	sw	a3,60(sp)
20013638:	dc3a                	sw	a4,56(sp)
2001363a:	da3e                	sw	a5,52(sp)
2001363c:	d842                	sw	a6,48(sp)
2001363e:	d646                	sw	a7,44(sp)
20013640:	d472                	sw	t3,40(sp)
20013642:	d276                	sw	t4,36(sp)
20013644:	d07a                	sw	t5,32(sp)
20013646:	ce7e                	sw	t6,28(sp)
20013648:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:225
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC2);
2001364a:	8c3ff0ef          	jal	ra,20012f0c <__metal_myhart_id>
2001364e:	872a                	mv	a4,a0
20013650:	800017b7          	lui	a5,0x80001
20013654:	070a                	slli	a4,a4,0x2
20013656:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
2001365a:	97ba                	add	a5,a5,a4
2001365c:	439c                	lw	a5,0(a5)
2001365e:	faf42623          	sw	a5,-84(s0)
20013662:	fac42783          	lw	a5,-84(s0)
20013666:	c78d                	beqz	a5,20013690 <metal_lc2_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:225 (discriminator 1)
20013668:	fac42503          	lw	a0,-84(s0)
2001366c:	823ff0ef          	jal	ra,20012e8e <__metal_driver_cpu_interrupt_controller>
20013670:	faa42423          	sw	a0,-88(s0)
20013674:	fa842783          	lw	a5,-88(s0)
20013678:	2487a783          	lw	a5,584(a5)
2001367c:	faf42223          	sw	a5,-92(s0)
20013680:	fa842783          	lw	a5,-88(s0)
20013684:	2407a783          	lw	a5,576(a5)
20013688:	fa442583          	lw	a1,-92(s0)
2001368c:	4549                	li	a0,18
2001368e:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:226
}
20013690:	0001                	nop
20013692:	40f6                	lw	ra,92(sp)
20013694:	42e6                	lw	t0,88(sp)
20013696:	4356                	lw	t1,84(sp)
20013698:	43c6                	lw	t2,80(sp)
2001369a:	4436                	lw	s0,76(sp)
2001369c:	4526                	lw	a0,72(sp)
2001369e:	4596                	lw	a1,68(sp)
200136a0:	4606                	lw	a2,64(sp)
200136a2:	56f2                	lw	a3,60(sp)
200136a4:	5762                	lw	a4,56(sp)
200136a6:	57d2                	lw	a5,52(sp)
200136a8:	5842                	lw	a6,48(sp)
200136aa:	58b2                	lw	a7,44(sp)
200136ac:	5e22                	lw	t3,40(sp)
200136ae:	5e92                	lw	t4,36(sp)
200136b0:	5f02                	lw	t5,32(sp)
200136b2:	4ff2                	lw	t6,28(sp)
200136b4:	6125                	addi	sp,sp,96
200136b6:	30200073          	mret

200136ba <metal_lc3_interrupt_vector_handler>:
metal_lc3_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:229

/* The metal_lc3_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc3_interrupt_vector_handler(void) {
200136ba:	711d                	addi	sp,sp,-96
200136bc:	ce86                	sw	ra,92(sp)
200136be:	cc96                	sw	t0,88(sp)
200136c0:	ca9a                	sw	t1,84(sp)
200136c2:	c89e                	sw	t2,80(sp)
200136c4:	c6a2                	sw	s0,76(sp)
200136c6:	c4aa                	sw	a0,72(sp)
200136c8:	c2ae                	sw	a1,68(sp)
200136ca:	c0b2                	sw	a2,64(sp)
200136cc:	de36                	sw	a3,60(sp)
200136ce:	dc3a                	sw	a4,56(sp)
200136d0:	da3e                	sw	a5,52(sp)
200136d2:	d842                	sw	a6,48(sp)
200136d4:	d646                	sw	a7,44(sp)
200136d6:	d472                	sw	t3,40(sp)
200136d8:	d276                	sw	t4,36(sp)
200136da:	d07a                	sw	t5,32(sp)
200136dc:	ce7e                	sw	t6,28(sp)
200136de:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:230
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC3);
200136e0:	82dff0ef          	jal	ra,20012f0c <__metal_myhart_id>
200136e4:	872a                	mv	a4,a0
200136e6:	800017b7          	lui	a5,0x80001
200136ea:	070a                	slli	a4,a4,0x2
200136ec:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
200136f0:	97ba                	add	a5,a5,a4
200136f2:	439c                	lw	a5,0(a5)
200136f4:	faf42623          	sw	a5,-84(s0)
200136f8:	fac42783          	lw	a5,-84(s0)
200136fc:	c78d                	beqz	a5,20013726 <metal_lc3_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:230 (discriminator 1)
200136fe:	fac42503          	lw	a0,-84(s0)
20013702:	f8cff0ef          	jal	ra,20012e8e <__metal_driver_cpu_interrupt_controller>
20013706:	faa42423          	sw	a0,-88(s0)
2001370a:	fa842783          	lw	a5,-88(s0)
2001370e:	2607a783          	lw	a5,608(a5)
20013712:	faf42223          	sw	a5,-92(s0)
20013716:	fa842783          	lw	a5,-88(s0)
2001371a:	2587a783          	lw	a5,600(a5)
2001371e:	fa442583          	lw	a1,-92(s0)
20013722:	454d                	li	a0,19
20013724:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:231
}
20013726:	0001                	nop
20013728:	40f6                	lw	ra,92(sp)
2001372a:	42e6                	lw	t0,88(sp)
2001372c:	4356                	lw	t1,84(sp)
2001372e:	43c6                	lw	t2,80(sp)
20013730:	4436                	lw	s0,76(sp)
20013732:	4526                	lw	a0,72(sp)
20013734:	4596                	lw	a1,68(sp)
20013736:	4606                	lw	a2,64(sp)
20013738:	56f2                	lw	a3,60(sp)
2001373a:	5762                	lw	a4,56(sp)
2001373c:	57d2                	lw	a5,52(sp)
2001373e:	5842                	lw	a6,48(sp)
20013740:	58b2                	lw	a7,44(sp)
20013742:	5e22                	lw	t3,40(sp)
20013744:	5e92                	lw	t4,36(sp)
20013746:	5f02                	lw	t5,32(sp)
20013748:	4ff2                	lw	t6,28(sp)
2001374a:	6125                	addi	sp,sp,96
2001374c:	30200073          	mret

20013750 <metal_lc4_interrupt_vector_handler>:
metal_lc4_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:234

/* The metal_lc4_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc4_interrupt_vector_handler(void) {
20013750:	711d                	addi	sp,sp,-96
20013752:	ce86                	sw	ra,92(sp)
20013754:	cc96                	sw	t0,88(sp)
20013756:	ca9a                	sw	t1,84(sp)
20013758:	c89e                	sw	t2,80(sp)
2001375a:	c6a2                	sw	s0,76(sp)
2001375c:	c4aa                	sw	a0,72(sp)
2001375e:	c2ae                	sw	a1,68(sp)
20013760:	c0b2                	sw	a2,64(sp)
20013762:	de36                	sw	a3,60(sp)
20013764:	dc3a                	sw	a4,56(sp)
20013766:	da3e                	sw	a5,52(sp)
20013768:	d842                	sw	a6,48(sp)
2001376a:	d646                	sw	a7,44(sp)
2001376c:	d472                	sw	t3,40(sp)
2001376e:	d276                	sw	t4,36(sp)
20013770:	d07a                	sw	t5,32(sp)
20013772:	ce7e                	sw	t6,28(sp)
20013774:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:235
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC4);
20013776:	f96ff0ef          	jal	ra,20012f0c <__metal_myhart_id>
2001377a:	872a                	mv	a4,a0
2001377c:	800017b7          	lui	a5,0x80001
20013780:	070a                	slli	a4,a4,0x2
20013782:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20013786:	97ba                	add	a5,a5,a4
20013788:	439c                	lw	a5,0(a5)
2001378a:	faf42623          	sw	a5,-84(s0)
2001378e:	fac42783          	lw	a5,-84(s0)
20013792:	c78d                	beqz	a5,200137bc <metal_lc4_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:235 (discriminator 1)
20013794:	fac42503          	lw	a0,-84(s0)
20013798:	ef6ff0ef          	jal	ra,20012e8e <__metal_driver_cpu_interrupt_controller>
2001379c:	faa42423          	sw	a0,-88(s0)
200137a0:	fa842783          	lw	a5,-88(s0)
200137a4:	2787a783          	lw	a5,632(a5)
200137a8:	faf42223          	sw	a5,-92(s0)
200137ac:	fa842783          	lw	a5,-88(s0)
200137b0:	2707a783          	lw	a5,624(a5)
200137b4:	fa442583          	lw	a1,-92(s0)
200137b8:	4551                	li	a0,20
200137ba:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:236
}
200137bc:	0001                	nop
200137be:	40f6                	lw	ra,92(sp)
200137c0:	42e6                	lw	t0,88(sp)
200137c2:	4356                	lw	t1,84(sp)
200137c4:	43c6                	lw	t2,80(sp)
200137c6:	4436                	lw	s0,76(sp)
200137c8:	4526                	lw	a0,72(sp)
200137ca:	4596                	lw	a1,68(sp)
200137cc:	4606                	lw	a2,64(sp)
200137ce:	56f2                	lw	a3,60(sp)
200137d0:	5762                	lw	a4,56(sp)
200137d2:	57d2                	lw	a5,52(sp)
200137d4:	5842                	lw	a6,48(sp)
200137d6:	58b2                	lw	a7,44(sp)
200137d8:	5e22                	lw	t3,40(sp)
200137da:	5e92                	lw	t4,36(sp)
200137dc:	5f02                	lw	t5,32(sp)
200137de:	4ff2                	lw	t6,28(sp)
200137e0:	6125                	addi	sp,sp,96
200137e2:	30200073          	mret

200137e6 <metal_lc5_interrupt_vector_handler>:
metal_lc5_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:239

/* The metal_lc5_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc5_interrupt_vector_handler(void) {
200137e6:	711d                	addi	sp,sp,-96
200137e8:	ce86                	sw	ra,92(sp)
200137ea:	cc96                	sw	t0,88(sp)
200137ec:	ca9a                	sw	t1,84(sp)
200137ee:	c89e                	sw	t2,80(sp)
200137f0:	c6a2                	sw	s0,76(sp)
200137f2:	c4aa                	sw	a0,72(sp)
200137f4:	c2ae                	sw	a1,68(sp)
200137f6:	c0b2                	sw	a2,64(sp)
200137f8:	de36                	sw	a3,60(sp)
200137fa:	dc3a                	sw	a4,56(sp)
200137fc:	da3e                	sw	a5,52(sp)
200137fe:	d842                	sw	a6,48(sp)
20013800:	d646                	sw	a7,44(sp)
20013802:	d472                	sw	t3,40(sp)
20013804:	d276                	sw	t4,36(sp)
20013806:	d07a                	sw	t5,32(sp)
20013808:	ce7e                	sw	t6,28(sp)
2001380a:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:240
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC5);
2001380c:	f00ff0ef          	jal	ra,20012f0c <__metal_myhart_id>
20013810:	872a                	mv	a4,a0
20013812:	800017b7          	lui	a5,0x80001
20013816:	070a                	slli	a4,a4,0x2
20013818:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
2001381c:	97ba                	add	a5,a5,a4
2001381e:	439c                	lw	a5,0(a5)
20013820:	faf42623          	sw	a5,-84(s0)
20013824:	fac42783          	lw	a5,-84(s0)
20013828:	c78d                	beqz	a5,20013852 <metal_lc5_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:240 (discriminator 1)
2001382a:	fac42503          	lw	a0,-84(s0)
2001382e:	e60ff0ef          	jal	ra,20012e8e <__metal_driver_cpu_interrupt_controller>
20013832:	faa42423          	sw	a0,-88(s0)
20013836:	fa842783          	lw	a5,-88(s0)
2001383a:	2907a783          	lw	a5,656(a5)
2001383e:	faf42223          	sw	a5,-92(s0)
20013842:	fa842783          	lw	a5,-88(s0)
20013846:	2887a783          	lw	a5,648(a5)
2001384a:	fa442583          	lw	a1,-92(s0)
2001384e:	4555                	li	a0,21
20013850:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:241
}
20013852:	0001                	nop
20013854:	40f6                	lw	ra,92(sp)
20013856:	42e6                	lw	t0,88(sp)
20013858:	4356                	lw	t1,84(sp)
2001385a:	43c6                	lw	t2,80(sp)
2001385c:	4436                	lw	s0,76(sp)
2001385e:	4526                	lw	a0,72(sp)
20013860:	4596                	lw	a1,68(sp)
20013862:	4606                	lw	a2,64(sp)
20013864:	56f2                	lw	a3,60(sp)
20013866:	5762                	lw	a4,56(sp)
20013868:	57d2                	lw	a5,52(sp)
2001386a:	5842                	lw	a6,48(sp)
2001386c:	58b2                	lw	a7,44(sp)
2001386e:	5e22                	lw	t3,40(sp)
20013870:	5e92                	lw	t4,36(sp)
20013872:	5f02                	lw	t5,32(sp)
20013874:	4ff2                	lw	t6,28(sp)
20013876:	6125                	addi	sp,sp,96
20013878:	30200073          	mret

2001387c <metal_lc6_interrupt_vector_handler>:
metal_lc6_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:244

/* The metal_lc6_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc6_interrupt_vector_handler(void) {
2001387c:	711d                	addi	sp,sp,-96
2001387e:	ce86                	sw	ra,92(sp)
20013880:	cc96                	sw	t0,88(sp)
20013882:	ca9a                	sw	t1,84(sp)
20013884:	c89e                	sw	t2,80(sp)
20013886:	c6a2                	sw	s0,76(sp)
20013888:	c4aa                	sw	a0,72(sp)
2001388a:	c2ae                	sw	a1,68(sp)
2001388c:	c0b2                	sw	a2,64(sp)
2001388e:	de36                	sw	a3,60(sp)
20013890:	dc3a                	sw	a4,56(sp)
20013892:	da3e                	sw	a5,52(sp)
20013894:	d842                	sw	a6,48(sp)
20013896:	d646                	sw	a7,44(sp)
20013898:	d472                	sw	t3,40(sp)
2001389a:	d276                	sw	t4,36(sp)
2001389c:	d07a                	sw	t5,32(sp)
2001389e:	ce7e                	sw	t6,28(sp)
200138a0:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:245
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC6);
200138a2:	e6aff0ef          	jal	ra,20012f0c <__metal_myhart_id>
200138a6:	872a                	mv	a4,a0
200138a8:	800017b7          	lui	a5,0x80001
200138ac:	070a                	slli	a4,a4,0x2
200138ae:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
200138b2:	97ba                	add	a5,a5,a4
200138b4:	439c                	lw	a5,0(a5)
200138b6:	faf42623          	sw	a5,-84(s0)
200138ba:	fac42783          	lw	a5,-84(s0)
200138be:	c78d                	beqz	a5,200138e8 <metal_lc6_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:245 (discriminator 1)
200138c0:	fac42503          	lw	a0,-84(s0)
200138c4:	dcaff0ef          	jal	ra,20012e8e <__metal_driver_cpu_interrupt_controller>
200138c8:	faa42423          	sw	a0,-88(s0)
200138cc:	fa842783          	lw	a5,-88(s0)
200138d0:	2a87a783          	lw	a5,680(a5)
200138d4:	faf42223          	sw	a5,-92(s0)
200138d8:	fa842783          	lw	a5,-88(s0)
200138dc:	2a07a783          	lw	a5,672(a5)
200138e0:	fa442583          	lw	a1,-92(s0)
200138e4:	4559                	li	a0,22
200138e6:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:246
}
200138e8:	0001                	nop
200138ea:	40f6                	lw	ra,92(sp)
200138ec:	42e6                	lw	t0,88(sp)
200138ee:	4356                	lw	t1,84(sp)
200138f0:	43c6                	lw	t2,80(sp)
200138f2:	4436                	lw	s0,76(sp)
200138f4:	4526                	lw	a0,72(sp)
200138f6:	4596                	lw	a1,68(sp)
200138f8:	4606                	lw	a2,64(sp)
200138fa:	56f2                	lw	a3,60(sp)
200138fc:	5762                	lw	a4,56(sp)
200138fe:	57d2                	lw	a5,52(sp)
20013900:	5842                	lw	a6,48(sp)
20013902:	58b2                	lw	a7,44(sp)
20013904:	5e22                	lw	t3,40(sp)
20013906:	5e92                	lw	t4,36(sp)
20013908:	5f02                	lw	t5,32(sp)
2001390a:	4ff2                	lw	t6,28(sp)
2001390c:	6125                	addi	sp,sp,96
2001390e:	30200073          	mret

20013912 <metal_lc7_interrupt_vector_handler>:
metal_lc7_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:249

/* The metal_lc7_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc7_interrupt_vector_handler(void) {
20013912:	711d                	addi	sp,sp,-96
20013914:	ce86                	sw	ra,92(sp)
20013916:	cc96                	sw	t0,88(sp)
20013918:	ca9a                	sw	t1,84(sp)
2001391a:	c89e                	sw	t2,80(sp)
2001391c:	c6a2                	sw	s0,76(sp)
2001391e:	c4aa                	sw	a0,72(sp)
20013920:	c2ae                	sw	a1,68(sp)
20013922:	c0b2                	sw	a2,64(sp)
20013924:	de36                	sw	a3,60(sp)
20013926:	dc3a                	sw	a4,56(sp)
20013928:	da3e                	sw	a5,52(sp)
2001392a:	d842                	sw	a6,48(sp)
2001392c:	d646                	sw	a7,44(sp)
2001392e:	d472                	sw	t3,40(sp)
20013930:	d276                	sw	t4,36(sp)
20013932:	d07a                	sw	t5,32(sp)
20013934:	ce7e                	sw	t6,28(sp)
20013936:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:250
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC7);
20013938:	dd4ff0ef          	jal	ra,20012f0c <__metal_myhart_id>
2001393c:	872a                	mv	a4,a0
2001393e:	800017b7          	lui	a5,0x80001
20013942:	070a                	slli	a4,a4,0x2
20013944:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20013948:	97ba                	add	a5,a5,a4
2001394a:	439c                	lw	a5,0(a5)
2001394c:	faf42623          	sw	a5,-84(s0)
20013950:	fac42783          	lw	a5,-84(s0)
20013954:	c78d                	beqz	a5,2001397e <metal_lc7_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:250 (discriminator 1)
20013956:	fac42503          	lw	a0,-84(s0)
2001395a:	d34ff0ef          	jal	ra,20012e8e <__metal_driver_cpu_interrupt_controller>
2001395e:	faa42423          	sw	a0,-88(s0)
20013962:	fa842783          	lw	a5,-88(s0)
20013966:	2c07a783          	lw	a5,704(a5)
2001396a:	faf42223          	sw	a5,-92(s0)
2001396e:	fa842783          	lw	a5,-88(s0)
20013972:	2b87a783          	lw	a5,696(a5)
20013976:	fa442583          	lw	a1,-92(s0)
2001397a:	455d                	li	a0,23
2001397c:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:251
}
2001397e:	0001                	nop
20013980:	40f6                	lw	ra,92(sp)
20013982:	42e6                	lw	t0,88(sp)
20013984:	4356                	lw	t1,84(sp)
20013986:	43c6                	lw	t2,80(sp)
20013988:	4436                	lw	s0,76(sp)
2001398a:	4526                	lw	a0,72(sp)
2001398c:	4596                	lw	a1,68(sp)
2001398e:	4606                	lw	a2,64(sp)
20013990:	56f2                	lw	a3,60(sp)
20013992:	5762                	lw	a4,56(sp)
20013994:	57d2                	lw	a5,52(sp)
20013996:	5842                	lw	a6,48(sp)
20013998:	58b2                	lw	a7,44(sp)
2001399a:	5e22                	lw	t3,40(sp)
2001399c:	5e92                	lw	t4,36(sp)
2001399e:	5f02                	lw	t5,32(sp)
200139a0:	4ff2                	lw	t6,28(sp)
200139a2:	6125                	addi	sp,sp,96
200139a4:	30200073          	mret

200139a8 <metal_lc8_interrupt_vector_handler>:
metal_lc8_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:254

/* The metal_lc8_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc8_interrupt_vector_handler(void) {
200139a8:	711d                	addi	sp,sp,-96
200139aa:	ce86                	sw	ra,92(sp)
200139ac:	cc96                	sw	t0,88(sp)
200139ae:	ca9a                	sw	t1,84(sp)
200139b0:	c89e                	sw	t2,80(sp)
200139b2:	c6a2                	sw	s0,76(sp)
200139b4:	c4aa                	sw	a0,72(sp)
200139b6:	c2ae                	sw	a1,68(sp)
200139b8:	c0b2                	sw	a2,64(sp)
200139ba:	de36                	sw	a3,60(sp)
200139bc:	dc3a                	sw	a4,56(sp)
200139be:	da3e                	sw	a5,52(sp)
200139c0:	d842                	sw	a6,48(sp)
200139c2:	d646                	sw	a7,44(sp)
200139c4:	d472                	sw	t3,40(sp)
200139c6:	d276                	sw	t4,36(sp)
200139c8:	d07a                	sw	t5,32(sp)
200139ca:	ce7e                	sw	t6,28(sp)
200139cc:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:255
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC8);
200139ce:	d3eff0ef          	jal	ra,20012f0c <__metal_myhart_id>
200139d2:	872a                	mv	a4,a0
200139d4:	800017b7          	lui	a5,0x80001
200139d8:	070a                	slli	a4,a4,0x2
200139da:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
200139de:	97ba                	add	a5,a5,a4
200139e0:	439c                	lw	a5,0(a5)
200139e2:	faf42623          	sw	a5,-84(s0)
200139e6:	fac42783          	lw	a5,-84(s0)
200139ea:	c78d                	beqz	a5,20013a14 <metal_lc8_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:255 (discriminator 1)
200139ec:	fac42503          	lw	a0,-84(s0)
200139f0:	c9eff0ef          	jal	ra,20012e8e <__metal_driver_cpu_interrupt_controller>
200139f4:	faa42423          	sw	a0,-88(s0)
200139f8:	fa842783          	lw	a5,-88(s0)
200139fc:	2d87a783          	lw	a5,728(a5)
20013a00:	faf42223          	sw	a5,-92(s0)
20013a04:	fa842783          	lw	a5,-88(s0)
20013a08:	2d07a783          	lw	a5,720(a5)
20013a0c:	fa442583          	lw	a1,-92(s0)
20013a10:	4561                	li	a0,24
20013a12:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:256
}
20013a14:	0001                	nop
20013a16:	40f6                	lw	ra,92(sp)
20013a18:	42e6                	lw	t0,88(sp)
20013a1a:	4356                	lw	t1,84(sp)
20013a1c:	43c6                	lw	t2,80(sp)
20013a1e:	4436                	lw	s0,76(sp)
20013a20:	4526                	lw	a0,72(sp)
20013a22:	4596                	lw	a1,68(sp)
20013a24:	4606                	lw	a2,64(sp)
20013a26:	56f2                	lw	a3,60(sp)
20013a28:	5762                	lw	a4,56(sp)
20013a2a:	57d2                	lw	a5,52(sp)
20013a2c:	5842                	lw	a6,48(sp)
20013a2e:	58b2                	lw	a7,44(sp)
20013a30:	5e22                	lw	t3,40(sp)
20013a32:	5e92                	lw	t4,36(sp)
20013a34:	5f02                	lw	t5,32(sp)
20013a36:	4ff2                	lw	t6,28(sp)
20013a38:	6125                	addi	sp,sp,96
20013a3a:	30200073          	mret

20013a3e <metal_lc9_interrupt_vector_handler>:
metal_lc9_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:259

/* The metal_lc9_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc9_interrupt_vector_handler(void) {
20013a3e:	711d                	addi	sp,sp,-96
20013a40:	ce86                	sw	ra,92(sp)
20013a42:	cc96                	sw	t0,88(sp)
20013a44:	ca9a                	sw	t1,84(sp)
20013a46:	c89e                	sw	t2,80(sp)
20013a48:	c6a2                	sw	s0,76(sp)
20013a4a:	c4aa                	sw	a0,72(sp)
20013a4c:	c2ae                	sw	a1,68(sp)
20013a4e:	c0b2                	sw	a2,64(sp)
20013a50:	de36                	sw	a3,60(sp)
20013a52:	dc3a                	sw	a4,56(sp)
20013a54:	da3e                	sw	a5,52(sp)
20013a56:	d842                	sw	a6,48(sp)
20013a58:	d646                	sw	a7,44(sp)
20013a5a:	d472                	sw	t3,40(sp)
20013a5c:	d276                	sw	t4,36(sp)
20013a5e:	d07a                	sw	t5,32(sp)
20013a60:	ce7e                	sw	t6,28(sp)
20013a62:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:260
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC9);
20013a64:	ca8ff0ef          	jal	ra,20012f0c <__metal_myhart_id>
20013a68:	872a                	mv	a4,a0
20013a6a:	800017b7          	lui	a5,0x80001
20013a6e:	070a                	slli	a4,a4,0x2
20013a70:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20013a74:	97ba                	add	a5,a5,a4
20013a76:	439c                	lw	a5,0(a5)
20013a78:	faf42623          	sw	a5,-84(s0)
20013a7c:	fac42783          	lw	a5,-84(s0)
20013a80:	c78d                	beqz	a5,20013aaa <metal_lc9_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:260 (discriminator 1)
20013a82:	fac42503          	lw	a0,-84(s0)
20013a86:	c08ff0ef          	jal	ra,20012e8e <__metal_driver_cpu_interrupt_controller>
20013a8a:	faa42423          	sw	a0,-88(s0)
20013a8e:	fa842783          	lw	a5,-88(s0)
20013a92:	2f07a783          	lw	a5,752(a5)
20013a96:	faf42223          	sw	a5,-92(s0)
20013a9a:	fa842783          	lw	a5,-88(s0)
20013a9e:	2e87a783          	lw	a5,744(a5)
20013aa2:	fa442583          	lw	a1,-92(s0)
20013aa6:	4565                	li	a0,25
20013aa8:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:261
}
20013aaa:	0001                	nop
20013aac:	40f6                	lw	ra,92(sp)
20013aae:	42e6                	lw	t0,88(sp)
20013ab0:	4356                	lw	t1,84(sp)
20013ab2:	43c6                	lw	t2,80(sp)
20013ab4:	4436                	lw	s0,76(sp)
20013ab6:	4526                	lw	a0,72(sp)
20013ab8:	4596                	lw	a1,68(sp)
20013aba:	4606                	lw	a2,64(sp)
20013abc:	56f2                	lw	a3,60(sp)
20013abe:	5762                	lw	a4,56(sp)
20013ac0:	57d2                	lw	a5,52(sp)
20013ac2:	5842                	lw	a6,48(sp)
20013ac4:	58b2                	lw	a7,44(sp)
20013ac6:	5e22                	lw	t3,40(sp)
20013ac8:	5e92                	lw	t4,36(sp)
20013aca:	5f02                	lw	t5,32(sp)
20013acc:	4ff2                	lw	t6,28(sp)
20013ace:	6125                	addi	sp,sp,96
20013ad0:	30200073          	mret

20013ad4 <metal_lc10_interrupt_vector_handler>:
metal_lc10_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:265

/* The metal_lc10_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc10_interrupt_vector_handler(void) {
20013ad4:	711d                	addi	sp,sp,-96
20013ad6:	ce86                	sw	ra,92(sp)
20013ad8:	cc96                	sw	t0,88(sp)
20013ada:	ca9a                	sw	t1,84(sp)
20013adc:	c89e                	sw	t2,80(sp)
20013ade:	c6a2                	sw	s0,76(sp)
20013ae0:	c4aa                	sw	a0,72(sp)
20013ae2:	c2ae                	sw	a1,68(sp)
20013ae4:	c0b2                	sw	a2,64(sp)
20013ae6:	de36                	sw	a3,60(sp)
20013ae8:	dc3a                	sw	a4,56(sp)
20013aea:	da3e                	sw	a5,52(sp)
20013aec:	d842                	sw	a6,48(sp)
20013aee:	d646                	sw	a7,44(sp)
20013af0:	d472                	sw	t3,40(sp)
20013af2:	d276                	sw	t4,36(sp)
20013af4:	d07a                	sw	t5,32(sp)
20013af6:	ce7e                	sw	t6,28(sp)
20013af8:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:266
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC10);
20013afa:	c12ff0ef          	jal	ra,20012f0c <__metal_myhart_id>
20013afe:	872a                	mv	a4,a0
20013b00:	800017b7          	lui	a5,0x80001
20013b04:	070a                	slli	a4,a4,0x2
20013b06:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20013b0a:	97ba                	add	a5,a5,a4
20013b0c:	439c                	lw	a5,0(a5)
20013b0e:	faf42623          	sw	a5,-84(s0)
20013b12:	fac42783          	lw	a5,-84(s0)
20013b16:	c78d                	beqz	a5,20013b40 <metal_lc10_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:266 (discriminator 1)
20013b18:	fac42503          	lw	a0,-84(s0)
20013b1c:	b72ff0ef          	jal	ra,20012e8e <__metal_driver_cpu_interrupt_controller>
20013b20:	faa42423          	sw	a0,-88(s0)
20013b24:	fa842783          	lw	a5,-88(s0)
20013b28:	3087a783          	lw	a5,776(a5)
20013b2c:	faf42223          	sw	a5,-92(s0)
20013b30:	fa842783          	lw	a5,-88(s0)
20013b34:	3007a783          	lw	a5,768(a5)
20013b38:	fa442583          	lw	a1,-92(s0)
20013b3c:	4569                	li	a0,26
20013b3e:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:267
}
20013b40:	0001                	nop
20013b42:	40f6                	lw	ra,92(sp)
20013b44:	42e6                	lw	t0,88(sp)
20013b46:	4356                	lw	t1,84(sp)
20013b48:	43c6                	lw	t2,80(sp)
20013b4a:	4436                	lw	s0,76(sp)
20013b4c:	4526                	lw	a0,72(sp)
20013b4e:	4596                	lw	a1,68(sp)
20013b50:	4606                	lw	a2,64(sp)
20013b52:	56f2                	lw	a3,60(sp)
20013b54:	5762                	lw	a4,56(sp)
20013b56:	57d2                	lw	a5,52(sp)
20013b58:	5842                	lw	a6,48(sp)
20013b5a:	58b2                	lw	a7,44(sp)
20013b5c:	5e22                	lw	t3,40(sp)
20013b5e:	5e92                	lw	t4,36(sp)
20013b60:	5f02                	lw	t5,32(sp)
20013b62:	4ff2                	lw	t6,28(sp)
20013b64:	6125                	addi	sp,sp,96
20013b66:	30200073          	mret

20013b6a <metal_lc11_interrupt_vector_handler>:
metal_lc11_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:271

/* The metal_lc11_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc11_interrupt_vector_handler(void) {
20013b6a:	711d                	addi	sp,sp,-96
20013b6c:	ce86                	sw	ra,92(sp)
20013b6e:	cc96                	sw	t0,88(sp)
20013b70:	ca9a                	sw	t1,84(sp)
20013b72:	c89e                	sw	t2,80(sp)
20013b74:	c6a2                	sw	s0,76(sp)
20013b76:	c4aa                	sw	a0,72(sp)
20013b78:	c2ae                	sw	a1,68(sp)
20013b7a:	c0b2                	sw	a2,64(sp)
20013b7c:	de36                	sw	a3,60(sp)
20013b7e:	dc3a                	sw	a4,56(sp)
20013b80:	da3e                	sw	a5,52(sp)
20013b82:	d842                	sw	a6,48(sp)
20013b84:	d646                	sw	a7,44(sp)
20013b86:	d472                	sw	t3,40(sp)
20013b88:	d276                	sw	t4,36(sp)
20013b8a:	d07a                	sw	t5,32(sp)
20013b8c:	ce7e                	sw	t6,28(sp)
20013b8e:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:272
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC11);
20013b90:	b7cff0ef          	jal	ra,20012f0c <__metal_myhart_id>
20013b94:	872a                	mv	a4,a0
20013b96:	800017b7          	lui	a5,0x80001
20013b9a:	070a                	slli	a4,a4,0x2
20013b9c:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20013ba0:	97ba                	add	a5,a5,a4
20013ba2:	439c                	lw	a5,0(a5)
20013ba4:	faf42623          	sw	a5,-84(s0)
20013ba8:	fac42783          	lw	a5,-84(s0)
20013bac:	c78d                	beqz	a5,20013bd6 <metal_lc11_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:272 (discriminator 1)
20013bae:	fac42503          	lw	a0,-84(s0)
20013bb2:	adcff0ef          	jal	ra,20012e8e <__metal_driver_cpu_interrupt_controller>
20013bb6:	faa42423          	sw	a0,-88(s0)
20013bba:	fa842783          	lw	a5,-88(s0)
20013bbe:	3207a783          	lw	a5,800(a5)
20013bc2:	faf42223          	sw	a5,-92(s0)
20013bc6:	fa842783          	lw	a5,-88(s0)
20013bca:	3187a783          	lw	a5,792(a5)
20013bce:	fa442583          	lw	a1,-92(s0)
20013bd2:	456d                	li	a0,27
20013bd4:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:273
}
20013bd6:	0001                	nop
20013bd8:	40f6                	lw	ra,92(sp)
20013bda:	42e6                	lw	t0,88(sp)
20013bdc:	4356                	lw	t1,84(sp)
20013bde:	43c6                	lw	t2,80(sp)
20013be0:	4436                	lw	s0,76(sp)
20013be2:	4526                	lw	a0,72(sp)
20013be4:	4596                	lw	a1,68(sp)
20013be6:	4606                	lw	a2,64(sp)
20013be8:	56f2                	lw	a3,60(sp)
20013bea:	5762                	lw	a4,56(sp)
20013bec:	57d2                	lw	a5,52(sp)
20013bee:	5842                	lw	a6,48(sp)
20013bf0:	58b2                	lw	a7,44(sp)
20013bf2:	5e22                	lw	t3,40(sp)
20013bf4:	5e92                	lw	t4,36(sp)
20013bf6:	5f02                	lw	t5,32(sp)
20013bf8:	4ff2                	lw	t6,28(sp)
20013bfa:	6125                	addi	sp,sp,96
20013bfc:	30200073          	mret

20013c00 <metal_lc12_interrupt_vector_handler>:
metal_lc12_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:277

/* The metal_lc12_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc12_interrupt_vector_handler(void) {
20013c00:	711d                	addi	sp,sp,-96
20013c02:	ce86                	sw	ra,92(sp)
20013c04:	cc96                	sw	t0,88(sp)
20013c06:	ca9a                	sw	t1,84(sp)
20013c08:	c89e                	sw	t2,80(sp)
20013c0a:	c6a2                	sw	s0,76(sp)
20013c0c:	c4aa                	sw	a0,72(sp)
20013c0e:	c2ae                	sw	a1,68(sp)
20013c10:	c0b2                	sw	a2,64(sp)
20013c12:	de36                	sw	a3,60(sp)
20013c14:	dc3a                	sw	a4,56(sp)
20013c16:	da3e                	sw	a5,52(sp)
20013c18:	d842                	sw	a6,48(sp)
20013c1a:	d646                	sw	a7,44(sp)
20013c1c:	d472                	sw	t3,40(sp)
20013c1e:	d276                	sw	t4,36(sp)
20013c20:	d07a                	sw	t5,32(sp)
20013c22:	ce7e                	sw	t6,28(sp)
20013c24:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:278
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC12);
20013c26:	ae6ff0ef          	jal	ra,20012f0c <__metal_myhart_id>
20013c2a:	872a                	mv	a4,a0
20013c2c:	800017b7          	lui	a5,0x80001
20013c30:	070a                	slli	a4,a4,0x2
20013c32:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20013c36:	97ba                	add	a5,a5,a4
20013c38:	439c                	lw	a5,0(a5)
20013c3a:	faf42623          	sw	a5,-84(s0)
20013c3e:	fac42783          	lw	a5,-84(s0)
20013c42:	c78d                	beqz	a5,20013c6c <metal_lc12_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:278 (discriminator 1)
20013c44:	fac42503          	lw	a0,-84(s0)
20013c48:	a46ff0ef          	jal	ra,20012e8e <__metal_driver_cpu_interrupt_controller>
20013c4c:	faa42423          	sw	a0,-88(s0)
20013c50:	fa842783          	lw	a5,-88(s0)
20013c54:	3387a783          	lw	a5,824(a5)
20013c58:	faf42223          	sw	a5,-92(s0)
20013c5c:	fa842783          	lw	a5,-88(s0)
20013c60:	3307a783          	lw	a5,816(a5)
20013c64:	fa442583          	lw	a1,-92(s0)
20013c68:	4571                	li	a0,28
20013c6a:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:279
}
20013c6c:	0001                	nop
20013c6e:	40f6                	lw	ra,92(sp)
20013c70:	42e6                	lw	t0,88(sp)
20013c72:	4356                	lw	t1,84(sp)
20013c74:	43c6                	lw	t2,80(sp)
20013c76:	4436                	lw	s0,76(sp)
20013c78:	4526                	lw	a0,72(sp)
20013c7a:	4596                	lw	a1,68(sp)
20013c7c:	4606                	lw	a2,64(sp)
20013c7e:	56f2                	lw	a3,60(sp)
20013c80:	5762                	lw	a4,56(sp)
20013c82:	57d2                	lw	a5,52(sp)
20013c84:	5842                	lw	a6,48(sp)
20013c86:	58b2                	lw	a7,44(sp)
20013c88:	5e22                	lw	t3,40(sp)
20013c8a:	5e92                	lw	t4,36(sp)
20013c8c:	5f02                	lw	t5,32(sp)
20013c8e:	4ff2                	lw	t6,28(sp)
20013c90:	6125                	addi	sp,sp,96
20013c92:	30200073          	mret

20013c96 <metal_lc13_interrupt_vector_handler>:
metal_lc13_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:283

/* The metal_lc13_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc13_interrupt_vector_handler(void) {
20013c96:	711d                	addi	sp,sp,-96
20013c98:	ce86                	sw	ra,92(sp)
20013c9a:	cc96                	sw	t0,88(sp)
20013c9c:	ca9a                	sw	t1,84(sp)
20013c9e:	c89e                	sw	t2,80(sp)
20013ca0:	c6a2                	sw	s0,76(sp)
20013ca2:	c4aa                	sw	a0,72(sp)
20013ca4:	c2ae                	sw	a1,68(sp)
20013ca6:	c0b2                	sw	a2,64(sp)
20013ca8:	de36                	sw	a3,60(sp)
20013caa:	dc3a                	sw	a4,56(sp)
20013cac:	da3e                	sw	a5,52(sp)
20013cae:	d842                	sw	a6,48(sp)
20013cb0:	d646                	sw	a7,44(sp)
20013cb2:	d472                	sw	t3,40(sp)
20013cb4:	d276                	sw	t4,36(sp)
20013cb6:	d07a                	sw	t5,32(sp)
20013cb8:	ce7e                	sw	t6,28(sp)
20013cba:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:284
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC13);
20013cbc:	a50ff0ef          	jal	ra,20012f0c <__metal_myhart_id>
20013cc0:	872a                	mv	a4,a0
20013cc2:	800017b7          	lui	a5,0x80001
20013cc6:	070a                	slli	a4,a4,0x2
20013cc8:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20013ccc:	97ba                	add	a5,a5,a4
20013cce:	439c                	lw	a5,0(a5)
20013cd0:	faf42623          	sw	a5,-84(s0)
20013cd4:	fac42783          	lw	a5,-84(s0)
20013cd8:	c78d                	beqz	a5,20013d02 <metal_lc13_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:284 (discriminator 1)
20013cda:	fac42503          	lw	a0,-84(s0)
20013cde:	9b0ff0ef          	jal	ra,20012e8e <__metal_driver_cpu_interrupt_controller>
20013ce2:	faa42423          	sw	a0,-88(s0)
20013ce6:	fa842783          	lw	a5,-88(s0)
20013cea:	3507a783          	lw	a5,848(a5)
20013cee:	faf42223          	sw	a5,-92(s0)
20013cf2:	fa842783          	lw	a5,-88(s0)
20013cf6:	3487a783          	lw	a5,840(a5)
20013cfa:	fa442583          	lw	a1,-92(s0)
20013cfe:	4575                	li	a0,29
20013d00:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:285
}
20013d02:	0001                	nop
20013d04:	40f6                	lw	ra,92(sp)
20013d06:	42e6                	lw	t0,88(sp)
20013d08:	4356                	lw	t1,84(sp)
20013d0a:	43c6                	lw	t2,80(sp)
20013d0c:	4436                	lw	s0,76(sp)
20013d0e:	4526                	lw	a0,72(sp)
20013d10:	4596                	lw	a1,68(sp)
20013d12:	4606                	lw	a2,64(sp)
20013d14:	56f2                	lw	a3,60(sp)
20013d16:	5762                	lw	a4,56(sp)
20013d18:	57d2                	lw	a5,52(sp)
20013d1a:	5842                	lw	a6,48(sp)
20013d1c:	58b2                	lw	a7,44(sp)
20013d1e:	5e22                	lw	t3,40(sp)
20013d20:	5e92                	lw	t4,36(sp)
20013d22:	5f02                	lw	t5,32(sp)
20013d24:	4ff2                	lw	t6,28(sp)
20013d26:	6125                	addi	sp,sp,96
20013d28:	30200073          	mret

20013d2c <metal_lc14_interrupt_vector_handler>:
metal_lc14_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:289

/* The metal_lc14_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc14_interrupt_vector_handler(void) {
20013d2c:	711d                	addi	sp,sp,-96
20013d2e:	ce86                	sw	ra,92(sp)
20013d30:	cc96                	sw	t0,88(sp)
20013d32:	ca9a                	sw	t1,84(sp)
20013d34:	c89e                	sw	t2,80(sp)
20013d36:	c6a2                	sw	s0,76(sp)
20013d38:	c4aa                	sw	a0,72(sp)
20013d3a:	c2ae                	sw	a1,68(sp)
20013d3c:	c0b2                	sw	a2,64(sp)
20013d3e:	de36                	sw	a3,60(sp)
20013d40:	dc3a                	sw	a4,56(sp)
20013d42:	da3e                	sw	a5,52(sp)
20013d44:	d842                	sw	a6,48(sp)
20013d46:	d646                	sw	a7,44(sp)
20013d48:	d472                	sw	t3,40(sp)
20013d4a:	d276                	sw	t4,36(sp)
20013d4c:	d07a                	sw	t5,32(sp)
20013d4e:	ce7e                	sw	t6,28(sp)
20013d50:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:290
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC14);
20013d52:	9baff0ef          	jal	ra,20012f0c <__metal_myhart_id>
20013d56:	872a                	mv	a4,a0
20013d58:	800017b7          	lui	a5,0x80001
20013d5c:	070a                	slli	a4,a4,0x2
20013d5e:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20013d62:	97ba                	add	a5,a5,a4
20013d64:	439c                	lw	a5,0(a5)
20013d66:	faf42623          	sw	a5,-84(s0)
20013d6a:	fac42783          	lw	a5,-84(s0)
20013d6e:	c78d                	beqz	a5,20013d98 <metal_lc14_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:290 (discriminator 1)
20013d70:	fac42503          	lw	a0,-84(s0)
20013d74:	91aff0ef          	jal	ra,20012e8e <__metal_driver_cpu_interrupt_controller>
20013d78:	faa42423          	sw	a0,-88(s0)
20013d7c:	fa842783          	lw	a5,-88(s0)
20013d80:	3687a783          	lw	a5,872(a5)
20013d84:	faf42223          	sw	a5,-92(s0)
20013d88:	fa842783          	lw	a5,-88(s0)
20013d8c:	3607a783          	lw	a5,864(a5)
20013d90:	fa442583          	lw	a1,-92(s0)
20013d94:	4579                	li	a0,30
20013d96:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:291
}
20013d98:	0001                	nop
20013d9a:	40f6                	lw	ra,92(sp)
20013d9c:	42e6                	lw	t0,88(sp)
20013d9e:	4356                	lw	t1,84(sp)
20013da0:	43c6                	lw	t2,80(sp)
20013da2:	4436                	lw	s0,76(sp)
20013da4:	4526                	lw	a0,72(sp)
20013da6:	4596                	lw	a1,68(sp)
20013da8:	4606                	lw	a2,64(sp)
20013daa:	56f2                	lw	a3,60(sp)
20013dac:	5762                	lw	a4,56(sp)
20013dae:	57d2                	lw	a5,52(sp)
20013db0:	5842                	lw	a6,48(sp)
20013db2:	58b2                	lw	a7,44(sp)
20013db4:	5e22                	lw	t3,40(sp)
20013db6:	5e92                	lw	t4,36(sp)
20013db8:	5f02                	lw	t5,32(sp)
20013dba:	4ff2                	lw	t6,28(sp)
20013dbc:	6125                	addi	sp,sp,96
20013dbe:	30200073          	mret

20013dc2 <metal_lc15_interrupt_vector_handler>:
metal_lc15_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:295

/* The metal_lc15_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc15_interrupt_vector_handler(void) {
20013dc2:	711d                	addi	sp,sp,-96
20013dc4:	ce86                	sw	ra,92(sp)
20013dc6:	cc96                	sw	t0,88(sp)
20013dc8:	ca9a                	sw	t1,84(sp)
20013dca:	c89e                	sw	t2,80(sp)
20013dcc:	c6a2                	sw	s0,76(sp)
20013dce:	c4aa                	sw	a0,72(sp)
20013dd0:	c2ae                	sw	a1,68(sp)
20013dd2:	c0b2                	sw	a2,64(sp)
20013dd4:	de36                	sw	a3,60(sp)
20013dd6:	dc3a                	sw	a4,56(sp)
20013dd8:	da3e                	sw	a5,52(sp)
20013dda:	d842                	sw	a6,48(sp)
20013ddc:	d646                	sw	a7,44(sp)
20013dde:	d472                	sw	t3,40(sp)
20013de0:	d276                	sw	t4,36(sp)
20013de2:	d07a                	sw	t5,32(sp)
20013de4:	ce7e                	sw	t6,28(sp)
20013de6:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:296
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC15);
20013de8:	924ff0ef          	jal	ra,20012f0c <__metal_myhart_id>
20013dec:	872a                	mv	a4,a0
20013dee:	800017b7          	lui	a5,0x80001
20013df2:	070a                	slli	a4,a4,0x2
20013df4:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20013df8:	97ba                	add	a5,a5,a4
20013dfa:	439c                	lw	a5,0(a5)
20013dfc:	faf42623          	sw	a5,-84(s0)
20013e00:	fac42783          	lw	a5,-84(s0)
20013e04:	c78d                	beqz	a5,20013e2e <metal_lc15_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:296 (discriminator 1)
20013e06:	fac42503          	lw	a0,-84(s0)
20013e0a:	884ff0ef          	jal	ra,20012e8e <__metal_driver_cpu_interrupt_controller>
20013e0e:	faa42423          	sw	a0,-88(s0)
20013e12:	fa842783          	lw	a5,-88(s0)
20013e16:	3807a783          	lw	a5,896(a5)
20013e1a:	faf42223          	sw	a5,-92(s0)
20013e1e:	fa842783          	lw	a5,-88(s0)
20013e22:	3787a783          	lw	a5,888(a5)
20013e26:	fa442583          	lw	a1,-92(s0)
20013e2a:	457d                	li	a0,31
20013e2c:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:297
}
20013e2e:	0001                	nop
20013e30:	40f6                	lw	ra,92(sp)
20013e32:	42e6                	lw	t0,88(sp)
20013e34:	4356                	lw	t1,84(sp)
20013e36:	43c6                	lw	t2,80(sp)
20013e38:	4436                	lw	s0,76(sp)
20013e3a:	4526                	lw	a0,72(sp)
20013e3c:	4596                	lw	a1,68(sp)
20013e3e:	4606                	lw	a2,64(sp)
20013e40:	56f2                	lw	a3,60(sp)
20013e42:	5762                	lw	a4,56(sp)
20013e44:	57d2                	lw	a5,52(sp)
20013e46:	5842                	lw	a6,48(sp)
20013e48:	58b2                	lw	a7,44(sp)
20013e4a:	5e22                	lw	t3,40(sp)
20013e4c:	5e92                	lw	t4,36(sp)
20013e4e:	5f02                	lw	t5,32(sp)
20013e50:	4ff2                	lw	t6,28(sp)
20013e52:	6125                	addi	sp,sp,96
20013e54:	30200073          	mret

20013e58 <__metal_controller_interrupt_vector_mode>:
__metal_controller_interrupt_vector_mode():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:299

metal_vector_mode __metal_controller_interrupt_vector_mode(void) {
20013e58:	1101                	addi	sp,sp,-32
20013e5a:	ce22                	sw	s0,28(sp)
20013e5c:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:302
    uintptr_t val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
20013e5e:	305027f3          	csrr	a5,mtvec
20013e62:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:303
    val &= METAL_MTVEC_MASK;
20013e66:	fec42783          	lw	a5,-20(s0)
20013e6a:	03f7f793          	andi	a5,a5,63
20013e6e:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:305

    switch (val) {
20013e72:	fec42703          	lw	a4,-20(s0)
20013e76:	4789                	li	a5,2
20013e78:	00f70d63          	beq	a4,a5,20013e92 <__metal_controller_interrupt_vector_mode+0x3a>
20013e7c:	fec42703          	lw	a4,-20(s0)
20013e80:	478d                	li	a5,3
20013e82:	00f70a63          	beq	a4,a5,20013e96 <__metal_controller_interrupt_vector_mode+0x3e>
20013e86:	fec42703          	lw	a4,-20(s0)
20013e8a:	4785                	li	a5,1
20013e8c:	00f70763          	beq	a4,a5,20013e9a <__metal_controller_interrupt_vector_mode+0x42>
20013e90:	a039                	j	20013e9e <__metal_controller_interrupt_vector_mode+0x46>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:307
    case METAL_MTVEC_CLIC:
        return METAL_SELECTIVE_VECTOR_MODE;
20013e92:	478d                	li	a5,3
20013e94:	a031                	j	20013ea0 <__metal_controller_interrupt_vector_mode+0x48>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:309
    case METAL_MTVEC_CLIC_VECTORED:
        return METAL_HARDWARE_VECTOR_MODE;
20013e96:	4791                	li	a5,4
20013e98:	a021                	j	20013ea0 <__metal_controller_interrupt_vector_mode+0x48>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:311
    case METAL_MTVEC_VECTORED:
        return METAL_VECTOR_MODE;
20013e9a:	4785                	li	a5,1
20013e9c:	a011                	j	20013ea0 <__metal_controller_interrupt_vector_mode+0x48>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:313
    }
    return METAL_DIRECT_MODE;
20013e9e:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:314
}
20013ea0:	853e                	mv	a0,a5
20013ea2:	4472                	lw	s0,28(sp)
20013ea4:	6105                	addi	sp,sp,32
20013ea6:	8082                	ret

20013ea8 <__metal_controller_interrupt_vector>:
__metal_controller_interrupt_vector():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:317

void __metal_controller_interrupt_vector(metal_vector_mode mode,
                                         void *vec_table) {
20013ea8:	7179                	addi	sp,sp,-48
20013eaa:	d622                	sw	s0,44(sp)
20013eac:	1800                	addi	s0,sp,48
20013eae:	fca42e23          	sw	a0,-36(s0)
20013eb2:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:320
    uintptr_t trap_entry, val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
20013eb6:	305027f3          	csrr	a5,mtvec
20013eba:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:321
    val &= ~(METAL_MTVEC_CLIC_VECTORED | METAL_MTVEC_CLIC_RESERVED);
20013ebe:	fec42783          	lw	a5,-20(s0)
20013ec2:	fc07f793          	andi	a5,a5,-64
20013ec6:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:322
    trap_entry = (uintptr_t)vec_table;
20013eca:	fd842783          	lw	a5,-40(s0)
20013ece:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:324

    switch (mode) {
20013ed2:	fdc42703          	lw	a4,-36(s0)
20013ed6:	4791                	li	a5,4
20013ed8:	06e7e063          	bltu	a5,a4,20013f38 <__metal_controller_interrupt_vector+0x90>
20013edc:	fdc42783          	lw	a5,-36(s0)
20013ee0:	00279713          	slli	a4,a5,0x2
20013ee4:	200107b7          	lui	a5,0x20010
20013ee8:	59478793          	addi	a5,a5,1428 # 20010594 <__metal_driver_vtable_riscv_clint0+0x64>
20013eec:	97ba                	add	a5,a5,a4
20013eee:	439c                	lw	a5,0(a5)
20013ef0:	8782                	jr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:327
    case METAL_SELECTIVE_NONVECTOR_MODE:
    case METAL_SELECTIVE_VECTOR_MODE:
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
20013ef2:	fe842783          	lw	a5,-24(s0)
20013ef6:	30779073          	csrw	mtvt,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:328
        __asm__ volatile("csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC));
20013efa:	fec42783          	lw	a5,-20(s0)
20013efe:	0027e793          	ori	a5,a5,2
20013f02:	30579073          	csrw	mtvec,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:329
        break;
20013f06:	a80d                	j	20013f38 <__metal_controller_interrupt_vector+0x90>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:331
    case METAL_HARDWARE_VECTOR_MODE:
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
20013f08:	fe842783          	lw	a5,-24(s0)
20013f0c:	30779073          	csrw	mtvt,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:333
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC_VECTORED));
20013f10:	fec42783          	lw	a5,-20(s0)
20013f14:	0037e793          	ori	a5,a5,3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:332
        __asm__ volatile(
20013f18:	30579073          	csrw	mtvec,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:334
        break;
20013f1c:	a831                	j	20013f38 <__metal_controller_interrupt_vector+0x90>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:337
    case METAL_VECTOR_MODE:
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(trap_entry | METAL_MTVEC_VECTORED));
20013f1e:	fe842783          	lw	a5,-24(s0)
20013f22:	0017e793          	ori	a5,a5,1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:336
        __asm__ volatile(
20013f26:	30579073          	csrw	mtvec,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:338
        break;
20013f2a:	a039                	j	20013f38 <__metal_controller_interrupt_vector+0x90>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:341
    case METAL_DIRECT_MODE:
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
20013f2c:	fe842783          	lw	a5,-24(s0)
20013f30:	9bf1                	andi	a5,a5,-4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:340
        __asm__ volatile(
20013f32:	30579073          	csrw	mtvec,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:342
        break;
20013f36:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:344
    }
}
20013f38:	0001                	nop
20013f3a:	5432                	lw	s0,44(sp)
20013f3c:	6145                	addi	sp,sp,48
20013f3e:	8082                	ret

20013f40 <__metal_valid_interrupt_id>:
__metal_valid_interrupt_id():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:346

int __metal_valid_interrupt_id(int id) {
20013f40:	1101                	addi	sp,sp,-32
20013f42:	ce22                	sw	s0,28(sp)
20013f44:	1000                	addi	s0,sp,32
20013f46:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
20013f4a:	fec42703          	lw	a4,-20(s0)
20013f4e:	47ad                	li	a5,11
20013f50:	04f70263          	beq	a4,a5,20013f94 <__metal_valid_interrupt_id+0x54>
20013f54:	fec42703          	lw	a4,-20(s0)
20013f58:	47ad                	li	a5,11
20013f5a:	00e7cd63          	blt	a5,a4,20013f74 <__metal_valid_interrupt_id+0x34>
20013f5e:	fec42703          	lw	a4,-20(s0)
20013f62:	478d                	li	a5,3
20013f64:	02f70863          	beq	a4,a5,20013f94 <__metal_valid_interrupt_id+0x54>
20013f68:	fec42703          	lw	a4,-20(s0)
20013f6c:	479d                	li	a5,7
20013f6e:	02f70363          	beq	a4,a5,20013f94 <__metal_valid_interrupt_id+0x54>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:370
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
    case METAL_INTERRUPT_ID_BEU:
        return 1;
    default:
        break;
20013f72:	a01d                	j	20013f98 <__metal_valid_interrupt_id+0x58>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
20013f74:	fec42703          	lw	a4,-20(s0)
20013f78:	47c1                	li	a5,16
20013f7a:	00f74f63          	blt	a4,a5,20013f98 <__metal_valid_interrupt_id+0x58>
20013f7e:	fec42703          	lw	a4,-20(s0)
20013f82:	47fd                	li	a5,31
20013f84:	00e7d863          	bge	a5,a4,20013f94 <__metal_valid_interrupt_id+0x54>
20013f88:	fec42703          	lw	a4,-20(s0)
20013f8c:	08000793          	li	a5,128
20013f90:	00f71463          	bne	a4,a5,20013f98 <__metal_valid_interrupt_id+0x58>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:368
        return 1;
20013f94:	4785                	li	a5,1
20013f96:	a019                	j	20013f9c <__metal_valid_interrupt_id+0x5c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:370
        break;
20013f98:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:373
    }

    return 0;
20013f9a:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:374
}
20013f9c:	853e                	mv	a0,a5
20013f9e:	4472                	lw	s0,28(sp)
20013fa0:	6105                	addi	sp,sp,32
20013fa2:	8082                	ret

20013fa4 <__metal_local_interrupt_enable>:
__metal_local_interrupt_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:377

int __metal_local_interrupt_enable(struct metal_interrupt *controller,
                                   metal_interrupt_id_e id, int enable) {
20013fa4:	7179                	addi	sp,sp,-48
20013fa6:	d606                	sw	ra,44(sp)
20013fa8:	d422                	sw	s0,40(sp)
20013faa:	1800                	addi	s0,sp,48
20013fac:	fca42e23          	sw	a0,-36(s0)
20013fb0:	fcb42c23          	sw	a1,-40(s0)
20013fb4:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:378
    int rc = 0;
20013fb8:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:380

    if (!controller) {
20013fbc:	fdc42783          	lw	a5,-36(s0)
20013fc0:	e399                	bnez	a5,20013fc6 <__metal_local_interrupt_enable+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:381
        return -1;
20013fc2:	57fd                	li	a5,-1
20013fc4:	a849                	j	20014056 <__metal_local_interrupt_enable+0xb2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:384
    }

    switch (id) {
20013fc6:	fd842703          	lw	a4,-40(s0)
20013fca:	47fd                	li	a5,31
20013fcc:	08e7e063          	bltu	a5,a4,2001404c <__metal_local_interrupt_enable+0xa8>
20013fd0:	fd842783          	lw	a5,-40(s0)
20013fd4:	00279713          	slli	a4,a5,0x2
20013fd8:	200107b7          	lui	a5,0x20010
20013fdc:	5a878793          	addi	a5,a5,1448 # 200105a8 <__metal_driver_vtable_riscv_clint0+0x78>
20013fe0:	97ba                	add	a5,a5,a4
20013fe2:	439c                	lw	a5,0(a5)
20013fe4:	8782                	jr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:386
    case METAL_INTERRUPT_ID_BASE:
        if (enable) {
20013fe6:	fd442783          	lw	a5,-44(s0)
20013fea:	c781                	beqz	a5,20013ff2 <__metal_local_interrupt_enable+0x4e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:387
            __metal_interrupt_global_enable();
20013fec:	f3bfe0ef          	jal	ra,20012f26 <__metal_interrupt_global_enable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:391
        } else {
            __metal_interrupt_global_disable();
        }
        break;
20013ff0:	a08d                	j	20014052 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:389
            __metal_interrupt_global_disable();
20013ff2:	f4dfe0ef          	jal	ra,20012f3e <__metal_interrupt_global_disable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:391
        break;
20013ff6:	a8b1                	j	20014052 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:393
    case METAL_INTERRUPT_ID_SW:
        if (enable) {
20013ff8:	fd442783          	lw	a5,-44(s0)
20013ffc:	c781                	beqz	a5,20014004 <__metal_local_interrupt_enable+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:394
            __metal_interrupt_software_enable();
20013ffe:	f59fe0ef          	jal	ra,20012f56 <__metal_interrupt_software_enable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:398
        } else {
            __metal_interrupt_software_disable();
        }
        break;
20014002:	a881                	j	20014052 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:396
            __metal_interrupt_software_disable();
20014004:	f6bfe0ef          	jal	ra,20012f6e <__metal_interrupt_software_disable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:398
        break;
20014008:	a0a9                	j	20014052 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:400
    case METAL_INTERRUPT_ID_TMR:
        if (enable) {
2001400a:	fd442783          	lw	a5,-44(s0)
2001400e:	c781                	beqz	a5,20014016 <__metal_local_interrupt_enable+0x72>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:401
            __metal_interrupt_timer_enable();
20014010:	f77fe0ef          	jal	ra,20012f86 <__metal_interrupt_timer_enable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:405
        } else {
            __metal_interrupt_timer_disable();
        }
        break;
20014014:	a83d                	j	20014052 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:403
            __metal_interrupt_timer_disable();
20014016:	f8bfe0ef          	jal	ra,20012fa0 <__metal_interrupt_timer_disable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:405
        break;
2001401a:	a825                	j	20014052 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:407
    case METAL_INTERRUPT_ID_EXT:
        if (enable) {
2001401c:	fd442783          	lw	a5,-44(s0)
20014020:	c781                	beqz	a5,20014028 <__metal_local_interrupt_enable+0x84>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:408
            __metal_interrupt_external_enable();
20014022:	f99fe0ef          	jal	ra,20012fba <__metal_interrupt_external_enable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:412
        } else {
            __metal_interrupt_external_disable();
        }
        break;
20014026:	a035                	j	20014052 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:410
            __metal_interrupt_external_disable();
20014028:	faffe0ef          	jal	ra,20012fd6 <__metal_interrupt_external_disable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:412
        break;
2001402c:	a01d                	j	20014052 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:429
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        if (enable) {
2001402e:	fd442783          	lw	a5,-44(s0)
20014032:	c799                	beqz	a5,20014040 <__metal_local_interrupt_enable+0x9c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:430
            __metal_interrupt_local_enable(id);
20014034:	fd842783          	lw	a5,-40(s0)
20014038:	853e                	mv	a0,a5
2001403a:	fb9fe0ef          	jal	ra,20012ff2 <__metal_interrupt_local_enable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:434
        } else {
            __metal_interrupt_local_disable(id);
        }
        break;
2001403e:	a811                	j	20014052 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:432
            __metal_interrupt_local_disable(id);
20014040:	fd842783          	lw	a5,-40(s0)
20014044:	853e                	mv	a0,a5
20014046:	fd9fe0ef          	jal	ra,2001301e <__metal_interrupt_local_disable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:434
        break;
2001404a:	a021                	j	20014052 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:436
    default:
        rc = -1;
2001404c:	57fd                	li	a5,-1
2001404e:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:438
    }
    return rc;
20014052:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:439
}
20014056:	853e                	mv	a0,a5
20014058:	50b2                	lw	ra,44(sp)
2001405a:	5422                	lw	s0,40(sp)
2001405c:	6145                	addi	sp,sp,48
2001405e:	8082                	ret

20014060 <__metal_exception_register>:
__metal_exception_register():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:442

int __metal_exception_register(struct metal_interrupt *controller, int ecode,
                               metal_exception_handler_t isr) {
20014060:	7179                	addi	sp,sp,-48
20014062:	d622                	sw	s0,44(sp)
20014064:	1800                	addi	s0,sp,48
20014066:	fca42e23          	sw	a0,-36(s0)
2001406a:	fcb42c23          	sw	a1,-40(s0)
2001406e:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:443
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20014072:	fdc42783          	lw	a5,-36(s0)
20014076:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:445

    if ((ecode < METAL_MAX_EXCEPTION_CODE) && isr) {
2001407a:	fd842703          	lw	a4,-40(s0)
2001407e:	47ad                	li	a5,11
20014080:	02e7c263          	blt	a5,a4,200140a4 <__metal_exception_register+0x44>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:445 (discriminator 1)
20014084:	fd442783          	lw	a5,-44(s0)
20014088:	cf91                	beqz	a5,200140a4 <__metal_exception_register+0x44>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:446
        intc->metal_exception_table[ecode] = isr;
2001408a:	fec42703          	lw	a4,-20(s0)
2001408e:	fd842783          	lw	a5,-40(s0)
20014092:	0e878793          	addi	a5,a5,232
20014096:	078a                	slli	a5,a5,0x2
20014098:	97ba                	add	a5,a5,a4
2001409a:	fd442703          	lw	a4,-44(s0)
2001409e:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:447
        return 0;
200140a0:	4781                	li	a5,0
200140a2:	a011                	j	200140a6 <__metal_exception_register+0x46>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:449
    }
    return -1;
200140a4:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:450
}
200140a6:	853e                	mv	a0,a5
200140a8:	5432                	lw	s0,44(sp)
200140aa:	6145                	addi	sp,sp,48
200140ac:	8082                	ret

200140ae <__metal_driver_riscv_cpu_controller_interrupt_init>:
__metal_driver_riscv_cpu_controller_interrupt_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:454

extern void early_trap_vector(void);
void __metal_driver_riscv_cpu_controller_interrupt_init(
    struct metal_interrupt *controller) {
200140ae:	7179                	addi	sp,sp,-48
200140b0:	d606                	sw	ra,44(sp)
200140b2:	d422                	sw	s0,40(sp)
200140b4:	1800                	addi	s0,sp,48
200140b6:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:455
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
200140ba:	fdc42783          	lw	a5,-36(s0)
200140be:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:457

    if (!intc->init_done) {
200140c2:	fe442783          	lw	a5,-28(s0)
200140c6:	43dc                	lw	a5,4(a5)
200140c8:	efdd                	bnez	a5,20014186 <__metal_driver_riscv_cpu_controller_interrupt_init+0xd8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:459
        /* Default to use direct interrupt, setup sw cb table*/
        for (int i = 0; i < METAL_MAX_MI; i++) {
200140ca:	fe042623          	sw	zero,-20(s0)
200140ce:	a0b9                	j	2001411c <__metal_driver_riscv_cpu_controller_interrupt_init+0x6e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:460 (discriminator 3)
            intc->metal_int_table[i].handler = NULL;
200140d0:	fe442683          	lw	a3,-28(s0)
200140d4:	fec42703          	lw	a4,-20(s0)
200140d8:	87ba                	mv	a5,a4
200140da:	0786                	slli	a5,a5,0x1
200140dc:	97ba                	add	a5,a5,a4
200140de:	078e                	slli	a5,a5,0x3
200140e0:	97b6                	add	a5,a5,a3
200140e2:	0807a823          	sw	zero,144(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:461 (discriminator 3)
            intc->metal_int_table[i].sub_int = NULL;
200140e6:	fe442683          	lw	a3,-28(s0)
200140ea:	fec42703          	lw	a4,-20(s0)
200140ee:	87ba                	mv	a5,a4
200140f0:	0786                	slli	a5,a5,0x1
200140f2:	97ba                	add	a5,a5,a4
200140f4:	078e                	slli	a5,a5,0x3
200140f6:	97b6                	add	a5,a5,a3
200140f8:	0807aa23          	sw	zero,148(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:462 (discriminator 3)
            intc->metal_int_table[i].exint_data = NULL;
200140fc:	fe442683          	lw	a3,-28(s0)
20014100:	fec42703          	lw	a4,-20(s0)
20014104:	87ba                	mv	a5,a4
20014106:	0786                	slli	a5,a5,0x1
20014108:	97ba                	add	a5,a5,a4
2001410a:	078e                	slli	a5,a5,0x3
2001410c:	97b6                	add	a5,a5,a3
2001410e:	0807ac23          	sw	zero,152(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 3)
        for (int i = 0; i < METAL_MAX_MI; i++) {
20014112:	fec42783          	lw	a5,-20(s0)
20014116:	0785                	addi	a5,a5,1
20014118:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 1)
2001411c:	fec42703          	lw	a4,-20(s0)
20014120:	47fd                	li	a5,31
20014122:	fae7d7e3          	bge	a5,a4,200140d0 <__metal_driver_riscv_cpu_controller_interrupt_init+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:465
        }

        for (int i = 0; i < METAL_MAX_ME; i++) {
20014126:	fe042423          	sw	zero,-24(s0)
2001412a:	a01d                	j	20014150 <__metal_driver_riscv_cpu_controller_interrupt_init+0xa2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:466 (discriminator 3)
            intc->metal_exception_table[i] = __metal_default_exception_handler;
2001412c:	fe442703          	lw	a4,-28(s0)
20014130:	fe842783          	lw	a5,-24(s0)
20014134:	0e878793          	addi	a5,a5,232
20014138:	078a                	slli	a5,a5,0x2
2001413a:	97ba                	add	a5,a5,a4
2001413c:	20013737          	lui	a4,0x20013
20014140:	04a70713          	addi	a4,a4,74 # 2001304a <__metal_default_exception_handler>
20014144:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 3)
        for (int i = 0; i < METAL_MAX_ME; i++) {
20014146:	fe842783          	lw	a5,-24(s0)
2001414a:	0785                	addi	a5,a5,1
2001414c:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 1)
20014150:	fe842703          	lw	a4,-24(s0)
20014154:	47ad                	li	a5,11
20014156:	fce7dbe3          	bge	a5,a4,2001412c <__metal_driver_riscv_cpu_controller_interrupt_init+0x7e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:475
         * Set the real trap handler if the value of mtvec is equal to
         * early_trap_vector. If mtvec is not equal to early_trap_vector,
         * that means user has own trap handler, then we don't overwrite it.
         */
        uintptr_t mtvec;
        __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
2001415a:	305027f3          	csrr	a5,mtvec
2001415e:	fef42023          	sw	a5,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:476
        if (mtvec == (uintptr_t)&early_trap_vector) {
20014162:	200107b7          	lui	a5,0x20010
20014166:	13c78793          	addi	a5,a5,316 # 2001013c <early_trap_vector>
2001416a:	fe042703          	lw	a4,-32(s0)
2001416e:	00f71863          	bne	a4,a5,2001417e <__metal_driver_riscv_cpu_controller_interrupt_init+0xd0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:477
            __metal_controller_interrupt_vector(
20014172:	200137b7          	lui	a5,0x20013
20014176:	30078593          	addi	a1,a5,768 # 20013300 <__metal_exception_handler>
2001417a:	4501                	li	a0,0
2001417c:	3335                	jal	20013ea8 <__metal_controller_interrupt_vector>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:481
                METAL_DIRECT_MODE,
                (void *)(uintptr_t)&__metal_exception_handler);
        }
        intc->init_done = 1;
2001417e:	fe442783          	lw	a5,-28(s0)
20014182:	4705                	li	a4,1
20014184:	c3d8                	sw	a4,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:483
    }
}
20014186:	0001                	nop
20014188:	50b2                	lw	ra,44(sp)
2001418a:	5422                	lw	s0,40(sp)
2001418c:	6145                	addi	sp,sp,48
2001418e:	8082                	ret

20014190 <__metal_driver_riscv_cpu_controller_interrupt_register>:
__metal_driver_riscv_cpu_controller_interrupt_register():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:487

int __metal_driver_riscv_cpu_controller_interrupt_register(
    struct metal_interrupt *controller, int id, metal_interrupt_handler_t isr,
    void *priv) {
20014190:	7179                	addi	sp,sp,-48
20014192:	d606                	sw	ra,44(sp)
20014194:	d422                	sw	s0,40(sp)
20014196:	1800                	addi	s0,sp,48
20014198:	fca42e23          	sw	a0,-36(s0)
2001419c:	fcb42c23          	sw	a1,-40(s0)
200141a0:	fcc42a23          	sw	a2,-44(s0)
200141a4:	fcd42823          	sw	a3,-48(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:488
    int rc = 0;
200141a8:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:489
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
200141ac:	fdc42783          	lw	a5,-36(s0)
200141b0:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:491

    if (!__metal_valid_interrupt_id(id)) {
200141b4:	fd842503          	lw	a0,-40(s0)
200141b8:	3361                	jal	20013f40 <__metal_valid_interrupt_id>
200141ba:	87aa                	mv	a5,a0
200141bc:	e399                	bnez	a5,200141c2 <__metal_driver_riscv_cpu_controller_interrupt_register+0x32>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:492
        return -11;
200141be:	57d5                	li	a5,-11
200141c0:	aa71                	j	2001435c <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:494
    }
    if ((id == METAL_INTERRUPT_ID_BEU) &&
200141c2:	fd842703          	lw	a4,-40(s0)
200141c6:	08000793          	li	a5,128
200141ca:	00f71763          	bne	a4,a5,200141d8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x48>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:495 (discriminator 1)
        (__metal_controller_interrupt_vector_mode() != METAL_DIRECT_MODE)) {
200141ce:	3169                	jal	20013e58 <__metal_controller_interrupt_vector_mode>
200141d0:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:494 (discriminator 1)
    if ((id == METAL_INTERRUPT_ID_BEU) &&
200141d2:	c399                	beqz	a5,200141d8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x48>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:498
        /* Only allow registration of the bus error unit interrupt if
         * interrupt vectoring if off */
        return -13;
200141d4:	57cd                	li	a5,-13
200141d6:	a259                	j	2001435c <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:501
    }

    if (isr) {
200141d8:	fd442783          	lw	a5,-44(s0)
200141dc:	cfb9                	beqz	a5,2001423a <__metal_driver_riscv_cpu_controller_interrupt_register+0xaa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:502
        if (id == METAL_INTERRUPT_ID_BEU) {
200141de:	fd842703          	lw	a4,-40(s0)
200141e2:	08000793          	li	a5,128
200141e6:	00f71f63          	bne	a4,a5,20014204 <__metal_driver_riscv_cpu_controller_interrupt_register+0x74>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:503
            intc->metal_int_beu.handler = isr;
200141ea:	fe842783          	lw	a5,-24(s0)
200141ee:	fd442703          	lw	a4,-44(s0)
200141f2:	38e7a823          	sw	a4,912(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:504
            intc->metal_int_beu.exint_data = priv;
200141f6:	fe842783          	lw	a5,-24(s0)
200141fa:	fd042703          	lw	a4,-48(s0)
200141fe:	38e7ac23          	sw	a4,920(a5)
20014202:	aa99                	j	20014358 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:506
        } else {
            intc->metal_int_table[id].handler = isr;
20014204:	fe842683          	lw	a3,-24(s0)
20014208:	fd842703          	lw	a4,-40(s0)
2001420c:	87ba                	mv	a5,a4
2001420e:	0786                	slli	a5,a5,0x1
20014210:	97ba                	add	a5,a5,a4
20014212:	078e                	slli	a5,a5,0x3
20014214:	97b6                	add	a5,a5,a3
20014216:	fd442703          	lw	a4,-44(s0)
2001421a:	08e7a823          	sw	a4,144(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:507
            intc->metal_int_table[id].exint_data = priv;
2001421e:	fe842683          	lw	a3,-24(s0)
20014222:	fd842703          	lw	a4,-40(s0)
20014226:	87ba                	mv	a5,a4
20014228:	0786                	slli	a5,a5,0x1
2001422a:	97ba                	add	a5,a5,a4
2001422c:	078e                	slli	a5,a5,0x3
2001422e:	97b6                	add	a5,a5,a3
20014230:	fd042703          	lw	a4,-48(s0)
20014234:	08e7ac23          	sw	a4,152(a5)
20014238:	a205                	j	20014358 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:510
        }
    } else {
        switch (id) {
2001423a:	fd842703          	lw	a4,-40(s0)
2001423e:	47ad                	li	a5,11
20014240:	0cf70c63          	beq	a4,a5,20014318 <__metal_driver_riscv_cpu_controller_interrupt_register+0x188>
20014244:	fd842703          	lw	a4,-40(s0)
20014248:	47ad                	li	a5,11
2001424a:	00e7cd63          	blt	a5,a4,20014264 <__metal_driver_riscv_cpu_controller_interrupt_register+0xd4>
2001424e:	fd842703          	lw	a4,-40(s0)
20014252:	478d                	li	a5,3
20014254:	02f70963          	beq	a4,a5,20014286 <__metal_driver_riscv_cpu_controller_interrupt_register+0xf6>
20014258:	fd842703          	lw	a4,-40(s0)
2001425c:	479d                	li	a5,7
2001425e:	06f70163          	beq	a4,a5,200142c0 <__metal_driver_riscv_cpu_controller_interrupt_register+0x130>
20014262:	a8c5                	j	20014352 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c2>
20014264:	fd842703          	lw	a4,-40(s0)
20014268:	47c1                	li	a5,16
2001426a:	0ef74463          	blt	a4,a5,20014352 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c2>
2001426e:	fd842703          	lw	a4,-40(s0)
20014272:	47fd                	li	a5,31
20014274:	0ae7d263          	bge	a5,a4,20014318 <__metal_driver_riscv_cpu_controller_interrupt_register+0x188>
20014278:	fd842703          	lw	a4,-40(s0)
2001427c:	08000793          	li	a5,128
20014280:	06f70d63          	beq	a4,a5,200142fa <__metal_driver_riscv_cpu_controller_interrupt_register+0x16a>
20014284:	a0f9                	j	20014352 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:512
        case METAL_INTERRUPT_ID_SW:
            intc->metal_int_table[id].handler = __metal_default_sw_handler;
20014286:	fe842683          	lw	a3,-24(s0)
2001428a:	fd842703          	lw	a4,-40(s0)
2001428e:	87ba                	mv	a5,a4
20014290:	0786                	slli	a5,a5,0x1
20014292:	97ba                	add	a5,a5,a4
20014294:	078e                	slli	a5,a5,0x3
20014296:	97b6                	add	a5,a5,a3
20014298:	20013737          	lui	a4,0x20013
2001429c:	13a70713          	addi	a4,a4,314 # 2001313a <__metal_default_sw_handler>
200142a0:	08e7a823          	sw	a4,144(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:513
            intc->metal_int_table[id].sub_int = priv;
200142a4:	fe842683          	lw	a3,-24(s0)
200142a8:	fd842703          	lw	a4,-40(s0)
200142ac:	87ba                	mv	a5,a4
200142ae:	0786                	slli	a5,a5,0x1
200142b0:	97ba                	add	a5,a5,a4
200142b2:	078e                	slli	a5,a5,0x3
200142b4:	97b6                	add	a5,a5,a3
200142b6:	fd042703          	lw	a4,-48(s0)
200142ba:	08e7aa23          	sw	a4,148(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:514
            break;
200142be:	a869                	j	20014358 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:516
        case METAL_INTERRUPT_ID_TMR:
            intc->metal_int_table[id].handler = __metal_default_timer_handler;
200142c0:	fe842683          	lw	a3,-24(s0)
200142c4:	fd842703          	lw	a4,-40(s0)
200142c8:	87ba                	mv	a5,a4
200142ca:	0786                	slli	a5,a5,0x1
200142cc:	97ba                	add	a5,a5,a4
200142ce:	078e                	slli	a5,a5,0x3
200142d0:	97b6                	add	a5,a5,a3
200142d2:	20013737          	lui	a4,0x20013
200142d6:	24a70713          	addi	a4,a4,586 # 2001324a <__metal_default_timer_handler>
200142da:	08e7a823          	sw	a4,144(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:517
            intc->metal_int_table[id].sub_int = priv;
200142de:	fe842683          	lw	a3,-24(s0)
200142e2:	fd842703          	lw	a4,-40(s0)
200142e6:	87ba                	mv	a5,a4
200142e8:	0786                	slli	a5,a5,0x1
200142ea:	97ba                	add	a5,a5,a4
200142ec:	078e                	slli	a5,a5,0x3
200142ee:	97b6                	add	a5,a5,a3
200142f0:	fd042703          	lw	a4,-48(s0)
200142f4:	08e7aa23          	sw	a4,148(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:518
            break;
200142f8:	a085                	j	20014358 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:520
        case METAL_INTERRUPT_ID_BEU:
            intc->metal_int_beu.handler = __metal_default_beu_handler;
200142fa:	fe842783          	lw	a5,-24(s0)
200142fe:	20013737          	lui	a4,0x20013
20014302:	23470713          	addi	a4,a4,564 # 20013234 <__metal_default_beu_handler>
20014306:	38e7a823          	sw	a4,912(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:521
            intc->metal_int_beu.exint_data = priv;
2001430a:	fe842783          	lw	a5,-24(s0)
2001430e:	fd042703          	lw	a4,-48(s0)
20014312:	38e7ac23          	sw	a4,920(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:522
            break;
20014316:	a089                	j	20014358 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:540
        case METAL_INTERRUPT_ID_LC11:
        case METAL_INTERRUPT_ID_LC12:
        case METAL_INTERRUPT_ID_LC13:
        case METAL_INTERRUPT_ID_LC14:
        case METAL_INTERRUPT_ID_LC15:
            intc->metal_int_table[id].handler =
20014318:	fe842683          	lw	a3,-24(s0)
2001431c:	fd842703          	lw	a4,-40(s0)
20014320:	87ba                	mv	a5,a4
20014322:	0786                	slli	a5,a5,0x1
20014324:	97ba                	add	a5,a5,a4
20014326:	078e                	slli	a5,a5,0x3
20014328:	97b6                	add	a5,a5,a3
2001432a:	20013737          	lui	a4,0x20013
2001432e:	06270713          	addi	a4,a4,98 # 20013062 <__metal_default_interrupt_handler>
20014332:	08e7a823          	sw	a4,144(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:542
                __metal_default_interrupt_handler;
            intc->metal_int_table[id].sub_int = priv;
20014336:	fe842683          	lw	a3,-24(s0)
2001433a:	fd842703          	lw	a4,-40(s0)
2001433e:	87ba                	mv	a5,a4
20014340:	0786                	slli	a5,a5,0x1
20014342:	97ba                	add	a5,a5,a4
20014344:	078e                	slli	a5,a5,0x3
20014346:	97b6                	add	a5,a5,a3
20014348:	fd042703          	lw	a4,-48(s0)
2001434c:	08e7aa23          	sw	a4,148(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:543
            break;
20014350:	a021                	j	20014358 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:545
        default:
            rc = -12;
20014352:	57d1                	li	a5,-12
20014354:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:548
        }
    }
    return rc;
20014358:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:549
}
2001435c:	853e                	mv	a0,a5
2001435e:	50b2                	lw	ra,44(sp)
20014360:	5422                	lw	s0,40(sp)
20014362:	6145                	addi	sp,sp,48
20014364:	8082                	ret

20014366 <__metal_driver_riscv_cpu_controller_interrupt_enable>:
__metal_driver_riscv_cpu_controller_interrupt_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:552

int __metal_driver_riscv_cpu_controller_interrupt_enable(
    struct metal_interrupt *controller, int id) {
20014366:	1101                	addi	sp,sp,-32
20014368:	ce06                	sw	ra,28(sp)
2001436a:	cc22                	sw	s0,24(sp)
2001436c:	1000                	addi	s0,sp,32
2001436e:	fea42623          	sw	a0,-20(s0)
20014372:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:553
    return __metal_local_interrupt_enable(controller, id, METAL_ENABLE);
20014376:	fe842783          	lw	a5,-24(s0)
2001437a:	4605                	li	a2,1
2001437c:	85be                	mv	a1,a5
2001437e:	fec42503          	lw	a0,-20(s0)
20014382:	310d                	jal	20013fa4 <__metal_local_interrupt_enable>
20014384:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:554
}
20014386:	853e                	mv	a0,a5
20014388:	40f2                	lw	ra,28(sp)
2001438a:	4462                	lw	s0,24(sp)
2001438c:	6105                	addi	sp,sp,32
2001438e:	8082                	ret

20014390 <__metal_driver_riscv_cpu_controller_interrupt_disable>:
__metal_driver_riscv_cpu_controller_interrupt_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:557

int __metal_driver_riscv_cpu_controller_interrupt_disable(
    struct metal_interrupt *controller, int id) {
20014390:	1101                	addi	sp,sp,-32
20014392:	ce06                	sw	ra,28(sp)
20014394:	cc22                	sw	s0,24(sp)
20014396:	1000                	addi	s0,sp,32
20014398:	fea42623          	sw	a0,-20(s0)
2001439c:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:558
    return __metal_local_interrupt_enable(controller, id, METAL_DISABLE);
200143a0:	fe842783          	lw	a5,-24(s0)
200143a4:	4601                	li	a2,0
200143a6:	85be                	mv	a1,a5
200143a8:	fec42503          	lw	a0,-20(s0)
200143ac:	3ee5                	jal	20013fa4 <__metal_local_interrupt_enable>
200143ae:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:559
}
200143b0:	853e                	mv	a0,a5
200143b2:	40f2                	lw	ra,28(sp)
200143b4:	4462                	lw	s0,24(sp)
200143b6:	6105                	addi	sp,sp,32
200143b8:	8082                	ret

200143ba <__metal_driver_riscv_cpu_controller_get_vector_mode>:
__metal_driver_riscv_cpu_controller_get_vector_mode():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:591
    }
    return -1;
}

metal_vector_mode __metal_driver_riscv_cpu_controller_get_vector_mode(
    struct metal_interrupt *controller) {
200143ba:	1101                	addi	sp,sp,-32
200143bc:	ce06                	sw	ra,28(sp)
200143be:	cc22                	sw	s0,24(sp)
200143c0:	1000                	addi	s0,sp,32
200143c2:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:592
    return __metal_controller_interrupt_vector_mode();
200143c6:	a93ff0ef          	jal	ra,20013e58 <__metal_controller_interrupt_vector_mode>
200143ca:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:593
}
200143cc:	853e                	mv	a0,a5
200143ce:	40f2                	lw	ra,28(sp)
200143d0:	4462                	lw	s0,24(sp)
200143d2:	6105                	addi	sp,sp,32
200143d4:	8082                	ret

200143d6 <__metal_driver_riscv_cpu_controller_set_vector_mode>:
__metal_driver_riscv_cpu_controller_set_vector_mode():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:596

int __metal_driver_riscv_cpu_controller_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
200143d6:	1101                	addi	sp,sp,-32
200143d8:	ce06                	sw	ra,28(sp)
200143da:	cc22                	sw	s0,24(sp)
200143dc:	1000                	addi	s0,sp,32
200143de:	fea42623          	sw	a0,-20(s0)
200143e2:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:598

    if (mode == METAL_DIRECT_MODE) {
200143e6:	fe842783          	lw	a5,-24(s0)
200143ea:	eb99                	bnez	a5,20014400 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x2a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:599
        __metal_controller_interrupt_vector(
200143ec:	200137b7          	lui	a5,0x20013
200143f0:	30078593          	addi	a1,a5,768 # 20013300 <__metal_exception_handler>
200143f4:	fe842503          	lw	a0,-24(s0)
200143f8:	ab1ff0ef          	jal	ra,20013ea8 <__metal_controller_interrupt_vector>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:601
            mode, (void *)(uintptr_t)&__metal_exception_handler);
        return 0;
200143fc:	4781                	li	a5,0
200143fe:	a00d                	j	20014420 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:603
    }
    if (mode == METAL_VECTOR_MODE) {
20014400:	fe842703          	lw	a4,-24(s0)
20014404:	4785                	li	a5,1
20014406:	00f71c63          	bne	a4,a5,2001441e <__metal_driver_riscv_cpu_controller_set_vector_mode+0x48>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:604
        __metal_controller_interrupt_vector(
2001440a:	200187b7          	lui	a5,0x20018
2001440e:	a8078593          	addi	a1,a5,-1408 # 20017a80 <__metal_vector_table>
20014412:	fe842503          	lw	a0,-24(s0)
20014416:	a93ff0ef          	jal	ra,20013ea8 <__metal_controller_interrupt_vector>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:606
            mode, (void *)(uintptr_t)__metal_vector_table);
        return 0;
2001441a:	4781                	li	a5,0
2001441c:	a011                	j	20014420 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:608
    }
    return -1;
2001441e:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:609
}
20014420:	853e                	mv	a0,a5
20014422:	40f2                	lw	ra,28(sp)
20014424:	4462                	lw	s0,24(sp)
20014426:	6105                	addi	sp,sp,32
20014428:	8082                	ret

2001442a <__metal_driver_riscv_cpu_controller_command_request>:
__metal_driver_riscv_cpu_controller_command_request():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:612

int __metal_driver_riscv_cpu_controller_command_request(
    struct metal_interrupt *controller, int cmd, void *data) {
2001442a:	1101                	addi	sp,sp,-32
2001442c:	ce22                	sw	s0,28(sp)
2001442e:	1000                	addi	s0,sp,32
20014430:	fea42623          	sw	a0,-20(s0)
20014434:	feb42423          	sw	a1,-24(s0)
20014438:	fec42223          	sw	a2,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:615
    /* NOP for now, unless local interrupt lines the like of clic, clint, plic
     */
    return 0;
2001443c:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:616
}
2001443e:	853e                	mv	a0,a5
20014440:	4472                	lw	s0,28(sp)
20014442:	6105                	addi	sp,sp,32
20014444:	8082                	ret

20014446 <__metal_driver_cpu_mcycle_get>:
__metal_driver_cpu_mcycle_get():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:620

/* CPU driver !!! */

unsigned long long __metal_driver_cpu_mcycle_get(struct metal_cpu *cpu) {
20014446:	7139                	addi	sp,sp,-64
20014448:	de22                	sw	s0,60(sp)
2001444a:	0080                	addi	s0,sp,64
2001444c:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:621
    unsigned long long val = 0;
20014450:	4301                	li	t1,0
20014452:	4381                	li	t2,0
20014454:	fe642423          	sw	t1,-24(s0)
20014458:	fe742623          	sw	t2,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:627 (discriminator 1)

#if __riscv_xlen == 32
    unsigned long hi, hi1, lo;

    do {
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi));
2001445c:	b8002573          	csrr	a0,mcycleh
20014460:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:628 (discriminator 1)
        __asm__ volatile("csrr %0, mcycle" : "=r"(lo));
20014464:	b0002573          	csrr	a0,mcycle
20014468:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:629 (discriminator 1)
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi1));
2001446c:	b8002573          	csrr	a0,mcycleh
20014470:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:632 (discriminator 1)
        /* hi != hi1 means mcycle overflow during we get value,
         * so we must retry. */
    } while (hi != hi1);
20014474:	fe442883          	lw	a7,-28(s0)
20014478:	fdc42503          	lw	a0,-36(s0)
2001447c:	fea890e3          	bne	a7,a0,2001445c <__metal_driver_cpu_mcycle_get+0x16>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:634

    val = ((unsigned long long)hi << 32) | lo;
20014480:	fe442503          	lw	a0,-28(s0)
20014484:	85aa                	mv	a1,a0
20014486:	4601                	li	a2,0
20014488:	00059813          	slli	a6,a1,0x0
2001448c:	4781                	li	a5,0
2001448e:	fe042603          	lw	a2,-32(s0)
20014492:	86b2                	mv	a3,a2
20014494:	4701                	li	a4,0
20014496:	00d7e633          	or	a2,a5,a3
2001449a:	fec42423          	sw	a2,-24(s0)
2001449e:	00e867b3          	or	a5,a6,a4
200144a2:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:639
#else
    __asm__ volatile("csrr %0, mcycle" : "=r"(val));
#endif

    return val;
200144a6:	fe842783          	lw	a5,-24(s0)
200144aa:	fec42803          	lw	a6,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:640
}
200144ae:	853e                	mv	a0,a5
200144b0:	85c2                	mv	a1,a6
200144b2:	5472                	lw	s0,60(sp)
200144b4:	6121                	addi	sp,sp,64
200144b6:	8082                	ret

200144b8 <__metal_driver_cpu_timebase_get>:
__metal_driver_cpu_timebase_get():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:642

unsigned long long __metal_driver_cpu_timebase_get(struct metal_cpu *cpu) {
200144b8:	7179                	addi	sp,sp,-48
200144ba:	d606                	sw	ra,44(sp)
200144bc:	d422                	sw	s0,40(sp)
200144be:	d24a                	sw	s2,36(sp)
200144c0:	d04e                	sw	s3,32(sp)
200144c2:	1800                	addi	s0,sp,48
200144c4:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:644
    int timebase;
    if (!cpu) {
200144c8:	fdc42783          	lw	a5,-36(s0)
200144cc:	e781                	bnez	a5,200144d4 <__metal_driver_cpu_timebase_get+0x1c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:645
        return 0;
200144ce:	4901                	li	s2,0
200144d0:	4981                	li	s3,0
200144d2:	a821                	j	200144ea <__metal_driver_cpu_timebase_get+0x32>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:648
    }

    timebase = __metal_driver_cpu_timebase((struct metal_cpu *)cpu);
200144d4:	fdc42503          	lw	a0,-36(s0)
200144d8:	98dfe0ef          	jal	ra,20012e64 <__metal_driver_cpu_timebase>
200144dc:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:649
    return timebase;
200144e0:	fec42783          	lw	a5,-20(s0)
200144e4:	893e                	mv	s2,a5
200144e6:	87fd                	srai	a5,a5,0x1f
200144e8:	89be                	mv	s3,a5
200144ea:	87ca                	mv	a5,s2
200144ec:	884e                	mv	a6,s3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:650
}
200144ee:	853e                	mv	a0,a5
200144f0:	85c2                	mv	a1,a6
200144f2:	50b2                	lw	ra,44(sp)
200144f4:	5422                	lw	s0,40(sp)
200144f6:	5912                	lw	s2,36(sp)
200144f8:	5982                	lw	s3,32(sp)
200144fa:	6145                	addi	sp,sp,48
200144fc:	8082                	ret

200144fe <__metal_driver_cpu_mtime_get>:
__metal_driver_cpu_mtime_get():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:652

unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu) {
200144fe:	7179                	addi	sp,sp,-48
20014500:	d606                	sw	ra,44(sp)
20014502:	d422                	sw	s0,40(sp)
20014504:	1800                	addi	s0,sp,48
20014506:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:653
    unsigned long long time = 0;
2001450a:	4781                	li	a5,0
2001450c:	4801                	li	a6,0
2001450e:	fef42023          	sw	a5,-32(s0)
20014512:	ff042223          	sw	a6,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:657
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20014516:	fdc42503          	lw	a0,-36(s0)
2001451a:	975fe0ef          	jal	ra,20012e8e <__metal_driver_cpu_interrupt_controller>
2001451e:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:659

    if (intc) {
20014522:	fec42783          	lw	a5,-20(s0)
20014526:	c78d                	beqz	a5,20014550 <__metal_driver_cpu_mtime_get+0x52>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:660
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20014528:	fec42783          	lw	a5,-20(s0)
2001452c:	13c7a783          	lw	a5,316(a5)
20014530:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:661
        if (tmr_intc) {
20014534:	fe842783          	lw	a5,-24(s0)
20014538:	cf81                	beqz	a5,20014550 <__metal_driver_cpu_mtime_get+0x52>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:662
            tmr_intc->vtable->command_request(tmr_intc, METAL_TIMER_MTIME_GET,
2001453a:	fe842783          	lw	a5,-24(s0)
2001453e:	439c                	lw	a5,0(a5)
20014540:	47f8                	lw	a4,76(a5)
20014542:	fe040793          	addi	a5,s0,-32
20014546:	863e                	mv	a2,a5
20014548:	4585                	li	a1,1
2001454a:	fe842503          	lw	a0,-24(s0)
2001454e:	9702                	jalr	a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:666
                                              &time);
        }
    }
    return time;
20014550:	fe042783          	lw	a5,-32(s0)
20014554:	fe442803          	lw	a6,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:667
}
20014558:	853e                	mv	a0,a5
2001455a:	85c2                	mv	a1,a6
2001455c:	50b2                	lw	ra,44(sp)
2001455e:	5422                	lw	s0,40(sp)
20014560:	6145                	addi	sp,sp,48
20014562:	8082                	ret

20014564 <__metal_driver_cpu_mtimecmp_set>:
__metal_driver_cpu_mtimecmp_set():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:670

int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time) {
20014564:	7179                	addi	sp,sp,-48
20014566:	d606                	sw	ra,44(sp)
20014568:	d422                	sw	s0,40(sp)
2001456a:	d226                	sw	s1,36(sp)
2001456c:	1800                	addi	s0,sp,48
2001456e:	fca42e23          	sw	a0,-36(s0)
20014572:	fcb42823          	sw	a1,-48(s0)
20014576:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:671
    int rc = -1;
2001457a:	57fd                	li	a5,-1
2001457c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:675
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20014580:	fdc42503          	lw	a0,-36(s0)
20014584:	90bfe0ef          	jal	ra,20012e8e <__metal_driver_cpu_interrupt_controller>
20014588:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:677

    if (intc) {
2001458c:	fe842783          	lw	a5,-24(s0)
20014590:	cf8d                	beqz	a5,200145ca <__metal_driver_cpu_mtimecmp_set+0x66>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:678
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20014592:	fe842783          	lw	a5,-24(s0)
20014596:	13c7a783          	lw	a5,316(a5)
2001459a:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:679
        if (tmr_intc) {
2001459e:	fe442783          	lw	a5,-28(s0)
200145a2:	c785                	beqz	a5,200145ca <__metal_driver_cpu_mtimecmp_set+0x66>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:680
            rc = tmr_intc->vtable->mtimecmp_set(
200145a4:	fe442783          	lw	a5,-28(s0)
200145a8:	439c                	lw	a5,0(a5)
200145aa:	4ba4                	lw	s1,80(a5)
200145ac:	fdc42503          	lw	a0,-36(s0)
200145b0:	891fe0ef          	jal	ra,20012e40 <__metal_driver_cpu_hartid>
200145b4:	87aa                	mv	a5,a0
200145b6:	fd042603          	lw	a2,-48(s0)
200145ba:	fd442683          	lw	a3,-44(s0)
200145be:	85be                	mv	a1,a5
200145c0:	fe442503          	lw	a0,-28(s0)
200145c4:	9482                	jalr	s1
200145c6:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:684
                tmr_intc, __metal_driver_cpu_hartid(cpu), time);
        }
    }
    return rc;
200145ca:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:685
}
200145ce:	853e                	mv	a0,a5
200145d0:	50b2                	lw	ra,44(sp)
200145d2:	5422                	lw	s0,40(sp)
200145d4:	5492                	lw	s1,36(sp)
200145d6:	6145                	addi	sp,sp,48
200145d8:	8082                	ret

200145da <__metal_driver_cpu_timer_controller_interrupt>:
__metal_driver_cpu_timer_controller_interrupt():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:688

struct metal_interrupt *
__metal_driver_cpu_timer_controller_interrupt(struct metal_cpu *cpu) {
200145da:	1101                	addi	sp,sp,-32
200145dc:	ce22                	sw	s0,28(sp)
200145de:	1000                	addi	s0,sp,32
200145e0:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:690
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
200145e4:	81018793          	addi	a5,gp,-2032 # 80000ad0 <__metal_dt_clint_2000000>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:699
#else
#pragma message("There is no interrupt controller for Timer interrupt")
    return NULL;
#endif
#endif
}
200145e8:	853e                	mv	a0,a5
200145ea:	4472                	lw	s0,28(sp)
200145ec:	6105                	addi	sp,sp,32
200145ee:	8082                	ret

200145f0 <__metal_driver_cpu_get_timer_interrupt_id>:
__metal_driver_cpu_get_timer_interrupt_id():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:701

int __metal_driver_cpu_get_timer_interrupt_id(struct metal_cpu *cpu) {
200145f0:	1101                	addi	sp,sp,-32
200145f2:	ce22                	sw	s0,28(sp)
200145f4:	1000                	addi	s0,sp,32
200145f6:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:702
    return METAL_INTERRUPT_ID_TMR;
200145fa:	479d                	li	a5,7
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:703
}
200145fc:	853e                	mv	a0,a5
200145fe:	4472                	lw	s0,28(sp)
20014600:	6105                	addi	sp,sp,32
20014602:	8082                	ret

20014604 <__metal_driver_cpu_sw_controller_interrupt>:
__metal_driver_cpu_sw_controller_interrupt():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:706

struct metal_interrupt *
__metal_driver_cpu_sw_controller_interrupt(struct metal_cpu *cpu) {
20014604:	1101                	addi	sp,sp,-32
20014606:	ce22                	sw	s0,28(sp)
20014608:	1000                	addi	s0,sp,32
2001460a:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:708
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
2001460e:	81018793          	addi	a5,gp,-2032 # 80000ad0 <__metal_dt_clint_2000000>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:717
#else
#pragma message("There is no interrupt controller for Software interrupt")
    return NULL;
#endif
#endif
}
20014612:	853e                	mv	a0,a5
20014614:	4472                	lw	s0,28(sp)
20014616:	6105                	addi	sp,sp,32
20014618:	8082                	ret

2001461a <__metal_driver_cpu_get_sw_interrupt_id>:
__metal_driver_cpu_get_sw_interrupt_id():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:719

int __metal_driver_cpu_get_sw_interrupt_id(struct metal_cpu *cpu) {
2001461a:	1101                	addi	sp,sp,-32
2001461c:	ce22                	sw	s0,28(sp)
2001461e:	1000                	addi	s0,sp,32
20014620:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:720
    return METAL_INTERRUPT_ID_SW;
20014624:	478d                	li	a5,3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:721
}
20014626:	853e                	mv	a0,a5
20014628:	4472                	lw	s0,28(sp)
2001462a:	6105                	addi	sp,sp,32
2001462c:	8082                	ret

2001462e <__metal_driver_cpu_set_sw_ipi>:
__metal_driver_cpu_set_sw_ipi():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:723

int __metal_driver_cpu_set_sw_ipi(struct metal_cpu *cpu, int hartid) {
2001462e:	7179                	addi	sp,sp,-48
20014630:	d606                	sw	ra,44(sp)
20014632:	d422                	sw	s0,40(sp)
20014634:	1800                	addi	s0,sp,48
20014636:	fca42e23          	sw	a0,-36(s0)
2001463a:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:724
    int rc = -1;
2001463e:	57fd                	li	a5,-1
20014640:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:728
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20014644:	fdc42503          	lw	a0,-36(s0)
20014648:	847fe0ef          	jal	ra,20012e8e <__metal_driver_cpu_interrupt_controller>
2001464c:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:730

    if (intc) {
20014650:	fe842783          	lw	a5,-24(s0)
20014654:	c79d                	beqz	a5,20014682 <__metal_driver_cpu_set_sw_ipi+0x54>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:731
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20014656:	fe842783          	lw	a5,-24(s0)
2001465a:	0dc7a783          	lw	a5,220(a5)
2001465e:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:732
        if (sw_intc) {
20014662:	fe442783          	lw	a5,-28(s0)
20014666:	cf91                	beqz	a5,20014682 <__metal_driver_cpu_set_sw_ipi+0x54>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:733
            rc = sw_intc->vtable->command_request(
20014668:	fe442783          	lw	a5,-28(s0)
2001466c:	439c                	lw	a5,0(a5)
2001466e:	47f8                	lw	a4,76(a5)
20014670:	fd840793          	addi	a5,s0,-40
20014674:	863e                	mv	a2,a5
20014676:	458d                	li	a1,3
20014678:	fe442503          	lw	a0,-28(s0)
2001467c:	9702                	jalr	a4
2001467e:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:737
                sw_intc, METAL_SOFTWARE_IPI_SET, &hartid);
        }
    }
    return rc;
20014682:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:738
}
20014686:	853e                	mv	a0,a5
20014688:	50b2                	lw	ra,44(sp)
2001468a:	5422                	lw	s0,40(sp)
2001468c:	6145                	addi	sp,sp,48
2001468e:	8082                	ret

20014690 <__metal_driver_cpu_clear_sw_ipi>:
__metal_driver_cpu_clear_sw_ipi():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:740

int __metal_driver_cpu_clear_sw_ipi(struct metal_cpu *cpu, int hartid) {
20014690:	7179                	addi	sp,sp,-48
20014692:	d606                	sw	ra,44(sp)
20014694:	d422                	sw	s0,40(sp)
20014696:	1800                	addi	s0,sp,48
20014698:	fca42e23          	sw	a0,-36(s0)
2001469c:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:741
    int rc = -1;
200146a0:	57fd                	li	a5,-1
200146a2:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:745
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
200146a6:	fdc42503          	lw	a0,-36(s0)
200146aa:	fe4fe0ef          	jal	ra,20012e8e <__metal_driver_cpu_interrupt_controller>
200146ae:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:747

    if (intc) {
200146b2:	fe842783          	lw	a5,-24(s0)
200146b6:	c79d                	beqz	a5,200146e4 <__metal_driver_cpu_clear_sw_ipi+0x54>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:748
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
200146b8:	fe842783          	lw	a5,-24(s0)
200146bc:	0dc7a783          	lw	a5,220(a5)
200146c0:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:749
        if (sw_intc) {
200146c4:	fe442783          	lw	a5,-28(s0)
200146c8:	cf91                	beqz	a5,200146e4 <__metal_driver_cpu_clear_sw_ipi+0x54>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:750
            rc = sw_intc->vtable->command_request(
200146ca:	fe442783          	lw	a5,-28(s0)
200146ce:	439c                	lw	a5,0(a5)
200146d0:	47f8                	lw	a4,76(a5)
200146d2:	fd840793          	addi	a5,s0,-40
200146d6:	863e                	mv	a2,a5
200146d8:	4589                	li	a1,2
200146da:	fe442503          	lw	a0,-28(s0)
200146de:	9702                	jalr	a4
200146e0:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:754
                sw_intc, METAL_SOFTWARE_IPI_CLEAR, &hartid);
        }
    }
    return rc;
200146e4:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:755
}
200146e8:	853e                	mv	a0,a5
200146ea:	50b2                	lw	ra,44(sp)
200146ec:	5422                	lw	s0,40(sp)
200146ee:	6145                	addi	sp,sp,48
200146f0:	8082                	ret

200146f2 <__metal_driver_cpu_get_msip>:
__metal_driver_cpu_get_msip():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:757

int __metal_driver_cpu_get_msip(struct metal_cpu *cpu, int hartid) {
200146f2:	7179                	addi	sp,sp,-48
200146f4:	d606                	sw	ra,44(sp)
200146f6:	d422                	sw	s0,40(sp)
200146f8:	1800                	addi	s0,sp,48
200146fa:	fca42e23          	sw	a0,-36(s0)
200146fe:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:758
    int rc = 0;
20014702:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:762
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20014706:	fdc42503          	lw	a0,-36(s0)
2001470a:	f84fe0ef          	jal	ra,20012e8e <__metal_driver_cpu_interrupt_controller>
2001470e:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:764

    if (intc) {
20014712:	fe842783          	lw	a5,-24(s0)
20014716:	c79d                	beqz	a5,20014744 <__metal_driver_cpu_get_msip+0x52>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:765
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20014718:	fe842783          	lw	a5,-24(s0)
2001471c:	0dc7a783          	lw	a5,220(a5)
20014720:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:766
        if (sw_intc) {
20014724:	fe442783          	lw	a5,-28(s0)
20014728:	cf91                	beqz	a5,20014744 <__metal_driver_cpu_get_msip+0x52>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:767
            rc = sw_intc->vtable->command_request(
2001472a:	fe442783          	lw	a5,-28(s0)
2001472e:	439c                	lw	a5,0(a5)
20014730:	47f8                	lw	a4,76(a5)
20014732:	fd840793          	addi	a5,s0,-40
20014736:	863e                	mv	a2,a5
20014738:	4591                	li	a1,4
2001473a:	fe442503          	lw	a0,-28(s0)
2001473e:	9702                	jalr	a4
20014740:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:771
                sw_intc, METAL_SOFTWARE_MSIP_GET, &hartid);
        }
    }
    return rc;
20014744:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:772
}
20014748:	853e                	mv	a0,a5
2001474a:	50b2                	lw	ra,44(sp)
2001474c:	5422                	lw	s0,40(sp)
2001474e:	6145                	addi	sp,sp,48
20014750:	8082                	ret

20014752 <__metal_driver_cpu_controller_interrupt>:
__metal_driver_cpu_controller_interrupt():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:775

struct metal_interrupt *
__metal_driver_cpu_controller_interrupt(struct metal_cpu *cpu) {
20014752:	1101                	addi	sp,sp,-32
20014754:	ce06                	sw	ra,28(sp)
20014756:	cc22                	sw	s0,24(sp)
20014758:	1000                	addi	s0,sp,32
2001475a:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:776
    return __metal_driver_cpu_interrupt_controller(cpu);
2001475e:	fec42503          	lw	a0,-20(s0)
20014762:	f2cfe0ef          	jal	ra,20012e8e <__metal_driver_cpu_interrupt_controller>
20014766:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:777
}
20014768:	853e                	mv	a0,a5
2001476a:	40f2                	lw	ra,28(sp)
2001476c:	4462                	lw	s0,24(sp)
2001476e:	6105                	addi	sp,sp,32
20014770:	8082                	ret

20014772 <__metal_driver_cpu_exception_register>:
__metal_driver_cpu_exception_register():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:798
    }
    return -1;
}

int __metal_driver_cpu_exception_register(struct metal_cpu *cpu, int ecode,
                                          metal_exception_handler_t isr) {
20014772:	7179                	addi	sp,sp,-48
20014774:	d606                	sw	ra,44(sp)
20014776:	d422                	sw	s0,40(sp)
20014778:	1800                	addi	s0,sp,48
2001477a:	fca42e23          	sw	a0,-36(s0)
2001477e:	fcb42c23          	sw	a1,-40(s0)
20014782:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:801
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20014786:	fdc42503          	lw	a0,-36(s0)
2001478a:	f04fe0ef          	jal	ra,20012e8e <__metal_driver_cpu_interrupt_controller>
2001478e:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:803

    if (intc) {
20014792:	fec42783          	lw	a5,-20(s0)
20014796:	cb99                	beqz	a5,200147ac <__metal_driver_cpu_exception_register+0x3a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:804
        return __metal_exception_register((struct metal_interrupt *)intc, ecode,
20014798:	fd442603          	lw	a2,-44(s0)
2001479c:	fd842583          	lw	a1,-40(s0)
200147a0:	fec42503          	lw	a0,-20(s0)
200147a4:	8bdff0ef          	jal	ra,20014060 <__metal_exception_register>
200147a8:	87aa                	mv	a5,a0
200147aa:	a011                	j	200147ae <__metal_driver_cpu_exception_register+0x3c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:807
                                          isr);
    }
    return -1;
200147ac:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:808
}
200147ae:	853e                	mv	a0,a5
200147b0:	50b2                	lw	ra,44(sp)
200147b2:	5422                	lw	s0,40(sp)
200147b4:	6145                	addi	sp,sp,48
200147b6:	8082                	ret

200147b8 <__metal_driver_cpu_get_instruction_length>:
__metal_driver_cpu_get_instruction_length():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:811

int __metal_driver_cpu_get_instruction_length(struct metal_cpu *cpu,
                                              uintptr_t epc) {
200147b8:	1101                	addi	sp,sp,-32
200147ba:	ce22                	sw	s0,28(sp)
200147bc:	1000                	addi	s0,sp,32
200147be:	fea42623          	sw	a0,-20(s0)
200147c2:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:817
    /**
     * Per ISA compressed instruction has last two bits of opcode set.
     * The encoding '00' '01' '10' are used for compressed instruction.
     * Only enconding '11' isn't regarded as compressed instruction (>16b).
     */
    return ((*(unsigned short *)epc & METAL_INSN_LENGTH_MASK) ==
200147c6:	fe842783          	lw	a5,-24(s0)
200147ca:	0007d783          	lhu	a5,0(a5)
200147ce:	0037f713          	andi	a4,a5,3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:820
            METAL_INSN_NOT_COMPRESSED)
               ? 4
               : 2;
200147d2:	478d                	li	a5,3
200147d4:	00f71463          	bne	a4,a5,200147dc <__metal_driver_cpu_get_instruction_length+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 1)
200147d8:	4791                	li	a5,4
200147da:	a011                	j	200147de <__metal_driver_cpu_get_instruction_length+0x26>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 2)
200147dc:	4789                	li	a5,2
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:821 (discriminator 5)
}
200147de:	853e                	mv	a0,a5
200147e0:	4472                	lw	s0,28(sp)
200147e2:	6105                	addi	sp,sp,32
200147e4:	8082                	ret

200147e6 <__metal_driver_cpu_get_exception_pc>:
__metal_driver_cpu_get_exception_pc():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:823

uintptr_t __metal_driver_cpu_get_exception_pc(struct metal_cpu *cpu) {
200147e6:	7179                	addi	sp,sp,-48
200147e8:	d622                	sw	s0,44(sp)
200147ea:	1800                	addi	s0,sp,48
200147ec:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:825
    uintptr_t mepc;
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
200147f0:	341027f3          	csrr	a5,mepc
200147f4:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:826
    return mepc;
200147f8:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:827
}
200147fc:	853e                	mv	a0,a5
200147fe:	5432                	lw	s0,44(sp)
20014800:	6145                	addi	sp,sp,48
20014802:	8082                	ret

20014804 <__metal_driver_cpu_set_exception_pc>:
__metal_driver_cpu_set_exception_pc():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:829

int __metal_driver_cpu_set_exception_pc(struct metal_cpu *cpu, uintptr_t mepc) {
20014804:	1101                	addi	sp,sp,-32
20014806:	ce22                	sw	s0,28(sp)
20014808:	1000                	addi	s0,sp,32
2001480a:	fea42623          	sw	a0,-20(s0)
2001480e:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:830
    __asm__ volatile("csrw mepc, %0" ::"r"(mepc));
20014812:	fe842783          	lw	a5,-24(s0)
20014816:	34179073          	csrw	mepc,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:831
    return 0;
2001481a:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:832
}
2001481c:	853e                	mv	a0,a5
2001481e:	4472                	lw	s0,28(sp)
20014820:	6105                	addi	sp,sp,32
20014822:	8082                	ret

20014824 <__metal_driver_cpu_get_buserror>:
__metal_driver_cpu_get_buserror():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:834

struct metal_buserror *__metal_driver_cpu_get_buserror(struct metal_cpu *cpu) {
20014824:	1101                	addi	sp,sp,-32
20014826:	ce06                	sw	ra,28(sp)
20014828:	cc22                	sw	s0,24(sp)
2001482a:	1000                	addi	s0,sp,32
2001482c:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:835
    return __metal_driver_cpu_buserror(cpu);
20014830:	fec42503          	lw	a0,-20(s0)
20014834:	e84fe0ef          	jal	ra,20012eb8 <__metal_driver_cpu_buserror>
20014838:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:836
}
2001483a:	853e                	mv	a0,a5
2001483c:	40f2                	lw	ra,28(sp)
2001483e:	4462                	lw	s0,24(sp)
20014840:	6105                	addi	sp,sp,32
20014842:	8082                	ret

20014844 <__metal_driver_sifive_plic0_control_base>:
__metal_driver_sifive_plic0_control_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:345



/* --------------------- sifive_plic0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_plic0_control_base(struct metal_interrupt *controller)
{
20014844:	1101                	addi	sp,sp,-32
20014846:	ce22                	sw	s0,28(sp)
20014848:	1000                	addi	s0,sp,32
2001484a:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:346
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
2001484e:	fec42703          	lw	a4,-20(s0)
20014852:	800007b7          	lui	a5,0x80000
20014856:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffeca0>
2001485a:	00f71563          	bne	a4,a5,20014864 <__metal_driver_sifive_plic0_control_base+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:347
		return METAL_RISCV_PLIC0_C000000_BASE_ADDRESS;
2001485e:	0c0007b7          	lui	a5,0xc000
20014862:	a011                	j	20014866 <__metal_driver_sifive_plic0_control_base+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:350
	}
	else {
		return 0;
20014864:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:352
	}
}
20014866:	853e                	mv	a0,a5
20014868:	4472                	lw	s0,28(sp)
2001486a:	6105                	addi	sp,sp,32
2001486c:	8082                	ret

2001486e <__metal_driver_sifive_plic0_num_interrupts>:
__metal_driver_sifive_plic0_num_interrupts():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:365
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_plic0_num_interrupts(struct metal_interrupt *controller)
{
2001486e:	1101                	addi	sp,sp,-32
20014870:	ce22                	sw	s0,28(sp)
20014872:	1000                	addi	s0,sp,32
20014874:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:366
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20014878:	fec42703          	lw	a4,-20(s0)
2001487c:	800007b7          	lui	a5,0x80000
20014880:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffeca0>
20014884:	00f71563          	bne	a4,a5,2001488e <__metal_driver_sifive_plic0_num_interrupts+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:367
		return METAL_RISCV_PLIC0_C000000_RISCV_NDEV;
20014888:	03500793          	li	a5,53
2001488c:	a011                	j	20014890 <__metal_driver_sifive_plic0_num_interrupts+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:370
	}
	else {
		return 0;
2001488e:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:372
	}
}
20014890:	853e                	mv	a0,a5
20014892:	4472                	lw	s0,28(sp)
20014894:	6105                	addi	sp,sp,32
20014896:	8082                	ret

20014898 <__metal_driver_sifive_plic0_max_priority>:
__metal_driver_sifive_plic0_max_priority():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:375

static __inline__ int __metal_driver_sifive_plic0_max_priority(struct metal_interrupt *controller)
{
20014898:	1101                	addi	sp,sp,-32
2001489a:	ce22                	sw	s0,28(sp)
2001489c:	1000                	addi	s0,sp,32
2001489e:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:376
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
200148a2:	fec42703          	lw	a4,-20(s0)
200148a6:	800007b7          	lui	a5,0x80000
200148aa:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffeca0>
200148ae:	00f71463          	bne	a4,a5,200148b6 <__metal_driver_sifive_plic0_max_priority+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:377
		return METAL_RISCV_PLIC0_C000000_RISCV_MAX_PRIORITY;
200148b2:	479d                	li	a5,7
200148b4:	a011                	j	200148b8 <__metal_driver_sifive_plic0_max_priority+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:380
	}
	else {
		return 0;
200148b6:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:382
	}
}
200148b8:	853e                	mv	a0,a5
200148ba:	4472                	lw	s0,28(sp)
200148bc:	6105                	addi	sp,sp,32
200148be:	8082                	ret

200148c0 <__metal_driver_sifive_plic0_interrupt_parents>:
__metal_driver_sifive_plic0_interrupt_parents():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:385

static __inline__ struct metal_interrupt * __metal_driver_sifive_plic0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
200148c0:	1101                	addi	sp,sp,-32
200148c2:	ce22                	sw	s0,28(sp)
200148c4:	1000                	addi	s0,sp,32
200148c6:	fea42623          	sw	a0,-20(s0)
200148ca:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:386
	if (idx == 0) {
200148ce:	fe842783          	lw	a5,-24(s0)
200148d2:	e791                	bnez	a5,200148de <__metal_driver_sifive_plic0_interrupt_parents+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:387
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
200148d4:	800007b7          	lui	a5,0x80000
200148d8:	09078793          	addi	a5,a5,144 # 80000090 <metal_segment_heap_target_end+0xffffe8d0>
200148dc:	a011                	j	200148e0 <__metal_driver_sifive_plic0_interrupt_parents+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:390
	}
	else {
		return NULL;
200148de:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:392
	}
}
200148e0:	853e                	mv	a0,a5
200148e2:	4472                	lw	s0,28(sp)
200148e4:	6105                	addi	sp,sp,32
200148e6:	8082                	ret

200148e8 <__metal_driver_sifive_plic0_interrupt_lines>:
__metal_driver_sifive_plic0_interrupt_lines():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:395

static __inline__ int __metal_driver_sifive_plic0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
200148e8:	1101                	addi	sp,sp,-32
200148ea:	ce22                	sw	s0,28(sp)
200148ec:	1000                	addi	s0,sp,32
200148ee:	fea42623          	sw	a0,-20(s0)
200148f2:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:396
	if (idx == 0) {
200148f6:	fe842783          	lw	a5,-24(s0)
200148fa:	e399                	bnez	a5,20014900 <__metal_driver_sifive_plic0_interrupt_lines+0x18>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:397
		return 11;
200148fc:	47ad                	li	a5,11
200148fe:	a011                	j	20014902 <__metal_driver_sifive_plic0_interrupt_lines+0x1a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:400
	}
	else {
		return 0;
20014900:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:402
	}
}
20014902:	853e                	mv	a0,a5
20014904:	4472                	lw	s0,28(sp)
20014906:	6105                	addi	sp,sp,32
20014908:	8082                	ret

2001490a <__metal_driver_sifive_plic0_context_ids>:
__metal_driver_sifive_plic0_context_ids():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:405

static __inline__ int __metal_driver_sifive_plic0_context_ids(int hartid)
{
2001490a:	1101                	addi	sp,sp,-32
2001490c:	ce22                	sw	s0,28(sp)
2001490e:	1000                	addi	s0,sp,32
20014910:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:406
	if (hartid == 0) {
20014914:	fec42783          	lw	a5,-20(s0)
20014918:	e399                	bnez	a5,2001491e <__metal_driver_sifive_plic0_context_ids+0x14>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:407
		return 0;
2001491a:	4781                	li	a5,0
2001491c:	a011                	j	20014920 <__metal_driver_sifive_plic0_context_ids+0x16>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:410
	}
	else {
		return -1;
2001491e:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:412
	}
}
20014920:	853e                	mv	a0,a5
20014922:	4472                	lw	s0,28(sp)
20014924:	6105                	addi	sp,sp,32
20014926:	8082                	ret

20014928 <__metal_plic0_claim_interrupt>:
__metal_plic0_claim_interrupt():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:18
#include <metal/machine.h>
#include <metal/shutdown.h>

unsigned int
__metal_plic0_claim_interrupt(struct __metal_driver_riscv_plic0 *plic,
                              int context_id) {
20014928:	7179                	addi	sp,sp,-48
2001492a:	d606                	sw	ra,44(sp)
2001492c:	d422                	sw	s0,40(sp)
2001492e:	1800                	addi	s0,sp,48
20014930:	fca42e23          	sw	a0,-36(s0)
20014934:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:19
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20014938:	fdc42503          	lw	a0,-36(s0)
2001493c:	3721                	jal	20014844 <__metal_driver_sifive_plic0_control_base>
2001493e:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:21
        (struct metal_interrupt *)plic);
    return __METAL_ACCESS_ONCE(
20014942:	fd842783          	lw	a5,-40(s0)
20014946:	00c79713          	slli	a4,a5,0xc
2001494a:	fec42783          	lw	a5,-20(s0)
2001494e:	973e                	add	a4,a4,a5
20014950:	002007b7          	lui	a5,0x200
20014954:	0791                	addi	a5,a5,4
20014956:	97ba                	add	a5,a5,a4
20014958:	439c                	lw	a5,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:25
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM));
}
2001495a:	853e                	mv	a0,a5
2001495c:	50b2                	lw	ra,44(sp)
2001495e:	5422                	lw	s0,40(sp)
20014960:	6145                	addi	sp,sp,48
20014962:	8082                	ret

20014964 <__metal_plic0_complete_interrupt>:
__metal_plic0_complete_interrupt():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:28

void __metal_plic0_complete_interrupt(struct __metal_driver_riscv_plic0 *plic,
                                      int context_id, unsigned int id) {
20014964:	7179                	addi	sp,sp,-48
20014966:	d606                	sw	ra,44(sp)
20014968:	d422                	sw	s0,40(sp)
2001496a:	1800                	addi	s0,sp,48
2001496c:	fca42e23          	sw	a0,-36(s0)
20014970:	fcb42c23          	sw	a1,-40(s0)
20014974:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:29
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20014978:	fdc42503          	lw	a0,-36(s0)
2001497c:	35e1                	jal	20014844 <__metal_driver_sifive_plic0_control_base>
2001497e:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:31
        (struct metal_interrupt *)plic);
    __METAL_ACCESS_ONCE(
20014982:	fd842783          	lw	a5,-40(s0)
20014986:	00c79713          	slli	a4,a5,0xc
2001498a:	fec42783          	lw	a5,-20(s0)
2001498e:	973e                	add	a4,a4,a5
20014990:	002007b7          	lui	a5,0x200
20014994:	0791                	addi	a5,a5,4
20014996:	97ba                	add	a5,a5,a4
20014998:	873e                	mv	a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:34
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM)) = id;
2001499a:	fd442783          	lw	a5,-44(s0)
2001499e:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:35
}
200149a0:	0001                	nop
200149a2:	50b2                	lw	ra,44(sp)
200149a4:	5422                	lw	s0,40(sp)
200149a6:	6145                	addi	sp,sp,48
200149a8:	8082                	ret

200149aa <__metal_plic0_set_threshold>:
__metal_plic0_set_threshold():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:38

int __metal_plic0_set_threshold(struct metal_interrupt *controller,
                                int context_id, unsigned int threshold) {
200149aa:	7179                	addi	sp,sp,-48
200149ac:	d606                	sw	ra,44(sp)
200149ae:	d422                	sw	s0,40(sp)
200149b0:	1800                	addi	s0,sp,48
200149b2:	fca42e23          	sw	a0,-36(s0)
200149b6:	fcb42c23          	sw	a1,-40(s0)
200149ba:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:40
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
200149be:	fdc42503          	lw	a0,-36(s0)
200149c2:	3549                	jal	20014844 <__metal_driver_sifive_plic0_control_base>
200149c4:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:41
    __METAL_ACCESS_ONCE(
200149c8:	fd842783          	lw	a5,-40(s0)
200149cc:	00c79713          	slli	a4,a5,0xc
200149d0:	fec42783          	lw	a5,-20(s0)
200149d4:	973e                	add	a4,a4,a5
200149d6:	002007b7          	lui	a5,0x200
200149da:	97ba                	add	a5,a5,a4
200149dc:	873e                	mv	a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:44
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD)) = threshold;
200149de:	fd442783          	lw	a5,-44(s0)
200149e2:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:45
    return 0;
200149e4:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:46
}
200149e6:	853e                	mv	a0,a5
200149e8:	50b2                	lw	ra,44(sp)
200149ea:	5422                	lw	s0,40(sp)
200149ec:	6145                	addi	sp,sp,48
200149ee:	8082                	ret

200149f0 <__metal_plic0_get_threshold>:
__metal_plic0_get_threshold():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:49

unsigned int __metal_plic0_get_threshold(struct metal_interrupt *controller,
                                         int context_id) {
200149f0:	7179                	addi	sp,sp,-48
200149f2:	d606                	sw	ra,44(sp)
200149f4:	d422                	sw	s0,40(sp)
200149f6:	1800                	addi	s0,sp,48
200149f8:	fca42e23          	sw	a0,-36(s0)
200149fc:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:51
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
20014a00:	fdc42503          	lw	a0,-36(s0)
20014a04:	3581                	jal	20014844 <__metal_driver_sifive_plic0_control_base>
20014a06:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:52
    return __METAL_ACCESS_ONCE(
20014a0a:	fd842783          	lw	a5,-40(s0)
20014a0e:	00c79713          	slli	a4,a5,0xc
20014a12:	fec42783          	lw	a5,-20(s0)
20014a16:	973e                	add	a4,a4,a5
20014a18:	002007b7          	lui	a5,0x200
20014a1c:	97ba                	add	a5,a5,a4
20014a1e:	439c                	lw	a5,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:56
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD));
}
20014a20:	853e                	mv	a0,a5
20014a22:	50b2                	lw	ra,44(sp)
20014a24:	5422                	lw	s0,40(sp)
20014a26:	6145                	addi	sp,sp,48
20014a28:	8082                	ret

20014a2a <__metal_driver_riscv_plic0_set_priority>:
__metal_driver_riscv_plic0_set_priority():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:59

int __metal_driver_riscv_plic0_set_priority(struct metal_interrupt *controller,
                                            int id, unsigned int priority) {
20014a2a:	7179                	addi	sp,sp,-48
20014a2c:	d606                	sw	ra,44(sp)
20014a2e:	d422                	sw	s0,40(sp)
20014a30:	1800                	addi	s0,sp,48
20014a32:	fca42e23          	sw	a0,-36(s0)
20014a36:	fcb42c23          	sw	a1,-40(s0)
20014a3a:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:60
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20014a3e:	fdc42503          	lw	a0,-36(s0)
20014a42:	3509                	jal	20014844 <__metal_driver_sifive_plic0_control_base>
20014a44:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:62
        (struct metal_interrupt *)controller);
    unsigned int max_priority = __metal_driver_sifive_plic0_max_priority(
20014a48:	fdc42503          	lw	a0,-36(s0)
20014a4c:	35b1                	jal	20014898 <__metal_driver_sifive_plic0_max_priority>
20014a4e:	87aa                	mv	a5,a0
20014a50:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:64
        (struct metal_interrupt *)controller);
    if ((max_priority) && (priority < max_priority)) {
20014a54:	fe842783          	lw	a5,-24(s0)
20014a58:	c785                	beqz	a5,20014a80 <__metal_driver_riscv_plic0_set_priority+0x56>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:64 (discriminator 1)
20014a5a:	fd442703          	lw	a4,-44(s0)
20014a5e:	fe842783          	lw	a5,-24(s0)
20014a62:	00f77f63          	bgeu	a4,a5,20014a80 <__metal_driver_riscv_plic0_set_priority+0x56>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:65
        __METAL_ACCESS_ONCE(
20014a66:	fd842783          	lw	a5,-40(s0)
20014a6a:	078a                	slli	a5,a5,0x2
20014a6c:	873e                	mv	a4,a5
20014a6e:	fec42783          	lw	a5,-20(s0)
20014a72:	97ba                	add	a5,a5,a4
20014a74:	873e                	mv	a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:67
            (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                               (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT))) =
20014a76:	fd442783          	lw	a5,-44(s0)
20014a7a:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:69
            priority;
        return 0;
20014a7c:	4781                	li	a5,0
20014a7e:	a011                	j	20014a82 <__metal_driver_riscv_plic0_set_priority+0x58>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:71
    }
    return -1;
20014a80:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:72
}
20014a82:	853e                	mv	a0,a5
20014a84:	50b2                	lw	ra,44(sp)
20014a86:	5422                	lw	s0,40(sp)
20014a88:	6145                	addi	sp,sp,48
20014a8a:	8082                	ret

20014a8c <__metal_driver_riscv_plic0_get_priority>:
__metal_driver_riscv_plic0_get_priority():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:76

unsigned int
__metal_driver_riscv_plic0_get_priority(struct metal_interrupt *controller,
                                        int id) {
20014a8c:	7179                	addi	sp,sp,-48
20014a8e:	d606                	sw	ra,44(sp)
20014a90:	d422                	sw	s0,40(sp)
20014a92:	1800                	addi	s0,sp,48
20014a94:	fca42e23          	sw	a0,-36(s0)
20014a98:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:78
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
20014a9c:	fdc42503          	lw	a0,-36(s0)
20014aa0:	3355                	jal	20014844 <__metal_driver_sifive_plic0_control_base>
20014aa2:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:80

    return __METAL_ACCESS_ONCE(
20014aa6:	fd842783          	lw	a5,-40(s0)
20014aaa:	078a                	slli	a5,a5,0x2
20014aac:	873e                	mv	a4,a5
20014aae:	fec42783          	lw	a5,-20(s0)
20014ab2:	97ba                	add	a5,a5,a4
20014ab4:	439c                	lw	a5,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:83
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                           (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT)));
}
20014ab6:	853e                	mv	a0,a5
20014ab8:	50b2                	lw	ra,44(sp)
20014aba:	5422                	lw	s0,40(sp)
20014abc:	6145                	addi	sp,sp,48
20014abe:	8082                	ret

20014ac0 <__metal_plic0_enable>:
__metal_plic0_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:86

int __metal_plic0_enable(struct __metal_driver_riscv_plic0 *plic,
                         int context_id, int id, int enable) {
20014ac0:	7179                	addi	sp,sp,-48
20014ac2:	d606                	sw	ra,44(sp)
20014ac4:	d422                	sw	s0,40(sp)
20014ac6:	1800                	addi	s0,sp,48
20014ac8:	fca42e23          	sw	a0,-36(s0)
20014acc:	fcb42c23          	sw	a1,-40(s0)
20014ad0:	fcc42a23          	sw	a2,-44(s0)
20014ad4:	fcd42823          	sw	a3,-48(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:88
    unsigned int current;
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20014ad8:	fdc42503          	lw	a0,-36(s0)
20014adc:	33a5                	jal	20014844 <__metal_driver_sifive_plic0_control_base>
20014ade:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:91
        (struct metal_interrupt *)plic);

    current = __METAL_ACCESS_ONCE(
20014ae2:	fd842783          	lw	a5,-40(s0)
20014ae6:	00779713          	slli	a4,a5,0x7
20014aea:	fec42783          	lw	a5,-20(s0)
20014aee:	97ba                	add	a5,a5,a4
20014af0:	fd442703          	lw	a4,-44(s0)
20014af4:	8715                	srai	a4,a4,0x5
20014af6:	070a                	slli	a4,a4,0x2
20014af8:	973e                	add	a4,a4,a5
20014afa:	6789                	lui	a5,0x2
20014afc:	97ba                	add	a5,a5,a4
20014afe:	439c                	lw	a5,0(a5)
20014b00:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:100
    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_ENABLE_BASE +
                           (context_id * METAL_RISCV_PLIC0_ENABLE_PER_HART) +
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
20014b04:	fd042783          	lw	a5,-48(s0)
20014b08:	cf81                	beqz	a5,20014b20 <__metal_plic0_enable+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:99 (discriminator 1)
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
20014b0a:	fd442783          	lw	a5,-44(s0)
20014b0e:	8bfd                	andi	a5,a5,31
20014b10:	4705                	li	a4,1
20014b12:	00f717b3          	sll	a5,a4,a5
20014b16:	873e                	mv	a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 1)
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
20014b18:	fe842783          	lw	a5,-24(s0)
20014b1c:	8fd9                	or	a5,a5,a4
20014b1e:	a829                	j	20014b38 <__metal_plic0_enable+0x78>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 2)
20014b20:	fd442783          	lw	a5,-44(s0)
20014b24:	8bfd                	andi	a5,a5,31
20014b26:	4705                	li	a4,1
20014b28:	00f717b3          	sll	a5,a4,a5
20014b2c:	fff7c793          	not	a5,a5
20014b30:	873e                	mv	a4,a5
20014b32:	fe842783          	lw	a5,-24(s0)
20014b36:	8ff9                	and	a5,a5,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:95
    __METAL_ACCESS_ONCE(
20014b38:	fd842703          	lw	a4,-40(s0)
20014b3c:	00771693          	slli	a3,a4,0x7
20014b40:	fec42703          	lw	a4,-20(s0)
20014b44:	9736                	add	a4,a4,a3
20014b46:	fd442683          	lw	a3,-44(s0)
20014b4a:	8695                	srai	a3,a3,0x5
20014b4c:	068a                	slli	a3,a3,0x2
20014b4e:	96ba                	add	a3,a3,a4
20014b50:	6709                	lui	a4,0x2
20014b52:	9736                	add	a4,a4,a3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:98
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
20014b54:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:102

    return 0;
20014b56:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:103
}
20014b58:	853e                	mv	a0,a5
20014b5a:	50b2                	lw	ra,44(sp)
20014b5c:	5422                	lw	s0,40(sp)
20014b5e:	6145                	addi	sp,sp,48
20014b60:	8082                	ret

20014b62 <__metal_plic0_default_handler>:
__metal_plic0_default_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:105

void __metal_plic0_default_handler(int id, void *priv) { metal_shutdown(300); }
20014b62:	1101                	addi	sp,sp,-32
20014b64:	ce06                	sw	ra,28(sp)
20014b66:	cc22                	sw	s0,24(sp)
20014b68:	1000                	addi	s0,sp,32
20014b6a:	fea42623          	sw	a0,-20(s0)
20014b6e:	feb42423          	sw	a1,-24(s0)
20014b72:	12c00513          	li	a0,300
20014b76:	543020ef          	jal	ra,200178b8 <metal_shutdown>

20014b7a <__metal_plic0_handler>:
__metal_plic0_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:107

void __metal_plic0_handler(int id, void *priv) {
20014b7a:	7179                	addi	sp,sp,-48
20014b7c:	d606                	sw	ra,44(sp)
20014b7e:	d422                	sw	s0,40(sp)
20014b80:	1800                	addi	s0,sp,48
20014b82:	fca42e23          	sw	a0,-36(s0)
20014b86:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:108
    struct __metal_driver_riscv_plic0 *plic = priv;
20014b8a:	fd842783          	lw	a5,-40(s0)
20014b8e:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:110
    int contextid =
        __metal_driver_sifive_plic0_context_ids(__metal_myhart_id());
20014b92:	b7afe0ef          	jal	ra,20012f0c <__metal_myhart_id>
20014b96:	87aa                	mv	a5,a0
20014b98:	853e                	mv	a0,a5
20014b9a:	3b85                	jal	2001490a <__metal_driver_sifive_plic0_context_ids>
20014b9c:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:111
    unsigned int idx = __metal_plic0_claim_interrupt(plic, contextid);
20014ba0:	fe842583          	lw	a1,-24(s0)
20014ba4:	fec42503          	lw	a0,-20(s0)
20014ba8:	3341                	jal	20014928 <__metal_plic0_claim_interrupt>
20014baa:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:112
    unsigned int num_interrupts = __metal_driver_sifive_plic0_num_interrupts(
20014bae:	fec42503          	lw	a0,-20(s0)
20014bb2:	3975                	jal	2001486e <__metal_driver_sifive_plic0_num_interrupts>
20014bb4:	87aa                	mv	a5,a0
20014bb6:	fef42023          	sw	a5,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:115
        (struct metal_interrupt *)plic);

    if ((idx < num_interrupts) && (plic->metal_exint_table[idx])) {
20014bba:	fe442703          	lw	a4,-28(s0)
20014bbe:	fe042783          	lw	a5,-32(s0)
20014bc2:	04f77263          	bgeu	a4,a5,20014c06 <__metal_plic0_handler+0x8c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:115 (discriminator 1)
20014bc6:	fec42703          	lw	a4,-20(s0)
20014bca:	fe442783          	lw	a5,-28(s0)
20014bce:	078a                	slli	a5,a5,0x2
20014bd0:	97ba                	add	a5,a5,a4
20014bd2:	479c                	lw	a5,8(a5)
20014bd4:	cb8d                	beqz	a5,20014c06 <__metal_plic0_handler+0x8c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:116
        plic->metal_exint_table[idx](idx,
20014bd6:	fec42703          	lw	a4,-20(s0)
20014bda:	fe442783          	lw	a5,-28(s0)
20014bde:	078a                	slli	a5,a5,0x2
20014be0:	97ba                	add	a5,a5,a4
20014be2:	0087a803          	lw	a6,8(a5) # 2008 <__heap_size+0x1808>
20014be6:	fe442603          	lw	a2,-28(s0)
20014bea:	fec42683          	lw	a3,-20(s0)
20014bee:	fe442703          	lw	a4,-28(s0)
20014bf2:	87ba                	mv	a5,a4
20014bf4:	0786                	slli	a5,a5,0x1
20014bf6:	97ba                	add	a5,a5,a4
20014bf8:	078e                	slli	a5,a5,0x3
20014bfa:	97b6                	add	a5,a5,a3
20014bfc:	0f07a783          	lw	a5,240(a5)
20014c00:	85be                	mv	a1,a5
20014c02:	8532                	mv	a0,a2
20014c04:	9802                	jalr	a6
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:120
                                     plic->metal_exdata_table[idx].exint_data);
    }

    __metal_plic0_complete_interrupt(plic, contextid, idx);
20014c06:	fe442603          	lw	a2,-28(s0)
20014c0a:	fe842583          	lw	a1,-24(s0)
20014c0e:	fec42503          	lw	a0,-20(s0)
20014c12:	3b89                	jal	20014964 <__metal_plic0_complete_interrupt>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:121
}
20014c14:	0001                	nop
20014c16:	50b2                	lw	ra,44(sp)
20014c18:	5422                	lw	s0,40(sp)
20014c1a:	6145                	addi	sp,sp,48
20014c1c:	8082                	ret

20014c1e <__metal_driver_riscv_plic0_init>:
__metal_driver_riscv_plic0_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:123

void __metal_driver_riscv_plic0_init(struct metal_interrupt *controller) {
20014c1e:	7139                	addi	sp,sp,-64
20014c20:	de06                	sw	ra,60(sp)
20014c22:	dc22                	sw	s0,56(sp)
20014c24:	0080                	addi	s0,sp,64
20014c26:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:124
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20014c2a:	fcc42783          	lw	a5,-52(s0)
20014c2e:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:126

    if (!plic->init_done) {
20014c32:	fe442783          	lw	a5,-28(s0)
20014c36:	43dc                	lw	a5,4(a5)
20014c38:	12079763          	bnez	a5,20014d66 <__metal_driver_riscv_plic0_init+0x148>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:130
        int num_interrupts, line;
        struct metal_interrupt *intc;

        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
20014c3c:	fe042623          	sw	zero,-20(s0)
20014c40:	aa19                	j	20014d56 <__metal_driver_riscv_plic0_init+0x138>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:132
            num_interrupts =
                __metal_driver_sifive_plic0_num_interrupts(controller);
20014c42:	fcc42503          	lw	a0,-52(s0)
20014c46:	c29ff0ef          	jal	ra,2001486e <__metal_driver_sifive_plic0_num_interrupts>
20014c4a:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:133
            intc = __metal_driver_sifive_plic0_interrupt_parents(controller,
20014c4e:	fec42583          	lw	a1,-20(s0)
20014c52:	fcc42503          	lw	a0,-52(s0)
20014c56:	31ad                	jal	200148c0 <__metal_driver_sifive_plic0_interrupt_parents>
20014c58:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:136
                                                                 parent);
            line =
                __metal_driver_sifive_plic0_interrupt_lines(controller, parent);
20014c5c:	fec42583          	lw	a1,-20(s0)
20014c60:	fcc42503          	lw	a0,-52(s0)
20014c64:	3151                	jal	200148e8 <__metal_driver_sifive_plic0_interrupt_lines>
20014c66:	fca42c23          	sw	a0,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:139

            /* Initialize ist parent controller, aka cpu_intc. */
            intc->vtable->interrupt_init(intc);
20014c6a:	fdc42783          	lw	a5,-36(s0)
20014c6e:	439c                	lw	a5,0(a5)
20014c70:	439c                	lw	a5,0(a5)
20014c72:	fdc42503          	lw	a0,-36(s0)
20014c76:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:141

            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
20014c78:	fe042423          	sw	zero,-24(s0)
20014c7c:	a885                	j	20014cec <__metal_driver_riscv_plic0_init+0xce>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:142
                __metal_plic0_enable(plic, parent, i, METAL_DISABLE);
20014c7e:	4681                	li	a3,0
20014c80:	fe842603          	lw	a2,-24(s0)
20014c84:	fec42583          	lw	a1,-20(s0)
20014c88:	fe442503          	lw	a0,-28(s0)
20014c8c:	3d15                	jal	20014ac0 <__metal_plic0_enable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:143
                if (i < num_interrupts) {
20014c8e:	fe842703          	lw	a4,-24(s0)
20014c92:	fe042783          	lw	a5,-32(s0)
20014c96:	04f75663          	bge	a4,a5,20014ce2 <__metal_driver_riscv_plic0_init+0xc4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:144
                    __metal_driver_riscv_plic0_set_priority(controller, i, 0);
20014c9a:	4601                	li	a2,0
20014c9c:	fe842583          	lw	a1,-24(s0)
20014ca0:	fcc42503          	lw	a0,-52(s0)
20014ca4:	3359                	jal	20014a2a <__metal_driver_riscv_plic0_set_priority>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:145
                    plic->metal_exint_table[i] = NULL;
20014ca6:	fe442703          	lw	a4,-28(s0)
20014caa:	fe842783          	lw	a5,-24(s0)
20014cae:	078a                	slli	a5,a5,0x2
20014cb0:	97ba                	add	a5,a5,a4
20014cb2:	0007a423          	sw	zero,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:146
                    plic->metal_exdata_table[i].sub_int = NULL;
20014cb6:	fe442683          	lw	a3,-28(s0)
20014cba:	fe842703          	lw	a4,-24(s0)
20014cbe:	87ba                	mv	a5,a4
20014cc0:	0786                	slli	a5,a5,0x1
20014cc2:	97ba                	add	a5,a5,a4
20014cc4:	078e                	slli	a5,a5,0x3
20014cc6:	97b6                	add	a5,a5,a3
20014cc8:	0e07a623          	sw	zero,236(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:147
                    plic->metal_exdata_table[i].exint_data = NULL;
20014ccc:	fe442683          	lw	a3,-28(s0)
20014cd0:	fe842703          	lw	a4,-24(s0)
20014cd4:	87ba                	mv	a5,a4
20014cd6:	0786                	slli	a5,a5,0x1
20014cd8:	97ba                	add	a5,a5,a4
20014cda:	078e                	slli	a5,a5,0x3
20014cdc:	97b6                	add	a5,a5,a3
20014cde:	0e07a823          	sw	zero,240(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 2)
            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
20014ce2:	fe842783          	lw	a5,-24(s0)
20014ce6:	0785                	addi	a5,a5,1
20014ce8:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 1)
20014cec:	fe842703          	lw	a4,-24(s0)
20014cf0:	3ff00793          	li	a5,1023
20014cf4:	f8e7d5e3          	bge	a5,a4,20014c7e <__metal_driver_riscv_plic0_init+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:151 (discriminator 2)
                }
            }

            __metal_plic0_set_threshold(controller, parent, 0);
20014cf8:	4601                	li	a2,0
20014cfa:	fec42583          	lw	a1,-20(s0)
20014cfe:	fcc42503          	lw	a0,-52(s0)
20014d02:	3165                	jal	200149aa <__metal_plic0_set_threshold>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:154 (discriminator 2)

            /* Register plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_register(intc, line, NULL, plic);
20014d04:	fdc42783          	lw	a5,-36(s0)
20014d08:	439c                	lw	a5,0(a5)
20014d0a:	4fdc                	lw	a5,28(a5)
20014d0c:	fe442683          	lw	a3,-28(s0)
20014d10:	4601                	li	a2,0
20014d12:	fd842583          	lw	a1,-40(s0)
20014d16:	fdc42503          	lw	a0,-36(s0)
20014d1a:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:156 (discriminator 2)
            /* Register plic handler for dispatching its device interrupts */
            intc->vtable->interrupt_register(intc, line, __metal_plic0_handler,
20014d1c:	fdc42783          	lw	a5,-36(s0)
20014d20:	439c                	lw	a5,0(a5)
20014d22:	4fd8                	lw	a4,28(a5)
20014d24:	fe442683          	lw	a3,-28(s0)
20014d28:	200157b7          	lui	a5,0x20015
20014d2c:	b7a78613          	addi	a2,a5,-1158 # 20014b7a <__metal_plic0_handler>
20014d30:	fd842583          	lw	a1,-40(s0)
20014d34:	fdc42503          	lw	a0,-36(s0)
20014d38:	9702                	jalr	a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:159 (discriminator 2)
                                             plic);
            /* Enable plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_enable(intc, line);
20014d3a:	fdc42783          	lw	a5,-36(s0)
20014d3e:	439c                	lw	a5,0(a5)
20014d40:	53dc                	lw	a5,36(a5)
20014d42:	fd842583          	lw	a1,-40(s0)
20014d46:	fdc42503          	lw	a0,-36(s0)
20014d4a:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 2)
        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
20014d4c:	fec42783          	lw	a5,-20(s0)
20014d50:	0785                	addi	a5,a5,1
20014d52:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 1)
20014d56:	fec42783          	lw	a5,-20(s0)
20014d5a:	eef054e3          	blez	a5,20014c42 <__metal_driver_riscv_plic0_init+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:161
        }
        plic->init_done = 1;
20014d5e:	fe442783          	lw	a5,-28(s0)
20014d62:	4705                	li	a4,1
20014d64:	c3d8                	sw	a4,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:163
    }
}
20014d66:	0001                	nop
20014d68:	50f2                	lw	ra,60(sp)
20014d6a:	5462                	lw	s0,56(sp)
20014d6c:	6121                	addi	sp,sp,64
20014d6e:	8082                	ret

20014d70 <__metal_driver_riscv_plic0_register>:
__metal_driver_riscv_plic0_register():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:167

int __metal_driver_riscv_plic0_register(struct metal_interrupt *controller,
                                        int id, metal_interrupt_handler_t isr,
                                        void *priv) {
20014d70:	7179                	addi	sp,sp,-48
20014d72:	d606                	sw	ra,44(sp)
20014d74:	d422                	sw	s0,40(sp)
20014d76:	1800                	addi	s0,sp,48
20014d78:	fca42e23          	sw	a0,-36(s0)
20014d7c:	fcb42c23          	sw	a1,-40(s0)
20014d80:	fcc42a23          	sw	a2,-44(s0)
20014d84:	fcd42823          	sw	a3,-48(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:168
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20014d88:	fdc42783          	lw	a5,-36(s0)
20014d8c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:170

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20014d90:	fdc42503          	lw	a0,-36(s0)
20014d94:	adbff0ef          	jal	ra,2001486e <__metal_driver_sifive_plic0_num_interrupts>
20014d98:	872a                	mv	a4,a0
20014d9a:	fd842783          	lw	a5,-40(s0)
20014d9e:	00e7c463          	blt	a5,a4,20014da6 <__metal_driver_riscv_plic0_register+0x36>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:171
        return -1;
20014da2:	57fd                	li	a5,-1
20014da4:	a051                	j	20014e28 <__metal_driver_riscv_plic0_register+0xb8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:174
    }

    if (isr) {
20014da6:	fd442783          	lw	a5,-44(s0)
20014daa:	cf9d                	beqz	a5,20014de8 <__metal_driver_riscv_plic0_register+0x78>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:175
        __metal_driver_riscv_plic0_set_priority(controller, id, 2);
20014dac:	4609                	li	a2,2
20014dae:	fd842583          	lw	a1,-40(s0)
20014db2:	fdc42503          	lw	a0,-36(s0)
20014db6:	c75ff0ef          	jal	ra,20014a2a <__metal_driver_riscv_plic0_set_priority>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:176
        plic->metal_exint_table[id] = isr;
20014dba:	fec42703          	lw	a4,-20(s0)
20014dbe:	fd842783          	lw	a5,-40(s0)
20014dc2:	078a                	slli	a5,a5,0x2
20014dc4:	97ba                	add	a5,a5,a4
20014dc6:	fd442703          	lw	a4,-44(s0)
20014dca:	c798                	sw	a4,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:177
        plic->metal_exdata_table[id].exint_data = priv;
20014dcc:	fec42683          	lw	a3,-20(s0)
20014dd0:	fd842703          	lw	a4,-40(s0)
20014dd4:	87ba                	mv	a5,a4
20014dd6:	0786                	slli	a5,a5,0x1
20014dd8:	97ba                	add	a5,a5,a4
20014dda:	078e                	slli	a5,a5,0x3
20014ddc:	97b6                	add	a5,a5,a3
20014dde:	fd042703          	lw	a4,-48(s0)
20014de2:	0ee7a823          	sw	a4,240(a5)
20014de6:	a081                	j	20014e26 <__metal_driver_riscv_plic0_register+0xb6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:179
    } else {
        __metal_driver_riscv_plic0_set_priority(controller, id, 1);
20014de8:	4605                	li	a2,1
20014dea:	fd842583          	lw	a1,-40(s0)
20014dee:	fdc42503          	lw	a0,-36(s0)
20014df2:	c39ff0ef          	jal	ra,20014a2a <__metal_driver_riscv_plic0_set_priority>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:180
        plic->metal_exint_table[id] = __metal_plic0_default_handler;
20014df6:	fec42703          	lw	a4,-20(s0)
20014dfa:	fd842783          	lw	a5,-40(s0)
20014dfe:	078a                	slli	a5,a5,0x2
20014e00:	97ba                	add	a5,a5,a4
20014e02:	20015737          	lui	a4,0x20015
20014e06:	b6270713          	addi	a4,a4,-1182 # 20014b62 <__metal_plic0_default_handler>
20014e0a:	c798                	sw	a4,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:181
        plic->metal_exdata_table[id].sub_int = priv;
20014e0c:	fec42683          	lw	a3,-20(s0)
20014e10:	fd842703          	lw	a4,-40(s0)
20014e14:	87ba                	mv	a5,a4
20014e16:	0786                	slli	a5,a5,0x1
20014e18:	97ba                	add	a5,a5,a4
20014e1a:	078e                	slli	a5,a5,0x3
20014e1c:	97b6                	add	a5,a5,a3
20014e1e:	fd042703          	lw	a4,-48(s0)
20014e22:	0ee7a623          	sw	a4,236(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:184
    }

    return 0;
20014e26:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:185
}
20014e28:	853e                	mv	a0,a5
20014e2a:	50b2                	lw	ra,44(sp)
20014e2c:	5422                	lw	s0,40(sp)
20014e2e:	6145                	addi	sp,sp,48
20014e30:	8082                	ret

20014e32 <__metal_driver_riscv_plic0_enable>:
__metal_driver_riscv_plic0_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:188

int __metal_driver_riscv_plic0_enable(struct metal_interrupt *controller,
                                      int id) {
20014e32:	7179                	addi	sp,sp,-48
20014e34:	d606                	sw	ra,44(sp)
20014e36:	d422                	sw	s0,40(sp)
20014e38:	1800                	addi	s0,sp,48
20014e3a:	fca42e23          	sw	a0,-36(s0)
20014e3e:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:189
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20014e42:	fdc42783          	lw	a5,-36(s0)
20014e46:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:191

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20014e4a:	fdc42503          	lw	a0,-36(s0)
20014e4e:	a21ff0ef          	jal	ra,2001486e <__metal_driver_sifive_plic0_num_interrupts>
20014e52:	872a                	mv	a4,a0
20014e54:	fd842783          	lw	a5,-40(s0)
20014e58:	00e7c463          	blt	a5,a4,20014e60 <__metal_driver_riscv_plic0_enable+0x2e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:192
        return -1;
20014e5c:	57fd                	li	a5,-1
20014e5e:	a829                	j	20014e78 <__metal_driver_riscv_plic0_enable+0x46>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:195
    }

    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_ENABLE);
20014e60:	8acfe0ef          	jal	ra,20012f0c <__metal_myhart_id>
20014e64:	87aa                	mv	a5,a0
20014e66:	4685                	li	a3,1
20014e68:	fd842603          	lw	a2,-40(s0)
20014e6c:	85be                	mv	a1,a5
20014e6e:	fec42503          	lw	a0,-20(s0)
20014e72:	c4fff0ef          	jal	ra,20014ac0 <__metal_plic0_enable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:196
    return 0;
20014e76:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:197
}
20014e78:	853e                	mv	a0,a5
20014e7a:	50b2                	lw	ra,44(sp)
20014e7c:	5422                	lw	s0,40(sp)
20014e7e:	6145                	addi	sp,sp,48
20014e80:	8082                	ret

20014e82 <__metal_driver_riscv_plic0_disable>:
__metal_driver_riscv_plic0_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:200

int __metal_driver_riscv_plic0_disable(struct metal_interrupt *controller,
                                       int id) {
20014e82:	7179                	addi	sp,sp,-48
20014e84:	d606                	sw	ra,44(sp)
20014e86:	d422                	sw	s0,40(sp)
20014e88:	1800                	addi	s0,sp,48
20014e8a:	fca42e23          	sw	a0,-36(s0)
20014e8e:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:201
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20014e92:	fdc42783          	lw	a5,-36(s0)
20014e96:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:203

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20014e9a:	fdc42503          	lw	a0,-36(s0)
20014e9e:	9d1ff0ef          	jal	ra,2001486e <__metal_driver_sifive_plic0_num_interrupts>
20014ea2:	872a                	mv	a4,a0
20014ea4:	fd842783          	lw	a5,-40(s0)
20014ea8:	00e7c463          	blt	a5,a4,20014eb0 <__metal_driver_riscv_plic0_disable+0x2e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:204
        return -1;
20014eac:	57fd                	li	a5,-1
20014eae:	a829                	j	20014ec8 <__metal_driver_riscv_plic0_disable+0x46>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:206
    }
    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_DISABLE);
20014eb0:	85cfe0ef          	jal	ra,20012f0c <__metal_myhart_id>
20014eb4:	87aa                	mv	a5,a0
20014eb6:	4681                	li	a3,0
20014eb8:	fd842603          	lw	a2,-40(s0)
20014ebc:	85be                	mv	a1,a5
20014ebe:	fec42503          	lw	a0,-20(s0)
20014ec2:	bffff0ef          	jal	ra,20014ac0 <__metal_plic0_enable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:207
    return 0;
20014ec6:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:208
}
20014ec8:	853e                	mv	a0,a5
20014eca:	50b2                	lw	ra,44(sp)
20014ecc:	5422                	lw	s0,40(sp)
20014ece:	6145                	addi	sp,sp,48
20014ed0:	8082                	ret

20014ed2 <__metal_driver_riscv_plic0_set_threshold>:
__metal_driver_riscv_plic0_set_threshold():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:211

int __metal_driver_riscv_plic0_set_threshold(struct metal_interrupt *controller,
                                             unsigned int threshold) {
20014ed2:	1101                	addi	sp,sp,-32
20014ed4:	ce06                	sw	ra,28(sp)
20014ed6:	cc22                	sw	s0,24(sp)
20014ed8:	1000                	addi	s0,sp,32
20014eda:	fea42623          	sw	a0,-20(s0)
20014ede:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:212
    return __metal_plic0_set_threshold(controller, __metal_myhart_id(),
20014ee2:	82afe0ef          	jal	ra,20012f0c <__metal_myhart_id>
20014ee6:	87aa                	mv	a5,a0
20014ee8:	fe842603          	lw	a2,-24(s0)
20014eec:	85be                	mv	a1,a5
20014eee:	fec42503          	lw	a0,-20(s0)
20014ef2:	ab9ff0ef          	jal	ra,200149aa <__metal_plic0_set_threshold>
20014ef6:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:214
                                       threshold);
}
20014ef8:	853e                	mv	a0,a5
20014efa:	40f2                	lw	ra,28(sp)
20014efc:	4462                	lw	s0,24(sp)
20014efe:	6105                	addi	sp,sp,32
20014f00:	8082                	ret

20014f02 <__metal_driver_riscv_plic0_get_threshold>:
__metal_driver_riscv_plic0_get_threshold():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:217

unsigned int
__metal_driver_riscv_plic0_get_threshold(struct metal_interrupt *controller) {
20014f02:	1101                	addi	sp,sp,-32
20014f04:	ce06                	sw	ra,28(sp)
20014f06:	cc22                	sw	s0,24(sp)
20014f08:	1000                	addi	s0,sp,32
20014f0a:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:218
    return __metal_plic0_get_threshold(controller, __metal_myhart_id());
20014f0e:	ffffd0ef          	jal	ra,20012f0c <__metal_myhart_id>
20014f12:	87aa                	mv	a5,a0
20014f14:	85be                	mv	a1,a5
20014f16:	fec42503          	lw	a0,-20(s0)
20014f1a:	ad7ff0ef          	jal	ra,200149f0 <__metal_plic0_get_threshold>
20014f1e:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:219
}
20014f20:	853e                	mv	a0,a5
20014f22:	40f2                	lw	ra,28(sp)
20014f24:	4462                	lw	s0,24(sp)
20014f26:	6105                	addi	sp,sp,32
20014f28:	8082                	ret

20014f2a <__metal_driver_riscv_plic0_affinity_enable>:
__metal_driver_riscv_plic0_affinity_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:223

metal_affinity
__metal_driver_riscv_plic0_affinity_enable(struct metal_interrupt *controller,
                                           metal_affinity bitmask, int id) {
20014f2a:	7179                	addi	sp,sp,-48
20014f2c:	d606                	sw	ra,44(sp)
20014f2e:	d422                	sw	s0,40(sp)
20014f30:	1800                	addi	s0,sp,48
20014f32:	fca42e23          	sw	a0,-36(s0)
20014f36:	fcb42c23          	sw	a1,-40(s0)
20014f3a:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:224
    metal_affinity ret = {0};
20014f3e:	fe042223          	sw	zero,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:227
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20014f42:	fdc42783          	lw	a5,-36(s0)
20014f46:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:229

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20014f4a:	fdc42503          	lw	a0,-36(s0)
20014f4e:	921ff0ef          	jal	ra,2001486e <__metal_driver_sifive_plic0_num_interrupts>
20014f52:	872a                	mv	a4,a0
20014f54:	fd442783          	lw	a5,-44(s0)
20014f58:	00e7c863          	blt	a5,a4,20014f68 <__metal_driver_riscv_plic0_affinity_enable+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:230
        metal_affinity_set_val(ret, -1);
20014f5c:	57fd                	li	a5,-1
20014f5e:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:231
        return ret;
20014f62:	fe442783          	lw	a5,-28(s0)
20014f66:	a899                	j	20014fbc <__metal_driver_riscv_plic0_affinity_enable+0x92>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:234
    }

    for_each_metal_affinity(context, bitmask) {
20014f68:	fe042623          	sw	zero,-20(s0)
20014f6c:	a099                	j	20014fb2 <__metal_driver_riscv_plic0_affinity_enable+0x88>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:235
        if (context != 0)
20014f6e:	fec42783          	lw	a5,-20(s0)
20014f72:	c795                	beqz	a5,20014f9e <__metal_driver_riscv_plic0_affinity_enable+0x74>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:236
            metal_affinity_set_bit(
20014f74:	4685                	li	a3,1
20014f76:	fd442603          	lw	a2,-44(s0)
20014f7a:	fec42583          	lw	a1,-20(s0)
20014f7e:	fe842503          	lw	a0,-24(s0)
20014f82:	b3fff0ef          	jal	ra,20014ac0 <__metal_plic0_enable>
20014f86:	87aa                	mv	a5,a0
20014f88:	0017f713          	andi	a4,a5,1
20014f8c:	fec42783          	lw	a5,-20(s0)
20014f90:	00f71733          	sll	a4,a4,a5
20014f94:	fe442783          	lw	a5,-28(s0)
20014f98:	8fd9                	or	a5,a5,a4
20014f9a:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
20014f9e:	fec42783          	lw	a5,-20(s0)
20014fa2:	0785                	addi	a5,a5,1
20014fa4:	fef42623          	sw	a5,-20(s0)
20014fa8:	fd842783          	lw	a5,-40(s0)
20014fac:	8385                	srli	a5,a5,0x1
20014fae:	fcf42c23          	sw	a5,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 1)
20014fb2:	fd842783          	lw	a5,-40(s0)
20014fb6:	ffc5                	bnez	a5,20014f6e <__metal_driver_riscv_plic0_affinity_enable+0x44>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:241
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_ENABLE));
    }

    return ret;
20014fb8:	fe442783          	lw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:242 (discriminator 1)
}
20014fbc:	853e                	mv	a0,a5
20014fbe:	50b2                	lw	ra,44(sp)
20014fc0:	5422                	lw	s0,40(sp)
20014fc2:	6145                	addi	sp,sp,48
20014fc4:	8082                	ret

20014fc6 <__metal_driver_riscv_plic0_affinity_disable>:
__metal_driver_riscv_plic0_affinity_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:246

metal_affinity
__metal_driver_riscv_plic0_affinity_disable(struct metal_interrupt *controller,
                                            metal_affinity bitmask, int id) {
20014fc6:	7179                	addi	sp,sp,-48
20014fc8:	d606                	sw	ra,44(sp)
20014fca:	d422                	sw	s0,40(sp)
20014fcc:	1800                	addi	s0,sp,48
20014fce:	fca42e23          	sw	a0,-36(s0)
20014fd2:	fcb42c23          	sw	a1,-40(s0)
20014fd6:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:247
    metal_affinity ret = {0};
20014fda:	fe042223          	sw	zero,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:250
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20014fde:	fdc42783          	lw	a5,-36(s0)
20014fe2:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:252

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20014fe6:	fdc42503          	lw	a0,-36(s0)
20014fea:	885ff0ef          	jal	ra,2001486e <__metal_driver_sifive_plic0_num_interrupts>
20014fee:	872a                	mv	a4,a0
20014ff0:	fd442783          	lw	a5,-44(s0)
20014ff4:	00e7c863          	blt	a5,a4,20015004 <__metal_driver_riscv_plic0_affinity_disable+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:253
        metal_affinity_set_val(ret, -1);
20014ff8:	57fd                	li	a5,-1
20014ffa:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:254
        return ret;
20014ffe:	fe442783          	lw	a5,-28(s0)
20015002:	a899                	j	20015058 <__metal_driver_riscv_plic0_affinity_disable+0x92>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:257
    }

    for_each_metal_affinity(context, bitmask) {
20015004:	fe042623          	sw	zero,-20(s0)
20015008:	a099                	j	2001504e <__metal_driver_riscv_plic0_affinity_disable+0x88>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:258
        if (context != 0)
2001500a:	fec42783          	lw	a5,-20(s0)
2001500e:	c795                	beqz	a5,2001503a <__metal_driver_riscv_plic0_affinity_disable+0x74>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:259
            metal_affinity_set_bit(
20015010:	4681                	li	a3,0
20015012:	fd442603          	lw	a2,-44(s0)
20015016:	fec42583          	lw	a1,-20(s0)
2001501a:	fe842503          	lw	a0,-24(s0)
2001501e:	aa3ff0ef          	jal	ra,20014ac0 <__metal_plic0_enable>
20015022:	87aa                	mv	a5,a0
20015024:	0017f713          	andi	a4,a5,1
20015028:	fec42783          	lw	a5,-20(s0)
2001502c:	00f71733          	sll	a4,a4,a5
20015030:	fe442783          	lw	a5,-28(s0)
20015034:	8fd9                	or	a5,a5,a4
20015036:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
2001503a:	fec42783          	lw	a5,-20(s0)
2001503e:	0785                	addi	a5,a5,1
20015040:	fef42623          	sw	a5,-20(s0)
20015044:	fd842783          	lw	a5,-40(s0)
20015048:	8385                	srli	a5,a5,0x1
2001504a:	fcf42c23          	sw	a5,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 1)
2001504e:	fd842783          	lw	a5,-40(s0)
20015052:	ffc5                	bnez	a5,2001500a <__metal_driver_riscv_plic0_affinity_disable+0x44>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:264
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_DISABLE));
    }

    return ret;
20015054:	fe442783          	lw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:265 (discriminator 1)
}
20015058:	853e                	mv	a0,a5
2001505a:	50b2                	lw	ra,44(sp)
2001505c:	5422                	lw	s0,40(sp)
2001505e:	6145                	addi	sp,sp,48
20015060:	8082                	ret

20015062 <__metal_driver_riscv_plic0_affinity_set_threshold>:
__metal_driver_riscv_plic0_affinity_set_threshold():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:269

metal_affinity __metal_driver_riscv_plic0_affinity_set_threshold(
    struct metal_interrupt *controller, metal_affinity bitmask,
    unsigned int threshold) {
20015062:	7179                	addi	sp,sp,-48
20015064:	d606                	sw	ra,44(sp)
20015066:	d422                	sw	s0,40(sp)
20015068:	1800                	addi	s0,sp,48
2001506a:	fca42e23          	sw	a0,-36(s0)
2001506e:	fcb42c23          	sw	a1,-40(s0)
20015072:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:270
    metal_affinity ret = {0};
20015076:	fe042423          	sw	zero,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:273
    int context;

    for_each_metal_affinity(context, bitmask) {
2001507a:	fe042623          	sw	zero,-20(s0)
2001507e:	a091                	j	200150c2 <__metal_driver_riscv_plic0_affinity_set_threshold+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:274
        if (context != 0)
20015080:	fec42783          	lw	a5,-20(s0)
20015084:	c78d                	beqz	a5,200150ae <__metal_driver_riscv_plic0_affinity_set_threshold+0x4c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:275
            metal_affinity_set_bit(
20015086:	fd442603          	lw	a2,-44(s0)
2001508a:	fec42583          	lw	a1,-20(s0)
2001508e:	fdc42503          	lw	a0,-36(s0)
20015092:	919ff0ef          	jal	ra,200149aa <__metal_plic0_set_threshold>
20015096:	87aa                	mv	a5,a0
20015098:	0017f713          	andi	a4,a5,1
2001509c:	fec42783          	lw	a5,-20(s0)
200150a0:	00f71733          	sll	a4,a4,a5
200150a4:	fe842783          	lw	a5,-24(s0)
200150a8:	8fd9                	or	a5,a5,a4
200150aa:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
200150ae:	fec42783          	lw	a5,-20(s0)
200150b2:	0785                	addi	a5,a5,1
200150b4:	fef42623          	sw	a5,-20(s0)
200150b8:	fd842783          	lw	a5,-40(s0)
200150bc:	8385                	srli	a5,a5,0x1
200150be:	fcf42c23          	sw	a5,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 1)
200150c2:	fd842783          	lw	a5,-40(s0)
200150c6:	ffcd                	bnez	a5,20015080 <__metal_driver_riscv_plic0_affinity_set_threshold+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:280
                ret, context,
                __metal_plic0_set_threshold(controller, context, threshold));
    }

    return ret;
200150c8:	fe842783          	lw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:281
}
200150cc:	853e                	mv	a0,a5
200150ce:	50b2                	lw	ra,44(sp)
200150d0:	5422                	lw	s0,40(sp)
200150d2:	6145                	addi	sp,sp,48
200150d4:	8082                	ret

200150d6 <__metal_driver_riscv_plic0_affinity_get_threshold>:
__metal_driver_riscv_plic0_affinity_get_threshold():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:284

unsigned int __metal_driver_riscv_plic0_affinity_get_threshold(
    struct metal_interrupt *controller, int context_id) {
200150d6:	1101                	addi	sp,sp,-32
200150d8:	ce06                	sw	ra,28(sp)
200150da:	cc22                	sw	s0,24(sp)
200150dc:	1000                	addi	s0,sp,32
200150de:	fea42623          	sw	a0,-20(s0)
200150e2:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:285
    __metal_plic0_get_threshold(controller, context_id);
200150e6:	fe842583          	lw	a1,-24(s0)
200150ea:	fec42503          	lw	a0,-20(s0)
200150ee:	903ff0ef          	jal	ra,200149f0 <__metal_plic0_get_threshold>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:286
    return 0;
200150f2:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:287
}
200150f4:	853e                	mv	a0,a5
200150f6:	40f2                	lw	ra,28(sp)
200150f8:	4462                	lw	s0,24(sp)
200150fa:	6105                	addi	sp,sp,32
200150fc:	8082                	ret

200150fe <__metal_driver_sifive_fe310_g000_hfrosc_ref>:
__metal_driver_sifive_fe310_g000_hfrosc_ref():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1242



/* --------------------- sifive_fe310_g000_hfrosc ------------ */
static __inline__ struct metal_clock * __metal_driver_sifive_fe310_g000_hfrosc_ref(const struct metal_clock *clock)
{
200150fe:	1101                	addi	sp,sp,-32
20015100:	ce22                	sw	s0,28(sp)
20015102:	1000                	addi	s0,sp,32
20015104:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1243
		return (struct metal_clock *)&__metal_dt_clock_2.clock;
20015108:	800007b7          	lui	a5,0x80000
2001510c:	06c78793          	addi	a5,a5,108 # 8000006c <metal_segment_heap_target_end+0xffffe8ac>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1244
}
20015110:	853e                	mv	a0,a5
20015112:	4472                	lw	s0,28(sp)
20015114:	6105                	addi	sp,sp,32
20015116:	8082                	ret

20015118 <__metal_driver_sifive_fe310_g000_hfrosc_config_base>:
__metal_driver_sifive_fe310_g000_hfrosc_config_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1247

static __inline__ struct __metal_driver_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_hfrosc_config_base(const struct metal_clock *clock)
{
20015118:	1101                	addi	sp,sp,-32
2001511a:	ce22                	sw	s0,28(sp)
2001511c:	1000                	addi	s0,sp,32
2001511e:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1248
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20015122:	82418793          	addi	a5,gp,-2012 # 80000ae4 <__metal_dt_prci_10008000>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1249
}
20015126:	853e                	mv	a0,a5
20015128:	4472                	lw	s0,28(sp)
2001512a:	6105                	addi	sp,sp,32
2001512c:	8082                	ret

2001512e <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfrosc_config_offset():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1257
{
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
}

static __inline__ long __metal_driver_sifive_fe310_g000_hfrosc_config_offset(const struct metal_clock *clock)
{
2001512e:	1101                	addi	sp,sp,-32
20015130:	ce22                	sw	s0,28(sp)
20015132:	1000                	addi	s0,sp,32
20015134:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1258
		return METAL_SIFIVE_FE310_G000_PRCI_HFROSCCFG;
20015138:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1259
}
2001513a:	853e                	mv	a0,a5
2001513c:	4472                	lw	s0,28(sp)
2001513e:	6105                	addi	sp,sp,32
20015140:	8082                	ret

20015142 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1374
{
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_SIZE;
}

static __inline__ const struct __metal_driver_vtable_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_prci_vtable( )
{
20015142:	1141                	addi	sp,sp,-16
20015144:	c622                	sw	s0,12(sp)
20015146:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1375
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20015148:	83818793          	addi	a5,gp,-1992 # 80000af8 <__metal_driver_vtable_sifive_fe310_g000_prci>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1376
}
2001514c:	853e                	mv	a0,a5
2001514e:	4432                	lw	s0,12(sp)
20015150:	0141                	addi	sp,sp,16
20015152:	8082                	ret

20015154 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:17
#define CONFIG_TRIM 0x001F0000UL
#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(
    const struct metal_clock *clock) {
20015154:	7139                	addi	sp,sp,-64
20015156:	de06                	sw	ra,60(sp)
20015158:	dc22                	sw	s0,56(sp)
2001515a:	0080                	addi	s0,sp,64
2001515c:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:19
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfrosc_ref(clock);
20015160:	fcc42503          	lw	a0,-52(s0)
20015164:	3f69                	jal	200150fe <__metal_driver_sifive_fe310_g000_hfrosc_ref>
20015166:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:21
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfrosc_config_offset(clock);
2001516a:	fcc42503          	lw	a0,-52(s0)
2001516e:	37c1                	jal	2001512e <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>
20015170:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:23
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfrosc_config_base(clock);
20015174:	fcc42503          	lw	a0,-52(s0)
20015178:	3745                	jal	20015118 <__metal_driver_sifive_fe310_g000_hfrosc_config_base>
2001517a:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:25
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
2001517e:	37d1                	jal	20015142 <__metal_driver_sifive_fe310_g000_prci_vtable>
20015180:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:26
    long cfg = vtable->get_reg(config_base, config_offset);
20015184:	fe042783          	lw	a5,-32(s0)
20015188:	439c                	lw	a5,0(a5)
2001518a:	fe842583          	lw	a1,-24(s0)
2001518e:	fe442503          	lw	a0,-28(s0)
20015192:	9782                	jalr	a5
20015194:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:28

    if ((cfg & CONFIG_ENABLE) == 0)
20015198:	fdc42703          	lw	a4,-36(s0)
2001519c:	400007b7          	lui	a5,0x40000
200151a0:	8ff9                	and	a5,a5,a4
200151a2:	e399                	bnez	a5,200151a8 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x54>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:29
        return -1;
200151a4:	57fd                	li	a5,-1
200151a6:	a025                	j	200151ce <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:30
    if ((cfg & CONFIG_READY) == 0)
200151a8:	fdc42783          	lw	a5,-36(s0)
200151ac:	0007c463          	bltz	a5,200151b4 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:31
        return -1;
200151b0:	57fd                	li	a5,-1
200151b2:	a831                	j	200151ce <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:32
    return metal_clock_get_rate_hz(ref) / ((cfg & CONFIG_DIVIDER) + 1);
200151b4:	fec42503          	lw	a0,-20(s0)
200151b8:	44a020ef          	jal	ra,20017602 <metal_clock_get_rate_hz>
200151bc:	87aa                	mv	a5,a0
200151be:	873e                	mv	a4,a5
200151c0:	fdc42783          	lw	a5,-36(s0)
200151c4:	03f7f793          	andi	a5,a5,63
200151c8:	0785                	addi	a5,a5,1
200151ca:	02f757b3          	divu	a5,a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:33
}
200151ce:	853e                	mv	a0,a5
200151d0:	50f2                	lw	ra,60(sp)
200151d2:	5462                	lw	s0,56(sp)
200151d4:	6121                	addi	sp,sp,64
200151d6:	8082                	ret

200151d8 <__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:36

long __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
200151d8:	1101                	addi	sp,sp,-32
200151da:	ce06                	sw	ra,28(sp)
200151dc:	cc22                	sw	s0,24(sp)
200151de:	1000                	addi	s0,sp,32
200151e0:	fea42623          	sw	a0,-20(s0)
200151e4:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:37
    return __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(clock);
200151e8:	fec42503          	lw	a0,-20(s0)
200151ec:	37a5                	jal	20015154 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>
200151ee:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:38
}
200151f0:	853e                	mv	a0,a5
200151f2:	40f2                	lw	ra,28(sp)
200151f4:	4462                	lw	s0,24(sp)
200151f6:	6105                	addi	sp,sp,32
200151f8:	8082                	ret

200151fa <__metal_driver_sifive_fe310_g000_hfxosc_ref>:
__metal_driver_sifive_fe310_g000_hfxosc_ref():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1265
{
200151fa:	1101                	addi	sp,sp,-32
200151fc:	ce22                	sw	s0,28(sp)
200151fe:	1000                	addi	s0,sp,32
20015200:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1266
		return (struct metal_clock *)&__metal_dt_clock_0.clock;
20015204:	800007b7          	lui	a5,0x80000
20015208:	06078793          	addi	a5,a5,96 # 80000060 <metal_segment_heap_target_end+0xffffe8a0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1267
}
2001520c:	853e                	mv	a0,a5
2001520e:	4472                	lw	s0,28(sp)
20015210:	6105                	addi	sp,sp,32
20015212:	8082                	ret

20015214 <__metal_driver_sifive_fe310_g000_hfxosc_config_base>:
__metal_driver_sifive_fe310_g000_hfxosc_config_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1270
{
20015214:	1101                	addi	sp,sp,-32
20015216:	ce22                	sw	s0,28(sp)
20015218:	1000                	addi	s0,sp,32
2001521a:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1271
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
2001521e:	82418793          	addi	a5,gp,-2012 # 80000ae4 <__metal_dt_prci_10008000>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1272
}
20015222:	853e                	mv	a0,a5
20015224:	4472                	lw	s0,28(sp)
20015226:	6105                	addi	sp,sp,32
20015228:	8082                	ret

2001522a <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfxosc_config_offset():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1275
{
2001522a:	1101                	addi	sp,sp,-32
2001522c:	ce22                	sw	s0,28(sp)
2001522e:	1000                	addi	s0,sp,32
20015230:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1276
		return METAL_SIFIVE_FE310_G000_PRCI_HFXOSCCFG;
20015234:	4791                	li	a5,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1277
}
20015236:	853e                	mv	a0,a5
20015238:	4472                	lw	s0,28(sp)
2001523a:	6105                	addi	sp,sp,32
2001523c:	8082                	ret

2001523e <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1374
{
2001523e:	1141                	addi	sp,sp,-16
20015240:	c622                	sw	s0,12(sp)
20015242:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1375
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20015244:	83818793          	addi	a5,gp,-1992 # 80000af8 <__metal_driver_vtable_sifive_fe310_g000_prci>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1376
}
20015248:	853e                	mv	a0,a5
2001524a:	4432                	lw	s0,12(sp)
2001524c:	0141                	addi	sp,sp,16
2001524e:	8082                	ret

20015250 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:15

#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(
    const struct metal_clock *clock) {
20015250:	7139                	addi	sp,sp,-64
20015252:	de06                	sw	ra,60(sp)
20015254:	dc22                	sw	s0,56(sp)
20015256:	0080                	addi	s0,sp,64
20015258:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:17
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfxosc_ref(clock);
2001525c:	fcc42503          	lw	a0,-52(s0)
20015260:	3f69                	jal	200151fa <__metal_driver_sifive_fe310_g000_hfxosc_ref>
20015262:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:19
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfxosc_config_offset(clock);
20015266:	fcc42503          	lw	a0,-52(s0)
2001526a:	37c1                	jal	2001522a <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>
2001526c:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:21
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfxosc_config_base(clock);
20015270:	fcc42503          	lw	a0,-52(s0)
20015274:	3745                	jal	20015214 <__metal_driver_sifive_fe310_g000_hfxosc_config_base>
20015276:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:23
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
2001527a:	37d1                	jal	2001523e <__metal_driver_sifive_fe310_g000_prci_vtable>
2001527c:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:24
    long cfg = vtable->get_reg(config_base, config_offset);
20015280:	fe042783          	lw	a5,-32(s0)
20015284:	439c                	lw	a5,0(a5)
20015286:	fe842583          	lw	a1,-24(s0)
2001528a:	fe442503          	lw	a0,-28(s0)
2001528e:	9782                	jalr	a5
20015290:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:26

    if ((cfg & CONFIG_ENABLE) == 0)
20015294:	fdc42703          	lw	a4,-36(s0)
20015298:	400007b7          	lui	a5,0x40000
2001529c:	8ff9                	and	a5,a5,a4
2001529e:	e399                	bnez	a5,200152a4 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x54>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:27
        return -1;
200152a0:	57fd                	li	a5,-1
200152a2:	a821                	j	200152ba <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:28
    if ((cfg & CONFIG_READY) == 0)
200152a4:	fdc42783          	lw	a5,-36(s0)
200152a8:	0007c463          	bltz	a5,200152b0 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:29
        return -1;
200152ac:	57fd                	li	a5,-1
200152ae:	a031                	j	200152ba <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:30
    return metal_clock_get_rate_hz(ref);
200152b0:	fec42503          	lw	a0,-20(s0)
200152b4:	34e020ef          	jal	ra,20017602 <metal_clock_get_rate_hz>
200152b8:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:31
}
200152ba:	853e                	mv	a0,a5
200152bc:	50f2                	lw	ra,60(sp)
200152be:	5462                	lw	s0,56(sp)
200152c0:	6121                	addi	sp,sp,64
200152c2:	8082                	ret

200152c4 <__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:34

long __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
200152c4:	1101                	addi	sp,sp,-32
200152c6:	ce06                	sw	ra,28(sp)
200152c8:	cc22                	sw	s0,24(sp)
200152ca:	1000                	addi	s0,sp,32
200152cc:	fea42623          	sw	a0,-20(s0)
200152d0:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:35
    return __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(clock);
200152d4:	fec42503          	lw	a0,-20(s0)
200152d8:	3fa5                	jal	20015250 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>
200152da:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:36
}
200152dc:	853e                	mv	a0,a5
200152de:	40f2                	lw	ra,28(sp)
200152e0:	4462                	lw	s0,24(sp)
200152e2:	6105                	addi	sp,sp,32
200152e4:	8082                	ret

200152e6 <__metal_driver_sifive_fe310_g000_pll_pllsel0>:
__metal_driver_sifive_fe310_g000_pll_pllsel0():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1326
{
200152e6:	1101                	addi	sp,sp,-32
200152e8:	ce22                	sw	s0,28(sp)
200152ea:	1000                	addi	s0,sp,32
200152ec:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1327
		return (struct metal_clock *)&__metal_dt_clock_3.clock;
200152f0:	800017b7          	lui	a5,0x80001
200152f4:	a9c78793          	addi	a5,a5,-1380 # 80000a9c <metal_segment_heap_target_end+0xfffff2dc>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1328
}
200152f8:	853e                	mv	a0,a5
200152fa:	4472                	lw	s0,28(sp)
200152fc:	6105                	addi	sp,sp,32
200152fe:	8082                	ret

20015300 <__metal_driver_sifive_fe310_g000_pll_pllref>:
__metal_driver_sifive_fe310_g000_pll_pllref():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1331
{
20015300:	1101                	addi	sp,sp,-32
20015302:	ce22                	sw	s0,28(sp)
20015304:	1000                	addi	s0,sp,32
20015306:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1332
		return (struct metal_clock *)&__metal_dt_clock_1.clock;
2001530a:	800017b7          	lui	a5,0x80001
2001530e:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xfffff2e8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1333
}
20015312:	853e                	mv	a0,a5
20015314:	4472                	lw	s0,28(sp)
20015316:	6105                	addi	sp,sp,32
20015318:	8082                	ret

2001531a <__metal_driver_sifive_fe310_g000_pll_divider_base>:
__metal_driver_sifive_fe310_g000_pll_divider_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1336
{
2001531a:	1101                	addi	sp,sp,-32
2001531c:	ce22                	sw	s0,28(sp)
2001531e:	1000                	addi	s0,sp,32
20015320:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1337
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20015324:	82418793          	addi	a5,gp,-2012 # 80000ae4 <__metal_dt_prci_10008000>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1338
}
20015328:	853e                	mv	a0,a5
2001532a:	4472                	lw	s0,28(sp)
2001532c:	6105                	addi	sp,sp,32
2001532e:	8082                	ret

20015330 <__metal_driver_sifive_fe310_g000_pll_divider_offset>:
__metal_driver_sifive_fe310_g000_pll_divider_offset():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1341
{
20015330:	1101                	addi	sp,sp,-32
20015332:	ce22                	sw	s0,28(sp)
20015334:	1000                	addi	s0,sp,32
20015336:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1342
		return METAL_SIFIVE_FE310_G000_PRCI_PLLOUTDIV;
2001533a:	47b1                	li	a5,12
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1343
}
2001533c:	853e                	mv	a0,a5
2001533e:	4472                	lw	s0,28(sp)
20015340:	6105                	addi	sp,sp,32
20015342:	8082                	ret

20015344 <__metal_driver_sifive_fe310_g000_pll_config_base>:
__metal_driver_sifive_fe310_g000_pll_config_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1346
{
20015344:	1141                	addi	sp,sp,-16
20015346:	c622                	sw	s0,12(sp)
20015348:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1347
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
2001534a:	82418793          	addi	a5,gp,-2012 # 80000ae4 <__metal_dt_prci_10008000>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1348
}
2001534e:	853e                	mv	a0,a5
20015350:	4432                	lw	s0,12(sp)
20015352:	0141                	addi	sp,sp,16
20015354:	8082                	ret

20015356 <__metal_driver_sifive_fe310_g000_pll_config_offset>:
__metal_driver_sifive_fe310_g000_pll_config_offset():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1351
{
20015356:	1141                	addi	sp,sp,-16
20015358:	c622                	sw	s0,12(sp)
2001535a:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1352
		return METAL_SIFIVE_FE310_G000_PRCI_PLLCFG;
2001535c:	47a1                	li	a5,8
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1353
}
2001535e:	853e                	mv	a0,a5
20015360:	4432                	lw	s0,12(sp)
20015362:	0141                	addi	sp,sp,16
20015364:	8082                	ret

20015366 <__metal_driver_sifive_fe310_g000_pll_init_rate>:
__metal_driver_sifive_fe310_g000_pll_init_rate():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1356
{
20015366:	1141                	addi	sp,sp,-16
20015368:	c622                	sw	s0,12(sp)
2001536a:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1357
		return 16000000;
2001536c:	00f427b7          	lui	a5,0xf42
20015370:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1358
}
20015374:	853e                	mv	a0,a5
20015376:	4432                	lw	s0,12(sp)
20015378:	0141                	addi	sp,sp,16
2001537a:	8082                	ret

2001537c <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1364
{
2001537c:	1141                	addi	sp,sp,-16
2001537e:	c622                	sw	s0,12(sp)
20015380:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1365
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
20015382:	100087b7          	lui	a5,0x10008
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1366
}
20015386:	853e                	mv	a0,a5
20015388:	4432                	lw	s0,12(sp)
2001538a:	0141                	addi	sp,sp,16
2001538c:	8082                	ret

2001538e <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1374
{
2001538e:	1141                	addi	sp,sp,-16
20015390:	c622                	sw	s0,12(sp)
20015392:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1375
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20015394:	83818793          	addi	a5,gp,-1992 # 80000af8 <__metal_driver_vtable_sifive_fe310_g000_prci>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1376
}
20015398:	853e                	mv	a0,a5
2001539a:	4432                	lw	s0,12(sp)
2001539c:	0141                	addi	sp,sp,16
2001539e:	8082                	ret

200153a0 <get_pll_config_freq>:
get_pll_config_freq():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:141
                                const struct pll_config_t *config) {
200153a0:	1101                	addi	sp,sp,-32
200153a2:	ce22                	sw	s0,28(sp)
200153a4:	1000                	addi	s0,sp,32
200153a6:	fea42623          	sw	a0,-20(s0)
200153aa:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142
    if (pll_input_rate < config->min_input_rate ||
200153ae:	fe842783          	lw	a5,-24(s0)
200153b2:	479c                	lw	a5,8(a5)
200153b4:	fec42703          	lw	a4,-20(s0)
200153b8:	00f76963          	bltu	a4,a5,200153ca <get_pll_config_freq+0x2a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:143 (discriminator 1)
        pll_input_rate > config->max_input_rate)
200153bc:	fe842783          	lw	a5,-24(s0)
200153c0:	47dc                	lw	a5,12(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142 (discriminator 1)
    if (pll_input_rate < config->min_input_rate ||
200153c2:	fec42703          	lw	a4,-20(s0)
200153c6:	00e7f463          	bgeu	a5,a4,200153ce <get_pll_config_freq+0x2e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:144
        return PLL_CONFIG_NOT_VALID;
200153ca:	57fd                	li	a5,-1
200153cc:	a829                	j	200153e6 <get_pll_config_freq+0x46>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:146
    return pll_input_rate * config->multiplier / config->divisor;
200153ce:	fe842783          	lw	a5,-24(s0)
200153d2:	4398                	lw	a4,0(a5)
200153d4:	fec42783          	lw	a5,-20(s0)
200153d8:	02f70733          	mul	a4,a4,a5
200153dc:	fe842783          	lw	a5,-24(s0)
200153e0:	43dc                	lw	a5,4(a5)
200153e2:	02f757b3          	divu	a5,a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:147
}
200153e6:	853e                	mv	a0,a5
200153e8:	4472                	lw	s0,28(sp)
200153ea:	6105                	addi	sp,sp,32
200153ec:	8082                	ret

200153ee <__metal_driver_sifive_fe310_g000_pll_init>:
__metal_driver_sifive_fe310_g000_pll_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:162
    struct __metal_driver_sifive_fe310_g000_pll *pll) {
200153ee:	7139                	addi	sp,sp,-64
200153f0:	de06                	sw	ra,60(sp)
200153f2:	dc22                	sw	s0,56(sp)
200153f4:	0080                	addi	s0,sp,64
200153f6:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:164
        __metal_driver_sifive_fe310_g000_pll_pllref(&(pll->clock));
200153fa:	fcc42783          	lw	a5,-52(s0)
200153fe:	853e                	mv	a0,a5
20015400:	3701                	jal	20015300 <__metal_driver_sifive_fe310_g000_pll_pllref>
20015402:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:165
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20015406:	3785                	jal	20015366 <__metal_driver_sifive_fe310_g000_pll_init_rate>
20015408:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:166
    long config_offset = __metal_driver_sifive_fe310_g000_pll_config_offset();
2001540c:	37a9                	jal	20015356 <__metal_driver_sifive_fe310_g000_pll_config_offset>
2001540e:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:167
    long base = __metal_driver_sifive_fe310_g000_prci_base();
20015412:	37ad                	jal	2001537c <__metal_driver_sifive_fe310_g000_prci_base>
20015414:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:169
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
20015418:	fe042703          	lw	a4,-32(s0)
2001541c:	fe442783          	lw	a5,-28(s0)
20015420:	97ba                	add	a5,a5,a4
20015422:	fcf42e23          	sw	a5,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:173
    _metal_clock_call_all_callbacks(pll->clock._pre_rate_change_callback);
20015426:	fcc42783          	lw	a5,-52(s0)
2001542a:	43dc                	lw	a5,4(a5)
2001542c:	853e                	mv	a0,a5
2001542e:	140020ef          	jal	ra,2001756e <_metal_clock_call_all_callbacks>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:177
    if ((__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL) != 0)
20015432:	fdc42783          	lw	a5,-36(s0)
20015436:	4398                	lw	a4,0(a5)
20015438:	67c1                	lui	a5,0x10
2001543a:	8ff9                	and	a5,a5,a4
2001543c:	cb91                	beqz	a5,20015450 <__metal_driver_sifive_fe310_g000_pll_init+0x62>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:178
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
2001543e:	fdc42783          	lw	a5,-36(s0)
20015442:	4398                	lw	a4,0(a5)
20015444:	77c1                	lui	a5,0xffff0
20015446:	17fd                	addi	a5,a5,-1
20015448:	8f7d                	and	a4,a4,a5
2001544a:	fdc42783          	lw	a5,-36(s0)
2001544e:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:181
    if (pllref != NULL)
20015450:	fec42783          	lw	a5,-20(s0)
20015454:	cb91                	beqz	a5,20015468 <__metal_driver_sifive_fe310_g000_pll_init+0x7a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:182
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_REFSEL;
20015456:	fdc42783          	lw	a5,-36(s0)
2001545a:	4398                	lw	a4,0(a5)
2001545c:	000207b7          	lui	a5,0x20
20015460:	8f5d                	or	a4,a4,a5
20015462:	fdc42783          	lw	a5,-36(s0)
20015466:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:187
    pll->clock.vtable->set_rate_hz(&(pll->clock), init_rate);
20015468:	fcc42783          	lw	a5,-52(s0)
2001546c:	439c                	lw	a5,0(a5)
2001546e:	43d8                	lw	a4,4(a5)
20015470:	fcc42783          	lw	a5,-52(s0)
20015474:	fe842583          	lw	a1,-24(s0)
20015478:	853e                	mv	a0,a5
2001547a:	9702                	jalr	a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:190
    _metal_clock_call_all_callbacks(pll->clock._post_rate_change_callback);
2001547c:	fcc42783          	lw	a5,-52(s0)
20015480:	479c                	lw	a5,8(a5)
20015482:	853e                	mv	a0,a5
20015484:	0ea020ef          	jal	ra,2001756e <_metal_clock_call_all_callbacks>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:191
}
20015488:	0001                	nop
2001548a:	50f2                	lw	ra,60(sp)
2001548c:	5462                	lw	s0,56(sp)
2001548e:	6121                	addi	sp,sp,64
20015490:	8082                	ret

20015492 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_get_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:194
    const struct metal_clock *clock) {
20015492:	711d                	addi	sp,sp,-96
20015494:	ce86                	sw	ra,92(sp)
20015496:	cca2                	sw	s0,88(sp)
20015498:	1080                	addi	s0,sp,96
2001549a:	faa42623          	sw	a0,-84(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:196
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
2001549e:	fac42503          	lw	a0,-84(s0)
200154a2:	3db9                	jal	20015300 <__metal_driver_sifive_fe310_g000_pll_pllref>
200154a4:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:198
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
200154a8:	fac42503          	lw	a0,-84(s0)
200154ac:	3d2d                	jal	200152e6 <__metal_driver_sifive_fe310_g000_pll_pllsel0>
200154ae:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:200
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
200154b2:	fac42503          	lw	a0,-84(s0)
200154b6:	3545                	jal	20015356 <__metal_driver_sifive_fe310_g000_pll_config_offset>
200154b8:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:202
        __metal_driver_sifive_fe310_g000_pll_config_base(clock);
200154bc:	fac42503          	lw	a0,-84(s0)
200154c0:	3551                	jal	20015344 <__metal_driver_sifive_fe310_g000_pll_config_base>
200154c2:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:204
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
200154c6:	fac42503          	lw	a0,-84(s0)
200154ca:	359d                	jal	20015330 <__metal_driver_sifive_fe310_g000_pll_divider_offset>
200154cc:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:206
        __metal_driver_sifive_fe310_g000_pll_divider_base(clock);
200154d0:	fac42503          	lw	a0,-84(s0)
200154d4:	3599                	jal	2001531a <__metal_driver_sifive_fe310_g000_pll_divider_base>
200154d6:	fca42c23          	sw	a0,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:208
        __metal_driver_sifive_fe310_g000_prci_vtable();
200154da:	3d55                	jal	2001538e <__metal_driver_sifive_fe310_g000_prci_vtable>
200154dc:	fca42a23          	sw	a0,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:210
    long cfg = vtable->get_reg(config_base, config_offset);
200154e0:	fd442783          	lw	a5,-44(s0)
200154e4:	439c                	lw	a5,0(a5)
200154e6:	fe442583          	lw	a1,-28(s0)
200154ea:	fe042503          	lw	a0,-32(s0)
200154ee:	9782                	jalr	a5
200154f0:	fca42823          	sw	a0,-48(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:211
    long div = vtable->get_reg(divider_base, divider_offset);
200154f4:	fd442783          	lw	a5,-44(s0)
200154f8:	439c                	lw	a5,0(a5)
200154fa:	fdc42583          	lw	a1,-36(s0)
200154fe:	fd842503          	lw	a0,-40(s0)
20015502:	9782                	jalr	a5
20015504:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:215
    if (__METAL_GET_FIELD(cfg, PLL_SEL) == 0)
20015508:	fd042703          	lw	a4,-48(s0)
2001550c:	67c1                	lui	a5,0x10
2001550e:	8f7d                	and	a4,a4,a5
20015510:	67c1                	lui	a5,0x10
20015512:	00f77863          	bgeu	a4,a5,20015522 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x90>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:216
        return metal_clock_get_rate_hz(pllsel0);
20015516:	fe842503          	lw	a0,-24(s0)
2001551a:	0e8020ef          	jal	ra,20017602 <metal_clock_get_rate_hz>
2001551e:	87aa                	mv	a5,a0
20015520:	a8e1                	j	200155f8 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:221
        __METAL_GET_FIELD(cfg, PLL_REFSEL) ? pllref : pllsel0);
20015522:	fd042703          	lw	a4,-48(s0)
20015526:	000207b7          	lui	a5,0x20
2001552a:	8f7d                	and	a4,a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220
    long ref_hz = metal_clock_get_rate_hz(
2001552c:	000207b7          	lui	a5,0x20
20015530:	00f76563          	bltu	a4,a5,2001553a <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xa8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 1)
20015534:	fec42783          	lw	a5,-20(s0)
20015538:	a019                	j	2001553e <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xac>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 2)
2001553a:	fe842783          	lw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 4)
2001553e:	853e                	mv	a0,a5
20015540:	0c2020ef          	jal	ra,20017602 <metal_clock_get_rate_hz>
20015544:	fca42423          	sw	a0,-56(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:225 (discriminator 4)
    if (__METAL_GET_FIELD(cfg, PLL_BYPASS))
20015548:	fd042703          	lw	a4,-48(s0)
2001554c:	000407b7          	lui	a5,0x40
20015550:	8f7d                	and	a4,a4,a5
20015552:	000407b7          	lui	a5,0x40
20015556:	00f76563          	bltu	a4,a5,20015560 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xce>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:226
        return ref_hz;
2001555a:	fc842783          	lw	a5,-56(s0)
2001555e:	a869                	j	200155f8 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:229
    long div_r = __METAL_GET_FIELD(cfg, PLL_R) + 1;
20015560:	fd042783          	lw	a5,-48(s0)
20015564:	8b9d                	andi	a5,a5,7
20015566:	0785                	addi	a5,a5,1
20015568:	fcf42223          	sw	a5,-60(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:230
    long mul_f = 2 * (__METAL_GET_FIELD(cfg, PLL_F) + 1);
2001556c:	fd042783          	lw	a5,-48(s0)
20015570:	3f07f793          	andi	a5,a5,1008
20015574:	8391                	srli	a5,a5,0x4
20015576:	0785                	addi	a5,a5,1
20015578:	0786                	slli	a5,a5,0x1
2001557a:	fcf42023          	sw	a5,-64(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:231
    if (__METAL_GET_FIELD(cfg, PLL_Q) == 0)
2001557e:	fd042703          	lw	a4,-48(s0)
20015582:	6785                	lui	a5,0x1
20015584:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20015588:	8f7d                	and	a4,a4,a5
2001558a:	3ff00793          	li	a5,1023
2001558e:	00e7e463          	bltu	a5,a4,20015596 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x104>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:232
        return -1;
20015592:	57fd                	li	a5,-1
20015594:	a095                	j	200155f8 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:233
    long div_q = 1 << __METAL_GET_FIELD(cfg, PLL_Q);
20015596:	fd042703          	lw	a4,-48(s0)
2001559a:	6785                	lui	a5,0x1
2001559c:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
200155a0:	8ff9                	and	a5,a5,a4
200155a2:	83a9                	srli	a5,a5,0xa
200155a4:	4705                	li	a4,1
200155a6:	00f717b3          	sll	a5,a4,a5
200155aa:	faf42e23          	sw	a5,-68(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:238
    long pllout = (((ref_hz / div_r) * mul_f) / div_q);
200155ae:	fc842703          	lw	a4,-56(s0)
200155b2:	fc442783          	lw	a5,-60(s0)
200155b6:	02f74733          	div	a4,a4,a5
200155ba:	fc042783          	lw	a5,-64(s0)
200155be:	02f70733          	mul	a4,a4,a5
200155c2:	fbc42783          	lw	a5,-68(s0)
200155c6:	02f747b3          	div	a5,a4,a5
200155ca:	faf42c23          	sw	a5,-72(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:239
    if (__METAL_GET_FIELD(div, DIV_1))
200155ce:	fcc42783          	lw	a5,-52(s0)
200155d2:	1007f713          	andi	a4,a5,256
200155d6:	0ff00793          	li	a5,255
200155da:	00e7f563          	bgeu	a5,a4,200155e4 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x152>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:240
        return pllout;
200155de:	fb842783          	lw	a5,-72(s0)
200155e2:	a819                	j	200155f8 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:242
    return pllout / (2 * (__METAL_GET_FIELD(div, DIV_DIV) + 1));
200155e4:	fb842703          	lw	a4,-72(s0)
200155e8:	fcc42783          	lw	a5,-52(s0)
200155ec:	03f7f793          	andi	a5,a5,63
200155f0:	0785                	addi	a5,a5,1
200155f2:	0786                	slli	a5,a5,0x1
200155f4:	02f757b3          	divu	a5,a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:243
}
200155f8:	853e                	mv	a0,a5
200155fa:	40f6                	lw	ra,92(sp)
200155fc:	4466                	lw	s0,88(sp)
200155fe:	6125                	addi	sp,sp,96
20015600:	8082                	ret

20015602 <find_closest_config>:
find_closest_config():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:253
static int find_closest_config(long ref_hz, long rate) {
20015602:	7139                	addi	sp,sp,-64
20015604:	de06                	sw	ra,60(sp)
20015606:	dc22                	sw	s0,56(sp)
20015608:	0080                	addi	s0,sp,64
2001560a:	fca42623          	sw	a0,-52(s0)
2001560e:	fcb42423          	sw	a1,-56(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:254
    int closest_index = -1;
20015612:	57fd                	li	a5,-1
20015614:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:255
    long closest_diff = LONG_MAX;
20015618:	800007b7          	lui	a5,0x80000
2001561c:	fff7c793          	not	a5,a5
20015620:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
20015624:	04300793          	li	a5,67
20015628:	fef42223          	sw	a5,-28(s0)
2001562c:	a0b5                	j	20015698 <find_closest_config+0x96>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:261
        long config_freq = get_pll_config_freq(ref_hz, &(pll_configs[i]));
2001562e:	fcc42683          	lw	a3,-52(s0)
20015632:	fe442783          	lw	a5,-28(s0)
20015636:	00579713          	slli	a4,a5,0x5
2001563a:	200107b7          	lui	a5,0x20010
2001563e:	73478793          	addi	a5,a5,1844 # 20010734 <pll_configs>
20015642:	97ba                	add	a5,a5,a4
20015644:	85be                	mv	a1,a5
20015646:	8536                	mv	a0,a3
20015648:	d59ff0ef          	jal	ra,200153a0 <get_pll_config_freq>
2001564c:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:262
        if (config_freq != PLL_CONFIG_NOT_VALID) {
20015650:	fe042703          	lw	a4,-32(s0)
20015654:	57fd                	li	a5,-1
20015656:	02f70c63          	beq	a4,a5,2001568e <find_closest_config+0x8c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:263
            long freq_diff = labs(config_freq - rate);
2001565a:	fe042703          	lw	a4,-32(s0)
2001565e:	fc842783          	lw	a5,-56(s0)
20015662:	8f1d                	sub	a4,a4,a5
20015664:	41f75793          	srai	a5,a4,0x1f
20015668:	8f3d                	xor	a4,a4,a5
2001566a:	40f707b3          	sub	a5,a4,a5
2001566e:	fcf42e23          	sw	a5,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:265
            if (freq_diff < closest_diff) {
20015672:	fdc42703          	lw	a4,-36(s0)
20015676:	fe842783          	lw	a5,-24(s0)
2001567a:	00f75a63          	bge	a4,a5,2001568e <find_closest_config+0x8c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:266
                closest_index = i;
2001567e:	fe442783          	lw	a5,-28(s0)
20015682:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:267
                closest_diff = freq_diff;
20015686:	fdc42783          	lw	a5,-36(s0)
2001568a:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:260
         i--) {
2001568e:	fe442783          	lw	a5,-28(s0)
20015692:	17fd                	addi	a5,a5,-1
20015694:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259 (discriminator 1)
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
20015698:	fe442783          	lw	a5,-28(s0)
2001569c:	f807d9e3          	bgez	a5,2001562e <find_closest_config+0x2c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:272
    return closest_index;
200156a0:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:273
}
200156a4:	853e                	mv	a0,a5
200156a6:	50f2                	lw	ra,60(sp)
200156a8:	5462                	lw	s0,56(sp)
200156aa:	6121                	addi	sp,sp,64
200156ac:	8082                	ret

200156ae <configure_pll>:
configure_pll():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:290
                          const struct pll_config_t *config) {
200156ae:	7179                	addi	sp,sp,-48
200156b0:	d606                	sw	ra,44(sp)
200156b2:	d422                	sw	s0,40(sp)
200156b4:	1800                	addi	s0,sp,48
200156b6:	fca42e23          	sw	a0,-36(s0)
200156ba:	fcb42c23          	sw	a1,-40(s0)
200156be:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:291
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_R);
200156c2:	fdc42783          	lw	a5,-36(s0)
200156c6:	439c                	lw	a5,0(a5)
200156c8:	ff87f713          	andi	a4,a5,-8
200156cc:	fdc42783          	lw	a5,-36(s0)
200156d0:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:292
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_R_SHIFT(config->r);
200156d2:	fdc42783          	lw	a5,-36(s0)
200156d6:	4398                	lw	a4,0(a5)
200156d8:	fd442783          	lw	a5,-44(s0)
200156dc:	4b9c                	lw	a5,16(a5)
200156de:	8b9d                	andi	a5,a5,7
200156e0:	8f5d                	or	a4,a4,a5
200156e2:	fdc42783          	lw	a5,-36(s0)
200156e6:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:294
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_F);
200156e8:	fdc42783          	lw	a5,-36(s0)
200156ec:	439c                	lw	a5,0(a5)
200156ee:	c0f7f713          	andi	a4,a5,-1009
200156f2:	fdc42783          	lw	a5,-36(s0)
200156f6:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:295
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_F_SHIFT(config->f);
200156f8:	fdc42783          	lw	a5,-36(s0)
200156fc:	4398                	lw	a4,0(a5)
200156fe:	fd442783          	lw	a5,-44(s0)
20015702:	4bdc                	lw	a5,20(a5)
20015704:	0792                	slli	a5,a5,0x4
20015706:	3f07f793          	andi	a5,a5,1008
2001570a:	8f5d                	or	a4,a4,a5
2001570c:	fdc42783          	lw	a5,-36(s0)
20015710:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:297
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_Q);
20015712:	fdc42783          	lw	a5,-36(s0)
20015716:	4398                	lw	a4,0(a5)
20015718:	77fd                	lui	a5,0xfffff
2001571a:	3ff78793          	addi	a5,a5,1023 # fffff3ff <metal_segment_heap_target_end+0x7fffdc3f>
2001571e:	8f7d                	and	a4,a4,a5
20015720:	fdc42783          	lw	a5,-36(s0)
20015724:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:298
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_Q_SHIFT(config->q);
20015726:	fdc42783          	lw	a5,-36(s0)
2001572a:	4398                	lw	a4,0(a5)
2001572c:	fd442783          	lw	a5,-44(s0)
20015730:	4f9c                	lw	a5,24(a5)
20015732:	00a79693          	slli	a3,a5,0xa
20015736:	6785                	lui	a5,0x1
20015738:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
2001573c:	8ff5                	and	a5,a5,a3
2001573e:	8f5d                	or	a4,a4,a5
20015740:	fdc42783          	lw	a5,-36(s0)
20015744:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:300
    if (config->d < 0) {
20015746:	fd442783          	lw	a5,-44(s0)
2001574a:	4fdc                	lw	a5,28(a5)
2001574c:	0207db63          	bgez	a5,20015782 <configure_pll+0xd4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:302
        __METAL_ACCESS_ONCE(plloutdiv) |= DIV_1;
20015750:	fd842783          	lw	a5,-40(s0)
20015754:	439c                	lw	a5,0(a5)
20015756:	1007e713          	ori	a4,a5,256
2001575a:	fd842783          	lw	a5,-40(s0)
2001575e:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:304
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
20015760:	fd842783          	lw	a5,-40(s0)
20015764:	439c                	lw	a5,0(a5)
20015766:	fc07f713          	andi	a4,a5,-64
2001576a:	fd842783          	lw	a5,-40(s0)
2001576e:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:305
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(1);
20015770:	fd842783          	lw	a5,-40(s0)
20015774:	439c                	lw	a5,0(a5)
20015776:	0017e713          	ori	a4,a5,1
2001577a:	fd842783          	lw	a5,-40(s0)
2001577e:	c398                	sw	a4,0(a5)
20015780:	a82d                	j	200157ba <configure_pll+0x10c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:307
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_1);
20015782:	fd842783          	lw	a5,-40(s0)
20015786:	439c                	lw	a5,0(a5)
20015788:	eff7f713          	andi	a4,a5,-257
2001578c:	fd842783          	lw	a5,-40(s0)
20015790:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:309
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
20015792:	fd842783          	lw	a5,-40(s0)
20015796:	439c                	lw	a5,0(a5)
20015798:	fc07f713          	andi	a4,a5,-64
2001579c:	fd842783          	lw	a5,-40(s0)
200157a0:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:310
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(config->d);
200157a2:	fd842783          	lw	a5,-40(s0)
200157a6:	4398                	lw	a4,0(a5)
200157a8:	fd442783          	lw	a5,-44(s0)
200157ac:	4fdc                	lw	a5,28(a5)
200157ae:	03f7f793          	andi	a5,a5,63
200157b2:	8f5d                	or	a4,a4,a5
200157b4:	fd842783          	lw	a5,-40(s0)
200157b8:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:313
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_BYPASS);
200157ba:	fdc42783          	lw	a5,-36(s0)
200157be:	4398                	lw	a4,0(a5)
200157c0:	fffc07b7          	lui	a5,0xfffc0
200157c4:	17fd                	addi	a5,a5,-1
200157c6:	8f7d                	and	a4,a4,a5
200157c8:	fdc42783          	lw	a5,-36(s0)
200157cc:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:318
    __metal_driver_riscv_clint0_command_request(__METAL_DT_RISCV_CLINT0_HANDLE,
200157ce:	fe040793          	addi	a5,s0,-32
200157d2:	863e                	mv	a2,a5
200157d4:	4585                	li	a1,1
200157d6:	81018513          	addi	a0,gp,-2032 # 80000ad0 <__metal_dt_clint_2000000>
200157da:	ccafd0ef          	jal	ra,20012ca4 <__metal_driver_riscv_clint0_command_request>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:320
    mtime_end = mtime + PLL_LOCK_WAIT_TICKS;
200157de:	fe042683          	lw	a3,-32(s0)
200157e2:	fe442703          	lw	a4,-28(s0)
200157e6:	4591                	li	a1,4
200157e8:	4601                	li	a2,0
200157ea:	00b687b3          	add	a5,a3,a1
200157ee:	853e                	mv	a0,a5
200157f0:	00d53533          	sltu	a0,a0,a3
200157f4:	00c70833          	add	a6,a4,a2
200157f8:	01050733          	add	a4,a0,a6
200157fc:	883a                	mv	a6,a4
200157fe:	fef42423          	sw	a5,-24(s0)
20015802:	ff042623          	sw	a6,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
20015806:	a809                	j	20015818 <configure_pll+0x16a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:322
        __metal_driver_riscv_clint0_command_request(
20015808:	fe040793          	addi	a5,s0,-32
2001580c:	863e                	mv	a2,a5
2001580e:	4585                	li	a1,1
20015810:	81018513          	addi	a0,gp,-2032 # 80000ad0 <__metal_dt_clint_2000000>
20015814:	c90fd0ef          	jal	ra,20012ca4 <__metal_driver_riscv_clint0_command_request>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
20015818:	fe042783          	lw	a5,-32(s0)
2001581c:	fe442803          	lw	a6,-28(s0)
20015820:	fec42703          	lw	a4,-20(s0)
20015824:	86c2                	mv	a3,a6
20015826:	00d76b63          	bltu	a4,a3,2001583c <configure_pll+0x18e>
2001582a:	fec42703          	lw	a4,-20(s0)
2001582e:	86c2                	mv	a3,a6
20015830:	fcd71ce3          	bne	a4,a3,20015808 <configure_pll+0x15a>
20015834:	fe842703          	lw	a4,-24(s0)
20015838:	fcf778e3          	bgeu	a4,a5,20015808 <configure_pll+0x15a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340
    while ((__METAL_ACCESS_ONCE(pllcfg) & PLL_LOCK) == 0)
2001583c:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340 (discriminator 1)
2001583e:	fdc42783          	lw	a5,-36(s0)
20015842:	439c                	lw	a5,0(a5)
20015844:	fe07dde3          	bgez	a5,2001583e <configure_pll+0x190>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:342
}
20015848:	0001                	nop
2001584a:	50b2                	lw	ra,44(sp)
2001584c:	5422                	lw	s0,40(sp)
2001584e:	6145                	addi	sp,sp,48
20015850:	8082                	ret

20015852 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_set_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:345
                                                      long rate) {
20015852:	715d                	addi	sp,sp,-80
20015854:	c686                	sw	ra,76(sp)
20015856:	c4a2                	sw	s0,72(sp)
20015858:	0880                	addi	s0,sp,80
2001585a:	faa42e23          	sw	a0,-68(s0)
2001585e:	fab42c23          	sw	a1,-72(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:347
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
20015862:	fbc42503          	lw	a0,-68(s0)
20015866:	a9bff0ef          	jal	ra,20015300 <__metal_driver_sifive_fe310_g000_pll_pllref>
2001586a:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:349
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
2001586e:	fbc42503          	lw	a0,-68(s0)
20015872:	a75ff0ef          	jal	ra,200152e6 <__metal_driver_sifive_fe310_g000_pll_pllsel0>
20015876:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:351
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
2001587a:	fbc42503          	lw	a0,-68(s0)
2001587e:	ad9ff0ef          	jal	ra,20015356 <__metal_driver_sifive_fe310_g000_pll_config_offset>
20015882:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:353
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
20015886:	fbc42503          	lw	a0,-68(s0)
2001588a:	aa7ff0ef          	jal	ra,20015330 <__metal_driver_sifive_fe310_g000_pll_divider_offset>
2001588e:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:354
    long base = __metal_driver_sifive_fe310_g000_prci_base();
20015892:	aebff0ef          	jal	ra,2001537c <__metal_driver_sifive_fe310_g000_prci_base>
20015896:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:356
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
2001589a:	fdc42703          	lw	a4,-36(s0)
2001589e:	fe442783          	lw	a5,-28(s0)
200158a2:	97ba                	add	a5,a5,a4
200158a4:	fcf42c23          	sw	a5,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:357
    __metal_io_u32 *plloutdiv = (__metal_io_u32 *)(base + divider_offset);
200158a8:	fdc42703          	lw	a4,-36(s0)
200158ac:	fe042783          	lw	a5,-32(s0)
200158b0:	97ba                	add	a5,a5,a4
200158b2:	fcf42a23          	sw	a5,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:360
    if (__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL)
200158b6:	fd842783          	lw	a5,-40(s0)
200158ba:	4398                	lw	a4,0(a5)
200158bc:	67c1                	lui	a5,0x10
200158be:	8ff9                	and	a5,a5,a4
200158c0:	cb91                	beqz	a5,200158d4 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x82>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:361
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
200158c2:	fd842783          	lw	a5,-40(s0)
200158c6:	4398                	lw	a4,0(a5)
200158c8:	77c1                	lui	a5,0xffff0
200158ca:	17fd                	addi	a5,a5,-1
200158cc:	8f7d                	and	a4,a4,a5
200158ce:	fd842783          	lw	a5,-40(s0)
200158d2:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:366
        __METAL_ACCESS_ONCE(pllcfg) & PLL_REFSEL ? pllref : pllsel0);
200158d4:	fd842783          	lw	a5,-40(s0)
200158d8:	4398                	lw	a4,0(a5)
200158da:	000207b7          	lui	a5,0x20
200158de:	8ff9                	and	a5,a5,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365
    long ref_hz = metal_clock_get_rate_hz(
200158e0:	c781                	beqz	a5,200158e8 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x96>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 1)
200158e2:	fec42783          	lw	a5,-20(s0)
200158e6:	a019                	j	200158ec <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x9a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 2)
200158e8:	fe842783          	lw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 4)
200158ec:	853e                	mv	a0,a5
200158ee:	515010ef          	jal	ra,20017602 <metal_clock_get_rate_hz>
200158f2:	fca42823          	sw	a0,-48(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 4)
    if ((ref_hz * 3 / 4) <= rate && (ref_hz * 5 / 4) >= rate) {
200158f6:	fd042703          	lw	a4,-48(s0)
200158fa:	87ba                	mv	a5,a4
200158fc:	0786                	slli	a5,a5,0x1
200158fe:	97ba                	add	a5,a5,a4
20015900:	41f7d713          	srai	a4,a5,0x1f
20015904:	8b0d                	andi	a4,a4,3
20015906:	97ba                	add	a5,a5,a4
20015908:	8789                	srai	a5,a5,0x2
2001590a:	873e                	mv	a4,a5
2001590c:	fb842783          	lw	a5,-72(s0)
20015910:	02e7cb63          	blt	a5,a4,20015946 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 1)
20015914:	fd042703          	lw	a4,-48(s0)
20015918:	87ba                	mv	a5,a4
2001591a:	078a                	slli	a5,a5,0x2
2001591c:	97ba                	add	a5,a5,a4
2001591e:	41f7d713          	srai	a4,a5,0x1f
20015922:	8b0d                	andi	a4,a4,3
20015924:	97ba                	add	a5,a5,a4
20015926:	8789                	srai	a5,a5,0x2
20015928:	873e                	mv	a4,a5
2001592a:	fb842783          	lw	a5,-72(s0)
2001592e:	00f74c63          	blt	a4,a5,20015946 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:371
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
20015932:	fd842783          	lw	a5,-40(s0)
20015936:	4398                	lw	a4,0(a5)
20015938:	000407b7          	lui	a5,0x40
2001593c:	8f5d                	or	a4,a4,a5
2001593e:	fd842783          	lw	a5,-40(s0)
20015942:	c398                	sw	a4,0(a5)
20015944:	a881                	j	20015994 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:373
        int config_index = find_closest_config(ref_hz, rate);
20015946:	fb842583          	lw	a1,-72(s0)
2001594a:	fd042503          	lw	a0,-48(s0)
2001594e:	cb5ff0ef          	jal	ra,20015602 <find_closest_config>
20015952:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:374
        if (config_index != -1) {
20015956:	fcc42703          	lw	a4,-52(s0)
2001595a:	57fd                	li	a5,-1
2001595c:	02f70363          	beq	a4,a5,20015982 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x130>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:375
            configure_pll(pllcfg, plloutdiv, &(pll_configs[config_index]));
20015960:	fcc42783          	lw	a5,-52(s0)
20015964:	00579713          	slli	a4,a5,0x5
20015968:	200107b7          	lui	a5,0x20010
2001596c:	73478793          	addi	a5,a5,1844 # 20010734 <pll_configs>
20015970:	97ba                	add	a5,a5,a4
20015972:	863e                	mv	a2,a5
20015974:	fd442583          	lw	a1,-44(s0)
20015978:	fd842503          	lw	a0,-40(s0)
2001597c:	d33ff0ef          	jal	ra,200156ae <configure_pll>
20015980:	a811                	j	20015994 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:378
            __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
20015982:	fd842783          	lw	a5,-40(s0)
20015986:	4398                	lw	a4,0(a5)
20015988:	000407b7          	lui	a5,0x40
2001598c:	8f5d                	or	a4,a4,a5
2001598e:	fd842783          	lw	a5,-40(s0)
20015992:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:383
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_SEL;
20015994:	fd842783          	lw	a5,-40(s0)
20015998:	4398                	lw	a4,0(a5)
2001599a:	67c1                	lui	a5,0x10
2001599c:	8f5d                	or	a4,a4,a5
2001599e:	fd842783          	lw	a5,-40(s0)
200159a2:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:385
    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
200159a4:	fbc42503          	lw	a0,-68(s0)
200159a8:	aebff0ef          	jal	ra,20015492 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>
200159ac:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:386
}
200159ae:	853e                	mv	a0,a5
200159b0:	40b6                	lw	ra,76(sp)
200159b2:	4426                	lw	s0,72(sp)
200159b4:	6161                	addi	sp,sp,80
200159b6:	8082                	ret

200159b8 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1364
{
200159b8:	1141                	addi	sp,sp,-16
200159ba:	c622                	sw	s0,12(sp)
200159bc:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1365
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
200159be:	100087b7          	lui	a5,0x10008
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1366
}
200159c2:	853e                	mv	a0,a5
200159c4:	4432                	lw	s0,12(sp)
200159c6:	0141                	addi	sp,sp,16
200159c8:	8082                	ret

200159ca <__metal_driver_sifive_fe310_g000_prci_get_reg>:
__metal_driver_sifive_fe310_g000_prci_get_reg():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:12

#include <metal/drivers/sifive_fe310-g000_prci.h>
#include <metal/machine.h>

long __metal_driver_sifive_fe310_g000_prci_get_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset) {
200159ca:	7179                	addi	sp,sp,-48
200159cc:	d606                	sw	ra,44(sp)
200159ce:	d422                	sw	s0,40(sp)
200159d0:	1800                	addi	s0,sp,48
200159d2:	fca42e23          	sw	a0,-36(s0)
200159d6:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:13
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
200159da:	3ff9                	jal	200159b8 <__metal_driver_sifive_fe310_g000_prci_base>
200159dc:	87aa                	mv	a5,a0
200159de:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:14
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset));
200159e2:	fd842703          	lw	a4,-40(s0)
200159e6:	fec42783          	lw	a5,-20(s0)
200159ea:	97ba                	add	a5,a5,a4
200159ec:	439c                	lw	a5,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:15
}
200159ee:	853e                	mv	a0,a5
200159f0:	50b2                	lw	ra,44(sp)
200159f2:	5422                	lw	s0,40(sp)
200159f4:	6145                	addi	sp,sp,48
200159f6:	8082                	ret

200159f8 <__metal_driver_sifive_fe310_g000_prci_set_reg>:
__metal_driver_sifive_fe310_g000_prci_set_reg():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:19

long __metal_driver_sifive_fe310_g000_prci_set_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset,
    long value) {
200159f8:	7179                	addi	sp,sp,-48
200159fa:	d606                	sw	ra,44(sp)
200159fc:	d422                	sw	s0,40(sp)
200159fe:	1800                	addi	s0,sp,48
20015a00:	fca42e23          	sw	a0,-36(s0)
20015a04:	fcb42c23          	sw	a1,-40(s0)
20015a08:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:20
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
20015a0c:	3775                	jal	200159b8 <__metal_driver_sifive_fe310_g000_prci_base>
20015a0e:	87aa                	mv	a5,a0
20015a10:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:21
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset)) = value;
20015a14:	fd842703          	lw	a4,-40(s0)
20015a18:	fec42783          	lw	a5,-20(s0)
20015a1c:	97ba                	add	a5,a5,a4
20015a1e:	873e                	mv	a4,a5
20015a20:	fd442783          	lw	a5,-44(s0)
20015a24:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:22
}
20015a26:	853e                	mv	a0,a5
20015a28:	50b2                	lw	ra,44(sp)
20015a2a:	5422                	lw	s0,40(sp)
20015a2c:	6145                	addi	sp,sp,48
20015a2e:	8082                	ret

20015a30 <__metal_driver_sifive_gpio0_base>:
__metal_driver_sifive_gpio0_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:430
{
20015a30:	1101                	addi	sp,sp,-32
20015a32:	ce22                	sw	s0,28(sp)
20015a34:	1000                	addi	s0,sp,32
20015a36:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:431
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
20015a3a:	fec42703          	lw	a4,-20(s0)
20015a3e:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015a42:	00f71563          	bne	a4,a5,20015a4c <__metal_driver_sifive_gpio0_base+0x1c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:432
		return METAL_SIFIVE_GPIO0_10012000_BASE_ADDRESS;
20015a46:	100127b7          	lui	a5,0x10012
20015a4a:	a011                	j	20015a4e <__metal_driver_sifive_gpio0_base+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:435
		return 0;
20015a4c:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:437
}
20015a4e:	853e                	mv	a0,a5
20015a50:	4472                	lw	s0,28(sp)
20015a52:	6105                	addi	sp,sp,32
20015a54:	8082                	ret

20015a56 <__metal_driver_sifive_gpio0_interrupt_parent>:
__metal_driver_sifive_gpio0_interrupt_parent():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:460
{
20015a56:	1101                	addi	sp,sp,-32
20015a58:	ce22                	sw	s0,28(sp)
20015a5a:	1000                	addi	s0,sp,32
20015a5c:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:461
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
20015a60:	fec42703          	lw	a4,-20(s0)
20015a64:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015a68:	00f71763          	bne	a4,a5,20015a76 <__metal_driver_sifive_gpio0_interrupt_parent+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:462
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20015a6c:	800007b7          	lui	a5,0x80000
20015a70:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffeca0>
20015a74:	a011                	j	20015a78 <__metal_driver_sifive_gpio0_interrupt_parent+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:465
		return 0;
20015a76:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:467
}
20015a78:	853e                	mv	a0,a5
20015a7a:	4472                	lw	s0,28(sp)
20015a7c:	6105                	addi	sp,sp,32
20015a7e:	8082                	ret

20015a80 <__metal_driver_sifive_gpio0_interrupt_lines>:
__metal_driver_sifive_gpio0_interrupt_lines():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:470
{
20015a80:	1101                	addi	sp,sp,-32
20015a82:	ce22                	sw	s0,28(sp)
20015a84:	1000                	addi	s0,sp,32
20015a86:	fea42623          	sw	a0,-20(s0)
20015a8a:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:471
	if (((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 0)) {
20015a8e:	fec42703          	lw	a4,-20(s0)
20015a92:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015a96:	00f71763          	bne	a4,a5,20015aa4 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:471 (discriminator 1)
20015a9a:	fe842783          	lw	a5,-24(s0)
20015a9e:	e399                	bnez	a5,20015aa4 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:472
		return 8;
20015aa0:	47a1                	li	a5,8
20015aa2:	ae15                	j	20015dd6 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:474
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 1))) {
20015aa4:	fec42703          	lw	a4,-20(s0)
20015aa8:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015aac:	00f71963          	bne	a4,a5,20015abe <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:474 (discriminator 1)
20015ab0:	fe842703          	lw	a4,-24(s0)
20015ab4:	4785                	li	a5,1
20015ab6:	00f71463          	bne	a4,a5,20015abe <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:475
		return 9;
20015aba:	47a5                	li	a5,9
20015abc:	ae29                	j	20015dd6 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:477
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 2))) {
20015abe:	fec42703          	lw	a4,-20(s0)
20015ac2:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015ac6:	00f71963          	bne	a4,a5,20015ad8 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:477 (discriminator 1)
20015aca:	fe842703          	lw	a4,-24(s0)
20015ace:	4789                	li	a5,2
20015ad0:	00f71463          	bne	a4,a5,20015ad8 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:478
		return 10;
20015ad4:	47a9                	li	a5,10
20015ad6:	a601                	j	20015dd6 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:480
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 3))) {
20015ad8:	fec42703          	lw	a4,-20(s0)
20015adc:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015ae0:	00f71963          	bne	a4,a5,20015af2 <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:480 (discriminator 1)
20015ae4:	fe842703          	lw	a4,-24(s0)
20015ae8:	478d                	li	a5,3
20015aea:	00f71463          	bne	a4,a5,20015af2 <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:481
		return 11;
20015aee:	47ad                	li	a5,11
20015af0:	a4dd                	j	20015dd6 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:483
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 4))) {
20015af2:	fec42703          	lw	a4,-20(s0)
20015af6:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015afa:	00f71963          	bne	a4,a5,20015b0c <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:483 (discriminator 1)
20015afe:	fe842703          	lw	a4,-24(s0)
20015b02:	4791                	li	a5,4
20015b04:	00f71463          	bne	a4,a5,20015b0c <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:484
		return 12;
20015b08:	47b1                	li	a5,12
20015b0a:	a4f1                	j	20015dd6 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:486
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 5))) {
20015b0c:	fec42703          	lw	a4,-20(s0)
20015b10:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015b14:	00f71963          	bne	a4,a5,20015b26 <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:486 (discriminator 1)
20015b18:	fe842703          	lw	a4,-24(s0)
20015b1c:	4795                	li	a5,5
20015b1e:	00f71463          	bne	a4,a5,20015b26 <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:487
		return 13;
20015b22:	47b5                	li	a5,13
20015b24:	ac4d                	j	20015dd6 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:489
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 6))) {
20015b26:	fec42703          	lw	a4,-20(s0)
20015b2a:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015b2e:	00f71963          	bne	a4,a5,20015b40 <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:489 (discriminator 1)
20015b32:	fe842703          	lw	a4,-24(s0)
20015b36:	4799                	li	a5,6
20015b38:	00f71463          	bne	a4,a5,20015b40 <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:490
		return 14;
20015b3c:	47b9                	li	a5,14
20015b3e:	ac61                	j	20015dd6 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:492
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 7))) {
20015b40:	fec42703          	lw	a4,-20(s0)
20015b44:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015b48:	00f71963          	bne	a4,a5,20015b5a <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:492 (discriminator 1)
20015b4c:	fe842703          	lw	a4,-24(s0)
20015b50:	479d                	li	a5,7
20015b52:	00f71463          	bne	a4,a5,20015b5a <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:493
		return 15;
20015b56:	47bd                	li	a5,15
20015b58:	acbd                	j	20015dd6 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:495
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 8))) {
20015b5a:	fec42703          	lw	a4,-20(s0)
20015b5e:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015b62:	00f71963          	bne	a4,a5,20015b74 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:495 (discriminator 1)
20015b66:	fe842703          	lw	a4,-24(s0)
20015b6a:	47a1                	li	a5,8
20015b6c:	00f71463          	bne	a4,a5,20015b74 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:496
		return 16;
20015b70:	47c1                	li	a5,16
20015b72:	a495                	j	20015dd6 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:498
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 9))) {
20015b74:	fec42703          	lw	a4,-20(s0)
20015b78:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015b7c:	00f71963          	bne	a4,a5,20015b8e <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:498 (discriminator 1)
20015b80:	fe842703          	lw	a4,-24(s0)
20015b84:	47a5                	li	a5,9
20015b86:	00f71463          	bne	a4,a5,20015b8e <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:499
		return 17;
20015b8a:	47c5                	li	a5,17
20015b8c:	a4a9                	j	20015dd6 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:501
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 10))) {
20015b8e:	fec42703          	lw	a4,-20(s0)
20015b92:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015b96:	00f71963          	bne	a4,a5,20015ba8 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:501 (discriminator 1)
20015b9a:	fe842703          	lw	a4,-24(s0)
20015b9e:	47a9                	li	a5,10
20015ba0:	00f71463          	bne	a4,a5,20015ba8 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:502
		return 18;
20015ba4:	47c9                	li	a5,18
20015ba6:	ac05                	j	20015dd6 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:504
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 11))) {
20015ba8:	fec42703          	lw	a4,-20(s0)
20015bac:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015bb0:	00f71963          	bne	a4,a5,20015bc2 <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:504 (discriminator 1)
20015bb4:	fe842703          	lw	a4,-24(s0)
20015bb8:	47ad                	li	a5,11
20015bba:	00f71463          	bne	a4,a5,20015bc2 <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:505
		return 19;
20015bbe:	47cd                	li	a5,19
20015bc0:	ac19                	j	20015dd6 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:507
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 12))) {
20015bc2:	fec42703          	lw	a4,-20(s0)
20015bc6:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015bca:	00f71963          	bne	a4,a5,20015bdc <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:507 (discriminator 1)
20015bce:	fe842703          	lw	a4,-24(s0)
20015bd2:	47b1                	li	a5,12
20015bd4:	00f71463          	bne	a4,a5,20015bdc <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:508
		return 20;
20015bd8:	47d1                	li	a5,20
20015bda:	aaf5                	j	20015dd6 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:510
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 13))) {
20015bdc:	fec42703          	lw	a4,-20(s0)
20015be0:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015be4:	00f71963          	bne	a4,a5,20015bf6 <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:510 (discriminator 1)
20015be8:	fe842703          	lw	a4,-24(s0)
20015bec:	47b5                	li	a5,13
20015bee:	00f71463          	bne	a4,a5,20015bf6 <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:511
		return 21;
20015bf2:	47d5                	li	a5,21
20015bf4:	a2cd                	j	20015dd6 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:513
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 14))) {
20015bf6:	fec42703          	lw	a4,-20(s0)
20015bfa:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015bfe:	00f71963          	bne	a4,a5,20015c10 <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:513 (discriminator 1)
20015c02:	fe842703          	lw	a4,-24(s0)
20015c06:	47b9                	li	a5,14
20015c08:	00f71463          	bne	a4,a5,20015c10 <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:514
		return 22;
20015c0c:	47d9                	li	a5,22
20015c0e:	a2e1                	j	20015dd6 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:516
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 15))) {
20015c10:	fec42703          	lw	a4,-20(s0)
20015c14:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015c18:	00f71963          	bne	a4,a5,20015c2a <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:516 (discriminator 1)
20015c1c:	fe842703          	lw	a4,-24(s0)
20015c20:	47bd                	li	a5,15
20015c22:	00f71463          	bne	a4,a5,20015c2a <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:517
		return 23;
20015c26:	47dd                	li	a5,23
20015c28:	a27d                	j	20015dd6 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:519
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 16))) {
20015c2a:	fec42703          	lw	a4,-20(s0)
20015c2e:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015c32:	00f71963          	bne	a4,a5,20015c44 <__metal_driver_sifive_gpio0_interrupt_lines+0x1c4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:519 (discriminator 1)
20015c36:	fe842703          	lw	a4,-24(s0)
20015c3a:	47c1                	li	a5,16
20015c3c:	00f71463          	bne	a4,a5,20015c44 <__metal_driver_sifive_gpio0_interrupt_lines+0x1c4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:520
		return 24;
20015c40:	47e1                	li	a5,24
20015c42:	aa51                	j	20015dd6 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:522
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 17))) {
20015c44:	fec42703          	lw	a4,-20(s0)
20015c48:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015c4c:	00f71963          	bne	a4,a5,20015c5e <__metal_driver_sifive_gpio0_interrupt_lines+0x1de>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:522 (discriminator 1)
20015c50:	fe842703          	lw	a4,-24(s0)
20015c54:	47c5                	li	a5,17
20015c56:	00f71463          	bne	a4,a5,20015c5e <__metal_driver_sifive_gpio0_interrupt_lines+0x1de>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:523
		return 25;
20015c5a:	47e5                	li	a5,25
20015c5c:	aaad                	j	20015dd6 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:525
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 18))) {
20015c5e:	fec42703          	lw	a4,-20(s0)
20015c62:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015c66:	00f71963          	bne	a4,a5,20015c78 <__metal_driver_sifive_gpio0_interrupt_lines+0x1f8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:525 (discriminator 1)
20015c6a:	fe842703          	lw	a4,-24(s0)
20015c6e:	47c9                	li	a5,18
20015c70:	00f71463          	bne	a4,a5,20015c78 <__metal_driver_sifive_gpio0_interrupt_lines+0x1f8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:526
		return 26;
20015c74:	47e9                	li	a5,26
20015c76:	a285                	j	20015dd6 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:528
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 19))) {
20015c78:	fec42703          	lw	a4,-20(s0)
20015c7c:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015c80:	00f71963          	bne	a4,a5,20015c92 <__metal_driver_sifive_gpio0_interrupt_lines+0x212>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:528 (discriminator 1)
20015c84:	fe842703          	lw	a4,-24(s0)
20015c88:	47cd                	li	a5,19
20015c8a:	00f71463          	bne	a4,a5,20015c92 <__metal_driver_sifive_gpio0_interrupt_lines+0x212>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:529
		return 27;
20015c8e:	47ed                	li	a5,27
20015c90:	a299                	j	20015dd6 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:531
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 20))) {
20015c92:	fec42703          	lw	a4,-20(s0)
20015c96:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015c9a:	00f71963          	bne	a4,a5,20015cac <__metal_driver_sifive_gpio0_interrupt_lines+0x22c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:531 (discriminator 1)
20015c9e:	fe842703          	lw	a4,-24(s0)
20015ca2:	47d1                	li	a5,20
20015ca4:	00f71463          	bne	a4,a5,20015cac <__metal_driver_sifive_gpio0_interrupt_lines+0x22c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:532
		return 28;
20015ca8:	47f1                	li	a5,28
20015caa:	a235                	j	20015dd6 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:534
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 21))) {
20015cac:	fec42703          	lw	a4,-20(s0)
20015cb0:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015cb4:	00f71963          	bne	a4,a5,20015cc6 <__metal_driver_sifive_gpio0_interrupt_lines+0x246>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:534 (discriminator 1)
20015cb8:	fe842703          	lw	a4,-24(s0)
20015cbc:	47d5                	li	a5,21
20015cbe:	00f71463          	bne	a4,a5,20015cc6 <__metal_driver_sifive_gpio0_interrupt_lines+0x246>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:535
		return 29;
20015cc2:	47f5                	li	a5,29
20015cc4:	aa09                	j	20015dd6 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:537
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 22))) {
20015cc6:	fec42703          	lw	a4,-20(s0)
20015cca:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015cce:	00f71963          	bne	a4,a5,20015ce0 <__metal_driver_sifive_gpio0_interrupt_lines+0x260>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:537 (discriminator 1)
20015cd2:	fe842703          	lw	a4,-24(s0)
20015cd6:	47d9                	li	a5,22
20015cd8:	00f71463          	bne	a4,a5,20015ce0 <__metal_driver_sifive_gpio0_interrupt_lines+0x260>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:538
		return 30;
20015cdc:	47f9                	li	a5,30
20015cde:	a8e5                	j	20015dd6 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:540
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 23))) {
20015ce0:	fec42703          	lw	a4,-20(s0)
20015ce4:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015ce8:	00f71963          	bne	a4,a5,20015cfa <__metal_driver_sifive_gpio0_interrupt_lines+0x27a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:540 (discriminator 1)
20015cec:	fe842703          	lw	a4,-24(s0)
20015cf0:	47dd                	li	a5,23
20015cf2:	00f71463          	bne	a4,a5,20015cfa <__metal_driver_sifive_gpio0_interrupt_lines+0x27a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:541
		return 31;
20015cf6:	47fd                	li	a5,31
20015cf8:	a8f9                	j	20015dd6 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:543
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 24))) {
20015cfa:	fec42703          	lw	a4,-20(s0)
20015cfe:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015d02:	00f71a63          	bne	a4,a5,20015d16 <__metal_driver_sifive_gpio0_interrupt_lines+0x296>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:543 (discriminator 1)
20015d06:	fe842703          	lw	a4,-24(s0)
20015d0a:	47e1                	li	a5,24
20015d0c:	00f71563          	bne	a4,a5,20015d16 <__metal_driver_sifive_gpio0_interrupt_lines+0x296>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:544
		return 32;
20015d10:	02000793          	li	a5,32
20015d14:	a0c9                	j	20015dd6 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:546
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 25))) {
20015d16:	fec42703          	lw	a4,-20(s0)
20015d1a:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015d1e:	00f71a63          	bne	a4,a5,20015d32 <__metal_driver_sifive_gpio0_interrupt_lines+0x2b2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:546 (discriminator 1)
20015d22:	fe842703          	lw	a4,-24(s0)
20015d26:	47e5                	li	a5,25
20015d28:	00f71563          	bne	a4,a5,20015d32 <__metal_driver_sifive_gpio0_interrupt_lines+0x2b2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:547
		return 33;
20015d2c:	02100793          	li	a5,33
20015d30:	a05d                	j	20015dd6 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:549
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 26))) {
20015d32:	fec42703          	lw	a4,-20(s0)
20015d36:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015d3a:	00f71a63          	bne	a4,a5,20015d4e <__metal_driver_sifive_gpio0_interrupt_lines+0x2ce>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:549 (discriminator 1)
20015d3e:	fe842703          	lw	a4,-24(s0)
20015d42:	47e9                	li	a5,26
20015d44:	00f71563          	bne	a4,a5,20015d4e <__metal_driver_sifive_gpio0_interrupt_lines+0x2ce>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:550
		return 34;
20015d48:	02200793          	li	a5,34
20015d4c:	a069                	j	20015dd6 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:552
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 27))) {
20015d4e:	fec42703          	lw	a4,-20(s0)
20015d52:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015d56:	00f71a63          	bne	a4,a5,20015d6a <__metal_driver_sifive_gpio0_interrupt_lines+0x2ea>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:552 (discriminator 1)
20015d5a:	fe842703          	lw	a4,-24(s0)
20015d5e:	47ed                	li	a5,27
20015d60:	00f71563          	bne	a4,a5,20015d6a <__metal_driver_sifive_gpio0_interrupt_lines+0x2ea>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:553
		return 35;
20015d64:	02300793          	li	a5,35
20015d68:	a0bd                	j	20015dd6 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:555
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 28))) {
20015d6a:	fec42703          	lw	a4,-20(s0)
20015d6e:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015d72:	00f71a63          	bne	a4,a5,20015d86 <__metal_driver_sifive_gpio0_interrupt_lines+0x306>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:555 (discriminator 1)
20015d76:	fe842703          	lw	a4,-24(s0)
20015d7a:	47f1                	li	a5,28
20015d7c:	00f71563          	bne	a4,a5,20015d86 <__metal_driver_sifive_gpio0_interrupt_lines+0x306>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:556
		return 36;
20015d80:	02400793          	li	a5,36
20015d84:	a889                	j	20015dd6 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:558
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 29))) {
20015d86:	fec42703          	lw	a4,-20(s0)
20015d8a:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015d8e:	00f71963          	bne	a4,a5,20015da0 <__metal_driver_sifive_gpio0_interrupt_lines+0x320>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:558 (discriminator 1)
20015d92:	fe842703          	lw	a4,-24(s0)
20015d96:	47f5                	li	a5,29
20015d98:	00f71463          	bne	a4,a5,20015da0 <__metal_driver_sifive_gpio0_interrupt_lines+0x320>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:559
		return 27;
20015d9c:	47ed                	li	a5,27
20015d9e:	a825                	j	20015dd6 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:561
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 30))) {
20015da0:	fec42703          	lw	a4,-20(s0)
20015da4:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015da8:	00f71963          	bne	a4,a5,20015dba <__metal_driver_sifive_gpio0_interrupt_lines+0x33a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:561 (discriminator 1)
20015dac:	fe842703          	lw	a4,-24(s0)
20015db0:	47f9                	li	a5,30
20015db2:	00f71463          	bne	a4,a5,20015dba <__metal_driver_sifive_gpio0_interrupt_lines+0x33a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:562
		return 28;
20015db6:	47f1                	li	a5,28
20015db8:	a839                	j	20015dd6 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:564
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 31))) {
20015dba:	fec42703          	lw	a4,-20(s0)
20015dbe:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015dc2:	00f71963          	bne	a4,a5,20015dd4 <__metal_driver_sifive_gpio0_interrupt_lines+0x354>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:564 (discriminator 1)
20015dc6:	fe842703          	lw	a4,-24(s0)
20015dca:	47fd                	li	a5,31
20015dcc:	00f71463          	bne	a4,a5,20015dd4 <__metal_driver_sifive_gpio0_interrupt_lines+0x354>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:565
		return 29;
20015dd0:	47f5                	li	a5,29
20015dd2:	a011                	j	20015dd6 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:568
		return 0;
20015dd4:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:570
}
20015dd6:	853e                	mv	a0,a5
20015dd8:	4472                	lw	s0,28(sp)
20015dda:	6105                	addi	sp,sp,32
20015ddc:	8082                	ret

20015dde <__metal_driver_sifive_gpio0_enable_input>:
__metal_driver_sifive_gpio0_enable_input():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:13
#include <metal/drivers/sifive_gpio0.h>
#include <metal/io.h>
#include <metal/machine.h>

int __metal_driver_sifive_gpio0_enable_input(struct metal_gpio *ggpio,
                                             long source) {
20015dde:	7179                	addi	sp,sp,-48
20015de0:	d606                	sw	ra,44(sp)
20015de2:	d422                	sw	s0,40(sp)
20015de4:	1800                	addi	s0,sp,48
20015de6:	fca42e23          	sw	a0,-36(s0)
20015dea:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:14
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015dee:	fdc42503          	lw	a0,-36(s0)
20015df2:	c3fff0ef          	jal	ra,20015a30 <__metal_driver_sifive_gpio0_base>
20015df6:	87aa                	mv	a5,a0
20015df8:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:17

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) |= source;
20015dfc:	fec42783          	lw	a5,-20(s0)
20015e00:	0791                	addi	a5,a5,4
20015e02:	4398                	lw	a4,0(a5)
20015e04:	fd842783          	lw	a5,-40(s0)
20015e08:	fec42683          	lw	a3,-20(s0)
20015e0c:	0691                	addi	a3,a3,4
20015e0e:	8fd9                	or	a5,a5,a4
20015e10:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:19

    return 0;
20015e12:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:20
}
20015e14:	853e                	mv	a0,a5
20015e16:	50b2                	lw	ra,44(sp)
20015e18:	5422                	lw	s0,40(sp)
20015e1a:	6145                	addi	sp,sp,48
20015e1c:	8082                	ret

20015e1e <__metal_driver_sifive_gpio0_disable_input>:
__metal_driver_sifive_gpio0_disable_input():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:23

int __metal_driver_sifive_gpio0_disable_input(struct metal_gpio *ggpio,
                                              long source) {
20015e1e:	7179                	addi	sp,sp,-48
20015e20:	d606                	sw	ra,44(sp)
20015e22:	d422                	sw	s0,40(sp)
20015e24:	1800                	addi	s0,sp,48
20015e26:	fca42e23          	sw	a0,-36(s0)
20015e2a:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:24
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015e2e:	fdc42503          	lw	a0,-36(s0)
20015e32:	bffff0ef          	jal	ra,20015a30 <__metal_driver_sifive_gpio0_base>
20015e36:	87aa                	mv	a5,a0
20015e38:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:27

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) &= ~source;
20015e3c:	fec42783          	lw	a5,-20(s0)
20015e40:	0791                	addi	a5,a5,4
20015e42:	439c                	lw	a5,0(a5)
20015e44:	fd842703          	lw	a4,-40(s0)
20015e48:	fff74713          	not	a4,a4
20015e4c:	86ba                	mv	a3,a4
20015e4e:	fec42703          	lw	a4,-20(s0)
20015e52:	0711                	addi	a4,a4,4
20015e54:	8ff5                	and	a5,a5,a3
20015e56:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:29

    return 0;
20015e58:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:30
}
20015e5a:	853e                	mv	a0,a5
20015e5c:	50b2                	lw	ra,44(sp)
20015e5e:	5422                	lw	s0,40(sp)
20015e60:	6145                	addi	sp,sp,48
20015e62:	8082                	ret

20015e64 <__metal_driver_sifive_gpio0_input>:
__metal_driver_sifive_gpio0_input():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:32

long __metal_driver_sifive_gpio0_input(struct metal_gpio *ggpio) {
20015e64:	7179                	addi	sp,sp,-48
20015e66:	d606                	sw	ra,44(sp)
20015e68:	d422                	sw	s0,40(sp)
20015e6a:	1800                	addi	s0,sp,48
20015e6c:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:33
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015e70:	fdc42503          	lw	a0,-36(s0)
20015e74:	bbdff0ef          	jal	ra,20015a30 <__metal_driver_sifive_gpio0_base>
20015e78:	87aa                	mv	a5,a0
20015e7a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:35

    return __METAL_ACCESS_ONCE(
20015e7e:	fec42783          	lw	a5,-20(s0)
20015e82:	439c                	lw	a5,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:37
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_VALUE));
}
20015e84:	853e                	mv	a0,a5
20015e86:	50b2                	lw	ra,44(sp)
20015e88:	5422                	lw	s0,40(sp)
20015e8a:	6145                	addi	sp,sp,48
20015e8c:	8082                	ret

20015e8e <__metal_driver_sifive_gpio0_output>:
__metal_driver_sifive_gpio0_output():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:39

long __metal_driver_sifive_gpio0_output(struct metal_gpio *ggpio) {
20015e8e:	7179                	addi	sp,sp,-48
20015e90:	d606                	sw	ra,44(sp)
20015e92:	d422                	sw	s0,40(sp)
20015e94:	1800                	addi	s0,sp,48
20015e96:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:40
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015e9a:	fdc42503          	lw	a0,-36(s0)
20015e9e:	b93ff0ef          	jal	ra,20015a30 <__metal_driver_sifive_gpio0_base>
20015ea2:	87aa                	mv	a5,a0
20015ea4:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:42

    return __METAL_ACCESS_ONCE(
20015ea8:	fec42783          	lw	a5,-20(s0)
20015eac:	07b1                	addi	a5,a5,12
20015eae:	439c                	lw	a5,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:44
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT));
}
20015eb0:	853e                	mv	a0,a5
20015eb2:	50b2                	lw	ra,44(sp)
20015eb4:	5422                	lw	s0,40(sp)
20015eb6:	6145                	addi	sp,sp,48
20015eb8:	8082                	ret

20015eba <__metal_driver_sifive_gpio0_disable_output>:
__metal_driver_sifive_gpio0_disable_output():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:47

int __metal_driver_sifive_gpio0_disable_output(struct metal_gpio *ggpio,
                                               long source) {
20015eba:	7179                	addi	sp,sp,-48
20015ebc:	d606                	sw	ra,44(sp)
20015ebe:	d422                	sw	s0,40(sp)
20015ec0:	1800                	addi	s0,sp,48
20015ec2:	fca42e23          	sw	a0,-36(s0)
20015ec6:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:48
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015eca:	fdc42503          	lw	a0,-36(s0)
20015ece:	b63ff0ef          	jal	ra,20015a30 <__metal_driver_sifive_gpio0_base>
20015ed2:	87aa                	mv	a5,a0
20015ed4:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:51

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) &= ~source;
20015ed8:	fec42783          	lw	a5,-20(s0)
20015edc:	07a1                	addi	a5,a5,8
20015ede:	439c                	lw	a5,0(a5)
20015ee0:	fd842703          	lw	a4,-40(s0)
20015ee4:	fff74713          	not	a4,a4
20015ee8:	86ba                	mv	a3,a4
20015eea:	fec42703          	lw	a4,-20(s0)
20015eee:	0721                	addi	a4,a4,8
20015ef0:	8ff5                	and	a5,a5,a3
20015ef2:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:53

    return 0;
20015ef4:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:54
}
20015ef6:	853e                	mv	a0,a5
20015ef8:	50b2                	lw	ra,44(sp)
20015efa:	5422                	lw	s0,40(sp)
20015efc:	6145                	addi	sp,sp,48
20015efe:	8082                	ret

20015f00 <__metal_driver_sifive_gpio0_enable_output>:
__metal_driver_sifive_gpio0_enable_output():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:57

int __metal_driver_sifive_gpio0_enable_output(struct metal_gpio *ggpio,
                                              long source) {
20015f00:	7179                	addi	sp,sp,-48
20015f02:	d606                	sw	ra,44(sp)
20015f04:	d422                	sw	s0,40(sp)
20015f06:	1800                	addi	s0,sp,48
20015f08:	fca42e23          	sw	a0,-36(s0)
20015f0c:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:58
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015f10:	fdc42503          	lw	a0,-36(s0)
20015f14:	b1dff0ef          	jal	ra,20015a30 <__metal_driver_sifive_gpio0_base>
20015f18:	87aa                	mv	a5,a0
20015f1a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:61

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) |= source;
20015f1e:	fec42783          	lw	a5,-20(s0)
20015f22:	07a1                	addi	a5,a5,8
20015f24:	4398                	lw	a4,0(a5)
20015f26:	fd842783          	lw	a5,-40(s0)
20015f2a:	fec42683          	lw	a3,-20(s0)
20015f2e:	06a1                	addi	a3,a3,8
20015f30:	8fd9                	or	a5,a5,a4
20015f32:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:63

    return 0;
20015f34:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:64
}
20015f36:	853e                	mv	a0,a5
20015f38:	50b2                	lw	ra,44(sp)
20015f3a:	5422                	lw	s0,40(sp)
20015f3c:	6145                	addi	sp,sp,48
20015f3e:	8082                	ret

20015f40 <__metal_driver_sifive_gpio0_output_set>:
__metal_driver_sifive_gpio0_output_set():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:67

int __metal_driver_sifive_gpio0_output_set(struct metal_gpio *ggpio,
                                           long value) {
20015f40:	7179                	addi	sp,sp,-48
20015f42:	d606                	sw	ra,44(sp)
20015f44:	d422                	sw	s0,40(sp)
20015f46:	1800                	addi	s0,sp,48
20015f48:	fca42e23          	sw	a0,-36(s0)
20015f4c:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:68
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015f50:	fdc42503          	lw	a0,-36(s0)
20015f54:	addff0ef          	jal	ra,20015a30 <__metal_driver_sifive_gpio0_base>
20015f58:	87aa                	mv	a5,a0
20015f5a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:70

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) |=
20015f5e:	fec42783          	lw	a5,-20(s0)
20015f62:	07b1                	addi	a5,a5,12
20015f64:	4398                	lw	a4,0(a5)
20015f66:	fd842783          	lw	a5,-40(s0)
20015f6a:	fec42683          	lw	a3,-20(s0)
20015f6e:	06b1                	addi	a3,a3,12
20015f70:	8fd9                	or	a5,a5,a4
20015f72:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:73
        value;

    return 0;
20015f74:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:74
}
20015f76:	853e                	mv	a0,a5
20015f78:	50b2                	lw	ra,44(sp)
20015f7a:	5422                	lw	s0,40(sp)
20015f7c:	6145                	addi	sp,sp,48
20015f7e:	8082                	ret

20015f80 <__metal_driver_sifive_gpio0_output_clear>:
__metal_driver_sifive_gpio0_output_clear():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:77

int __metal_driver_sifive_gpio0_output_clear(struct metal_gpio *ggpio,
                                             long value) {
20015f80:	7179                	addi	sp,sp,-48
20015f82:	d606                	sw	ra,44(sp)
20015f84:	d422                	sw	s0,40(sp)
20015f86:	1800                	addi	s0,sp,48
20015f88:	fca42e23          	sw	a0,-36(s0)
20015f8c:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:78
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015f90:	fdc42503          	lw	a0,-36(s0)
20015f94:	a9dff0ef          	jal	ra,20015a30 <__metal_driver_sifive_gpio0_base>
20015f98:	87aa                	mv	a5,a0
20015f9a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:80

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
20015f9e:	fec42783          	lw	a5,-20(s0)
20015fa2:	07b1                	addi	a5,a5,12
20015fa4:	439c                	lw	a5,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:81
        ~value;
20015fa6:	fd842703          	lw	a4,-40(s0)
20015faa:	fff74713          	not	a4,a4
20015fae:	86ba                	mv	a3,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:80
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
20015fb0:	fec42703          	lw	a4,-20(s0)
20015fb4:	0731                	addi	a4,a4,12
20015fb6:	8ff5                	and	a5,a5,a3
20015fb8:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:83

    return 0;
20015fba:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:84
}
20015fbc:	853e                	mv	a0,a5
20015fbe:	50b2                	lw	ra,44(sp)
20015fc0:	5422                	lw	s0,40(sp)
20015fc2:	6145                	addi	sp,sp,48
20015fc4:	8082                	ret

20015fc6 <__metal_driver_sifive_gpio0_output_toggle>:
__metal_driver_sifive_gpio0_output_toggle():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:87

int __metal_driver_sifive_gpio0_output_toggle(struct metal_gpio *ggpio,
                                              long value) {
20015fc6:	7179                	addi	sp,sp,-48
20015fc8:	d606                	sw	ra,44(sp)
20015fca:	d422                	sw	s0,40(sp)
20015fcc:	1800                	addi	s0,sp,48
20015fce:	fca42e23          	sw	a0,-36(s0)
20015fd2:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:88
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015fd6:	fdc42503          	lw	a0,-36(s0)
20015fda:	a57ff0ef          	jal	ra,20015a30 <__metal_driver_sifive_gpio0_base>
20015fde:	87aa                	mv	a5,a0
20015fe0:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:91

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
        __METAL_ACCESS_ONCE(
20015fe4:	fec42783          	lw	a5,-20(s0)
20015fe8:	07b1                	addi	a5,a5,12
20015fea:	4398                	lw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
20015fec:	fd842783          	lw	a5,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
20015ff0:	fec42683          	lw	a3,-20(s0)
20015ff4:	06b1                	addi	a3,a3,12
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
20015ff6:	8fb9                	xor	a5,a5,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
20015ff8:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:95
        value;

    return 0;
20015ffa:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:96
}
20015ffc:	853e                	mv	a0,a5
20015ffe:	50b2                	lw	ra,44(sp)
20016000:	5422                	lw	s0,40(sp)
20016002:	6145                	addi	sp,sp,48
20016004:	8082                	ret

20016006 <__metal_driver_sifive_gpio0_enable_io>:
__metal_driver_sifive_gpio0_enable_io():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:99

int __metal_driver_sifive_gpio0_enable_io(struct metal_gpio *ggpio, long source,
                                          long dest) {
20016006:	7179                	addi	sp,sp,-48
20016008:	d606                	sw	ra,44(sp)
2001600a:	d422                	sw	s0,40(sp)
2001600c:	1800                	addi	s0,sp,48
2001600e:	fca42e23          	sw	a0,-36(s0)
20016012:	fcb42c23          	sw	a1,-40(s0)
20016016:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:100
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2001601a:	fdc42503          	lw	a0,-36(s0)
2001601e:	a13ff0ef          	jal	ra,20015a30 <__metal_driver_sifive_gpio0_base>
20016022:	87aa                	mv	a5,a0
20016024:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:103

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_SEL)) |= source;
20016028:	fec42783          	lw	a5,-20(s0)
2001602c:	03c78793          	addi	a5,a5,60
20016030:	4398                	lw	a4,0(a5)
20016032:	fd842783          	lw	a5,-40(s0)
20016036:	fec42683          	lw	a3,-20(s0)
2001603a:	03c68693          	addi	a3,a3,60
2001603e:	8fd9                	or	a5,a5,a4
20016040:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:104
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) |=
20016042:	fec42783          	lw	a5,-20(s0)
20016046:	03878793          	addi	a5,a5,56
2001604a:	4398                	lw	a4,0(a5)
2001604c:	fd442783          	lw	a5,-44(s0)
20016050:	fec42683          	lw	a3,-20(s0)
20016054:	03868693          	addi	a3,a3,56
20016058:	8fd9                	or	a5,a5,a4
2001605a:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:107
        dest;

    return 0;
2001605c:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:108
}
2001605e:	853e                	mv	a0,a5
20016060:	50b2                	lw	ra,44(sp)
20016062:	5422                	lw	s0,40(sp)
20016064:	6145                	addi	sp,sp,48
20016066:	8082                	ret

20016068 <__metal_driver_sifive_gpio0_disable_io>:
__metal_driver_sifive_gpio0_disable_io():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:111

int __metal_driver_sifive_gpio0_disable_io(struct metal_gpio *ggpio,
                                           long source) {
20016068:	7179                	addi	sp,sp,-48
2001606a:	d606                	sw	ra,44(sp)
2001606c:	d422                	sw	s0,40(sp)
2001606e:	1800                	addi	s0,sp,48
20016070:	fca42e23          	sw	a0,-36(s0)
20016074:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:112
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20016078:	fdc42503          	lw	a0,-36(s0)
2001607c:	9b5ff0ef          	jal	ra,20015a30 <__metal_driver_sifive_gpio0_base>
20016080:	87aa                	mv	a5,a0
20016082:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:114

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
20016086:	fec42783          	lw	a5,-20(s0)
2001608a:	03878793          	addi	a5,a5,56
2001608e:	439c                	lw	a5,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:115
        ~source;
20016090:	fd842703          	lw	a4,-40(s0)
20016094:	fff74713          	not	a4,a4
20016098:	86ba                	mv	a3,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:114
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
2001609a:	fec42703          	lw	a4,-20(s0)
2001609e:	03870713          	addi	a4,a4,56
200160a2:	8ff5                	and	a5,a5,a3
200160a4:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:117

    return 0;
200160a6:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:118
}
200160a8:	853e                	mv	a0,a5
200160aa:	50b2                	lw	ra,44(sp)
200160ac:	5422                	lw	s0,40(sp)
200160ae:	6145                	addi	sp,sp,48
200160b0:	8082                	ret

200160b2 <__metal_driver_sifive_gpio0_config_int>:
__metal_driver_sifive_gpio0_config_int():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:121

int __metal_driver_sifive_gpio0_config_int(struct metal_gpio *ggpio,
                                           long source, int intr_type) {
200160b2:	7179                	addi	sp,sp,-48
200160b4:	d606                	sw	ra,44(sp)
200160b6:	d422                	sw	s0,40(sp)
200160b8:	1800                	addi	s0,sp,48
200160ba:	fca42e23          	sw	a0,-36(s0)
200160be:	fcb42c23          	sw	a1,-40(s0)
200160c2:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:122
    long base = __metal_driver_sifive_gpio0_base(ggpio);
200160c6:	fdc42503          	lw	a0,-36(s0)
200160ca:	967ff0ef          	jal	ra,20015a30 <__metal_driver_sifive_gpio0_base>
200160ce:	87aa                	mv	a5,a0
200160d0:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:124

    switch (intr_type) {
200160d4:	fd442703          	lw	a4,-44(s0)
200160d8:	479d                	li	a5,7
200160da:	1ce7e963          	bltu	a5,a4,200162ac <__metal_driver_sifive_gpio0_config_int+0x1fa>
200160de:	fd442783          	lw	a5,-44(s0)
200160e2:	00279713          	slli	a4,a5,0x2
200160e6:	200117b7          	lui	a5,0x20011
200160ea:	fc078793          	addi	a5,a5,-64 # 20010fc0 <__metal_driver_vtable_sifive_fe310_g000_pll+0xc>
200160ee:	97ba                	add	a5,a5,a4
200160f0:	439c                	lw	a5,0(a5)
200160f2:	8782                	jr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:127
    case METAL_GPIO_INT_DISABLE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) &= ~source;
200160f4:	fec42783          	lw	a5,-20(s0)
200160f8:	07e1                	addi	a5,a5,24
200160fa:	439c                	lw	a5,0(a5)
200160fc:	fd842703          	lw	a4,-40(s0)
20016100:	fff74713          	not	a4,a4
20016104:	86ba                	mv	a3,a4
20016106:	fec42703          	lw	a4,-20(s0)
2001610a:	0761                	addi	a4,a4,24
2001610c:	8ff5                	and	a5,a5,a3
2001610e:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:129
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) &= ~source;
20016110:	fec42783          	lw	a5,-20(s0)
20016114:	02078793          	addi	a5,a5,32
20016118:	439c                	lw	a5,0(a5)
2001611a:	fd842703          	lw	a4,-40(s0)
2001611e:	fff74713          	not	a4,a4
20016122:	86ba                	mv	a3,a4
20016124:	fec42703          	lw	a4,-20(s0)
20016128:	02070713          	addi	a4,a4,32
2001612c:	8ff5                	and	a5,a5,a3
2001612e:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:131
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) &= ~source;
20016130:	fec42783          	lw	a5,-20(s0)
20016134:	02878793          	addi	a5,a5,40
20016138:	439c                	lw	a5,0(a5)
2001613a:	fd842703          	lw	a4,-40(s0)
2001613e:	fff74713          	not	a4,a4
20016142:	86ba                	mv	a3,a4
20016144:	fec42703          	lw	a4,-20(s0)
20016148:	02870713          	addi	a4,a4,40
2001614c:	8ff5                	and	a5,a5,a3
2001614e:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:133
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) &= ~source;
20016150:	fec42783          	lw	a5,-20(s0)
20016154:	03078793          	addi	a5,a5,48
20016158:	439c                	lw	a5,0(a5)
2001615a:	fd842703          	lw	a4,-40(s0)
2001615e:	fff74713          	not	a4,a4
20016162:	86ba                	mv	a3,a4
20016164:	fec42703          	lw	a4,-20(s0)
20016168:	03070713          	addi	a4,a4,48
2001616c:	8ff5                	and	a5,a5,a3
2001616e:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:134
        break;
20016170:	aa35                	j	200162ac <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:137
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20016172:	fec42783          	lw	a5,-20(s0)
20016176:	07e1                	addi	a5,a5,24
20016178:	4398                	lw	a4,0(a5)
2001617a:	fd842783          	lw	a5,-40(s0)
2001617e:	fec42683          	lw	a3,-20(s0)
20016182:	06e1                	addi	a3,a3,24
20016184:	8fd9                	or	a5,a5,a4
20016186:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:138
        break;
20016188:	a215                	j	200162ac <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:141
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
2001618a:	fec42783          	lw	a5,-20(s0)
2001618e:	02078793          	addi	a5,a5,32
20016192:	4398                	lw	a4,0(a5)
20016194:	fd842783          	lw	a5,-40(s0)
20016198:	fec42683          	lw	a3,-20(s0)
2001619c:	02068693          	addi	a3,a3,32
200161a0:	8fd9                	or	a5,a5,a4
200161a2:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:142
        break;
200161a4:	a221                	j	200162ac <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:145
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
200161a6:	fec42783          	lw	a5,-20(s0)
200161aa:	07e1                	addi	a5,a5,24
200161ac:	4398                	lw	a4,0(a5)
200161ae:	fd842783          	lw	a5,-40(s0)
200161b2:	fec42683          	lw	a3,-20(s0)
200161b6:	06e1                	addi	a3,a3,24
200161b8:	8fd9                	or	a5,a5,a4
200161ba:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:147
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
200161bc:	fec42783          	lw	a5,-20(s0)
200161c0:	02078793          	addi	a5,a5,32
200161c4:	4398                	lw	a4,0(a5)
200161c6:	fd842783          	lw	a5,-40(s0)
200161ca:	fec42683          	lw	a3,-20(s0)
200161ce:	02068693          	addi	a3,a3,32
200161d2:	8fd9                	or	a5,a5,a4
200161d4:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:148
        break;
200161d6:	a8d9                	j	200162ac <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:151
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
200161d8:	fec42783          	lw	a5,-20(s0)
200161dc:	02878793          	addi	a5,a5,40
200161e0:	4398                	lw	a4,0(a5)
200161e2:	fd842783          	lw	a5,-40(s0)
200161e6:	fec42683          	lw	a3,-20(s0)
200161ea:	02868693          	addi	a3,a3,40
200161ee:	8fd9                	or	a5,a5,a4
200161f0:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:152
        break;
200161f2:	a86d                	j	200162ac <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:155
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
200161f4:	fec42783          	lw	a5,-20(s0)
200161f8:	03078793          	addi	a5,a5,48
200161fc:	4398                	lw	a4,0(a5)
200161fe:	fd842783          	lw	a5,-40(s0)
20016202:	fec42683          	lw	a3,-20(s0)
20016206:	03068693          	addi	a3,a3,48
2001620a:	8fd9                	or	a5,a5,a4
2001620c:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:156
        break;
2001620e:	a879                	j	200162ac <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:159
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20016210:	fec42783          	lw	a5,-20(s0)
20016214:	02878793          	addi	a5,a5,40
20016218:	4398                	lw	a4,0(a5)
2001621a:	fd842783          	lw	a5,-40(s0)
2001621e:	fec42683          	lw	a3,-20(s0)
20016222:	02868693          	addi	a3,a3,40
20016226:	8fd9                	or	a5,a5,a4
20016228:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:161
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
2001622a:	fec42783          	lw	a5,-20(s0)
2001622e:	03078793          	addi	a5,a5,48
20016232:	4398                	lw	a4,0(a5)
20016234:	fd842783          	lw	a5,-40(s0)
20016238:	fec42683          	lw	a3,-20(s0)
2001623c:	03068693          	addi	a3,a3,48
20016240:	8fd9                	or	a5,a5,a4
20016242:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:162
        break;
20016244:	a0a5                	j	200162ac <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:165
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20016246:	fec42783          	lw	a5,-20(s0)
2001624a:	07e1                	addi	a5,a5,24
2001624c:	4398                	lw	a4,0(a5)
2001624e:	fd842783          	lw	a5,-40(s0)
20016252:	fec42683          	lw	a3,-20(s0)
20016256:	06e1                	addi	a3,a3,24
20016258:	8fd9                	or	a5,a5,a4
2001625a:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:167
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
2001625c:	fec42783          	lw	a5,-20(s0)
20016260:	02078793          	addi	a5,a5,32
20016264:	4398                	lw	a4,0(a5)
20016266:	fd842783          	lw	a5,-40(s0)
2001626a:	fec42683          	lw	a3,-20(s0)
2001626e:	02068693          	addi	a3,a3,32
20016272:	8fd9                	or	a5,a5,a4
20016274:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:169
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20016276:	fec42783          	lw	a5,-20(s0)
2001627a:	02878793          	addi	a5,a5,40
2001627e:	4398                	lw	a4,0(a5)
20016280:	fd842783          	lw	a5,-40(s0)
20016284:	fec42683          	lw	a3,-20(s0)
20016288:	02868693          	addi	a3,a3,40
2001628c:	8fd9                	or	a5,a5,a4
2001628e:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:171
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20016290:	fec42783          	lw	a5,-20(s0)
20016294:	03078793          	addi	a5,a5,48
20016298:	4398                	lw	a4,0(a5)
2001629a:	fd842783          	lw	a5,-40(s0)
2001629e:	fec42683          	lw	a3,-20(s0)
200162a2:	03068693          	addi	a3,a3,48
200162a6:	8fd9                	or	a5,a5,a4
200162a8:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:172
        break;
200162aa:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:174
    }
    return 0;
200162ac:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:175
}
200162ae:	853e                	mv	a0,a5
200162b0:	50b2                	lw	ra,44(sp)
200162b2:	5422                	lw	s0,40(sp)
200162b4:	6145                	addi	sp,sp,48
200162b6:	8082                	ret

200162b8 <__metal_driver_sifive_gpio0_clear_int>:
__metal_driver_sifive_gpio0_clear_int():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:178

int __metal_driver_sifive_gpio0_clear_int(struct metal_gpio *ggpio, long source,
                                          int intr_type) {
200162b8:	7179                	addi	sp,sp,-48
200162ba:	d606                	sw	ra,44(sp)
200162bc:	d422                	sw	s0,40(sp)
200162be:	1800                	addi	s0,sp,48
200162c0:	fca42e23          	sw	a0,-36(s0)
200162c4:	fcb42c23          	sw	a1,-40(s0)
200162c8:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:179
    long base = __metal_driver_sifive_gpio0_base(ggpio);
200162cc:	fdc42503          	lw	a0,-36(s0)
200162d0:	f60ff0ef          	jal	ra,20015a30 <__metal_driver_sifive_gpio0_base>
200162d4:	87aa                	mv	a5,a0
200162d6:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:181

    switch (intr_type) {
200162da:	fd442703          	lw	a4,-44(s0)
200162de:	479d                	li	a5,7
200162e0:	14e7ea63          	bltu	a5,a4,20016434 <__metal_driver_sifive_gpio0_clear_int+0x17c>
200162e4:	fd442783          	lw	a5,-44(s0)
200162e8:	00279713          	slli	a4,a5,0x2
200162ec:	200117b7          	lui	a5,0x20011
200162f0:	fe078793          	addi	a5,a5,-32 # 20010fe0 <__metal_driver_vtable_sifive_fe310_g000_pll+0x2c>
200162f4:	97ba                	add	a5,a5,a4
200162f6:	439c                	lw	a5,0(a5)
200162f8:	8782                	jr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:184
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
200162fa:	fec42783          	lw	a5,-20(s0)
200162fe:	07f1                	addi	a5,a5,28
20016300:	4398                	lw	a4,0(a5)
20016302:	fd842783          	lw	a5,-40(s0)
20016306:	fec42683          	lw	a3,-20(s0)
2001630a:	06f1                	addi	a3,a3,28
2001630c:	8fd9                	or	a5,a5,a4
2001630e:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:185
        break;
20016310:	a215                	j	20016434 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:188
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20016312:	fec42783          	lw	a5,-20(s0)
20016316:	02478793          	addi	a5,a5,36
2001631a:	4398                	lw	a4,0(a5)
2001631c:	fd842783          	lw	a5,-40(s0)
20016320:	fec42683          	lw	a3,-20(s0)
20016324:	02468693          	addi	a3,a3,36
20016328:	8fd9                	or	a5,a5,a4
2001632a:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:189
        break;
2001632c:	a221                	j	20016434 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:192
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
2001632e:	fec42783          	lw	a5,-20(s0)
20016332:	07f1                	addi	a5,a5,28
20016334:	4398                	lw	a4,0(a5)
20016336:	fd842783          	lw	a5,-40(s0)
2001633a:	fec42683          	lw	a3,-20(s0)
2001633e:	06f1                	addi	a3,a3,28
20016340:	8fd9                	or	a5,a5,a4
20016342:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:194
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20016344:	fec42783          	lw	a5,-20(s0)
20016348:	02478793          	addi	a5,a5,36
2001634c:	4398                	lw	a4,0(a5)
2001634e:	fd842783          	lw	a5,-40(s0)
20016352:	fec42683          	lw	a3,-20(s0)
20016356:	02468693          	addi	a3,a3,36
2001635a:	8fd9                	or	a5,a5,a4
2001635c:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:195
        break;
2001635e:	a8d9                	j	20016434 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:198
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20016360:	fec42783          	lw	a5,-20(s0)
20016364:	02c78793          	addi	a5,a5,44
20016368:	4398                	lw	a4,0(a5)
2001636a:	fd842783          	lw	a5,-40(s0)
2001636e:	fec42683          	lw	a3,-20(s0)
20016372:	02c68693          	addi	a3,a3,44
20016376:	8fd9                	or	a5,a5,a4
20016378:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:199
        break;
2001637a:	a86d                	j	20016434 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:202
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
2001637c:	fec42783          	lw	a5,-20(s0)
20016380:	03478793          	addi	a5,a5,52
20016384:	4398                	lw	a4,0(a5)
20016386:	fd842783          	lw	a5,-40(s0)
2001638a:	fec42683          	lw	a3,-20(s0)
2001638e:	03468693          	addi	a3,a3,52
20016392:	8fd9                	or	a5,a5,a4
20016394:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:203
        break;
20016396:	a879                	j	20016434 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:206
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20016398:	fec42783          	lw	a5,-20(s0)
2001639c:	02c78793          	addi	a5,a5,44
200163a0:	4398                	lw	a4,0(a5)
200163a2:	fd842783          	lw	a5,-40(s0)
200163a6:	fec42683          	lw	a3,-20(s0)
200163aa:	02c68693          	addi	a3,a3,44
200163ae:	8fd9                	or	a5,a5,a4
200163b0:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:208
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
200163b2:	fec42783          	lw	a5,-20(s0)
200163b6:	03478793          	addi	a5,a5,52
200163ba:	4398                	lw	a4,0(a5)
200163bc:	fd842783          	lw	a5,-40(s0)
200163c0:	fec42683          	lw	a3,-20(s0)
200163c4:	03468693          	addi	a3,a3,52
200163c8:	8fd9                	or	a5,a5,a4
200163ca:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:209
        break;
200163cc:	a0a5                	j	20016434 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:212
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
200163ce:	fec42783          	lw	a5,-20(s0)
200163d2:	07f1                	addi	a5,a5,28
200163d4:	4398                	lw	a4,0(a5)
200163d6:	fd842783          	lw	a5,-40(s0)
200163da:	fec42683          	lw	a3,-20(s0)
200163de:	06f1                	addi	a3,a3,28
200163e0:	8fd9                	or	a5,a5,a4
200163e2:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:214
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
200163e4:	fec42783          	lw	a5,-20(s0)
200163e8:	02478793          	addi	a5,a5,36
200163ec:	4398                	lw	a4,0(a5)
200163ee:	fd842783          	lw	a5,-40(s0)
200163f2:	fec42683          	lw	a3,-20(s0)
200163f6:	02468693          	addi	a3,a3,36
200163fa:	8fd9                	or	a5,a5,a4
200163fc:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:216
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
200163fe:	fec42783          	lw	a5,-20(s0)
20016402:	02c78793          	addi	a5,a5,44
20016406:	4398                	lw	a4,0(a5)
20016408:	fd842783          	lw	a5,-40(s0)
2001640c:	fec42683          	lw	a3,-20(s0)
20016410:	02c68693          	addi	a3,a3,44
20016414:	8fd9                	or	a5,a5,a4
20016416:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:218
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20016418:	fec42783          	lw	a5,-20(s0)
2001641c:	03478793          	addi	a5,a5,52
20016420:	4398                	lw	a4,0(a5)
20016422:	fd842783          	lw	a5,-40(s0)
20016426:	fec42683          	lw	a3,-20(s0)
2001642a:	03468693          	addi	a3,a3,52
2001642e:	8fd9                	or	a5,a5,a4
20016430:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:219
        break;
20016432:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:221
    }
    return 0;
20016434:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:222
}
20016436:	853e                	mv	a0,a5
20016438:	50b2                	lw	ra,44(sp)
2001643a:	5422                	lw	s0,40(sp)
2001643c:	6145                	addi	sp,sp,48
2001643e:	8082                	ret

20016440 <__metal_driver_gpio_interrupt_controller>:
__metal_driver_gpio_interrupt_controller():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:225

struct metal_interrupt *
__metal_driver_gpio_interrupt_controller(struct metal_gpio *gpio) {
20016440:	1101                	addi	sp,sp,-32
20016442:	ce06                	sw	ra,28(sp)
20016444:	cc22                	sw	s0,24(sp)
20016446:	1000                	addi	s0,sp,32
20016448:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:226
    return __metal_driver_sifive_gpio0_interrupt_parent(gpio);
2001644c:	fec42503          	lw	a0,-20(s0)
20016450:	e06ff0ef          	jal	ra,20015a56 <__metal_driver_sifive_gpio0_interrupt_parent>
20016454:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:227
}
20016456:	853e                	mv	a0,a5
20016458:	40f2                	lw	ra,28(sp)
2001645a:	4462                	lw	s0,24(sp)
2001645c:	6105                	addi	sp,sp,32
2001645e:	8082                	ret

20016460 <__metal_driver_gpio_get_interrupt_id>:
__metal_driver_gpio_get_interrupt_id():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:229

int __metal_driver_gpio_get_interrupt_id(struct metal_gpio *gpio, int pin) {
20016460:	7179                	addi	sp,sp,-48
20016462:	d606                	sw	ra,44(sp)
20016464:	d422                	sw	s0,40(sp)
20016466:	1800                	addi	s0,sp,48
20016468:	fca42e23          	sw	a0,-36(s0)
2001646c:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:231
    int irq;
    irq = __metal_driver_sifive_gpio0_interrupt_lines(gpio, pin);
20016470:	fd842583          	lw	a1,-40(s0)
20016474:	fdc42503          	lw	a0,-36(s0)
20016478:	e08ff0ef          	jal	ra,20015a80 <__metal_driver_sifive_gpio0_interrupt_lines>
2001647c:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:232
    return irq;
20016480:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:233
}
20016484:	853e                	mv	a0,a5
20016486:	50b2                	lw	ra,44(sp)
20016488:	5422                	lw	s0,40(sp)
2001648a:	6145                	addi	sp,sp,48
2001648c:	8082                	ret

2001648e <__metal_driver_sifive_i2c0_control_base>:
__metal_driver_sifive_i2c0_control_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:633
{
2001648e:	1101                	addi	sp,sp,-32
20016490:	ce22                	sw	s0,28(sp)
20016492:	1000                	addi	s0,sp,32
20016494:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:634
	if ((uintptr_t)i2c == (uintptr_t)&__metal_dt_i2c_10016000) {
20016498:	fec42703          	lw	a4,-20(s0)
2001649c:	800017b7          	lui	a5,0x80001
200164a0:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xfffff278>
200164a4:	00f71563          	bne	a4,a5,200164ae <__metal_driver_sifive_i2c0_control_base+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:635
		return METAL_SIFIVE_I2C0_10016000_BASE_ADDRESS;
200164a8:	100167b7          	lui	a5,0x10016
200164ac:	a011                	j	200164b0 <__metal_driver_sifive_i2c0_control_base+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:638
		return 0;
200164ae:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:640
}
200164b0:	853e                	mv	a0,a5
200164b2:	4472                	lw	s0,28(sp)
200164b4:	6105                	addi	sp,sp,32
200164b6:	8082                	ret

200164b8 <__metal_driver_sifive_i2c0_clock>:
__metal_driver_sifive_i2c0_clock():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:653
{
200164b8:	1101                	addi	sp,sp,-32
200164ba:	ce22                	sw	s0,28(sp)
200164bc:	1000                	addi	s0,sp,32
200164be:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:654
	if ((uintptr_t)i2c == (uintptr_t)&__metal_dt_i2c_10016000) {
200164c2:	fec42703          	lw	a4,-20(s0)
200164c6:	800017b7          	lui	a5,0x80001
200164ca:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xfffff278>
200164ce:	00f71763          	bne	a4,a5,200164dc <__metal_driver_sifive_i2c0_clock+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:655
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
200164d2:	800017b7          	lui	a5,0x80001
200164d6:	ab478793          	addi	a5,a5,-1356 # 80000ab4 <metal_segment_heap_target_end+0xfffff2f4>
200164da:	a011                	j	200164de <__metal_driver_sifive_i2c0_clock+0x26>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:658
		return NULL;
200164dc:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:660
}
200164de:	853e                	mv	a0,a5
200164e0:	4472                	lw	s0,28(sp)
200164e2:	6105                	addi	sp,sp,32
200164e4:	8082                	ret

200164e6 <__metal_driver_sifive_i2c0_pinmux>:
__metal_driver_sifive_i2c0_pinmux():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:663
{
200164e6:	1101                	addi	sp,sp,-32
200164e8:	ce22                	sw	s0,28(sp)
200164ea:	1000                	addi	s0,sp,32
200164ec:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:664
	if ((uintptr_t)i2c == (uintptr_t)&__metal_dt_i2c_10016000) {
200164f0:	fec42703          	lw	a4,-20(s0)
200164f4:	800017b7          	lui	a5,0x80001
200164f8:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xfffff278>
200164fc:	00f71563          	bne	a4,a5,20016506 <__metal_driver_sifive_i2c0_pinmux+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:665
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
20016500:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20016504:	a011                	j	20016508 <__metal_driver_sifive_i2c0_pinmux+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:668
		return NULL;
20016506:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:670
}
20016508:	853e                	mv	a0,a5
2001650a:	4472                	lw	s0,28(sp)
2001650c:	6105                	addi	sp,sp,32
2001650e:	8082                	ret

20016510 <__metal_driver_sifive_i2c0_pinmux_output_selector>:
__metal_driver_sifive_i2c0_pinmux_output_selector():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:673
{
20016510:	1101                	addi	sp,sp,-32
20016512:	ce22                	sw	s0,28(sp)
20016514:	1000                	addi	s0,sp,32
20016516:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:674
	if ((uintptr_t)i2c == (uintptr_t)&__metal_dt_i2c_10016000) {
2001651a:	fec42703          	lw	a4,-20(s0)
2001651e:	800017b7          	lui	a5,0x80001
20016522:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xfffff278>
20016526:	00f71463          	bne	a4,a5,2001652e <__metal_driver_sifive_i2c0_pinmux_output_selector+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:675
		return 0;
2001652a:	4781                	li	a5,0
2001652c:	a011                	j	20016530 <__metal_driver_sifive_i2c0_pinmux_output_selector+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:678
		return 0;
2001652e:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:680
}
20016530:	853e                	mv	a0,a5
20016532:	4472                	lw	s0,28(sp)
20016534:	6105                	addi	sp,sp,32
20016536:	8082                	ret

20016538 <__metal_driver_sifive_i2c0_pinmux_source_selector>:
__metal_driver_sifive_i2c0_pinmux_source_selector():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:683
{
20016538:	1101                	addi	sp,sp,-32
2001653a:	ce22                	sw	s0,28(sp)
2001653c:	1000                	addi	s0,sp,32
2001653e:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:684
	if ((uintptr_t)i2c == (uintptr_t)&__metal_dt_i2c_10016000) {
20016542:	fec42703          	lw	a4,-20(s0)
20016546:	800017b7          	lui	a5,0x80001
2001654a:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xfffff278>
2001654e:	00f71463          	bne	a4,a5,20016556 <__metal_driver_sifive_i2c0_pinmux_source_selector+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:685
		return 12288;
20016552:	678d                	lui	a5,0x3
20016554:	a011                	j	20016558 <__metal_driver_sifive_i2c0_pinmux_source_selector+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:688
		return 0;
20016556:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:690
}
20016558:	853e                	mv	a0,a5
2001655a:	4472                	lw	s0,28(sp)
2001655c:	6105                	addi	sp,sp,32
2001655e:	8082                	ret

20016560 <pre_rate_change_callback>:
pre_rate_change_callback():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:77
    ((clock_rate / (baud_rate * 5)) - 1)
#define METAL_I2C_INIT_OK 1
#define METAL_I2C_RET_OK 0
#define METAL_I2C_RET_ERR -1

static void pre_rate_change_callback(void *priv) {
20016560:	7179                	addi	sp,sp,-48
20016562:	d606                	sw	ra,44(sp)
20016564:	d422                	sw	s0,40(sp)
20016566:	1800                	addi	s0,sp,48
20016568:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:79
    unsigned long base =
        __metal_driver_sifive_i2c0_control_base((struct metal_i2c *)priv);
2001656c:	fdc42503          	lw	a0,-36(s0)
20016570:	3f39                	jal	2001648e <__metal_driver_sifive_i2c0_control_base>
20016572:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:81
    /* Check for any pending transfers */
    while (METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) & METAL_I2C_STATUS_TIP)
20016576:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:81 (discriminator 1)
20016578:	fec42783          	lw	a5,-20(s0)
2001657c:	07c1                	addi	a5,a5,16
2001657e:	0007c783          	lbu	a5,0(a5) # 3000 <__heap_size+0x2800>
20016582:	0ff7f793          	andi	a5,a5,255
20016586:	8b89                	andi	a5,a5,2
20016588:	fbe5                	bnez	a5,20016578 <pre_rate_change_callback+0x18>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:83
        ;
}
2001658a:	0001                	nop
2001658c:	50b2                	lw	ra,44(sp)
2001658e:	5422                	lw	s0,40(sp)
20016590:	6145                	addi	sp,sp,48
20016592:	8082                	ret

20016594 <post_rate_change_callback>:
post_rate_change_callback():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:85

static void post_rate_change_callback(void *priv) {
20016594:	7179                	addi	sp,sp,-48
20016596:	d606                	sw	ra,44(sp)
20016598:	d422                	sw	s0,40(sp)
2001659a:	1800                	addi	s0,sp,48
2001659c:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:86
    struct __metal_driver_sifive_i2c0 *i2c = priv;
200165a0:	fdc42783          	lw	a5,-36(s0)
200165a4:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:88
    /* Set baud rate after clock rate change */
    metal_i2c_set_baud_rate(&i2c->i2c, i2c->baud_rate);
200165a8:	fec42703          	lw	a4,-20(s0)
200165ac:	fec42783          	lw	a5,-20(s0)
200165b0:	479c                	lw	a5,8(a5)
200165b2:	85be                	mv	a1,a5
200165b4:	853a                	mv	a0,a4
200165b6:	2a4010ef          	jal	ra,2001785a <metal_i2c_set_baud_rate>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:89
}
200165ba:	0001                	nop
200165bc:	50b2                	lw	ra,44(sp)
200165be:	5422                	lw	s0,40(sp)
200165c0:	6145                	addi	sp,sp,48
200165c2:	8082                	ret

200165c4 <__metal_driver_sifive_i2c0_init>:
__metal_driver_sifive_i2c0_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:93

static void __metal_driver_sifive_i2c0_init(struct metal_i2c *gi2c,
                                            unsigned int baud_rate,
                                            metal_i2c_mode_t mode) {
200165c4:	7179                	addi	sp,sp,-48
200165c6:	d606                	sw	ra,44(sp)
200165c8:	d422                	sw	s0,40(sp)
200165ca:	1800                	addi	s0,sp,48
200165cc:	fca42e23          	sw	a0,-36(s0)
200165d0:	fcb42c23          	sw	a1,-40(s0)
200165d4:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:95
    struct __metal_driver_sifive_gpio0 *pinmux =
        __metal_driver_sifive_i2c0_pinmux(gi2c);
200165d8:	fdc42503          	lw	a0,-36(s0)
200165dc:	3729                	jal	200164e6 <__metal_driver_sifive_i2c0_pinmux>
200165de:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:96
    struct __metal_driver_sifive_i2c0 *i2c = (void *)gi2c;
200165e2:	fdc42783          	lw	a5,-36(s0)
200165e6:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:98

    if ((pinmux != NULL) && (gi2c != NULL)) {
200165ea:	fec42783          	lw	a5,-20(s0)
200165ee:	cfa9                	beqz	a5,20016648 <__metal_driver_sifive_i2c0_init+0x84>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:98 (discriminator 1)
200165f0:	fdc42783          	lw	a5,-36(s0)
200165f4:	cbb1                	beqz	a5,20016648 <__metal_driver_sifive_i2c0_init+0x84>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:101
        /* configure I2C I/O pins */
        long pinmux_output_selector =
            __metal_driver_sifive_i2c0_pinmux_output_selector(gi2c);
200165f6:	fdc42503          	lw	a0,-36(s0)
200165fa:	3f19                	jal	20016510 <__metal_driver_sifive_i2c0_pinmux_output_selector>
200165fc:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:100
        long pinmux_output_selector =
200165fe:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:103
        long pinmux_source_selector =
            __metal_driver_sifive_i2c0_pinmux_source_selector(gi2c);
20016602:	fdc42503          	lw	a0,-36(s0)
20016606:	3f0d                	jal	20016538 <__metal_driver_sifive_i2c0_pinmux_source_selector>
20016608:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:102
        long pinmux_source_selector =
2001660a:	fef42023          	sw	a5,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:104
        pinmux->gpio.vtable->enable_io((struct metal_gpio *)pinmux,
2001660e:	fec42783          	lw	a5,-20(s0)
20016612:	439c                	lw	a5,0(a5)
20016614:	53dc                	lw	a5,36(a5)
20016616:	fe042603          	lw	a2,-32(s0)
2001661a:	fe442583          	lw	a1,-28(s0)
2001661e:	fec42503          	lw	a0,-20(s0)
20016622:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:109
                                       pinmux_output_selector,
                                       pinmux_source_selector);

        /* 1: Master 0: Slave */
        if (mode == METAL_I2C_MASTER) {
20016624:	fd442703          	lw	a4,-44(s0)
20016628:	4785                	li	a5,1
2001662a:	00f71f63          	bne	a4,a5,20016648 <__metal_driver_sifive_i2c0_init+0x84>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:111
            /* Set requested baud rate */
            if (metal_i2c_set_baud_rate(gi2c, baud_rate) == METAL_I2C_RET_OK) {
2001662e:	fd842783          	lw	a5,-40(s0)
20016632:	85be                	mv	a1,a5
20016634:	fdc42503          	lw	a0,-36(s0)
20016638:	222010ef          	jal	ra,2001785a <metal_i2c_set_baud_rate>
2001663c:	87aa                	mv	a5,a0
2001663e:	e789                	bnez	a5,20016648 <__metal_driver_sifive_i2c0_init+0x84>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:112
                i2c->init_done = METAL_I2C_INIT_OK;
20016640:	fe842783          	lw	a5,-24(s0)
20016644:	4705                	li	a4,1
20016646:	c3d8                	sw	a4,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:118
            }
        } else {
            /* Nothing to do. slave mode not supported */
        }
    }
}
20016648:	0001                	nop
2001664a:	50b2                	lw	ra,44(sp)
2001664c:	5422                	lw	s0,40(sp)
2001664e:	6145                	addi	sp,sp,48
20016650:	8082                	ret

20016652 <__metal_driver_sifive_i2c0_get_baud_rate>:
__metal_driver_sifive_i2c0_get_baud_rate():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:120

static int __metal_driver_sifive_i2c0_get_baud_rate(struct metal_i2c *gi2c) {
20016652:	7179                	addi	sp,sp,-48
20016654:	d622                	sw	s0,44(sp)
20016656:	1800                	addi	s0,sp,48
20016658:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:121
    struct __metal_driver_sifive_i2c0 *i2c = (void *)gi2c;
2001665c:	fdc42783          	lw	a5,-36(s0)
20016660:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:122
    return i2c->baud_rate;
20016664:	fec42783          	lw	a5,-20(s0)
20016668:	479c                	lw	a5,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:123
}
2001666a:	853e                	mv	a0,a5
2001666c:	5432                	lw	s0,44(sp)
2001666e:	6145                	addi	sp,sp,48
20016670:	8082                	ret

20016672 <__metal_driver_sifive_i2c0_set_baud_rate>:
__metal_driver_sifive_i2c0_set_baud_rate():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:126

static int __metal_driver_sifive_i2c0_set_baud_rate(struct metal_i2c *gi2c,
                                                    unsigned int baud_rate) {
20016672:	7139                	addi	sp,sp,-64
20016674:	de06                	sw	ra,60(sp)
20016676:	dc22                	sw	s0,56(sp)
20016678:	0080                	addi	s0,sp,64
2001667a:	fca42623          	sw	a0,-52(s0)
2001667e:	fcb42423          	sw	a1,-56(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:127
    struct metal_clock *clock = __metal_driver_sifive_i2c0_clock(gi2c);
20016682:	fcc42503          	lw	a0,-52(s0)
20016686:	e33ff0ef          	jal	ra,200164b8 <__metal_driver_sifive_i2c0_clock>
2001668a:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:128
    struct __metal_driver_sifive_i2c0 *i2c = (void *)gi2c;
2001668e:	fcc42783          	lw	a5,-52(s0)
20016692:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:129
    unsigned long base = __metal_driver_sifive_i2c0_control_base(gi2c);
20016696:	fcc42503          	lw	a0,-52(s0)
2001669a:	df5ff0ef          	jal	ra,2001648e <__metal_driver_sifive_i2c0_control_base>
2001669e:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:130
    int ret = METAL_I2C_RET_ERR;
200166a2:	57fd                	li	a5,-1
200166a4:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:132

    if ((clock != NULL) && (gi2c != NULL)) {
200166a8:	fe842783          	lw	a5,-24(s0)
200166ac:	10078763          	beqz	a5,200167ba <__metal_driver_sifive_i2c0_set_baud_rate+0x148>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:132 (discriminator 1)
200166b0:	fcc42783          	lw	a5,-52(s0)
200166b4:	10078363          	beqz	a5,200167ba <__metal_driver_sifive_i2c0_set_baud_rate+0x148>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:133
        long clock_rate = clock->vtable->get_rate_hz(clock);
200166b8:	fe842783          	lw	a5,-24(s0)
200166bc:	439c                	lw	a5,0(a5)
200166be:	439c                	lw	a5,0(a5)
200166c0:	fe842503          	lw	a0,-24(s0)
200166c4:	9782                	jalr	a5
200166c6:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:135

        i2c->pre_rate_change_callback.callback = &pre_rate_change_callback;
200166ca:	fe442783          	lw	a5,-28(s0)
200166ce:	20016737          	lui	a4,0x20016
200166d2:	56070713          	addi	a4,a4,1376 # 20016560 <pre_rate_change_callback>
200166d6:	c7d8                	sw	a4,12(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:136
        i2c->pre_rate_change_callback.priv = i2c;
200166d8:	fe442783          	lw	a5,-28(s0)
200166dc:	fe442703          	lw	a4,-28(s0)
200166e0:	cb98                	sw	a4,16(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:137
        metal_clock_register_pre_rate_change_callback(
200166e2:	fe442783          	lw	a5,-28(s0)
200166e6:	07b1                	addi	a5,a5,12
200166e8:	85be                	mv	a1,a5
200166ea:	fe842503          	lw	a0,-24(s0)
200166ee:	787000ef          	jal	ra,20017674 <metal_clock_register_pre_rate_change_callback>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:140
            clock, &(i2c->pre_rate_change_callback));

        i2c->post_rate_change_callback.callback = &post_rate_change_callback;
200166f2:	fe442783          	lw	a5,-28(s0)
200166f6:	20016737          	lui	a4,0x20016
200166fa:	59470713          	addi	a4,a4,1428 # 20016594 <post_rate_change_callback>
200166fe:	cf98                	sw	a4,24(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:141
        i2c->post_rate_change_callback.priv = i2c;
20016700:	fe442783          	lw	a5,-28(s0)
20016704:	fe442703          	lw	a4,-28(s0)
20016708:	cfd8                	sw	a4,28(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:142
        metal_clock_register_post_rate_change_callback(
2001670a:	fe442783          	lw	a5,-28(s0)
2001670e:	07e1                	addi	a5,a5,24
20016710:	85be                	mv	a1,a5
20016712:	fe842503          	lw	a0,-24(s0)
20016716:	791000ef          	jal	ra,200176a6 <metal_clock_register_post_rate_change_callback>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:146
            clock, &(i2c->post_rate_change_callback));

        /* Calculate prescaler value */
        long prescaler = METAL_SIFIVE_I2C_GET_PRESCALER(baud_rate);
2001671a:	fdc42683          	lw	a3,-36(s0)
2001671e:	fc842703          	lw	a4,-56(s0)
20016722:	87ba                	mv	a5,a4
20016724:	078a                	slli	a5,a5,0x2
20016726:	97ba                	add	a5,a5,a4
20016728:	02f6d7b3          	divu	a5,a3,a5
2001672c:	17fd                	addi	a5,a5,-1
2001672e:	fcf42c23          	sw	a5,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:148

        if ((prescaler > METAL_I2C_PRESCALE_MAX) || (prescaler < 0)) {
20016732:	fd842703          	lw	a4,-40(s0)
20016736:	67c1                	lui	a5,0x10
20016738:	08f75163          	bge	a4,a5,200167ba <__metal_driver_sifive_i2c0_set_baud_rate+0x148>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:148 (discriminator 1)
2001673c:	fd842783          	lw	a5,-40(s0)
20016740:	0607cd63          	bltz	a5,200167ba <__metal_driver_sifive_i2c0_set_baud_rate+0x148>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:153
            /* Out of range value, return error */
            METAL_I2C_LOG("I2C Set baud failed.\n");
        } else {
            /* Set pre-scaler value */
            METAL_I2C_REGB(METAL_SIFIVE_I2C0_CONTROL) &= ~METAL_I2C_CONTROL_EN;
20016744:	fe042783          	lw	a5,-32(s0)
20016748:	07a1                	addi	a5,a5,8
2001674a:	0007c783          	lbu	a5,0(a5) # 10000 <__heap_size+0xf800>
2001674e:	0ff7f793          	andi	a5,a5,255
20016752:	fe042703          	lw	a4,-32(s0)
20016756:	0721                	addi	a4,a4,8
20016758:	07f7f793          	andi	a5,a5,127
2001675c:	0ff7f793          	andi	a5,a5,255
20016760:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:154
            METAL_I2C_REGB(METAL_SIFIVE_I2C0_PRESCALE_LOW) = prescaler & 0xFF;
20016764:	fe042783          	lw	a5,-32(s0)
20016768:	fd842703          	lw	a4,-40(s0)
2001676c:	0ff77713          	andi	a4,a4,255
20016770:	00e78023          	sb	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:156
            METAL_I2C_REGB(METAL_SIFIVE_I2C0_PRESCALE_HIGH) =
                (prescaler >> 8) & 0xFF;
20016774:	fd842783          	lw	a5,-40(s0)
20016778:	4087d693          	srai	a3,a5,0x8
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:155
            METAL_I2C_REGB(METAL_SIFIVE_I2C0_PRESCALE_HIGH) =
2001677c:	fe042783          	lw	a5,-32(s0)
20016780:	0791                	addi	a5,a5,4
20016782:	873e                	mv	a4,a5
20016784:	0ff6f793          	andi	a5,a3,255
20016788:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:157
            METAL_I2C_REGB(METAL_SIFIVE_I2C0_CONTROL) |= METAL_I2C_CONTROL_EN;
2001678c:	fe042783          	lw	a5,-32(s0)
20016790:	07a1                	addi	a5,a5,8
20016792:	0007c783          	lbu	a5,0(a5)
20016796:	0ff7f793          	andi	a5,a5,255
2001679a:	fe042703          	lw	a4,-32(s0)
2001679e:	0721                	addi	a4,a4,8
200167a0:	f807e793          	ori	a5,a5,-128
200167a4:	0ff7f793          	andi	a5,a5,255
200167a8:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:159

            i2c->baud_rate = baud_rate;
200167ac:	fe442783          	lw	a5,-28(s0)
200167b0:	fc842703          	lw	a4,-56(s0)
200167b4:	c798                	sw	a4,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:160
            ret = METAL_I2C_RET_OK;
200167b6:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:166
        }
    } else {
        METAL_I2C_LOG("I2C Set baud failed.\n");
    }

    return ret;
200167ba:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:167
}
200167be:	853e                	mv	a0,a5
200167c0:	50f2                	lw	ra,60(sp)
200167c2:	5462                	lw	s0,56(sp)
200167c4:	6121                	addi	sp,sp,64
200167c6:	8082                	ret

200167c8 <__metal_driver_sifive_i2c0_write_addr>:
__metal_driver_sifive_i2c0_write_addr():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:171

static int __metal_driver_sifive_i2c0_write_addr(unsigned long base,
                                                 unsigned int addr,
                                                 unsigned char rw_flag) {
200167c8:	7179                	addi	sp,sp,-48
200167ca:	d606                	sw	ra,44(sp)
200167cc:	d422                	sw	s0,40(sp)
200167ce:	1800                	addi	s0,sp,48
200167d0:	fca42e23          	sw	a0,-36(s0)
200167d4:	fcb42c23          	sw	a1,-40(s0)
200167d8:	87b2                	mv	a5,a2
200167da:	fcf40ba3          	sb	a5,-41(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:173
    time_t timeout;
    int ret = METAL_I2C_RET_OK;
200167de:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:175
    /* Reset timeout */
    METAL_I2C_TIMEOUT_RESET(timeout);
200167e2:	1ca010ef          	jal	ra,200179ac <metal_time>
200167e6:	86aa                	mv	a3,a0
200167e8:	872e                	mv	a4,a1
200167ea:	4585                	li	a1,1
200167ec:	4601                	li	a2,0
200167ee:	00b687b3          	add	a5,a3,a1
200167f2:	853e                	mv	a0,a5
200167f4:	00d53533          	sltu	a0,a0,a3
200167f8:	00c70833          	add	a6,a4,a2
200167fc:	01050733          	add	a4,a0,a6
20016800:	883a                	mv	a6,a4
20016802:	fef42023          	sw	a5,-32(s0)
20016806:	ff042223          	sw	a6,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:178

    /* Check if any transfer is in progress */
    METAL_I2C_REG_CHECK(
2001680a:	a035                	j	20016836 <__metal_driver_sifive_i2c0_write_addr+0x6e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:178 (discriminator 3)
2001680c:	1a0010ef          	jal	ra,200179ac <metal_time>
20016810:	87aa                	mv	a5,a0
20016812:	882e                	mv	a6,a1
20016814:	fe442703          	lw	a4,-28(s0)
20016818:	86c2                	mv	a3,a6
2001681a:	00d74c63          	blt	a4,a3,20016832 <__metal_driver_sifive_i2c0_write_addr+0x6a>
2001681e:	fe442703          	lw	a4,-28(s0)
20016822:	86c2                	mv	a3,a6
20016824:	00d71963          	bne	a4,a3,20016836 <__metal_driver_sifive_i2c0_write_addr+0x6e>
20016828:	fe042703          	lw	a4,-32(s0)
2001682c:	00f76363          	bltu	a4,a5,20016832 <__metal_driver_sifive_i2c0_write_addr+0x6a>
20016830:	a019                	j	20016836 <__metal_driver_sifive_i2c0_write_addr+0x6e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:178 (discriminator 1)
20016832:	57fd                	li	a5,-1
20016834:	a8c9                	j	20016906 <__metal_driver_sifive_i2c0_write_addr+0x13e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:178 (discriminator 2)
20016836:	fdc42783          	lw	a5,-36(s0)
2001683a:	07c1                	addi	a5,a5,16
2001683c:	0007c783          	lbu	a5,0(a5)
20016840:	0ff7f793          	andi	a5,a5,255
20016844:	8b89                	andi	a5,a5,2
20016846:	f3f9                	bnez	a5,2001680c <__metal_driver_sifive_i2c0_write_addr+0x44>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:184
        (METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) & METAL_I2C_STATUS_TIP),
        timeout);

    /* Set transmit register to given address with read/write flag */
    METAL_I2C_REGB(METAL_SIFIVE_I2C0_TRANSMIT) =
        METAL_SIFIVE_I2C_INSERT_RW_BIT(addr, rw_flag);
20016848:	fd842783          	lw	a5,-40(s0)
2001684c:	0ff7f793          	andi	a5,a5,255
20016850:	0786                	slli	a5,a5,0x1
20016852:	0ff7f713          	andi	a4,a5,255
20016856:	fd744783          	lbu	a5,-41(s0)
2001685a:	8b85                	andi	a5,a5,1
2001685c:	0ff7f793          	andi	a5,a5,255
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:183
    METAL_I2C_REGB(METAL_SIFIVE_I2C0_TRANSMIT) =
20016860:	fdc42683          	lw	a3,-36(s0)
20016864:	06b1                	addi	a3,a3,12
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:184
        METAL_SIFIVE_I2C_INSERT_RW_BIT(addr, rw_flag);
20016866:	8fd9                	or	a5,a5,a4
20016868:	0ff7f793          	andi	a5,a5,255
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:183
    METAL_I2C_REGB(METAL_SIFIVE_I2C0_TRANSMIT) =
2001686c:	00f68023          	sb	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:187

    /* Set start flag to trigger the address transfer */
    METAL_I2C_REGB(METAL_SIFIVE_I2C0_COMMAND) =
20016870:	fdc42783          	lw	a5,-36(s0)
20016874:	07c1                	addi	a5,a5,16
20016876:	873e                	mv	a4,a5
20016878:	f9000793          	li	a5,-112
2001687c:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:190
        METAL_I2C_CMD_WRITE | METAL_I2C_CMD_START;
    /* Reset timeout */
    METAL_I2C_TIMEOUT_RESET(timeout);
20016880:	12c010ef          	jal	ra,200179ac <metal_time>
20016884:	86aa                	mv	a3,a0
20016886:	872e                	mv	a4,a1
20016888:	4585                	li	a1,1
2001688a:	4601                	li	a2,0
2001688c:	00b687b3          	add	a5,a3,a1
20016890:	853e                	mv	a0,a5
20016892:	00d53533          	sltu	a0,a0,a3
20016896:	00c70833          	add	a6,a4,a2
2001689a:	01050733          	add	a4,a0,a6
2001689e:	883a                	mv	a6,a4
200168a0:	fef42023          	sw	a5,-32(s0)
200168a4:	ff042223          	sw	a6,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:193

    /* Check for transmit completion */
    METAL_I2C_REG_CHECK(
200168a8:	a035                	j	200168d4 <__metal_driver_sifive_i2c0_write_addr+0x10c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:193 (discriminator 3)
200168aa:	102010ef          	jal	ra,200179ac <metal_time>
200168ae:	87aa                	mv	a5,a0
200168b0:	882e                	mv	a6,a1
200168b2:	fe442703          	lw	a4,-28(s0)
200168b6:	86c2                	mv	a3,a6
200168b8:	00d74c63          	blt	a4,a3,200168d0 <__metal_driver_sifive_i2c0_write_addr+0x108>
200168bc:	fe442703          	lw	a4,-28(s0)
200168c0:	86c2                	mv	a3,a6
200168c2:	00d71963          	bne	a4,a3,200168d4 <__metal_driver_sifive_i2c0_write_addr+0x10c>
200168c6:	fe042703          	lw	a4,-32(s0)
200168ca:	00f76363          	bltu	a4,a5,200168d0 <__metal_driver_sifive_i2c0_write_addr+0x108>
200168ce:	a019                	j	200168d4 <__metal_driver_sifive_i2c0_write_addr+0x10c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:193 (discriminator 1)
200168d0:	57fd                	li	a5,-1
200168d2:	a815                	j	20016906 <__metal_driver_sifive_i2c0_write_addr+0x13e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:193 (discriminator 2)
200168d4:	fdc42783          	lw	a5,-36(s0)
200168d8:	07c1                	addi	a5,a5,16
200168da:	0007c783          	lbu	a5,0(a5)
200168de:	0ff7f793          	andi	a5,a5,255
200168e2:	8b89                	andi	a5,a5,2
200168e4:	f3f9                	bnez	a5,200168aa <__metal_driver_sifive_i2c0_write_addr+0xe2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:198
        (METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) & METAL_I2C_STATUS_TIP),
        timeout);

    /* Check for ACK from slave */
    if ((METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) & METAL_I2C_STATUS_RXACK)) {
200168e6:	fdc42783          	lw	a5,-36(s0)
200168ea:	07c1                	addi	a5,a5,16
200168ec:	0007c783          	lbu	a5,0(a5)
200168f0:	0ff7f793          	andi	a5,a5,255
200168f4:	07e2                	slli	a5,a5,0x18
200168f6:	87e1                	srai	a5,a5,0x18
200168f8:	0007d563          	bgez	a5,20016902 <__metal_driver_sifive_i2c0_write_addr+0x13a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:201
        /* No ACK, return error */
        METAL_I2C_LOG("I2C RX ACK failed.\n");
        ret = METAL_I2C_RET_ERR;
200168fc:	57fd                	li	a5,-1
200168fe:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:204
    }

    return ret;
20016902:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:205
}
20016906:	853e                	mv	a0,a5
20016908:	50b2                	lw	ra,44(sp)
2001690a:	5422                	lw	s0,40(sp)
2001690c:	6145                	addi	sp,sp,48
2001690e:	8082                	ret

20016910 <__metal_driver_sifive_i2c0_write>:
__metal_driver_sifive_i2c0_write():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:210

static int __metal_driver_sifive_i2c0_write(struct metal_i2c *i2c,
                                            unsigned int addr, unsigned int len,
                                            unsigned char buf[],
                                            metal_i2c_stop_bit_t stop_bit) {
20016910:	715d                	addi	sp,sp,-80
20016912:	c686                	sw	ra,76(sp)
20016914:	c4a2                	sw	s0,72(sp)
20016916:	0880                	addi	s0,sp,80
20016918:	fca42623          	sw	a0,-52(s0)
2001691c:	fcb42423          	sw	a1,-56(s0)
20016920:	fcc42223          	sw	a2,-60(s0)
20016924:	fcd42023          	sw	a3,-64(s0)
20016928:	fae42e23          	sw	a4,-68(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:214
    __metal_io_u8 command;
    time_t timeout;
    int ret;
    unsigned long base = __metal_driver_sifive_i2c0_control_base(i2c);
2001692c:	fcc42503          	lw	a0,-52(s0)
20016930:	b5fff0ef          	jal	ra,2001648e <__metal_driver_sifive_i2c0_control_base>
20016934:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:217
    unsigned int i;

    if ((i2c != NULL) &&
20016938:	fcc42783          	lw	a5,-52(s0)
2001693c:	12078463          	beqz	a5,20016a64 <__metal_driver_sifive_i2c0_write+0x154>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:218 (discriminator 1)
        ((struct __metal_driver_sifive_i2c0 *)i2c)->init_done) {
20016940:	fcc42783          	lw	a5,-52(s0)
20016944:	43dc                	lw	a5,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:217 (discriminator 1)
    if ((i2c != NULL) &&
20016946:	10078f63          	beqz	a5,20016a64 <__metal_driver_sifive_i2c0_write+0x154>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:223

        /* Send address over I2C bus, current driver supports only 7bit
         * addressing */
        ret =
            __metal_driver_sifive_i2c0_write_addr(base, addr, METAL_I2C_WRITE);
2001694a:	4601                	li	a2,0
2001694c:	fc842583          	lw	a1,-56(s0)
20016950:	fe042503          	lw	a0,-32(s0)
20016954:	e75ff0ef          	jal	ra,200167c8 <__metal_driver_sifive_i2c0_write_addr>
20016958:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:225

        if (ret != METAL_I2C_RET_OK) {
2001695c:	fe842783          	lw	a5,-24(s0)
20016960:	10079563          	bnez	a5,20016a6a <__metal_driver_sifive_i2c0_write+0x15a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:230
            /* Write address failed */
            METAL_I2C_LOG("I2C Address Write failed.\n");
        } else {
            /* Set command flags */
            command = METAL_I2C_CMD_WRITE;
20016964:	47c1                	li	a5,16
20016966:	fef407a3          	sb	a5,-17(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:232

            for (i = 0; i < len; i++) {
2001696a:	fe042223          	sw	zero,-28(s0)
2001696e:	a0e5                	j	20016a56 <__metal_driver_sifive_i2c0_write+0x146>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:234
                /* Copy into transmit register */
                METAL_I2C_REGB(METAL_SIFIVE_I2C0_TRANSMIT) = buf[i];
20016970:	fc042703          	lw	a4,-64(s0)
20016974:	fe442783          	lw	a5,-28(s0)
20016978:	97ba                	add	a5,a5,a4
2001697a:	fe042703          	lw	a4,-32(s0)
2001697e:	0731                	addi	a4,a4,12
20016980:	0007c783          	lbu	a5,0(a5)
20016984:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:238

                /* for last byte transfer, check if stop condition is requested
                 */
                if (i == (len - 1)) {
20016988:	fc442783          	lw	a5,-60(s0)
2001698c:	17fd                	addi	a5,a5,-1
2001698e:	fe442703          	lw	a4,-28(s0)
20016992:	02f71263          	bne	a4,a5,200169b6 <__metal_driver_sifive_i2c0_write+0xa6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:239
                    command |= METAL_SIFIVE_I2C_INSERT_STOP(stop_bit);
20016996:	fbc42783          	lw	a5,-68(s0)
2001699a:	0ff7f793          	andi	a5,a5,255
2001699e:	079a                	slli	a5,a5,0x6
200169a0:	0ff7f793          	andi	a5,a5,255
200169a4:	0407f793          	andi	a5,a5,64
200169a8:	0ff7f713          	andi	a4,a5,255
200169ac:	fef44783          	lbu	a5,-17(s0)
200169b0:	8fd9                	or	a5,a5,a4
200169b2:	fef407a3          	sb	a5,-17(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:242
                }
                /* Write command register */
                METAL_I2C_REGB(METAL_SIFIVE_I2C0_COMMAND) = command;
200169b6:	fe042783          	lw	a5,-32(s0)
200169ba:	07c1                	addi	a5,a5,16
200169bc:	873e                	mv	a4,a5
200169be:	fef44783          	lbu	a5,-17(s0)
200169c2:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:244
                /* Reset timeout */
                METAL_I2C_TIMEOUT_RESET(timeout);
200169c6:	7e7000ef          	jal	ra,200179ac <metal_time>
200169ca:	86aa                	mv	a3,a0
200169cc:	872e                	mv	a4,a1
200169ce:	4585                	li	a1,1
200169d0:	4601                	li	a2,0
200169d2:	00b687b3          	add	a5,a3,a1
200169d6:	853e                	mv	a0,a5
200169d8:	00d53533          	sltu	a0,a0,a3
200169dc:	00c70833          	add	a6,a4,a2
200169e0:	01050733          	add	a4,a0,a6
200169e4:	883a                	mv	a6,a4
200169e6:	fcf42c23          	sw	a5,-40(s0)
200169ea:	fd042e23          	sw	a6,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:247

                /* Check for transfer completion */
                METAL_I2C_REG_CHECK((METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) &
200169ee:	a035                	j	20016a1a <__metal_driver_sifive_i2c0_write+0x10a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:247 (discriminator 3)
200169f0:	7bd000ef          	jal	ra,200179ac <metal_time>
200169f4:	87aa                	mv	a5,a0
200169f6:	882e                	mv	a6,a1
200169f8:	fdc42703          	lw	a4,-36(s0)
200169fc:	86c2                	mv	a3,a6
200169fe:	00d74c63          	blt	a4,a3,20016a16 <__metal_driver_sifive_i2c0_write+0x106>
20016a02:	fdc42703          	lw	a4,-36(s0)
20016a06:	86c2                	mv	a3,a6
20016a08:	00d71963          	bne	a4,a3,20016a1a <__metal_driver_sifive_i2c0_write+0x10a>
20016a0c:	fd842703          	lw	a4,-40(s0)
20016a10:	00f76363          	bltu	a4,a5,20016a16 <__metal_driver_sifive_i2c0_write+0x106>
20016a14:	a019                	j	20016a1a <__metal_driver_sifive_i2c0_write+0x10a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:247 (discriminator 1)
20016a16:	57fd                	li	a5,-1
20016a18:	a899                	j	20016a6e <__metal_driver_sifive_i2c0_write+0x15e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:247 (discriminator 2)
20016a1a:	fe042783          	lw	a5,-32(s0)
20016a1e:	07c1                	addi	a5,a5,16
20016a20:	0007c783          	lbu	a5,0(a5)
20016a24:	0ff7f793          	andi	a5,a5,255
20016a28:	8b89                	andi	a5,a5,2
20016a2a:	f3f9                	bnez	a5,200169f0 <__metal_driver_sifive_i2c0_write+0xe0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:252
                                     METAL_I2C_STATUS_TIP),
                                    timeout);

                /* Check for ACK from slave */
                if ((METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) &
20016a2c:	fe042783          	lw	a5,-32(s0)
20016a30:	07c1                	addi	a5,a5,16
20016a32:	0007c783          	lbu	a5,0(a5)
20016a36:	0ff7f793          	andi	a5,a5,255
20016a3a:	07e2                	slli	a5,a5,0x18
20016a3c:	87e1                	srai	a5,a5,0x18
20016a3e:	0007d763          	bgez	a5,20016a4c <__metal_driver_sifive_i2c0_write+0x13c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:256
                     METAL_I2C_STATUS_RXACK)) {
                    /* No ACK, return error */
                    METAL_I2C_LOG("I2C RX ACK failed.\n");
                    ret = METAL_I2C_RET_ERR;
20016a42:	57fd                	li	a5,-1
20016a44:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:257
                    break;
20016a48:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:225
        if (ret != METAL_I2C_RET_OK) {
20016a4a:	a005                	j	20016a6a <__metal_driver_sifive_i2c0_write+0x15a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:232 (discriminator 2)
            for (i = 0; i < len; i++) {
20016a4c:	fe442783          	lw	a5,-28(s0)
20016a50:	0785                	addi	a5,a5,1
20016a52:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:232 (discriminator 1)
20016a56:	fe442703          	lw	a4,-28(s0)
20016a5a:	fc442783          	lw	a5,-60(s0)
20016a5e:	f0f769e3          	bltu	a4,a5,20016970 <__metal_driver_sifive_i2c0_write+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:225
        if (ret != METAL_I2C_RET_OK) {
20016a62:	a021                	j	20016a6a <__metal_driver_sifive_i2c0_write+0x15a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:265
        }

    } else {
        /* I2C device not initialized, return error */
        METAL_I2C_LOG("I2C device not initialized.\n");
        ret = METAL_I2C_RET_ERR;
20016a64:	57fd                	li	a5,-1
20016a66:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:268
    }

    return ret;
20016a6a:	fe842783          	lw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:269
}
20016a6e:	853e                	mv	a0,a5
20016a70:	40b6                	lw	ra,76(sp)
20016a72:	4426                	lw	s0,72(sp)
20016a74:	6161                	addi	sp,sp,80
20016a76:	8082                	ret

20016a78 <__metal_driver_sifive_i2c0_read>:
__metal_driver_sifive_i2c0_read():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:273
static int __metal_driver_sifive_i2c0_read(struct metal_i2c *i2c,
                                           unsigned int addr, unsigned int len,
                                           unsigned char buf[],
                                           metal_i2c_stop_bit_t stop_bit) {
20016a78:	715d                	addi	sp,sp,-80
20016a7a:	c686                	sw	ra,76(sp)
20016a7c:	c4a2                	sw	s0,72(sp)
20016a7e:	0880                	addi	s0,sp,80
20016a80:	fca42623          	sw	a0,-52(s0)
20016a84:	fcb42423          	sw	a1,-56(s0)
20016a88:	fcc42223          	sw	a2,-60(s0)
20016a8c:	fcd42023          	sw	a3,-64(s0)
20016a90:	fae42e23          	sw	a4,-68(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:278
    int ret;
    __metal_io_u8 command;
    time_t timeout;
    unsigned int i;
    unsigned long base = __metal_driver_sifive_i2c0_control_base(i2c);
20016a94:	fcc42503          	lw	a0,-52(s0)
20016a98:	9f7ff0ef          	jal	ra,2001648e <__metal_driver_sifive_i2c0_control_base>
20016a9c:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:280

    if ((i2c != NULL) &&
20016aa0:	fcc42783          	lw	a5,-52(s0)
20016aa4:	10078c63          	beqz	a5,20016bbc <__metal_driver_sifive_i2c0_read+0x144>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:281 (discriminator 1)
        ((struct __metal_driver_sifive_i2c0 *)i2c)->init_done) {
20016aa8:	fcc42783          	lw	a5,-52(s0)
20016aac:	43dc                	lw	a5,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:280 (discriminator 1)
    if ((i2c != NULL) &&
20016aae:	10078763          	beqz	a5,20016bbc <__metal_driver_sifive_i2c0_read+0x144>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:285

        /* Send address over I2C bus, current driver supports only 7bit
         * addressing */
        ret = __metal_driver_sifive_i2c0_write_addr(base, addr, METAL_I2C_READ);
20016ab2:	4605                	li	a2,1
20016ab4:	fc842583          	lw	a1,-56(s0)
20016ab8:	fe042503          	lw	a0,-32(s0)
20016abc:	d0dff0ef          	jal	ra,200167c8 <__metal_driver_sifive_i2c0_write_addr>
20016ac0:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:287

        if (ret != METAL_I2C_RET_OK) {
20016ac4:	fec42783          	lw	a5,-20(s0)
20016ac8:	0e079d63          	bnez	a5,20016bc2 <__metal_driver_sifive_i2c0_read+0x14a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:292
            /* Write address failed */
            METAL_I2C_LOG("I2C Read failed.\n");
        } else {
            /* Set command flags */
            command = METAL_I2C_CMD_READ;
20016acc:	02000793          	li	a5,32
20016ad0:	fef405a3          	sb	a5,-21(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:294

            for (i = 0; i < len; i++) {
20016ad4:	fe042223          	sw	zero,-28(s0)
20016ad8:	a8d9                	j	20016bae <__metal_driver_sifive_i2c0_read+0x136>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:296
                /* check for last transfer */
                if (i == (len - 1)) {
20016ada:	fc442783          	lw	a5,-60(s0)
20016ade:	17fd                	addi	a5,a5,-1
20016ae0:	fe442703          	lw	a4,-28(s0)
20016ae4:	02f71663          	bne	a4,a5,20016b10 <__metal_driver_sifive_i2c0_read+0x98>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:300
                    /* Set NACK to end read, if requested generate STOP
                     * condition */
                    command |= (METAL_I2C_CMD_ACK |
                                METAL_SIFIVE_I2C_INSERT_STOP(stop_bit));
20016ae8:	fbc42783          	lw	a5,-68(s0)
20016aec:	0ff7f793          	andi	a5,a5,255
20016af0:	079a                	slli	a5,a5,0x6
20016af2:	0ff7f793          	andi	a5,a5,255
20016af6:	0407f793          	andi	a5,a5,64
20016afa:	0ff7f713          	andi	a4,a5,255
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:299
                    command |= (METAL_I2C_CMD_ACK |
20016afe:	feb44783          	lbu	a5,-21(s0)
20016b02:	8fd9                	or	a5,a5,a4
20016b04:	0ff7f793          	andi	a5,a5,255
20016b08:	0087e793          	ori	a5,a5,8
20016b0c:	fef405a3          	sb	a5,-21(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:303
                }
                /* Write command register */
                METAL_I2C_REGB(METAL_SIFIVE_I2C0_COMMAND) = command;
20016b10:	fe042783          	lw	a5,-32(s0)
20016b14:	07c1                	addi	a5,a5,16
20016b16:	873e                	mv	a4,a5
20016b18:	feb44783          	lbu	a5,-21(s0)
20016b1c:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:305
                /* Reset timeout */
                METAL_I2C_TIMEOUT_RESET(timeout);
20016b20:	68d000ef          	jal	ra,200179ac <metal_time>
20016b24:	86aa                	mv	a3,a0
20016b26:	872e                	mv	a4,a1
20016b28:	4585                	li	a1,1
20016b2a:	4601                	li	a2,0
20016b2c:	00b687b3          	add	a5,a3,a1
20016b30:	853e                	mv	a0,a5
20016b32:	00d53533          	sltu	a0,a0,a3
20016b36:	00c70833          	add	a6,a4,a2
20016b3a:	01050733          	add	a4,a0,a6
20016b3e:	883a                	mv	a6,a4
20016b40:	fcf42c23          	sw	a5,-40(s0)
20016b44:	fd042e23          	sw	a6,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:308

                /* Wait for the read to complete */
                METAL_I2C_REG_CHECK((METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) &
20016b48:	a035                	j	20016b74 <__metal_driver_sifive_i2c0_read+0xfc>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:308 (discriminator 3)
20016b4a:	663000ef          	jal	ra,200179ac <metal_time>
20016b4e:	87aa                	mv	a5,a0
20016b50:	882e                	mv	a6,a1
20016b52:	fdc42703          	lw	a4,-36(s0)
20016b56:	86c2                	mv	a3,a6
20016b58:	00d74c63          	blt	a4,a3,20016b70 <__metal_driver_sifive_i2c0_read+0xf8>
20016b5c:	fdc42703          	lw	a4,-36(s0)
20016b60:	86c2                	mv	a3,a6
20016b62:	00d71963          	bne	a4,a3,20016b74 <__metal_driver_sifive_i2c0_read+0xfc>
20016b66:	fd842703          	lw	a4,-40(s0)
20016b6a:	00f76363          	bltu	a4,a5,20016b70 <__metal_driver_sifive_i2c0_read+0xf8>
20016b6e:	a019                	j	20016b74 <__metal_driver_sifive_i2c0_read+0xfc>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:308 (discriminator 1)
20016b70:	57fd                	li	a5,-1
20016b72:	a891                	j	20016bc6 <__metal_driver_sifive_i2c0_read+0x14e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:308 (discriminator 2)
20016b74:	fe042783          	lw	a5,-32(s0)
20016b78:	07c1                	addi	a5,a5,16
20016b7a:	0007c783          	lbu	a5,0(a5)
20016b7e:	0ff7f793          	andi	a5,a5,255
20016b82:	8b89                	andi	a5,a5,2
20016b84:	f3f9                	bnez	a5,20016b4a <__metal_driver_sifive_i2c0_read+0xd2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:312 (discriminator 2)
                                     METAL_I2C_STATUS_TIP),
                                    timeout);
                /* Store the received byte */
                buf[i] = METAL_I2C_REGB(METAL_SIFIVE_I2C0_TRANSMIT);
20016b86:	fe042783          	lw	a5,-32(s0)
20016b8a:	07b1                	addi	a5,a5,12
20016b8c:	86be                	mv	a3,a5
20016b8e:	fc042703          	lw	a4,-64(s0)
20016b92:	fe442783          	lw	a5,-28(s0)
20016b96:	97ba                	add	a5,a5,a4
20016b98:	0006c703          	lbu	a4,0(a3)
20016b9c:	0ff77713          	andi	a4,a4,255
20016ba0:	00e78023          	sb	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:294 (discriminator 2)
            for (i = 0; i < len; i++) {
20016ba4:	fe442783          	lw	a5,-28(s0)
20016ba8:	0785                	addi	a5,a5,1
20016baa:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:294 (discriminator 1)
20016bae:	fe442703          	lw	a4,-28(s0)
20016bb2:	fc442783          	lw	a5,-60(s0)
20016bb6:	f2f762e3          	bltu	a4,a5,20016ada <__metal_driver_sifive_i2c0_read+0x62>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:287
        if (ret != METAL_I2C_RET_OK) {
20016bba:	a021                	j	20016bc2 <__metal_driver_sifive_i2c0_read+0x14a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:318
            }
        }
    } else {
        /* I2C device not initialized, return error */
        METAL_I2C_LOG("I2C device not initialized.\n");
        ret = METAL_I2C_RET_ERR;
20016bbc:	57fd                	li	a5,-1
20016bbe:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:321
    }

    return ret;
20016bc2:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:322
}
20016bc6:	853e                	mv	a0,a5
20016bc8:	40b6                	lw	ra,76(sp)
20016bca:	4426                	lw	s0,72(sp)
20016bcc:	6161                	addi	sp,sp,80
20016bce:	8082                	ret

20016bd0 <__metal_driver_sifive_i2c0_transfer>:
__metal_driver_sifive_i2c0_transfer():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:327

static int
__metal_driver_sifive_i2c0_transfer(struct metal_i2c *i2c, unsigned int addr,
                                    unsigned char txbuf[], unsigned int txlen,
                                    unsigned char rxbuf[], unsigned int rxlen) {
20016bd0:	715d                	addi	sp,sp,-80
20016bd2:	c686                	sw	ra,76(sp)
20016bd4:	c4a2                	sw	s0,72(sp)
20016bd6:	0880                	addi	s0,sp,80
20016bd8:	fca42623          	sw	a0,-52(s0)
20016bdc:	fcb42423          	sw	a1,-56(s0)
20016be0:	fcc42223          	sw	a2,-60(s0)
20016be4:	fcd42023          	sw	a3,-64(s0)
20016be8:	fae42e23          	sw	a4,-68(s0)
20016bec:	faf42c23          	sw	a5,-72(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:332
    __metal_io_u8 command;
    time_t timeout;
    int ret;
    unsigned int i;
    unsigned long base = __metal_driver_sifive_i2c0_control_base(i2c);
20016bf0:	fcc42503          	lw	a0,-52(s0)
20016bf4:	89bff0ef          	jal	ra,2001648e <__metal_driver_sifive_i2c0_control_base>
20016bf8:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:334

    if ((i2c != NULL) &&
20016bfc:	fcc42783          	lw	a5,-52(s0)
20016c00:	20078e63          	beqz	a5,20016e1c <__metal_driver_sifive_i2c0_transfer+0x24c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:335 (discriminator 1)
        ((struct __metal_driver_sifive_i2c0 *)i2c)->init_done) {
20016c04:	fcc42783          	lw	a5,-52(s0)
20016c08:	43dc                	lw	a5,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:334 (discriminator 1)
    if ((i2c != NULL) &&
20016c0a:	20078963          	beqz	a5,20016e1c <__metal_driver_sifive_i2c0_transfer+0x24c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:336
        if (txlen) {
20016c0e:	fc042783          	lw	a5,-64(s0)
20016c12:	10078863          	beqz	a5,20016d22 <__metal_driver_sifive_i2c0_transfer+0x152>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:338
            /* Set command flags */
            command = METAL_I2C_CMD_WRITE;
20016c16:	47c1                	li	a5,16
20016c18:	fef407a3          	sb	a5,-17(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:341
            /* Send address over I2C bus, current driver supports only 7bit
             * addressing */
            ret = __metal_driver_sifive_i2c0_write_addr(base, addr,
20016c1c:	4601                	li	a2,0
20016c1e:	fc842583          	lw	a1,-56(s0)
20016c22:	fe042503          	lw	a0,-32(s0)
20016c26:	ba3ff0ef          	jal	ra,200167c8 <__metal_driver_sifive_i2c0_write_addr>
20016c2a:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:344
                                                        METAL_I2C_WRITE);

            if (ret != METAL_I2C_RET_OK) {
20016c2e:	fe842783          	lw	a5,-24(s0)
20016c32:	c781                	beqz	a5,20016c3a <__metal_driver_sifive_i2c0_transfer+0x6a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:347
                /* Write address failed */
                METAL_I2C_LOG("I2C Write failed.\n");
                return ret;
20016c34:	fe842783          	lw	a5,-24(s0)
20016c38:	a2fd                	j	20016e26 <__metal_driver_sifive_i2c0_transfer+0x256>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:349
            }
            for (i = 0; i < txlen; i++) {
20016c3a:	fe042223          	sw	zero,-28(s0)
20016c3e:	a8e1                	j	20016d16 <__metal_driver_sifive_i2c0_transfer+0x146>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:351
                /* Copy into transmit register */
                METAL_I2C_REGB(METAL_SIFIVE_I2C0_TRANSMIT) = txbuf[i];
20016c40:	fc442703          	lw	a4,-60(s0)
20016c44:	fe442783          	lw	a5,-28(s0)
20016c48:	97ba                	add	a5,a5,a4
20016c4a:	fe042703          	lw	a4,-32(s0)
20016c4e:	0731                	addi	a4,a4,12
20016c50:	0007c783          	lbu	a5,0(a5)
20016c54:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:353

                if (i == (txlen - 1) && (rxlen == 0)) {
20016c58:	fc042783          	lw	a5,-64(s0)
20016c5c:	17fd                	addi	a5,a5,-1
20016c5e:	fe442703          	lw	a4,-28(s0)
20016c62:	00f71b63          	bne	a4,a5,20016c78 <__metal_driver_sifive_i2c0_transfer+0xa8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:353 (discriminator 1)
20016c66:	fb842783          	lw	a5,-72(s0)
20016c6a:	e799                	bnez	a5,20016c78 <__metal_driver_sifive_i2c0_transfer+0xa8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:355
                    /* Insert stop condition to end transfer */
                    command |= METAL_I2C_CMD_STOP;
20016c6c:	fef44783          	lbu	a5,-17(s0)
20016c70:	0407e793          	ori	a5,a5,64
20016c74:	fef407a3          	sb	a5,-17(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:358
                }
                /* Write command register */
                METAL_I2C_REGB(METAL_SIFIVE_I2C0_COMMAND) = command;
20016c78:	fe042783          	lw	a5,-32(s0)
20016c7c:	07c1                	addi	a5,a5,16
20016c7e:	873e                	mv	a4,a5
20016c80:	fef44783          	lbu	a5,-17(s0)
20016c84:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:360
                /* Reset timeout */
                METAL_I2C_TIMEOUT_RESET(timeout);
20016c88:	525000ef          	jal	ra,200179ac <metal_time>
20016c8c:	86aa                	mv	a3,a0
20016c8e:	872e                	mv	a4,a1
20016c90:	4585                	li	a1,1
20016c92:	4601                	li	a2,0
20016c94:	00b687b3          	add	a5,a3,a1
20016c98:	853e                	mv	a0,a5
20016c9a:	00d53533          	sltu	a0,a0,a3
20016c9e:	00c70833          	add	a6,a4,a2
20016ca2:	01050733          	add	a4,a0,a6
20016ca6:	883a                	mv	a6,a4
20016ca8:	fcf42c23          	sw	a5,-40(s0)
20016cac:	fd042e23          	sw	a6,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:363

                /* Check for transfer completion. */
                METAL_I2C_REG_CHECK((METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) &
20016cb0:	a035                	j	20016cdc <__metal_driver_sifive_i2c0_transfer+0x10c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:363 (discriminator 3)
20016cb2:	4fb000ef          	jal	ra,200179ac <metal_time>
20016cb6:	87aa                	mv	a5,a0
20016cb8:	882e                	mv	a6,a1
20016cba:	fdc42703          	lw	a4,-36(s0)
20016cbe:	86c2                	mv	a3,a6
20016cc0:	00d74c63          	blt	a4,a3,20016cd8 <__metal_driver_sifive_i2c0_transfer+0x108>
20016cc4:	fdc42703          	lw	a4,-36(s0)
20016cc8:	86c2                	mv	a3,a6
20016cca:	00d71963          	bne	a4,a3,20016cdc <__metal_driver_sifive_i2c0_transfer+0x10c>
20016cce:	fd842703          	lw	a4,-40(s0)
20016cd2:	00f76363          	bltu	a4,a5,20016cd8 <__metal_driver_sifive_i2c0_transfer+0x108>
20016cd6:	a019                	j	20016cdc <__metal_driver_sifive_i2c0_transfer+0x10c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:363 (discriminator 1)
20016cd8:	57fd                	li	a5,-1
20016cda:	a2b1                	j	20016e26 <__metal_driver_sifive_i2c0_transfer+0x256>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:363 (discriminator 2)
20016cdc:	fe042783          	lw	a5,-32(s0)
20016ce0:	07c1                	addi	a5,a5,16
20016ce2:	0007c783          	lbu	a5,0(a5)
20016ce6:	0ff7f793          	andi	a5,a5,255
20016cea:	8b89                	andi	a5,a5,2
20016cec:	f3f9                	bnez	a5,20016cb2 <__metal_driver_sifive_i2c0_transfer+0xe2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:368
                                     METAL_I2C_STATUS_TIP),
                                    timeout);

                /* Check for ACK from slave. */
                if ((METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) &
20016cee:	fe042783          	lw	a5,-32(s0)
20016cf2:	07c1                	addi	a5,a5,16
20016cf4:	0007c783          	lbu	a5,0(a5)
20016cf8:	0ff7f793          	andi	a5,a5,255
20016cfc:	07e2                	slli	a5,a5,0x18
20016cfe:	87e1                	srai	a5,a5,0x18
20016d00:	0007d663          	bgez	a5,20016d0c <__metal_driver_sifive_i2c0_transfer+0x13c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:372
                     METAL_I2C_STATUS_RXACK)) {
                    /* No ACK, return error */
                    METAL_I2C_LOG("I2C RX ACK failed.\n");
                    ret = METAL_I2C_RET_ERR;
20016d04:	57fd                	li	a5,-1
20016d06:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:373
                    break;
20016d0a:	a821                	j	20016d22 <__metal_driver_sifive_i2c0_transfer+0x152>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:349 (discriminator 2)
            for (i = 0; i < txlen; i++) {
20016d0c:	fe442783          	lw	a5,-28(s0)
20016d10:	0785                	addi	a5,a5,1
20016d12:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:349 (discriminator 1)
20016d16:	fe442703          	lw	a4,-28(s0)
20016d1a:	fc042783          	lw	a5,-64(s0)
20016d1e:	f2f761e3          	bltu	a4,a5,20016c40 <__metal_driver_sifive_i2c0_transfer+0x70>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:377
                }
            }
        }
        if (rxlen) {
20016d22:	fb842783          	lw	a5,-72(s0)
20016d26:	0e078e63          	beqz	a5,20016e22 <__metal_driver_sifive_i2c0_transfer+0x252>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:378
            command = METAL_I2C_CMD_READ; /* Set command flags */
20016d2a:	02000793          	li	a5,32
20016d2e:	fef407a3          	sb	a5,-17(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:381
            /* Send address over I2C bus, current driver supports only 7bit
             * addressing */
            ret = __metal_driver_sifive_i2c0_write_addr(base, addr,
20016d32:	4605                	li	a2,1
20016d34:	fc842583          	lw	a1,-56(s0)
20016d38:	fe042503          	lw	a0,-32(s0)
20016d3c:	a8dff0ef          	jal	ra,200167c8 <__metal_driver_sifive_i2c0_write_addr>
20016d40:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:384
                                                        METAL_I2C_READ);

            if (ret != METAL_I2C_RET_OK) {
20016d44:	fe842783          	lw	a5,-24(s0)
20016d48:	c781                	beqz	a5,20016d50 <__metal_driver_sifive_i2c0_transfer+0x180>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:387
                /* Return error */
                METAL_I2C_LOG("I2C Read failed.\n");
                return ret;
20016d4a:	fe842783          	lw	a5,-24(s0)
20016d4e:	a8e1                	j	20016e26 <__metal_driver_sifive_i2c0_transfer+0x256>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:389
            }
            for (i = 0; i < rxlen; i++) {
20016d50:	fe042223          	sw	zero,-28(s0)
20016d54:	a86d                	j	20016e0e <__metal_driver_sifive_i2c0_transfer+0x23e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:391
                /* check for last transfer */
                if (i == (rxlen - 1)) {
20016d56:	fb842783          	lw	a5,-72(s0)
20016d5a:	17fd                	addi	a5,a5,-1
20016d5c:	fe442703          	lw	a4,-28(s0)
20016d60:	00f71863          	bne	a4,a5,20016d70 <__metal_driver_sifive_i2c0_transfer+0x1a0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:393
                    /* Set NACK to end read, generate STOP condition */
                    command |= (METAL_I2C_CMD_ACK | METAL_I2C_CMD_STOP);
20016d64:	fef44783          	lbu	a5,-17(s0)
20016d68:	0487e793          	ori	a5,a5,72
20016d6c:	fef407a3          	sb	a5,-17(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:396
                }
                /* Write command register */
                METAL_I2C_REGB(METAL_SIFIVE_I2C0_COMMAND) = command;
20016d70:	fe042783          	lw	a5,-32(s0)
20016d74:	07c1                	addi	a5,a5,16
20016d76:	873e                	mv	a4,a5
20016d78:	fef44783          	lbu	a5,-17(s0)
20016d7c:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:398
                /* Reset timeout */
                METAL_I2C_TIMEOUT_RESET(timeout);
20016d80:	42d000ef          	jal	ra,200179ac <metal_time>
20016d84:	86aa                	mv	a3,a0
20016d86:	872e                	mv	a4,a1
20016d88:	4585                	li	a1,1
20016d8a:	4601                	li	a2,0
20016d8c:	00b687b3          	add	a5,a3,a1
20016d90:	853e                	mv	a0,a5
20016d92:	00d53533          	sltu	a0,a0,a3
20016d96:	00c70833          	add	a6,a4,a2
20016d9a:	01050733          	add	a4,a0,a6
20016d9e:	883a                	mv	a6,a4
20016da0:	fcf42c23          	sw	a5,-40(s0)
20016da4:	fd042e23          	sw	a6,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:401

                /* Wait for the read to complete */
                METAL_I2C_REG_CHECK((METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) &
20016da8:	a035                	j	20016dd4 <__metal_driver_sifive_i2c0_transfer+0x204>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:401 (discriminator 3)
20016daa:	403000ef          	jal	ra,200179ac <metal_time>
20016dae:	87aa                	mv	a5,a0
20016db0:	882e                	mv	a6,a1
20016db2:	fdc42703          	lw	a4,-36(s0)
20016db6:	86c2                	mv	a3,a6
20016db8:	00d74c63          	blt	a4,a3,20016dd0 <__metal_driver_sifive_i2c0_transfer+0x200>
20016dbc:	fdc42703          	lw	a4,-36(s0)
20016dc0:	86c2                	mv	a3,a6
20016dc2:	00d71963          	bne	a4,a3,20016dd4 <__metal_driver_sifive_i2c0_transfer+0x204>
20016dc6:	fd842703          	lw	a4,-40(s0)
20016dca:	00f76363          	bltu	a4,a5,20016dd0 <__metal_driver_sifive_i2c0_transfer+0x200>
20016dce:	a019                	j	20016dd4 <__metal_driver_sifive_i2c0_transfer+0x204>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:401 (discriminator 1)
20016dd0:	57fd                	li	a5,-1
20016dd2:	a891                	j	20016e26 <__metal_driver_sifive_i2c0_transfer+0x256>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:401 (discriminator 2)
20016dd4:	fe042783          	lw	a5,-32(s0)
20016dd8:	07c1                	addi	a5,a5,16
20016dda:	0007c783          	lbu	a5,0(a5)
20016dde:	0ff7f793          	andi	a5,a5,255
20016de2:	8b89                	andi	a5,a5,2
20016de4:	f3f9                	bnez	a5,20016daa <__metal_driver_sifive_i2c0_transfer+0x1da>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:405 (discriminator 2)
                                     METAL_I2C_STATUS_TIP),
                                    timeout);
                /* Store the received byte */
                rxbuf[i] = METAL_I2C_REGB(METAL_SIFIVE_I2C0_TRANSMIT);
20016de6:	fe042783          	lw	a5,-32(s0)
20016dea:	07b1                	addi	a5,a5,12
20016dec:	86be                	mv	a3,a5
20016dee:	fbc42703          	lw	a4,-68(s0)
20016df2:	fe442783          	lw	a5,-28(s0)
20016df6:	97ba                	add	a5,a5,a4
20016df8:	0006c703          	lbu	a4,0(a3)
20016dfc:	0ff77713          	andi	a4,a4,255
20016e00:	00e78023          	sb	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:389 (discriminator 2)
            for (i = 0; i < rxlen; i++) {
20016e04:	fe442783          	lw	a5,-28(s0)
20016e08:	0785                	addi	a5,a5,1
20016e0a:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:389 (discriminator 1)
20016e0e:	fe442703          	lw	a4,-28(s0)
20016e12:	fb842783          	lw	a5,-72(s0)
20016e16:	f4f760e3          	bltu	a4,a5,20016d56 <__metal_driver_sifive_i2c0_transfer+0x186>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:377
        if (rxlen) {
20016e1a:	a021                	j	20016e22 <__metal_driver_sifive_i2c0_transfer+0x252>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:411
            }
        }
    } else {
        /* I2C device not initialized, return error */
        METAL_I2C_LOG("I2C device not initialized.\n");
        ret = METAL_I2C_RET_ERR;
20016e1c:	57fd                	li	a5,-1
20016e1e:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:414
    }

    return ret;
20016e22:	fe842783          	lw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:415
}
20016e26:	853e                	mv	a0,a5
20016e28:	40b6                	lw	ra,76(sp)
20016e2a:	4426                	lw	s0,72(sp)
20016e2c:	6161                	addi	sp,sp,80
20016e2e:	8082                	ret

20016e30 <__metal_driver_sifive_uart0_control_base>:
__metal_driver_sifive_uart0_control_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1066
{
20016e30:	1101                	addi	sp,sp,-32
20016e32:	ce22                	sw	s0,28(sp)
20016e34:	1000                	addi	s0,sp,32
20016e36:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1067
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20016e3a:	fec42703          	lw	a4,-20(s0)
20016e3e:	800017b7          	lui	a5,0x80001
20016e42:	a5c78793          	addi	a5,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
20016e46:	00f71563          	bne	a4,a5,20016e50 <__metal_driver_sifive_uart0_control_base+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1068
		return METAL_SIFIVE_UART0_10013000_BASE_ADDRESS;
20016e4a:	100137b7          	lui	a5,0x10013
20016e4e:	a829                	j	20016e68 <__metal_driver_sifive_uart0_control_base+0x38>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1070
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20016e50:	fec42703          	lw	a4,-20(s0)
20016e54:	800017b7          	lui	a5,0x80001
20016e58:	a7c78793          	addi	a5,a5,-1412 # 80000a7c <metal_segment_heap_target_end+0xfffff2bc>
20016e5c:	00f71563          	bne	a4,a5,20016e66 <__metal_driver_sifive_uart0_control_base+0x36>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1071
		return METAL_SIFIVE_UART0_10023000_BASE_ADDRESS;
20016e60:	100237b7          	lui	a5,0x10023
20016e64:	a011                	j	20016e68 <__metal_driver_sifive_uart0_control_base+0x38>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1074
		return 0;
20016e66:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1076
}
20016e68:	853e                	mv	a0,a5
20016e6a:	4472                	lw	s0,28(sp)
20016e6c:	6105                	addi	sp,sp,32
20016e6e:	8082                	ret

20016e70 <__metal_driver_sifive_uart0_interrupt_parent>:
__metal_driver_sifive_uart0_interrupt_parent():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1105
{
20016e70:	1101                	addi	sp,sp,-32
20016e72:	ce22                	sw	s0,28(sp)
20016e74:	1000                	addi	s0,sp,32
20016e76:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1106
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20016e7a:	fec42703          	lw	a4,-20(s0)
20016e7e:	800017b7          	lui	a5,0x80001
20016e82:	a5c78793          	addi	a5,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
20016e86:	00f71763          	bne	a4,a5,20016e94 <__metal_driver_sifive_uart0_interrupt_parent+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1107
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20016e8a:	800007b7          	lui	a5,0x80000
20016e8e:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffeca0>
20016e92:	a839                	j	20016eb0 <__metal_driver_sifive_uart0_interrupt_parent+0x40>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1109
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20016e94:	fec42703          	lw	a4,-20(s0)
20016e98:	800017b7          	lui	a5,0x80001
20016e9c:	a7c78793          	addi	a5,a5,-1412 # 80000a7c <metal_segment_heap_target_end+0xfffff2bc>
20016ea0:	00f71763          	bne	a4,a5,20016eae <__metal_driver_sifive_uart0_interrupt_parent+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1110
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20016ea4:	800007b7          	lui	a5,0x80000
20016ea8:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffeca0>
20016eac:	a011                	j	20016eb0 <__metal_driver_sifive_uart0_interrupt_parent+0x40>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1113
		return 0;
20016eae:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1115
}
20016eb0:	853e                	mv	a0,a5
20016eb2:	4472                	lw	s0,28(sp)
20016eb4:	6105                	addi	sp,sp,32
20016eb6:	8082                	ret

20016eb8 <__metal_driver_sifive_uart0_interrupt_line>:
__metal_driver_sifive_uart0_interrupt_line():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1118
{
20016eb8:	1101                	addi	sp,sp,-32
20016eba:	ce22                	sw	s0,28(sp)
20016ebc:	1000                	addi	s0,sp,32
20016ebe:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1119
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20016ec2:	fec42703          	lw	a4,-20(s0)
20016ec6:	800017b7          	lui	a5,0x80001
20016eca:	a5c78793          	addi	a5,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
20016ece:	00f71463          	bne	a4,a5,20016ed6 <__metal_driver_sifive_uart0_interrupt_line+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1120
		return 3;
20016ed2:	478d                	li	a5,3
20016ed4:	a821                	j	20016eec <__metal_driver_sifive_uart0_interrupt_line+0x34>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1122
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20016ed6:	fec42703          	lw	a4,-20(s0)
20016eda:	800017b7          	lui	a5,0x80001
20016ede:	a7c78793          	addi	a5,a5,-1412 # 80000a7c <metal_segment_heap_target_end+0xfffff2bc>
20016ee2:	00f71463          	bne	a4,a5,20016eea <__metal_driver_sifive_uart0_interrupt_line+0x32>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1123
		return 4;
20016ee6:	4791                	li	a5,4
20016ee8:	a011                	j	20016eec <__metal_driver_sifive_uart0_interrupt_line+0x34>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1126
		return 0;
20016eea:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1128
}
20016eec:	853e                	mv	a0,a5
20016eee:	4472                	lw	s0,28(sp)
20016ef0:	6105                	addi	sp,sp,32
20016ef2:	8082                	ret

20016ef4 <__metal_driver_sifive_uart0_clock>:
__metal_driver_sifive_uart0_clock():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1131
{
20016ef4:	1101                	addi	sp,sp,-32
20016ef6:	ce22                	sw	s0,28(sp)
20016ef8:	1000                	addi	s0,sp,32
20016efa:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1132
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20016efe:	fec42703          	lw	a4,-20(s0)
20016f02:	800017b7          	lui	a5,0x80001
20016f06:	a5c78793          	addi	a5,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
20016f0a:	00f71763          	bne	a4,a5,20016f18 <__metal_driver_sifive_uart0_clock+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1133
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
20016f0e:	800017b7          	lui	a5,0x80001
20016f12:	ab478793          	addi	a5,a5,-1356 # 80000ab4 <metal_segment_heap_target_end+0xfffff2f4>
20016f16:	a839                	j	20016f34 <__metal_driver_sifive_uart0_clock+0x40>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1135
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20016f18:	fec42703          	lw	a4,-20(s0)
20016f1c:	800017b7          	lui	a5,0x80001
20016f20:	a7c78793          	addi	a5,a5,-1412 # 80000a7c <metal_segment_heap_target_end+0xfffff2bc>
20016f24:	00f71763          	bne	a4,a5,20016f32 <__metal_driver_sifive_uart0_clock+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1136
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
20016f28:	800017b7          	lui	a5,0x80001
20016f2c:	ab478793          	addi	a5,a5,-1356 # 80000ab4 <metal_segment_heap_target_end+0xfffff2f4>
20016f30:	a011                	j	20016f34 <__metal_driver_sifive_uart0_clock+0x40>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1139
		return 0;
20016f32:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1141
}
20016f34:	853e                	mv	a0,a5
20016f36:	4472                	lw	s0,28(sp)
20016f38:	6105                	addi	sp,sp,32
20016f3a:	8082                	ret

20016f3c <__metal_driver_sifive_uart0_pinmux>:
__metal_driver_sifive_uart0_pinmux():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1144
{
20016f3c:	1101                	addi	sp,sp,-32
20016f3e:	ce22                	sw	s0,28(sp)
20016f40:	1000                	addi	s0,sp,32
20016f42:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1145
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20016f46:	fec42703          	lw	a4,-20(s0)
20016f4a:	800017b7          	lui	a5,0x80001
20016f4e:	a5c78793          	addi	a5,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
20016f52:	00f71563          	bne	a4,a5,20016f5c <__metal_driver_sifive_uart0_pinmux+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1146
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
20016f56:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20016f5a:	a829                	j	20016f74 <__metal_driver_sifive_uart0_pinmux+0x38>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1148
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20016f5c:	fec42703          	lw	a4,-20(s0)
20016f60:	800017b7          	lui	a5,0x80001
20016f64:	a7c78793          	addi	a5,a5,-1412 # 80000a7c <metal_segment_heap_target_end+0xfffff2bc>
20016f68:	00f71563          	bne	a4,a5,20016f72 <__metal_driver_sifive_uart0_pinmux+0x36>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1149
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
20016f6c:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20016f70:	a011                	j	20016f74 <__metal_driver_sifive_uart0_pinmux+0x38>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1152
		return 0;
20016f72:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1154
}
20016f74:	853e                	mv	a0,a5
20016f76:	4472                	lw	s0,28(sp)
20016f78:	6105                	addi	sp,sp,32
20016f7a:	8082                	ret

20016f7c <__metal_driver_sifive_uart0_pinmux_output_selector>:
__metal_driver_sifive_uart0_pinmux_output_selector():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1157
{
20016f7c:	1101                	addi	sp,sp,-32
20016f7e:	ce22                	sw	s0,28(sp)
20016f80:	1000                	addi	s0,sp,32
20016f82:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1158
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20016f86:	fec42703          	lw	a4,-20(s0)
20016f8a:	800017b7          	lui	a5,0x80001
20016f8e:	a5c78793          	addi	a5,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
20016f92:	00f71463          	bne	a4,a5,20016f9a <__metal_driver_sifive_uart0_pinmux_output_selector+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1159
		return 0;
20016f96:	4781                	li	a5,0
20016f98:	a821                	j	20016fb0 <__metal_driver_sifive_uart0_pinmux_output_selector+0x34>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1161
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20016f9a:	fec42703          	lw	a4,-20(s0)
20016f9e:	800017b7          	lui	a5,0x80001
20016fa2:	a7c78793          	addi	a5,a5,-1412 # 80000a7c <metal_segment_heap_target_end+0xfffff2bc>
20016fa6:	00f71463          	bne	a4,a5,20016fae <__metal_driver_sifive_uart0_pinmux_output_selector+0x32>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1162
		return 0;
20016faa:	4781                	li	a5,0
20016fac:	a011                	j	20016fb0 <__metal_driver_sifive_uart0_pinmux_output_selector+0x34>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1165
		return 0;
20016fae:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1167
}
20016fb0:	853e                	mv	a0,a5
20016fb2:	4472                	lw	s0,28(sp)
20016fb4:	6105                	addi	sp,sp,32
20016fb6:	8082                	ret

20016fb8 <__metal_driver_sifive_uart0_pinmux_source_selector>:
__metal_driver_sifive_uart0_pinmux_source_selector():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1170
{
20016fb8:	1101                	addi	sp,sp,-32
20016fba:	ce22                	sw	s0,28(sp)
20016fbc:	1000                	addi	s0,sp,32
20016fbe:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1171
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20016fc2:	fec42703          	lw	a4,-20(s0)
20016fc6:	800017b7          	lui	a5,0x80001
20016fca:	a5c78793          	addi	a5,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
20016fce:	00f71563          	bne	a4,a5,20016fd8 <__metal_driver_sifive_uart0_pinmux_source_selector+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1172
		return 196608;
20016fd2:	000307b7          	lui	a5,0x30
20016fd6:	a829                	j	20016ff0 <__metal_driver_sifive_uart0_pinmux_source_selector+0x38>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1174
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20016fd8:	fec42703          	lw	a4,-20(s0)
20016fdc:	800017b7          	lui	a5,0x80001
20016fe0:	a7c78793          	addi	a5,a5,-1412 # 80000a7c <metal_segment_heap_target_end+0xfffff2bc>
20016fe4:	00f71563          	bne	a4,a5,20016fee <__metal_driver_sifive_uart0_pinmux_source_selector+0x36>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1175
		return 8650752;
20016fe8:	008407b7          	lui	a5,0x840
20016fec:	a011                	j	20016ff0 <__metal_driver_sifive_uart0_pinmux_source_selector+0x38>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1178
		return 0;
20016fee:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1180
}
20016ff0:	853e                	mv	a0,a5
20016ff2:	4472                	lw	s0,28(sp)
20016ff4:	6105                	addi	sp,sp,32
20016ff6:	8082                	ret

20016ff8 <__metal_driver_sifive_uart0_interrupt_controller>:
__metal_driver_sifive_uart0_interrupt_controller():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:37
    (__METAL_ACCESS_ONCE((__metal_io_u8 *)UART_REG(offset)))
#define UART_REGW(offset)                                                      \
    (__METAL_ACCESS_ONCE((__metal_io_u32 *)UART_REG(offset)))

struct metal_interrupt *
__metal_driver_sifive_uart0_interrupt_controller(struct metal_uart *uart) {
20016ff8:	1101                	addi	sp,sp,-32
20016ffa:	ce06                	sw	ra,28(sp)
20016ffc:	cc22                	sw	s0,24(sp)
20016ffe:	1000                	addi	s0,sp,32
20017000:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:38
    return __metal_driver_sifive_uart0_interrupt_parent(uart);
20017004:	fec42503          	lw	a0,-20(s0)
20017008:	e69ff0ef          	jal	ra,20016e70 <__metal_driver_sifive_uart0_interrupt_parent>
2001700c:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:39
}
2001700e:	853e                	mv	a0,a5
20017010:	40f2                	lw	ra,28(sp)
20017012:	4462                	lw	s0,24(sp)
20017014:	6105                	addi	sp,sp,32
20017016:	8082                	ret

20017018 <__metal_driver_sifive_uart0_get_interrupt_id>:
__metal_driver_sifive_uart0_get_interrupt_id():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:41

int __metal_driver_sifive_uart0_get_interrupt_id(struct metal_uart *uart) {
20017018:	1101                	addi	sp,sp,-32
2001701a:	ce06                	sw	ra,28(sp)
2001701c:	cc22                	sw	s0,24(sp)
2001701e:	1000                	addi	s0,sp,32
20017020:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:42
    return __metal_driver_sifive_uart0_interrupt_line(uart);
20017024:	fec42503          	lw	a0,-20(s0)
20017028:	e91ff0ef          	jal	ra,20016eb8 <__metal_driver_sifive_uart0_interrupt_line>
2001702c:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:43
}
2001702e:	853e                	mv	a0,a5
20017030:	40f2                	lw	ra,28(sp)
20017032:	4462                	lw	s0,24(sp)
20017034:	6105                	addi	sp,sp,32
20017036:	8082                	ret

20017038 <__metal_driver_sifive_uart0_tx_interrupt_enable>:
__metal_driver_sifive_uart0_tx_interrupt_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:45

int __metal_driver_sifive_uart0_tx_interrupt_enable(struct metal_uart *uart) {
20017038:	7179                	addi	sp,sp,-48
2001703a:	d606                	sw	ra,44(sp)
2001703c:	d422                	sw	s0,40(sp)
2001703e:	1800                	addi	s0,sp,48
20017040:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:46
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20017044:	fdc42503          	lw	a0,-36(s0)
20017048:	de9ff0ef          	jal	ra,20016e30 <__metal_driver_sifive_uart0_control_base>
2001704c:	87aa                	mv	a5,a0
2001704e:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:48

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_TXWM;
20017052:	fec42783          	lw	a5,-20(s0)
20017056:	07c1                	addi	a5,a5,16
20017058:	439c                	lw	a5,0(a5)
2001705a:	fec42703          	lw	a4,-20(s0)
2001705e:	0741                	addi	a4,a4,16
20017060:	0017e793          	ori	a5,a5,1
20017064:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:49
    return 0;
20017066:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:50
}
20017068:	853e                	mv	a0,a5
2001706a:	50b2                	lw	ra,44(sp)
2001706c:	5422                	lw	s0,40(sp)
2001706e:	6145                	addi	sp,sp,48
20017070:	8082                	ret

20017072 <__metal_driver_sifive_uart0_tx_interrupt_disable>:
__metal_driver_sifive_uart0_tx_interrupt_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:52

int __metal_driver_sifive_uart0_tx_interrupt_disable(struct metal_uart *uart) {
20017072:	7179                	addi	sp,sp,-48
20017074:	d606                	sw	ra,44(sp)
20017076:	d422                	sw	s0,40(sp)
20017078:	1800                	addi	s0,sp,48
2001707a:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:53
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2001707e:	fdc42503          	lw	a0,-36(s0)
20017082:	dafff0ef          	jal	ra,20016e30 <__metal_driver_sifive_uart0_control_base>
20017086:	87aa                	mv	a5,a0
20017088:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:55

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_TXWM;
2001708c:	fec42783          	lw	a5,-20(s0)
20017090:	07c1                	addi	a5,a5,16
20017092:	439c                	lw	a5,0(a5)
20017094:	fec42703          	lw	a4,-20(s0)
20017098:	0741                	addi	a4,a4,16
2001709a:	9bf9                	andi	a5,a5,-2
2001709c:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:56
    return 0;
2001709e:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:57
}
200170a0:	853e                	mv	a0,a5
200170a2:	50b2                	lw	ra,44(sp)
200170a4:	5422                	lw	s0,40(sp)
200170a6:	6145                	addi	sp,sp,48
200170a8:	8082                	ret

200170aa <__metal_driver_sifive_uart0_rx_interrupt_enable>:
__metal_driver_sifive_uart0_rx_interrupt_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:59

int __metal_driver_sifive_uart0_rx_interrupt_enable(struct metal_uart *uart) {
200170aa:	7179                	addi	sp,sp,-48
200170ac:	d606                	sw	ra,44(sp)
200170ae:	d422                	sw	s0,40(sp)
200170b0:	1800                	addi	s0,sp,48
200170b2:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:60
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
200170b6:	fdc42503          	lw	a0,-36(s0)
200170ba:	d77ff0ef          	jal	ra,20016e30 <__metal_driver_sifive_uart0_control_base>
200170be:	87aa                	mv	a5,a0
200170c0:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:62

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_RXWM;
200170c4:	fec42783          	lw	a5,-20(s0)
200170c8:	07c1                	addi	a5,a5,16
200170ca:	439c                	lw	a5,0(a5)
200170cc:	fec42703          	lw	a4,-20(s0)
200170d0:	0741                	addi	a4,a4,16
200170d2:	0027e793          	ori	a5,a5,2
200170d6:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:63
    return 0;
200170d8:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:64
}
200170da:	853e                	mv	a0,a5
200170dc:	50b2                	lw	ra,44(sp)
200170de:	5422                	lw	s0,40(sp)
200170e0:	6145                	addi	sp,sp,48
200170e2:	8082                	ret

200170e4 <__metal_driver_sifive_uart0_rx_interrupt_disable>:
__metal_driver_sifive_uart0_rx_interrupt_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:66

int __metal_driver_sifive_uart0_rx_interrupt_disable(struct metal_uart *uart) {
200170e4:	7179                	addi	sp,sp,-48
200170e6:	d606                	sw	ra,44(sp)
200170e8:	d422                	sw	s0,40(sp)
200170ea:	1800                	addi	s0,sp,48
200170ec:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:67
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
200170f0:	fdc42503          	lw	a0,-36(s0)
200170f4:	d3dff0ef          	jal	ra,20016e30 <__metal_driver_sifive_uart0_control_base>
200170f8:	87aa                	mv	a5,a0
200170fa:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:69

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_RXWM;
200170fe:	fec42783          	lw	a5,-20(s0)
20017102:	07c1                	addi	a5,a5,16
20017104:	439c                	lw	a5,0(a5)
20017106:	fec42703          	lw	a4,-20(s0)
2001710a:	0741                	addi	a4,a4,16
2001710c:	9bf5                	andi	a5,a5,-3
2001710e:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:70
    return 0;
20017110:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:71
}
20017112:	853e                	mv	a0,a5
20017114:	50b2                	lw	ra,44(sp)
20017116:	5422                	lw	s0,40(sp)
20017118:	6145                	addi	sp,sp,48
2001711a:	8082                	ret

2001711c <__metal_driver_sifive_uart0_txready>:
__metal_driver_sifive_uart0_txready():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:73

int __metal_driver_sifive_uart0_txready(struct metal_uart *uart) {
2001711c:	7179                	addi	sp,sp,-48
2001711e:	d606                	sw	ra,44(sp)
20017120:	d422                	sw	s0,40(sp)
20017122:	1800                	addi	s0,sp,48
20017124:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:74
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20017128:	fdc42503          	lw	a0,-36(s0)
2001712c:	d05ff0ef          	jal	ra,20016e30 <__metal_driver_sifive_uart0_control_base>
20017130:	87aa                	mv	a5,a0
20017132:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:76

    return !!((UART_REGW(METAL_SIFIVE_UART0_TXDATA) & UART_TXFULL));
20017136:	fec42783          	lw	a5,-20(s0)
2001713a:	439c                	lw	a5,0(a5)
2001713c:	83fd                	srli	a5,a5,0x1f
2001713e:	0ff7f793          	andi	a5,a5,255
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:77
}
20017142:	853e                	mv	a0,a5
20017144:	50b2                	lw	ra,44(sp)
20017146:	5422                	lw	s0,40(sp)
20017148:	6145                	addi	sp,sp,48
2001714a:	8082                	ret

2001714c <__metal_driver_sifive_uart0_set_tx_watermark>:
__metal_driver_sifive_uart0_set_tx_watermark():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:80

int __metal_driver_sifive_uart0_set_tx_watermark(struct metal_uart *uart,
                                                 size_t level) {
2001714c:	7179                	addi	sp,sp,-48
2001714e:	d606                	sw	ra,44(sp)
20017150:	d422                	sw	s0,40(sp)
20017152:	1800                	addi	s0,sp,48
20017154:	fca42e23          	sw	a0,-36(s0)
20017158:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:81
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2001715c:	fdc42503          	lw	a0,-36(s0)
20017160:	cd1ff0ef          	jal	ra,20016e30 <__metal_driver_sifive_uart0_control_base>
20017164:	87aa                	mv	a5,a0
20017166:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:83

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(level);
2001716a:	fec42783          	lw	a5,-20(s0)
2001716e:	07a1                	addi	a5,a5,8
20017170:	4398                	lw	a4,0(a5)
20017172:	fd842783          	lw	a5,-40(s0)
20017176:	01079693          	slli	a3,a5,0x10
2001717a:	000707b7          	lui	a5,0x70
2001717e:	8ff5                	and	a5,a5,a3
20017180:	fec42683          	lw	a3,-20(s0)
20017184:	06a1                	addi	a3,a3,8
20017186:	8fd9                	or	a5,a5,a4
20017188:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:84
    return 0;
2001718a:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:85
}
2001718c:	853e                	mv	a0,a5
2001718e:	50b2                	lw	ra,44(sp)
20017190:	5422                	lw	s0,40(sp)
20017192:	6145                	addi	sp,sp,48
20017194:	8082                	ret

20017196 <__metal_driver_sifive_uart0_get_tx_watermark>:
__metal_driver_sifive_uart0_get_tx_watermark():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:87

size_t __metal_driver_sifive_uart0_get_tx_watermark(struct metal_uart *uart) {
20017196:	7179                	addi	sp,sp,-48
20017198:	d606                	sw	ra,44(sp)
2001719a:	d422                	sw	s0,40(sp)
2001719c:	1800                	addi	s0,sp,48
2001719e:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:88
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
200171a2:	fdc42503          	lw	a0,-36(s0)
200171a6:	c8bff0ef          	jal	ra,20016e30 <__metal_driver_sifive_uart0_control_base>
200171aa:	87aa                	mv	a5,a0
200171ac:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:90

    return ((UART_REGW(METAL_SIFIVE_UART0_TXCTRL) >> 16) & 0x7);
200171b0:	fec42783          	lw	a5,-20(s0)
200171b4:	07a1                	addi	a5,a5,8
200171b6:	439c                	lw	a5,0(a5)
200171b8:	83c1                	srli	a5,a5,0x10
200171ba:	8b9d                	andi	a5,a5,7
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:91
}
200171bc:	853e                	mv	a0,a5
200171be:	50b2                	lw	ra,44(sp)
200171c0:	5422                	lw	s0,40(sp)
200171c2:	6145                	addi	sp,sp,48
200171c4:	8082                	ret

200171c6 <__metal_driver_sifive_uart0_set_rx_watermark>:
__metal_driver_sifive_uart0_set_rx_watermark():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:94

int __metal_driver_sifive_uart0_set_rx_watermark(struct metal_uart *uart,
                                                 size_t level) {
200171c6:	7179                	addi	sp,sp,-48
200171c8:	d606                	sw	ra,44(sp)
200171ca:	d422                	sw	s0,40(sp)
200171cc:	1800                	addi	s0,sp,48
200171ce:	fca42e23          	sw	a0,-36(s0)
200171d2:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:95
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
200171d6:	fdc42503          	lw	a0,-36(s0)
200171da:	c57ff0ef          	jal	ra,20016e30 <__metal_driver_sifive_uart0_control_base>
200171de:	87aa                	mv	a5,a0
200171e0:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:97

    UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXCNT(level);
200171e4:	fec42783          	lw	a5,-20(s0)
200171e8:	07b1                	addi	a5,a5,12
200171ea:	4398                	lw	a4,0(a5)
200171ec:	fd842783          	lw	a5,-40(s0)
200171f0:	01079693          	slli	a3,a5,0x10
200171f4:	000707b7          	lui	a5,0x70
200171f8:	8ff5                	and	a5,a5,a3
200171fa:	fec42683          	lw	a3,-20(s0)
200171fe:	06b1                	addi	a3,a3,12
20017200:	8fd9                	or	a5,a5,a4
20017202:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:98
    return 0;
20017204:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:99
}
20017206:	853e                	mv	a0,a5
20017208:	50b2                	lw	ra,44(sp)
2001720a:	5422                	lw	s0,40(sp)
2001720c:	6145                	addi	sp,sp,48
2001720e:	8082                	ret

20017210 <__metal_driver_sifive_uart0_get_rx_watermark>:
__metal_driver_sifive_uart0_get_rx_watermark():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:101

size_t __metal_driver_sifive_uart0_get_rx_watermark(struct metal_uart *uart) {
20017210:	7179                	addi	sp,sp,-48
20017212:	d606                	sw	ra,44(sp)
20017214:	d422                	sw	s0,40(sp)
20017216:	1800                	addi	s0,sp,48
20017218:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:102
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2001721c:	fdc42503          	lw	a0,-36(s0)
20017220:	c11ff0ef          	jal	ra,20016e30 <__metal_driver_sifive_uart0_control_base>
20017224:	87aa                	mv	a5,a0
20017226:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:104

    return ((UART_REGW(METAL_SIFIVE_UART0_RXCTRL) >> 16) & 0x7);
2001722a:	fec42783          	lw	a5,-20(s0)
2001722e:	07b1                	addi	a5,a5,12
20017230:	439c                	lw	a5,0(a5)
20017232:	83c1                	srli	a5,a5,0x10
20017234:	8b9d                	andi	a5,a5,7
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:105
}
20017236:	853e                	mv	a0,a5
20017238:	50b2                	lw	ra,44(sp)
2001723a:	5422                	lw	s0,40(sp)
2001723c:	6145                	addi	sp,sp,48
2001723e:	8082                	ret

20017240 <__metal_driver_sifive_uart0_putc>:
__metal_driver_sifive_uart0_putc():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:107

int __metal_driver_sifive_uart0_putc(struct metal_uart *uart, int c) {
20017240:	7179                	addi	sp,sp,-48
20017242:	d606                	sw	ra,44(sp)
20017244:	d422                	sw	s0,40(sp)
20017246:	1800                	addi	s0,sp,48
20017248:	fca42e23          	sw	a0,-36(s0)
2001724c:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:108
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20017250:	fdc42503          	lw	a0,-36(s0)
20017254:	bddff0ef          	jal	ra,20016e30 <__metal_driver_sifive_uart0_control_base>
20017258:	87aa                	mv	a5,a0
2001725a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:110

    while (__metal_driver_sifive_uart0_txready(uart) != 0) {
2001725e:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:110 (discriminator 1)
20017260:	fdc42503          	lw	a0,-36(s0)
20017264:	eb9ff0ef          	jal	ra,2001711c <__metal_driver_sifive_uart0_txready>
20017268:	87aa                	mv	a5,a0
2001726a:	fbfd                	bnez	a5,20017260 <__metal_driver_sifive_uart0_putc+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:113
        /* wait */
    }
    UART_REGW(METAL_SIFIVE_UART0_TXDATA) = c;
2001726c:	fec42783          	lw	a5,-20(s0)
20017270:	fd842703          	lw	a4,-40(s0)
20017274:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:114
    return 0;
20017276:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:115
}
20017278:	853e                	mv	a0,a5
2001727a:	50b2                	lw	ra,44(sp)
2001727c:	5422                	lw	s0,40(sp)
2001727e:	6145                	addi	sp,sp,48
20017280:	8082                	ret

20017282 <__metal_driver_sifive_uart0_getc>:
__metal_driver_sifive_uart0_getc():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:117

int __metal_driver_sifive_uart0_getc(struct metal_uart *uart, int *c) {
20017282:	7179                	addi	sp,sp,-48
20017284:	d606                	sw	ra,44(sp)
20017286:	d422                	sw	s0,40(sp)
20017288:	1800                	addi	s0,sp,48
2001728a:	fca42e23          	sw	a0,-36(s0)
2001728e:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:119
    uint32_t ch;
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20017292:	fdc42503          	lw	a0,-36(s0)
20017296:	b9bff0ef          	jal	ra,20016e30 <__metal_driver_sifive_uart0_control_base>
2001729a:	87aa                	mv	a5,a0
2001729c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:121
    /* No seperate status register, we get status and the byte at same time */
    ch = UART_REGW(METAL_SIFIVE_UART0_RXDATA);
200172a0:	fec42783          	lw	a5,-20(s0)
200172a4:	0791                	addi	a5,a5,4
200172a6:	439c                	lw	a5,0(a5)
200172a8:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:123
    ;
    if (ch & UART_RXEMPTY) {
200172ac:	fe842783          	lw	a5,-24(s0)
200172b0:	0007d763          	bgez	a5,200172be <__metal_driver_sifive_uart0_getc+0x3c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:124
        *c = -1; /* aka: EOF in most of the world */
200172b4:	fd842783          	lw	a5,-40(s0)
200172b8:	577d                	li	a4,-1
200172ba:	c398                	sw	a4,0(a5)
200172bc:	a801                	j	200172cc <__metal_driver_sifive_uart0_getc+0x4a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:126
    } else {
        *c = ch & 0x0ff;
200172be:	fe842783          	lw	a5,-24(s0)
200172c2:	0ff7f713          	andi	a4,a5,255
200172c6:	fd842783          	lw	a5,-40(s0)
200172ca:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:128
    }
    return 0;
200172cc:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:129
}
200172ce:	853e                	mv	a0,a5
200172d0:	50b2                	lw	ra,44(sp)
200172d2:	5422                	lw	s0,40(sp)
200172d4:	6145                	addi	sp,sp,48
200172d6:	8082                	ret

200172d8 <__metal_driver_sifive_uart0_get_baud_rate>:
__metal_driver_sifive_uart0_get_baud_rate():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:131

int __metal_driver_sifive_uart0_get_baud_rate(struct metal_uart *guart) {
200172d8:	7179                	addi	sp,sp,-48
200172da:	d622                	sw	s0,44(sp)
200172dc:	1800                	addi	s0,sp,48
200172de:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:132
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
200172e2:	fdc42783          	lw	a5,-36(s0)
200172e6:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:133
    return uart->baud_rate;
200172ea:	fec42783          	lw	a5,-20(s0)
200172ee:	43dc                	lw	a5,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:134
}
200172f0:	853e                	mv	a0,a5
200172f2:	5432                	lw	s0,44(sp)
200172f4:	6145                	addi	sp,sp,48
200172f6:	8082                	ret

200172f8 <__metal_driver_sifive_uart0_set_baud_rate>:
__metal_driver_sifive_uart0_set_baud_rate():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:137

int __metal_driver_sifive_uart0_set_baud_rate(struct metal_uart *guart,
                                              int baud_rate) {
200172f8:	7179                	addi	sp,sp,-48
200172fa:	d606                	sw	ra,44(sp)
200172fc:	d422                	sw	s0,40(sp)
200172fe:	1800                	addi	s0,sp,48
20017300:	fca42e23          	sw	a0,-36(s0)
20017304:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:138
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
20017308:	fdc42783          	lw	a5,-36(s0)
2001730c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:139
    long control_base = __metal_driver_sifive_uart0_control_base(guart);
20017310:	fdc42503          	lw	a0,-36(s0)
20017314:	b1dff0ef          	jal	ra,20016e30 <__metal_driver_sifive_uart0_control_base>
20017318:	87aa                	mv	a5,a0
2001731a:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:140
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
2001731e:	fdc42503          	lw	a0,-36(s0)
20017322:	bd3ff0ef          	jal	ra,20016ef4 <__metal_driver_sifive_uart0_clock>
20017326:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:142

    uart->baud_rate = baud_rate;
2001732a:	fd842703          	lw	a4,-40(s0)
2001732e:	fec42783          	lw	a5,-20(s0)
20017332:	c3d8                	sw	a4,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:144

    if (clock != NULL) {
20017334:	fe442783          	lw	a5,-28(s0)
20017338:	cbb1                	beqz	a5,2001738c <__metal_driver_sifive_uart0_set_baud_rate+0x94>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:145
        long clock_rate = clock->vtable->get_rate_hz(clock);
2001733a:	fe442783          	lw	a5,-28(s0)
2001733e:	439c                	lw	a5,0(a5)
20017340:	439c                	lw	a5,0(a5)
20017342:	fe442503          	lw	a0,-28(s0)
20017346:	9782                	jalr	a5
20017348:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:146
        UART_REGW(METAL_SIFIVE_UART0_DIV) = clock_rate / baud_rate - 1;
2001734c:	fe042703          	lw	a4,-32(s0)
20017350:	fd842783          	lw	a5,-40(s0)
20017354:	02f747b3          	div	a5,a4,a5
20017358:	fff78713          	addi	a4,a5,-1 # 6ffff <__heap_size+0x6f7ff>
2001735c:	fe842783          	lw	a5,-24(s0)
20017360:	07e1                	addi	a5,a5,24
20017362:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:147
        UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXEN;
20017364:	fe842783          	lw	a5,-24(s0)
20017368:	07a1                	addi	a5,a5,8
2001736a:	439c                	lw	a5,0(a5)
2001736c:	fe842703          	lw	a4,-24(s0)
20017370:	0721                	addi	a4,a4,8
20017372:	0017e793          	ori	a5,a5,1
20017376:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:148
        UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXEN;
20017378:	fe842783          	lw	a5,-24(s0)
2001737c:	07b1                	addi	a5,a5,12
2001737e:	439c                	lw	a5,0(a5)
20017380:	fe842703          	lw	a4,-24(s0)
20017384:	0731                	addi	a4,a4,12
20017386:	0017e793          	ori	a5,a5,1
2001738a:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:150
    }
    return 0;
2001738c:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:151
}
2001738e:	853e                	mv	a0,a5
20017390:	50b2                	lw	ra,44(sp)
20017392:	5422                	lw	s0,40(sp)
20017394:	6145                	addi	sp,sp,48
20017396:	8082                	ret

20017398 <pre_rate_change_callback_func>:
pre_rate_change_callback_func():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:153

static void pre_rate_change_callback_func(void *priv) {
20017398:	7139                	addi	sp,sp,-64
2001739a:	de06                	sw	ra,60(sp)
2001739c:	dc22                	sw	s0,56(sp)
2001739e:	0080                	addi	s0,sp,64
200173a0:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:154
    struct __metal_driver_sifive_uart0 *uart = priv;
200173a4:	fcc42783          	lw	a5,-52(s0)
200173a8:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:156
    long control_base =
        __metal_driver_sifive_uart0_control_base((struct metal_uart *)priv);
200173ac:	fcc42503          	lw	a0,-52(s0)
200173b0:	a81ff0ef          	jal	ra,20016e30 <__metal_driver_sifive_uart0_control_base>
200173b4:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:155
    long control_base =
200173b6:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:158
    struct metal_clock *clock =
        __metal_driver_sifive_uart0_clock((struct metal_uart *)priv);
200173ba:	fcc42503          	lw	a0,-52(s0)
200173be:	b37ff0ef          	jal	ra,20016ef4 <__metal_driver_sifive_uart0_clock>
200173c2:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:163

    /* Detect when the TXDATA is empty by setting the transmit watermark count
     * to one and waiting until an interrupt is pending */

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) &= ~(UART_TXCNT(0x7));
200173c6:	fe842783          	lw	a5,-24(s0)
200173ca:	07a1                	addi	a5,a5,8
200173cc:	4398                	lw	a4,0(a5)
200173ce:	fe842783          	lw	a5,-24(s0)
200173d2:	07a1                	addi	a5,a5,8
200173d4:	86be                	mv	a3,a5
200173d6:	fff907b7          	lui	a5,0xfff90
200173da:	17fd                	addi	a5,a5,-1
200173dc:	8ff9                	and	a5,a5,a4
200173de:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:164
    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(1);
200173e0:	fe842783          	lw	a5,-24(s0)
200173e4:	07a1                	addi	a5,a5,8
200173e6:	4398                	lw	a4,0(a5)
200173e8:	fe842783          	lw	a5,-24(s0)
200173ec:	07a1                	addi	a5,a5,8
200173ee:	86be                	mv	a3,a5
200173f0:	67c1                	lui	a5,0x10
200173f2:	8fd9                	or	a5,a5,a4
200173f4:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:166

    while ((UART_REGW(METAL_SIFIVE_UART0_IP) & UART_TXWM) == 0)
200173f6:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:166 (discriminator 1)
200173f8:	fe842783          	lw	a5,-24(s0)
200173fc:	07d1                	addi	a5,a5,20
200173fe:	439c                	lw	a5,0(a5)
20017400:	8b85                	andi	a5,a5,1
20017402:	dbfd                	beqz	a5,200173f8 <pre_rate_change_callback_func+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:174
    /* When the TXDATA clears, the UART is still shifting out the last byte.
     * Calculate the time we must drain to finish transmitting and then wait
     * that long. */

    long bits_per_symbol =
        (UART_REGW(METAL_SIFIVE_UART0_TXCTRL) & (1 << 1)) ? 9 : 10;
20017404:	fe842783          	lw	a5,-24(s0)
20017408:	07a1                	addi	a5,a5,8
2001740a:	439c                	lw	a5,0(a5)
2001740c:	8b89                	andi	a5,a5,2
2001740e:	c399                	beqz	a5,20017414 <pre_rate_change_callback_func+0x7c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 1)
20017410:	47a5                	li	a5,9
20017412:	a011                	j	20017416 <pre_rate_change_callback_func+0x7e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 2)
20017414:	47a9                	li	a5,10
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:173
    long bits_per_symbol =
20017416:	fef42023          	sw	a5,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:175
    long clk_freq = clock->vtable->get_rate_hz(clock);
2001741a:	fe442783          	lw	a5,-28(s0)
2001741e:	439c                	lw	a5,0(a5)
20017420:	439c                	lw	a5,0(a5)
20017422:	fe442503          	lw	a0,-28(s0)
20017426:	9782                	jalr	a5
20017428:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:176
    long cycles_to_wait = bits_per_symbol * clk_freq / uart->baud_rate;
2001742c:	fe042703          	lw	a4,-32(s0)
20017430:	fdc42783          	lw	a5,-36(s0)
20017434:	02f707b3          	mul	a5,a4,a5
20017438:	873e                	mv	a4,a5
2001743a:	fec42783          	lw	a5,-20(s0)
2001743e:	43dc                	lw	a5,4(a5)
20017440:	02f757b3          	divu	a5,a4,a5
20017444:	fcf42c23          	sw	a5,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:178

    for (volatile long x = 0; x < cycles_to_wait; x++)
20017448:	fc042a23          	sw	zero,-44(s0)
2001744c:	a039                	j	2001745a <pre_rate_change_callback_func+0xc2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:179 (discriminator 3)
        __asm__("nop");
2001744e:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 3)
    for (volatile long x = 0; x < cycles_to_wait; x++)
20017450:	fd442783          	lw	a5,-44(s0)
20017454:	0785                	addi	a5,a5,1
20017456:	fcf42a23          	sw	a5,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 1)
2001745a:	fd442783          	lw	a5,-44(s0)
2001745e:	fd842703          	lw	a4,-40(s0)
20017462:	fee7c6e3          	blt	a5,a4,2001744e <pre_rate_change_callback_func+0xb6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:180
}
20017466:	0001                	nop
20017468:	50f2                	lw	ra,60(sp)
2001746a:	5462                	lw	s0,56(sp)
2001746c:	6121                	addi	sp,sp,64
2001746e:	8082                	ret

20017470 <post_rate_change_callback_func>:
post_rate_change_callback_func():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:182

static void post_rate_change_callback_func(void *priv) {
20017470:	7179                	addi	sp,sp,-48
20017472:	d606                	sw	ra,44(sp)
20017474:	d422                	sw	s0,40(sp)
20017476:	1800                	addi	s0,sp,48
20017478:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:183
    struct __metal_driver_sifive_uart0 *uart = priv;
2001747c:	fdc42783          	lw	a5,-36(s0)
20017480:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:184
    metal_uart_set_baud_rate(&uart->uart, uart->baud_rate);
20017484:	fec42703          	lw	a4,-20(s0)
20017488:	fec42783          	lw	a5,-20(s0)
2001748c:	43dc                	lw	a5,4(a5)
2001748e:	85be                	mv	a1,a5
20017490:	853a                	mv	a0,a4
20017492:	237d                	jal	20017a40 <metal_uart_set_baud_rate>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:185
}
20017494:	0001                	nop
20017496:	50b2                	lw	ra,44(sp)
20017498:	5422                	lw	s0,40(sp)
2001749a:	6145                	addi	sp,sp,48
2001749c:	8082                	ret

2001749e <__metal_driver_sifive_uart0_init>:
__metal_driver_sifive_uart0_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:187

void __metal_driver_sifive_uart0_init(struct metal_uart *guart, int baud_rate) {
2001749e:	7139                	addi	sp,sp,-64
200174a0:	de06                	sw	ra,60(sp)
200174a2:	dc22                	sw	s0,56(sp)
200174a4:	0080                	addi	s0,sp,64
200174a6:	fca42623          	sw	a0,-52(s0)
200174aa:	fcb42423          	sw	a1,-56(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:188
    struct __metal_driver_sifive_uart0 *uart = (void *)(guart);
200174ae:	fcc42783          	lw	a5,-52(s0)
200174b2:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:189
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
200174b6:	fcc42503          	lw	a0,-52(s0)
200174ba:	a3bff0ef          	jal	ra,20016ef4 <__metal_driver_sifive_uart0_clock>
200174be:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:191
    struct __metal_driver_sifive_gpio0 *pinmux =
        __metal_driver_sifive_uart0_pinmux(guart);
200174c2:	fcc42503          	lw	a0,-52(s0)
200174c6:	a77ff0ef          	jal	ra,20016f3c <__metal_driver_sifive_uart0_pinmux>
200174ca:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:193

    if (clock != NULL) {
200174ce:	fe842783          	lw	a5,-24(s0)
200174d2:	c7b9                	beqz	a5,20017520 <__metal_driver_sifive_uart0_init+0x82>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:194
        uart->pre_rate_change_callback.callback =
200174d4:	fec42783          	lw	a5,-20(s0)
200174d8:	20017737          	lui	a4,0x20017
200174dc:	39870713          	addi	a4,a4,920 # 20017398 <pre_rate_change_callback_func>
200174e0:	c798                	sw	a4,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:196
            &pre_rate_change_callback_func;
        uart->pre_rate_change_callback.priv = guart;
200174e2:	fec42783          	lw	a5,-20(s0)
200174e6:	fcc42703          	lw	a4,-52(s0)
200174ea:	c7d8                	sw	a4,12(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:197
        metal_clock_register_pre_rate_change_callback(
200174ec:	fec42783          	lw	a5,-20(s0)
200174f0:	07a1                	addi	a5,a5,8
200174f2:	85be                	mv	a1,a5
200174f4:	fe842503          	lw	a0,-24(s0)
200174f8:	2ab5                	jal	20017674 <metal_clock_register_pre_rate_change_callback>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:200
            clock, &(uart->pre_rate_change_callback));

        uart->post_rate_change_callback.callback =
200174fa:	fec42783          	lw	a5,-20(s0)
200174fe:	20017737          	lui	a4,0x20017
20017502:	47070713          	addi	a4,a4,1136 # 20017470 <post_rate_change_callback_func>
20017506:	cbd8                	sw	a4,20(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:202
            &post_rate_change_callback_func;
        uart->post_rate_change_callback.priv = guart;
20017508:	fec42783          	lw	a5,-20(s0)
2001750c:	fcc42703          	lw	a4,-52(s0)
20017510:	cf98                	sw	a4,24(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:203
        metal_clock_register_post_rate_change_callback(
20017512:	fec42783          	lw	a5,-20(s0)
20017516:	07d1                	addi	a5,a5,20
20017518:	85be                	mv	a1,a5
2001751a:	fe842503          	lw	a0,-24(s0)
2001751e:	2261                	jal	200176a6 <metal_clock_register_post_rate_change_callback>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:207
            clock, &(uart->post_rate_change_callback));
    }

    metal_uart_set_baud_rate(&(uart->uart), baud_rate);
20017520:	fec42783          	lw	a5,-20(s0)
20017524:	fc842583          	lw	a1,-56(s0)
20017528:	853e                	mv	a0,a5
2001752a:	2b19                	jal	20017a40 <metal_uart_set_baud_rate>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:209

    if (pinmux != NULL) {
2001752c:	fe442783          	lw	a5,-28(s0)
20017530:	cb95                	beqz	a5,20017564 <__metal_driver_sifive_uart0_init+0xc6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:211
        long pinmux_output_selector =
            __metal_driver_sifive_uart0_pinmux_output_selector(guart);
20017532:	fcc42503          	lw	a0,-52(s0)
20017536:	a47ff0ef          	jal	ra,20016f7c <__metal_driver_sifive_uart0_pinmux_output_selector>
2001753a:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:210
        long pinmux_output_selector =
2001753c:	fef42023          	sw	a5,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:213
        long pinmux_source_selector =
            __metal_driver_sifive_uart0_pinmux_source_selector(guart);
20017540:	fcc42503          	lw	a0,-52(s0)
20017544:	a75ff0ef          	jal	ra,20016fb8 <__metal_driver_sifive_uart0_pinmux_source_selector>
20017548:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:212
        long pinmux_source_selector =
2001754a:	fcf42e23          	sw	a5,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:214
        pinmux->gpio.vtable->enable_io((struct metal_gpio *)pinmux,
2001754e:	fe442783          	lw	a5,-28(s0)
20017552:	439c                	lw	a5,0(a5)
20017554:	53dc                	lw	a5,36(a5)
20017556:	fdc42603          	lw	a2,-36(s0)
2001755a:	fe042583          	lw	a1,-32(s0)
2001755e:	fe442503          	lw	a0,-28(s0)
20017562:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:218
                                       pinmux_output_selector,
                                       pinmux_source_selector);
    }
}
20017564:	0001                	nop
20017566:	50f2                	lw	ra,60(sp)
20017568:	5462                	lw	s0,56(sp)
2001756a:	6121                	addi	sp,sp,64
2001756c:	8082                	ret

2001756e <_metal_clock_call_all_callbacks>:
_metal_clock_call_all_callbacks():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:50

/*!
 * @brief Call all callbacks in the linked list, if any are registered
 */
__inline__ void
_metal_clock_call_all_callbacks(const metal_clock_callback *const list) {
2001756e:	7179                	addi	sp,sp,-48
20017570:	d606                	sw	ra,44(sp)
20017572:	d422                	sw	s0,40(sp)
20017574:	1800                	addi	s0,sp,48
20017576:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:51
    const metal_clock_callback *current = list;
2001757a:	fdc42783          	lw	a5,-36(s0)
2001757e:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:52
    while (current) {
20017582:	a831                	j	2001759e <_metal_clock_call_all_callbacks+0x30>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:53
        current->callback(current->priv);
20017584:	fec42783          	lw	a5,-20(s0)
20017588:	4398                	lw	a4,0(a5)
2001758a:	fec42783          	lw	a5,-20(s0)
2001758e:	43dc                	lw	a5,4(a5)
20017590:	853e                	mv	a0,a5
20017592:	9702                	jalr	a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:54
        current = current->_next;
20017594:	fec42783          	lw	a5,-20(s0)
20017598:	479c                	lw	a5,8(a5)
2001759a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:52
    while (current) {
2001759e:	fec42783          	lw	a5,-20(s0)
200175a2:	f3ed                	bnez	a5,20017584 <_metal_clock_call_all_callbacks+0x16>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:56
    }
}
200175a4:	0001                	nop
200175a6:	50b2                	lw	ra,44(sp)
200175a8:	5422                	lw	s0,40(sp)
200175aa:	6145                	addi	sp,sp,48
200175ac:	8082                	ret

200175ae <_metal_clock_append_to_callbacks>:
_metal_clock_append_to_callbacks():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:63
/*!
 * @brief Append a callback to the linked list and return the head of the list
 */
__inline__ metal_clock_callback *
_metal_clock_append_to_callbacks(metal_clock_callback *list,
                                 metal_clock_callback *const cb) {
200175ae:	7179                	addi	sp,sp,-48
200175b0:	d622                	sw	s0,44(sp)
200175b2:	1800                	addi	s0,sp,48
200175b4:	fca42e23          	sw	a0,-36(s0)
200175b8:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:64
    cb->_next = NULL;
200175bc:	fd842783          	lw	a5,-40(s0)
200175c0:	0007a423          	sw	zero,8(a5) # 10008 <__heap_size+0xf808>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:66

    if (!list) {
200175c4:	fdc42783          	lw	a5,-36(s0)
200175c8:	e781                	bnez	a5,200175d0 <_metal_clock_append_to_callbacks+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:67
        return cb;
200175ca:	fd842783          	lw	a5,-40(s0)
200175ce:	a035                	j	200175fa <_metal_clock_append_to_callbacks+0x4c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:70
    }

    metal_clock_callback *current = list;
200175d0:	fdc42783          	lw	a5,-36(s0)
200175d4:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:72

    while ((current->_next) != NULL) {
200175d8:	a031                	j	200175e4 <_metal_clock_append_to_callbacks+0x36>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:73
        current = current->_next;
200175da:	fec42783          	lw	a5,-20(s0)
200175de:	479c                	lw	a5,8(a5)
200175e0:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:72
    while ((current->_next) != NULL) {
200175e4:	fec42783          	lw	a5,-20(s0)
200175e8:	479c                	lw	a5,8(a5)
200175ea:	fbe5                	bnez	a5,200175da <_metal_clock_append_to_callbacks+0x2c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:76
    }

    current->_next = cb;
200175ec:	fec42783          	lw	a5,-20(s0)
200175f0:	fd842703          	lw	a4,-40(s0)
200175f4:	c798                	sw	a4,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:78

    return list;
200175f6:	fdc42783          	lw	a5,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:79
}
200175fa:	853e                	mv	a0,a5
200175fc:	5432                	lw	s0,44(sp)
200175fe:	6145                	addi	sp,sp,48
20017600:	8082                	ret

20017602 <metal_clock_get_rate_hz>:
metal_clock_get_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:110
 * @brief Returns the current rate of the given clock
 *
 * @param clk The handle for the clock
 * @return The current rate of the clock in Hz
 */
__inline__ long metal_clock_get_rate_hz(const struct metal_clock *clk) {
20017602:	1101                	addi	sp,sp,-32
20017604:	ce06                	sw	ra,28(sp)
20017606:	cc22                	sw	s0,24(sp)
20017608:	1000                	addi	s0,sp,32
2001760a:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:111
    return clk->vtable->get_rate_hz(clk);
2001760e:	fec42783          	lw	a5,-20(s0)
20017612:	439c                	lw	a5,0(a5)
20017614:	439c                	lw	a5,0(a5)
20017616:	fec42503          	lw	a0,-20(s0)
2001761a:	9782                	jalr	a5
2001761c:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:112
}
2001761e:	853e                	mv	a0,a5
20017620:	40f2                	lw	ra,28(sp)
20017622:	4462                	lw	s0,24(sp)
20017624:	6105                	addi	sp,sp,32
20017626:	8082                	ret

20017628 <metal_clock_set_rate_hz>:
metal_clock_set_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:128
 * could be anything!
 *
 * Prior to and after the rate change of the clock, this will call the
 * registered pre- and post-rate change callbacks.
 */
__inline__ long metal_clock_set_rate_hz(struct metal_clock *clk, long hz) {
20017628:	7179                	addi	sp,sp,-48
2001762a:	d606                	sw	ra,44(sp)
2001762c:	d422                	sw	s0,40(sp)
2001762e:	1800                	addi	s0,sp,48
20017630:	fca42e23          	sw	a0,-36(s0)
20017634:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:129
    _metal_clock_call_all_callbacks(clk->_pre_rate_change_callback);
20017638:	fdc42783          	lw	a5,-36(s0)
2001763c:	43dc                	lw	a5,4(a5)
2001763e:	853e                	mv	a0,a5
20017640:	f2fff0ef          	jal	ra,2001756e <_metal_clock_call_all_callbacks>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:131

    long out = clk->vtable->set_rate_hz(clk, hz);
20017644:	fdc42783          	lw	a5,-36(s0)
20017648:	439c                	lw	a5,0(a5)
2001764a:	43dc                	lw	a5,4(a5)
2001764c:	fd842583          	lw	a1,-40(s0)
20017650:	fdc42503          	lw	a0,-36(s0)
20017654:	9782                	jalr	a5
20017656:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:133

    _metal_clock_call_all_callbacks(clk->_post_rate_change_callback);
2001765a:	fdc42783          	lw	a5,-36(s0)
2001765e:	479c                	lw	a5,8(a5)
20017660:	853e                	mv	a0,a5
20017662:	f0dff0ef          	jal	ra,2001756e <_metal_clock_call_all_callbacks>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:135

    return out;
20017666:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:136
}
2001766a:	853e                	mv	a0,a5
2001766c:	50b2                	lw	ra,44(sp)
2001766e:	5422                	lw	s0,40(sp)
20017670:	6145                	addi	sp,sp,48
20017672:	8082                	ret

20017674 <metal_clock_register_pre_rate_change_callback>:
metal_clock_register_pre_rate_change_callback():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:146
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_pre_rate_change_callback(struct metal_clock *clk,
                                              metal_clock_callback *cb) {
20017674:	1101                	addi	sp,sp,-32
20017676:	ce06                	sw	ra,28(sp)
20017678:	cc22                	sw	s0,24(sp)
2001767a:	1000                	addi	s0,sp,32
2001767c:	fea42623          	sw	a0,-20(s0)
20017680:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:148
    clk->_pre_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_pre_rate_change_callback, cb);
20017684:	fec42783          	lw	a5,-20(s0)
20017688:	43dc                	lw	a5,4(a5)
2001768a:	fe842583          	lw	a1,-24(s0)
2001768e:	853e                	mv	a0,a5
20017690:	f1fff0ef          	jal	ra,200175ae <_metal_clock_append_to_callbacks>
20017694:	872a                	mv	a4,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:147
    clk->_pre_rate_change_callback =
20017696:	fec42783          	lw	a5,-20(s0)
2001769a:	c3d8                	sw	a4,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:149
}
2001769c:	0001                	nop
2001769e:	40f2                	lw	ra,28(sp)
200176a0:	4462                	lw	s0,24(sp)
200176a2:	6105                	addi	sp,sp,32
200176a4:	8082                	ret

200176a6 <metal_clock_register_post_rate_change_callback>:
metal_clock_register_post_rate_change_callback():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:159
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_post_rate_change_callback(struct metal_clock *clk,
                                               metal_clock_callback *cb) {
200176a6:	1101                	addi	sp,sp,-32
200176a8:	ce06                	sw	ra,28(sp)
200176aa:	cc22                	sw	s0,24(sp)
200176ac:	1000                	addi	s0,sp,32
200176ae:	fea42623          	sw	a0,-20(s0)
200176b2:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:161
    clk->_post_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_post_rate_change_callback, cb);
200176b6:	fec42783          	lw	a5,-20(s0)
200176ba:	479c                	lw	a5,8(a5)
200176bc:	fe842583          	lw	a1,-24(s0)
200176c0:	853e                	mv	a0,a5
200176c2:	eedff0ef          	jal	ra,200175ae <_metal_clock_append_to_callbacks>
200176c6:	872a                	mv	a4,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:160
    clk->_post_rate_change_callback =
200176c8:	fec42783          	lw	a5,-20(s0)
200176cc:	c798                	sw	a4,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:162
}
200176ce:	0001                	nop
200176d0:	40f2                	lw	ra,28(sp)
200176d2:	4462                	lw	s0,24(sp)
200176d4:	6105                	addi	sp,sp,32
200176d6:	8082                	ret

200176d8 <metal_cpu_get_timer>:
metal_cpu_get_timer():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:73
 * Get the value of the cycle count timer for a given CPU
 *
 * @param cpu The CPU device handle
 * @return The value of the CPU cycle count timer
 */
__inline__ unsigned long long metal_cpu_get_timer(struct metal_cpu *cpu) {
200176d8:	1101                	addi	sp,sp,-32
200176da:	ce06                	sw	ra,28(sp)
200176dc:	cc22                	sw	s0,24(sp)
200176de:	1000                	addi	s0,sp,32
200176e0:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:74
    return cpu->vtable->mcycle_get(cpu);
200176e4:	fec42783          	lw	a5,-20(s0)
200176e8:	439c                	lw	a5,0(a5)
200176ea:	439c                	lw	a5,0(a5)
200176ec:	fec42503          	lw	a0,-20(s0)
200176f0:	9782                	jalr	a5
200176f2:	87aa                	mv	a5,a0
200176f4:	882e                	mv	a6,a1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:75
}
200176f6:	853e                	mv	a0,a5
200176f8:	85c2                	mv	a1,a6
200176fa:	40f2                	lw	ra,28(sp)
200176fc:	4462                	lw	s0,24(sp)
200176fe:	6105                	addi	sp,sp,32
20017700:	8082                	ret

20017702 <metal_cpu_get_timebase>:
metal_cpu_get_timebase():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:84
 * Get the value of the timebase of the cycle count timer
 *
 * @param cpu The CPU device handle
 * @return The value of the cycle count timer timebase
 */
__inline__ unsigned long long metal_cpu_get_timebase(struct metal_cpu *cpu) {
20017702:	1101                	addi	sp,sp,-32
20017704:	ce06                	sw	ra,28(sp)
20017706:	cc22                	sw	s0,24(sp)
20017708:	1000                	addi	s0,sp,32
2001770a:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:85
    return cpu->vtable->timebase_get(cpu);
2001770e:	fec42783          	lw	a5,-20(s0)
20017712:	439c                	lw	a5,0(a5)
20017714:	43dc                	lw	a5,4(a5)
20017716:	fec42503          	lw	a0,-20(s0)
2001771a:	9782                	jalr	a5
2001771c:	87aa                	mv	a5,a0
2001771e:	882e                	mv	a6,a1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:86
}
20017720:	853e                	mv	a0,a5
20017722:	85c2                	mv	a1,a6
20017724:	40f2                	lw	ra,28(sp)
20017726:	4462                	lw	s0,24(sp)
20017728:	6105                	addi	sp,sp,32
2001772a:	8082                	ret

2001772c <metal_cpu_interrupt_controller>:
metal_cpu_interrupt_controller():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:224
 *
 * @param cpu The CPU device handle
 * @return The handle for the CPU interrupt controller
 */
__inline__ struct metal_interrupt *
metal_cpu_interrupt_controller(struct metal_cpu *cpu) {
2001772c:	1101                	addi	sp,sp,-32
2001772e:	ce06                	sw	ra,28(sp)
20017730:	cc22                	sw	s0,24(sp)
20017732:	1000                	addi	s0,sp,32
20017734:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:225
    return cpu->vtable->controller_interrupt(cpu);
20017738:	fec42783          	lw	a5,-20(s0)
2001773c:	439c                	lw	a5,0(a5)
2001773e:	57dc                	lw	a5,44(a5)
20017740:	fec42503          	lw	a0,-20(s0)
20017744:	9782                	jalr	a5
20017746:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:226
}
20017748:	853e                	mv	a0,a5
2001774a:	40f2                	lw	ra,28(sp)
2001774c:	4462                	lw	s0,24(sp)
2001774e:	6105                	addi	sp,sp,32
20017750:	8082                	ret

20017752 <metal_cpu_get>:
metal_cpu_get():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:7
/* SPDX-License-Identifier: Apache-2.0 */

#include <metal/cpu.h>
#include <metal/machine.h>

struct metal_cpu *metal_cpu_get(unsigned int hartid) {
20017752:	1101                	addi	sp,sp,-32
20017754:	ce22                	sw	s0,28(sp)
20017756:	1000                	addi	s0,sp,32
20017758:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:8
    if (hartid < __METAL_DT_MAX_HARTS) {
2001775c:	fec42783          	lw	a5,-20(s0)
20017760:	eb99                	bnez	a5,20017776 <metal_cpu_get+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:9
        return (struct metal_cpu *)__metal_cpu_table[hartid];
20017762:	800017b7          	lui	a5,0x80001
20017766:	fec42703          	lw	a4,-20(s0)
2001776a:	070a                	slli	a4,a4,0x2
2001776c:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20017770:	97ba                	add	a5,a5,a4
20017772:	439c                	lw	a5,0(a5)
20017774:	a011                	j	20017778 <metal_cpu_get+0x26>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:11
    }
    return NULL;
20017776:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:12
}
20017778:	853e                	mv	a0,a5
2001777a:	4472                	lw	s0,28(sp)
2001777c:	6105                	addi	sp,sp,32
2001777e:	8082                	ret

20017780 <metal_cpu_get_current_hartid>:
metal_cpu_get_current_hartid():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:14

int metal_cpu_get_current_hartid() {
20017780:	1101                	addi	sp,sp,-32
20017782:	ce22                	sw	s0,28(sp)
20017784:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:17
#ifdef __riscv
    int mhartid;
    __asm__ volatile("csrr %0, mhartid" : "=r"(mhartid));
20017786:	f14027f3          	csrr	a5,mhartid
2001778a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:18
    return mhartid;
2001778e:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:20
#endif
}
20017792:	853e                	mv	a0,a5
20017794:	4472                	lw	s0,28(sp)
20017796:	6105                	addi	sp,sp,32
20017798:	8082                	ret

2001779a <metal_i2c_init>:
metal_i2c_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:48
 * @param i2c The handle for the I2C device to initialize.
 * @param baud_rate The baud rate for the I2C device to operate at.
 * @param mode I2C operation mode.
 */
inline void metal_i2c_init(struct metal_i2c *i2c, unsigned int baud_rate,
                           metal_i2c_mode_t mode) {
2001779a:	1101                	addi	sp,sp,-32
2001779c:	ce06                	sw	ra,28(sp)
2001779e:	cc22                	sw	s0,24(sp)
200177a0:	1000                	addi	s0,sp,32
200177a2:	fea42623          	sw	a0,-20(s0)
200177a6:	feb42423          	sw	a1,-24(s0)
200177aa:	fec42223          	sw	a2,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:49
    i2c->vtable->init(i2c, baud_rate, mode);
200177ae:	fec42783          	lw	a5,-20(s0)
200177b2:	439c                	lw	a5,0(a5)
200177b4:	439c                	lw	a5,0(a5)
200177b6:	fe442603          	lw	a2,-28(s0)
200177ba:	fe842583          	lw	a1,-24(s0)
200177be:	fec42503          	lw	a0,-20(s0)
200177c2:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:50
}
200177c4:	0001                	nop
200177c6:	40f2                	lw	ra,28(sp)
200177c8:	4462                	lw	s0,24(sp)
200177ca:	6105                	addi	sp,sp,32
200177cc:	8082                	ret

200177ce <metal_i2c_write>:
metal_i2c_write():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:62
 * @param stop_bit Enable / Disable STOP condition.
 * @return 0 if the write succeeds.
 */
inline int metal_i2c_write(struct metal_i2c *i2c, unsigned int addr,
                           unsigned int len, unsigned char buf[],
                           metal_i2c_stop_bit_t stop_bit) {
200177ce:	7179                	addi	sp,sp,-48
200177d0:	d606                	sw	ra,44(sp)
200177d2:	d422                	sw	s0,40(sp)
200177d4:	1800                	addi	s0,sp,48
200177d6:	fea42623          	sw	a0,-20(s0)
200177da:	feb42423          	sw	a1,-24(s0)
200177de:	fec42223          	sw	a2,-28(s0)
200177e2:	fed42023          	sw	a3,-32(s0)
200177e6:	fce42e23          	sw	a4,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:63
    return i2c->vtable->write(i2c, addr, len, buf, stop_bit);
200177ea:	fec42783          	lw	a5,-20(s0)
200177ee:	439c                	lw	a5,0(a5)
200177f0:	43dc                	lw	a5,4(a5)
200177f2:	fdc42703          	lw	a4,-36(s0)
200177f6:	fe042683          	lw	a3,-32(s0)
200177fa:	fe442603          	lw	a2,-28(s0)
200177fe:	fe842583          	lw	a1,-24(s0)
20017802:	fec42503          	lw	a0,-20(s0)
20017806:	9782                	jalr	a5
20017808:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:64
}
2001780a:	853e                	mv	a0,a5
2001780c:	50b2                	lw	ra,44(sp)
2001780e:	5422                	lw	s0,40(sp)
20017810:	6145                	addi	sp,sp,48
20017812:	8082                	ret

20017814 <metal_i2c_read>:
metal_i2c_read():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:76
 * @param stop_bit Enable / Disable STOP condition.
 * @return 0 if the read succeeds.
 */
inline int metal_i2c_read(struct metal_i2c *i2c, unsigned int addr,
                          unsigned int len, unsigned char buf[],
                          metal_i2c_stop_bit_t stop_bit) {
20017814:	7179                	addi	sp,sp,-48
20017816:	d606                	sw	ra,44(sp)
20017818:	d422                	sw	s0,40(sp)
2001781a:	1800                	addi	s0,sp,48
2001781c:	fea42623          	sw	a0,-20(s0)
20017820:	feb42423          	sw	a1,-24(s0)
20017824:	fec42223          	sw	a2,-28(s0)
20017828:	fed42023          	sw	a3,-32(s0)
2001782c:	fce42e23          	sw	a4,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:77
    return i2c->vtable->read(i2c, addr, len, buf, stop_bit);
20017830:	fec42783          	lw	a5,-20(s0)
20017834:	439c                	lw	a5,0(a5)
20017836:	479c                	lw	a5,8(a5)
20017838:	fdc42703          	lw	a4,-36(s0)
2001783c:	fe042683          	lw	a3,-32(s0)
20017840:	fe442603          	lw	a2,-28(s0)
20017844:	fe842583          	lw	a1,-24(s0)
20017848:	fec42503          	lw	a0,-20(s0)
2001784c:	9782                	jalr	a5
2001784e:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:78
}
20017850:	853e                	mv	a0,a5
20017852:	50b2                	lw	ra,44(sp)
20017854:	5422                	lw	s0,40(sp)
20017856:	6145                	addi	sp,sp,48
20017858:	8082                	ret

2001785a <metal_i2c_set_baud_rate>:
metal_i2c_set_baud_rate():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:108
/*! @brief Set the current baud rate of the I2C device.
 * @param i2c The handle for the I2C device.
 * @param baud_rate The desired baud rate of the I2C device.
 * @return 0 If the baud rate is successfully changed.
 */
inline int metal_i2c_set_baud_rate(struct metal_i2c *i2c, int baud_rate) {
2001785a:	1101                	addi	sp,sp,-32
2001785c:	ce06                	sw	ra,28(sp)
2001785e:	cc22                	sw	s0,24(sp)
20017860:	1000                	addi	s0,sp,32
20017862:	fea42623          	sw	a0,-20(s0)
20017866:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:109
    return i2c->vtable->set_baud_rate(i2c, baud_rate);
2001786a:	fec42783          	lw	a5,-20(s0)
2001786e:	439c                	lw	a5,0(a5)
20017870:	4bd8                	lw	a4,20(a5)
20017872:	fe842783          	lw	a5,-24(s0)
20017876:	85be                	mv	a1,a5
20017878:	fec42503          	lw	a0,-20(s0)
2001787c:	9702                	jalr	a4
2001787e:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:110
}
20017880:	853e                	mv	a0,a5
20017882:	40f2                	lw	ra,28(sp)
20017884:	4462                	lw	s0,24(sp)
20017886:	6105                	addi	sp,sp,32
20017888:	8082                	ret

2001788a <metal_i2c_get_device>:
metal_i2c_get_device():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/i2c.c:21
                                     unsigned char txbuf[], unsigned int txlen,
                                     unsigned char rxbuf[], unsigned int rxlen);
extern inline int metal_i2c_get_baud_rate(struct metal_i2c *i2c);
extern inline int metal_i2c_set_baud_rate(struct metal_i2c *i2c, int baud_rate);

struct metal_i2c *metal_i2c_get_device(unsigned int device_num) {
2001788a:	1101                	addi	sp,sp,-32
2001788c:	ce22                	sw	s0,28(sp)
2001788e:	1000                	addi	s0,sp,32
20017890:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/i2c.c:23
#if __METAL_DT_MAX_I2CS > 0
    if (device_num < __METAL_DT_MAX_I2CS) {
20017894:	fec42783          	lw	a5,-20(s0)
20017898:	eb99                	bnez	a5,200178ae <metal_i2c_get_device+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/i2c.c:24
        return (struct metal_i2c *)__metal_i2c_table[device_num];
2001789a:	800017b7          	lui	a5,0x80001
2001789e:	fec42703          	lw	a4,-20(s0)
200178a2:	070a                	slli	a4,a4,0x2
200178a4:	ac478793          	addi	a5,a5,-1340 # 80000ac4 <metal_segment_heap_target_end+0xfffff304>
200178a8:	97ba                	add	a5,a5,a4
200178aa:	439c                	lw	a5,0(a5)
200178ac:	a011                	j	200178b0 <metal_i2c_get_device+0x26>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/i2c.c:27
    }
#endif
    return NULL;
200178ae:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/i2c.c:28
}
200178b0:	853e                	mv	a0,a5
200178b2:	4472                	lw	s0,28(sp)
200178b4:	6105                	addi	sp,sp,32
200178b6:	8082                	ret

200178b8 <metal_shutdown>:
metal_shutdown():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/shutdown.c:17
    __metal_shutdown_exit(__METAL_DT_SHUTDOWN_HANDLE, code);
}
#else
#pragma message(                                                               \
    "There is no defined shutdown mechanism, metal_shutdown() will spin.")
void metal_shutdown(int code) {
200178b8:	1101                	addi	sp,sp,-32
200178ba:	ce22                	sw	s0,28(sp)
200178bc:	1000                	addi	s0,sp,32
200178be:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/shutdown.c:19 (discriminator 1)
    while (1) {
        __asm__ volatile("nop");
200178c2:	0001                	nop
200178c4:	bffd                	j	200178c2 <metal_shutdown+0xa>

200178c6 <metal_gettimeofday>:
metal_gettimeofday():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:9
#include <metal/time.h>
#include <metal/timer.h>

#include <stddef.h>

int metal_gettimeofday(struct timeval *tp, void *tzp) {
200178c6:	7139                	addi	sp,sp,-64
200178c8:	de06                	sw	ra,60(sp)
200178ca:	dc22                	sw	s0,56(sp)
200178cc:	da4a                	sw	s2,52(sp)
200178ce:	d84e                	sw	s3,48(sp)
200178d0:	0080                	addi	s0,sp,64
200178d2:	fca42623          	sw	a0,-52(s0)
200178d6:	fcb42423          	sw	a1,-56(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:12
    int rv;
    unsigned long long mcc, timebase;
    rv = metal_timer_get_cyclecount(0, &mcc);
200178da:	fe040793          	addi	a5,s0,-32
200178de:	85be                	mv	a1,a5
200178e0:	4501                	li	a0,0
200178e2:	2cc9                	jal	20017bb4 <metal_timer_get_cyclecount>
200178e4:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:13
    if (rv != 0) {
200178e8:	fec42783          	lw	a5,-20(s0)
200178ec:	c399                	beqz	a5,200178f2 <metal_gettimeofday+0x2c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:14
        return -1;
200178ee:	57fd                	li	a5,-1
200178f0:	a07d                	j	2001799e <metal_gettimeofday+0xd8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:16
    }
    rv = metal_timer_get_timebase_frequency(0, &timebase);
200178f2:	fd840793          	addi	a5,s0,-40
200178f6:	85be                	mv	a1,a5
200178f8:	4501                	li	a0,0
200178fa:	2611                	jal	20017bfe <metal_timer_get_timebase_frequency>
200178fc:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:17
    if (rv != 0) {
20017900:	fec42783          	lw	a5,-20(s0)
20017904:	c399                	beqz	a5,2001790a <metal_gettimeofday+0x44>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:18
        return -1;
20017906:	57fd                	li	a5,-1
20017908:	a859                	j	2001799e <metal_gettimeofday+0xd8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:20
    }
    tp->tv_sec = mcc / timebase;
2001790a:	fe042783          	lw	a5,-32(s0)
2001790e:	fe442803          	lw	a6,-28(s0)
20017912:	fd842683          	lw	a3,-40(s0)
20017916:	fdc42703          	lw	a4,-36(s0)
2001791a:	8636                	mv	a2,a3
2001791c:	86ba                	mv	a3,a4
2001791e:	853e                	mv	a0,a5
20017920:	85c2                	mv	a1,a6
20017922:	25f5                	jal	2001800e <__udivdi3>
20017924:	87aa                	mv	a5,a0
20017926:	882e                	mv	a6,a1
20017928:	fcc42703          	lw	a4,-52(s0)
2001792c:	c31c                	sw	a5,0(a4)
2001792e:	01072223          	sw	a6,4(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:21
    tp->tv_usec = mcc % timebase * 1000000 / timebase;
20017932:	fe042783          	lw	a5,-32(s0)
20017936:	fe442803          	lw	a6,-28(s0)
2001793a:	fd842683          	lw	a3,-40(s0)
2001793e:	fdc42703          	lw	a4,-36(s0)
20017942:	8636                	mv	a2,a3
20017944:	86ba                	mv	a3,a4
20017946:	853e                	mv	a0,a5
20017948:	85c2                	mv	a1,a6
2001794a:	223000ef          	jal	ra,2001836c <__umoddi3>
2001794e:	87aa                	mv	a5,a0
20017950:	882e                	mv	a6,a1
20017952:	000f4737          	lui	a4,0xf4
20017956:	24070713          	addi	a4,a4,576 # f4240 <__heap_size+0xf3a40>
2001795a:	02e806b3          	mul	a3,a6,a4
2001795e:	4701                	li	a4,0
20017960:	02e78733          	mul	a4,a5,a4
20017964:	96ba                	add	a3,a3,a4
20017966:	000f4737          	lui	a4,0xf4
2001796a:	24070713          	addi	a4,a4,576 # f4240 <__heap_size+0xf3a40>
2001796e:	02e78633          	mul	a2,a5,a4
20017972:	02e7b9b3          	mulhu	s3,a5,a4
20017976:	8932                	mv	s2,a2
20017978:	013687b3          	add	a5,a3,s3
2001797c:	89be                	mv	s3,a5
2001797e:	fd842783          	lw	a5,-40(s0)
20017982:	fdc42803          	lw	a6,-36(s0)
20017986:	863e                	mv	a2,a5
20017988:	86c2                	mv	a3,a6
2001798a:	854a                	mv	a0,s2
2001798c:	85ce                	mv	a1,s3
2001798e:	2541                	jal	2001800e <__udivdi3>
20017990:	87aa                	mv	a5,a0
20017992:	882e                	mv	a6,a1
20017994:	873e                	mv	a4,a5
20017996:	fcc42783          	lw	a5,-52(s0)
2001799a:	c798                	sw	a4,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:22
    return 0;
2001799c:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:23 (discriminator 1)
}
2001799e:	853e                	mv	a0,a5
200179a0:	50f2                	lw	ra,60(sp)
200179a2:	5462                	lw	s0,56(sp)
200179a4:	5952                	lw	s2,52(sp)
200179a6:	59c2                	lw	s3,48(sp)
200179a8:	6121                	addi	sp,sp,64
200179aa:	8082                	ret

200179ac <metal_time>:
metal_time():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:25

time_t metal_time(void) {
200179ac:	1101                	addi	sp,sp,-32
200179ae:	ce06                	sw	ra,28(sp)
200179b0:	cc22                	sw	s0,24(sp)
200179b2:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:28
    struct timeval now;

    if (metal_gettimeofday(&now, NULL) < 0)
200179b4:	fe040793          	addi	a5,s0,-32
200179b8:	4581                	li	a1,0
200179ba:	853e                	mv	a0,a5
200179bc:	f0bff0ef          	jal	ra,200178c6 <metal_gettimeofday>
200179c0:	87aa                	mv	a5,a0
200179c2:	0007d863          	bgez	a5,200179d2 <metal_time+0x26>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:29
        now.tv_sec = (time_t)-1;
200179c6:	57fd                	li	a5,-1
200179c8:	587d                	li	a6,-1
200179ca:	fef42023          	sw	a5,-32(s0)
200179ce:	ff042223          	sw	a6,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:31

    return now.tv_sec;
200179d2:	fe042783          	lw	a5,-32(s0)
200179d6:	fe442803          	lw	a6,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:32
}
200179da:	853e                	mv	a0,a5
200179dc:	85c2                	mv	a1,a6
200179de:	40f2                	lw	ra,28(sp)
200179e0:	4462                	lw	s0,24(sp)
200179e2:	6105                	addi	sp,sp,32
200179e4:	8082                	ret

200179e6 <metal_uart_init>:
metal_uart_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:59
 more than once.
 *
 * @param uart The UART device handle
 * @param baud_rate the baud rate to set the UART to
 */
__inline__ void metal_uart_init(struct metal_uart *uart, int baud_rate) {
200179e6:	1101                	addi	sp,sp,-32
200179e8:	ce06                	sw	ra,28(sp)
200179ea:	cc22                	sw	s0,24(sp)
200179ec:	1000                	addi	s0,sp,32
200179ee:	fea42623          	sw	a0,-20(s0)
200179f2:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:60
    uart->vtable->init(uart, baud_rate);
200179f6:	fec42783          	lw	a5,-20(s0)
200179fa:	439c                	lw	a5,0(a5)
200179fc:	439c                	lw	a5,0(a5)
200179fe:	fe842583          	lw	a1,-24(s0)
20017a02:	fec42503          	lw	a0,-20(s0)
20017a06:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:61
}
20017a08:	0001                	nop
20017a0a:	40f2                	lw	ra,28(sp)
20017a0c:	4462                	lw	s0,24(sp)
20017a0e:	6105                	addi	sp,sp,32
20017a10:	8082                	ret

20017a12 <metal_uart_putc>:
metal_uart_putc():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:69
 * @brief Output a character over the UART
 * @param uart The UART device handle
 * @param c The character to send over the UART
 * @return 0 upon success
 */
__inline__ int metal_uart_putc(struct metal_uart *uart, int c) {
20017a12:	1101                	addi	sp,sp,-32
20017a14:	ce06                	sw	ra,28(sp)
20017a16:	cc22                	sw	s0,24(sp)
20017a18:	1000                	addi	s0,sp,32
20017a1a:	fea42623          	sw	a0,-20(s0)
20017a1e:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:70
    return uart->vtable->putc(uart, c);
20017a22:	fec42783          	lw	a5,-20(s0)
20017a26:	439c                	lw	a5,0(a5)
20017a28:	43dc                	lw	a5,4(a5)
20017a2a:	fe842583          	lw	a1,-24(s0)
20017a2e:	fec42503          	lw	a0,-20(s0)
20017a32:	9782                	jalr	a5
20017a34:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:71
}
20017a36:	853e                	mv	a0,a5
20017a38:	40f2                	lw	ra,28(sp)
20017a3a:	4462                	lw	s0,24(sp)
20017a3c:	6105                	addi	sp,sp,32
20017a3e:	8082                	ret

20017a40 <metal_uart_set_baud_rate>:
metal_uart_set_baud_rate():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:111
 * @param uart The UART device handle
 * @param baud_rate The baud rate to configure
 * @return the new baud rate of the UART
 */
__inline__ int metal_uart_set_baud_rate(struct metal_uart *uart,
                                        int baud_rate) {
20017a40:	1101                	addi	sp,sp,-32
20017a42:	ce06                	sw	ra,28(sp)
20017a44:	cc22                	sw	s0,24(sp)
20017a46:	1000                	addi	s0,sp,32
20017a48:	fea42623          	sw	a0,-20(s0)
20017a4c:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:112
    return uart->vtable->set_baud_rate(uart, baud_rate);
20017a50:	fec42783          	lw	a5,-20(s0)
20017a54:	439c                	lw	a5,0(a5)
20017a56:	4bdc                	lw	a5,20(a5)
20017a58:	fe842583          	lw	a1,-24(s0)
20017a5c:	fec42503          	lw	a0,-20(s0)
20017a60:	9782                	jalr	a5
20017a62:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:113
}
20017a64:	853e                	mv	a0,a5
20017a66:	40f2                	lw	ra,28(sp)
20017a68:	4462                	lw	s0,24(sp)
20017a6a:	6105                	addi	sp,sp,32
20017a6c:	8082                	ret
	...

20017a80 <__metal_vector_table>:
IRQ_0():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:96
#endif
.option norvc
.global __metal_vector_table
__metal_vector_table:
IRQ_0:
        j metal_interrupt_vector_handler
20017a80:	dfafb06f          	j	2001307a <metal_interrupt_vector_handler>

20017a84 <IRQ_1>:
IRQ_1():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:98
IRQ_1:
        j metal_interrupt_vector_handler
20017a84:	df6fb06f          	j	2001307a <metal_interrupt_vector_handler>

20017a88 <IRQ_2>:
IRQ_2():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:100
IRQ_2:
        j metal_interrupt_vector_handler
20017a88:	df2fb06f          	j	2001307a <metal_interrupt_vector_handler>

20017a8c <IRQ_3>:
IRQ_3():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:102
IRQ_3:
        j metal_software_interrupt_vector_handler
20017a8c:	e1cfb06f          	j	200130a8 <metal_software_interrupt_vector_handler>

20017a90 <IRQ_4>:
IRQ_4():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:104
IRQ_4:
        j metal_interrupt_vector_handler
20017a90:	deafb06f          	j	2001307a <metal_interrupt_vector_handler>

20017a94 <IRQ_5>:
IRQ_5():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:106
IRQ_5:
        j metal_interrupt_vector_handler
20017a94:	de6fb06f          	j	2001307a <metal_interrupt_vector_handler>

20017a98 <IRQ_6>:
IRQ_6():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:108
IRQ_6:
        j metal_interrupt_vector_handler
20017a98:	de2fb06f          	j	2001307a <metal_interrupt_vector_handler>

20017a9c <IRQ_7>:
IRQ_7():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:110
IRQ_7:
        j metal_timer_interrupt_vector_handler
20017a9c:	f06fb06f          	j	200131a2 <metal_timer_interrupt_vector_handler>

20017aa0 <IRQ_8>:
IRQ_8():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:112
IRQ_8:
        j metal_interrupt_vector_handler
20017aa0:	ddafb06f          	j	2001307a <metal_interrupt_vector_handler>

20017aa4 <IRQ_9>:
IRQ_9():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:114
IRQ_9:
        j metal_interrupt_vector_handler
20017aa4:	dd6fb06f          	j	2001307a <metal_interrupt_vector_handler>

20017aa8 <IRQ_10>:
IRQ_10():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:116
IRQ_10:
        j metal_interrupt_vector_handler
20017aa8:	dd2fb06f          	j	2001307a <metal_interrupt_vector_handler>

20017aac <IRQ_11>:
IRQ_11():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:118
IRQ_11:
        j metal_interrupt_vector_handler
20017aac:	dcefb06f          	j	2001307a <metal_interrupt_vector_handler>

20017ab0 <IRQ_12>:
IRQ_12():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:120
IRQ_12:
        j metal_interrupt_vector_handler
20017ab0:	dcafb06f          	j	2001307a <metal_interrupt_vector_handler>

20017ab4 <IRQ_13>:
IRQ_13():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:122
IRQ_13:
        j metal_interrupt_vector_handler
20017ab4:	dc6fb06f          	j	2001307a <metal_interrupt_vector_handler>

20017ab8 <IRQ_14>:
IRQ_14():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:124
IRQ_14:
        j metal_interrupt_vector_handler
20017ab8:	dc2fb06f          	j	2001307a <metal_interrupt_vector_handler>

20017abc <IRQ_15>:
IRQ_15():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:126
IRQ_15:
        j metal_interrupt_vector_handler
20017abc:	dbefb06f          	j	2001307a <metal_interrupt_vector_handler>

20017ac0 <IRQ_LC0>:
IRQ_LC0():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:128
IRQ_LC0:
        j metal_lc0_interrupt_vector_handler
20017ac0:	a39fb06f          	j	200134f8 <metal_lc0_interrupt_vector_handler>

20017ac4 <IRQ_LC1>:
IRQ_LC1():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:130
IRQ_LC1:
        j metal_lc1_interrupt_vector_handler
20017ac4:	acbfb06f          	j	2001358e <metal_lc1_interrupt_vector_handler>

20017ac8 <IRQ_LC2>:
IRQ_LC2():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:132
IRQ_LC2:
        j metal_lc2_interrupt_vector_handler
20017ac8:	b5dfb06f          	j	20013624 <metal_lc2_interrupt_vector_handler>

20017acc <IRQ_LC3>:
IRQ_LC3():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:134
IRQ_LC3:
        j metal_lc3_interrupt_vector_handler
20017acc:	beffb06f          	j	200136ba <metal_lc3_interrupt_vector_handler>

20017ad0 <IRQ_LC4>:
IRQ_LC4():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:136
IRQ_LC4:
        j metal_lc4_interrupt_vector_handler
20017ad0:	c81fb06f          	j	20013750 <metal_lc4_interrupt_vector_handler>

20017ad4 <IRQ_LC5>:
IRQ_LC5():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:138
IRQ_LC5:
        j metal_lc5_interrupt_vector_handler
20017ad4:	d13fb06f          	j	200137e6 <metal_lc5_interrupt_vector_handler>

20017ad8 <IRQ_LC6>:
IRQ_LC6():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:140
IRQ_LC6:
        j metal_lc6_interrupt_vector_handler
20017ad8:	da5fb06f          	j	2001387c <metal_lc6_interrupt_vector_handler>

20017adc <IRQ_LC7>:
IRQ_LC7():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:142
IRQ_LC7:
        j metal_lc7_interrupt_vector_handler
20017adc:	e37fb06f          	j	20013912 <metal_lc7_interrupt_vector_handler>

20017ae0 <IRQ_LC8>:
IRQ_LC8():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:144
IRQ_LC8:
        j metal_lc8_interrupt_vector_handler
20017ae0:	ec9fb06f          	j	200139a8 <metal_lc8_interrupt_vector_handler>

20017ae4 <IRQ_LC9>:
IRQ_LC9():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:146
IRQ_LC9:
        j metal_lc9_interrupt_vector_handler
20017ae4:	f5bfb06f          	j	20013a3e <metal_lc9_interrupt_vector_handler>

20017ae8 <IRQ_LC10>:
IRQ_LC10():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:148
IRQ_LC10:
        j metal_lc10_interrupt_vector_handler
20017ae8:	fedfb06f          	j	20013ad4 <metal_lc10_interrupt_vector_handler>

20017aec <IRQ_LC11>:
IRQ_LC11():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:150
IRQ_LC11:
        j metal_lc11_interrupt_vector_handler
20017aec:	87efc06f          	j	20013b6a <metal_lc11_interrupt_vector_handler>

20017af0 <IRQ_LC12>:
IRQ_LC12():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:152
IRQ_LC12:
        j metal_lc12_interrupt_vector_handler
20017af0:	910fc06f          	j	20013c00 <metal_lc12_interrupt_vector_handler>

20017af4 <IRQ_LC13>:
IRQ_LC13():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:154
IRQ_LC13:
        j metal_lc13_interrupt_vector_handler
20017af4:	9a2fc06f          	j	20013c96 <metal_lc13_interrupt_vector_handler>

20017af8 <IRQ_LC14>:
IRQ_LC14():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:156
IRQ_LC14:
        j metal_lc14_interrupt_vector_handler
20017af8:	a34fc06f          	j	20013d2c <metal_lc14_interrupt_vector_handler>

20017afc <IRQ_LC15>:
IRQ_LC15():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:158
IRQ_LC15:
        j metal_lc15_interrupt_vector_handler
20017afc:	ac6fc06f          	j	20013dc2 <metal_lc15_interrupt_vector_handler>

20017b00 <__metal_driver_fixed_clock_rate>:
__metal_driver_fixed_clock_rate():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:208
{
20017b00:	1101                	addi	sp,sp,-32
20017b02:	ce22                	sw	s0,28(sp)
20017b04:	1000                	addi	s0,sp,32
20017b06:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:209
	if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_0) {
20017b0a:	fec42703          	lw	a4,-20(s0)
20017b0e:	800007b7          	lui	a5,0x80000
20017b12:	06078793          	addi	a5,a5,96 # 80000060 <metal_segment_heap_target_end+0xffffe8a0>
20017b16:	00f71763          	bne	a4,a5,20017b24 <__metal_driver_fixed_clock_rate+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:210
		return METAL_FIXED_CLOCK_0_CLOCK_FREQUENCY;
20017b1a:	00f427b7          	lui	a5,0xf42
20017b1e:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
20017b22:	a099                	j	20017b68 <__metal_driver_fixed_clock_rate+0x68>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:212
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_2) {
20017b24:	fec42703          	lw	a4,-20(s0)
20017b28:	800007b7          	lui	a5,0x80000
20017b2c:	06c78793          	addi	a5,a5,108 # 8000006c <metal_segment_heap_target_end+0xffffe8ac>
20017b30:	00f71763          	bne	a4,a5,20017b3e <__metal_driver_fixed_clock_rate+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:213
		return METAL_FIXED_CLOCK_2_CLOCK_FREQUENCY;
20017b34:	044aa7b7          	lui	a5,0x44aa
20017b38:	20078793          	addi	a5,a5,512 # 44aa200 <__heap_size+0x44a9a00>
20017b3c:	a035                	j	20017b68 <__metal_driver_fixed_clock_rate+0x68>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:215
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_5) {
20017b3e:	fec42703          	lw	a4,-20(s0)
20017b42:	800007b7          	lui	a5,0x80000
20017b46:	07878793          	addi	a5,a5,120 # 80000078 <metal_segment_heap_target_end+0xffffe8b8>
20017b4a:	00f71463          	bne	a4,a5,20017b52 <__metal_driver_fixed_clock_rate+0x52>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:216
		return METAL_FIXED_CLOCK_5_CLOCK_FREQUENCY;
20017b4e:	67a1                	lui	a5,0x8
20017b50:	a821                	j	20017b68 <__metal_driver_fixed_clock_rate+0x68>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:218
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_6) {
20017b52:	fec42703          	lw	a4,-20(s0)
20017b56:	800007b7          	lui	a5,0x80000
20017b5a:	08478793          	addi	a5,a5,132 # 80000084 <metal_segment_heap_target_end+0xffffe8c4>
20017b5e:	00f71463          	bne	a4,a5,20017b66 <__metal_driver_fixed_clock_rate+0x66>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:219
		return METAL_FIXED_CLOCK_6_CLOCK_FREQUENCY;
20017b62:	67a1                	lui	a5,0x8
20017b64:	a011                	j	20017b68 <__metal_driver_fixed_clock_rate+0x68>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:222
		return 0;
20017b66:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:224
}
20017b68:	853e                	mv	a0,a5
20017b6a:	4472                	lw	s0,28(sp)
20017b6c:	6105                	addi	sp,sp,32
20017b6e:	8082                	ret

20017b70 <__metal_driver_fixed_clock_get_rate_hz>:
__metal_driver_fixed_clock_get_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/fixed-clock.c:12

#include <metal/drivers/fixed-clock.h>
#include <metal/machine.h>
#include <stddef.h>

long __metal_driver_fixed_clock_get_rate_hz(const struct metal_clock *gclk) {
20017b70:	1101                	addi	sp,sp,-32
20017b72:	ce06                	sw	ra,28(sp)
20017b74:	cc22                	sw	s0,24(sp)
20017b76:	1000                	addi	s0,sp,32
20017b78:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/fixed-clock.c:13
    return __metal_driver_fixed_clock_rate(gclk);
20017b7c:	fec42503          	lw	a0,-20(s0)
20017b80:	f81ff0ef          	jal	ra,20017b00 <__metal_driver_fixed_clock_rate>
20017b84:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/fixed-clock.c:14
}
20017b86:	853e                	mv	a0,a5
20017b88:	40f2                	lw	ra,28(sp)
20017b8a:	4462                	lw	s0,24(sp)
20017b8c:	6105                	addi	sp,sp,32
20017b8e:	8082                	ret

20017b90 <__metal_driver_fixed_clock_set_rate_hz>:
__metal_driver_fixed_clock_set_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/fixed-clock.c:17

long __metal_driver_fixed_clock_set_rate_hz(struct metal_clock *gclk,
                                            long target_hz) {
20017b90:	1101                	addi	sp,sp,-32
20017b92:	ce06                	sw	ra,28(sp)
20017b94:	cc22                	sw	s0,24(sp)
20017b96:	1000                	addi	s0,sp,32
20017b98:	fea42623          	sw	a0,-20(s0)
20017b9c:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/fixed-clock.c:18
    return __metal_driver_fixed_clock_get_rate_hz(gclk);
20017ba0:	fec42503          	lw	a0,-20(s0)
20017ba4:	fcdff0ef          	jal	ra,20017b70 <__metal_driver_fixed_clock_get_rate_hz>
20017ba8:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/fixed-clock.c:19
}
20017baa:	853e                	mv	a0,a5
20017bac:	40f2                	lw	ra,28(sp)
20017bae:	4462                	lw	s0,24(sp)
20017bb0:	6105                	addi	sp,sp,32
20017bb2:	8082                	ret

20017bb4 <metal_timer_get_cyclecount>:
metal_timer_get_cyclecount():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:15
#endif

#if defined(__METAL_DT_MAX_HARTS)
/* This implementation serves as a small shim that interfaces with the first
 * timer on a system. */
int metal_timer_get_cyclecount(int hartid, unsigned long long *mcc) {
20017bb4:	7179                	addi	sp,sp,-48
20017bb6:	d606                	sw	ra,44(sp)
20017bb8:	d422                	sw	s0,40(sp)
20017bba:	1800                	addi	s0,sp,48
20017bbc:	fca42e23          	sw	a0,-36(s0)
20017bc0:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:16
    struct metal_cpu *cpu = metal_cpu_get(hartid);
20017bc4:	fdc42783          	lw	a5,-36(s0)
20017bc8:	853e                	mv	a0,a5
20017bca:	b89ff0ef          	jal	ra,20017752 <metal_cpu_get>
20017bce:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:18

    if (cpu) {
20017bd2:	fec42783          	lw	a5,-20(s0)
20017bd6:	cf91                	beqz	a5,20017bf2 <metal_timer_get_cyclecount+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:19
        *mcc = metal_cpu_get_timer(cpu);
20017bd8:	fec42503          	lw	a0,-20(s0)
20017bdc:	afdff0ef          	jal	ra,200176d8 <metal_cpu_get_timer>
20017be0:	87aa                	mv	a5,a0
20017be2:	882e                	mv	a6,a1
20017be4:	fd842703          	lw	a4,-40(s0)
20017be8:	c31c                	sw	a5,0(a4)
20017bea:	01072223          	sw	a6,4(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:20
        return 0;
20017bee:	4781                	li	a5,0
20017bf0:	a011                	j	20017bf4 <metal_timer_get_cyclecount+0x40>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:22
    }
    return -1;
20017bf2:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:23
}
20017bf4:	853e                	mv	a0,a5
20017bf6:	50b2                	lw	ra,44(sp)
20017bf8:	5422                	lw	s0,40(sp)
20017bfa:	6145                	addi	sp,sp,48
20017bfc:	8082                	ret

20017bfe <metal_timer_get_timebase_frequency>:
metal_timer_get_timebase_frequency():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:26

int metal_timer_get_timebase_frequency(int hartid,
                                       unsigned long long *timebase) {
20017bfe:	7179                	addi	sp,sp,-48
20017c00:	d606                	sw	ra,44(sp)
20017c02:	d422                	sw	s0,40(sp)
20017c04:	1800                	addi	s0,sp,48
20017c06:	fca42e23          	sw	a0,-36(s0)
20017c0a:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:27
    struct metal_cpu *cpu = metal_cpu_get(hartid);
20017c0e:	fdc42783          	lw	a5,-36(s0)
20017c12:	853e                	mv	a0,a5
20017c14:	b3fff0ef          	jal	ra,20017752 <metal_cpu_get>
20017c18:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:29

    if (cpu) {
20017c1c:	fec42783          	lw	a5,-20(s0)
20017c20:	cf91                	beqz	a5,20017c3c <metal_timer_get_timebase_frequency+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:30
        *timebase = metal_cpu_get_timebase(cpu);
20017c22:	fec42503          	lw	a0,-20(s0)
20017c26:	addff0ef          	jal	ra,20017702 <metal_cpu_get_timebase>
20017c2a:	87aa                	mv	a5,a0
20017c2c:	882e                	mv	a6,a1
20017c2e:	fd842703          	lw	a4,-40(s0)
20017c32:	c31c                	sw	a5,0(a4)
20017c34:	01072223          	sw	a6,4(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:31
        return 0;
20017c38:	4781                	li	a5,0
20017c3a:	a011                	j	20017c3e <metal_timer_get_timebase_frequency+0x40>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:33
    }
    return -1;
20017c3c:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:34
}
20017c3e:	853e                	mv	a0,a5
20017c40:	50b2                	lw	ra,44(sp)
20017c42:	5422                	lw	s0,40(sp)
20017c44:	6145                	addi	sp,sp,48
20017c46:	8082                	ret

20017c48 <_close>:
_close():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_close.c:3
#include <errno.h>

int _close(int file) {
20017c48:	1101                	addi	sp,sp,-32
20017c4a:	ce06                	sw	ra,28(sp)
20017c4c:	cc22                	sw	s0,24(sp)
20017c4e:	1000                	addi	s0,sp,32
20017c50:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_close.c:4
    errno = ENOSYS;
20017c54:	2a51                	jal	20017de8 <__errno>
20017c56:	872a                	mv	a4,a0
20017c58:	05800793          	li	a5,88
20017c5c:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_close.c:5
    return -1;
20017c5e:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_close.c:6
}
20017c60:	853e                	mv	a0,a5
20017c62:	40f2                	lw	ra,28(sp)
20017c64:	4462                	lw	s0,24(sp)
20017c66:	6105                	addi	sp,sp,32
20017c68:	8082                	ret

20017c6a <_fstat>:
_fstat():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_fstat.c:4
#include <errno.h>
#include <sys/stat.h>

int _fstat(int file, struct stat *st) {
20017c6a:	1101                	addi	sp,sp,-32
20017c6c:	ce06                	sw	ra,28(sp)
20017c6e:	cc22                	sw	s0,24(sp)
20017c70:	1000                	addi	s0,sp,32
20017c72:	fea42623          	sw	a0,-20(s0)
20017c76:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_fstat.c:5
    errno = -ENOSYS;
20017c7a:	22bd                	jal	20017de8 <__errno>
20017c7c:	872a                	mv	a4,a0
20017c7e:	fa800793          	li	a5,-88
20017c82:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_fstat.c:6
    return -1;
20017c84:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_fstat.c:7
}
20017c86:	853e                	mv	a0,a5
20017c88:	40f2                	lw	ra,28(sp)
20017c8a:	4462                	lw	s0,24(sp)
20017c8c:	6105                	addi	sp,sp,32
20017c8e:	8082                	ret

20017c90 <_isatty>:
_isatty():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_isatty.c:3
#include <unistd.h>

int _isatty(int file) { return (file == STDOUT_FILENO); }
20017c90:	1101                	addi	sp,sp,-32
20017c92:	ce22                	sw	s0,28(sp)
20017c94:	1000                	addi	s0,sp,32
20017c96:	fea42623          	sw	a0,-20(s0)
20017c9a:	fec42783          	lw	a5,-20(s0)
20017c9e:	17fd                	addi	a5,a5,-1
20017ca0:	0017b793          	seqz	a5,a5
20017ca4:	0ff7f793          	andi	a5,a5,255
20017ca8:	853e                	mv	a0,a5
20017caa:	4472                	lw	s0,28(sp)
20017cac:	6105                	addi	sp,sp,32
20017cae:	8082                	ret

20017cb0 <_lseek>:
_lseek():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_lseek.c:4
#include <errno.h>
#include <sys/types.h>

off_t _lseek(int file, off_t ptr, int dir) {
20017cb0:	1101                	addi	sp,sp,-32
20017cb2:	ce06                	sw	ra,28(sp)
20017cb4:	cc22                	sw	s0,24(sp)
20017cb6:	1000                	addi	s0,sp,32
20017cb8:	fea42623          	sw	a0,-20(s0)
20017cbc:	feb42423          	sw	a1,-24(s0)
20017cc0:	fec42223          	sw	a2,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_lseek.c:5
    errno = ENOSYS;
20017cc4:	2215                	jal	20017de8 <__errno>
20017cc6:	872a                	mv	a4,a0
20017cc8:	05800793          	li	a5,88
20017ccc:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_lseek.c:6
    return -1;
20017cce:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_lseek.c:7
}
20017cd0:	853e                	mv	a0,a5
20017cd2:	40f2                	lw	ra,28(sp)
20017cd4:	4462                	lw	s0,24(sp)
20017cd6:	6105                	addi	sp,sp,32
20017cd8:	8082                	ret

20017cda <_read>:
_read():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_read.c:4
#include <errno.h>
#include <sys/types.h>

ssize_t _read(int file, void *ptr, size_t len) {
20017cda:	1101                	addi	sp,sp,-32
20017cdc:	ce06                	sw	ra,28(sp)
20017cde:	cc22                	sw	s0,24(sp)
20017ce0:	1000                	addi	s0,sp,32
20017ce2:	fea42623          	sw	a0,-20(s0)
20017ce6:	feb42423          	sw	a1,-24(s0)
20017cea:	fec42223          	sw	a2,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_read.c:5
    errno = ENOSYS;
20017cee:	28ed                	jal	20017de8 <__errno>
20017cf0:	872a                	mv	a4,a0
20017cf2:	05800793          	li	a5,88
20017cf6:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_read.c:6
    return -1;
20017cf8:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_read.c:7
}
20017cfa:	853e                	mv	a0,a5
20017cfc:	40f2                	lw	ra,28(sp)
20017cfe:	4462                	lw	s0,24(sp)
20017d00:	6105                	addi	sp,sp,32
20017d02:	8082                	ret

20017d04 <_sbrk>:
_sbrk():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:24
int _brk(void *addr) {
    __brk = addr;
    return 0;
}

char *_sbrk(ptrdiff_t incr) {
20017d04:	7179                	addi	sp,sp,-48
20017d06:	d606                	sw	ra,44(sp)
20017d08:	d422                	sw	s0,40(sp)
20017d0a:	1800                	addi	s0,sp,48
20017d0c:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:25
    char *old = __brk;
20017d10:	8481a783          	lw	a5,-1976(gp) # 80000b08 <__brk>
20017d14:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:28

    /* If __heap_size == 0, we can't allocate memory on the heap */
    if (&metal_segment_heap_target_start == &metal_segment_heap_target_end) {
20017d18:	d0018713          	addi	a4,gp,-768 # 80000fc0 <_sp>
20017d1c:	50018793          	addi	a5,gp,1280 # 800017c0 <metal_segment_heap_target_end>
20017d20:	00f71463          	bne	a4,a5,20017d28 <_sbrk+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:29
        return (void *)-1;
20017d24:	57fd                	li	a5,-1
20017d26:	a83d                	j	20017d64 <_sbrk+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:33
    }

    /* Don't move the break past the end of the heap */
    if ((__brk + incr) < &metal_segment_heap_target_end) {
20017d28:	8481a703          	lw	a4,-1976(gp) # 80000b08 <__brk>
20017d2c:	fdc42783          	lw	a5,-36(s0)
20017d30:	973e                	add	a4,a4,a5
20017d32:	50018793          	addi	a5,gp,1280 # 800017c0 <metal_segment_heap_target_end>
20017d36:	02f77263          	bgeu	a4,a5,20017d5a <_sbrk+0x56>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:34
        __brk += incr;
20017d3a:	8481a703          	lw	a4,-1976(gp) # 80000b08 <__brk>
20017d3e:	fdc42783          	lw	a5,-36(s0)
20017d42:	973e                	add	a4,a4,a5
20017d44:	84e1a423          	sw	a4,-1976(gp) # 80000b08 <__brk>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:40
    } else {
        __brk = &metal_segment_heap_target_end;
        return (void *)-1;
    }
    /* Scrub out allocated memory to avoid spurious ECC errors */
    metal_mem_scrub(old, incr);
20017d48:	fdc42583          	lw	a1,-36(s0)
20017d4c:	fec42503          	lw	a0,-20(s0)
20017d50:	b42f80ef          	jal	ra,20010092 <metal_mem_scrub>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:42

    return old;
20017d54:	fec42783          	lw	a5,-20(s0)
20017d58:	a031                	j	20017d64 <_sbrk+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:36
        __brk = &metal_segment_heap_target_end;
20017d5a:	50018713          	addi	a4,gp,1280 # 800017c0 <metal_segment_heap_target_end>
20017d5e:	84e1a423          	sw	a4,-1976(gp) # 80000b08 <__brk>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:37
        return (void *)-1;
20017d62:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:43
}
20017d64:	853e                	mv	a0,a5
20017d66:	50b2                	lw	ra,44(sp)
20017d68:	5422                	lw	s0,40(sp)
20017d6a:	6145                	addi	sp,sp,48
20017d6c:	8082                	ret

20017d6e <_write>:
_write():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:7
#include <metal/tty.h>
#include <sys/types.h>
#include <unistd.h>

/* Write to a file.  */
ssize_t _write(int file, const void *ptr, size_t len) {
20017d6e:	7179                	addi	sp,sp,-48
20017d70:	d606                	sw	ra,44(sp)
20017d72:	d422                	sw	s0,40(sp)
20017d74:	1800                	addi	s0,sp,48
20017d76:	fca42e23          	sw	a0,-36(s0)
20017d7a:	fcb42c23          	sw	a1,-40(s0)
20017d7e:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:8
    if (file != STDOUT_FILENO) {
20017d82:	fdc42703          	lw	a4,-36(s0)
20017d86:	4785                	li	a5,1
20017d88:	00f70963          	beq	a4,a5,20017d9a <_write+0x2c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:9
        errno = ENOSYS;
20017d8c:	28b1                	jal	20017de8 <__errno>
20017d8e:	872a                	mv	a4,a0
20017d90:	05800793          	li	a5,88
20017d94:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:10
        return -1;
20017d96:	57fd                	li	a5,-1
20017d98:	a835                	j	20017dd4 <_write+0x66>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:13
    }

    const char *bptr = ptr;
20017d9a:	fd842783          	lw	a5,-40(s0)
20017d9e:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:14
    for (size_t i = 0; i < len; ++i)
20017da2:	fe042623          	sw	zero,-20(s0)
20017da6:	a005                	j	20017dc6 <_write+0x58>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:15 (discriminator 3)
        metal_tty_putc(bptr[i]);
20017da8:	fe842703          	lw	a4,-24(s0)
20017dac:	fec42783          	lw	a5,-20(s0)
20017db0:	97ba                	add	a5,a5,a4
20017db2:	0007c783          	lbu	a5,0(a5) # 8000 <__heap_size+0x7800>
20017db6:	853e                	mv	a0,a5
20017db8:	223000ef          	jal	ra,200187da <metal_tty_putc>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:14 (discriminator 3)
    for (size_t i = 0; i < len; ++i)
20017dbc:	fec42783          	lw	a5,-20(s0)
20017dc0:	0785                	addi	a5,a5,1
20017dc2:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:14 (discriminator 1)
20017dc6:	fec42703          	lw	a4,-20(s0)
20017dca:	fd442783          	lw	a5,-44(s0)
20017dce:	fcf76de3          	bltu	a4,a5,20017da8 <_write+0x3a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:16
    return 0;
20017dd2:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:17
}
20017dd4:	853e                	mv	a0,a5
20017dd6:	50b2                	lw	ra,44(sp)
20017dd8:	5422                	lw	s0,40(sp)
20017dda:	6145                	addi	sp,sp,48
20017ddc:	8082                	ret

20017dde <atexit>:
atexit():
20017dde:	85aa                	mv	a1,a0
20017de0:	4681                	li	a3,0
20017de2:	4601                	li	a2,0
20017de4:	4501                	li	a0,0
20017de6:	a8e1                	j	20017ebe <__register_exitproc>

20017de8 <__errno>:
__errno():
20017de8:	5ffe9797          	auipc	a5,0x5ffe9
20017dec:	ce078793          	addi	a5,a5,-800 # 80000ac8 <_impure_ptr>
20017df0:	4388                	lw	a0,0(a5)
20017df2:	8082                	ret

20017df4 <exit>:
exit():
20017df4:	1141                	addi	sp,sp,-16
20017df6:	c422                	sw	s0,8(sp)
20017df8:	c606                	sw	ra,12(sp)
20017dfa:	00000797          	auipc	a5,0x0
20017dfe:	14c78793          	addi	a5,a5,332 # 20017f46 <__call_exitprocs>
20017e02:	842a                	mv	s0,a0
20017e04:	c399                	beqz	a5,20017e0a <exit+0x16>
20017e06:	4581                	li	a1,0
20017e08:	2a3d                	jal	20017f46 <__call_exitprocs>
20017e0a:	80c18793          	addi	a5,gp,-2036 # 80000acc <_global_impure_ptr>
20017e0e:	4388                	lw	a0,0(a5)
20017e10:	551c                	lw	a5,40(a0)
20017e12:	c391                	beqz	a5,20017e16 <exit+0x22>
20017e14:	9782                	jalr	a5
20017e16:	8522                	mv	a0,s0
20017e18:	1eb000ef          	jal	ra,20018802 <_exit>

20017e1c <__libc_fini_array>:
__libc_fini_array():
20017e1c:	1141                	addi	sp,sp,-16
20017e1e:	ffff8797          	auipc	a5,0xffff8
20017e22:	4da78793          	addi	a5,a5,1242 # 200102f8 <__fini_array_end>
20017e26:	c422                	sw	s0,8(sp)
20017e28:	ffff8417          	auipc	s0,0xffff8
20017e2c:	4d040413          	addi	s0,s0,1232 # 200102f8 <__fini_array_end>
20017e30:	8c1d                	sub	s0,s0,a5
20017e32:	c226                	sw	s1,4(sp)
20017e34:	c606                	sw	ra,12(sp)
20017e36:	8409                	srai	s0,s0,0x2
20017e38:	84be                	mv	s1,a5
20017e3a:	e411                	bnez	s0,20017e46 <__libc_fini_array+0x2a>
20017e3c:	40b2                	lw	ra,12(sp)
20017e3e:	4422                	lw	s0,8(sp)
20017e40:	4492                	lw	s1,4(sp)
20017e42:	0141                	addi	sp,sp,16
20017e44:	8082                	ret
20017e46:	147d                	addi	s0,s0,-1
20017e48:	00241793          	slli	a5,s0,0x2
20017e4c:	97a6                	add	a5,a5,s1
20017e4e:	439c                	lw	a5,0(a5)
20017e50:	9782                	jalr	a5
20017e52:	b7e5                	j	20017e3a <__libc_fini_array+0x1e>

20017e54 <__libc_init_array>:
__libc_init_array():
20017e54:	1141                	addi	sp,sp,-16
20017e56:	ffff8797          	auipc	a5,0xffff8
20017e5a:	49278793          	addi	a5,a5,1170 # 200102e8 <_metal_sifive_fe310_g000_pll_init_ptr>
20017e5e:	c422                	sw	s0,8(sp)
20017e60:	ffff8417          	auipc	s0,0xffff8
20017e64:	48840413          	addi	s0,s0,1160 # 200102e8 <_metal_sifive_fe310_g000_pll_init_ptr>
20017e68:	8c1d                	sub	s0,s0,a5
20017e6a:	c226                	sw	s1,4(sp)
20017e6c:	c04a                	sw	s2,0(sp)
20017e6e:	c606                	sw	ra,12(sp)
20017e70:	8409                	srai	s0,s0,0x2
20017e72:	4481                	li	s1,0
20017e74:	893e                	mv	s2,a5
20017e76:	02849663          	bne	s1,s0,20017ea2 <__libc_init_array+0x4e>
20017e7a:	ffff8797          	auipc	a5,0xffff8
20017e7e:	46e78793          	addi	a5,a5,1134 # 200102e8 <_metal_sifive_fe310_g000_pll_init_ptr>
20017e82:	ffff8417          	auipc	s0,0xffff8
20017e86:	46640413          	addi	s0,s0,1126 # 200102e8 <_metal_sifive_fe310_g000_pll_init_ptr>
20017e8a:	8c1d                	sub	s0,s0,a5
20017e8c:	8409                	srai	s0,s0,0x2
20017e8e:	4481                	li	s1,0
20017e90:	893e                	mv	s2,a5
20017e92:	00849f63          	bne	s1,s0,20017eb0 <__libc_init_array+0x5c>
20017e96:	40b2                	lw	ra,12(sp)
20017e98:	4422                	lw	s0,8(sp)
20017e9a:	4492                	lw	s1,4(sp)
20017e9c:	4902                	lw	s2,0(sp)
20017e9e:	0141                	addi	sp,sp,16
20017ea0:	8082                	ret
20017ea2:	00249793          	slli	a5,s1,0x2
20017ea6:	97ca                	add	a5,a5,s2
20017ea8:	439c                	lw	a5,0(a5)
20017eaa:	0485                	addi	s1,s1,1
20017eac:	9782                	jalr	a5
20017eae:	b7e1                	j	20017e76 <__libc_init_array+0x22>
20017eb0:	00249793          	slli	a5,s1,0x2
20017eb4:	97ca                	add	a5,a5,s2
20017eb6:	439c                	lw	a5,0(a5)
20017eb8:	0485                	addi	s1,s1,1
20017eba:	9782                	jalr	a5
20017ebc:	bfd9                	j	20017e92 <__libc_init_array+0x3e>

20017ebe <__register_exitproc>:
__register_exitproc():
20017ebe:	5ffe9797          	auipc	a5,0x5ffe9
20017ec2:	c5a78793          	addi	a5,a5,-934 # 80000b18 <_global_atexit>
20017ec6:	439c                	lw	a5,0(a5)
20017ec8:	8e2a                	mv	t3,a0
20017eca:	e39d                	bnez	a5,20017ef0 <__register_exitproc+0x32>
20017ecc:	5ffe9717          	auipc	a4,0x5ffe9
20017ed0:	c5870713          	addi	a4,a4,-936 # 80000b24 <_global_atexit0>
20017ed4:	5ffe9797          	auipc	a5,0x5ffe9
20017ed8:	c4e7a223          	sw	a4,-956(a5) # 80000b18 <_global_atexit>
20017edc:	dffe8517          	auipc	a0,0xdffe8
20017ee0:	12450513          	addi	a0,a0,292 # 0 <__metal_boot_hart>
20017ee4:	87ba                	mv	a5,a4
20017ee6:	c509                	beqz	a0,20017ef0 <__register_exitproc+0x32>
20017ee8:	411c                	lw	a5,0(a0)
20017eea:	8ef1a623          	sw	a5,-1812(gp) # 80000bac <_global_atexit0+0x88>
20017eee:	87ba                	mv	a5,a4
20017ef0:	43d8                	lw	a4,4(a5)
20017ef2:	487d                	li	a6,31
20017ef4:	557d                	li	a0,-1
20017ef6:	04e84763          	blt	a6,a4,20017f44 <__register_exitproc+0x86>
20017efa:	020e0e63          	beqz	t3,20017f36 <__register_exitproc+0x78>
20017efe:	0887a803          	lw	a6,136(a5)
20017f02:	04080163          	beqz	a6,20017f44 <__register_exitproc+0x86>
20017f06:	00271893          	slli	a7,a4,0x2
20017f0a:	98c2                	add	a7,a7,a6
20017f0c:	00c8a023          	sw	a2,0(a7)
20017f10:	10082303          	lw	t1,256(a6)
20017f14:	4605                	li	a2,1
20017f16:	00e61633          	sll	a2,a2,a4
20017f1a:	00c36333          	or	t1,t1,a2
20017f1e:	10682023          	sw	t1,256(a6)
20017f22:	08d8a023          	sw	a3,128(a7)
20017f26:	4689                	li	a3,2
20017f28:	00de1763          	bne	t3,a3,20017f36 <__register_exitproc+0x78>
20017f2c:	10482683          	lw	a3,260(a6)
20017f30:	8e55                	or	a2,a2,a3
20017f32:	10c82223          	sw	a2,260(a6)
20017f36:	00170693          	addi	a3,a4,1
20017f3a:	070a                	slli	a4,a4,0x2
20017f3c:	c3d4                	sw	a3,4(a5)
20017f3e:	97ba                	add	a5,a5,a4
20017f40:	c78c                	sw	a1,8(a5)
20017f42:	4501                	li	a0,0
20017f44:	8082                	ret

20017f46 <__call_exitprocs>:
__call_exitprocs():
20017f46:	7179                	addi	sp,sp,-48
20017f48:	cc52                	sw	s4,24(sp)
20017f4a:	ca56                	sw	s5,20(sp)
20017f4c:	c85a                	sw	s6,16(sp)
20017f4e:	c65e                	sw	s7,12(sp)
20017f50:	d606                	sw	ra,44(sp)
20017f52:	d422                	sw	s0,40(sp)
20017f54:	d226                	sw	s1,36(sp)
20017f56:	d04a                	sw	s2,32(sp)
20017f58:	ce4e                	sw	s3,28(sp)
20017f5a:	c462                	sw	s8,8(sp)
20017f5c:	8b2a                	mv	s6,a0
20017f5e:	8a2e                	mv	s4,a1
20017f60:	5ffe9a97          	auipc	s5,0x5ffe9
20017f64:	bb8a8a93          	addi	s5,s5,-1096 # 80000b18 <_global_atexit>
20017f68:	4b85                	li	s7,1
20017f6a:	000aa403          	lw	s0,0(s5)
20017f6e:	c811                	beqz	s0,20017f82 <__call_exitprocs+0x3c>
20017f70:	4044                	lw	s1,4(s0)
20017f72:	08842983          	lw	s3,136(s0)
20017f76:	fff48913          	addi	s2,s1,-1
20017f7a:	048a                	slli	s1,s1,0x2
20017f7c:	94a2                	add	s1,s1,s0
20017f7e:	00095e63          	bgez	s2,20017f9a <__call_exitprocs+0x54>
20017f82:	50b2                	lw	ra,44(sp)
20017f84:	5422                	lw	s0,40(sp)
20017f86:	5492                	lw	s1,36(sp)
20017f88:	5902                	lw	s2,32(sp)
20017f8a:	49f2                	lw	s3,28(sp)
20017f8c:	4a62                	lw	s4,24(sp)
20017f8e:	4ad2                	lw	s5,20(sp)
20017f90:	4b42                	lw	s6,16(sp)
20017f92:	4bb2                	lw	s7,12(sp)
20017f94:	4c22                	lw	s8,8(sp)
20017f96:	6145                	addi	sp,sp,48
20017f98:	8082                	ret
20017f9a:	000a0e63          	beqz	s4,20017fb6 <__call_exitprocs+0x70>
20017f9e:	00099563          	bnez	s3,20017fa8 <__call_exitprocs+0x62>
20017fa2:	197d                	addi	s2,s2,-1
20017fa4:	14f1                	addi	s1,s1,-4
20017fa6:	bfe1                	j	20017f7e <__call_exitprocs+0x38>
20017fa8:	00291793          	slli	a5,s2,0x2
20017fac:	97ce                	add	a5,a5,s3
20017fae:	0807a783          	lw	a5,128(a5)
20017fb2:	ff4798e3          	bne	a5,s4,20017fa2 <__call_exitprocs+0x5c>
20017fb6:	4058                	lw	a4,4(s0)
20017fb8:	40dc                	lw	a5,4(s1)
20017fba:	177d                	addi	a4,a4,-1
20017fbc:	03271863          	bne	a4,s2,20017fec <__call_exitprocs+0xa6>
20017fc0:	01242223          	sw	s2,4(s0)
20017fc4:	dff9                	beqz	a5,20017fa2 <__call_exitprocs+0x5c>
20017fc6:	00442c03          	lw	s8,4(s0)
20017fca:	00098863          	beqz	s3,20017fda <__call_exitprocs+0x94>
20017fce:	1009a683          	lw	a3,256(s3)
20017fd2:	012b9733          	sll	a4,s7,s2
20017fd6:	8ef9                	and	a3,a3,a4
20017fd8:	ee89                	bnez	a3,20017ff2 <__call_exitprocs+0xac>
20017fda:	9782                	jalr	a5
20017fdc:	4058                	lw	a4,4(s0)
20017fde:	000aa783          	lw	a5,0(s5)
20017fe2:	f98714e3          	bne	a4,s8,20017f6a <__call_exitprocs+0x24>
20017fe6:	faf40ee3          	beq	s0,a5,20017fa2 <__call_exitprocs+0x5c>
20017fea:	b741                	j	20017f6a <__call_exitprocs+0x24>
20017fec:	0004a223          	sw	zero,4(s1)
20017ff0:	bfd1                	j	20017fc4 <__call_exitprocs+0x7e>
20017ff2:	00291693          	slli	a3,s2,0x2
20017ff6:	96ce                	add	a3,a3,s3
20017ff8:	428c                	lw	a1,0(a3)
20017ffa:	1049a683          	lw	a3,260(s3)
20017ffe:	8f75                	and	a4,a4,a3
20018000:	e701                	bnez	a4,20018008 <__call_exitprocs+0xc2>
20018002:	855a                	mv	a0,s6
20018004:	9782                	jalr	a5
20018006:	bfd9                	j	20017fdc <__call_exitprocs+0x96>
20018008:	852e                	mv	a0,a1
2001800a:	9782                	jalr	a5
2001800c:	bfc1                	j	20017fdc <__call_exitprocs+0x96>

2001800e <__udivdi3>:
__udivdi3():
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1319
2001800e:	87ae                	mv	a5,a1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1024
20018010:	8832                	mv	a6,a2
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1025
20018012:	8736                	mv	a4,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1026
20018014:	832a                	mv	t1,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1064
20018016:	20069663          	bnez	a3,20018222 <__udivdi3+0x214>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1066
2001801a:	ffff9897          	auipc	a7,0xffff9
2001801e:	08e88893          	addi	a7,a7,142 # 200110a8 <__clz_tab>
20018022:	0ac5fe63          	bgeu	a1,a2,200180de <__udivdi3+0xd0>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
20018026:	6741                	lui	a4,0x10
20018028:	0ae67463          	bgeu	a2,a4,200180d0 <__udivdi3+0xc2>
2001802c:	0ff00713          	li	a4,255
20018030:	00c73733          	sltu	a4,a4,a2
20018034:	070e                	slli	a4,a4,0x3
20018036:	00e656b3          	srl	a3,a2,a4
2001803a:	98b6                	add	a7,a7,a3
2001803c:	0008c683          	lbu	a3,0(a7)
20018040:	9736                	add	a4,a4,a3
20018042:	02000693          	li	a3,32
20018046:	8e99                	sub	a3,a3,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1072
20018048:	ca99                	beqz	a3,2001805e <__udivdi3+0x50>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
2001804a:	00d797b3          	sll	a5,a5,a3
2001804e:	00e55733          	srl	a4,a0,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1077
20018052:	00d61833          	sll	a6,a2,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
20018056:	00f765b3          	or	a1,a4,a5
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1079
2001805a:	00d51333          	sll	t1,a0,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1082
2001805e:	01085513          	srli	a0,a6,0x10
20018062:	02a5f733          	remu	a4,a1,a0
20018066:	01081613          	slli	a2,a6,0x10
2001806a:	8241                	srli	a2,a2,0x10
2001806c:	01035693          	srli	a3,t1,0x10
20018070:	02a5d5b3          	divu	a1,a1,a0
20018074:	0742                	slli	a4,a4,0x10
20018076:	8ed9                	or	a3,a3,a4
20018078:	02b607b3          	mul	a5,a2,a1
2001807c:	872e                	mv	a4,a1
2001807e:	00f6fc63          	bgeu	a3,a5,20018096 <__udivdi3+0x88>
20018082:	96c2                	add	a3,a3,a6
20018084:	fff58713          	addi	a4,a1,-1
20018088:	0106e763          	bltu	a3,a6,20018096 <__udivdi3+0x88>
2001808c:	00f6f563          	bgeu	a3,a5,20018096 <__udivdi3+0x88>
20018090:	ffe58713          	addi	a4,a1,-2
20018094:	96c2                	add	a3,a3,a6
20018096:	8e9d                	sub	a3,a3,a5
20018098:	02a6f7b3          	remu	a5,a3,a0
2001809c:	0342                	slli	t1,t1,0x10
2001809e:	01035313          	srli	t1,t1,0x10
200180a2:	02a6d6b3          	divu	a3,a3,a0
200180a6:	07c2                	slli	a5,a5,0x10
200180a8:	0067e333          	or	t1,a5,t1
200180ac:	02d605b3          	mul	a1,a2,a3
200180b0:	8536                	mv	a0,a3
200180b2:	00b37b63          	bgeu	t1,a1,200180c8 <__udivdi3+0xba>
200180b6:	9342                	add	t1,t1,a6
200180b8:	fff68513          	addi	a0,a3,-1
200180bc:	01036663          	bltu	t1,a6,200180c8 <__udivdi3+0xba>
200180c0:	00b37463          	bgeu	t1,a1,200180c8 <__udivdi3+0xba>
200180c4:	ffe68513          	addi	a0,a3,-2
200180c8:	0742                	slli	a4,a4,0x10
200180ca:	8f49                	or	a4,a4,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1209
200180cc:	4581                	li	a1,0
200180ce:	a84d                	j	20018180 <__udivdi3+0x172>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
200180d0:	010006b7          	lui	a3,0x1000
200180d4:	4741                	li	a4,16
200180d6:	f6d660e3          	bltu	a2,a3,20018036 <__udivdi3+0x28>
200180da:	4761                	li	a4,24
200180dc:	bfa9                	j	20018036 <__udivdi3+0x28>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1091
200180de:	e601                	bnez	a2,200180e6 <__udivdi3+0xd8>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1092
200180e0:	4685                	li	a3,1
200180e2:	02c6d833          	divu	a6,a3,a2
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
200180e6:	66c1                	lui	a3,0x10
200180e8:	08d87e63          	bgeu	a6,a3,20018184 <__udivdi3+0x176>
200180ec:	0ff00693          	li	a3,255
200180f0:	0106f363          	bgeu	a3,a6,200180f6 <__udivdi3+0xe8>
200180f4:	4721                	li	a4,8
200180f6:	00e856b3          	srl	a3,a6,a4
200180fa:	98b6                	add	a7,a7,a3
200180fc:	0008c683          	lbu	a3,0(a7)
20018100:	96ba                	add	a3,a3,a4
20018102:	02000713          	li	a4,32
20018106:	8f15                	sub	a4,a4,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1096
20018108:	e749                	bnez	a4,20018192 <__udivdi3+0x184>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1105
2001810a:	410787b3          	sub	a5,a5,a6
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1106
2001810e:	4585                	li	a1,1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1124
20018110:	01085613          	srli	a2,a6,0x10
20018114:	01081893          	slli	a7,a6,0x10
20018118:	0108d893          	srli	a7,a7,0x10
2001811c:	01035693          	srli	a3,t1,0x10
20018120:	02c7f733          	remu	a4,a5,a2
20018124:	02c7d7b3          	divu	a5,a5,a2
20018128:	0742                	slli	a4,a4,0x10
2001812a:	8ed9                	or	a3,a3,a4
2001812c:	02f88533          	mul	a0,a7,a5
20018130:	873e                	mv	a4,a5
20018132:	00a6fc63          	bgeu	a3,a0,2001814a <__udivdi3+0x13c>
20018136:	96c2                	add	a3,a3,a6
20018138:	fff78713          	addi	a4,a5,-1
2001813c:	0106e763          	bltu	a3,a6,2001814a <__udivdi3+0x13c>
20018140:	00a6f563          	bgeu	a3,a0,2001814a <__udivdi3+0x13c>
20018144:	ffe78713          	addi	a4,a5,-2
20018148:	96c2                	add	a3,a3,a6
2001814a:	8e89                	sub	a3,a3,a0
2001814c:	02c6f7b3          	remu	a5,a3,a2
20018150:	0342                	slli	t1,t1,0x10
20018152:	01035313          	srli	t1,t1,0x10
20018156:	02c6d6b3          	divu	a3,a3,a2
2001815a:	07c2                	slli	a5,a5,0x10
2001815c:	0067e333          	or	t1,a5,t1
20018160:	02d888b3          	mul	a7,a7,a3
20018164:	8536                	mv	a0,a3
20018166:	01137b63          	bgeu	t1,a7,2001817c <__udivdi3+0x16e>
2001816a:	9342                	add	t1,t1,a6
2001816c:	fff68513          	addi	a0,a3,-1 # ffff <__heap_size+0xf7ff>
20018170:	01036663          	bltu	t1,a6,2001817c <__udivdi3+0x16e>
20018174:	01137463          	bgeu	t1,a7,2001817c <__udivdi3+0x16e>
20018178:	ffe68513          	addi	a0,a3,-2
2001817c:	0742                	slli	a4,a4,0x10
2001817e:	8f49                	or	a4,a4,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1321
20018180:	853a                	mv	a0,a4
20018182:	8082                	ret
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
20018184:	010006b7          	lui	a3,0x1000
20018188:	4741                	li	a4,16
2001818a:	f6d866e3          	bltu	a6,a3,200180f6 <__udivdi3+0xe8>
2001818e:	4761                	li	a4,24
20018190:	b79d                	j	200180f6 <__udivdi3+0xe8>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1114
20018192:	00e81833          	sll	a6,a6,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1115
20018196:	00d7d5b3          	srl	a1,a5,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1117
2001819a:	00e51333          	sll	t1,a0,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
2001819e:	00d556b3          	srl	a3,a0,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
200181a2:	01085513          	srli	a0,a6,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
200181a6:	00e797b3          	sll	a5,a5,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
200181aa:	02a5f733          	remu	a4,a1,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
200181ae:	00f6e8b3          	or	a7,a3,a5
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
200181b2:	01081793          	slli	a5,a6,0x10
200181b6:	83c1                	srli	a5,a5,0x10
200181b8:	0108d613          	srli	a2,a7,0x10
200181bc:	02a5d5b3          	divu	a1,a1,a0
200181c0:	0742                	slli	a4,a4,0x10
200181c2:	8f51                	or	a4,a4,a2
200181c4:	02b786b3          	mul	a3,a5,a1
200181c8:	862e                	mv	a2,a1
200181ca:	00d77c63          	bgeu	a4,a3,200181e2 <__udivdi3+0x1d4>
200181ce:	9742                	add	a4,a4,a6
200181d0:	fff58613          	addi	a2,a1,-1
200181d4:	01076763          	bltu	a4,a6,200181e2 <__udivdi3+0x1d4>
200181d8:	00d77563          	bgeu	a4,a3,200181e2 <__udivdi3+0x1d4>
200181dc:	ffe58613          	addi	a2,a1,-2
200181e0:	9742                	add	a4,a4,a6
200181e2:	40d706b3          	sub	a3,a4,a3
200181e6:	02a6f733          	remu	a4,a3,a0
200181ea:	08c2                	slli	a7,a7,0x10
200181ec:	0108d893          	srli	a7,a7,0x10
200181f0:	02a6d6b3          	divu	a3,a3,a0
200181f4:	0742                	slli	a4,a4,0x10
200181f6:	02d785b3          	mul	a1,a5,a3
200181fa:	011767b3          	or	a5,a4,a7
200181fe:	8736                	mv	a4,a3
20018200:	00b7fc63          	bgeu	a5,a1,20018218 <__udivdi3+0x20a>
20018204:	97c2                	add	a5,a5,a6
20018206:	fff68713          	addi	a4,a3,-1 # ffffff <__heap_size+0xfff7ff>
2001820a:	0107e763          	bltu	a5,a6,20018218 <__udivdi3+0x20a>
2001820e:	00b7f563          	bgeu	a5,a1,20018218 <__udivdi3+0x20a>
20018212:	ffe68713          	addi	a4,a3,-2
20018216:	97c2                	add	a5,a5,a6
20018218:	8f8d                	sub	a5,a5,a1
2001821a:	01061593          	slli	a1,a2,0x10
2001821e:	8dd9                	or	a1,a1,a4
20018220:	bdc5                	j	20018110 <__udivdi3+0x102>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1140
20018222:	14d5e263          	bltu	a1,a3,20018366 <__udivdi3+0x358>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
20018226:	6741                	lui	a4,0x10
20018228:	02e6fe63          	bgeu	a3,a4,20018264 <__udivdi3+0x256>
2001822c:	0ff00813          	li	a6,255
20018230:	00d83733          	sltu	a4,a6,a3
20018234:	070e                	slli	a4,a4,0x3
20018236:	00e6d833          	srl	a6,a3,a4
2001823a:	ffff9597          	auipc	a1,0xffff9
2001823e:	e6e58593          	addi	a1,a1,-402 # 200110a8 <__clz_tab>
20018242:	95c2                	add	a1,a1,a6
20018244:	0005c803          	lbu	a6,0(a1)
20018248:	02000593          	li	a1,32
2001824c:	983a                	add	a6,a6,a4
2001824e:	410585b3          	sub	a1,a1,a6
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1160
20018252:	e185                	bnez	a1,20018272 <__udivdi3+0x264>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1172
20018254:	4705                	li	a4,1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1170
20018256:	f2f6e5e3          	bltu	a3,a5,20018180 <__udivdi3+0x172>
2001825a:	00c53533          	sltu	a0,a0,a2
2001825e:	00154713          	xori	a4,a0,1
20018262:	bf39                	j	20018180 <__udivdi3+0x172>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
20018264:	010005b7          	lui	a1,0x1000
20018268:	4741                	li	a4,16
2001826a:	fcb6e6e3          	bltu	a3,a1,20018236 <__udivdi3+0x228>
2001826e:	4761                	li	a4,24
20018270:	b7d9                	j	20018236 <__udivdi3+0x228>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1194
20018272:	01065733          	srl	a4,a2,a6
20018276:	00b696b3          	sll	a3,a3,a1
2001827a:	8ed9                	or	a3,a3,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
2001827c:	0106de93          	srli	t4,a3,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1196
20018280:	0107d733          	srl	a4,a5,a6
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20018284:	03d778b3          	remu	a7,a4,t4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1197
20018288:	00b797b3          	sll	a5,a5,a1
2001828c:	01055833          	srl	a6,a0,a6
20018290:	00f86333          	or	t1,a6,a5
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20018294:	01069793          	slli	a5,a3,0x10
20018298:	83c1                	srli	a5,a5,0x10
2001829a:	01035813          	srli	a6,t1,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1195
2001829e:	00b61633          	sll	a2,a2,a1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
200182a2:	03d75733          	divu	a4,a4,t4
200182a6:	08c2                	slli	a7,a7,0x10
200182a8:	0108e833          	or	a6,a7,a6
200182ac:	02e78f33          	mul	t5,a5,a4
200182b0:	8e3a                	mv	t3,a4
200182b2:	01e87c63          	bgeu	a6,t5,200182ca <__udivdi3+0x2bc>
200182b6:	9836                	add	a6,a6,a3
200182b8:	fff70e13          	addi	t3,a4,-1 # ffff <__heap_size+0xf7ff>
200182bc:	00d86763          	bltu	a6,a3,200182ca <__udivdi3+0x2bc>
200182c0:	01e87563          	bgeu	a6,t5,200182ca <__udivdi3+0x2bc>
200182c4:	ffe70e13          	addi	t3,a4,-2
200182c8:	9836                	add	a6,a6,a3
200182ca:	41e80833          	sub	a6,a6,t5
200182ce:	03d878b3          	remu	a7,a6,t4
200182d2:	03d85833          	divu	a6,a6,t4
200182d6:	08c2                	slli	a7,a7,0x10
200182d8:	03078eb3          	mul	t4,a5,a6
200182dc:	01031793          	slli	a5,t1,0x10
200182e0:	83c1                	srli	a5,a5,0x10
200182e2:	00f8e7b3          	or	a5,a7,a5
200182e6:	8742                	mv	a4,a6
200182e8:	01d7fc63          	bgeu	a5,t4,20018300 <__udivdi3+0x2f2>
200182ec:	97b6                	add	a5,a5,a3
200182ee:	fff80713          	addi	a4,a6,-1
200182f2:	00d7e763          	bltu	a5,a3,20018300 <__udivdi3+0x2f2>
200182f6:	01d7f563          	bgeu	a5,t4,20018300 <__udivdi3+0x2f2>
200182fa:	ffe80713          	addi	a4,a6,-2
200182fe:	97b6                	add	a5,a5,a3
20018300:	0e42                	slli	t3,t3,0x10
20018302:	41d787b3          	sub	a5,a5,t4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
20018306:	6ec1                	lui	t4,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20018308:	00ee6733          	or	a4,t3,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
2001830c:	fffe8813          	addi	a6,t4,-1 # ffff <__heap_size+0xf7ff>
20018310:	01077333          	and	t1,a4,a6
20018314:	01075893          	srli	a7,a4,0x10
20018318:	01067833          	and	a6,a2,a6
2001831c:	8241                	srli	a2,a2,0x10
2001831e:	03030e33          	mul	t3,t1,a6
20018322:	03088833          	mul	a6,a7,a6
20018326:	010e5693          	srli	a3,t3,0x10
2001832a:	02c30333          	mul	t1,t1,a2
2001832e:	9342                	add	t1,t1,a6
20018330:	969a                	add	a3,a3,t1
20018332:	02c888b3          	mul	a7,a7,a2
20018336:	0106f363          	bgeu	a3,a6,2001833c <__udivdi3+0x32e>
2001833a:	98f6                	add	a7,a7,t4
2001833c:	0106d613          	srli	a2,a3,0x10
20018340:	98b2                	add	a7,a7,a2
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1203
20018342:	0317e063          	bltu	a5,a7,20018362 <__udivdi3+0x354>
20018346:	d91793e3          	bne	a5,a7,200180cc <__udivdi3+0xbe>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
2001834a:	67c1                	lui	a5,0x10
2001834c:	17fd                	addi	a5,a5,-1
2001834e:	8efd                	and	a3,a3,a5
20018350:	06c2                	slli	a3,a3,0x10
20018352:	00fe7e33          	and	t3,t3,a5
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1198
20018356:	00b51533          	sll	a0,a0,a1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
2001835a:	96f2                	add	a3,a3,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1209
2001835c:	4581                	li	a1,0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1203
2001835e:	e2d571e3          	bgeu	a0,a3,20018180 <__udivdi3+0x172>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1205
20018362:	177d                	addi	a4,a4,-1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1206
20018364:	b3a5                	j	200180cc <__udivdi3+0xbe>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1145
20018366:	4581                	li	a1,0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1144
20018368:	4701                	li	a4,0
2001836a:	bd19                	j	20018180 <__udivdi3+0x172>

2001836c <__umoddi3>:
__udivmoddi4():
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1024
2001836c:	88b2                	mv	a7,a2
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1025
2001836e:	8736                	mv	a4,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1026
20018370:	87aa                	mv	a5,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1027
20018372:	882e                	mv	a6,a1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1064
20018374:	1c069863          	bnez	a3,20018544 <__umoddi3+0x1d8>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1066
20018378:	ffff9697          	auipc	a3,0xffff9
2001837c:	d3068693          	addi	a3,a3,-720 # 200110a8 <__clz_tab>
20018380:	0ac5f863          	bgeu	a1,a2,20018430 <__umoddi3+0xc4>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
20018384:	6341                	lui	t1,0x10
20018386:	08667e63          	bgeu	a2,t1,20018422 <__umoddi3+0xb6>
2001838a:	0ff00313          	li	t1,255
2001838e:	00c37363          	bgeu	t1,a2,20018394 <__umoddi3+0x28>
20018392:	4721                	li	a4,8
20018394:	00e65333          	srl	t1,a2,a4
20018398:	969a                	add	a3,a3,t1
2001839a:	0006ce03          	lbu	t3,0(a3)
2001839e:	02000313          	li	t1,32
200183a2:	9e3a                	add	t3,t3,a4
200183a4:	41c30333          	sub	t1,t1,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1072
200183a8:	00030c63          	beqz	t1,200183c0 <__umoddi3+0x54>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
200183ac:	006595b3          	sll	a1,a1,t1
200183b0:	01c55e33          	srl	t3,a0,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1077
200183b4:	006618b3          	sll	a7,a2,t1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
200183b8:	00be6833          	or	a6,t3,a1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1079
200183bc:	006517b3          	sll	a5,a0,t1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1082
200183c0:	0108d613          	srli	a2,a7,0x10
200183c4:	02c87733          	remu	a4,a6,a2
200183c8:	01089513          	slli	a0,a7,0x10
200183cc:	8141                	srli	a0,a0,0x10
200183ce:	0107d693          	srli	a3,a5,0x10
200183d2:	02c85833          	divu	a6,a6,a2
200183d6:	0742                	slli	a4,a4,0x10
200183d8:	8ed9                	or	a3,a3,a4
200183da:	03050833          	mul	a6,a0,a6
200183de:	0106f863          	bgeu	a3,a6,200183ee <__umoddi3+0x82>
200183e2:	96c6                	add	a3,a3,a7
200183e4:	0116e563          	bltu	a3,a7,200183ee <__umoddi3+0x82>
200183e8:	0106f363          	bgeu	a3,a6,200183ee <__umoddi3+0x82>
200183ec:	96c6                	add	a3,a3,a7
200183ee:	410686b3          	sub	a3,a3,a6
200183f2:	02c6f733          	remu	a4,a3,a2
200183f6:	07c2                	slli	a5,a5,0x10
200183f8:	83c1                	srli	a5,a5,0x10
200183fa:	02c6d6b3          	divu	a3,a3,a2
200183fe:	02d506b3          	mul	a3,a0,a3
20018402:	01071513          	slli	a0,a4,0x10
20018406:	8fc9                	or	a5,a5,a0
20018408:	00d7f863          	bgeu	a5,a3,20018418 <__umoddi3+0xac>
2001840c:	97c6                	add	a5,a5,a7
2001840e:	0117e563          	bltu	a5,a7,20018418 <__umoddi3+0xac>
20018412:	00d7f363          	bgeu	a5,a3,20018418 <__umoddi3+0xac>
20018416:	97c6                	add	a5,a5,a7
20018418:	8f95                	sub	a5,a5,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1131
2001841a:	0067d533          	srl	a0,a5,t1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1133
2001841e:	4581                	li	a1,0
__umoddi3():
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1313
20018420:	8082                	ret
__udivmoddi4():
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
20018422:	01000337          	lui	t1,0x1000
20018426:	4741                	li	a4,16
20018428:	f66666e3          	bltu	a2,t1,20018394 <__umoddi3+0x28>
2001842c:	4761                	li	a4,24
2001842e:	b79d                	j	20018394 <__umoddi3+0x28>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1091
20018430:	e601                	bnez	a2,20018438 <__umoddi3+0xcc>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1092
20018432:	4605                	li	a2,1
20018434:	031658b3          	divu	a7,a2,a7
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
20018438:	6641                	lui	a2,0x10
2001843a:	08c8f363          	bgeu	a7,a2,200184c0 <__umoddi3+0x154>
2001843e:	0ff00613          	li	a2,255
20018442:	01167363          	bgeu	a2,a7,20018448 <__umoddi3+0xdc>
20018446:	4721                	li	a4,8
20018448:	00e8d633          	srl	a2,a7,a4
2001844c:	96b2                	add	a3,a3,a2
2001844e:	0006ce03          	lbu	t3,0(a3)
20018452:	02000313          	li	t1,32
20018456:	9e3a                	add	t3,t3,a4
20018458:	41c30333          	sub	t1,t1,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1096
2001845c:	06031963          	bnez	t1,200184ce <__umoddi3+0x162>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1105
20018460:	411585b3          	sub	a1,a1,a7
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1124
20018464:	0108d713          	srli	a4,a7,0x10
20018468:	01089513          	slli	a0,a7,0x10
2001846c:	8141                	srli	a0,a0,0x10
2001846e:	0107d613          	srli	a2,a5,0x10
20018472:	02e5f6b3          	remu	a3,a1,a4
20018476:	02e5d5b3          	divu	a1,a1,a4
2001847a:	06c2                	slli	a3,a3,0x10
2001847c:	8ed1                	or	a3,a3,a2
2001847e:	02b505b3          	mul	a1,a0,a1
20018482:	00b6f863          	bgeu	a3,a1,20018492 <__umoddi3+0x126>
20018486:	96c6                	add	a3,a3,a7
20018488:	0116e563          	bltu	a3,a7,20018492 <__umoddi3+0x126>
2001848c:	00b6f363          	bgeu	a3,a1,20018492 <__umoddi3+0x126>
20018490:	96c6                	add	a3,a3,a7
20018492:	40b685b3          	sub	a1,a3,a1
20018496:	02e5f6b3          	remu	a3,a1,a4
2001849a:	07c2                	slli	a5,a5,0x10
2001849c:	83c1                	srli	a5,a5,0x10
2001849e:	02e5d5b3          	divu	a1,a1,a4
200184a2:	02b505b3          	mul	a1,a0,a1
200184a6:	01069513          	slli	a0,a3,0x10
200184aa:	8fc9                	or	a5,a5,a0
200184ac:	00b7f863          	bgeu	a5,a1,200184bc <__umoddi3+0x150>
200184b0:	97c6                	add	a5,a5,a7
200184b2:	0117e563          	bltu	a5,a7,200184bc <__umoddi3+0x150>
200184b6:	00b7f363          	bgeu	a5,a1,200184bc <__umoddi3+0x150>
200184ba:	97c6                	add	a5,a5,a7
200184bc:	8f8d                	sub	a5,a5,a1
200184be:	bfb1                	j	2001841a <__umoddi3+0xae>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
200184c0:	01000637          	lui	a2,0x1000
200184c4:	4741                	li	a4,16
200184c6:	f8c8e1e3          	bltu	a7,a2,20018448 <__umoddi3+0xdc>
200184ca:	4761                	li	a4,24
200184cc:	bfb5                	j	20018448 <__umoddi3+0xdc>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1114
200184ce:	006898b3          	sll	a7,a7,t1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1115
200184d2:	01c5d733          	srl	a4,a1,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1117
200184d6:	006517b3          	sll	a5,a0,t1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
200184da:	01c55e33          	srl	t3,a0,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
200184de:	0108d513          	srli	a0,a7,0x10
200184e2:	02a776b3          	remu	a3,a4,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
200184e6:	006595b3          	sll	a1,a1,t1
200184ea:	00be6e33          	or	t3,t3,a1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
200184ee:	01089593          	slli	a1,a7,0x10
200184f2:	81c1                	srli	a1,a1,0x10
200184f4:	010e5613          	srli	a2,t3,0x10
200184f8:	02a75733          	divu	a4,a4,a0
200184fc:	06c2                	slli	a3,a3,0x10
200184fe:	8ed1                	or	a3,a3,a2
20018500:	02e58733          	mul	a4,a1,a4
20018504:	00e6f863          	bgeu	a3,a4,20018514 <__umoddi3+0x1a8>
20018508:	96c6                	add	a3,a3,a7
2001850a:	0116e563          	bltu	a3,a7,20018514 <__umoddi3+0x1a8>
2001850e:	00e6f363          	bgeu	a3,a4,20018514 <__umoddi3+0x1a8>
20018512:	96c6                	add	a3,a3,a7
20018514:	40e68633          	sub	a2,a3,a4
20018518:	02a676b3          	remu	a3,a2,a0
2001851c:	0e42                	slli	t3,t3,0x10
2001851e:	010e5e13          	srli	t3,t3,0x10
20018522:	02a65633          	divu	a2,a2,a0
20018526:	06c2                	slli	a3,a3,0x10
20018528:	02c58633          	mul	a2,a1,a2
2001852c:	01c6e5b3          	or	a1,a3,t3
20018530:	00c5f863          	bgeu	a1,a2,20018540 <__umoddi3+0x1d4>
20018534:	95c6                	add	a1,a1,a7
20018536:	0115e563          	bltu	a1,a7,20018540 <__umoddi3+0x1d4>
2001853a:	00c5f363          	bgeu	a1,a2,20018540 <__umoddi3+0x1d4>
2001853e:	95c6                	add	a1,a1,a7
20018540:	8d91                	sub	a1,a1,a2
20018542:	b70d                	j	20018464 <__umoddi3+0xf8>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1140
20018544:	ecd5eee3          	bltu	a1,a3,20018420 <__umoddi3+0xb4>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
20018548:	6741                	lui	a4,0x10
2001854a:	04e6f563          	bgeu	a3,a4,20018594 <__umoddi3+0x228>
2001854e:	0ff00e93          	li	t4,255
20018552:	00deb733          	sltu	a4,t4,a3
20018556:	070e                	slli	a4,a4,0x3
20018558:	00e6d333          	srl	t1,a3,a4
2001855c:	ffff9897          	auipc	a7,0xffff9
20018560:	b4c88893          	addi	a7,a7,-1204 # 200110a8 <__clz_tab>
20018564:	989a                	add	a7,a7,t1
20018566:	0008ce83          	lbu	t4,0(a7)
2001856a:	02000e13          	li	t3,32
2001856e:	9eba                	add	t4,t4,a4
20018570:	41de0e33          	sub	t3,t3,t4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1160
20018574:	020e1763          	bnez	t3,200185a2 <__umoddi3+0x236>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1170
20018578:	00b6e463          	bltu	a3,a1,20018580 <__umoddi3+0x214>
2001857c:	00c56963          	bltu	a0,a2,2001858e <__umoddi3+0x222>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1173
20018580:	40c507b3          	sub	a5,a0,a2
20018584:	8d95                	sub	a1,a1,a3
20018586:	00f53533          	sltu	a0,a0,a5
2001858a:	40a58833          	sub	a6,a1,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1184
2001858e:	853e                	mv	a0,a5
20018590:	85c2                	mv	a1,a6
20018592:	b579                	j	20018420 <__umoddi3+0xb4>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
20018594:	010008b7          	lui	a7,0x1000
20018598:	4741                	li	a4,16
2001859a:	fb16efe3          	bltu	a3,a7,20018558 <__umoddi3+0x1ec>
2001859e:	4761                	li	a4,24
200185a0:	bf65                	j	20018558 <__umoddi3+0x1ec>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1194
200185a2:	01d65733          	srl	a4,a2,t4
200185a6:	01c696b3          	sll	a3,a3,t3
200185aa:	8ed9                	or	a3,a3,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
200185ac:	0106d813          	srli	a6,a3,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1196
200185b0:	01d5d733          	srl	a4,a1,t4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
200185b4:	03077333          	remu	t1,a4,a6
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1197
200185b8:	01c595b3          	sll	a1,a1,t3
200185bc:	01d557b3          	srl	a5,a0,t4
200185c0:	8fcd                	or	a5,a5,a1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
200185c2:	01069593          	slli	a1,a3,0x10
200185c6:	81c1                	srli	a1,a1,0x10
200185c8:	0107d893          	srli	a7,a5,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1195
200185cc:	01c61633          	sll	a2,a2,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1198
200185d0:	01c51533          	sll	a0,a0,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
200185d4:	03075733          	divu	a4,a4,a6
200185d8:	0342                	slli	t1,t1,0x10
200185da:	011368b3          	or	a7,t1,a7
200185de:	02e58f33          	mul	t5,a1,a4
200185e2:	833a                	mv	t1,a4
200185e4:	01e8fc63          	bgeu	a7,t5,200185fc <__umoddi3+0x290>
200185e8:	98b6                	add	a7,a7,a3
200185ea:	fff70313          	addi	t1,a4,-1 # ffff <__heap_size+0xf7ff>
200185ee:	00d8e763          	bltu	a7,a3,200185fc <__umoddi3+0x290>
200185f2:	01e8f563          	bgeu	a7,t5,200185fc <__umoddi3+0x290>
200185f6:	ffe70313          	addi	t1,a4,-2
200185fa:	98b6                	add	a7,a7,a3
200185fc:	41e888b3          	sub	a7,a7,t5
20018600:	0308ff33          	remu	t5,a7,a6
20018604:	0308d8b3          	divu	a7,a7,a6
20018608:	0f42                	slli	t5,t5,0x10
2001860a:	03158833          	mul	a6,a1,a7
2001860e:	01079593          	slli	a1,a5,0x10
20018612:	81c1                	srli	a1,a1,0x10
20018614:	00bf65b3          	or	a1,t5,a1
20018618:	87c6                	mv	a5,a7
2001861a:	0105fc63          	bgeu	a1,a6,20018632 <__umoddi3+0x2c6>
2001861e:	95b6                	add	a1,a1,a3
20018620:	fff88793          	addi	a5,a7,-1 # ffffff <__heap_size+0xfff7ff>
20018624:	00d5e763          	bltu	a1,a3,20018632 <__umoddi3+0x2c6>
20018628:	0105f563          	bgeu	a1,a6,20018632 <__umoddi3+0x2c6>
2001862c:	ffe88793          	addi	a5,a7,-2
20018630:	95b6                	add	a1,a1,a3
20018632:	0342                	slli	t1,t1,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
20018634:	6f41                	lui	t5,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20018636:	00f36333          	or	t1,t1,a5
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
2001863a:	ffff0793          	addi	a5,t5,-1 # ffff <__heap_size+0xf7ff>
2001863e:	00f378b3          	and	a7,t1,a5
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20018642:	410585b3          	sub	a1,a1,a6
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
20018646:	01035313          	srli	t1,t1,0x10
2001864a:	01065813          	srli	a6,a2,0x10
2001864e:	8ff1                	and	a5,a5,a2
20018650:	02f88733          	mul	a4,a7,a5
20018654:	02f307b3          	mul	a5,t1,a5
20018658:	030888b3          	mul	a7,a7,a6
2001865c:	03030333          	mul	t1,t1,a6
20018660:	98be                	add	a7,a7,a5
20018662:	01075813          	srli	a6,a4,0x10
20018666:	9846                	add	a6,a6,a7
20018668:	00f87363          	bgeu	a6,a5,2001866e <__umoddi3+0x302>
2001866c:	937a                	add	t1,t1,t5
2001866e:	01085793          	srli	a5,a6,0x10
20018672:	933e                	add	t1,t1,a5
20018674:	67c1                	lui	a5,0x10
20018676:	17fd                	addi	a5,a5,-1
20018678:	00f87833          	and	a6,a6,a5
2001867c:	0842                	slli	a6,a6,0x10
2001867e:	8f7d                	and	a4,a4,a5
20018680:	9742                	add	a4,a4,a6
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1203
20018682:	0065e663          	bltu	a1,t1,2001868e <__umoddi3+0x322>
20018686:	00659c63          	bne	a1,t1,2001869e <__umoddi3+0x332>
2001868a:	00e57a63          	bgeu	a0,a4,2001869e <__umoddi3+0x332>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1206
2001868e:	40c70633          	sub	a2,a4,a2
20018692:	00c73733          	sltu	a4,a4,a2
20018696:	9736                	add	a4,a4,a3
20018698:	40e30333          	sub	t1,t1,a4
2001869c:	8732                	mv	a4,a2
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1214
2001869e:	40e50733          	sub	a4,a0,a4
200186a2:	00e53533          	sltu	a0,a0,a4
200186a6:	406585b3          	sub	a1,a1,t1
200186aa:	8d89                	sub	a1,a1,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1215
200186ac:	01d597b3          	sll	a5,a1,t4
200186b0:	01c75733          	srl	a4,a4,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1217
200186b4:	00e7e533          	or	a0,a5,a4
200186b8:	01c5d5b3          	srl	a1,a1,t3
__umoddi3():
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1312
200186bc:	b395                	j	20018420 <__umoddi3+0xb4>

200186be <metal_init>:
metal_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:17
extern metal_constructor_t metal_constructors_start;
extern metal_constructor_t metal_constructors_end;
extern metal_destructor_t metal_destructors_start;
extern metal_destructor_t metal_destructors_end;

void metal_init(void) {
200186be:	1101                	addi	sp,sp,-32
200186c0:	ce06                	sw	ra,28(sp)
200186c2:	cc22                	sw	s0,24(sp)
200186c4:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:20
    /* Make sure the constructors only run once */
    static int init_done = 0;
    if (init_done) {
200186c6:	800017b7          	lui	a5,0x80001
200186ca:	b1c7a783          	lw	a5,-1252(a5) # 80000b1c <metal_segment_heap_target_end+0xfffff35c>
200186ce:	efa9                	bnez	a5,20018728 <metal_init+0x6a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:23
        return;
    }
    init_done = 1;
200186d0:	800017b7          	lui	a5,0x80001
200186d4:	4705                	li	a4,1
200186d6:	b0e7ae23          	sw	a4,-1252(a5) # 80000b1c <metal_segment_heap_target_end+0xfffff35c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:25

    if (&metal_constructors_end <= &metal_constructors_start) {
200186da:	200107b7          	lui	a5,0x20010
200186de:	2f478713          	addi	a4,a5,756 # 200102f4 <metal_constructors_end>
200186e2:	200107b7          	lui	a5,0x20010
200186e6:	2e878793          	addi	a5,a5,744 # 200102e8 <_metal_sifive_fe310_g000_pll_init_ptr>
200186ea:	04e7f163          	bgeu	a5,a4,2001872c <metal_init+0x6e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:29
        return;
    }

    metal_constructor_t *funcptr = &metal_constructors_start;
200186ee:	200107b7          	lui	a5,0x20010
200186f2:	2e878793          	addi	a5,a5,744 # 200102e8 <_metal_sifive_fe310_g000_pll_init_ptr>
200186f6:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
200186fa:	a831                	j	20018716 <metal_init+0x58>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:31
        metal_constructor_t func = *funcptr;
200186fc:	fec42783          	lw	a5,-20(s0)
20018700:	439c                	lw	a5,0(a5)
20018702:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:33

        func();
20018706:	fe842783          	lw	a5,-24(s0)
2001870a:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:35

        funcptr += 1;
2001870c:	fec42783          	lw	a5,-20(s0)
20018710:	0791                	addi	a5,a5,4
20018712:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
20018716:	fec42703          	lw	a4,-20(s0)
2001871a:	200107b7          	lui	a5,0x20010
2001871e:	2f478793          	addi	a5,a5,756 # 200102f4 <metal_constructors_end>
20018722:	fcf71de3          	bne	a4,a5,200186fc <metal_init+0x3e>
20018726:	a021                	j	2001872e <metal_init+0x70>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:21
        return;
20018728:	0001                	nop
2001872a:	a011                	j	2001872e <metal_init+0x70>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:26
        return;
2001872c:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:37
    }
}
2001872e:	40f2                	lw	ra,28(sp)
20018730:	4462                	lw	s0,24(sp)
20018732:	6105                	addi	sp,sp,32
20018734:	8082                	ret

20018736 <metal_fini>:
metal_fini():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:39

void metal_fini(void) {
20018736:	1101                	addi	sp,sp,-32
20018738:	ce06                	sw	ra,28(sp)
2001873a:	cc22                	sw	s0,24(sp)
2001873c:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:42
    /* Make sure the destructors only run once */
    static int fini_done = 0;
    if (fini_done) {
2001873e:	800017b7          	lui	a5,0x80001
20018742:	b207a783          	lw	a5,-1248(a5) # 80000b20 <metal_segment_heap_target_end+0xfffff360>
20018746:	efa9                	bnez	a5,200187a0 <metal_fini+0x6a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:45
        return;
    }
    fini_done = 1;
20018748:	800017b7          	lui	a5,0x80001
2001874c:	4705                	li	a4,1
2001874e:	b2e7a023          	sw	a4,-1248(a5) # 80000b20 <metal_segment_heap_target_end+0xfffff360>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:47

    if (&metal_destructors_end <= &metal_destructors_start) {
20018752:	200107b7          	lui	a5,0x20010
20018756:	2f878713          	addi	a4,a5,760 # 200102f8 <__fini_array_end>
2001875a:	200107b7          	lui	a5,0x20010
2001875e:	2f878793          	addi	a5,a5,760 # 200102f8 <__fini_array_end>
20018762:	04e7f163          	bgeu	a5,a4,200187a4 <metal_fini+0x6e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:51
        return;
    }

    metal_destructor_t *funcptr = &metal_destructors_start;
20018766:	200107b7          	lui	a5,0x20010
2001876a:	2f878793          	addi	a5,a5,760 # 200102f8 <__fini_array_end>
2001876e:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
20018772:	a831                	j	2001878e <metal_fini+0x58>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:53
        metal_destructor_t func = *funcptr;
20018774:	fec42783          	lw	a5,-20(s0)
20018778:	439c                	lw	a5,0(a5)
2001877a:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:55

        func();
2001877e:	fe842783          	lw	a5,-24(s0)
20018782:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:57

        funcptr += 1;
20018784:	fec42783          	lw	a5,-20(s0)
20018788:	0791                	addi	a5,a5,4
2001878a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
2001878e:	fec42703          	lw	a4,-20(s0)
20018792:	200107b7          	lui	a5,0x20010
20018796:	2f878793          	addi	a5,a5,760 # 200102f8 <__fini_array_end>
2001879a:	fcf71de3          	bne	a4,a5,20018774 <metal_fini+0x3e>
2001879e:	a021                	j	200187a6 <metal_fini+0x70>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:43
        return;
200187a0:	0001                	nop
200187a2:	a011                	j	200187a6 <metal_fini+0x70>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:48
        return;
200187a4:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:59
    }
}
200187a6:	40f2                	lw	ra,28(sp)
200187a8:	4462                	lw	s0,24(sp)
200187aa:	6105                	addi	sp,sp,32
200187ac:	8082                	ret

200187ae <metal_init_run>:
metal_init_run():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:69
 * in the case that users don't want the metal constructors or
 * destructors to run.
 */

void metal_init_run(void) __attribute__((weak));
void metal_init_run(void) { metal_init(); }
200187ae:	1141                	addi	sp,sp,-16
200187b0:	c606                	sw	ra,12(sp)
200187b2:	c422                	sw	s0,8(sp)
200187b4:	0800                	addi	s0,sp,16
200187b6:	f09ff0ef          	jal	ra,200186be <metal_init>
200187ba:	0001                	nop
200187bc:	40b2                	lw	ra,12(sp)
200187be:	4422                	lw	s0,8(sp)
200187c0:	0141                	addi	sp,sp,16
200187c2:	8082                	ret

200187c4 <metal_fini_run>:
metal_fini_run():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:72

void metal_fini_run(void) __attribute__((weak));
void metal_fini_run(void) { metal_fini(); }
200187c4:	1141                	addi	sp,sp,-16
200187c6:	c606                	sw	ra,12(sp)
200187c8:	c422                	sw	s0,8(sp)
200187ca:	0800                	addi	s0,sp,16
200187cc:	f6bff0ef          	jal	ra,20018736 <metal_fini>
200187d0:	0001                	nop
200187d2:	40b2                	lw	ra,12(sp)
200187d4:	4422                	lw	s0,8(sp)
200187d6:	0141                	addi	sp,sp,16
200187d8:	8082                	ret

200187da <metal_tty_putc>:
metal_tty_putc():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/tty.c:12
int metal_tty_putc(int c) {
200187da:	1101                	addi	sp,sp,-32
200187dc:	ce06                	sw	ra,28(sp)
200187de:	cc22                	sw	s0,24(sp)
200187e0:	1000                	addi	s0,sp,32
200187e2:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/tty.c:13
    return metal_uart_putc(__METAL_DT_STDOUT_UART_HANDLE, c);
200187e6:	fec42583          	lw	a1,-20(s0)
200187ea:	800017b7          	lui	a5,0x80001
200187ee:	a5c78513          	addi	a0,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
200187f2:	a20ff0ef          	jal	ra,20017a12 <metal_uart_putc>
200187f6:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/tty.c:14
}
200187f8:	853e                	mv	a0,a5
200187fa:	40f2                	lw	ra,28(sp)
200187fc:	4462                	lw	s0,24(sp)
200187fe:	6105                	addi	sp,sp,32
20018800:	8082                	ret

20018802 <_exit>:
_exit():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_exit.c:3
#include <metal/shutdown.h>

void _exit(int exit_status) {
20018802:	1101                	addi	sp,sp,-32
20018804:	ce06                	sw	ra,28(sp)
20018806:	cc22                	sw	s0,24(sp)
20018808:	1000                	addi	s0,sp,32
2001880a:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_exit.c:4
    metal_shutdown(exit_status);
2001880e:	fec42503          	lw	a0,-20(s0)
20018812:	8a6ff0ef          	jal	ra,200178b8 <metal_shutdown>
