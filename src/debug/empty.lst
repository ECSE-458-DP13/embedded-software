
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/debug/empty.elf:     file format elf32-littleriscv
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/debug/empty.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x20010000

Program Header:
    LOAD off    0x00001000 vaddr 0x20010000 paddr 0x20010000 align 2**12
         filesz 0x00001148 memsz 0x00001148 flags rwx
    LOAD off    0x00003000 vaddr 0x80000000 paddr 0x20018598 align 2**12
         filesz 0x00000b0c memsz 0x00000b0c flags rw-
     TLS off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**2
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00003b10 vaddr 0x80000b10 paddr 0x80000b10 align 2**12
         filesz 0x00000000 memsz 0x00000cb0 flags rw-
    LOAD off    0x00003b0c vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00004180 vaddr 0x20011180 paddr 0x20011180 align 2**12
         filesz 0x00007416 memsz 0x00007416 flags r-x
    LOAD off    0x0000b596 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .init             000002e6  20010000  20010000  00001000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .init_array       0000000c  200102e8  200102e8  000012e8  2**3  CONTENTS, ALLOC, LOAD, DATA
  2 .ctors            0000007a  200102f4  200102f4  000012f4  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata           00000dd8  20010370  20010370  00001370  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .text             00007416  20011180  20011180  00004180  2**7  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .data             00000b0c  80000000  20018598  00003000  2**3  CONTENTS, ALLOC, LOAD, DATA
  6 .bss              000000a4  80000b10  80000b10  00003b10  2**3  ALLOC
  7 .stack            00000400  80000bc0  80000bc0  00003b10  2**4  ALLOC
  8 .heap             00000800  80000fc0  80000fc0  00003b10  2**3  ALLOC
  9 .debug_info       000367db  00000000  00000000  0000b596  2**0  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev     00004315  00000000  00000000  00041d71  2**0  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges    00000ce0  00000000  00000000  00046088  2**3  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges     00000c38  00000000  00000000  00046d68  2**3  CONTENTS, READONLY, DEBUGGING
 13 .debug_line       0000ef9d  00000000  00000000  000479a0  2**0  CONTENTS, READONLY, DEBUGGING
 14 .debug_str        00005907  00000000  00000000  0005693d  2**0  CONTENTS, READONLY, DEBUGGING
 15 .comment          00000028  00000000  00000000  0005c244  2**0  CONTENTS, READONLY
 16 .riscv.attributes 0000002b  00000000  00000000  0005c26c  2**0  CONTENTS, READONLY
 17 .debug_frame      000031ec  00000000  00000000  0005c298  2**2  CONTENTS, READONLY, DEBUGGING
 18 .debug_loc        00001539  00000000  00000000  0005f484  2**0  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
20010000 l    d  .init	00000000 .init
200102e8 l    d  .init_array	00000000 .init_array
200102f4 l    d  .ctors	00000000 .ctors
20010370 l    d  .rodata	00000000 .rodata
20011180 l    d  .text	00000000 .text
80000000 l    d  .data	00000000 .data
80000b10 l    d  .bss	00000000 .bss
80000bc0 l    d  .stack	00000000 .stack
80000fc0 l    d  .heap	00000000 .heap
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    df *ABS*	00000000 scrub.o
200100ca l     F .init	00000000 __metal_memory_scrub
20010138 l       .init	00000000 skip_scrub
00000000 l    df *ABS*	00000000 synchronize_harts.c
00000000 l    df *ABS*	00000000 crt0.o
20010248 l       .init	00000000 _skip_init
20011034 l       .rodata	00000000 argv
20011038 l       .rodata	00000000 envp
2001103c l       .rodata	00000000 name
00000000 l    df *ABS*	00000000 sifive_fe310-g000_pll.c
20015066 l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllsel0
20015080 l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllref
2001509a l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_divider_base
200150b0 l     F .text	00000014 __metal_driver_sifive_fe310_g000_pll_divider_offset
200150c4 l     F .text	00000012 __metal_driver_sifive_fe310_g000_pll_config_base
200150d6 l     F .text	00000010 __metal_driver_sifive_fe310_g000_pll_config_offset
200150e6 l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_init_rate
200150fc l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
2001510e l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
200106d4 l     O .rodata	00000880 pll_configs
20015120 l     F .text	0000004e get_pll_config_freq
20015382 l     F .text	000000ac find_closest_config
2001542e l     F .text	000001a4 configure_pll
00000000 l    df *ABS*	00000000 tty.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 findfp.c
20011720 l     F .text	00000068 std
00000000 l    df *ABS*	00000000 nano-vfprintf.c
20011bd0 l     F .text	0000002a __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 riscv_clint0.c
2001248e l     F .text	00000026 __metal_driver_sifive_clint0_control_base
200124b4 l     F .text	00000024 __metal_driver_sifive_clint0_num_interrupts
200124d8 l     F .text	0000003c __metal_driver_sifive_clint0_interrupt_parents
20012514 l     F .text	00000030 __metal_driver_sifive_clint0_interrupt_lines
20012674 l     F .text	00000036 _get_cpu_intc
00000000 l    df *ABS*	00000000 riscv_cpu.c
20012ba6 l     F .text	00000024 __metal_driver_cpu_hartid
20012bca l     F .text	0000002a __metal_driver_cpu_timebase
20012bf4 l     F .text	0000002a __metal_driver_cpu_interrupt_controller
20012c1e l     F .text	00000024 __metal_driver_cpu_buserror
00000000 l    df *ABS*	00000000 riscv_plic0.c
200145c4 l     F .text	0000002a __metal_driver_sifive_plic0_control_base
200145ee l     F .text	0000002a __metal_driver_sifive_plic0_num_interrupts
20014618 l     F .text	00000028 __metal_driver_sifive_plic0_max_priority
20014640 l     F .text	00000028 __metal_driver_sifive_plic0_interrupt_parents
20014668 l     F .text	00000022 __metal_driver_sifive_plic0_interrupt_lines
2001468a l     F .text	0000001e __metal_driver_sifive_plic0_context_ids
00000000 l    df *ABS*	00000000 sifive_gpio0.c
200157b0 l     F .text	00000026 __metal_driver_sifive_gpio0_base
200157d6 l     F .text	0000002a __metal_driver_sifive_gpio0_interrupt_parent
20015800 l     F .text	0000035e __metal_driver_sifive_gpio0_interrupt_lines
00000000 l    df *ABS*	00000000 sifive_i2c0.c
2001620e l     F .text	0000002a __metal_driver_sifive_i2c0_control_base
20016238 l     F .text	0000002e __metal_driver_sifive_i2c0_clock
20016266 l     F .text	0000002a __metal_driver_sifive_i2c0_pinmux
20016290 l     F .text	00000028 __metal_driver_sifive_i2c0_pinmux_output_selector
200162b8 l     F .text	00000028 __metal_driver_sifive_i2c0_pinmux_source_selector
200162e0 l     F .text	00000034 pre_rate_change_callback
20016314 l     F .text	00000030 post_rate_change_callback
20016344 l     F .text	0000008e __metal_driver_sifive_i2c0_init
200163d2 l     F .text	00000020 __metal_driver_sifive_i2c0_get_baud_rate
200163f2 l     F .text	00000156 __metal_driver_sifive_i2c0_set_baud_rate
20016548 l     F .text	00000148 __metal_driver_sifive_i2c0_write_addr
20016690 l     F .text	00000168 __metal_driver_sifive_i2c0_write
200167f8 l     F .text	00000158 __metal_driver_sifive_i2c0_read
20016950 l     F .text	00000260 __metal_driver_sifive_i2c0_transfer
00000000 l    df *ABS*	00000000 sifive_uart0.c
20016bb0 l     F .text	00000040 __metal_driver_sifive_uart0_control_base
20016bf0 l     F .text	00000048 __metal_driver_sifive_uart0_interrupt_parent
20016c38 l     F .text	0000003c __metal_driver_sifive_uart0_interrupt_line
20016c74 l     F .text	00000048 __metal_driver_sifive_uart0_clock
20016cbc l     F .text	00000040 __metal_driver_sifive_uart0_pinmux
20016cfc l     F .text	0000003c __metal_driver_sifive_uart0_pinmux_output_selector
20016d38 l     F .text	00000040 __metal_driver_sifive_uart0_pinmux_source_selector
20017118 l     F .text	000000d8 pre_rate_change_callback_func
200171f0 l     F .text	0000002e post_rate_change_callback_func
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfrosc.c
20014e7e l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfrosc_ref
20014e98 l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfrosc_config_base
20014eae l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfrosc_config_offset
20014ec2 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfxosc.c
20014f7a l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfxosc_ref
20014f94 l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfxosc_config_base
20014faa l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfxosc_config_offset
20014fbe l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_prci.c
20015738 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 cpu.c
00000000 l    df *ABS*	00000000 i2c.c
00000000 l    df *ABS*	00000000 shutdown.c
00000000 l    df *ABS*	00000000 time.c
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 vector.o
20017800 l       .text	00000000 IRQ_0
20017804 l       .text	00000000 IRQ_1
20017808 l       .text	00000000 IRQ_2
2001780c l       .text	00000000 IRQ_3
20017810 l       .text	00000000 IRQ_4
20017814 l       .text	00000000 IRQ_5
20017818 l       .text	00000000 IRQ_6
2001781c l       .text	00000000 IRQ_7
20017820 l       .text	00000000 IRQ_8
20017824 l       .text	00000000 IRQ_9
20017828 l       .text	00000000 IRQ_10
2001782c l       .text	00000000 IRQ_11
20017830 l       .text	00000000 IRQ_12
20017834 l       .text	00000000 IRQ_13
20017838 l       .text	00000000 IRQ_14
2001783c l       .text	00000000 IRQ_15
20017840 l       .text	00000000 IRQ_LC0
20017844 l       .text	00000000 IRQ_LC1
20017848 l       .text	00000000 IRQ_LC2
2001784c l       .text	00000000 IRQ_LC3
20017850 l       .text	00000000 IRQ_LC4
20017854 l       .text	00000000 IRQ_LC5
20017858 l       .text	00000000 IRQ_LC6
2001785c l       .text	00000000 IRQ_LC7
20017860 l       .text	00000000 IRQ_LC8
20017864 l       .text	00000000 IRQ_LC9
20017868 l       .text	00000000 IRQ_LC10
2001786c l       .text	00000000 IRQ_LC11
20017870 l       .text	00000000 IRQ_LC12
20017874 l       .text	00000000 IRQ_LC13
20017878 l       .text	00000000 IRQ_LC14
2001787c l       .text	00000000 IRQ_LC15
00000000 l    df *ABS*	00000000 fixed-clock.c
20017880 l     F .text	00000070 __metal_driver_fixed_clock_rate
00000000 l    df *ABS*	00000000 timer.c
00000000 l    df *ABS*	00000000 sys_close.c
00000000 l    df *ABS*	00000000 sys_fstat.c
00000000 l    df *ABS*	00000000 sys_isatty.c
00000000 l    df *ABS*	00000000 sys_lseek.c
00000000 l    df *ABS*	00000000 sys_read.c
00000000 l    df *ABS*	00000000 sys_sbrk.c
80000b08 l     O .data	00000004 __brk
00000000 l    df *ABS*	00000000 sys_write.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 __atexit.c
80000b24 l     O .bss	0000008c _global_atexit0
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 init.c
80000b1c l     O .bss	00000004 init_done.1531
80000b20 l     O .bss	00000004 fini_done.1540
00000000 l    df *ABS*	00000000 sys_exit.c
00000000 l    df *ABS*	00000000 impure.c
80000000 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 inline.c
00000000 l    df *ABS*	00000000 
200102f4 l       .init_array	00000000 metal_constructors_end
200102f8 l       .init_array	00000000 __fini_array_end
200102f8 l       .init_array	00000000 metal_destructors_end
200102f8 l       .init_array	00000000 metal_destructors_start
200102f8 l       .init_array	00000000 __fini_array_start
200102e8 l       .init_array	00000000 __init_array_end
200102e8 l       .init_array	00000000 __preinit_array_end
200102e8 l       .init_array	00000000 __init_array_start
200102e8 l       .init_array	00000000 metal_constructors_start
200102e8 l       .init_array	00000000 __preinit_array_start
20010ff4 g     O .rodata	00000040 __metal_driver_vtable_sifive_uart0
2001203c g     F .text	0000002a _isatty_r
200134d0  w    F .text	00000096 metal_lc4_interrupt_vector_handler
200112ba g     F .text	000000da _puts_r
2001754e g     F .text	00000046 metal_i2c_write
20012066 g     F .text	0000002e _lseek_r
20017382 g     F .text	00000026 metal_clock_get_rate_hz
20017078 g     F .text	000000a0 __metal_driver_sifive_uart0_set_baud_rate
20012850 g     F .text	00000058 __metal_driver_riscv_clint0_set_vector_mode
20016ecc g     F .text	0000004a __metal_driver_sifive_uart0_set_tx_watermark
2001343a  w    F .text	00000096 metal_lc3_interrupt_vector_handler
20013cc0 g     F .text	00000064 __metal_valid_interrupt_id
20011276 g     F .text	00000044 printf
800012c0 g       .data	00000000 __global_pointer$
200102ec g     O .init_array	00000004 _use_hfxosc_ptr
2001413a g     F .text	0000001c __metal_driver_riscv_cpu_controller_get_vector_mode
2001034a g     F .ctors	00000024 metal_tty_init
2001732e g     F .text	00000054 _metal_clock_append_to_callbacks
200146e4 g     F .text	00000046 __metal_plic0_complete_interrupt
20013f10 g     F .text	000001d6 __metal_driver_riscv_cpu_controller_interrupt_register
200102e8 g     O .init_array	00000004 _metal_sifive_fe310_g000_pll_init_ptr
20011f7c g     F .text	00000036 __sseek
200117d6 g     F .text	00000066 __sinit
80000ac4  w    O .data	00000004 __metal_i2c_table
200113a2 g     F .text	000000c0 __swbuf_r
80000b10 g       .data	00000000 __tls_base
20011792 g     F .text	00000044 __sfmoreglue
200120b0 g     F .text	00000002 __malloc_unlock
2001751a g     F .text	00000034 metal_i2c_init
200174d2 g     F .text	0000002e metal_cpu_get
80000a5c g     O .data	00000020 __metal_dt_serial_10013000
20015de8 g     F .text	0000004a __metal_driver_sifive_gpio0_disable_io
200104d0 g     O .rodata	00000064 __metal_driver_vtable_riscv_clint0
80000bb4 g       .bss	00000000 metal_segment_bss_target_end
20012544 g     F .text	0000009a __metal_clint0_mtime_get
20014538 g     F .text	0000002e __metal_driver_cpu_get_instruction_length
00000001 g       *ABS*	00000000 __metal_chicken_bit
20016f90 g     F .text	00000030 __metal_driver_sifive_uart0_get_rx_watermark
20015b9e g     F .text	00000046 __metal_driver_sifive_gpio0_disable_input
20017b68 g     F .text	0000000c __errno
08000000 g       .rodata	00000000 metal_segment_itim_target_start
20017482 g     F .text	0000002a metal_cpu_get_timebase
20016e9c g     F .text	00000030 __metal_driver_sifive_uart0_txready
20016e2a g     F .text	0000003a __metal_driver_sifive_uart0_rx_interrupt_enable
2001014a g     F .init	0000000e __metal_synchronize_harts
80000b10 g       .data	00000000 metal_segment_bss_target_start
200125de g     F .text	00000096 __metal_driver_riscv_clint0_mtimecmp_set
20012010 g     F .text	0000002c _fstat_r
20016038 g     F .text	00000188 __metal_driver_sifive_gpio0_clear_int
80000bb0 g     O .bss	00000004 errno
20015212 g     F .text	00000170 __metal_driver_sifive_fe310_g000_pll_get_rate_hz
00000400 g       *ABS*	00000000 __stack_size
200173f4 g     F .text	00000032 metal_clock_register_pre_rate_change_callback
200137be  w    F .text	00000096 metal_lc9_interrupt_vector_handler
200100d6  w    F .init	00000000 __metal_before_start
2001852e  w    F .text	00000016 metal_init_run
80000a7c g     O .data	00000020 __metal_dt_serial_10023000
20010670 g     O .rodata	00000064 __metal_driver_vtable_riscv_plic0
2001062c g     O .rodata	00000044 __metal_driver_vtable_cpu
200177c0 g     F .text	0000002e metal_uart_set_baud_rate
2001721e g     F .text	000000d0 __metal_driver_sifive_uart0_init
00000000 g       *ABS*	00000000 __metal_eccscrub_bit
80000a38 g     O .data	00000024 __metal_dt_i2c_10016000
200141c6 g     F .text	00000072 __metal_driver_cpu_mcycle_get
20010f54 g     O .rodata	0000000c __metal_driver_vtable_sifive_fe310_g000_pll
80000fc0 g       .heap	00000000 metal_segment_heap_target_start
20011788 g     F .text	0000000a _cleanup_r
80000ad8 g     O .data	00000008 __metal_dt_cpu_0
20013728  w    F .text	00000096 metal_lc8_interrupt_vector_handler
200155d2 g     F .text	00000166 __metal_driver_sifive_fe310_g000_pll_set_rate_hz
2001797e g     F .text	0000004a metal_timer_get_timebase_frequency
20014de2 g     F .text	00000074 __metal_driver_riscv_plic0_affinity_set_threshold
20011394 g     F .text	0000000e puts
20013a16  w    F .text	00000096 metal_lc13_interrupt_vector_handler
20012db0 g     F .text	00000018 __metal_default_exception_handler
200179ea g     F .text	00000026 _fstat
20012b72 g     F .text	00000034 __metal_driver_riscv_clint0_set_interrupt
20014156 g     F .text	00000054 __metal_driver_riscv_cpu_controller_set_vector_mode
20012c42 g     F .text	00000030 __metal_driver_cpu_get
200105c8 g     O .rodata	00000064 __metal_driver_vtable_riscv_cpu_intc
20012ca4 g     F .text	00000018 __metal_interrupt_global_disable
20014e56 g     F .text	00000028 __metal_driver_riscv_plic0_affinity_get_threshold
20013692  w    F .text	00000096 metal_lc7_interrupt_vector_handler
20013854  w    F .text	00000096 metal_lc10_interrupt_vector_handler
20011ed4 g     F .text	0000002a _sbrk_r
20014c02 g     F .text	00000050 __metal_driver_riscv_plic0_disable
20013de0 g     F .text	0000004e __metal_exception_register
2001843e g     F .text	00000078 metal_init
20012460 g     F .text	0000002e _read_r
2001435a g     F .text	00000016 __metal_driver_cpu_timer_controller_interrupt
20015c80 g     F .text	00000040 __metal_driver_sifive_gpio0_enable_output
80000000 g       .rodata	00000000 metal_segment_lim_target_end
20012ea0 g     F .text	00000068 __metal_default_sw_handler
20017426 g     F .text	00000032 metal_clock_register_post_rate_change_callback
8000006c g     O .data	0000000c __metal_dt_clock_2
20016d78 g     F .text	00000020 __metal_driver_sifive_uart0_interrupt_controller
200180ec g     F .text	00000352 .hidden __umoddi3
20017a10 g     F .text	00000020 _isatty
20015d46 g     F .text	00000040 __metal_driver_sifive_gpio0_output_toggle
20016db8 g     F .text	0000003a __metal_driver_sifive_uart0_tx_interrupt_enable
80000b00 g     O .data	00000008 __metal_driver_vtable_fixed_clock
80000acc g     O .data	00000004 _global_impure_ptr
20012f08  w    F .text	00000092 metal_timer_interrupt_vector_handler
20017bd4 g     F .text	0000006a __libc_init_array
20015cc0 g     F .text	00000040 __metal_driver_sifive_gpio0_output_set
200138ea  w    F .text	00000096 metal_lc11_interrupt_vector_handler
20017d8e g     F .text	0000035e .hidden __udivdi3
20010fdc g     O .rodata	00000018 __metal_driver_vtable_sifive_i2c0
20015044 g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz
200140e6 g     F .text	0000002a __metal_driver_riscv_cpu_controller_interrupt_enable
20017a84 g     F .text	0000006a _sbrk
20015c3a g     F .text	00000046 __metal_driver_sifive_gpio0_disable_output
200172ee g     F .text	00000040 _metal_clock_call_all_callbacks
200102c4 g     F .init	00000002 _init
20012d06 g     F .text	0000001a __metal_interrupt_timer_disable
20015e32 g     F .text	00000206 __metal_driver_sifive_gpio0_config_int
20014410 g     F .text	00000062 __metal_driver_cpu_clear_sw_ipi
20010fa0 g     O .rodata	0000003c __metal_driver_vtable_sifive_gpio0
20016df2 g     F .text	00000038 __metal_driver_sifive_uart0_tx_interrupt_disable
20015d86 g     F .text	00000062 __metal_driver_sifive_gpio0_enable_io
20017b9c g     F .text	00000038 __libc_fini_array
80000ab4 g     O .data	0000000c __metal_dt_clock_4
200184b6 g     F .text	00000078 metal_fini
200161c0 g     F .text	00000020 __metal_driver_gpio_interrupt_controller
2001439a g     F .text	00000014 __metal_driver_cpu_get_sw_interrupt_id
200145a4 g     F .text	00000020 __metal_driver_cpu_get_buserror
80000000 g       .data	00000000 metal_segment_data_target_start
20012d58 g     F .text	0000002c __metal_interrupt_local_enable
20012b3e g     F .text	00000034 __metal_driver_riscv_clint0_clear_interrupt
2001855a g     F .text	00000028 metal_tty_putc
200148e2 g     F .text	00000018 __metal_plic0_default_handler
20017aee  w    F .text	00000070 write
00000000 g       *ABS*	00000000 __tbss_size
80000060 g     O .data	0000000c __metal_dt_clock_0
20017646 g     F .text	000000e6 metal_gettimeofday
00000800 g       *ABS*	00000000 __heap_size
20014c52 g     F .text	00000030 __metal_driver_riscv_plic0_set_threshold
20012f9a g     F .text	00000016 __metal_default_beu_handler
20010434 g     O .rodata	00000020 __sf_fake_stderr
20012d3c g     F .text	0000001c __metal_interrupt_external_disable
20016d98 g     F .text	00000020 __metal_driver_sifive_uart0_get_interrupt_id
20017594 g     F .text	00000046 metal_i2c_read
200141aa g     F .text	0000001c __metal_driver_riscv_cpu_controller_command_request
20013e2e g     F .text	000000e2 __metal_driver_riscv_cpu_controller_interrupt_init
20011bfa g     F .text	00000042 __sfputs_r
200144f2 g     F .text	00000046 __metal_driver_cpu_exception_register
20012cbc g     F .text	00000018 __metal_interrupt_software_enable
2001330e  w    F .text	00000096 metal_lc1_interrupt_vector_handler
20012094 g     F .text	0000001a memchr
200175da g     F .text	00000030 metal_i2c_set_baud_rate
20011a46 g     F .text	000000ac _free_r
80000b18 g     O .bss	00000004 _global_atexit
200147aa g     F .text	00000062 __metal_driver_riscv_plic0_set_priority
20013bd8 g     F .text	00000050 __metal_controller_interrupt_vector_mode
20017cc6 g     F .text	000000c8 __call_exitprocs
80000fc0 g       .stack	00000000 _sp
200102f0 g     O .init_array	00000004 _metal_tty_init_ptr
20010158 g     F .init	00000000 _start
20014ed4 g     F .text	00000084 __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz
20017934 g     F .text	0000004a metal_timer_get_cyclecount
20017a30 g     F .text	0000002a _lseek
200144d2 g     F .text	00000020 __metal_driver_cpu_controller_interrupt
20014566 g     F .text	0000001e __metal_driver_cpu_get_exception_pc
20012d20 g     F .text	0000001c __metal_interrupt_external_enable
20017c3e g     F .text	00000088 __register_exitproc
20016fc0 g     F .text	00000042 __metal_driver_sifive_uart0_putc
2001499e g     F .text	00000152 __metal_driver_riscv_plic0_init
20014bb2 g     F .text	00000050 __metal_driver_riscv_plic0_enable
20015c0e g     F .text	0000002c __metal_driver_sifive_gpio0_output
200135fc  w    F .text	00000096 metal_lc6_interrupt_vector_handler
20012c72 g     F .text	0000001a __metal_myhart_id
200161e0 g     F .text	0000002e __metal_driver_gpio_get_interrupt_id
20012e0e  w    F .text	00000092 metal_software_interrupt_vector_handler
20014110 g     F .text	0000002a __metal_driver_riscv_cpu_controller_interrupt_disable
20011fe6 g     F .text	0000002a _close_r
20017458 g     F .text	0000002a metal_cpu_get_timer
20017058 g     F .text	00000020 __metal_driver_sifive_uart0_get_baud_rate
20012732 g     F .text	000000da __metal_driver_riscv_clint0_register
80000ad0 g     O .data	00000008 __metal_dt_clint_2000000
20011462 g     F .text	00000110 __swsetup_r
2001183c g     F .text	0000009a __sfp
200173a8 g     F .text	0000004c metal_clock_set_rate_hz
20011efe g     F .text	00000030 __sread
20015b5e g     F .text	00000040 __metal_driver_sifive_gpio0_enable_input
200102c6  w    F .init	00000000 secondary_main
20012de0  w    F .text	0000002e metal_interrupt_vector_handler
200120ae g     F .text	00000002 __malloc_lock
20016e64 g     F .text	00000038 __metal_driver_sifive_uart0_rx_interrupt_disable
200116bc g     F .text	00000064 _fflush_r
20014770 g     F .text	0000003a __metal_plic0_get_threshold
2001574a g     F .text	0000002e __metal_driver_sifive_fe310_g000_prci_get_reg
20010454 g     O .rodata	00000020 __sf_fake_stdin
20013d24 g     F .text	000000bc __metal_local_interrupt_enable
20012a0c g     F .text	00000132 __metal_driver_riscv_clint0_command_request
20011a36 g     F .text	00000010 memset
20013566  w    F .text	00000096 metal_lc5_interrupt_vector_handler
20011180 g     F .text	000000f6 main
80000b10 g       .data	00000000 metal_segment_data_target_end
20016f46 g     F .text	0000004a __metal_driver_sifive_uart0_set_rx_watermark
80000ae8 g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_hfrosc
200143ae g     F .text	00000062 __metal_driver_cpu_set_sw_ipi
20014472 g     F .text	00000060 __metal_driver_cpu_get_msip
20017638 g     F .text	0000000e metal_shutdown
08000000 g       .rodata	00000000 metal_segment_itim_target_end
20014584 g     F .text	00000020 __metal_driver_cpu_set_exception_pc
200146a8 g     F .text	0000003c __metal_plic0_claim_interrupt
20016f16 g     F .text	00000030 __metal_driver_sifive_uart0_get_tx_watermark
20011fb2 g     F .text	00000006 __sclose
20013980  w    F .text	00000096 metal_lc12_interrupt_vector_handler
20010092 g     F .init	00000000 metal_mem_scrub
20011af2 g     F .text	000000de _malloc_r
20012834 g     F .text	0000001c __metal_driver_riscv_clint0_get_vector_mode
80000ae4 g     O .data	00000004 __metal_dt_prci_10008000
20014238 g     F .text	00000046 __metal_driver_cpu_timebase_get
20014d46 g     F .text	0000009c __metal_driver_riscv_plic0_affinity_disable
20010000 g       .init	00000000 _enter
20017500 g     F .text	0000001a metal_cpu_get_current_hartid
20014fd0 g     F .text	00000074 __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz
20017800 g       .text	00000000 __metal_vector_table
20011148 g       *ABS*	00000000 metal_segment_itim_source_start
80000ac0  w    O .data	00000004 __metal_cpu_table
80000090 g     O .data	000003d0 __metal_dt_cpu_0_interrupt_controller
200102c4 g     F .init	00000002 _fini
20011276 g     F .text	00000044 iprintf
80000000 g       .rodata	00000000 metal_segment_lim_target_start
20011048 g     O .rodata	00000100 .hidden __clz_tab
2001480c g     F .text	00000034 __metal_driver_riscv_plic0_get_priority
20010320 g     F .ctors	0000002a use_hfxosc
20012c8c g     F .text	00000018 __metal_interrupt_global_enable
20017b5e g     F .text	0000000a atexit
20011fb8 g     F .text	0000002e _write_r
20012cec g     F .text	0000001a __metal_interrupt_timer_enable
20017002 g     F .text	00000056 __metal_driver_sifive_uart0_getc
2001295a g     F .text	000000b2 __metal_driver_riscv_clint0_disable
200120b2 g     F .text	0000010c _printf_common
80000ac8 g     O .data	00000004 _impure_ptr
200142e4 g     F .text	00000076 __metal_driver_cpu_mtimecmp_set
20011572 g     F .text	0000014a __sflush_r
20014c82 g     F .text	00000028 __metal_driver_riscv_plic0_get_threshold
2001516e g     F .text	000000a4 __metal_driver_sifive_fe310_g000_pll_init
80000078 g     O .data	0000000c __metal_dt_clock_5
20015778 g     F .text	00000038 __metal_driver_sifive_fe310_g000_prci_set_reg
200178f0 g     F .text	00000020 __metal_driver_fixed_clock_get_rate_hz
200128a8 g     F .text	000000b2 __metal_driver_riscv_clint0_enable
20018598 g       *ABS*	00000000 metal_segment_data_source_start
2001013c g       .init	00000000 early_trap_vector
800017c0 g       .heap	00000000 metal_segment_heap_target_end
20013c28 g     F .text	00000098 __metal_controller_interrupt_vector
80000aa8 g     O .data	0000000c __metal_dt_clock_1
80000460 g     O .data	000005d8 __metal_dt_interrupt_controller_c000000
20011942 g     F .text	00000058 __swhatbuf_r
20015d00 g     F .text	00000046 __metal_driver_sifive_gpio0_output_clear
20012fb0 g     F .text	00000066 __metal_default_timer_handler
20017aee g     F .text	00000070 _write
200148fa g     F .text	000000a4 __metal_plic0_handler
200133a4  w    F .text	00000096 metal_lc2_interrupt_vector_handler
20013b42  w    F .text	00000096 metal_lc15_interrupt_vector_handler
200174ac g     F .text	00000026 metal_cpu_interrupt_controller
20011f2e g     F .text	0000004e __swrite
20017b74 g     F .text	00000028 exit
20011c3c g     F .text	00000298 _vfiprintf_r
200118d6 g     F .text	0000006c _fwalk_reent
20017910 g     F .text	00000024 __metal_driver_fixed_clock_set_rate_hz
20011148 g       *ABS*	00000000 metal_segment_lim_source_start
20010474 g     O .rodata	00000020 __sf_fake_stdout
80000ae0 g     O .data	00000004 __metal_dt_gpio_10012000
20012dc8 g     F .text	00000018 __metal_default_interrupt_handler
20017792 g     F .text	0000002e metal_uart_putc
20017a5a g     F .text	0000002a _read
20018544  w    F .text	00000016 metal_fini_run
20015be4 g     F .text	0000002a __metal_driver_sifive_gpio0_input
20013080 g     F .text	0000017e __metal_exception_handler
20013278  w    F .text	00000096 metal_lc0_interrupt_vector_handler
20018582 g     F .text	00000014 _exit
2001760a g     F .text	0000002e metal_i2c_get_device
2001427e g     F .text	00000066 __metal_driver_cpu_mtime_get
2001199a g     F .text	0000009c __smakebuf_r
2001280c g     F .text	00000028 __metal_driver_riscv_clint0_vector_register
200121be g     F .text	000002a2 _printf_i
80000b14 g     O .bss	00000004 __malloc_sbrk_start
20013aac  w    F .text	00000096 metal_lc14_interrupt_vector_handler
80000af0 g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_hfxosc
200126aa g     F .text	00000088 __metal_driver_riscv_clint0_init
80000b10 g     O .bss	00000004 __malloc_free_list
200102f4 g     F .ctors	0000002c metal_sifive_fe310_g000_pll_init
20011c3c g     F .text	00000298 _vfprintf_r
20014370 g     F .text	00000014 __metal_driver_cpu_get_timer_interrupt_id
20014840 g     F .text	000000a2 __metal_plic0_enable
20010090  w      .init	00000000 __register_frame_info
20014f58 g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz
20014384 g     F .text	00000016 __metal_driver_cpu_sw_controller_interrupt
20012d84 g     F .text	0000002c __metal_interrupt_local_disable
20012cd4 g     F .text	00000018 __metal_interrupt_software_disable
2001772c g     F .text	0000003a metal_time
20017766 g     F .text	0000002c metal_uart_init
80000a9c g     O .data	0000000c __metal_dt_clock_3
80000084 g     O .data	0000000c __metal_dt_clock_6
2001472a g     F .text	00000046 __metal_plic0_set_threshold
20014caa g     F .text	0000009c __metal_driver_riscv_plic0_affinity_enable
200179c8 g     F .text	00000022 _close
80000af8 g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_prci
00000000 g       *ABS*	00000000 __metal_boot_hart
20014af0 g     F .text	000000c2 __metal_driver_riscv_plic0_register



Disassembly of section .init:

20010000 <_enter>:
_enter():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:24
     * it's not valid to obtain the address of any symbol without GP
     * configured.  The C environment might go ahead and do this again, but
     * that's safe as it's a fixed register. */
.option push
.option norelax
    la gp, __global_pointer$
20010000:	5fff1197          	auipc	gp,0x5fff1
20010004:	2c018193          	addi	gp,gp,704 # 800012c0 <__global_pointer$>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:28
.option pop

    /* trap over the chicken bit register clearing, aloe & fe310 dont have it */
    la t0, 1f
20010008:	00000297          	auipc	t0,0x0
2001000c:	01828293          	addi	t0,t0,24 # 20010020 <_enter+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:29
    csrw mtvec, t0
20010010:	30529073          	csrw	mtvec,t0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:31
    /* chicken bit is enable if core are sifive series. */
    la t0, __metal_chicken_bit
20010014:	00100293          	li	t0,1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:32
    beqz t0, 1f
20010018:	00028463          	beqz	t0,20010020 <_enter+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:34
    /* If set, always clear the feature disable register for all cores series */
    csrwi 0x7C1, 0
2001001c:	7c105073          	csrwi	0x7c1,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:39
.align 4
1:
    /* Set up a simple trap vector to catch anything that goes wrong early in
     * the boot process. */
    la t0, early_trap_vector
20010020:	00000297          	auipc	t0,0x0
20010024:	11c28293          	addi	t0,t0,284 # 2001013c <early_trap_vector>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:40
    csrw mtvec, t0
20010028:	30529073          	csrw	mtvec,t0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:48
     * C, so here we set up a C environment. First we set up a stack pointer,
     * which is left as a weak reference in order to allow initialization
     * routines that do not need a stack to be set up to transparently be
     * called. */
    .weak __metal_stack_pointer
    la sp, __metal_stack_pointer
2001002c:	dfff0117          	auipc	sp,0xdfff0
20010030:	fd410113          	addi	sp,sp,-44 # 0 <__metal_boot_hart>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:55
   /* The METAL is designed for a bare-metal environment and therefore is expected
    * to define its own stack pointer. We also align the stack pointer here
    * because the only RISC-V ABI that's currently defined, mandates 16-byte
    * stack alignment. */

    bne sp, zero, 1f
20010034:	00011463          	bnez	sp,2001003c <_enter+0x3c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:56
    la sp, _sp
20010038:	d0018113          	addi	sp,gp,-768 # 80000fc0 <_sp>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:59
1:
    /* Increment by hartid number of stack sizes */
    csrr a0, mhartid
2001003c:	f1402573          	csrr	a0,mhartid
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:60
    li t0, 0
20010040:	4281                	li	t0,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:61
    la t1, __stack_size
20010042:	40000313          	li	t1,1024
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:63
1:
    andi sp, sp, -16
20010046:	ff017113          	andi	sp,sp,-16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:64
    beq t0, a0, 1f
2001004a:	00a28563          	beq	t0,a0,20010054 <_enter+0x54>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:65
    add sp, sp, t1
2001004e:	911a                	add	sp,sp,t1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:66
    addi t0, t0, 1
20010050:	0285                	addi	t0,t0,1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:67
    j 1b
20010052:	bfd5                	j	20010046 <_enter+0x46>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:76
     * just skip over the call entirely.   Note that __metal_initialize isn't
     * actually a full C function, as it doesn't end up with the .bss or .data
     * segments having been initialized.  This is done to avoid putting a
     * burden on systems that can be initialized without having a C environment
     * set up. */
    la ra, __metal_before_start
20010054:	00000097          	auipc	ra,0x0
20010058:	08208093          	addi	ra,ra,130 # 200100d6 <__metal_before_start>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:77
    beqz ra, 1f
2001005c:	00008363          	beqz	ra,20010062 <_enter+0x62>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:78
    jalr ra
20010060:	9082                	jalr	ra
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:84
1:

    /* At this point we can enter the C runtime's startup file.  The arguments
     * to this function are designed to match those provided to the SEE, just
     * so we don't have to write another ABI. */
    csrr a0, mhartid
20010062:	f1402573          	csrr	a0,mhartid
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:85
    li a1, 0
20010066:	4581                	li	a1,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:86
    li a2, 0
20010068:	4601                	li	a2,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:87
    call _start
2001006a:	20fd                	jal	20010158 <_start>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:92

    /* If we've made it back here then there's probably something wrong.  We
     * allow the METAL to register a handler here. */
    .weak __metal_after_main
    la ra, __metal_after_main
2001006c:	dfff0097          	auipc	ra,0xdfff0
20010070:	f9408093          	addi	ra,ra,-108 # 0 <__metal_boot_hart>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:93
    beqz ra, 1f
20010074:	00008363          	beqz	ra,2001007a <_enter+0x7a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:94
    jalr ra
20010078:	9082                	jalr	ra
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:99
1:

    /* If that handler returns then there's not a whole lot we can do.  Just
     * try to make some noise. */
     la t0, 1f
2001007a:	00000297          	auipc	t0,0x0
2001007e:	00c28293          	addi	t0,t0,12 # 20010086 <_enter+0x86>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:100
     csrw mtvec, t0
20010082:	30529073          	csrw	mtvec,t0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:102
1:
     lw t1, 0(x0)
20010086:	00002303          	lw	t1,0(zero) # 0 <__metal_boot_hart>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:103
     j 1b
2001008a:	bff5                	j	20010086 <_enter+0x86>
2001008c:	0000                	unimp
	...

20010090 <__register_frame_info>:
__register_frame_info():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/entry.S:117
.weak __register_frame_info
.global __register_frame_info
.section .text.metal.init.__register_frame_info
__register_frame_info:
    .cfi_startproc
    ret
20010090:	8082                	ret

20010092 <metal_mem_scrub>:
metal_mem_scrub():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:24
.type metal_mem_scrub, @function
metal_mem_scrub:

    /* Disable machine interrupts,
    restore previous mstatus value at exit */
    li      a3, 8
20010092:	46a1                	li	a3,8
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:25
    csrrc   t1, mstatus, a3
20010094:	3006b373          	csrrc	t1,mstatus,a3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:28

#if __riscv_xlen == 32
    addi    t0, x0, 4
20010098:	00400293          	li	t0,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:30
1:
    blt     a1, t0, 2f
2001009c:	0055c563          	blt	a1,t0,200100a6 <metal_mem_scrub+0x14>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:31
    andi    a2, a0, 3
200100a0:	00357613          	andi	a2,a0,3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:32
    beqz    a2, 3f
200100a4:	ca11                	beqz	a2,200100b8 <metal_mem_scrub+0x26>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:34
2:
    sb      x0, 0(a0)
200100a6:	00050023          	sb	zero,0(a0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:35
    addi    a0, a0, 1
200100aa:	0505                	addi	a0,a0,1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:36
    addi    a1, a1, -1
200100ac:	15fd                	addi	a1,a1,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:37
    bgtz    a1, 1b
200100ae:	feb047e3          	bgtz	a1,2001009c <metal_mem_scrub+0xa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:38
    csrw    mstatus, t1
200100b2:	30031073          	csrw	mstatus,t1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:39
    ret
200100b6:	8082                	ret
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:41
3:
    sw      x0, 0(a0)
200100b8:	00052023          	sw	zero,0(a0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:42
    addi    a0, a0, 4
200100bc:	0511                	addi	a0,a0,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:43
    addi    a1, a1, -4
200100be:	15f1                	addi	a1,a1,-4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:44
    bgtz    a1, 1b
200100c0:	fcb04ee3          	bgtz	a1,2001009c <metal_mem_scrub+0xa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:45
    csrw    mstatus, t1
200100c4:	30031073          	csrw	mstatus,t1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:46
    ret
200100c8:	8082                	ret

200100ca <__metal_memory_scrub>:
__metal_memory_scrub():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:74
.type __metal_memory_scrub, @function
__metal_memory_scrub:
/* Zero out specified memory regions */
1:
#if __riscv_xlen == 32
    sw      x0, 0(t1)
200100ca:	00032023          	sw	zero,0(t1)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:75
    addi    t1, t1, 4
200100ce:	0311                	addi	t1,t1,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:76
    blt     t1, t2, 1b
200100d0:	fe734de3          	blt	t1,t2,200100ca <__metal_memory_scrub>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:82
#else
    sd      x0, 0(t1)
    addi    t1, t1, 8
    blt     t1, t2, 1b
#endif
    ret
200100d4:	8082                	ret

200100d6 <__metal_before_start>:
__metal_before_start():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:94
.weak __metal_before_start
.global __metal_before_start
.type __metal_before_start, @function
__metal_before_start:
    /* Save caller ra */
    mv      s0, ra
200100d6:	8406                	mv	s0,ra
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:96

    la      t0, __metal_eccscrub_bit
200100d8:	dfff0297          	auipc	t0,0xdfff0
200100dc:	f2828293          	addi	t0,t0,-216 # 0 <__metal_boot_hart>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:97
    beqz    t0, skip_scrub
200100e0:	04028c63          	beqz	t0,20010138 <skip_scrub>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:99

    la      t0, __metal_boot_hart
200100e4:	dfff0297          	auipc	t0,0xdfff0
200100e8:	f1c28293          	addi	t0,t0,-228 # 0 <__metal_boot_hart>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:100
    csrr    a5, mhartid
200100ec:	f14027f3          	csrr	a5,mhartid
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:103

    /* Disable machine interrupts to be safe */
    li      a3, 8
200100f0:	46a1                	li	a3,8
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:104
    csrc    mstatus, a3
200100f2:	3006b073          	csrc	mstatus,a3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:107

    /* Zero out per hart stack */
    mv      t1, sp
200100f6:	830a                	mv	t1,sp
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:108
    la      t2, __stack_size
200100f8:	dfff0397          	auipc	t2,0xdfff0
200100fc:	30838393          	addi	t2,t2,776 # 400 <__stack_size>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:109
    add     t2, t2, sp
20010100:	938a                	add	t2,t2,sp
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:110
    beq     t1, t2, 1f
20010102:	00730363          	beq	t1,t2,20010108 <__metal_before_start+0x32>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:111
    jal     __metal_memory_scrub
20010106:	37d1                	jal	200100ca <__metal_memory_scrub>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:113
1:
    bne     a5, t0, skip_scrub
20010108:	02579863          	bne	a5,t0,20010138 <skip_scrub>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:116

    /* Zero out data segment */
    la      t1, metal_segment_data_target_start
2001010c:	5fff0317          	auipc	t1,0x5fff0
20010110:	ef430313          	addi	t1,t1,-268 # 80000000 <metal_segment_lim_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:117
    la      t2, metal_segment_data_target_end
20010114:	5fff1397          	auipc	t2,0x5fff1
20010118:	9fc38393          	addi	t2,t2,-1540 # 80000b10 <__tls_base>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:118
    beq     t1, t2, 1f
2001011c:	00730363          	beq	t1,t2,20010122 <__metal_before_start+0x4c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:119
    jal     __metal_memory_scrub
20010120:	376d                	jal	200100ca <__metal_memory_scrub>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:122
1:
    /* Zero out itim memory */
    la      t1, metal_segment_itim_target_start
20010122:	e7ff0317          	auipc	t1,0xe7ff0
20010126:	ede30313          	addi	t1,t1,-290 # 8000000 <metal_segment_itim_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:123
    la      t2, metal_segment_itim_target_end
2001012a:	e7ff0397          	auipc	t2,0xe7ff0
2001012e:	ed638393          	addi	t2,t2,-298 # 8000000 <metal_segment_itim_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:124
    beq     t1, t2, skip_scrub
20010132:	00730363          	beq	t1,t2,20010138 <skip_scrub>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:125
    jal     __metal_memory_scrub
20010136:	3f51                	jal	200100ca <__metal_memory_scrub>

20010138 <skip_scrub>:
skip_scrub():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:129

skip_scrub:
    /* Restore caller ra */
    mv      ra, s0
20010138:	80a2                	mv	ra,s0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/scrub.S:130
    ret
2001013a:	8082                	ret

2001013c <early_trap_vector>:
early_trap_vector():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/trap.S:64
.section .text.metal.init.trapvec
.global early_trap_vector
.align 2
early_trap_vector:
    .cfi_startproc
    csrr t0, mcause
2001013c:	342022f3          	csrr	t0,mcause
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/trap.S:65
    csrr t1, mepc
20010140:	34102373          	csrr	t1,mepc
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/trap.S:66
    csrr t2, mtval
20010144:	343023f3          	csrr	t2,mtval
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/trap.S:67
    j early_trap_vector
20010148:	bfd5                	j	2001013c <early_trap_vector>

2001014a <__metal_synchronize_harts>:
__metal_synchronize_harts():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/synchronize_harts.c:19
/*
 * _synchronize_harts() is called by crt0.S to cause harts > 0 to wait for
 * hart 0 to finish copying the datat section, zeroing the BSS, and running
 * the libc contstructors.
 */
__attribute__((section(".init"))) void __metal_synchronize_harts() {
2001014a:	1141                	addi	sp,sp,-16
2001014c:	c622                	sw	s0,12(sp)
2001014e:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/synchronize_harts.c:66
        while (METAL_MSIP(msip_base, hart) == 1)
            ;
    }

#endif /* __METAL_DT_MAX_HARTS > 1 */
}
20010150:	0001                	nop
20010152:	4432                	lw	s0,12(sp)
20010154:	0141                	addi	sp,sp,16
20010156:	8082                	ret

20010158 <_start>:
_start():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:36
.cfi_startproc
.cfi_undefined ra

  /* This is a bit funky: it's not usually sane for _start to return, but in
   * this case we actually want to in order to signal an error to the METAL. */
  mv s0, ra
20010158:	8406                	mv	s0,ra
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:44
   * safely perform any access that may be relaxed without GP being set.  This
   * is done with relaxation disabled to avoid relaxing the address calculation
   * to just "addi gp, gp, 0". */
.option push
.option norelax
  la gp, __global_pointer$
2001015a:	5fff1197          	auipc	gp,0x5fff1
2001015e:	16618193          	addi	gp,gp,358 # 800012c0 <__global_pointer$>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:50
.option pop

  /* Stack pointer is expected to be initialized before _start */

  /* If we're not hart 0, skip the initialization work */
  la t0, __metal_boot_hart
20010162:	00000293          	li	t0,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:51
  bne a0, t0, _skip_init
20010166:	0e551163          	bne	a0,t0,20010248 <_skip_init>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:60
   * boot and then need to get relocated into a non-persistant writable memory
   * before C code can execute.  If this is the case we do so here.  This step
   * is optional: if the METAL provides an environment in which this relocation
   * is not necessary then it must simply set metal_segment_data_source_start to
   * be equal to metal_segment_data_target_start. */
  la t0, metal_segment_data_source_start
2001016a:	00008297          	auipc	t0,0x8
2001016e:	42e28293          	addi	t0,t0,1070 # 20018598 <metal_segment_data_source_start>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:61
  la t1, metal_segment_data_target_start
20010172:	5fff0317          	auipc	t1,0x5fff0
20010176:	e8e30313          	addi	t1,t1,-370 # 80000000 <metal_segment_lim_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:62
  la t2, metal_segment_data_target_end
2001017a:	5fff1397          	auipc	t2,0x5fff1
2001017e:	99638393          	addi	t2,t2,-1642 # 80000b10 <__tls_base>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:64

  beq t0, t1, 2f
20010182:	00628c63          	beq	t0,t1,2001019a <_start+0x42>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:65
  bge t1, t2, 2f
20010186:	00735a63          	bge	t1,t2,2001019a <_start+0x42>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:69

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
2001018a:	0002a503          	lw	a0,0(t0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:70
  addi t0, t0, 4
2001018e:	0291                	addi	t0,t0,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:71
  sw   a0, 0(t1)
20010190:	00a32023          	sw	a0,0(t1)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:72
  addi t1, t1, 4
20010194:	0311                	addi	t1,t1,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:73
  blt  t1, t2, 1b
20010196:	fe734ae3          	blt	t1,t2,2001018a <_start+0x32>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:84
  blt  t1, t2, 1b
#endif
2:

  /* Copy the ITIM section */
  la t0, metal_segment_itim_source_start
2001019a:	00001297          	auipc	t0,0x1
2001019e:	fae28293          	addi	t0,t0,-82 # 20011148 <metal_segment_itim_source_start>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:85
  la t1, metal_segment_itim_target_start
200101a2:	e7ff0317          	auipc	t1,0xe7ff0
200101a6:	e5e30313          	addi	t1,t1,-418 # 8000000 <metal_segment_itim_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:86
  la t2, metal_segment_itim_target_end
200101aa:	e7ff0397          	auipc	t2,0xe7ff0
200101ae:	e5638393          	addi	t2,t2,-426 # 8000000 <metal_segment_itim_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:88

  beq t0, t1, 2f
200101b2:	00628c63          	beq	t0,t1,200101ca <_start+0x72>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:89
  bge t1, t2, 2f
200101b6:	00735a63          	bge	t1,t2,200101ca <_start+0x72>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:93

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
200101ba:	0002a503          	lw	a0,0(t0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:94
  addi t0, t0, 4
200101be:	0291                	addi	t0,t0,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:95
  sw   a0, 0(t1)
200101c0:	00a32023          	sw	a0,0(t1)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:96
  addi t1, t1, 4
200101c4:	0311                	addi	t1,t1,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:97
  blt  t1, t2, 1b
200101c6:	fe734ae3          	blt	t1,t2,200101ba <_start+0x62>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:109
#endif
2:

  /* Fence all subsequent instruction fetches until after the ITIM writes
     complete */
  fence.i
200101ca:	0000100f          	fence.i
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:114

2:

  /* Copy the LIM section */
  la t0, metal_segment_lim_source_start
200101ce:	00001297          	auipc	t0,0x1
200101d2:	f7a28293          	addi	t0,t0,-134 # 20011148 <metal_segment_itim_source_start>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:115
  la t1, metal_segment_lim_target_start
200101d6:	5fff0317          	auipc	t1,0x5fff0
200101da:	e2a30313          	addi	t1,t1,-470 # 80000000 <metal_segment_lim_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:116
  la t2, metal_segment_lim_target_end
200101de:	5fff0397          	auipc	t2,0x5fff0
200101e2:	e2238393          	addi	t2,t2,-478 # 80000000 <metal_segment_lim_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:118

  beq t0, t1, 2f
200101e6:	00628c63          	beq	t0,t1,200101fe <_start+0xa6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:119
  bge t1, t2, 2f
200101ea:	00735a63          	bge	t1,t2,200101fe <_start+0xa6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:123

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
200101ee:	0002a503          	lw	a0,0(t0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:124
  addi t0, t0, 4
200101f2:	0291                	addi	t0,t0,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:125
  sw   a0, 0(t1)
200101f4:	00a32023          	sw	a0,0(t1)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:126
  addi t1, t1, 4
200101f8:	0311                	addi	t1,t1,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:127
  blt  t1, t2, 1b
200101fa:	fe734ae3          	blt	t1,t2,200101ee <_start+0x96>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:139
#endif
2:

  /* Fence all subsequent instruction fetches until after the LIM writes
     complete */
  fence.i
200101fe:	0000100f          	fence.i
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:142

  /* Zero the BSS segment. */
  la t1, metal_segment_bss_target_start
20010202:	5fff1317          	auipc	t1,0x5fff1
20010206:	90e30313          	addi	t1,t1,-1778 # 80000b10 <__tls_base>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:143
  la t2, metal_segment_bss_target_end
2001020a:	8f418393          	addi	t2,gp,-1804 # 80000bb4 <metal_segment_bss_target_end>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:145

  bge t1, t2, 2f
2001020e:	00735763          	bge	t1,t2,2001021c <_start+0xc4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:149

1:
#if __riscv_xlen == 32
  sw   x0, 0(t1)
20010212:	00032023          	sw	zero,0(t1)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:150
  addi t1, t1, 4
20010216:	0311                	addi	t1,t1,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:151
  blt  t1, t2, 1b
20010218:	fe734de3          	blt	t1,t2,20010212 <_start+0xba>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:161
#endif
2:

  /* Set TLS pointer */
  .weak __tls_base	
  la tp, __tls_base
2001021c:	5fff1217          	auipc	tp,0x5fff1
20010220:	8f420213          	addi	tp,tp,-1804 # 80000b10 <__tls_base>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:166

  /* At this point we're in an environment that can execute C code.  The first
   * thing to do is to make the callback to the parent environment if it's been
   * requested to do so. */
  beqz a2, 1f
20010224:	c211                	beqz	a2,20010228 <_start+0xd0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:167
  jalr a2
20010226:	9602                	jalr	a2
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:171
1:

  /* The RISC-V port only uses new-style constructors and destructors. */
  la a0, __libc_fini_array
20010228:	00008517          	auipc	a0,0x8
2001022c:	97450513          	addi	a0,a0,-1676 # 20017b9c <__libc_fini_array>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:172
  call atexit
20010230:	12f070ef          	jal	ra,20017b5e <atexit>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:173
  call __libc_init_array
20010234:	1a1070ef          	jal	ra,20017bd4 <__libc_init_array>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:177

  /* Register metal_fini_run as a destructor and call metal_init_run to
   * run and setup Metal constructors */
  la a0, metal_fini_run
20010238:	00008517          	auipc	a0,0x8
2001023c:	30c50513          	addi	a0,a0,780 # 20018544 <metal_fini_run>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:178
  call atexit
20010240:	11f070ef          	jal	ra,20017b5e <atexit>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:179
  call metal_init_run
20010244:	2ea080ef          	jal	ra,2001852e <metal_init_run>

20010248 <_skip_init>:
_skip_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:185

_skip_init:

  /* Synchronize harts so that secondary harts wait until hart 0 finishes
     initializing */
  call __metal_synchronize_harts
20010248:	3709                	jal	2001014a <__metal_synchronize_harts>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:188

  /* Disable and clear all interrupt sources */
  li   a3, -1
2001024a:	56fd                	li	a3,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:189
  csrc mie, a3
2001024c:	3046b073          	csrc	mie,a3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:190
  csrc mip, a3
20010250:	3446b073          	csrc	mip,a3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:194

  /* The delegation CSRs exist if user mode interrupts (N extension) or
   * supervisor mode (S extension) are supported */
  csrr a5, misa
20010254:	301027f3          	csrr	a5,misa
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:195
  lui  a4, 0x42
20010258:	00042737          	lui	a4,0x42
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:196
  and  a4, a4, a5
2001025c:	8f7d                	and	a4,a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:197
  beqz a4, 1f
2001025e:	c709                	beqz	a4,20010268 <_skip_init+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:198
  csrc mideleg, a3
20010260:	3036b073          	csrc	mideleg,a3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:199
  csrc medeleg, a3
20010264:	3026b073          	csrc	medeleg,a3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:203
1:

  /* The satp CSR exists if supervisor mode (S extension) is supported */
  lui  a4, 0x40
20010268:	00040737          	lui	a4,0x40
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:204
  and  a4, a4, a5
2001026c:	8f7d                	and	a4,a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:205
  beqz a4, 1f
2001026e:	c319                	beqz	a4,20010274 <_skip_init+0x2c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:206
  csrc satp, a3
20010270:	1806b073          	csrc	satp,a3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:210
1:

  /* Check RISC-V isa and enable FS bits if Floating Point architecture. */
  li   a4, 0x10028
20010274:	00010737          	lui	a4,0x10
20010278:	02870713          	addi	a4,a4,40 # 10028 <__heap_size+0xf828>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:211
  and  a5, a5, a4
2001027c:	8ff9                	and	a5,a5,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:212
  beqz a5, 1f
2001027e:	cb89                	beqz	a5,20010290 <_skip_init+0x48>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:213
  csrr a5, mstatus
20010280:	300027f3          	csrr	a5,mstatus
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:214
  lui  a4, 0x2
20010284:	6709                	lui	a4,0x2
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:215
  or   a5, a5, a4
20010286:	8fd9                	or	a5,a5,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:216
  csrw mstatus, a5
20010288:	30079073          	csrw	mstatus,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:217
  csrwi fcsr, 0
2001028c:	00305073          	csrwi	fcsr,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:221
1:

  /* Check for vector extension support and enable it if found */
  csrr a5, misa
20010290:	301027f3          	csrr	a5,misa
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:222
  li a4, 0x200000
20010294:	00200737          	lui	a4,0x200
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:223
  and a5, a5, a4
20010298:	8ff9                	and	a5,a5,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:224
  beqz a5, 1f
2001029a:	c799                	beqz	a5,200102a8 <_skip_init+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:225
  csrr a5, mstatus
2001029c:	300027f3          	csrr	a5,mstatus
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:226
  ori a5, a5, 0x200
200102a0:	2007e793          	ori	a5,a5,512
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:227
  csrw mstatus, a5
200102a4:	30079073          	csrw	mstatus,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:233
1:

  /* This is a C runtime, so main() is defined to have some arguments.  Since
   * there's nothing sane the METAL can pass we don't bother with that but
   * instead just setup as close to a NOP as we can. */
  li a0, 1     /* argc=1 */
200102a8:	4505                	li	a0,1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:234
  la a1, argv  /* argv = {"libgloss", NULL} */
200102aa:	00001597          	auipc	a1,0x1
200102ae:	d8a58593          	addi	a1,a1,-630 # 20011034 <argv>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:235
  la a2, envp  /* envp = {NULL} */
200102b2:	00001617          	auipc	a2,0x1
200102b6:	d8660613          	addi	a2,a2,-634 # 20011038 <envp>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:236
  call secondary_main
200102ba:	2031                	jal	200102c6 <secondary_main>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:242

  /* Call exit to handle libc's cleanup routines.  Under normal contains this
   * shouldn't even get called, but I'm still not using a tail call here
   * because returning to the METAL is the right thing to do in pathological
   * situations. */
  call exit
200102bc:	0b9070ef          	jal	ra,20017b74 <exit>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:247

  /* And here's where we return.  Again, it's a bit odd but the METAL defines
   * this as a bad idea (ie, as opposed to leaving it undefined) and at this
   * point it's really the only thing left to do. */
  mv ra, s0
200102c0:	80a2                	mv	ra,s0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:248
  ret
200102c2:	8082                	ret

200102c4 <_fini>:
_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:260
.type   _init, @function
.global _fini
.type   _fini, @function
_init:
_fini:
  ret
200102c4:	8082                	ret

200102c6 <secondary_main>:
secondary_main():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:271
.weak   secondary_main
.global secondary_main
.type   secondary_main, @function

secondary_main:
  addi sp, sp, -16
200102c6:	1141                	addi	sp,sp,-16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:273
#if __riscv_xlen == 32
  sw ra, 4(sp)
200102c8:	c206                	sw	ra,4(sp)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:277
#else
  sd ra, 8(sp)
#endif
  csrr t0, mhartid
200102ca:	f14022f3          	csrr	t0,mhartid
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:278
  la t1, __metal_boot_hart
200102ce:	00000313          	li	t1,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:279
  beq t0, t1, 2f
200102d2:	00628563          	beq	t0,t1,200102dc <secondary_main+0x16>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:281
1:
  wfi
200102d6:	10500073          	wfi
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:282
  j 1b
200102da:	bff5                	j	200102d6 <secondary_main+0x10>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:284
2:
  call main
200102dc:	6a5000ef          	jal	ra,20011180 <main>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:286
#if __riscv_xlen == 32
  lw ra, 4(sp)
200102e0:	4092                	lw	ra,4(sp)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:290
#else
  ld ra, 8(sp)
#endif
  addi sp, sp, 16
200102e2:	0141                	addi	sp,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/crt0.S:291
  ret
200102e4:	8082                	ret

Disassembly of section .ctors:

200102f4 <metal_sifive_fe310_g000_pll_init>:
metal_sifive_fe310_g000_pll_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:151
    return pll_input_rate * config->multiplier / config->divisor;
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE

METAL_CONSTRUCTOR(metal_sifive_fe310_g000_pll_init) {
200102f4:	1101                	addi	sp,sp,-32
200102f6:	ce06                	sw	ra,28(sp)
200102f8:	cc22                	sw	s0,24(sp)
200102fa:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:152
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
200102fc:	5eb040ef          	jal	ra,200150e6 <__metal_driver_sifive_fe310_g000_pll_init_rate>
20010300:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:154
    /* If the PLL init_rate is zero, don't initialize the PLL */
    if (init_rate != 0)
20010304:	fec42783          	lw	a5,-20(s0)
20010308:	c799                	beqz	a5,20010316 <__fini_array_end+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:155
        __metal_driver_sifive_fe310_g000_pll_init(
2001030a:	800017b7          	lui	a5,0x80001
2001030e:	ab478513          	addi	a0,a5,-1356 # 80000ab4 <metal_segment_heap_target_end+0xfffff2f4>
20010312:	65d040ef          	jal	ra,2001516e <__metal_driver_sifive_fe310_g000_pll_init>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:157
            __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE);
}
20010316:	0001                	nop
20010318:	40f2                	lw	ra,28(sp)
2001031a:	4462                	lw	s0,24(sp)
2001031c:	6105                	addi	sp,sp,32
2001031e:	8082                	ret

20010320 <use_hfxosc>:
use_hfxosc():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:389

    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE
METAL_CONSTRUCTOR(use_hfxosc) {
20010320:	1101                	addi	sp,sp,-32
20010322:	ce06                	sw	ra,28(sp)
20010324:	cc22                	sw	s0,24(sp)
20010326:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:390
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20010328:	5bf040ef          	jal	ra,200150e6 <__metal_driver_sifive_fe310_g000_pll_init_rate>
2001032c:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:391
    metal_clock_set_rate_hz(&__METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE->clock,
20010330:	fec42583          	lw	a1,-20(s0)
20010334:	800017b7          	lui	a5,0x80001
20010338:	ab478513          	addi	a0,a5,-1356 # 80000ab4 <metal_segment_heap_target_end+0xfffff2f4>
2001033c:	06c070ef          	jal	ra,200173a8 <metal_clock_set_rate_hz>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:393
                            init_rate);
}
20010340:	0001                	nop
20010342:	40f2                	lw	ra,28(sp)
20010344:	4462                	lw	s0,24(sp)
20010346:	6105                	addi	sp,sp,32
20010348:	8082                	ret

2001034a <metal_tty_init>:
metal_tty_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/tty.c:28

#ifndef __METAL_DT_STDOUT_UART_BAUD
#define __METAL_DT_STDOUT_UART_BAUD 115200
#endif

METAL_CONSTRUCTOR(metal_tty_init) {
2001034a:	1141                	addi	sp,sp,-16
2001034c:	c606                	sw	ra,12(sp)
2001034e:	c422                	sw	s0,8(sp)
20010350:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/tty.c:29
    metal_uart_init(__METAL_DT_STDOUT_UART_HANDLE, __METAL_DT_STDOUT_UART_BAUD);
20010352:	67f1                	lui	a5,0x1c
20010354:	20078593          	addi	a1,a5,512 # 1c200 <__heap_size+0x1ba00>
20010358:	800017b7          	lui	a5,0x80001
2001035c:	a5c78513          	addi	a0,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
20010360:	406070ef          	jal	ra,20017766 <metal_uart_init>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/tty.c:30
}
20010364:	0001                	nop
20010366:	40b2                	lw	ra,12(sp)
20010368:	4422                	lw	s0,8(sp)
2001036a:	0141                	addi	sp,sp,16
2001036c:	8082                	ret

Disassembly of section .text:

20011180 <main>:
main():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:33
#define WAIT_1S(timeout)                                                       \
  timeout = time(NULL) + 1;                                                    \
  while (timeout > time(NULL))                                                 \
    ;

int main() {
20011180:	1101                	addi	sp,sp,-32
20011182:	ce06                	sw	ra,28(sp)
20011184:	cc22                	sw	s0,24(sp)
20011186:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:39
	unsigned int temp, volt;
	unsigned char buf[LEN2];
	time_t timeout;
	struct metal_i2c *i2c;

	printf("%s %s \n", __DATE__, __TIME__);
20011188:	200107b7          	lui	a5,0x20010
2001118c:	37078613          	addi	a2,a5,880 # 20010370 <metal_tty_init+0x26>
20011190:	200107b7          	lui	a5,0x20010
20011194:	37c78593          	addi	a1,a5,892 # 2001037c <metal_tty_init+0x32>
20011198:	200107b7          	lui	a5,0x20010
2001119c:	38878513          	addi	a0,a5,904 # 20010388 <metal_tty_init+0x3e>
200111a0:	28d9                	jal	20011276 <iprintf>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:40
	printf("I2C demo test..\n");
200111a2:	200107b7          	lui	a5,0x20010
200111a6:	39078513          	addi	a0,a5,912 # 20010390 <metal_tty_init+0x46>
200111aa:	22ed                	jal	20011394 <puts>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:42

	i2c = metal_i2c_get_device(0);
200111ac:	4501                	li	a0,0
200111ae:	45c060ef          	jal	ra,2001760a <metal_i2c_get_device>
200111b2:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:44

	if (i2c == NULL) {
200111b6:	fec42783          	lw	a5,-20(s0)
200111ba:	eb81                	bnez	a5,200111ca <main+0x4a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:45
		printf("I2C not available \n");
200111bc:	200107b7          	lui	a5,0x20010
200111c0:	3a078513          	addi	a0,a5,928 # 200103a0 <metal_tty_init+0x56>
200111c4:	2ac1                	jal	20011394 <puts>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:46
		return RET_NOK;
200111c6:	4785                	li	a5,1
200111c8:	a055                	j	2001126c <main+0xec>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:49
	}

	metal_i2c_init(i2c, I2C_BAUDRATE, METAL_I2C_MASTER);
200111ca:	4605                	li	a2,1
200111cc:	67e1                	lui	a5,0x18
200111ce:	6a078593          	addi	a1,a5,1696 # 186a0 <__heap_size+0x17ea0>
200111d2:	fec42503          	lw	a0,-20(s0)
200111d6:	344060ef          	jal	ra,2001751a <metal_i2c_init>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:53

	// TODO: this is copied from the example; find how it would work for our sensor
	/* Attempt to read ADT7420 Chip ID */
	buf[0] = 0x0B;
200111da:	47ad                	li	a5,11
200111dc:	fef40423          	sb	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:54
	metal_i2c_write(i2c, IMU_I2C_ADDR, LEN1, buf, METAL_I2C_STOP_DISABLE);
200111e0:	fe840793          	addi	a5,s0,-24
200111e4:	4701                	li	a4,0
200111e6:	86be                	mv	a3,a5
200111e8:	4605                	li	a2,1
200111ea:	06a00593          	li	a1,106
200111ee:	fec42503          	lw	a0,-20(s0)
200111f2:	35c060ef          	jal	ra,2001754e <metal_i2c_write>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:55
	metal_i2c_read(i2c, IMU_I2C_ADDR, LEN1, buf, METAL_I2C_STOP_ENABLE);
200111f6:	fe840793          	addi	a5,s0,-24
200111fa:	4705                	li	a4,1
200111fc:	86be                	mv	a3,a5
200111fe:	4605                	li	a2,1
20011200:	06a00593          	li	a1,106
20011204:	fec42503          	lw	a0,-20(s0)
20011208:	38c060ef          	jal	ra,20017594 <metal_i2c_read>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:58

	/* Verify Chip ID */
	if (buf[0] == TEMP_SENSOR_ID) {
2001120c:	fe844703          	lbu	a4,-24(s0)
20011210:	0cb00793          	li	a5,203
20011214:	02f71863          	bne	a4,a5,20011244 <main+0xc4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:59
		printf("PmodTmp2 module detected \n");
20011218:	200107b7          	lui	a5,0x20010
2001121c:	3b478513          	addi	a0,a5,948 # 200103b4 <metal_tty_init+0x6a>
20011220:	2a95                	jal	20011394 <puts>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:66
		printf("Failed to detect PmodTmp2 module \n");
		return RET_NOK;
	}

	/* Attempt to access AD7991, configure to convert on Vin0. */
	buf[0] = 0x10;
20011222:	47c1                	li	a5,16
20011224:	fef40423          	sb	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:67
	if (metal_i2c_write(i2c, ADC_I2C_ADDR, LEN1, buf, METAL_I2C_STOP_ENABLE) != RET_OK) {
20011228:	fe840793          	addi	a5,s0,-24
2001122c:	4705                	li	a4,1
2001122e:	86be                	mv	a3,a5
20011230:	4605                	li	a2,1
20011232:	02800593          	li	a1,40
20011236:	fec42503          	lw	a0,-20(s0)
2001123a:	314060ef          	jal	ra,2001754e <metal_i2c_write>
2001123e:	87aa                	mv	a5,a0
20011240:	c385                	beqz	a5,20011260 <main+0xe0>
20011242:	a801                	j	20011252 <main+0xd2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:61
		printf("Failed to detect PmodTmp2 module \n");
20011244:	200107b7          	lui	a5,0x20010
20011248:	3d078513          	addi	a0,a5,976 # 200103d0 <metal_tty_init+0x86>
2001124c:	22a1                	jal	20011394 <puts>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:62
		return RET_NOK;
2001124e:	4785                	li	a5,1
20011250:	a831                	j	2001126c <main+0xec>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:68
		printf("Failed to detect PmodAD2 module \n");
20011252:	200107b7          	lui	a5,0x20010
20011256:	3f478513          	addi	a0,a5,1012 # 200103f4 <metal_tty_init+0xaa>
2001125a:	2a2d                	jal	20011394 <puts>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:69
		return RET_NOK;
2001125c:	4785                	li	a5,1
2001125e:	a039                	j	2001126c <main+0xec>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:71
	} else {
		printf("PmodAD2 module detected \n");
20011260:	200107b7          	lui	a5,0x20010
20011264:	41878513          	addi	a0,a5,1048 # 20010418 <metal_tty_init+0xce>
20011268:	2235                	jal	20011394 <puts>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:74
	}

	return 0;
2001126a:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/src/main.c:75 (discriminator 1)
}
2001126c:	853e                	mv	a0,a5
2001126e:	40f2                	lw	ra,28(sp)
20011270:	4462                	lw	s0,24(sp)
20011272:	6105                	addi	sp,sp,32
20011274:	8082                	ret

20011276 <iprintf>:
printf():
20011276:	7139                	addi	sp,sp,-64
20011278:	da3e                	sw	a5,52(sp)
2001127a:	d22e                	sw	a1,36(sp)
2001127c:	d432                	sw	a2,40(sp)
2001127e:	d636                	sw	a3,44(sp)
20011280:	d83a                	sw	a4,48(sp)
20011282:	dc42                	sw	a6,56(sp)
20011284:	de46                	sw	a7,60(sp)
20011286:	5fff0797          	auipc	a5,0x5fff0
2001128a:	84278793          	addi	a5,a5,-1982 # 80000ac8 <_impure_ptr>
2001128e:	cc22                	sw	s0,24(sp)
20011290:	4380                	lw	s0,0(a5)
20011292:	ca26                	sw	s1,20(sp)
20011294:	ce06                	sw	ra,28(sp)
20011296:	84aa                	mv	s1,a0
20011298:	c409                	beqz	s0,200112a2 <iprintf+0x2c>
2001129a:	4c1c                	lw	a5,24(s0)
2001129c:	e399                	bnez	a5,200112a2 <iprintf+0x2c>
2001129e:	8522                	mv	a0,s0
200112a0:	2b1d                	jal	200117d6 <__sinit>
200112a2:	440c                	lw	a1,8(s0)
200112a4:	1054                	addi	a3,sp,36
200112a6:	8626                	mv	a2,s1
200112a8:	8522                	mv	a0,s0
200112aa:	c636                	sw	a3,12(sp)
200112ac:	191000ef          	jal	ra,20011c3c <_vfiprintf_r>
200112b0:	40f2                	lw	ra,28(sp)
200112b2:	4462                	lw	s0,24(sp)
200112b4:	44d2                	lw	s1,20(sp)
200112b6:	6121                	addi	sp,sp,64
200112b8:	8082                	ret

200112ba <_puts_r>:
_puts_r():
200112ba:	1101                	addi	sp,sp,-32
200112bc:	ca26                	sw	s1,20(sp)
200112be:	c84a                	sw	s2,16(sp)
200112c0:	ce06                	sw	ra,28(sp)
200112c2:	cc22                	sw	s0,24(sp)
200112c4:	c64e                	sw	s3,12(sp)
200112c6:	c452                	sw	s4,8(sp)
200112c8:	84aa                	mv	s1,a0
200112ca:	892e                	mv	s2,a1
200112cc:	c501                	beqz	a0,200112d4 <_puts_r+0x1a>
200112ce:	4d1c                	lw	a5,24(a0)
200112d0:	e391                	bnez	a5,200112d4 <_puts_r+0x1a>
200112d2:	2311                	jal	200117d6 <__sinit>
200112d4:	4c9c                	lw	a5,24(s1)
200112d6:	4480                	lw	s0,8(s1)
200112d8:	e399                	bnez	a5,200112de <_puts_r+0x24>
200112da:	8526                	mv	a0,s1
200112dc:	29ed                	jal	200117d6 <__sinit>
200112de:	fffff797          	auipc	a5,0xfffff
200112e2:	17678793          	addi	a5,a5,374 # 20010454 <__sf_fake_stdin>
200112e6:	02f41c63          	bne	s0,a5,2001131e <_puts_r+0x64>
200112ea:	40c0                	lw	s0,4(s1)
200112ec:	00c45783          	lhu	a5,12(s0)
200112f0:	8ba1                	andi	a5,a5,8
200112f2:	c7b1                	beqz	a5,2001133e <_puts_r+0x84>
200112f4:	481c                	lw	a5,16(s0)
200112f6:	c7a1                	beqz	a5,2001133e <_puts_r+0x84>
200112f8:	59fd                	li	s3,-1
200112fa:	4a29                	li	s4,10
200112fc:	441c                	lw	a5,8(s0)
200112fe:	00094583          	lbu	a1,0(s2)
20011302:	17fd                	addi	a5,a5,-1
20011304:	e9b1                	bnez	a1,20011358 <_puts_r+0x9e>
20011306:	c41c                	sw	a5,8(s0)
20011308:	0607de63          	bgez	a5,20011384 <_puts_r+0xca>
2001130c:	8622                	mv	a2,s0
2001130e:	45a9                	li	a1,10
20011310:	8526                	mv	a0,s1
20011312:	2841                	jal	200113a2 <__swbuf_r>
20011314:	57fd                	li	a5,-1
20011316:	02f50863          	beq	a0,a5,20011346 <_puts_r+0x8c>
2001131a:	4529                	li	a0,10
2001131c:	a035                	j	20011348 <_puts_r+0x8e>
2001131e:	fffff797          	auipc	a5,0xfffff
20011322:	15678793          	addi	a5,a5,342 # 20010474 <__sf_fake_stdout>
20011326:	00f41463          	bne	s0,a5,2001132e <_puts_r+0x74>
2001132a:	4480                	lw	s0,8(s1)
2001132c:	b7c1                	j	200112ec <_puts_r+0x32>
2001132e:	fffff797          	auipc	a5,0xfffff
20011332:	10678793          	addi	a5,a5,262 # 20010434 <__sf_fake_stderr>
20011336:	faf41be3          	bne	s0,a5,200112ec <_puts_r+0x32>
2001133a:	44c0                	lw	s0,12(s1)
2001133c:	bf45                	j	200112ec <_puts_r+0x32>
2001133e:	85a2                	mv	a1,s0
20011340:	8526                	mv	a0,s1
20011342:	2205                	jal	20011462 <__swsetup_r>
20011344:	d955                	beqz	a0,200112f8 <_puts_r+0x3e>
20011346:	557d                	li	a0,-1
20011348:	40f2                	lw	ra,28(sp)
2001134a:	4462                	lw	s0,24(sp)
2001134c:	44d2                	lw	s1,20(sp)
2001134e:	4942                	lw	s2,16(sp)
20011350:	49b2                	lw	s3,12(sp)
20011352:	4a22                	lw	s4,8(sp)
20011354:	6105                	addi	sp,sp,32
20011356:	8082                	ret
20011358:	c41c                	sw	a5,8(s0)
2001135a:	0905                	addi	s2,s2,1
2001135c:	0007d763          	bgez	a5,2001136a <_puts_r+0xb0>
20011360:	4c18                	lw	a4,24(s0)
20011362:	00e7cb63          	blt	a5,a4,20011378 <_puts_r+0xbe>
20011366:	01458963          	beq	a1,s4,20011378 <_puts_r+0xbe>
2001136a:	401c                	lw	a5,0(s0)
2001136c:	00178713          	addi	a4,a5,1
20011370:	c018                	sw	a4,0(s0)
20011372:	00b78023          	sb	a1,0(a5)
20011376:	b759                	j	200112fc <_puts_r+0x42>
20011378:	8622                	mv	a2,s0
2001137a:	8526                	mv	a0,s1
2001137c:	201d                	jal	200113a2 <__swbuf_r>
2001137e:	f7351fe3          	bne	a0,s3,200112fc <_puts_r+0x42>
20011382:	b7d1                	j	20011346 <_puts_r+0x8c>
20011384:	401c                	lw	a5,0(s0)
20011386:	00178713          	addi	a4,a5,1
2001138a:	c018                	sw	a4,0(s0)
2001138c:	4729                	li	a4,10
2001138e:	00e78023          	sb	a4,0(a5)
20011392:	b761                	j	2001131a <_puts_r+0x60>

20011394 <puts>:
puts():
20011394:	5ffef797          	auipc	a5,0x5ffef
20011398:	73478793          	addi	a5,a5,1844 # 80000ac8 <_impure_ptr>
2001139c:	85aa                	mv	a1,a0
2001139e:	4388                	lw	a0,0(a5)
200113a0:	bf29                	j	200112ba <_puts_r>

200113a2 <__swbuf_r>:
__swbuf_r():
200113a2:	1101                	addi	sp,sp,-32
200113a4:	cc22                	sw	s0,24(sp)
200113a6:	ca26                	sw	s1,20(sp)
200113a8:	c84a                	sw	s2,16(sp)
200113aa:	ce06                	sw	ra,28(sp)
200113ac:	c64e                	sw	s3,12(sp)
200113ae:	84aa                	mv	s1,a0
200113b0:	892e                	mv	s2,a1
200113b2:	8432                	mv	s0,a2
200113b4:	c501                	beqz	a0,200113bc <__swbuf_r+0x1a>
200113b6:	4d1c                	lw	a5,24(a0)
200113b8:	e391                	bnez	a5,200113bc <__swbuf_r+0x1a>
200113ba:	2931                	jal	200117d6 <__sinit>
200113bc:	fffff797          	auipc	a5,0xfffff
200113c0:	09878793          	addi	a5,a5,152 # 20010454 <__sf_fake_stdin>
200113c4:	06f41963          	bne	s0,a5,20011436 <__swbuf_r+0x94>
200113c8:	40c0                	lw	s0,4(s1)
200113ca:	4c1c                	lw	a5,24(s0)
200113cc:	c41c                	sw	a5,8(s0)
200113ce:	00c45783          	lhu	a5,12(s0)
200113d2:	8ba1                	andi	a5,a5,8
200113d4:	c3c9                	beqz	a5,20011456 <__swbuf_r+0xb4>
200113d6:	481c                	lw	a5,16(s0)
200113d8:	cfbd                	beqz	a5,20011456 <__swbuf_r+0xb4>
200113da:	481c                	lw	a5,16(s0)
200113dc:	4008                	lw	a0,0(s0)
200113de:	0ff97993          	andi	s3,s2,255
200113e2:	0ff97913          	andi	s2,s2,255
200113e6:	8d1d                	sub	a0,a0,a5
200113e8:	485c                	lw	a5,20(s0)
200113ea:	00f54663          	blt	a0,a5,200113f6 <__swbuf_r+0x54>
200113ee:	85a2                	mv	a1,s0
200113f0:	8526                	mv	a0,s1
200113f2:	24e9                	jal	200116bc <_fflush_r>
200113f4:	e52d                	bnez	a0,2001145e <__swbuf_r+0xbc>
200113f6:	441c                	lw	a5,8(s0)
200113f8:	0505                	addi	a0,a0,1
200113fa:	17fd                	addi	a5,a5,-1
200113fc:	c41c                	sw	a5,8(s0)
200113fe:	401c                	lw	a5,0(s0)
20011400:	00178713          	addi	a4,a5,1
20011404:	c018                	sw	a4,0(s0)
20011406:	01378023          	sb	s3,0(a5)
2001140a:	485c                	lw	a5,20(s0)
2001140c:	00a78963          	beq	a5,a0,2001141e <__swbuf_r+0x7c>
20011410:	00c45783          	lhu	a5,12(s0)
20011414:	8b85                	andi	a5,a5,1
20011416:	cb81                	beqz	a5,20011426 <__swbuf_r+0x84>
20011418:	47a9                	li	a5,10
2001141a:	00f91663          	bne	s2,a5,20011426 <__swbuf_r+0x84>
2001141e:	85a2                	mv	a1,s0
20011420:	8526                	mv	a0,s1
20011422:	2c69                	jal	200116bc <_fflush_r>
20011424:	ed0d                	bnez	a0,2001145e <__swbuf_r+0xbc>
20011426:	40f2                	lw	ra,28(sp)
20011428:	4462                	lw	s0,24(sp)
2001142a:	854a                	mv	a0,s2
2001142c:	44d2                	lw	s1,20(sp)
2001142e:	4942                	lw	s2,16(sp)
20011430:	49b2                	lw	s3,12(sp)
20011432:	6105                	addi	sp,sp,32
20011434:	8082                	ret
20011436:	fffff797          	auipc	a5,0xfffff
2001143a:	03e78793          	addi	a5,a5,62 # 20010474 <__sf_fake_stdout>
2001143e:	00f41463          	bne	s0,a5,20011446 <__swbuf_r+0xa4>
20011442:	4480                	lw	s0,8(s1)
20011444:	b759                	j	200113ca <__swbuf_r+0x28>
20011446:	fffff797          	auipc	a5,0xfffff
2001144a:	fee78793          	addi	a5,a5,-18 # 20010434 <__sf_fake_stderr>
2001144e:	f6f41ee3          	bne	s0,a5,200113ca <__swbuf_r+0x28>
20011452:	44c0                	lw	s0,12(s1)
20011454:	bf9d                	j	200113ca <__swbuf_r+0x28>
20011456:	85a2                	mv	a1,s0
20011458:	8526                	mv	a0,s1
2001145a:	2021                	jal	20011462 <__swsetup_r>
2001145c:	dd3d                	beqz	a0,200113da <__swbuf_r+0x38>
2001145e:	597d                	li	s2,-1
20011460:	b7d9                	j	20011426 <__swbuf_r+0x84>

20011462 <__swsetup_r>:
__swsetup_r():
20011462:	1141                	addi	sp,sp,-16
20011464:	5ffef797          	auipc	a5,0x5ffef
20011468:	66478793          	addi	a5,a5,1636 # 80000ac8 <_impure_ptr>
2001146c:	c226                	sw	s1,4(sp)
2001146e:	4384                	lw	s1,0(a5)
20011470:	c422                	sw	s0,8(sp)
20011472:	c04a                	sw	s2,0(sp)
20011474:	c606                	sw	ra,12(sp)
20011476:	892a                	mv	s2,a0
20011478:	842e                	mv	s0,a1
2001147a:	c489                	beqz	s1,20011484 <__swsetup_r+0x22>
2001147c:	4c9c                	lw	a5,24(s1)
2001147e:	e399                	bnez	a5,20011484 <__swsetup_r+0x22>
20011480:	8526                	mv	a0,s1
20011482:	2e91                	jal	200117d6 <__sinit>
20011484:	fffff797          	auipc	a5,0xfffff
20011488:	fd078793          	addi	a5,a5,-48 # 20010454 <__sf_fake_stdin>
2001148c:	02f41c63          	bne	s0,a5,200114c4 <__swsetup_r+0x62>
20011490:	40c0                	lw	s0,4(s1)
20011492:	00c41703          	lh	a4,12(s0)
20011496:	01071793          	slli	a5,a4,0x10
2001149a:	83c1                	srli	a5,a5,0x10
2001149c:	0087f693          	andi	a3,a5,8
200114a0:	eeb5                	bnez	a3,2001151c <__swsetup_r+0xba>
200114a2:	0107f693          	andi	a3,a5,16
200114a6:	ee9d                	bnez	a3,200114e4 <__swsetup_r+0x82>
200114a8:	47a5                	li	a5,9
200114aa:	00f92023          	sw	a5,0(s2)
200114ae:	04076713          	ori	a4,a4,64
200114b2:	00e41623          	sh	a4,12(s0)
200114b6:	557d                	li	a0,-1
200114b8:	40b2                	lw	ra,12(sp)
200114ba:	4422                	lw	s0,8(sp)
200114bc:	4492                	lw	s1,4(sp)
200114be:	4902                	lw	s2,0(sp)
200114c0:	0141                	addi	sp,sp,16
200114c2:	8082                	ret
200114c4:	fffff797          	auipc	a5,0xfffff
200114c8:	fb078793          	addi	a5,a5,-80 # 20010474 <__sf_fake_stdout>
200114cc:	00f41463          	bne	s0,a5,200114d4 <__swsetup_r+0x72>
200114d0:	4480                	lw	s0,8(s1)
200114d2:	b7c1                	j	20011492 <__swsetup_r+0x30>
200114d4:	fffff797          	auipc	a5,0xfffff
200114d8:	f6078793          	addi	a5,a5,-160 # 20010434 <__sf_fake_stderr>
200114dc:	faf41be3          	bne	s0,a5,20011492 <__swsetup_r+0x30>
200114e0:	44c0                	lw	s0,12(s1)
200114e2:	bf45                	j	20011492 <__swsetup_r+0x30>
200114e4:	8b91                	andi	a5,a5,4
200114e6:	c78d                	beqz	a5,20011510 <__swsetup_r+0xae>
200114e8:	584c                	lw	a1,52(s0)
200114ea:	c989                	beqz	a1,200114fc <__swsetup_r+0x9a>
200114ec:	04440793          	addi	a5,s0,68
200114f0:	00f58463          	beq	a1,a5,200114f8 <__swsetup_r+0x96>
200114f4:	854a                	mv	a0,s2
200114f6:	2b81                	jal	20011a46 <_free_r>
200114f8:	02042a23          	sw	zero,52(s0)
200114fc:	00c45783          	lhu	a5,12(s0)
20011500:	00042223          	sw	zero,4(s0)
20011504:	fdb7f793          	andi	a5,a5,-37
20011508:	00f41623          	sh	a5,12(s0)
2001150c:	481c                	lw	a5,16(s0)
2001150e:	c01c                	sw	a5,0(s0)
20011510:	00c45783          	lhu	a5,12(s0)
20011514:	0087e793          	ori	a5,a5,8
20011518:	00f41623          	sh	a5,12(s0)
2001151c:	481c                	lw	a5,16(s0)
2001151e:	ef81                	bnez	a5,20011536 <__swsetup_r+0xd4>
20011520:	00c45783          	lhu	a5,12(s0)
20011524:	20000713          	li	a4,512
20011528:	2807f793          	andi	a5,a5,640
2001152c:	00e78563          	beq	a5,a4,20011536 <__swsetup_r+0xd4>
20011530:	85a2                	mv	a1,s0
20011532:	854a                	mv	a0,s2
20011534:	219d                	jal	2001199a <__smakebuf_r>
20011536:	00c45783          	lhu	a5,12(s0)
2001153a:	0017f713          	andi	a4,a5,1
2001153e:	c705                	beqz	a4,20011566 <__swsetup_r+0x104>
20011540:	485c                	lw	a5,20(s0)
20011542:	00042423          	sw	zero,8(s0)
20011546:	40f007b3          	neg	a5,a5
2001154a:	cc1c                	sw	a5,24(s0)
2001154c:	481c                	lw	a5,16(s0)
2001154e:	4501                	li	a0,0
20011550:	f7a5                	bnez	a5,200114b8 <__swsetup_r+0x56>
20011552:	00c41783          	lh	a5,12(s0)
20011556:	0807f713          	andi	a4,a5,128
2001155a:	df39                	beqz	a4,200114b8 <__swsetup_r+0x56>
2001155c:	0407e793          	ori	a5,a5,64
20011560:	00f41623          	sh	a5,12(s0)
20011564:	bf89                	j	200114b6 <__swsetup_r+0x54>
20011566:	8b89                	andi	a5,a5,2
20011568:	4701                	li	a4,0
2001156a:	e391                	bnez	a5,2001156e <__swsetup_r+0x10c>
2001156c:	4858                	lw	a4,20(s0)
2001156e:	c418                	sw	a4,8(s0)
20011570:	bff1                	j	2001154c <__swsetup_r+0xea>

20011572 <__sflush_r>:
__sflush_r():
20011572:	00c5d783          	lhu	a5,12(a1)
20011576:	1101                	addi	sp,sp,-32
20011578:	cc22                	sw	s0,24(sp)
2001157a:	ca26                	sw	s1,20(sp)
2001157c:	ce06                	sw	ra,28(sp)
2001157e:	c84a                	sw	s2,16(sp)
20011580:	c64e                	sw	s3,12(sp)
20011582:	0087f713          	andi	a4,a5,8
20011586:	84aa                	mv	s1,a0
20011588:	842e                	mv	s0,a1
2001158a:	e765                	bnez	a4,20011672 <__sflush_r+0x100>
2001158c:	41d8                	lw	a4,4(a1)
2001158e:	00e04763          	bgtz	a4,2001159c <__sflush_r+0x2a>
20011592:	41b8                	lw	a4,64(a1)
20011594:	00e04463          	bgtz	a4,2001159c <__sflush_r+0x2a>
20011598:	4501                	li	a0,0
2001159a:	a0c1                	j	2001165a <__sflush_r+0xe8>
2001159c:	5458                	lw	a4,44(s0)
2001159e:	df6d                	beqz	a4,20011598 <__sflush_r+0x26>
200115a0:	0004a903          	lw	s2,0(s1)
200115a4:	01379693          	slli	a3,a5,0x13
200115a8:	0004a023          	sw	zero,0(s1)
200115ac:	0606de63          	bgez	a3,20011628 <__sflush_r+0xb6>
200115b0:	4868                	lw	a0,84(s0)
200115b2:	00c45783          	lhu	a5,12(s0)
200115b6:	8b91                	andi	a5,a5,4
200115b8:	c799                	beqz	a5,200115c6 <__sflush_r+0x54>
200115ba:	405c                	lw	a5,4(s0)
200115bc:	8d1d                	sub	a0,a0,a5
200115be:	585c                	lw	a5,52(s0)
200115c0:	c399                	beqz	a5,200115c6 <__sflush_r+0x54>
200115c2:	403c                	lw	a5,64(s0)
200115c4:	8d1d                	sub	a0,a0,a5
200115c6:	545c                	lw	a5,44(s0)
200115c8:	500c                	lw	a1,32(s0)
200115ca:	862a                	mv	a2,a0
200115cc:	4681                	li	a3,0
200115ce:	8526                	mv	a0,s1
200115d0:	9782                	jalr	a5
200115d2:	57fd                	li	a5,-1
200115d4:	00c45703          	lhu	a4,12(s0)
200115d8:	00f51d63          	bne	a0,a5,200115f2 <__sflush_r+0x80>
200115dc:	4094                	lw	a3,0(s1)
200115de:	47f5                	li	a5,29
200115e0:	08d7e463          	bltu	a5,a3,20011668 <__sflush_r+0xf6>
200115e4:	204007b7          	lui	a5,0x20400
200115e8:	0785                	addi	a5,a5,1
200115ea:	00d7d7b3          	srl	a5,a5,a3
200115ee:	8b85                	andi	a5,a5,1
200115f0:	cfa5                	beqz	a5,20011668 <__sflush_r+0xf6>
200115f2:	481c                	lw	a5,16(s0)
200115f4:	00042223          	sw	zero,4(s0)
200115f8:	c01c                	sw	a5,0(s0)
200115fa:	01371793          	slli	a5,a4,0x13
200115fe:	0007d863          	bgez	a5,2001160e <__sflush_r+0x9c>
20011602:	57fd                	li	a5,-1
20011604:	00f51463          	bne	a0,a5,2001160c <__sflush_r+0x9a>
20011608:	409c                	lw	a5,0(s1)
2001160a:	e391                	bnez	a5,2001160e <__sflush_r+0x9c>
2001160c:	c868                	sw	a0,84(s0)
2001160e:	584c                	lw	a1,52(s0)
20011610:	0124a023          	sw	s2,0(s1)
20011614:	d1d1                	beqz	a1,20011598 <__sflush_r+0x26>
20011616:	04440793          	addi	a5,s0,68
2001161a:	00f58463          	beq	a1,a5,20011622 <__sflush_r+0xb0>
2001161e:	8526                	mv	a0,s1
20011620:	211d                	jal	20011a46 <_free_r>
20011622:	02042a23          	sw	zero,52(s0)
20011626:	bf8d                	j	20011598 <__sflush_r+0x26>
20011628:	500c                	lw	a1,32(s0)
2001162a:	4685                	li	a3,1
2001162c:	4601                	li	a2,0
2001162e:	8526                	mv	a0,s1
20011630:	9702                	jalr	a4
20011632:	57fd                	li	a5,-1
20011634:	f6f51fe3          	bne	a0,a5,200115b2 <__sflush_r+0x40>
20011638:	409c                	lw	a5,0(s1)
2001163a:	dfa5                	beqz	a5,200115b2 <__sflush_r+0x40>
2001163c:	4775                	li	a4,29
2001163e:	00e78563          	beq	a5,a4,20011648 <__sflush_r+0xd6>
20011642:	4759                	li	a4,22
20011644:	00e79563          	bne	a5,a4,2001164e <__sflush_r+0xdc>
20011648:	0124a023          	sw	s2,0(s1)
2001164c:	b7b1                	j	20011598 <__sflush_r+0x26>
2001164e:	00c45783          	lhu	a5,12(s0)
20011652:	0407e793          	ori	a5,a5,64
20011656:	00f41623          	sh	a5,12(s0)
2001165a:	40f2                	lw	ra,28(sp)
2001165c:	4462                	lw	s0,24(sp)
2001165e:	44d2                	lw	s1,20(sp)
20011660:	4942                	lw	s2,16(sp)
20011662:	49b2                	lw	s3,12(sp)
20011664:	6105                	addi	sp,sp,32
20011666:	8082                	ret
20011668:	04076713          	ori	a4,a4,64
2001166c:	00e41623          	sh	a4,12(s0)
20011670:	b7ed                	j	2001165a <__sflush_r+0xe8>
20011672:	0105a983          	lw	s3,16(a1)
20011676:	f20981e3          	beqz	s3,20011598 <__sflush_r+0x26>
2001167a:	0005a903          	lw	s2,0(a1)
2001167e:	8b8d                	andi	a5,a5,3
20011680:	0135a023          	sw	s3,0(a1)
20011684:	41390933          	sub	s2,s2,s3
20011688:	4701                	li	a4,0
2001168a:	e391                	bnez	a5,2001168e <__sflush_r+0x11c>
2001168c:	49d8                	lw	a4,20(a1)
2001168e:	c418                	sw	a4,8(s0)
20011690:	f12054e3          	blez	s2,20011598 <__sflush_r+0x26>
20011694:	541c                	lw	a5,40(s0)
20011696:	500c                	lw	a1,32(s0)
20011698:	86ca                	mv	a3,s2
2001169a:	864e                	mv	a2,s3
2001169c:	8526                	mv	a0,s1
2001169e:	9782                	jalr	a5
200116a0:	00a04a63          	bgtz	a0,200116b4 <__sflush_r+0x142>
200116a4:	00c45783          	lhu	a5,12(s0)
200116a8:	557d                	li	a0,-1
200116aa:	0407e793          	ori	a5,a5,64
200116ae:	00f41623          	sh	a5,12(s0)
200116b2:	b765                	j	2001165a <__sflush_r+0xe8>
200116b4:	99aa                	add	s3,s3,a0
200116b6:	40a90933          	sub	s2,s2,a0
200116ba:	bfd9                	j	20011690 <__sflush_r+0x11e>

200116bc <_fflush_r>:
_fflush_r():
200116bc:	499c                	lw	a5,16(a1)
200116be:	cfb9                	beqz	a5,2001171c <_fflush_r+0x60>
200116c0:	1101                	addi	sp,sp,-32
200116c2:	cc22                	sw	s0,24(sp)
200116c4:	ce06                	sw	ra,28(sp)
200116c6:	842a                	mv	s0,a0
200116c8:	c511                	beqz	a0,200116d4 <_fflush_r+0x18>
200116ca:	4d1c                	lw	a5,24(a0)
200116cc:	e781                	bnez	a5,200116d4 <_fflush_r+0x18>
200116ce:	c62e                	sw	a1,12(sp)
200116d0:	2219                	jal	200117d6 <__sinit>
200116d2:	45b2                	lw	a1,12(sp)
200116d4:	fffff797          	auipc	a5,0xfffff
200116d8:	d8078793          	addi	a5,a5,-640 # 20010454 <__sf_fake_stdin>
200116dc:	00f59b63          	bne	a1,a5,200116f2 <_fflush_r+0x36>
200116e0:	404c                	lw	a1,4(s0)
200116e2:	00c59783          	lh	a5,12(a1)
200116e6:	c795                	beqz	a5,20011712 <_fflush_r+0x56>
200116e8:	8522                	mv	a0,s0
200116ea:	4462                	lw	s0,24(sp)
200116ec:	40f2                	lw	ra,28(sp)
200116ee:	6105                	addi	sp,sp,32
200116f0:	b549                	j	20011572 <__sflush_r>
200116f2:	fffff797          	auipc	a5,0xfffff
200116f6:	d8278793          	addi	a5,a5,-638 # 20010474 <__sf_fake_stdout>
200116fa:	00f59463          	bne	a1,a5,20011702 <_fflush_r+0x46>
200116fe:	440c                	lw	a1,8(s0)
20011700:	b7cd                	j	200116e2 <_fflush_r+0x26>
20011702:	fffff797          	auipc	a5,0xfffff
20011706:	d3278793          	addi	a5,a5,-718 # 20010434 <__sf_fake_stderr>
2001170a:	fcf59ce3          	bne	a1,a5,200116e2 <_fflush_r+0x26>
2001170e:	444c                	lw	a1,12(s0)
20011710:	bfc9                	j	200116e2 <_fflush_r+0x26>
20011712:	40f2                	lw	ra,28(sp)
20011714:	4462                	lw	s0,24(sp)
20011716:	4501                	li	a0,0
20011718:	6105                	addi	sp,sp,32
2001171a:	8082                	ret
2001171c:	4501                	li	a0,0
2001171e:	8082                	ret

20011720 <std>:
std():
20011720:	1141                	addi	sp,sp,-16
20011722:	c422                	sw	s0,8(sp)
20011724:	c606                	sw	ra,12(sp)
20011726:	842a                	mv	s0,a0
20011728:	00b51623          	sh	a1,12(a0)
2001172c:	00c51723          	sh	a2,14(a0)
20011730:	00052023          	sw	zero,0(a0)
20011734:	00052223          	sw	zero,4(a0)
20011738:	00052423          	sw	zero,8(a0)
2001173c:	06052223          	sw	zero,100(a0)
20011740:	00052823          	sw	zero,16(a0)
20011744:	00052a23          	sw	zero,20(a0)
20011748:	00052c23          	sw	zero,24(a0)
2001174c:	4621                	li	a2,8
2001174e:	4581                	li	a1,0
20011750:	05c50513          	addi	a0,a0,92
20011754:	24cd                	jal	20011a36 <memset>
20011756:	00000797          	auipc	a5,0x0
2001175a:	7a878793          	addi	a5,a5,1960 # 20011efe <__sread>
2001175e:	d05c                	sw	a5,36(s0)
20011760:	00000797          	auipc	a5,0x0
20011764:	7ce78793          	addi	a5,a5,1998 # 20011f2e <__swrite>
20011768:	d41c                	sw	a5,40(s0)
2001176a:	00001797          	auipc	a5,0x1
2001176e:	81278793          	addi	a5,a5,-2030 # 20011f7c <__sseek>
20011772:	d45c                	sw	a5,44(s0)
20011774:	00001797          	auipc	a5,0x1
20011778:	83e78793          	addi	a5,a5,-1986 # 20011fb2 <__sclose>
2001177c:	d000                	sw	s0,32(s0)
2001177e:	d81c                	sw	a5,48(s0)
20011780:	40b2                	lw	ra,12(sp)
20011782:	4422                	lw	s0,8(sp)
20011784:	0141                	addi	sp,sp,16
20011786:	8082                	ret

20011788 <_cleanup_r>:
_cleanup_r():
20011788:	00000597          	auipc	a1,0x0
2001178c:	f3458593          	addi	a1,a1,-204 # 200116bc <_fflush_r>
20011790:	a299                	j	200118d6 <_fwalk_reent>

20011792 <__sfmoreglue>:
__sfmoreglue():
20011792:	1141                	addi	sp,sp,-16
20011794:	c226                	sw	s1,4(sp)
20011796:	06800613          	li	a2,104
2001179a:	fff58493          	addi	s1,a1,-1
2001179e:	02c484b3          	mul	s1,s1,a2
200117a2:	c04a                	sw	s2,0(sp)
200117a4:	892e                	mv	s2,a1
200117a6:	c422                	sw	s0,8(sp)
200117a8:	c606                	sw	ra,12(sp)
200117aa:	07448593          	addi	a1,s1,116
200117ae:	2691                	jal	20011af2 <_malloc_r>
200117b0:	842a                	mv	s0,a0
200117b2:	c919                	beqz	a0,200117c8 <__sfmoreglue+0x36>
200117b4:	00052023          	sw	zero,0(a0)
200117b8:	01252223          	sw	s2,4(a0)
200117bc:	0531                	addi	a0,a0,12
200117be:	c408                	sw	a0,8(s0)
200117c0:	06848613          	addi	a2,s1,104
200117c4:	4581                	li	a1,0
200117c6:	2c85                	jal	20011a36 <memset>
200117c8:	8522                	mv	a0,s0
200117ca:	40b2                	lw	ra,12(sp)
200117cc:	4422                	lw	s0,8(sp)
200117ce:	4492                	lw	s1,4(sp)
200117d0:	4902                	lw	s2,0(sp)
200117d2:	0141                	addi	sp,sp,16
200117d4:	8082                	ret

200117d6 <__sinit>:
__sinit():
200117d6:	4d1c                	lw	a5,24(a0)
200117d8:	e3ad                	bnez	a5,2001183a <__sinit+0x64>
200117da:	1141                	addi	sp,sp,-16
200117dc:	c606                	sw	ra,12(sp)
200117de:	c422                	sw	s0,8(sp)
200117e0:	00000797          	auipc	a5,0x0
200117e4:	fa878793          	addi	a5,a5,-88 # 20011788 <_cleanup_r>
200117e8:	d51c                	sw	a5,40(a0)
200117ea:	80c18793          	addi	a5,gp,-2036 # 80000acc <_global_impure_ptr>
200117ee:	439c                	lw	a5,0(a5)
200117f0:	04052423          	sw	zero,72(a0)
200117f4:	04052623          	sw	zero,76(a0)
200117f8:	04052823          	sw	zero,80(a0)
200117fc:	00f51463          	bne	a0,a5,20011804 <__sinit+0x2e>
20011800:	4785                	li	a5,1
20011802:	cd1c                	sw	a5,24(a0)
20011804:	842a                	mv	s0,a0
20011806:	281d                	jal	2001183c <__sfp>
20011808:	c048                	sw	a0,4(s0)
2001180a:	8522                	mv	a0,s0
2001180c:	2805                	jal	2001183c <__sfp>
2001180e:	c408                	sw	a0,8(s0)
20011810:	8522                	mv	a0,s0
20011812:	202d                	jal	2001183c <__sfp>
20011814:	c448                	sw	a0,12(s0)
20011816:	4048                	lw	a0,4(s0)
20011818:	4601                	li	a2,0
2001181a:	4591                	li	a1,4
2001181c:	3711                	jal	20011720 <std>
2001181e:	4408                	lw	a0,8(s0)
20011820:	4605                	li	a2,1
20011822:	45a5                	li	a1,9
20011824:	3df5                	jal	20011720 <std>
20011826:	4448                	lw	a0,12(s0)
20011828:	4609                	li	a2,2
2001182a:	45c9                	li	a1,18
2001182c:	3dd5                	jal	20011720 <std>
2001182e:	4785                	li	a5,1
20011830:	cc1c                	sw	a5,24(s0)
20011832:	40b2                	lw	ra,12(sp)
20011834:	4422                	lw	s0,8(sp)
20011836:	0141                	addi	sp,sp,16
20011838:	8082                	ret
2001183a:	8082                	ret

2001183c <__sfp>:
__sfp():
2001183c:	1141                	addi	sp,sp,-16
2001183e:	80c18793          	addi	a5,gp,-2036 # 80000acc <_global_impure_ptr>
20011842:	c226                	sw	s1,4(sp)
20011844:	4384                	lw	s1,0(a5)
20011846:	c04a                	sw	s2,0(sp)
20011848:	c606                	sw	ra,12(sp)
2001184a:	4c9c                	lw	a5,24(s1)
2001184c:	c422                	sw	s0,8(sp)
2001184e:	892a                	mv	s2,a0
20011850:	e399                	bnez	a5,20011856 <__sfp+0x1a>
20011852:	8526                	mv	a0,s1
20011854:	3749                	jal	200117d6 <__sinit>
20011856:	04848493          	addi	s1,s1,72
2001185a:	4480                	lw	s0,8(s1)
2001185c:	40dc                	lw	a5,4(s1)
2001185e:	17fd                	addi	a5,a5,-1
20011860:	0007d663          	bgez	a5,2001186c <__sfp+0x30>
20011864:	409c                	lw	a5,0(s1)
20011866:	cfb1                	beqz	a5,200118c2 <__sfp+0x86>
20011868:	4084                	lw	s1,0(s1)
2001186a:	bfc5                	j	2001185a <__sfp+0x1e>
2001186c:	00c41703          	lh	a4,12(s0)
20011870:	e731                	bnez	a4,200118bc <__sfp+0x80>
20011872:	77c1                	lui	a5,0xffff0
20011874:	0785                	addi	a5,a5,1
20011876:	06042223          	sw	zero,100(s0)
2001187a:	00042023          	sw	zero,0(s0)
2001187e:	00042223          	sw	zero,4(s0)
20011882:	00042423          	sw	zero,8(s0)
20011886:	c45c                	sw	a5,12(s0)
20011888:	00042823          	sw	zero,16(s0)
2001188c:	00042a23          	sw	zero,20(s0)
20011890:	00042c23          	sw	zero,24(s0)
20011894:	4621                	li	a2,8
20011896:	4581                	li	a1,0
20011898:	05c40513          	addi	a0,s0,92
2001189c:	2a69                	jal	20011a36 <memset>
2001189e:	02042a23          	sw	zero,52(s0)
200118a2:	02042c23          	sw	zero,56(s0)
200118a6:	04042423          	sw	zero,72(s0)
200118aa:	04042623          	sw	zero,76(s0)
200118ae:	8522                	mv	a0,s0
200118b0:	40b2                	lw	ra,12(sp)
200118b2:	4422                	lw	s0,8(sp)
200118b4:	4492                	lw	s1,4(sp)
200118b6:	4902                	lw	s2,0(sp)
200118b8:	0141                	addi	sp,sp,16
200118ba:	8082                	ret
200118bc:	06840413          	addi	s0,s0,104
200118c0:	bf79                	j	2001185e <__sfp+0x22>
200118c2:	4591                	li	a1,4
200118c4:	854a                	mv	a0,s2
200118c6:	35f1                	jal	20011792 <__sfmoreglue>
200118c8:	c088                	sw	a0,0(s1)
200118ca:	842a                	mv	s0,a0
200118cc:	fd51                	bnez	a0,20011868 <__sfp+0x2c>
200118ce:	47b1                	li	a5,12
200118d0:	00f92023          	sw	a5,0(s2)
200118d4:	bfe9                	j	200118ae <__sfp+0x72>

200118d6 <_fwalk_reent>:
_fwalk_reent():
200118d6:	7179                	addi	sp,sp,-48
200118d8:	d422                	sw	s0,40(sp)
200118da:	d04a                	sw	s2,32(sp)
200118dc:	cc52                	sw	s4,24(sp)
200118de:	ca56                	sw	s5,20(sp)
200118e0:	c85a                	sw	s6,16(sp)
200118e2:	c65e                	sw	s7,12(sp)
200118e4:	d606                	sw	ra,44(sp)
200118e6:	d226                	sw	s1,36(sp)
200118e8:	ce4e                	sw	s3,28(sp)
200118ea:	8a2a                	mv	s4,a0
200118ec:	8aae                	mv	s5,a1
200118ee:	04850413          	addi	s0,a0,72
200118f2:	4901                	li	s2,0
200118f4:	4b05                	li	s6,1
200118f6:	5bfd                	li	s7,-1
200118f8:	ec09                	bnez	s0,20011912 <_fwalk_reent+0x3c>
200118fa:	50b2                	lw	ra,44(sp)
200118fc:	5422                	lw	s0,40(sp)
200118fe:	854a                	mv	a0,s2
20011900:	5492                	lw	s1,36(sp)
20011902:	5902                	lw	s2,32(sp)
20011904:	49f2                	lw	s3,28(sp)
20011906:	4a62                	lw	s4,24(sp)
20011908:	4ad2                	lw	s5,20(sp)
2001190a:	4b42                	lw	s6,16(sp)
2001190c:	4bb2                	lw	s7,12(sp)
2001190e:	6145                	addi	sp,sp,48
20011910:	8082                	ret
20011912:	4404                	lw	s1,8(s0)
20011914:	00442983          	lw	s3,4(s0)
20011918:	19fd                	addi	s3,s3,-1
2001191a:	0009d463          	bgez	s3,20011922 <_fwalk_reent+0x4c>
2001191e:	4000                	lw	s0,0(s0)
20011920:	bfe1                	j	200118f8 <_fwalk_reent+0x22>
20011922:	00c4d783          	lhu	a5,12(s1)
20011926:	00fb7b63          	bgeu	s6,a5,2001193c <_fwalk_reent+0x66>
2001192a:	00e49783          	lh	a5,14(s1)
2001192e:	01778763          	beq	a5,s7,2001193c <_fwalk_reent+0x66>
20011932:	85a6                	mv	a1,s1
20011934:	8552                	mv	a0,s4
20011936:	9a82                	jalr	s5
20011938:	00a96933          	or	s2,s2,a0
2001193c:	06848493          	addi	s1,s1,104
20011940:	bfe1                	j	20011918 <_fwalk_reent+0x42>

20011942 <__swhatbuf_r>:
__swhatbuf_r():
20011942:	7119                	addi	sp,sp,-128
20011944:	daa6                	sw	s1,116(sp)
20011946:	84ae                	mv	s1,a1
20011948:	00e59583          	lh	a1,14(a1)
2001194c:	dca2                	sw	s0,120(sp)
2001194e:	de86                	sw	ra,124(sp)
20011950:	8432                	mv	s0,a2
20011952:	0005dc63          	bgez	a1,2001196a <__swhatbuf_r+0x28>
20011956:	00c4d783          	lhu	a5,12(s1)
2001195a:	0006a023          	sw	zero,0(a3)
2001195e:	0807f793          	andi	a5,a5,128
20011962:	e39d                	bnez	a5,20011988 <__swhatbuf_r+0x46>
20011964:	40000793          	li	a5,1024
20011968:	a015                	j	2001198c <__swhatbuf_r+0x4a>
2001196a:	0830                	addi	a2,sp,24
2001196c:	c636                	sw	a3,12(sp)
2001196e:	254d                	jal	20012010 <_fstat_r>
20011970:	46b2                	lw	a3,12(sp)
20011972:	fe0542e3          	bltz	a0,20011956 <__swhatbuf_r+0x14>
20011976:	4772                	lw	a4,28(sp)
20011978:	67bd                	lui	a5,0xf
2001197a:	8ff9                	and	a5,a5,a4
2001197c:	7779                	lui	a4,0xffffe
2001197e:	97ba                	add	a5,a5,a4
20011980:	0017b793          	seqz	a5,a5
20011984:	c29c                	sw	a5,0(a3)
20011986:	bff9                	j	20011964 <__swhatbuf_r+0x22>
20011988:	04000793          	li	a5,64
2001198c:	c01c                	sw	a5,0(s0)
2001198e:	50f6                	lw	ra,124(sp)
20011990:	5466                	lw	s0,120(sp)
20011992:	54d6                	lw	s1,116(sp)
20011994:	4501                	li	a0,0
20011996:	6109                	addi	sp,sp,128
20011998:	8082                	ret

2001199a <__smakebuf_r>:
__smakebuf_r():
2001199a:	00c5d783          	lhu	a5,12(a1)
2001199e:	1101                	addi	sp,sp,-32
200119a0:	cc22                	sw	s0,24(sp)
200119a2:	ce06                	sw	ra,28(sp)
200119a4:	ca26                	sw	s1,20(sp)
200119a6:	c84a                	sw	s2,16(sp)
200119a8:	8b89                	andi	a5,a5,2
200119aa:	842e                	mv	s0,a1
200119ac:	cf89                	beqz	a5,200119c6 <__smakebuf_r+0x2c>
200119ae:	04740793          	addi	a5,s0,71
200119b2:	c01c                	sw	a5,0(s0)
200119b4:	c81c                	sw	a5,16(s0)
200119b6:	4785                	li	a5,1
200119b8:	c85c                	sw	a5,20(s0)
200119ba:	40f2                	lw	ra,28(sp)
200119bc:	4462                	lw	s0,24(sp)
200119be:	44d2                	lw	s1,20(sp)
200119c0:	4942                	lw	s2,16(sp)
200119c2:	6105                	addi	sp,sp,32
200119c4:	8082                	ret
200119c6:	0074                	addi	a3,sp,12
200119c8:	0030                	addi	a2,sp,8
200119ca:	84aa                	mv	s1,a0
200119cc:	3f9d                	jal	20011942 <__swhatbuf_r>
200119ce:	45a2                	lw	a1,8(sp)
200119d0:	892a                	mv	s2,a0
200119d2:	8526                	mv	a0,s1
200119d4:	2a39                	jal	20011af2 <_malloc_r>
200119d6:	ed01                	bnez	a0,200119ee <__smakebuf_r+0x54>
200119d8:	00c41783          	lh	a5,12(s0)
200119dc:	2007f713          	andi	a4,a5,512
200119e0:	ff69                	bnez	a4,200119ba <__smakebuf_r+0x20>
200119e2:	9bf1                	andi	a5,a5,-4
200119e4:	0027e793          	ori	a5,a5,2
200119e8:	00f41623          	sh	a5,12(s0)
200119ec:	b7c9                	j	200119ae <__smakebuf_r+0x14>
200119ee:	00000797          	auipc	a5,0x0
200119f2:	d9a78793          	addi	a5,a5,-614 # 20011788 <_cleanup_r>
200119f6:	d49c                	sw	a5,40(s1)
200119f8:	00c45783          	lhu	a5,12(s0)
200119fc:	c008                	sw	a0,0(s0)
200119fe:	c808                	sw	a0,16(s0)
20011a00:	0807e793          	ori	a5,a5,128
20011a04:	00f41623          	sh	a5,12(s0)
20011a08:	47a2                	lw	a5,8(sp)
20011a0a:	c85c                	sw	a5,20(s0)
20011a0c:	47b2                	lw	a5,12(sp)
20011a0e:	cf89                	beqz	a5,20011a28 <__smakebuf_r+0x8e>
20011a10:	00e41583          	lh	a1,14(s0)
20011a14:	8526                	mv	a0,s1
20011a16:	251d                	jal	2001203c <_isatty_r>
20011a18:	c901                	beqz	a0,20011a28 <__smakebuf_r+0x8e>
20011a1a:	00c45783          	lhu	a5,12(s0)
20011a1e:	9bf1                	andi	a5,a5,-4
20011a20:	0017e793          	ori	a5,a5,1
20011a24:	00f41623          	sh	a5,12(s0)
20011a28:	00c45783          	lhu	a5,12(s0)
20011a2c:	00f96933          	or	s2,s2,a5
20011a30:	01241623          	sh	s2,12(s0)
20011a34:	b759                	j	200119ba <__smakebuf_r+0x20>

20011a36 <memset>:
memset():
20011a36:	832a                	mv	t1,a0
20011a38:	c611                	beqz	a2,20011a44 <memset+0xe>
20011a3a:	00b30023          	sb	a1,0(t1)
20011a3e:	167d                	addi	a2,a2,-1
20011a40:	0305                	addi	t1,t1,1
20011a42:	fe65                	bnez	a2,20011a3a <memset+0x4>
20011a44:	8082                	ret

20011a46 <_free_r>:
_free_r():
20011a46:	c5cd                	beqz	a1,20011af0 <_free_r+0xaa>
20011a48:	ffc5a783          	lw	a5,-4(a1)
20011a4c:	1141                	addi	sp,sp,-16
20011a4e:	c422                	sw	s0,8(sp)
20011a50:	c606                	sw	ra,12(sp)
20011a52:	c226                	sw	s1,4(sp)
20011a54:	ffc58413          	addi	s0,a1,-4
20011a58:	0007d363          	bgez	a5,20011a5e <_free_r+0x18>
20011a5c:	943e                	add	s0,s0,a5
20011a5e:	84aa                	mv	s1,a0
20011a60:	25b9                	jal	200120ae <__malloc_lock>
20011a62:	5ffef797          	auipc	a5,0x5ffef
20011a66:	0ae78793          	addi	a5,a5,174 # 80000b10 <__tls_base>
20011a6a:	439c                	lw	a5,0(a5)
20011a6c:	ef89                	bnez	a5,20011a86 <_free_r+0x40>
20011a6e:	00042223          	sw	zero,4(s0)
20011a72:	5ffef797          	auipc	a5,0x5ffef
20011a76:	0887af23          	sw	s0,158(a5) # 80000b10 <__tls_base>
20011a7a:	4422                	lw	s0,8(sp)
20011a7c:	40b2                	lw	ra,12(sp)
20011a7e:	8526                	mv	a0,s1
20011a80:	4492                	lw	s1,4(sp)
20011a82:	0141                	addi	sp,sp,16
20011a84:	a535                	j	200120b0 <__malloc_unlock>
20011a86:	00f47e63          	bgeu	s0,a5,20011aa2 <_free_r+0x5c>
20011a8a:	4014                	lw	a3,0(s0)
20011a8c:	00d40733          	add	a4,s0,a3
20011a90:	00e79663          	bne	a5,a4,20011a9c <_free_r+0x56>
20011a94:	4398                	lw	a4,0(a5)
20011a96:	43dc                	lw	a5,4(a5)
20011a98:	9736                	add	a4,a4,a3
20011a9a:	c018                	sw	a4,0(s0)
20011a9c:	c05c                	sw	a5,4(s0)
20011a9e:	bfd1                	j	20011a72 <_free_r+0x2c>
20011aa0:	87ba                	mv	a5,a4
20011aa2:	43d8                	lw	a4,4(a5)
20011aa4:	c319                	beqz	a4,20011aaa <_free_r+0x64>
20011aa6:	fee47de3          	bgeu	s0,a4,20011aa0 <_free_r+0x5a>
20011aaa:	4394                	lw	a3,0(a5)
20011aac:	00d78633          	add	a2,a5,a3
20011ab0:	00861f63          	bne	a2,s0,20011ace <_free_r+0x88>
20011ab4:	4010                	lw	a2,0(s0)
20011ab6:	96b2                	add	a3,a3,a2
20011ab8:	c394                	sw	a3,0(a5)
20011aba:	00d78633          	add	a2,a5,a3
20011abe:	fac71ee3          	bne	a4,a2,20011a7a <_free_r+0x34>
20011ac2:	4310                	lw	a2,0(a4)
20011ac4:	4358                	lw	a4,4(a4)
20011ac6:	96b2                	add	a3,a3,a2
20011ac8:	c394                	sw	a3,0(a5)
20011aca:	c3d8                	sw	a4,4(a5)
20011acc:	b77d                	j	20011a7a <_free_r+0x34>
20011ace:	00c47563          	bgeu	s0,a2,20011ad8 <_free_r+0x92>
20011ad2:	47b1                	li	a5,12
20011ad4:	c09c                	sw	a5,0(s1)
20011ad6:	b755                	j	20011a7a <_free_r+0x34>
20011ad8:	4010                	lw	a2,0(s0)
20011ada:	00c406b3          	add	a3,s0,a2
20011ade:	00d71663          	bne	a4,a3,20011aea <_free_r+0xa4>
20011ae2:	4314                	lw	a3,0(a4)
20011ae4:	4358                	lw	a4,4(a4)
20011ae6:	96b2                	add	a3,a3,a2
20011ae8:	c014                	sw	a3,0(s0)
20011aea:	c058                	sw	a4,4(s0)
20011aec:	c3c0                	sw	s0,4(a5)
20011aee:	b771                	j	20011a7a <_free_r+0x34>
20011af0:	8082                	ret

20011af2 <_malloc_r>:
_malloc_r():
20011af2:	1101                	addi	sp,sp,-32
20011af4:	ca26                	sw	s1,20(sp)
20011af6:	00358493          	addi	s1,a1,3
20011afa:	98f1                	andi	s1,s1,-4
20011afc:	ce06                	sw	ra,28(sp)
20011afe:	cc22                	sw	s0,24(sp)
20011b00:	c84a                	sw	s2,16(sp)
20011b02:	c64e                	sw	s3,12(sp)
20011b04:	04a1                	addi	s1,s1,8
20011b06:	47b1                	li	a5,12
20011b08:	04f4f763          	bgeu	s1,a5,20011b56 <_malloc_r+0x64>
20011b0c:	44b1                	li	s1,12
20011b0e:	04b4e663          	bltu	s1,a1,20011b5a <_malloc_r+0x68>
20011b12:	892a                	mv	s2,a0
20011b14:	2b69                	jal	200120ae <__malloc_lock>
20011b16:	5ffef797          	auipc	a5,0x5ffef
20011b1a:	ffa78793          	addi	a5,a5,-6 # 80000b10 <__tls_base>
20011b1e:	4398                	lw	a4,0(a5)
20011b20:	843a                	mv	s0,a4
20011b22:	e431                	bnez	s0,20011b6e <_malloc_r+0x7c>
20011b24:	5ffef797          	auipc	a5,0x5ffef
20011b28:	ff078793          	addi	a5,a5,-16 # 80000b14 <__malloc_sbrk_start>
20011b2c:	439c                	lw	a5,0(a5)
20011b2e:	eb81                	bnez	a5,20011b3e <_malloc_r+0x4c>
20011b30:	4581                	li	a1,0
20011b32:	854a                	mv	a0,s2
20011b34:	2645                	jal	20011ed4 <_sbrk_r>
20011b36:	5ffef797          	auipc	a5,0x5ffef
20011b3a:	fca7af23          	sw	a0,-34(a5) # 80000b14 <__malloc_sbrk_start>
20011b3e:	85a6                	mv	a1,s1
20011b40:	854a                	mv	a0,s2
20011b42:	2e49                	jal	20011ed4 <_sbrk_r>
20011b44:	59fd                	li	s3,-1
20011b46:	07351963          	bne	a0,s3,20011bb8 <_malloc_r+0xc6>
20011b4a:	47b1                	li	a5,12
20011b4c:	00f92023          	sw	a5,0(s2)
20011b50:	854a                	mv	a0,s2
20011b52:	2bb9                	jal	200120b0 <__malloc_unlock>
20011b54:	a029                	j	20011b5e <_malloc_r+0x6c>
20011b56:	fa04dce3          	bgez	s1,20011b0e <_malloc_r+0x1c>
20011b5a:	47b1                	li	a5,12
20011b5c:	c11c                	sw	a5,0(a0)
20011b5e:	4501                	li	a0,0
20011b60:	40f2                	lw	ra,28(sp)
20011b62:	4462                	lw	s0,24(sp)
20011b64:	44d2                	lw	s1,20(sp)
20011b66:	4942                	lw	s2,16(sp)
20011b68:	49b2                	lw	s3,12(sp)
20011b6a:	6105                	addi	sp,sp,32
20011b6c:	8082                	ret
20011b6e:	401c                	lw	a5,0(s0)
20011b70:	8f85                	sub	a5,a5,s1
20011b72:	0407c063          	bltz	a5,20011bb2 <_malloc_r+0xc0>
20011b76:	46ad                	li	a3,11
20011b78:	00f6f663          	bgeu	a3,a5,20011b84 <_malloc_r+0x92>
20011b7c:	c01c                	sw	a5,0(s0)
20011b7e:	943e                	add	s0,s0,a5
20011b80:	c004                	sw	s1,0(s0)
20011b82:	a801                	j	20011b92 <_malloc_r+0xa0>
20011b84:	405c                	lw	a5,4(s0)
20011b86:	02871463          	bne	a4,s0,20011bae <_malloc_r+0xbc>
20011b8a:	5ffef717          	auipc	a4,0x5ffef
20011b8e:	f8f72323          	sw	a5,-122(a4) # 80000b10 <__tls_base>
20011b92:	854a                	mv	a0,s2
20011b94:	2b31                	jal	200120b0 <__malloc_unlock>
20011b96:	00b40513          	addi	a0,s0,11
20011b9a:	00440793          	addi	a5,s0,4
20011b9e:	9961                	andi	a0,a0,-8
20011ba0:	40f50733          	sub	a4,a0,a5
20011ba4:	df55                	beqz	a4,20011b60 <_malloc_r+0x6e>
20011ba6:	943a                	add	s0,s0,a4
20011ba8:	8f89                	sub	a5,a5,a0
20011baa:	c01c                	sw	a5,0(s0)
20011bac:	bf55                	j	20011b60 <_malloc_r+0x6e>
20011bae:	c35c                	sw	a5,4(a4)
20011bb0:	b7cd                	j	20011b92 <_malloc_r+0xa0>
20011bb2:	8722                	mv	a4,s0
20011bb4:	4040                	lw	s0,4(s0)
20011bb6:	b7b5                	j	20011b22 <_malloc_r+0x30>
20011bb8:	00350413          	addi	s0,a0,3
20011bbc:	9871                	andi	s0,s0,-4
20011bbe:	fc8501e3          	beq	a0,s0,20011b80 <_malloc_r+0x8e>
20011bc2:	40a405b3          	sub	a1,s0,a0
20011bc6:	854a                	mv	a0,s2
20011bc8:	2631                	jal	20011ed4 <_sbrk_r>
20011bca:	fb351be3          	bne	a0,s3,20011b80 <_malloc_r+0x8e>
20011bce:	bfb5                	j	20011b4a <_malloc_r+0x58>

20011bd0 <__sfputc_r>:
__sfputc_r():
20011bd0:	461c                	lw	a5,8(a2)
20011bd2:	17fd                	addi	a5,a5,-1
20011bd4:	c61c                	sw	a5,8(a2)
20011bd6:	0007da63          	bgez	a5,20011bea <__sfputc_r+0x1a>
20011bda:	4e18                	lw	a4,24(a2)
20011bdc:	00e7c563          	blt	a5,a4,20011be6 <__sfputc_r+0x16>
20011be0:	47a9                	li	a5,10
20011be2:	00f59463          	bne	a1,a5,20011bea <__sfputc_r+0x1a>
20011be6:	fbcff06f          	j	200113a2 <__swbuf_r>
20011bea:	421c                	lw	a5,0(a2)
20011bec:	852e                	mv	a0,a1
20011bee:	00178713          	addi	a4,a5,1
20011bf2:	c218                	sw	a4,0(a2)
20011bf4:	00b78023          	sb	a1,0(a5)
20011bf8:	8082                	ret

20011bfa <__sfputs_r>:
__sfputs_r():
20011bfa:	1101                	addi	sp,sp,-32
20011bfc:	cc22                	sw	s0,24(sp)
20011bfe:	ca26                	sw	s1,20(sp)
20011c00:	c84a                	sw	s2,16(sp)
20011c02:	c64e                	sw	s3,12(sp)
20011c04:	c452                	sw	s4,8(sp)
20011c06:	ce06                	sw	ra,28(sp)
20011c08:	892a                	mv	s2,a0
20011c0a:	89ae                	mv	s3,a1
20011c0c:	8432                	mv	s0,a2
20011c0e:	00d604b3          	add	s1,a2,a3
20011c12:	5a7d                	li	s4,-1
20011c14:	00941463          	bne	s0,s1,20011c1c <__sfputs_r+0x22>
20011c18:	4501                	li	a0,0
20011c1a:	a809                	j	20011c2c <__sfputs_r+0x32>
20011c1c:	00044583          	lbu	a1,0(s0)
20011c20:	864e                	mv	a2,s3
20011c22:	854a                	mv	a0,s2
20011c24:	3775                	jal	20011bd0 <__sfputc_r>
20011c26:	0405                	addi	s0,s0,1
20011c28:	ff4516e3          	bne	a0,s4,20011c14 <__sfputs_r+0x1a>
20011c2c:	40f2                	lw	ra,28(sp)
20011c2e:	4462                	lw	s0,24(sp)
20011c30:	44d2                	lw	s1,20(sp)
20011c32:	4942                	lw	s2,16(sp)
20011c34:	49b2                	lw	s3,12(sp)
20011c36:	4a22                	lw	s4,8(sp)
20011c38:	6105                	addi	sp,sp,32
20011c3a:	8082                	ret

20011c3c <_vfiprintf_r>:
_vfiprintf_r():
20011c3c:	7135                	addi	sp,sp,-160
20011c3e:	cd22                	sw	s0,152(sp)
20011c40:	cb26                	sw	s1,148(sp)
20011c42:	c94a                	sw	s2,144(sp)
20011c44:	c74e                	sw	s3,140(sp)
20011c46:	cf06                	sw	ra,156(sp)
20011c48:	c552                	sw	s4,136(sp)
20011c4a:	c356                	sw	s5,132(sp)
20011c4c:	c15a                	sw	s6,128(sp)
20011c4e:	dede                	sw	s7,124(sp)
20011c50:	dce2                	sw	s8,120(sp)
20011c52:	dae6                	sw	s9,116(sp)
20011c54:	89aa                	mv	s3,a0
20011c56:	84ae                	mv	s1,a1
20011c58:	8932                	mv	s2,a2
20011c5a:	8436                	mv	s0,a3
20011c5c:	c501                	beqz	a0,20011c64 <_vfiprintf_r+0x28>
20011c5e:	4d1c                	lw	a5,24(a0)
20011c60:	e391                	bnez	a5,20011c64 <_vfiprintf_r+0x28>
20011c62:	3e95                	jal	200117d6 <__sinit>
20011c64:	ffffe797          	auipc	a5,0xffffe
20011c68:	7f078793          	addi	a5,a5,2032 # 20010454 <__sf_fake_stdin>
20011c6c:	0cf49b63          	bne	s1,a5,20011d42 <_vfiprintf_r+0x106>
20011c70:	0049a483          	lw	s1,4(s3)
20011c74:	00c4d783          	lhu	a5,12(s1)
20011c78:	8ba1                	andi	a5,a5,8
20011c7a:	c7f5                	beqz	a5,20011d66 <_vfiprintf_r+0x12a>
20011c7c:	489c                	lw	a5,16(s1)
20011c7e:	c7e5                	beqz	a5,20011d66 <_vfiprintf_r+0x12a>
20011c80:	02000793          	li	a5,32
20011c84:	02f104a3          	sb	a5,41(sp)
20011c88:	03000793          	li	a5,48
20011c8c:	d202                	sw	zero,36(sp)
20011c8e:	02f10523          	sb	a5,42(sp)
20011c92:	c622                	sw	s0,12(sp)
20011c94:	02500b93          	li	s7,37
20011c98:	ffffea97          	auipc	s5,0xffffe
20011c9c:	7fca8a93          	addi	s5,s5,2044 # 20010494 <__sf_fake_stdout+0x20>
20011ca0:	4c05                	li	s8,1
20011ca2:	4b29                	li	s6,10
20011ca4:	844a                	mv	s0,s2
20011ca6:	00044783          	lbu	a5,0(s0)
20011caa:	c399                	beqz	a5,20011cb0 <_vfiprintf_r+0x74>
20011cac:	0f779063          	bne	a5,s7,20011d8c <_vfiprintf_r+0x150>
20011cb0:	41240cb3          	sub	s9,s0,s2
20011cb4:	000c8d63          	beqz	s9,20011cce <_vfiprintf_r+0x92>
20011cb8:	86e6                	mv	a3,s9
20011cba:	864a                	mv	a2,s2
20011cbc:	85a6                	mv	a1,s1
20011cbe:	854e                	mv	a0,s3
20011cc0:	3f2d                	jal	20011bfa <__sfputs_r>
20011cc2:	57fd                	li	a5,-1
20011cc4:	1ef50663          	beq	a0,a5,20011eb0 <_vfiprintf_r+0x274>
20011cc8:	5692                	lw	a3,36(sp)
20011cca:	96e6                	add	a3,a3,s9
20011ccc:	d236                	sw	a3,36(sp)
20011cce:	00044783          	lbu	a5,0(s0)
20011cd2:	1c078f63          	beqz	a5,20011eb0 <_vfiprintf_r+0x274>
20011cd6:	57fd                	li	a5,-1
20011cd8:	00140913          	addi	s2,s0,1
20011cdc:	c802                	sw	zero,16(sp)
20011cde:	ce02                	sw	zero,28(sp)
20011ce0:	ca3e                	sw	a5,20(sp)
20011ce2:	cc02                	sw	zero,24(sp)
20011ce4:	040109a3          	sb	zero,83(sp)
20011ce8:	d482                	sw	zero,104(sp)
20011cea:	00094583          	lbu	a1,0(s2)
20011cee:	4615                	li	a2,5
20011cf0:	8556                	mv	a0,s5
20011cf2:	264d                	jal	20012094 <memchr>
20011cf4:	00190413          	addi	s0,s2,1
20011cf8:	47c2                	lw	a5,16(sp)
20011cfa:	e959                	bnez	a0,20011d90 <_vfiprintf_r+0x154>
20011cfc:	0107f713          	andi	a4,a5,16
20011d00:	c709                	beqz	a4,20011d0a <_vfiprintf_r+0xce>
20011d02:	02000713          	li	a4,32
20011d06:	04e109a3          	sb	a4,83(sp)
20011d0a:	0087f713          	andi	a4,a5,8
20011d0e:	c709                	beqz	a4,20011d18 <_vfiprintf_r+0xdc>
20011d10:	02b00713          	li	a4,43
20011d14:	04e109a3          	sb	a4,83(sp)
20011d18:	00094683          	lbu	a3,0(s2)
20011d1c:	02a00713          	li	a4,42
20011d20:	08e68063          	beq	a3,a4,20011da0 <_vfiprintf_r+0x164>
20011d24:	47f2                	lw	a5,28(sp)
20011d26:	844a                	mv	s0,s2
20011d28:	4681                	li	a3,0
20011d2a:	4625                	li	a2,9
20011d2c:	00044703          	lbu	a4,0(s0)
20011d30:	00140593          	addi	a1,s0,1
20011d34:	fd070713          	addi	a4,a4,-48
20011d38:	0ae67963          	bgeu	a2,a4,20011dea <_vfiprintf_r+0x1ae>
20011d3c:	cab5                	beqz	a3,20011db0 <_vfiprintf_r+0x174>
20011d3e:	ce3e                	sw	a5,28(sp)
20011d40:	a885                	j	20011db0 <_vfiprintf_r+0x174>
20011d42:	ffffe797          	auipc	a5,0xffffe
20011d46:	73278793          	addi	a5,a5,1842 # 20010474 <__sf_fake_stdout>
20011d4a:	00f49563          	bne	s1,a5,20011d54 <_vfiprintf_r+0x118>
20011d4e:	0089a483          	lw	s1,8(s3)
20011d52:	b70d                	j	20011c74 <_vfiprintf_r+0x38>
20011d54:	ffffe797          	auipc	a5,0xffffe
20011d58:	6e078793          	addi	a5,a5,1760 # 20010434 <__sf_fake_stderr>
20011d5c:	f0f49ce3          	bne	s1,a5,20011c74 <_vfiprintf_r+0x38>
20011d60:	00c9a483          	lw	s1,12(s3)
20011d64:	bf01                	j	20011c74 <_vfiprintf_r+0x38>
20011d66:	85a6                	mv	a1,s1
20011d68:	854e                	mv	a0,s3
20011d6a:	ef8ff0ef          	jal	ra,20011462 <__swsetup_r>
20011d6e:	d909                	beqz	a0,20011c80 <_vfiprintf_r+0x44>
20011d70:	557d                	li	a0,-1
20011d72:	40fa                	lw	ra,156(sp)
20011d74:	446a                	lw	s0,152(sp)
20011d76:	44da                	lw	s1,148(sp)
20011d78:	494a                	lw	s2,144(sp)
20011d7a:	49ba                	lw	s3,140(sp)
20011d7c:	4a2a                	lw	s4,136(sp)
20011d7e:	4a9a                	lw	s5,132(sp)
20011d80:	4b0a                	lw	s6,128(sp)
20011d82:	5bf6                	lw	s7,124(sp)
20011d84:	5c66                	lw	s8,120(sp)
20011d86:	5cd6                	lw	s9,116(sp)
20011d88:	610d                	addi	sp,sp,160
20011d8a:	8082                	ret
20011d8c:	0405                	addi	s0,s0,1
20011d8e:	bf21                	j	20011ca6 <_vfiprintf_r+0x6a>
20011d90:	41550533          	sub	a0,a0,s5
20011d94:	00ac1533          	sll	a0,s8,a0
20011d98:	8fc9                	or	a5,a5,a0
20011d9a:	c83e                	sw	a5,16(sp)
20011d9c:	8922                	mv	s2,s0
20011d9e:	b7b1                	j	20011cea <_vfiprintf_r+0xae>
20011da0:	4732                	lw	a4,12(sp)
20011da2:	00470693          	addi	a3,a4,4
20011da6:	4318                	lw	a4,0(a4)
20011da8:	c636                	sw	a3,12(sp)
20011daa:	02074963          	bltz	a4,20011ddc <_vfiprintf_r+0x1a0>
20011dae:	ce3a                	sw	a4,28(sp)
20011db0:	00044703          	lbu	a4,0(s0)
20011db4:	02e00793          	li	a5,46
20011db8:	04f71f63          	bne	a4,a5,20011e16 <_vfiprintf_r+0x1da>
20011dbc:	00144703          	lbu	a4,1(s0)
20011dc0:	02a00793          	li	a5,42
20011dc4:	02f71b63          	bne	a4,a5,20011dfa <_vfiprintf_r+0x1be>
20011dc8:	47b2                	lw	a5,12(sp)
20011dca:	0409                	addi	s0,s0,2
20011dcc:	00478713          	addi	a4,a5,4
20011dd0:	439c                	lw	a5,0(a5)
20011dd2:	c63a                	sw	a4,12(sp)
20011dd4:	0207c163          	bltz	a5,20011df6 <_vfiprintf_r+0x1ba>
20011dd8:	ca3e                	sw	a5,20(sp)
20011dda:	a835                	j	20011e16 <_vfiprintf_r+0x1da>
20011ddc:	40e00733          	neg	a4,a4
20011de0:	0027e793          	ori	a5,a5,2
20011de4:	ce3a                	sw	a4,28(sp)
20011de6:	c83e                	sw	a5,16(sp)
20011de8:	b7e1                	j	20011db0 <_vfiprintf_r+0x174>
20011dea:	036787b3          	mul	a5,a5,s6
20011dee:	4685                	li	a3,1
20011df0:	842e                	mv	s0,a1
20011df2:	97ba                	add	a5,a5,a4
20011df4:	bf25                	j	20011d2c <_vfiprintf_r+0xf0>
20011df6:	57fd                	li	a5,-1
20011df8:	b7c5                	j	20011dd8 <_vfiprintf_r+0x19c>
20011dfa:	0405                	addi	s0,s0,1
20011dfc:	ca02                	sw	zero,20(sp)
20011dfe:	4681                	li	a3,0
20011e00:	4781                	li	a5,0
20011e02:	4625                	li	a2,9
20011e04:	00044703          	lbu	a4,0(s0)
20011e08:	00140593          	addi	a1,s0,1
20011e0c:	fd070713          	addi	a4,a4,-48
20011e10:	06e67663          	bgeu	a2,a4,20011e7c <_vfiprintf_r+0x240>
20011e14:	f2f1                	bnez	a3,20011dd8 <_vfiprintf_r+0x19c>
20011e16:	00044583          	lbu	a1,0(s0)
20011e1a:	460d                	li	a2,3
20011e1c:	ffffe517          	auipc	a0,0xffffe
20011e20:	68050513          	addi	a0,a0,1664 # 2001049c <__sf_fake_stdout+0x28>
20011e24:	2c85                	jal	20012094 <memchr>
20011e26:	cd11                	beqz	a0,20011e42 <_vfiprintf_r+0x206>
20011e28:	ffffe797          	auipc	a5,0xffffe
20011e2c:	67478793          	addi	a5,a5,1652 # 2001049c <__sf_fake_stdout+0x28>
20011e30:	8d1d                	sub	a0,a0,a5
20011e32:	04000793          	li	a5,64
20011e36:	00a797b3          	sll	a5,a5,a0
20011e3a:	4542                	lw	a0,16(sp)
20011e3c:	0405                	addi	s0,s0,1
20011e3e:	8d5d                	or	a0,a0,a5
20011e40:	c82a                	sw	a0,16(sp)
20011e42:	00044583          	lbu	a1,0(s0)
20011e46:	4619                	li	a2,6
20011e48:	ffffe517          	auipc	a0,0xffffe
20011e4c:	65850513          	addi	a0,a0,1624 # 200104a0 <__sf_fake_stdout+0x2c>
20011e50:	00140913          	addi	s2,s0,1
20011e54:	02b10423          	sb	a1,40(sp)
20011e58:	2c35                	jal	20012094 <memchr>
20011e5a:	c13d                	beqz	a0,20011ec0 <_vfiprintf_r+0x284>
20011e5c:	dffee797          	auipc	a5,0xdffee
20011e60:	1a478793          	addi	a5,a5,420 # 0 <__metal_boot_hart>
20011e64:	e795                	bnez	a5,20011e90 <_vfiprintf_r+0x254>
20011e66:	4742                	lw	a4,16(sp)
20011e68:	47b2                	lw	a5,12(sp)
20011e6a:	10077713          	andi	a4,a4,256
20011e6e:	cf09                	beqz	a4,20011e88 <_vfiprintf_r+0x24c>
20011e70:	0791                	addi	a5,a5,4
20011e72:	c63e                	sw	a5,12(sp)
20011e74:	5792                	lw	a5,36(sp)
20011e76:	97d2                	add	a5,a5,s4
20011e78:	d23e                	sw	a5,36(sp)
20011e7a:	b52d                	j	20011ca4 <_vfiprintf_r+0x68>
20011e7c:	036787b3          	mul	a5,a5,s6
20011e80:	4685                	li	a3,1
20011e82:	842e                	mv	s0,a1
20011e84:	97ba                	add	a5,a5,a4
20011e86:	bfbd                	j	20011e04 <_vfiprintf_r+0x1c8>
20011e88:	079d                	addi	a5,a5,7
20011e8a:	9be1                	andi	a5,a5,-8
20011e8c:	07a1                	addi	a5,a5,8
20011e8e:	b7d5                	j	20011e72 <_vfiprintf_r+0x236>
20011e90:	0078                	addi	a4,sp,12
20011e92:	00000697          	auipc	a3,0x0
20011e96:	d6868693          	addi	a3,a3,-664 # 20011bfa <__sfputs_r>
20011e9a:	8626                	mv	a2,s1
20011e9c:	080c                	addi	a1,sp,16
20011e9e:	854e                	mv	a0,s3
20011ea0:	00000097          	auipc	ra,0x0
20011ea4:	000000e7          	jalr	zero # 0 <__metal_boot_hart>
20011ea8:	57fd                	li	a5,-1
20011eaa:	8a2a                	mv	s4,a0
20011eac:	fcf514e3          	bne	a0,a5,20011e74 <_vfiprintf_r+0x238>
20011eb0:	00c4d783          	lhu	a5,12(s1)
20011eb4:	0407f793          	andi	a5,a5,64
20011eb8:	ea079ce3          	bnez	a5,20011d70 <_vfiprintf_r+0x134>
20011ebc:	5512                	lw	a0,36(sp)
20011ebe:	bd55                	j	20011d72 <_vfiprintf_r+0x136>
20011ec0:	0078                	addi	a4,sp,12
20011ec2:	00000697          	auipc	a3,0x0
20011ec6:	d3868693          	addi	a3,a3,-712 # 20011bfa <__sfputs_r>
20011eca:	8626                	mv	a2,s1
20011ecc:	080c                	addi	a1,sp,16
20011ece:	854e                	mv	a0,s3
20011ed0:	24fd                	jal	200121be <_printf_i>
20011ed2:	bfd9                	j	20011ea8 <_vfiprintf_r+0x26c>

20011ed4 <_sbrk_r>:
_sbrk_r():
20011ed4:	1141                	addi	sp,sp,-16
20011ed6:	c422                	sw	s0,8(sp)
20011ed8:	842a                	mv	s0,a0
20011eda:	852e                	mv	a0,a1
20011edc:	8e01a823          	sw	zero,-1808(gp) # 80000bb0 <errno>
20011ee0:	c606                	sw	ra,12(sp)
20011ee2:	3a3050ef          	jal	ra,20017a84 <_sbrk>
20011ee6:	57fd                	li	a5,-1
20011ee8:	00f51763          	bne	a0,a5,20011ef6 <_sbrk_r+0x22>
20011eec:	8f018793          	addi	a5,gp,-1808 # 80000bb0 <errno>
20011ef0:	439c                	lw	a5,0(a5)
20011ef2:	c391                	beqz	a5,20011ef6 <_sbrk_r+0x22>
20011ef4:	c01c                	sw	a5,0(s0)
20011ef6:	40b2                	lw	ra,12(sp)
20011ef8:	4422                	lw	s0,8(sp)
20011efa:	0141                	addi	sp,sp,16
20011efc:	8082                	ret

20011efe <__sread>:
__sread():
20011efe:	1141                	addi	sp,sp,-16
20011f00:	c422                	sw	s0,8(sp)
20011f02:	842e                	mv	s0,a1
20011f04:	00e59583          	lh	a1,14(a1)
20011f08:	c606                	sw	ra,12(sp)
20011f0a:	2b99                	jal	20012460 <_read_r>
20011f0c:	00054963          	bltz	a0,20011f1e <__sread+0x20>
20011f10:	487c                	lw	a5,84(s0)
20011f12:	97aa                	add	a5,a5,a0
20011f14:	c87c                	sw	a5,84(s0)
20011f16:	40b2                	lw	ra,12(sp)
20011f18:	4422                	lw	s0,8(sp)
20011f1a:	0141                	addi	sp,sp,16
20011f1c:	8082                	ret
20011f1e:	00c45783          	lhu	a5,12(s0)
20011f22:	777d                	lui	a4,0xfffff
20011f24:	177d                	addi	a4,a4,-1
20011f26:	8ff9                	and	a5,a5,a4
20011f28:	00f41623          	sh	a5,12(s0)
20011f2c:	b7ed                	j	20011f16 <__sread+0x18>

20011f2e <__swrite>:
__swrite():
20011f2e:	00c5d783          	lhu	a5,12(a1)
20011f32:	1101                	addi	sp,sp,-32
20011f34:	cc22                	sw	s0,24(sp)
20011f36:	ca26                	sw	s1,20(sp)
20011f38:	c84a                	sw	s2,16(sp)
20011f3a:	c64e                	sw	s3,12(sp)
20011f3c:	ce06                	sw	ra,28(sp)
20011f3e:	1007f793          	andi	a5,a5,256
20011f42:	84aa                	mv	s1,a0
20011f44:	842e                	mv	s0,a1
20011f46:	8932                	mv	s2,a2
20011f48:	89b6                	mv	s3,a3
20011f4a:	c791                	beqz	a5,20011f56 <__swrite+0x28>
20011f4c:	00e59583          	lh	a1,14(a1)
20011f50:	4689                	li	a3,2
20011f52:	4601                	li	a2,0
20011f54:	2a09                	jal	20012066 <_lseek_r>
20011f56:	00c45783          	lhu	a5,12(s0)
20011f5a:	777d                	lui	a4,0xfffff
20011f5c:	177d                	addi	a4,a4,-1
20011f5e:	8ff9                	and	a5,a5,a4
20011f60:	00f41623          	sh	a5,12(s0)
20011f64:	00e41583          	lh	a1,14(s0)
20011f68:	4462                	lw	s0,24(sp)
20011f6a:	40f2                	lw	ra,28(sp)
20011f6c:	86ce                	mv	a3,s3
20011f6e:	864a                	mv	a2,s2
20011f70:	49b2                	lw	s3,12(sp)
20011f72:	4942                	lw	s2,16(sp)
20011f74:	8526                	mv	a0,s1
20011f76:	44d2                	lw	s1,20(sp)
20011f78:	6105                	addi	sp,sp,32
20011f7a:	a83d                	j	20011fb8 <_write_r>

20011f7c <__sseek>:
__sseek():
20011f7c:	1141                	addi	sp,sp,-16
20011f7e:	c422                	sw	s0,8(sp)
20011f80:	842e                	mv	s0,a1
20011f82:	00e59583          	lh	a1,14(a1)
20011f86:	c606                	sw	ra,12(sp)
20011f88:	28f9                	jal	20012066 <_lseek_r>
20011f8a:	57fd                	li	a5,-1
20011f8c:	00c45703          	lhu	a4,12(s0)
20011f90:	00f51b63          	bne	a0,a5,20011fa6 <__sseek+0x2a>
20011f94:	77fd                	lui	a5,0xfffff
20011f96:	17fd                	addi	a5,a5,-1
20011f98:	8ff9                	and	a5,a5,a4
20011f9a:	00f41623          	sh	a5,12(s0)
20011f9e:	40b2                	lw	ra,12(sp)
20011fa0:	4422                	lw	s0,8(sp)
20011fa2:	0141                	addi	sp,sp,16
20011fa4:	8082                	ret
20011fa6:	6785                	lui	a5,0x1
20011fa8:	8fd9                	or	a5,a5,a4
20011faa:	00f41623          	sh	a5,12(s0)
20011fae:	c868                	sw	a0,84(s0)
20011fb0:	b7fd                	j	20011f9e <__sseek+0x22>

20011fb2 <__sclose>:
__sclose():
20011fb2:	00e59583          	lh	a1,14(a1)
20011fb6:	a805                	j	20011fe6 <_close_r>

20011fb8 <_write_r>:
_write_r():
20011fb8:	1141                	addi	sp,sp,-16
20011fba:	c422                	sw	s0,8(sp)
20011fbc:	842a                	mv	s0,a0
20011fbe:	852e                	mv	a0,a1
20011fc0:	85b2                	mv	a1,a2
20011fc2:	8636                	mv	a2,a3
20011fc4:	8e01a823          	sw	zero,-1808(gp) # 80000bb0 <errno>
20011fc8:	c606                	sw	ra,12(sp)
20011fca:	325050ef          	jal	ra,20017aee <_write>
20011fce:	57fd                	li	a5,-1
20011fd0:	00f51763          	bne	a0,a5,20011fde <_write_r+0x26>
20011fd4:	8f018793          	addi	a5,gp,-1808 # 80000bb0 <errno>
20011fd8:	439c                	lw	a5,0(a5)
20011fda:	c391                	beqz	a5,20011fde <_write_r+0x26>
20011fdc:	c01c                	sw	a5,0(s0)
20011fde:	40b2                	lw	ra,12(sp)
20011fe0:	4422                	lw	s0,8(sp)
20011fe2:	0141                	addi	sp,sp,16
20011fe4:	8082                	ret

20011fe6 <_close_r>:
_close_r():
20011fe6:	1141                	addi	sp,sp,-16
20011fe8:	c422                	sw	s0,8(sp)
20011fea:	842a                	mv	s0,a0
20011fec:	852e                	mv	a0,a1
20011fee:	8e01a823          	sw	zero,-1808(gp) # 80000bb0 <errno>
20011ff2:	c606                	sw	ra,12(sp)
20011ff4:	1d5050ef          	jal	ra,200179c8 <_close>
20011ff8:	57fd                	li	a5,-1
20011ffa:	00f51763          	bne	a0,a5,20012008 <_close_r+0x22>
20011ffe:	8f018793          	addi	a5,gp,-1808 # 80000bb0 <errno>
20012002:	439c                	lw	a5,0(a5)
20012004:	c391                	beqz	a5,20012008 <_close_r+0x22>
20012006:	c01c                	sw	a5,0(s0)
20012008:	40b2                	lw	ra,12(sp)
2001200a:	4422                	lw	s0,8(sp)
2001200c:	0141                	addi	sp,sp,16
2001200e:	8082                	ret

20012010 <_fstat_r>:
_fstat_r():
20012010:	1141                	addi	sp,sp,-16
20012012:	c422                	sw	s0,8(sp)
20012014:	842a                	mv	s0,a0
20012016:	852e                	mv	a0,a1
20012018:	85b2                	mv	a1,a2
2001201a:	8e01a823          	sw	zero,-1808(gp) # 80000bb0 <errno>
2001201e:	c606                	sw	ra,12(sp)
20012020:	1cb050ef          	jal	ra,200179ea <_fstat>
20012024:	57fd                	li	a5,-1
20012026:	00f51763          	bne	a0,a5,20012034 <_fstat_r+0x24>
2001202a:	8f018793          	addi	a5,gp,-1808 # 80000bb0 <errno>
2001202e:	439c                	lw	a5,0(a5)
20012030:	c391                	beqz	a5,20012034 <_fstat_r+0x24>
20012032:	c01c                	sw	a5,0(s0)
20012034:	40b2                	lw	ra,12(sp)
20012036:	4422                	lw	s0,8(sp)
20012038:	0141                	addi	sp,sp,16
2001203a:	8082                	ret

2001203c <_isatty_r>:
_isatty_r():
2001203c:	1141                	addi	sp,sp,-16
2001203e:	c422                	sw	s0,8(sp)
20012040:	842a                	mv	s0,a0
20012042:	852e                	mv	a0,a1
20012044:	8e01a823          	sw	zero,-1808(gp) # 80000bb0 <errno>
20012048:	c606                	sw	ra,12(sp)
2001204a:	1c7050ef          	jal	ra,20017a10 <_isatty>
2001204e:	57fd                	li	a5,-1
20012050:	00f51763          	bne	a0,a5,2001205e <_isatty_r+0x22>
20012054:	8f018793          	addi	a5,gp,-1808 # 80000bb0 <errno>
20012058:	439c                	lw	a5,0(a5)
2001205a:	c391                	beqz	a5,2001205e <_isatty_r+0x22>
2001205c:	c01c                	sw	a5,0(s0)
2001205e:	40b2                	lw	ra,12(sp)
20012060:	4422                	lw	s0,8(sp)
20012062:	0141                	addi	sp,sp,16
20012064:	8082                	ret

20012066 <_lseek_r>:
_lseek_r():
20012066:	1141                	addi	sp,sp,-16
20012068:	c422                	sw	s0,8(sp)
2001206a:	842a                	mv	s0,a0
2001206c:	852e                	mv	a0,a1
2001206e:	85b2                	mv	a1,a2
20012070:	8636                	mv	a2,a3
20012072:	8e01a823          	sw	zero,-1808(gp) # 80000bb0 <errno>
20012076:	c606                	sw	ra,12(sp)
20012078:	1b9050ef          	jal	ra,20017a30 <_lseek>
2001207c:	57fd                	li	a5,-1
2001207e:	00f51763          	bne	a0,a5,2001208c <_lseek_r+0x26>
20012082:	8f018793          	addi	a5,gp,-1808 # 80000bb0 <errno>
20012086:	439c                	lw	a5,0(a5)
20012088:	c391                	beqz	a5,2001208c <_lseek_r+0x26>
2001208a:	c01c                	sw	a5,0(s0)
2001208c:	40b2                	lw	ra,12(sp)
2001208e:	4422                	lw	s0,8(sp)
20012090:	0141                	addi	sp,sp,16
20012092:	8082                	ret

20012094 <memchr>:
memchr():
20012094:	0ff5f593          	andi	a1,a1,255
20012098:	962a                	add	a2,a2,a0
2001209a:	00c51463          	bne	a0,a2,200120a2 <memchr+0xe>
2001209e:	4501                	li	a0,0
200120a0:	8082                	ret
200120a2:	00054783          	lbu	a5,0(a0)
200120a6:	feb78de3          	beq	a5,a1,200120a0 <memchr+0xc>
200120aa:	0505                	addi	a0,a0,1
200120ac:	b7fd                	j	2001209a <memchr+0x6>

200120ae <__malloc_lock>:
__malloc_lock():
200120ae:	8082                	ret

200120b0 <__malloc_unlock>:
__malloc_unlock():
200120b0:	8082                	ret

200120b2 <_printf_common>:
_printf_common():
200120b2:	7179                	addi	sp,sp,-48
200120b4:	ca56                	sw	s5,20(sp)
200120b6:	499c                	lw	a5,16(a1)
200120b8:	8aba                	mv	s5,a4
200120ba:	4598                	lw	a4,8(a1)
200120bc:	d422                	sw	s0,40(sp)
200120be:	d226                	sw	s1,36(sp)
200120c0:	ce4e                	sw	s3,28(sp)
200120c2:	cc52                	sw	s4,24(sp)
200120c4:	d606                	sw	ra,44(sp)
200120c6:	d04a                	sw	s2,32(sp)
200120c8:	c85a                	sw	s6,16(sp)
200120ca:	c65e                	sw	s7,12(sp)
200120cc:	89aa                	mv	s3,a0
200120ce:	842e                	mv	s0,a1
200120d0:	84b2                	mv	s1,a2
200120d2:	8a36                	mv	s4,a3
200120d4:	00e7d363          	bge	a5,a4,200120da <_printf_common+0x28>
200120d8:	87ba                	mv	a5,a4
200120da:	c09c                	sw	a5,0(s1)
200120dc:	04344703          	lbu	a4,67(s0)
200120e0:	c319                	beqz	a4,200120e6 <_printf_common+0x34>
200120e2:	0785                	addi	a5,a5,1
200120e4:	c09c                	sw	a5,0(s1)
200120e6:	401c                	lw	a5,0(s0)
200120e8:	0207f793          	andi	a5,a5,32
200120ec:	c781                	beqz	a5,200120f4 <_printf_common+0x42>
200120ee:	409c                	lw	a5,0(s1)
200120f0:	0789                	addi	a5,a5,2
200120f2:	c09c                	sw	a5,0(s1)
200120f4:	00042903          	lw	s2,0(s0)
200120f8:	00697913          	andi	s2,s2,6
200120fc:	00091a63          	bnez	s2,20012110 <_printf_common+0x5e>
20012100:	01940b13          	addi	s6,s0,25
20012104:	5bfd                	li	s7,-1
20012106:	445c                	lw	a5,12(s0)
20012108:	4098                	lw	a4,0(s1)
2001210a:	8f99                	sub	a5,a5,a4
2001210c:	04f94c63          	blt	s2,a5,20012164 <_printf_common+0xb2>
20012110:	401c                	lw	a5,0(s0)
20012112:	04344683          	lbu	a3,67(s0)
20012116:	0207f793          	andi	a5,a5,32
2001211a:	00d036b3          	snez	a3,a3
2001211e:	eba5                	bnez	a5,2001218e <_printf_common+0xdc>
20012120:	04340613          	addi	a2,s0,67
20012124:	85d2                	mv	a1,s4
20012126:	854e                	mv	a0,s3
20012128:	9a82                	jalr	s5
2001212a:	57fd                	li	a5,-1
2001212c:	04f50363          	beq	a0,a5,20012172 <_printf_common+0xc0>
20012130:	401c                	lw	a5,0(s0)
20012132:	4611                	li	a2,4
20012134:	4098                	lw	a4,0(s1)
20012136:	8b99                	andi	a5,a5,6
20012138:	4454                	lw	a3,12(s0)
2001213a:	4481                	li	s1,0
2001213c:	00c79763          	bne	a5,a2,2001214a <_printf_common+0x98>
20012140:	40e684b3          	sub	s1,a3,a4
20012144:	0004d363          	bgez	s1,2001214a <_printf_common+0x98>
20012148:	4481                	li	s1,0
2001214a:	441c                	lw	a5,8(s0)
2001214c:	4818                	lw	a4,16(s0)
2001214e:	00f75463          	bge	a4,a5,20012156 <_printf_common+0xa4>
20012152:	8f99                	sub	a5,a5,a4
20012154:	94be                	add	s1,s1,a5
20012156:	4901                	li	s2,0
20012158:	0469                	addi	s0,s0,26
2001215a:	5b7d                	li	s6,-1
2001215c:	05249863          	bne	s1,s2,200121ac <_printf_common+0xfa>
20012160:	4501                	li	a0,0
20012162:	a809                	j	20012174 <_printf_common+0xc2>
20012164:	4685                	li	a3,1
20012166:	865a                	mv	a2,s6
20012168:	85d2                	mv	a1,s4
2001216a:	854e                	mv	a0,s3
2001216c:	9a82                	jalr	s5
2001216e:	01751e63          	bne	a0,s7,2001218a <_printf_common+0xd8>
20012172:	557d                	li	a0,-1
20012174:	50b2                	lw	ra,44(sp)
20012176:	5422                	lw	s0,40(sp)
20012178:	5492                	lw	s1,36(sp)
2001217a:	5902                	lw	s2,32(sp)
2001217c:	49f2                	lw	s3,28(sp)
2001217e:	4a62                	lw	s4,24(sp)
20012180:	4ad2                	lw	s5,20(sp)
20012182:	4b42                	lw	s6,16(sp)
20012184:	4bb2                	lw	s7,12(sp)
20012186:	6145                	addi	sp,sp,48
20012188:	8082                	ret
2001218a:	0905                	addi	s2,s2,1
2001218c:	bfad                	j	20012106 <_printf_common+0x54>
2001218e:	00d40733          	add	a4,s0,a3
20012192:	03000613          	li	a2,48
20012196:	04c701a3          	sb	a2,67(a4) # fffff043 <metal_segment_heap_target_end+0x7fffd883>
2001219a:	04544703          	lbu	a4,69(s0)
2001219e:	00168793          	addi	a5,a3,1
200121a2:	97a2                	add	a5,a5,s0
200121a4:	0689                	addi	a3,a3,2
200121a6:	04e781a3          	sb	a4,67(a5) # 1043 <__heap_size+0x843>
200121aa:	bf9d                	j	20012120 <_printf_common+0x6e>
200121ac:	4685                	li	a3,1
200121ae:	8622                	mv	a2,s0
200121b0:	85d2                	mv	a1,s4
200121b2:	854e                	mv	a0,s3
200121b4:	9a82                	jalr	s5
200121b6:	fb650ee3          	beq	a0,s6,20012172 <_printf_common+0xc0>
200121ba:	0905                	addi	s2,s2,1
200121bc:	b745                	j	2001215c <_printf_common+0xaa>

200121be <_printf_i>:
_printf_i():
200121be:	7179                	addi	sp,sp,-48
200121c0:	d422                	sw	s0,40(sp)
200121c2:	d226                	sw	s1,36(sp)
200121c4:	d04a                	sw	s2,32(sp)
200121c6:	ce4e                	sw	s3,28(sp)
200121c8:	d606                	sw	ra,44(sp)
200121ca:	cc52                	sw	s4,24(sp)
200121cc:	ca56                	sw	s5,20(sp)
200121ce:	c85a                	sw	s6,16(sp)
200121d0:	89b6                	mv	s3,a3
200121d2:	0185c683          	lbu	a3,24(a1)
200121d6:	06e00793          	li	a5,110
200121da:	8932                	mv	s2,a2
200121dc:	84aa                	mv	s1,a0
200121de:	842e                	mv	s0,a1
200121e0:	04358613          	addi	a2,a1,67
200121e4:	1ef68063          	beq	a3,a5,200123c4 <_printf_i+0x206>
200121e8:	06d7e263          	bltu	a5,a3,2001224c <_printf_i+0x8e>
200121ec:	06300793          	li	a5,99
200121f0:	0af68263          	beq	a3,a5,20012294 <_printf_i+0xd6>
200121f4:	00d7ed63          	bltu	a5,a3,2001220e <_printf_i+0x50>
200121f8:	1e068a63          	beqz	a3,200123ec <_printf_i+0x22e>
200121fc:	05800793          	li	a5,88
20012200:	16f68663          	beq	a3,a5,2001236c <_printf_i+0x1ae>
20012204:	04240a93          	addi	s5,s0,66
20012208:	04d40123          	sb	a3,66(s0)
2001220c:	a869                	j	200122a6 <_printf_i+0xe8>
2001220e:	06400793          	li	a5,100
20012212:	00f68663          	beq	a3,a5,2001221e <_printf_i+0x60>
20012216:	06900793          	li	a5,105
2001221a:	fef695e3          	bne	a3,a5,20012204 <_printf_i+0x46>
2001221e:	401c                	lw	a5,0(s0)
20012220:	4308                	lw	a0,0(a4)
20012222:	0807f693          	andi	a3,a5,128
20012226:	00450593          	addi	a1,a0,4
2001222a:	c2c1                	beqz	a3,200122aa <_printf_i+0xec>
2001222c:	411c                	lw	a5,0(a0)
2001222e:	c30c                	sw	a1,0(a4)
20012230:	0007d863          	bgez	a5,20012240 <_printf_i+0x82>
20012234:	02d00713          	li	a4,45
20012238:	40f007b3          	neg	a5,a5
2001223c:	04e401a3          	sb	a4,67(s0)
20012240:	ffffe697          	auipc	a3,0xffffe
20012244:	26868693          	addi	a3,a3,616 # 200104a8 <__sf_fake_stdout+0x34>
20012248:	4729                	li	a4,10
2001224a:	a065                	j	200122f2 <_printf_i+0x134>
2001224c:	07300793          	li	a5,115
20012250:	1af68263          	beq	a3,a5,200123f4 <_printf_i+0x236>
20012254:	00d7ef63          	bltu	a5,a3,20012272 <_printf_i+0xb4>
20012258:	06f00793          	li	a5,111
2001225c:	04f68f63          	beq	a3,a5,200122ba <_printf_i+0xfc>
20012260:	07000793          	li	a5,112
20012264:	faf690e3          	bne	a3,a5,20012204 <_printf_i+0x46>
20012268:	419c                	lw	a5,0(a1)
2001226a:	0207e793          	ori	a5,a5,32
2001226e:	c19c                	sw	a5,0(a1)
20012270:	a809                	j	20012282 <_printf_i+0xc4>
20012272:	07500793          	li	a5,117
20012276:	04f68263          	beq	a3,a5,200122ba <_printf_i+0xfc>
2001227a:	07800793          	li	a5,120
2001227e:	f8f693e3          	bne	a3,a5,20012204 <_printf_i+0x46>
20012282:	07800793          	li	a5,120
20012286:	04f402a3          	sb	a5,69(s0)
2001228a:	ffffe697          	auipc	a3,0xffffe
2001228e:	23268693          	addi	a3,a3,562 # 200104bc <__sf_fake_stdout+0x48>
20012292:	a0dd                	j	20012378 <_printf_i+0x1ba>
20012294:	431c                	lw	a5,0(a4)
20012296:	04258a93          	addi	s5,a1,66
2001229a:	00478693          	addi	a3,a5,4
2001229e:	439c                	lw	a5,0(a5)
200122a0:	c314                	sw	a3,0(a4)
200122a2:	04f58123          	sb	a5,66(a1)
200122a6:	4785                	li	a5,1
200122a8:	a2ad                	j	20012412 <_printf_i+0x254>
200122aa:	0407f693          	andi	a3,a5,64
200122ae:	411c                	lw	a5,0(a0)
200122b0:	c30c                	sw	a1,0(a4)
200122b2:	debd                	beqz	a3,20012230 <_printf_i+0x72>
200122b4:	07c2                	slli	a5,a5,0x10
200122b6:	87c1                	srai	a5,a5,0x10
200122b8:	bfa5                	j	20012230 <_printf_i+0x72>
200122ba:	400c                	lw	a1,0(s0)
200122bc:	431c                	lw	a5,0(a4)
200122be:	0805f813          	andi	a6,a1,128
200122c2:	00478513          	addi	a0,a5,4
200122c6:	00080563          	beqz	a6,200122d0 <_printf_i+0x112>
200122ca:	c308                	sw	a0,0(a4)
200122cc:	439c                	lw	a5,0(a5)
200122ce:	a039                	j	200122dc <_printf_i+0x11e>
200122d0:	0405f593          	andi	a1,a1,64
200122d4:	c308                	sw	a0,0(a4)
200122d6:	d9fd                	beqz	a1,200122cc <_printf_i+0x10e>
200122d8:	0007d783          	lhu	a5,0(a5)
200122dc:	06f00713          	li	a4,111
200122e0:	0ce68a63          	beq	a3,a4,200123b4 <_printf_i+0x1f6>
200122e4:	ffffe697          	auipc	a3,0xffffe
200122e8:	1c468693          	addi	a3,a3,452 # 200104a8 <__sf_fake_stdout+0x34>
200122ec:	4729                	li	a4,10
200122ee:	040401a3          	sb	zero,67(s0)
200122f2:	404c                	lw	a1,4(s0)
200122f4:	c40c                	sw	a1,8(s0)
200122f6:	0005c563          	bltz	a1,20012300 <_printf_i+0x142>
200122fa:	4008                	lw	a0,0(s0)
200122fc:	996d                	andi	a0,a0,-5
200122fe:	c008                	sw	a0,0(s0)
20012300:	e399                	bnez	a5,20012306 <_printf_i+0x148>
20012302:	8ab2                	mv	s5,a2
20012304:	cd91                	beqz	a1,20012320 <_printf_i+0x162>
20012306:	8ab2                	mv	s5,a2
20012308:	02e7f5b3          	remu	a1,a5,a4
2001230c:	1afd                	addi	s5,s5,-1
2001230e:	95b6                	add	a1,a1,a3
20012310:	0005c583          	lbu	a1,0(a1)
20012314:	00ba8023          	sb	a1,0(s5)
20012318:	02e7d5b3          	divu	a1,a5,a4
2001231c:	0ae7f263          	bgeu	a5,a4,200123c0 <_printf_i+0x202>
20012320:	47a1                	li	a5,8
20012322:	00f71e63          	bne	a4,a5,2001233e <_printf_i+0x180>
20012326:	401c                	lw	a5,0(s0)
20012328:	8b85                	andi	a5,a5,1
2001232a:	cb91                	beqz	a5,2001233e <_printf_i+0x180>
2001232c:	4058                	lw	a4,4(s0)
2001232e:	481c                	lw	a5,16(s0)
20012330:	00e7c763          	blt	a5,a4,2001233e <_printf_i+0x180>
20012334:	03000793          	li	a5,48
20012338:	fefa8fa3          	sb	a5,-1(s5)
2001233c:	1afd                	addi	s5,s5,-1
2001233e:	41560633          	sub	a2,a2,s5
20012342:	c810                	sw	a2,16(s0)
20012344:	874e                	mv	a4,s3
20012346:	86ca                	mv	a3,s2
20012348:	0070                	addi	a2,sp,12
2001234a:	85a2                	mv	a1,s0
2001234c:	8526                	mv	a0,s1
2001234e:	3395                	jal	200120b2 <_printf_common>
20012350:	5a7d                	li	s4,-1
20012352:	0d451463          	bne	a0,s4,2001241a <_printf_i+0x25c>
20012356:	557d                	li	a0,-1
20012358:	50b2                	lw	ra,44(sp)
2001235a:	5422                	lw	s0,40(sp)
2001235c:	5492                	lw	s1,36(sp)
2001235e:	5902                	lw	s2,32(sp)
20012360:	49f2                	lw	s3,28(sp)
20012362:	4a62                	lw	s4,24(sp)
20012364:	4ad2                	lw	s5,20(sp)
20012366:	4b42                	lw	s6,16(sp)
20012368:	6145                	addi	sp,sp,48
2001236a:	8082                	ret
2001236c:	04d582a3          	sb	a3,69(a1)
20012370:	ffffe697          	auipc	a3,0xffffe
20012374:	13868693          	addi	a3,a3,312 # 200104a8 <__sf_fake_stdout+0x34>
20012378:	400c                	lw	a1,0(s0)
2001237a:	4308                	lw	a0,0(a4)
2001237c:	0805f813          	andi	a6,a1,128
20012380:	411c                	lw	a5,0(a0)
20012382:	0511                	addi	a0,a0,4
20012384:	02080063          	beqz	a6,200123a4 <_printf_i+0x1e6>
20012388:	c308                	sw	a0,0(a4)
2001238a:	0015f713          	andi	a4,a1,1
2001238e:	c701                	beqz	a4,20012396 <_printf_i+0x1d8>
20012390:	0205e593          	ori	a1,a1,32
20012394:	c00c                	sw	a1,0(s0)
20012396:	4741                	li	a4,16
20012398:	fbb9                	bnez	a5,200122ee <_printf_i+0x130>
2001239a:	400c                	lw	a1,0(s0)
2001239c:	fdf5f593          	andi	a1,a1,-33
200123a0:	c00c                	sw	a1,0(s0)
200123a2:	b7b1                	j	200122ee <_printf_i+0x130>
200123a4:	0405f813          	andi	a6,a1,64
200123a8:	c308                	sw	a0,0(a4)
200123aa:	fe0800e3          	beqz	a6,2001238a <_printf_i+0x1cc>
200123ae:	07c2                	slli	a5,a5,0x10
200123b0:	83c1                	srli	a5,a5,0x10
200123b2:	bfe1                	j	2001238a <_printf_i+0x1cc>
200123b4:	ffffe697          	auipc	a3,0xffffe
200123b8:	0f468693          	addi	a3,a3,244 # 200104a8 <__sf_fake_stdout+0x34>
200123bc:	4721                	li	a4,8
200123be:	bf05                	j	200122ee <_printf_i+0x130>
200123c0:	87ae                	mv	a5,a1
200123c2:	b799                	j	20012308 <_printf_i+0x14a>
200123c4:	4194                	lw	a3,0(a1)
200123c6:	431c                	lw	a5,0(a4)
200123c8:	49cc                	lw	a1,20(a1)
200123ca:	0806f813          	andi	a6,a3,128
200123ce:	00478513          	addi	a0,a5,4
200123d2:	00080663          	beqz	a6,200123de <_printf_i+0x220>
200123d6:	c308                	sw	a0,0(a4)
200123d8:	439c                	lw	a5,0(a5)
200123da:	c38c                	sw	a1,0(a5)
200123dc:	a801                	j	200123ec <_printf_i+0x22e>
200123de:	c308                	sw	a0,0(a4)
200123e0:	0406f693          	andi	a3,a3,64
200123e4:	439c                	lw	a5,0(a5)
200123e6:	daf5                	beqz	a3,200123da <_printf_i+0x21c>
200123e8:	00b79023          	sh	a1,0(a5)
200123ec:	00042823          	sw	zero,16(s0)
200123f0:	8ab2                	mv	s5,a2
200123f2:	bf89                	j	20012344 <_printf_i+0x186>
200123f4:	431c                	lw	a5,0(a4)
200123f6:	41d0                	lw	a2,4(a1)
200123f8:	4581                	li	a1,0
200123fa:	00478693          	addi	a3,a5,4
200123fe:	c314                	sw	a3,0(a4)
20012400:	0007aa83          	lw	s5,0(a5)
20012404:	8556                	mv	a0,s5
20012406:	3179                	jal	20012094 <memchr>
20012408:	c501                	beqz	a0,20012410 <_printf_i+0x252>
2001240a:	41550533          	sub	a0,a0,s5
2001240e:	c048                	sw	a0,4(s0)
20012410:	405c                	lw	a5,4(s0)
20012412:	c81c                	sw	a5,16(s0)
20012414:	040401a3          	sb	zero,67(s0)
20012418:	b735                	j	20012344 <_printf_i+0x186>
2001241a:	4814                	lw	a3,16(s0)
2001241c:	8656                	mv	a2,s5
2001241e:	85ca                	mv	a1,s2
20012420:	8526                	mv	a0,s1
20012422:	9982                	jalr	s3
20012424:	f34509e3          	beq	a0,s4,20012356 <_printf_i+0x198>
20012428:	401c                	lw	a5,0(s0)
2001242a:	8b89                	andi	a5,a5,2
2001242c:	e78d                	bnez	a5,20012456 <_printf_i+0x298>
2001242e:	47b2                	lw	a5,12(sp)
20012430:	4448                	lw	a0,12(s0)
20012432:	f2f553e3          	bge	a0,a5,20012358 <_printf_i+0x19a>
20012436:	853e                	mv	a0,a5
20012438:	b705                	j	20012358 <_printf_i+0x19a>
2001243a:	4685                	li	a3,1
2001243c:	8656                	mv	a2,s5
2001243e:	85ca                	mv	a1,s2
20012440:	8526                	mv	a0,s1
20012442:	9982                	jalr	s3
20012444:	f16509e3          	beq	a0,s6,20012356 <_printf_i+0x198>
20012448:	0a05                	addi	s4,s4,1
2001244a:	445c                	lw	a5,12(s0)
2001244c:	4732                	lw	a4,12(sp)
2001244e:	8f99                	sub	a5,a5,a4
20012450:	fefa45e3          	blt	s4,a5,2001243a <_printf_i+0x27c>
20012454:	bfe9                	j	2001242e <_printf_i+0x270>
20012456:	4a01                	li	s4,0
20012458:	01940a93          	addi	s5,s0,25
2001245c:	5b7d                	li	s6,-1
2001245e:	b7f5                	j	2001244a <_printf_i+0x28c>

20012460 <_read_r>:
_read_r():
20012460:	1141                	addi	sp,sp,-16
20012462:	c422                	sw	s0,8(sp)
20012464:	842a                	mv	s0,a0
20012466:	852e                	mv	a0,a1
20012468:	85b2                	mv	a1,a2
2001246a:	8636                	mv	a2,a3
2001246c:	8e01a823          	sw	zero,-1808(gp) # 80000bb0 <errno>
20012470:	c606                	sw	ra,12(sp)
20012472:	5e8050ef          	jal	ra,20017a5a <_read>
20012476:	57fd                	li	a5,-1
20012478:	00f51763          	bne	a0,a5,20012486 <_read_r+0x26>
2001247c:	8f018793          	addi	a5,gp,-1808 # 80000bb0 <errno>
20012480:	439c                	lw	a5,0(a5)
20012482:	c391                	beqz	a5,20012486 <_read_r+0x26>
20012484:	c01c                	sw	a5,0(s0)
20012486:	40b2                	lw	ra,12(sp)
20012488:	4422                	lw	s0,8(sp)
2001248a:	0141                	addi	sp,sp,16
2001248c:	8082                	ret

2001248e <__metal_driver_sifive_clint0_control_base>:
__metal_driver_sifive_clint0_control_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:233
/* --------------------- fixed_factor_clock ------------ */


/* --------------------- sifive_clint0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_clint0_control_base(struct metal_interrupt *controller)
{
2001248e:	1101                	addi	sp,sp,-32
20012490:	ce22                	sw	s0,28(sp)
20012492:	1000                	addi	s0,sp,32
20012494:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:234
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20012498:	fec42703          	lw	a4,-20(s0)
2001249c:	81018793          	addi	a5,gp,-2032 # 80000ad0 <__metal_dt_clint_2000000>
200124a0:	00f71563          	bne	a4,a5,200124aa <__metal_driver_sifive_clint0_control_base+0x1c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:235
		return METAL_RISCV_CLINT0_2000000_BASE_ADDRESS;
200124a4:	020007b7          	lui	a5,0x2000
200124a8:	a011                	j	200124ac <__metal_driver_sifive_clint0_control_base+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:238
	}
	else {
		return 0;
200124aa:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:240
	}
}
200124ac:	853e                	mv	a0,a5
200124ae:	4472                	lw	s0,28(sp)
200124b0:	6105                	addi	sp,sp,32
200124b2:	8082                	ret

200124b4 <__metal_driver_sifive_clint0_num_interrupts>:
__metal_driver_sifive_clint0_num_interrupts():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:253
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_clint0_num_interrupts(struct metal_interrupt *controller)
{
200124b4:	1101                	addi	sp,sp,-32
200124b6:	ce22                	sw	s0,28(sp)
200124b8:	1000                	addi	s0,sp,32
200124ba:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:254
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
200124be:	fec42703          	lw	a4,-20(s0)
200124c2:	81018793          	addi	a5,gp,-2032 # 80000ad0 <__metal_dt_clint_2000000>
200124c6:	00f71463          	bne	a4,a5,200124ce <__metal_driver_sifive_clint0_num_interrupts+0x1a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:255
		return METAL_MAX_CLINT_INTERRUPTS;
200124ca:	4789                	li	a5,2
200124cc:	a011                	j	200124d0 <__metal_driver_sifive_clint0_num_interrupts+0x1c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:258
	}
	else {
		return 0;
200124ce:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:260
	}
}
200124d0:	853e                	mv	a0,a5
200124d2:	4472                	lw	s0,28(sp)
200124d4:	6105                	addi	sp,sp,32
200124d6:	8082                	ret

200124d8 <__metal_driver_sifive_clint0_interrupt_parents>:
__metal_driver_sifive_clint0_interrupt_parents():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:263

static __inline__ struct metal_interrupt * __metal_driver_sifive_clint0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
200124d8:	1101                	addi	sp,sp,-32
200124da:	ce22                	sw	s0,28(sp)
200124dc:	1000                	addi	s0,sp,32
200124de:	fea42623          	sw	a0,-20(s0)
200124e2:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:264
	if (idx == 0) {
200124e6:	fe842783          	lw	a5,-24(s0)
200124ea:	e791                	bnez	a5,200124f6 <__metal_driver_sifive_clint0_interrupt_parents+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:265
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
200124ec:	800007b7          	lui	a5,0x80000
200124f0:	09078793          	addi	a5,a5,144 # 80000090 <metal_segment_heap_target_end+0xffffe8d0>
200124f4:	a821                	j	2001250c <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:267
	}
	else if (idx == 1) {
200124f6:	fe842703          	lw	a4,-24(s0)
200124fa:	4785                	li	a5,1
200124fc:	00f71763          	bne	a4,a5,2001250a <__metal_driver_sifive_clint0_interrupt_parents+0x32>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:268
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20012500:	800007b7          	lui	a5,0x80000
20012504:	09078793          	addi	a5,a5,144 # 80000090 <metal_segment_heap_target_end+0xffffe8d0>
20012508:	a011                	j	2001250c <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:271
	}
	else {
		return NULL;
2001250a:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:273
	}
}
2001250c:	853e                	mv	a0,a5
2001250e:	4472                	lw	s0,28(sp)
20012510:	6105                	addi	sp,sp,32
20012512:	8082                	ret

20012514 <__metal_driver_sifive_clint0_interrupt_lines>:
__metal_driver_sifive_clint0_interrupt_lines():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:276

static __inline__ int __metal_driver_sifive_clint0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
20012514:	1101                	addi	sp,sp,-32
20012516:	ce22                	sw	s0,28(sp)
20012518:	1000                	addi	s0,sp,32
2001251a:	fea42623          	sw	a0,-20(s0)
2001251e:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:277
	if (idx == 0) {
20012522:	fe842783          	lw	a5,-24(s0)
20012526:	e399                	bnez	a5,2001252c <__metal_driver_sifive_clint0_interrupt_lines+0x18>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:278
		return 3;
20012528:	478d                	li	a5,3
2001252a:	a809                	j	2001253c <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:280
	}
	else if (idx == 1) {
2001252c:	fe842703          	lw	a4,-24(s0)
20012530:	4785                	li	a5,1
20012532:	00f71463          	bne	a4,a5,2001253a <__metal_driver_sifive_clint0_interrupt_lines+0x26>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:281
		return 7;
20012536:	479d                	li	a5,7
20012538:	a011                	j	2001253c <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:284
	}
	else {
		return 0;
2001253a:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:286
	}
}
2001253c:	853e                	mv	a0,a5
2001253e:	4472                	lw	s0,28(sp)
20012540:	6105                	addi	sp,sp,32
20012542:	8082                	ret

20012544 <__metal_clint0_mtime_get>:
__metal_clint0_mtime_get():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:14
#include <metal/drivers/riscv_clint0.h>
#include <metal/io.h>
#include <metal/machine.h>

unsigned long long
__metal_clint0_mtime_get(struct __metal_driver_riscv_clint0 *clint) {
20012544:	715d                	addi	sp,sp,-80
20012546:	c686                	sw	ra,76(sp)
20012548:	c4a2                	sw	s0,72(sp)
2001254a:	c2ca                	sw	s2,68(sp)
2001254c:	c0ce                	sw	s3,64(sp)
2001254e:	de52                	sw	s4,60(sp)
20012550:	dc56                	sw	s5,56(sp)
20012552:	da5a                	sw	s6,52(sp)
20012554:	d85e                	sw	s7,48(sp)
20012556:	d662                	sw	s8,44(sp)
20012558:	d466                	sw	s9,40(sp)
2001255a:	0880                	addi	s0,sp,80
2001255c:	faa42e23          	sw	a0,-68(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:17
    __metal_io_u32 lo, hi;
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
20012560:	fbc42783          	lw	a5,-68(s0)
20012564:	853e                	mv	a0,a5
20012566:	3725                	jal	2001248e <__metal_driver_sifive_clint0_control_base>
20012568:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:21 (discriminator 1)

    /* Guard against rollover when reading */
    do {
        hi = __METAL_ACCESS_ONCE(
2001256c:	fcc42703          	lw	a4,-52(s0)
20012570:	67b1                	lui	a5,0xc
20012572:	17f1                	addi	a5,a5,-4
20012574:	97ba                	add	a5,a5,a4
20012576:	439c                	lw	a5,0(a5)
20012578:	fcf42423          	sw	a5,-56(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:23 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4));
        lo = __METAL_ACCESS_ONCE(
2001257c:	fcc42703          	lw	a4,-52(s0)
20012580:	67b1                	lui	a5,0xc
20012582:	17e1                	addi	a5,a5,-8
20012584:	97ba                	add	a5,a5,a4
20012586:	439c                	lw	a5,0(a5)
20012588:	fcf42223          	sw	a5,-60(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:25 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME));
    } while (__METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
2001258c:	fcc42703          	lw	a4,-52(s0)
20012590:	67b1                	lui	a5,0xc
20012592:	17f1                	addi	a5,a5,-4
20012594:	97ba                	add	a5,a5,a4
20012596:	439c                	lw	a5,0(a5)
20012598:	fc842703          	lw	a4,-56(s0)
2001259c:	fcf718e3          	bne	a4,a5,2001256c <__metal_clint0_mtime_get+0x28>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:29
                                                    METAL_RISCV_CLINT0_MTIME +
                                                    4)) != hi);

    return (((unsigned long long)hi) << 32) | lo;
200125a0:	fc842783          	lw	a5,-56(s0)
200125a4:	8c3e                	mv	s8,a5
200125a6:	4c81                	li	s9,0
200125a8:	000c1993          	slli	s3,s8,0x0
200125ac:	4901                	li	s2,0
200125ae:	fc442783          	lw	a5,-60(s0)
200125b2:	8a3e                	mv	s4,a5
200125b4:	4a81                	li	s5,0
200125b6:	01496b33          	or	s6,s2,s4
200125ba:	0159ebb3          	or	s7,s3,s5
200125be:	87da                	mv	a5,s6
200125c0:	885e                	mv	a6,s7
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:30
}
200125c2:	853e                	mv	a0,a5
200125c4:	85c2                	mv	a1,a6
200125c6:	40b6                	lw	ra,76(sp)
200125c8:	4426                	lw	s0,72(sp)
200125ca:	4916                	lw	s2,68(sp)
200125cc:	4986                	lw	s3,64(sp)
200125ce:	5a72                	lw	s4,60(sp)
200125d0:	5ae2                	lw	s5,56(sp)
200125d2:	5b52                	lw	s6,52(sp)
200125d4:	5bc2                	lw	s7,48(sp)
200125d6:	5c32                	lw	s8,44(sp)
200125d8:	5ca2                	lw	s9,40(sp)
200125da:	6161                	addi	sp,sp,80
200125dc:	8082                	ret

200125de <__metal_driver_riscv_clint0_mtimecmp_set>:
__metal_driver_riscv_clint0_mtimecmp_set():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:34

int __metal_driver_riscv_clint0_mtimecmp_set(struct metal_interrupt *controller,
                                             int hartid,
                                             unsigned long long time) {
200125de:	7179                	addi	sp,sp,-48
200125e0:	d606                	sw	ra,44(sp)
200125e2:	d422                	sw	s0,40(sp)
200125e4:	d24a                	sw	s2,36(sp)
200125e6:	d04e                	sw	s3,32(sp)
200125e8:	1800                	addi	s0,sp,48
200125ea:	fca42e23          	sw	a0,-36(s0)
200125ee:	fcb42c23          	sw	a1,-40(s0)
200125f2:	fcc42823          	sw	a2,-48(s0)
200125f6:	fcd42a23          	sw	a3,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:35
    struct __metal_driver_riscv_clint0 *clint =
200125fa:	fdc42783          	lw	a5,-36(s0)
200125fe:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:38
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
20012602:	fec42783          	lw	a5,-20(s0)
20012606:	853e                	mv	a0,a5
20012608:	3559                	jal	2001248e <__metal_driver_sifive_clint0_control_base>
2001260a:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:45
     * and are NOT internally latched for multiword transfers.
     * Need to be careful about sequencing to avoid triggering
     * spurious interrupts: For that set the high word to a max
     * value first.
     */
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
2001260e:	fd842783          	lw	a5,-40(s0)
20012612:	078e                	slli	a5,a5,0x3
20012614:	873e                	mv	a4,a5
20012616:	fe842783          	lw	a5,-24(s0)
2001261a:	973e                	add	a4,a4,a5
2001261c:	6791                	lui	a5,0x4
2001261e:	0791                	addi	a5,a5,4
20012620:	97ba                	add	a5,a5,a4
20012622:	873e                	mv	a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:47
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = 0xFFFFFFFF;
20012624:	57fd                	li	a5,-1
20012626:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:48
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
20012628:	fd842783          	lw	a5,-40(s0)
2001262c:	078e                	slli	a5,a5,0x3
2001262e:	873e                	mv	a4,a5
20012630:	fe842783          	lw	a5,-24(s0)
20012634:	973e                	add	a4,a4,a5
20012636:	6791                	lui	a5,0x4
20012638:	97ba                	add	a5,a5,a4
2001263a:	873e                	mv	a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:50
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
        (__metal_io_u32)time;
2001263c:	fd042783          	lw	a5,-48(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:49
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
20012640:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:53
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = (__metal_io_u32)(time >> 32);
20012642:	fd442783          	lw	a5,-44(s0)
20012646:	0007d913          	srli	s2,a5,0x0
2001264a:	4981                	li	s3,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:51
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
2001264c:	fd842783          	lw	a5,-40(s0)
20012650:	078e                	slli	a5,a5,0x3
20012652:	873e                	mv	a4,a5
20012654:	fe842783          	lw	a5,-24(s0)
20012658:	973e                	add	a4,a4,a5
2001265a:	6791                	lui	a5,0x4
2001265c:	0791                	addi	a5,a5,4
2001265e:	97ba                	add	a5,a5,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:53
                                           4)) = (__metal_io_u32)(time >> 32);
20012660:	874a                	mv	a4,s2
20012662:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:54
    return 0;
20012664:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:55
}
20012666:	853e                	mv	a0,a5
20012668:	50b2                	lw	ra,44(sp)
2001266a:	5422                	lw	s0,40(sp)
2001266c:	5912                	lw	s2,36(sp)
2001266e:	5982                	lw	s3,32(sp)
20012670:	6145                	addi	sp,sp,48
20012672:	8082                	ret

20012674 <_get_cpu_intc>:
_get_cpu_intc():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:57

static struct metal_interrupt *_get_cpu_intc() {
20012674:	1101                	addi	sp,sp,-32
20012676:	ce06                	sw	ra,28(sp)
20012678:	cc22                	sw	s0,24(sp)
2001267a:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:58
    int hartid = 0;
2001267c:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:59
    __asm__ volatile("csrr %[hartid], mhartid"
20012680:	f14027f3          	csrr	a5,mhartid
20012684:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:62
                     : [hartid] "=r"(hartid)::"memory");

    struct metal_cpu *cpu = metal_cpu_get(hartid);
20012688:	fec42783          	lw	a5,-20(s0)
2001268c:	853e                	mv	a0,a5
2001268e:	645040ef          	jal	ra,200174d2 <metal_cpu_get>
20012692:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:64

    return metal_cpu_interrupt_controller(cpu);
20012696:	fe842503          	lw	a0,-24(s0)
2001269a:	613040ef          	jal	ra,200174ac <metal_cpu_interrupt_controller>
2001269e:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:65
}
200126a0:	853e                	mv	a0,a5
200126a2:	40f2                	lw	ra,28(sp)
200126a4:	4462                	lw	s0,24(sp)
200126a6:	6105                	addi	sp,sp,32
200126a8:	8082                	ret

200126aa <__metal_driver_riscv_clint0_init>:
__metal_driver_riscv_clint0_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:67

void __metal_driver_riscv_clint0_init(struct metal_interrupt *controller) {
200126aa:	7139                	addi	sp,sp,-64
200126ac:	de06                	sw	ra,60(sp)
200126ae:	dc22                	sw	s0,56(sp)
200126b0:	0080                	addi	s0,sp,64
200126b2:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:69
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
200126b6:	fcc42503          	lw	a0,-52(s0)
200126ba:	3bed                	jal	200124b4 <__metal_driver_sifive_clint0_num_interrupts>
200126bc:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:70
    struct __metal_driver_riscv_clint0 *clint =
200126c0:	fcc42783          	lw	a5,-52(s0)
200126c4:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:73
        (struct __metal_driver_riscv_clint0 *)(controller);

    if (!clint->init_done) {
200126c8:	fe442783          	lw	a5,-28(s0)
200126cc:	43dc                	lw	a5,4(a5)
200126ce:	efa9                	bnez	a5,20012728 <__metal_driver_riscv_clint0_init+0x7e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:76
        /* Register its interrupts with with parent controller, aka sw and
         * timerto its default isr */
        for (int i = 0; i < num_interrupts; i++) {
200126d0:	fe042623          	sw	zero,-20(s0)
200126d4:	a081                	j	20012714 <__metal_driver_riscv_clint0_init+0x6a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:78 (discriminator 3)
            struct metal_interrupt *intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
200126d6:	fec42583          	lw	a1,-20(s0)
200126da:	fcc42503          	lw	a0,-52(s0)
200126de:	3bed                	jal	200124d8 <__metal_driver_sifive_clint0_interrupt_parents>
200126e0:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:80 (discriminator 3)
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
200126e4:	fec42583          	lw	a1,-20(s0)
200126e8:	fcc42503          	lw	a0,-52(s0)
200126ec:	3525                	jal	20012514 <__metal_driver_sifive_clint0_interrupt_lines>
200126ee:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:81 (discriminator 3)
            intc->vtable->interrupt_register(intc, line, NULL, controller);
200126f2:	fe042783          	lw	a5,-32(s0)
200126f6:	439c                	lw	a5,0(a5)
200126f8:	4fdc                	lw	a5,28(a5)
200126fa:	fcc42683          	lw	a3,-52(s0)
200126fe:	4601                	li	a2,0
20012700:	fdc42583          	lw	a1,-36(s0)
20012704:	fe042503          	lw	a0,-32(s0)
20012708:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 3)
        for (int i = 0; i < num_interrupts; i++) {
2001270a:	fec42783          	lw	a5,-20(s0)
2001270e:	0785                	addi	a5,a5,1
20012710:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 1)
20012714:	fec42703          	lw	a4,-20(s0)
20012718:	fe842783          	lw	a5,-24(s0)
2001271c:	faf74de3          	blt	a4,a5,200126d6 <__metal_driver_riscv_clint0_init+0x2c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:83
        }
        clint->init_done = 1;
20012720:	fe442783          	lw	a5,-28(s0)
20012724:	4705                	li	a4,1
20012726:	c3d8                	sw	a4,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:85
    }
}
20012728:	0001                	nop
2001272a:	50f2                	lw	ra,60(sp)
2001272c:	5462                	lw	s0,56(sp)
2001272e:	6121                	addi	sp,sp,64
20012730:	8082                	ret

20012732 <__metal_driver_riscv_clint0_register>:
__metal_driver_riscv_clint0_register():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:89

int __metal_driver_riscv_clint0_register(struct metal_interrupt *controller,
                                         int id, metal_interrupt_handler_t isr,
                                         void *priv) {
20012732:	7139                	addi	sp,sp,-64
20012734:	de06                	sw	ra,60(sp)
20012736:	dc22                	sw	s0,56(sp)
20012738:	0080                	addi	s0,sp,64
2001273a:	fca42623          	sw	a0,-52(s0)
2001273e:	fcb42423          	sw	a1,-56(s0)
20012742:	fcc42223          	sw	a2,-60(s0)
20012746:	fcd42023          	sw	a3,-64(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:90
    int rc = -1;
2001274a:	57fd                	li	a5,-1
2001274c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:91
    metal_vector_mode mode = __metal_controller_interrupt_vector_mode();
20012750:	488010ef          	jal	ra,20013bd8 <__metal_controller_interrupt_vector_mode>
20012754:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:92
    struct metal_interrupt *intc = NULL;
20012758:	fe042423          	sw	zero,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:93
    struct metal_interrupt *cpu_intc = _get_cpu_intc();
2001275c:	3f21                	jal	20012674 <_get_cpu_intc>
2001275e:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:95
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
20012762:	fcc42503          	lw	a0,-52(s0)
20012766:	33b9                	jal	200124b4 <__metal_driver_sifive_clint0_num_interrupts>
20012768:	fca42c23          	sw	a0,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:97

    if ((mode != METAL_VECTOR_MODE) && (mode != METAL_DIRECT_MODE)) {
2001276c:	fe042703          	lw	a4,-32(s0)
20012770:	4785                	li	a5,1
20012772:	00f70863          	beq	a4,a5,20012782 <__metal_driver_riscv_clint0_register+0x50>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:97 (discriminator 1)
20012776:	fe042783          	lw	a5,-32(s0)
2001277a:	c781                	beqz	a5,20012782 <__metal_driver_riscv_clint0_register+0x50>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:98
        return rc;
2001277c:	fec42783          	lw	a5,-20(s0)
20012780:	a049                	j	20012802 <__metal_driver_riscv_clint0_register+0xd0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:101
    }

    for (int i = 0; i < num_interrupts; i++) {
20012782:	fe042223          	sw	zero,-28(s0)
20012786:	a091                	j	200127ca <__metal_driver_riscv_clint0_register+0x98>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:102
        int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20012788:	fe442583          	lw	a1,-28(s0)
2001278c:	fcc42503          	lw	a0,-52(s0)
20012790:	3351                	jal	20012514 <__metal_driver_sifive_clint0_interrupt_lines>
20012792:	fca42a23          	sw	a0,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:103
        intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20012796:	fe442583          	lw	a1,-28(s0)
2001279a:	fcc42503          	lw	a0,-52(s0)
2001279e:	3b2d                	jal	200124d8 <__metal_driver_sifive_clint0_interrupt_parents>
200127a0:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:104
        if (cpu_intc == intc && id == line) {
200127a4:	fdc42703          	lw	a4,-36(s0)
200127a8:	fe842783          	lw	a5,-24(s0)
200127ac:	00f71863          	bne	a4,a5,200127bc <__metal_driver_riscv_clint0_register+0x8a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:104 (discriminator 1)
200127b0:	fc842703          	lw	a4,-56(s0)
200127b4:	fd442783          	lw	a5,-44(s0)
200127b8:	02f70063          	beq	a4,a5,200127d8 <__metal_driver_riscv_clint0_register+0xa6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:107 (discriminator 2)
            break;
        }
        intc = NULL;
200127bc:	fe042423          	sw	zero,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 2)
    for (int i = 0; i < num_interrupts; i++) {
200127c0:	fe442783          	lw	a5,-28(s0)
200127c4:	0785                	addi	a5,a5,1
200127c6:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 1)
200127ca:	fe442703          	lw	a4,-28(s0)
200127ce:	fd842783          	lw	a5,-40(s0)
200127d2:	faf74be3          	blt	a4,a5,20012788 <__metal_driver_riscv_clint0_register+0x56>
200127d6:	a011                	j	200127da <__metal_driver_riscv_clint0_register+0xa8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:105
            break;
200127d8:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:111
    }

    /* Register its interrupts with parent controller */
    if (intc) {
200127da:	fe842783          	lw	a5,-24(s0)
200127de:	c385                	beqz	a5,200127fe <__metal_driver_riscv_clint0_register+0xcc>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:112
        rc = intc->vtable->interrupt_register(intc, id, isr, priv);
200127e0:	fe842783          	lw	a5,-24(s0)
200127e4:	439c                	lw	a5,0(a5)
200127e6:	4fdc                	lw	a5,28(a5)
200127e8:	fc042683          	lw	a3,-64(s0)
200127ec:	fc442603          	lw	a2,-60(s0)
200127f0:	fc842583          	lw	a1,-56(s0)
200127f4:	fe842503          	lw	a0,-24(s0)
200127f8:	9782                	jalr	a5
200127fa:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:114
    }
    return rc;
200127fe:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:115
}
20012802:	853e                	mv	a0,a5
20012804:	50f2                	lw	ra,60(sp)
20012806:	5462                	lw	s0,56(sp)
20012808:	6121                	addi	sp,sp,64
2001280a:	8082                	ret

2001280c <__metal_driver_riscv_clint0_vector_register>:
__metal_driver_riscv_clint0_vector_register():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:119

int __metal_driver_riscv_clint0_vector_register(
    struct metal_interrupt *controller, int id,
    metal_interrupt_vector_handler_t isr, void *priv) {
2001280c:	7179                	addi	sp,sp,-48
2001280e:	d622                	sw	s0,44(sp)
20012810:	1800                	addi	s0,sp,48
20012812:	fca42e23          	sw	a0,-36(s0)
20012816:	fcb42c23          	sw	a1,-40(s0)
2001281a:	fcc42a23          	sw	a2,-44(s0)
2001281e:	fcd42823          	sw	a3,-48(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:121
    /* Not supported. User can override the 'weak' handler with their own */
    int rc = -1;
20012822:	57fd                	li	a5,-1
20012824:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:122
    return rc;
20012828:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:123
}
2001282c:	853e                	mv	a0,a5
2001282e:	5432                	lw	s0,44(sp)
20012830:	6145                	addi	sp,sp,48
20012832:	8082                	ret

20012834 <__metal_driver_riscv_clint0_get_vector_mode>:
__metal_driver_riscv_clint0_get_vector_mode():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:126

metal_vector_mode __metal_driver_riscv_clint0_get_vector_mode(
    struct metal_interrupt *controller) {
20012834:	1101                	addi	sp,sp,-32
20012836:	ce06                	sw	ra,28(sp)
20012838:	cc22                	sw	s0,24(sp)
2001283a:	1000                	addi	s0,sp,32
2001283c:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:127
    return __metal_controller_interrupt_vector_mode();
20012840:	398010ef          	jal	ra,20013bd8 <__metal_controller_interrupt_vector_mode>
20012844:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:128
}
20012846:	853e                	mv	a0,a5
20012848:	40f2                	lw	ra,28(sp)
2001284a:	4462                	lw	s0,24(sp)
2001284c:	6105                	addi	sp,sp,32
2001284e:	8082                	ret

20012850 <__metal_driver_riscv_clint0_set_vector_mode>:
__metal_driver_riscv_clint0_set_vector_mode():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:131

int __metal_driver_riscv_clint0_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
20012850:	7179                	addi	sp,sp,-48
20012852:	d606                	sw	ra,44(sp)
20012854:	d422                	sw	s0,40(sp)
20012856:	1800                	addi	s0,sp,48
20012858:	fca42e23          	sw	a0,-36(s0)
2001285c:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:132
    int rc = -1;
20012860:	57fd                	li	a5,-1
20012862:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:133
    struct metal_interrupt *intc = _get_cpu_intc();
20012866:	3539                	jal	20012674 <_get_cpu_intc>
20012868:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:135

    if (intc) {
2001286c:	fe842783          	lw	a5,-24(s0)
20012870:	c395                	beqz	a5,20012894 <__metal_driver_riscv_clint0_set_vector_mode+0x44>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:138
        /* Valid vector modes are VECTOR and DIRECT, anything else is invalid
         * (-1) */
        switch (mode) {
20012872:	fd842703          	lw	a4,-40(s0)
20012876:	4785                	li	a5,1
20012878:	02e7e063          	bltu	a5,a4,20012898 <__metal_driver_riscv_clint0_set_vector_mode+0x48>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:141
        case METAL_VECTOR_MODE:
        case METAL_DIRECT_MODE:
            rc = intc->vtable->interrupt_set_vector_mode(intc, mode);
2001287c:	fe842783          	lw	a5,-24(s0)
20012880:	439c                	lw	a5,0(a5)
20012882:	43dc                	lw	a5,4(a5)
20012884:	fd842583          	lw	a1,-40(s0)
20012888:	fe842503          	lw	a0,-24(s0)
2001288c:	9782                	jalr	a5
2001288e:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:142
            break;
20012892:	a021                	j	2001289a <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:146
        default:
            break;
        }
    }
20012894:	0001                	nop
20012896:	a011                	j	2001289a <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:144
            break;
20012898:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:147
    return rc;
2001289a:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:148
}
2001289e:	853e                	mv	a0,a5
200128a0:	50b2                	lw	ra,44(sp)
200128a2:	5422                	lw	s0,40(sp)
200128a4:	6145                	addi	sp,sp,48
200128a6:	8082                	ret

200128a8 <__metal_driver_riscv_clint0_enable>:
__metal_driver_riscv_clint0_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:151

int __metal_driver_riscv_clint0_enable(struct metal_interrupt *controller,
                                       int id) {
200128a8:	7139                	addi	sp,sp,-64
200128aa:	de06                	sw	ra,60(sp)
200128ac:	dc22                	sw	s0,56(sp)
200128ae:	0080                	addi	s0,sp,64
200128b0:	fca42623          	sw	a0,-52(s0)
200128b4:	fcb42423          	sw	a1,-56(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:152
    int rc = -1;
200128b8:	57fd                	li	a5,-1
200128ba:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:154

    if (id) {
200128be:	fc842783          	lw	a5,-56(s0)
200128c2:	c7c9                	beqz	a5,2001294c <__metal_driver_riscv_clint0_enable+0xa4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:155
        struct metal_interrupt *intc = NULL;
200128c4:	fe042423          	sw	zero,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:156
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
200128c8:	3375                	jal	20012674 <_get_cpu_intc>
200128ca:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:158
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
200128ce:	fcc42503          	lw	a0,-52(s0)
200128d2:	36cd                	jal	200124b4 <__metal_driver_sifive_clint0_num_interrupts>
200128d4:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:160

        for (int i = 0; i < num_interrupts; i++) {
200128d8:	fe042223          	sw	zero,-28(s0)
200128dc:	a091                	j	20012920 <__metal_driver_riscv_clint0_enable+0x78>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:162
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
200128de:	fe442583          	lw	a1,-28(s0)
200128e2:	fcc42503          	lw	a0,-52(s0)
200128e6:	313d                	jal	20012514 <__metal_driver_sifive_clint0_interrupt_lines>
200128e8:	fca42c23          	sw	a0,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:164
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
200128ec:	fe442583          	lw	a1,-28(s0)
200128f0:	fcc42503          	lw	a0,-52(s0)
200128f4:	36d5                	jal	200124d8 <__metal_driver_sifive_clint0_interrupt_parents>
200128f6:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:165
            if (cpu_intc == intc && id == line) {
200128fa:	fe042703          	lw	a4,-32(s0)
200128fe:	fe842783          	lw	a5,-24(s0)
20012902:	00f71863          	bne	a4,a5,20012912 <__metal_driver_riscv_clint0_enable+0x6a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:165 (discriminator 1)
20012906:	fc842703          	lw	a4,-56(s0)
2001290a:	fd842783          	lw	a5,-40(s0)
2001290e:	02f70063          	beq	a4,a5,2001292e <__metal_driver_riscv_clint0_enable+0x86>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:168 (discriminator 2)
                break;
            }
            intc = NULL;
20012912:	fe042423          	sw	zero,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
20012916:	fe442783          	lw	a5,-28(s0)
2001291a:	0785                	addi	a5,a5,1
2001291c:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 1)
20012920:	fe442703          	lw	a4,-28(s0)
20012924:	fdc42783          	lw	a5,-36(s0)
20012928:	faf74be3          	blt	a4,a5,200128de <__metal_driver_riscv_clint0_enable+0x36>
2001292c:	a011                	j	20012930 <__metal_driver_riscv_clint0_enable+0x88>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:166
                break;
2001292e:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:172
        }

        /* Enable its interrupts with parent controller */
        if (intc) {
20012930:	fe842783          	lw	a5,-24(s0)
20012934:	cf81                	beqz	a5,2001294c <__metal_driver_riscv_clint0_enable+0xa4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:173
            rc = intc->vtable->interrupt_enable(intc, id);
20012936:	fe842783          	lw	a5,-24(s0)
2001293a:	439c                	lw	a5,0(a5)
2001293c:	53dc                	lw	a5,36(a5)
2001293e:	fc842583          	lw	a1,-56(s0)
20012942:	fe842503          	lw	a0,-24(s0)
20012946:	9782                	jalr	a5
20012948:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:177
        }
    }

    return rc;
2001294c:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:178
}
20012950:	853e                	mv	a0,a5
20012952:	50f2                	lw	ra,60(sp)
20012954:	5462                	lw	s0,56(sp)
20012956:	6121                	addi	sp,sp,64
20012958:	8082                	ret

2001295a <__metal_driver_riscv_clint0_disable>:
__metal_driver_riscv_clint0_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:181

int __metal_driver_riscv_clint0_disable(struct metal_interrupt *controller,
                                        int id) {
2001295a:	7139                	addi	sp,sp,-64
2001295c:	de06                	sw	ra,60(sp)
2001295e:	dc22                	sw	s0,56(sp)
20012960:	0080                	addi	s0,sp,64
20012962:	fca42623          	sw	a0,-52(s0)
20012966:	fcb42423          	sw	a1,-56(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:182
    int rc = -1;
2001296a:	57fd                	li	a5,-1
2001296c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:184

    if (id) {
20012970:	fc842783          	lw	a5,-56(s0)
20012974:	c7c9                	beqz	a5,200129fe <__metal_driver_riscv_clint0_disable+0xa4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:185
        struct metal_interrupt *intc = NULL;
20012976:	fe042423          	sw	zero,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:186
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
2001297a:	39ed                	jal	20012674 <_get_cpu_intc>
2001297c:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:188
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
20012980:	fcc42503          	lw	a0,-52(s0)
20012984:	3e05                	jal	200124b4 <__metal_driver_sifive_clint0_num_interrupts>
20012986:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:190

        for (int i = 0; i < num_interrupts; i++) {
2001298a:	fe042223          	sw	zero,-28(s0)
2001298e:	a091                	j	200129d2 <__metal_driver_riscv_clint0_disable+0x78>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:192
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20012990:	fe442583          	lw	a1,-28(s0)
20012994:	fcc42503          	lw	a0,-52(s0)
20012998:	3eb5                	jal	20012514 <__metal_driver_sifive_clint0_interrupt_lines>
2001299a:	fca42c23          	sw	a0,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:194
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
2001299e:	fe442583          	lw	a1,-28(s0)
200129a2:	fcc42503          	lw	a0,-52(s0)
200129a6:	3e0d                	jal	200124d8 <__metal_driver_sifive_clint0_interrupt_parents>
200129a8:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:195
            if (cpu_intc == intc && id == line) {
200129ac:	fe042703          	lw	a4,-32(s0)
200129b0:	fe842783          	lw	a5,-24(s0)
200129b4:	00f71863          	bne	a4,a5,200129c4 <__metal_driver_riscv_clint0_disable+0x6a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:195 (discriminator 1)
200129b8:	fc842703          	lw	a4,-56(s0)
200129bc:	fd842783          	lw	a5,-40(s0)
200129c0:	02f70063          	beq	a4,a5,200129e0 <__metal_driver_riscv_clint0_disable+0x86>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:198 (discriminator 2)
                break;
            }
            intc = NULL;
200129c4:	fe042423          	sw	zero,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
200129c8:	fe442783          	lw	a5,-28(s0)
200129cc:	0785                	addi	a5,a5,1
200129ce:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 1)
200129d2:	fe442703          	lw	a4,-28(s0)
200129d6:	fdc42783          	lw	a5,-36(s0)
200129da:	faf74be3          	blt	a4,a5,20012990 <__metal_driver_riscv_clint0_disable+0x36>
200129de:	a011                	j	200129e2 <__metal_driver_riscv_clint0_disable+0x88>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:196
                break;
200129e0:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:202
        }

        /* Disable its interrupts with parent controller */
        if (intc) {
200129e2:	fe842783          	lw	a5,-24(s0)
200129e6:	cf81                	beqz	a5,200129fe <__metal_driver_riscv_clint0_disable+0xa4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:203
            rc = intc->vtable->interrupt_disable(intc, id);
200129e8:	fe842783          	lw	a5,-24(s0)
200129ec:	439c                	lw	a5,0(a5)
200129ee:	579c                	lw	a5,40(a5)
200129f0:	fc842583          	lw	a1,-56(s0)
200129f4:	fe842503          	lw	a0,-24(s0)
200129f8:	9782                	jalr	a5
200129fa:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:207
        }
    }

    return rc;
200129fe:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:208
}
20012a02:	853e                	mv	a0,a5
20012a04:	50f2                	lw	ra,60(sp)
20012a06:	5462                	lw	s0,56(sp)
20012a08:	6121                	addi	sp,sp,64
20012a0a:	8082                	ret

20012a0c <__metal_driver_riscv_clint0_command_request>:
__metal_driver_riscv_clint0_command_request():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:211

int __metal_driver_riscv_clint0_command_request(
    struct metal_interrupt *controller, int command, void *data) {
20012a0c:	7179                	addi	sp,sp,-48
20012a0e:	d606                	sw	ra,44(sp)
20012a10:	d422                	sw	s0,40(sp)
20012a12:	1800                	addi	s0,sp,48
20012a14:	fca42e23          	sw	a0,-36(s0)
20012a18:	fcb42c23          	sw	a1,-40(s0)
20012a1c:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:213
    int hartid;
    int rc = -1;
20012a20:	57fd                	li	a5,-1
20012a22:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:214
    struct __metal_driver_riscv_clint0 *clint =
20012a26:	fdc42783          	lw	a5,-36(s0)
20012a2a:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:217
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(controller);
20012a2e:	fdc42503          	lw	a0,-36(s0)
20012a32:	3cb1                	jal	2001248e <__metal_driver_sifive_clint0_control_base>
20012a34:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:219

    switch (command) {
20012a38:	fd842703          	lw	a4,-40(s0)
20012a3c:	4789                	li	a5,2
20012a3e:	04f70863          	beq	a4,a5,20012a8e <__metal_driver_riscv_clint0_command_request+0x82>
20012a42:	fd842703          	lw	a4,-40(s0)
20012a46:	4789                	li	a5,2
20012a48:	00e7c863          	blt	a5,a4,20012a58 <__metal_driver_riscv_clint0_command_request+0x4c>
20012a4c:	fd842703          	lw	a4,-40(s0)
20012a50:	4785                	li	a5,1
20012a52:	00f70e63          	beq	a4,a5,20012a6e <__metal_driver_riscv_clint0_command_request+0x62>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:263
            rc = __METAL_ACCESS_ONCE(
                (__metal_io_u32 *)(control_base + (hartid * 4)));
        }
        break;
    default:
        break;
20012a56:	a8e9                	j	20012b30 <__metal_driver_riscv_clint0_command_request+0x124>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:219
    switch (command) {
20012a58:	fd842703          	lw	a4,-40(s0)
20012a5c:	478d                	li	a5,3
20012a5e:	04f70c63          	beq	a4,a5,20012ab6 <__metal_driver_riscv_clint0_command_request+0xaa>
20012a62:	fd842703          	lw	a4,-40(s0)
20012a66:	4791                	li	a5,4
20012a68:	08f70863          	beq	a4,a5,20012af8 <__metal_driver_riscv_clint0_command_request+0xec>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:263
        break;
20012a6c:	a0d1                	j	20012b30 <__metal_driver_riscv_clint0_command_request+0x124>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:221
        if (data) {
20012a6e:	fd442783          	lw	a5,-44(s0)
20012a72:	cbc5                	beqz	a5,20012b22 <__metal_driver_riscv_clint0_command_request+0x116>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:222
            *(unsigned long long *)data = __metal_clint0_mtime_get(clint);
20012a74:	fe842503          	lw	a0,-24(s0)
20012a78:	34f1                	jal	20012544 <__metal_clint0_mtime_get>
20012a7a:	87aa                	mv	a5,a0
20012a7c:	882e                	mv	a6,a1
20012a7e:	fd442703          	lw	a4,-44(s0)
20012a82:	c31c                	sw	a5,0(a4)
20012a84:	01072223          	sw	a6,4(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:223
            rc = 0;
20012a88:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
20012a8c:	a859                	j	20012b22 <__metal_driver_riscv_clint0_command_request+0x116>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:227
        if (data) {
20012a8e:	fd442783          	lw	a5,-44(s0)
20012a92:	cbd1                	beqz	a5,20012b26 <__metal_driver_riscv_clint0_command_request+0x11a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:228
            hartid = *(int *)data;
20012a94:	fd442783          	lw	a5,-44(s0)
20012a98:	439c                	lw	a5,0(a5)
20012a9a:	fef42023          	sw	a5,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:229
            __METAL_ACCESS_ONCE((
20012a9e:	fe042783          	lw	a5,-32(s0)
20012aa2:	078a                	slli	a5,a5,0x2
20012aa4:	873e                	mv	a4,a5
20012aa6:	fe442783          	lw	a5,-28(s0)
20012aaa:	97ba                	add	a5,a5,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:230
                __metal_io_u32 *)(control_base + (hartid * 4))) = METAL_DISABLE;
20012aac:	0007a023          	sw	zero,0(a5) # 4000 <__heap_size+0x3800>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:231
            rc = 0;
20012ab0:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
20012ab4:	a88d                	j	20012b26 <__metal_driver_riscv_clint0_command_request+0x11a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:235
        if (data) {
20012ab6:	fd442783          	lw	a5,-44(s0)
20012aba:	cba5                	beqz	a5,20012b2a <__metal_driver_riscv_clint0_command_request+0x11e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:236
            hartid = *(int *)data;
20012abc:	fd442783          	lw	a5,-44(s0)
20012ac0:	439c                	lw	a5,0(a5)
20012ac2:	fef42023          	sw	a5,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:237
            __METAL_ACCESS_ONCE(
20012ac6:	fe042783          	lw	a5,-32(s0)
20012aca:	078a                	slli	a5,a5,0x2
20012acc:	873e                	mv	a4,a5
20012ace:	fe442783          	lw	a5,-28(s0)
20012ad2:	97ba                	add	a5,a5,a4
20012ad4:	873e                	mv	a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:238
                (__metal_io_u32 *)(control_base + (hartid * 4))) = METAL_ENABLE;
20012ad6:	4785                	li	a5,1
20012ad8:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:248
            __METAL_IO_FENCE(o, i);
20012ada:	0480000f          	fence	o,i
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:249
            rc = __METAL_ACCESS_ONCE(
20012ade:	fe042783          	lw	a5,-32(s0)
20012ae2:	078a                	slli	a5,a5,0x2
20012ae4:	873e                	mv	a4,a5
20012ae6:	fe442783          	lw	a5,-28(s0)
20012aea:	97ba                	add	a5,a5,a4
20012aec:	439c                	lw	a5,0(a5)
20012aee:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:251
            rc = 0;
20012af2:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
20012af6:	a815                	j	20012b2a <__metal_driver_riscv_clint0_command_request+0x11e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:255
        rc = 0;
20012af8:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:256
        if (data) {
20012afc:	fd442783          	lw	a5,-44(s0)
20012b00:	c79d                	beqz	a5,20012b2e <__metal_driver_riscv_clint0_command_request+0x122>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:257
            hartid = *(int *)data;
20012b02:	fd442783          	lw	a5,-44(s0)
20012b06:	439c                	lw	a5,0(a5)
20012b08:	fef42023          	sw	a5,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:258
            rc = __METAL_ACCESS_ONCE(
20012b0c:	fe042783          	lw	a5,-32(s0)
20012b10:	078a                	slli	a5,a5,0x2
20012b12:	873e                	mv	a4,a5
20012b14:	fe442783          	lw	a5,-28(s0)
20012b18:	97ba                	add	a5,a5,a4
20012b1a:	439c                	lw	a5,0(a5)
20012b1c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
20012b20:	a039                	j	20012b2e <__metal_driver_riscv_clint0_command_request+0x122>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
20012b22:	0001                	nop
20012b24:	a031                	j	20012b30 <__metal_driver_riscv_clint0_command_request+0x124>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
20012b26:	0001                	nop
20012b28:	a021                	j	20012b30 <__metal_driver_riscv_clint0_command_request+0x124>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
20012b2a:	0001                	nop
20012b2c:	a011                	j	20012b30 <__metal_driver_riscv_clint0_command_request+0x124>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
20012b2e:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:266
    }

    return rc;
20012b30:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:267
}
20012b34:	853e                	mv	a0,a5
20012b36:	50b2                	lw	ra,44(sp)
20012b38:	5422                	lw	s0,40(sp)
20012b3a:	6145                	addi	sp,sp,48
20012b3c:	8082                	ret

20012b3e <__metal_driver_riscv_clint0_clear_interrupt>:
__metal_driver_riscv_clint0_clear_interrupt():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:270

int __metal_driver_riscv_clint0_clear_interrupt(
    struct metal_interrupt *controller, int id) {
20012b3e:	7179                	addi	sp,sp,-48
20012b40:	d606                	sw	ra,44(sp)
20012b42:	d422                	sw	s0,40(sp)
20012b44:	1800                	addi	s0,sp,48
20012b46:	fca42e23          	sw	a0,-36(s0)
20012b4a:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:271
    int hartid = metal_cpu_get_current_hartid();
20012b4e:	1b3040ef          	jal	ra,20017500 <metal_cpu_get_current_hartid>
20012b52:	87aa                	mv	a5,a0
20012b54:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:272
    return __metal_driver_riscv_clint0_command_request(
20012b58:	fec40793          	addi	a5,s0,-20
20012b5c:	863e                	mv	a2,a5
20012b5e:	4589                	li	a1,2
20012b60:	fdc42503          	lw	a0,-36(s0)
20012b64:	3565                	jal	20012a0c <__metal_driver_riscv_clint0_command_request>
20012b66:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:274
        controller, METAL_SOFTWARE_IPI_CLEAR, &hartid);
}
20012b68:	853e                	mv	a0,a5
20012b6a:	50b2                	lw	ra,44(sp)
20012b6c:	5422                	lw	s0,40(sp)
20012b6e:	6145                	addi	sp,sp,48
20012b70:	8082                	ret

20012b72 <__metal_driver_riscv_clint0_set_interrupt>:
__metal_driver_riscv_clint0_set_interrupt():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:277

int __metal_driver_riscv_clint0_set_interrupt(
    struct metal_interrupt *controller, int id) {
20012b72:	7179                	addi	sp,sp,-48
20012b74:	d606                	sw	ra,44(sp)
20012b76:	d422                	sw	s0,40(sp)
20012b78:	1800                	addi	s0,sp,48
20012b7a:	fca42e23          	sw	a0,-36(s0)
20012b7e:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:278
    int hartid = metal_cpu_get_current_hartid();
20012b82:	17f040ef          	jal	ra,20017500 <metal_cpu_get_current_hartid>
20012b86:	87aa                	mv	a5,a0
20012b88:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:279
    return __metal_driver_riscv_clint0_command_request(
20012b8c:	fec40793          	addi	a5,s0,-20
20012b90:	863e                	mv	a2,a5
20012b92:	458d                	li	a1,3
20012b94:	fdc42503          	lw	a0,-36(s0)
20012b98:	3d95                	jal	20012a0c <__metal_driver_riscv_clint0_command_request>
20012b9a:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_clint0.c:281
        controller, METAL_SOFTWARE_IPI_SET, &hartid);
}
20012b9c:	853e                	mv	a0,a5
20012b9e:	50b2                	lw	ra,44(sp)
20012ba0:	5422                	lw	s0,40(sp)
20012ba2:	6145                	addi	sp,sp,48
20012ba4:	8082                	ret

20012ba6 <__metal_driver_cpu_hartid>:
__metal_driver_cpu_hartid():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:292



/* --------------------- cpu ------------ */
static __inline__ int __metal_driver_cpu_hartid(struct metal_cpu *cpu)
{
20012ba6:	1101                	addi	sp,sp,-32
20012ba8:	ce22                	sw	s0,28(sp)
20012baa:	1000                	addi	s0,sp,32
20012bac:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:293
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20012bb0:	fec42703          	lw	a4,-20(s0)
20012bb4:	81818793          	addi	a5,gp,-2024 # 80000ad8 <__metal_dt_cpu_0>
20012bb8:	00f71463          	bne	a4,a5,20012bc0 <__metal_driver_cpu_hartid+0x1a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:294
		return 0;
20012bbc:	4781                	li	a5,0
20012bbe:	a011                	j	20012bc2 <__metal_driver_cpu_hartid+0x1c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:297
	}
	else {
		return -1;
20012bc0:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:299
	}
}
20012bc2:	853e                	mv	a0,a5
20012bc4:	4472                	lw	s0,28(sp)
20012bc6:	6105                	addi	sp,sp,32
20012bc8:	8082                	ret

20012bca <__metal_driver_cpu_timebase>:
__metal_driver_cpu_timebase():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:302

static __inline__ int __metal_driver_cpu_timebase(struct metal_cpu *cpu)
{
20012bca:	1101                	addi	sp,sp,-32
20012bcc:	ce22                	sw	s0,28(sp)
20012bce:	1000                	addi	s0,sp,32
20012bd0:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:303
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20012bd4:	fec42703          	lw	a4,-20(s0)
20012bd8:	81818793          	addi	a5,gp,-2024 # 80000ad8 <__metal_dt_cpu_0>
20012bdc:	00f71763          	bne	a4,a5,20012bea <__metal_driver_cpu_timebase+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:304
		return 16000000;
20012be0:	00f427b7          	lui	a5,0xf42
20012be4:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
20012be8:	a011                	j	20012bec <__metal_driver_cpu_timebase+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:307
	}
	else {
		return 0;
20012bea:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:309
	}
}
20012bec:	853e                	mv	a0,a5
20012bee:	4472                	lw	s0,28(sp)
20012bf0:	6105                	addi	sp,sp,32
20012bf2:	8082                	ret

20012bf4 <__metal_driver_cpu_interrupt_controller>:
__metal_driver_cpu_interrupt_controller():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:312

static __inline__ struct metal_interrupt * __metal_driver_cpu_interrupt_controller(struct metal_cpu *cpu)
{
20012bf4:	1101                	addi	sp,sp,-32
20012bf6:	ce22                	sw	s0,28(sp)
20012bf8:	1000                	addi	s0,sp,32
20012bfa:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:313
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20012bfe:	fec42703          	lw	a4,-20(s0)
20012c02:	81818793          	addi	a5,gp,-2024 # 80000ad8 <__metal_dt_cpu_0>
20012c06:	00f71763          	bne	a4,a5,20012c14 <__metal_driver_cpu_interrupt_controller+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:314
		return &__metal_dt_cpu_0_interrupt_controller.controller;
20012c0a:	800007b7          	lui	a5,0x80000
20012c0e:	09078793          	addi	a5,a5,144 # 80000090 <metal_segment_heap_target_end+0xffffe8d0>
20012c12:	a011                	j	20012c16 <__metal_driver_cpu_interrupt_controller+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:317
	}
	else {
		return NULL;
20012c14:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:319
	}
}
20012c16:	853e                	mv	a0,a5
20012c18:	4472                	lw	s0,28(sp)
20012c1a:	6105                	addi	sp,sp,32
20012c1c:	8082                	ret

20012c1e <__metal_driver_cpu_buserror>:
__metal_driver_cpu_buserror():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:332
		return 0;
	}
}

static __inline__ struct metal_buserror * __metal_driver_cpu_buserror(struct metal_cpu *cpu)
{
20012c1e:	1101                	addi	sp,sp,-32
20012c20:	ce22                	sw	s0,28(sp)
20012c22:	1000                	addi	s0,sp,32
20012c24:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:333
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20012c28:	fec42703          	lw	a4,-20(s0)
20012c2c:	81818793          	addi	a5,gp,-2024 # 80000ad8 <__metal_dt_cpu_0>
20012c30:	00f71463          	bne	a4,a5,20012c38 <__metal_driver_cpu_buserror+0x1a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:334
		return NULL;
20012c34:	4781                	li	a5,0
20012c36:	a011                	j	20012c3a <__metal_driver_cpu_buserror+0x1c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:337
	}
	else {
		return NULL;
20012c38:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:339
	}
}
20012c3a:	853e                	mv	a0,a5
20012c3c:	4472                	lw	s0,28(sp)
20012c3e:	6105                	addi	sp,sp,32
20012c40:	8082                	ret

20012c42 <__metal_driver_cpu_get>:
__metal_driver_cpu_get():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:25
extern void __metal_vector_table();
unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu);
int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time);

struct metal_cpu *__metal_driver_cpu_get(int hartid) {
20012c42:	1101                	addi	sp,sp,-32
20012c44:	ce22                	sw	s0,28(sp)
20012c46:	1000                	addi	s0,sp,32
20012c48:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:26
    if (hartid < __METAL_DT_MAX_HARTS) {
20012c4c:	fec42783          	lw	a5,-20(s0)
20012c50:	00f04c63          	bgtz	a5,20012c68 <__metal_driver_cpu_get+0x26>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:27
        return &(__metal_cpu_table[hartid]->cpu);
20012c54:	800017b7          	lui	a5,0x80001
20012c58:	fec42703          	lw	a4,-20(s0)
20012c5c:	070a                	slli	a4,a4,0x2
20012c5e:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20012c62:	97ba                	add	a5,a5,a4
20012c64:	439c                	lw	a5,0(a5)
20012c66:	a011                	j	20012c6a <__metal_driver_cpu_get+0x28>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:29
    }
    return (struct metal_cpu *)NULL;
20012c68:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:30
}
20012c6a:	853e                	mv	a0,a5
20012c6c:	4472                	lw	s0,28(sp)
20012c6e:	6105                	addi	sp,sp,32
20012c70:	8082                	ret

20012c72 <__metal_myhart_id>:
__metal_myhart_id():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:32

uintptr_t __metal_myhart_id(void) {
20012c72:	1101                	addi	sp,sp,-32
20012c74:	ce22                	sw	s0,28(sp)
20012c76:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:34
    uintptr_t myhart;
    __asm__ volatile("csrr %0, mhartid" : "=r"(myhart));
20012c78:	f14027f3          	csrr	a5,mhartid
20012c7c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:35
    return myhart;
20012c80:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:36
}
20012c84:	853e                	mv	a0,a5
20012c86:	4472                	lw	s0,28(sp)
20012c88:	6105                	addi	sp,sp,32
20012c8a:	8082                	ret

20012c8c <__metal_interrupt_global_enable>:
__metal_interrupt_global_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:45
    for (ptr = base; ptr < (base + size); ptr++) {
        *ptr = 0;
    }
}

void __metal_interrupt_global_enable(void) {
20012c8c:	1101                	addi	sp,sp,-32
20012c8e:	ce22                	sw	s0,28(sp)
20012c90:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:47
    uintptr_t m;
    __asm__ volatile("csrrs %0, mstatus, %1"
20012c92:	47a1                	li	a5,8
20012c94:	3007a7f3          	csrrs	a5,mstatus,a5
20012c98:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:50
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
20012c9c:	0001                	nop
20012c9e:	4472                	lw	s0,28(sp)
20012ca0:	6105                	addi	sp,sp,32
20012ca2:	8082                	ret

20012ca4 <__metal_interrupt_global_disable>:
__metal_interrupt_global_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:52

void __metal_interrupt_global_disable(void) {
20012ca4:	1101                	addi	sp,sp,-32
20012ca6:	ce22                	sw	s0,28(sp)
20012ca8:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:54
    uintptr_t m;
    __asm__ volatile("csrrc %0, mstatus, %1"
20012caa:	47a1                	li	a5,8
20012cac:	3007b7f3          	csrrc	a5,mstatus,a5
20012cb0:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:57
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
20012cb4:	0001                	nop
20012cb6:	4472                	lw	s0,28(sp)
20012cb8:	6105                	addi	sp,sp,32
20012cba:	8082                	ret

20012cbc <__metal_interrupt_software_enable>:
__metal_interrupt_software_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:59

void __metal_interrupt_software_enable(void) {
20012cbc:	1101                	addi	sp,sp,-32
20012cbe:	ce22                	sw	s0,28(sp)
20012cc0:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:61
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20012cc2:	47a1                	li	a5,8
20012cc4:	3047a7f3          	csrrs	a5,mie,a5
20012cc8:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:64
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
20012ccc:	0001                	nop
20012cce:	4472                	lw	s0,28(sp)
20012cd0:	6105                	addi	sp,sp,32
20012cd2:	8082                	ret

20012cd4 <__metal_interrupt_software_disable>:
__metal_interrupt_software_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:66

void __metal_interrupt_software_disable(void) {
20012cd4:	1101                	addi	sp,sp,-32
20012cd6:	ce22                	sw	s0,28(sp)
20012cd8:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:68
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
20012cda:	47a1                	li	a5,8
20012cdc:	3047b7f3          	csrrc	a5,mie,a5
20012ce0:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:71
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
20012ce4:	0001                	nop
20012ce6:	4472                	lw	s0,28(sp)
20012ce8:	6105                	addi	sp,sp,32
20012cea:	8082                	ret

20012cec <__metal_interrupt_timer_enable>:
__metal_interrupt_timer_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:73

void __metal_interrupt_timer_enable(void) {
20012cec:	1101                	addi	sp,sp,-32
20012cee:	ce22                	sw	s0,28(sp)
20012cf0:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:75
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20012cf2:	08000793          	li	a5,128
20012cf6:	3047a7f3          	csrrs	a5,mie,a5
20012cfa:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:78
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
20012cfe:	0001                	nop
20012d00:	4472                	lw	s0,28(sp)
20012d02:	6105                	addi	sp,sp,32
20012d04:	8082                	ret

20012d06 <__metal_interrupt_timer_disable>:
__metal_interrupt_timer_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:80

void __metal_interrupt_timer_disable(void) {
20012d06:	1101                	addi	sp,sp,-32
20012d08:	ce22                	sw	s0,28(sp)
20012d0a:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:82
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
20012d0c:	08000793          	li	a5,128
20012d10:	3047b7f3          	csrrc	a5,mie,a5
20012d14:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:85
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
20012d18:	0001                	nop
20012d1a:	4472                	lw	s0,28(sp)
20012d1c:	6105                	addi	sp,sp,32
20012d1e:	8082                	ret

20012d20 <__metal_interrupt_external_enable>:
__metal_interrupt_external_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:87

void __metal_interrupt_external_enable(void) {
20012d20:	1101                	addi	sp,sp,-32
20012d22:	ce22                	sw	s0,28(sp)
20012d24:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:89
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20012d26:	6785                	lui	a5,0x1
20012d28:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20012d2c:	3047a7f3          	csrrs	a5,mie,a5
20012d30:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:92
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
20012d34:	0001                	nop
20012d36:	4472                	lw	s0,28(sp)
20012d38:	6105                	addi	sp,sp,32
20012d3a:	8082                	ret

20012d3c <__metal_interrupt_external_disable>:
__metal_interrupt_external_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:94

void __metal_interrupt_external_disable(void) {
20012d3c:	1101                	addi	sp,sp,-32
20012d3e:	ce22                	sw	s0,28(sp)
20012d40:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:96
    unsigned long m;
    __asm__ volatile("csrrc %0, mie, %1"
20012d42:	6785                	lui	a5,0x1
20012d44:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20012d48:	3047b7f3          	csrrc	a5,mie,a5
20012d4c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:99
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
20012d50:	0001                	nop
20012d52:	4472                	lw	s0,28(sp)
20012d54:	6105                	addi	sp,sp,32
20012d56:	8082                	ret

20012d58 <__metal_interrupt_local_enable>:
__metal_interrupt_local_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:101

void __metal_interrupt_local_enable(int id) {
20012d58:	7179                	addi	sp,sp,-48
20012d5a:	d622                	sw	s0,44(sp)
20012d5c:	1800                	addi	s0,sp,48
20012d5e:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:102
    uintptr_t b = 1 << id;
20012d62:	fdc42783          	lw	a5,-36(s0)
20012d66:	4705                	li	a4,1
20012d68:	00f717b3          	sll	a5,a4,a5
20012d6c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:104
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1" : "=r"(m) : "r"(b));
20012d70:	fec42783          	lw	a5,-20(s0)
20012d74:	3047a7f3          	csrrs	a5,mie,a5
20012d78:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:105
}
20012d7c:	0001                	nop
20012d7e:	5432                	lw	s0,44(sp)
20012d80:	6145                	addi	sp,sp,48
20012d82:	8082                	ret

20012d84 <__metal_interrupt_local_disable>:
__metal_interrupt_local_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:107

void __metal_interrupt_local_disable(int id) {
20012d84:	7179                	addi	sp,sp,-48
20012d86:	d622                	sw	s0,44(sp)
20012d88:	1800                	addi	s0,sp,48
20012d8a:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:108
    uintptr_t b = 1 << id;
20012d8e:	fdc42783          	lw	a5,-36(s0)
20012d92:	4705                	li	a4,1
20012d94:	00f717b3          	sll	a5,a4,a5
20012d98:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:110
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1" : "=r"(m) : "r"(b));
20012d9c:	fec42783          	lw	a5,-20(s0)
20012da0:	3047b7f3          	csrrc	a5,mie,a5
20012da4:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:111
}
20012da8:	0001                	nop
20012daa:	5432                	lw	s0,44(sp)
20012dac:	6145                	addi	sp,sp,48
20012dae:	8082                	ret

20012db0 <__metal_default_exception_handler>:
__metal_default_exception_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:113

void __metal_default_exception_handler(struct metal_cpu *cpu, int ecode) {
20012db0:	1101                	addi	sp,sp,-32
20012db2:	ce06                	sw	ra,28(sp)
20012db4:	cc22                	sw	s0,24(sp)
20012db6:	1000                	addi	s0,sp,32
20012db8:	fea42623          	sw	a0,-20(s0)
20012dbc:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:114
    metal_shutdown(100);
20012dc0:	06400513          	li	a0,100
20012dc4:	075040ef          	jal	ra,20017638 <metal_shutdown>

20012dc8 <__metal_default_interrupt_handler>:
__metal_default_interrupt_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:117
}

void __metal_default_interrupt_handler(int id, void *priv) {
20012dc8:	1101                	addi	sp,sp,-32
20012dca:	ce06                	sw	ra,28(sp)
20012dcc:	cc22                	sw	s0,24(sp)
20012dce:	1000                	addi	s0,sp,32
20012dd0:	fea42623          	sw	a0,-20(s0)
20012dd4:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:118
    metal_shutdown(200);
20012dd8:	0c800513          	li	a0,200
20012ddc:	05d040ef          	jal	ra,20017638 <metal_shutdown>

20012de0 <metal_interrupt_vector_handler>:
metal_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:122
}

/* The metal_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_interrupt_vector_handler(void) {
20012de0:	715d                	addi	sp,sp,-80
20012de2:	c686                	sw	ra,76(sp)
20012de4:	c496                	sw	t0,72(sp)
20012de6:	c29a                	sw	t1,68(sp)
20012de8:	c09e                	sw	t2,64(sp)
20012dea:	de22                	sw	s0,60(sp)
20012dec:	dc2a                	sw	a0,56(sp)
20012dee:	da2e                	sw	a1,52(sp)
20012df0:	d832                	sw	a2,48(sp)
20012df2:	d636                	sw	a3,44(sp)
20012df4:	d43a                	sw	a4,40(sp)
20012df6:	d23e                	sw	a5,36(sp)
20012df8:	d042                	sw	a6,32(sp)
20012dfa:	ce46                	sw	a7,28(sp)
20012dfc:	cc72                	sw	t3,24(sp)
20012dfe:	ca76                	sw	t4,20(sp)
20012e00:	c87a                	sw	t5,16(sp)
20012e02:	c67e                	sw	t6,12(sp)
20012e04:	0880                	addi	s0,sp,80
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:123
    metal_shutdown(300);
20012e06:	12c00513          	li	a0,300
20012e0a:	02f040ef          	jal	ra,20017638 <metal_shutdown>

20012e0e <metal_software_interrupt_vector_handler>:
metal_software_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:128
}

/* The metal_software_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_software_interrupt_vector_handler(void) {
20012e0e:	711d                	addi	sp,sp,-96
20012e10:	ce86                	sw	ra,92(sp)
20012e12:	cc96                	sw	t0,88(sp)
20012e14:	ca9a                	sw	t1,84(sp)
20012e16:	c89e                	sw	t2,80(sp)
20012e18:	c6a2                	sw	s0,76(sp)
20012e1a:	c4aa                	sw	a0,72(sp)
20012e1c:	c2ae                	sw	a1,68(sp)
20012e1e:	c0b2                	sw	a2,64(sp)
20012e20:	de36                	sw	a3,60(sp)
20012e22:	dc3a                	sw	a4,56(sp)
20012e24:	da3e                	sw	a5,52(sp)
20012e26:	d842                	sw	a6,48(sp)
20012e28:	d646                	sw	a7,44(sp)
20012e2a:	d472                	sw	t3,40(sp)
20012e2c:	d276                	sw	t4,36(sp)
20012e2e:	d07a                	sw	t5,32(sp)
20012e30:	ce7e                	sw	t6,28(sp)
20012e32:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:129
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_SW);
20012e34:	3d3d                	jal	20012c72 <__metal_myhart_id>
20012e36:	872a                	mv	a4,a0
20012e38:	800017b7          	lui	a5,0x80001
20012e3c:	070a                	slli	a4,a4,0x2
20012e3e:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20012e42:	97ba                	add	a5,a5,a4
20012e44:	439c                	lw	a5,0(a5)
20012e46:	faf42623          	sw	a5,-84(s0)
20012e4a:	fac42783          	lw	a5,-84(s0)
20012e4e:	c785                	beqz	a5,20012e76 <metal_software_interrupt_vector_handler+0x68>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:129 (discriminator 1)
20012e50:	fac42503          	lw	a0,-84(s0)
20012e54:	3345                	jal	20012bf4 <__metal_driver_cpu_interrupt_controller>
20012e56:	faa42423          	sw	a0,-88(s0)
20012e5a:	fa842783          	lw	a5,-88(s0)
20012e5e:	0e07a783          	lw	a5,224(a5)
20012e62:	faf42223          	sw	a5,-92(s0)
20012e66:	fa842783          	lw	a5,-88(s0)
20012e6a:	0d87a783          	lw	a5,216(a5)
20012e6e:	fa442583          	lw	a1,-92(s0)
20012e72:	450d                	li	a0,3
20012e74:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:130
}
20012e76:	0001                	nop
20012e78:	40f6                	lw	ra,92(sp)
20012e7a:	42e6                	lw	t0,88(sp)
20012e7c:	4356                	lw	t1,84(sp)
20012e7e:	43c6                	lw	t2,80(sp)
20012e80:	4436                	lw	s0,76(sp)
20012e82:	4526                	lw	a0,72(sp)
20012e84:	4596                	lw	a1,68(sp)
20012e86:	4606                	lw	a2,64(sp)
20012e88:	56f2                	lw	a3,60(sp)
20012e8a:	5762                	lw	a4,56(sp)
20012e8c:	57d2                	lw	a5,52(sp)
20012e8e:	5842                	lw	a6,48(sp)
20012e90:	58b2                	lw	a7,44(sp)
20012e92:	5e22                	lw	t3,40(sp)
20012e94:	5e92                	lw	t4,36(sp)
20012e96:	5f02                	lw	t5,32(sp)
20012e98:	4ff2                	lw	t6,28(sp)
20012e9a:	6125                	addi	sp,sp,96
20012e9c:	30200073          	mret

20012ea0 <__metal_default_sw_handler>:
__metal_default_sw_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:132

void __metal_default_sw_handler(int id, void *priv) {
20012ea0:	7179                	addi	sp,sp,-48
20012ea2:	d606                	sw	ra,44(sp)
20012ea4:	d422                	sw	s0,40(sp)
20012ea6:	1800                	addi	s0,sp,48
20012ea8:	fca42e23          	sw	a0,-36(s0)
20012eac:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:135
    uintptr_t mcause;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20012eb0:	33c9                	jal	20012c72 <__metal_myhart_id>
20012eb2:	872a                	mv	a4,a0
20012eb4:	800017b7          	lui	a5,0x80001
20012eb8:	070a                	slli	a4,a4,0x2
20012eba:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20012ebe:	97ba                	add	a5,a5,a4
20012ec0:	439c                	lw	a5,0(a5)
20012ec2:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:137

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
20012ec6:	342027f3          	csrr	a5,mcause
20012eca:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:138
    if (cpu) {
20012ece:	fec42783          	lw	a5,-20(s0)
20012ed2:	c795                	beqz	a5,20012efe <__metal_default_sw_handler+0x5e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:140
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20012ed4:	fec42503          	lw	a0,-20(s0)
20012ed8:	3b31                	jal	20012bf4 <__metal_driver_cpu_interrupt_controller>
20012eda:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:141
        intc->metal_exception_table[mcause & METAL_MCAUSE_CAUSE](
20012ede:	fe842783          	lw	a5,-24(s0)
20012ee2:	3ff7f793          	andi	a5,a5,1023
20012ee6:	fe442703          	lw	a4,-28(s0)
20012eea:	0e878793          	addi	a5,a5,232
20012eee:	078a                	slli	a5,a5,0x2
20012ef0:	97ba                	add	a5,a5,a4
20012ef2:	439c                	lw	a5,0(a5)
20012ef4:	fdc42583          	lw	a1,-36(s0)
20012ef8:	fec42503          	lw	a0,-20(s0)
20012efc:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:144
            (struct metal_cpu *)cpu, id);
    }
}
20012efe:	0001                	nop
20012f00:	50b2                	lw	ra,44(sp)
20012f02:	5422                	lw	s0,40(sp)
20012f04:	6145                	addi	sp,sp,48
20012f06:	8082                	ret

20012f08 <metal_timer_interrupt_vector_handler>:
metal_timer_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:148

/* The metal_timer_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_timer_interrupt_vector_handler(void) {
20012f08:	711d                	addi	sp,sp,-96
20012f0a:	ce86                	sw	ra,92(sp)
20012f0c:	cc96                	sw	t0,88(sp)
20012f0e:	ca9a                	sw	t1,84(sp)
20012f10:	c89e                	sw	t2,80(sp)
20012f12:	c6a2                	sw	s0,76(sp)
20012f14:	c4aa                	sw	a0,72(sp)
20012f16:	c2ae                	sw	a1,68(sp)
20012f18:	c0b2                	sw	a2,64(sp)
20012f1a:	de36                	sw	a3,60(sp)
20012f1c:	dc3a                	sw	a4,56(sp)
20012f1e:	da3e                	sw	a5,52(sp)
20012f20:	d842                	sw	a6,48(sp)
20012f22:	d646                	sw	a7,44(sp)
20012f24:	d472                	sw	t3,40(sp)
20012f26:	d276                	sw	t4,36(sp)
20012f28:	d07a                	sw	t5,32(sp)
20012f2a:	ce7e                	sw	t6,28(sp)
20012f2c:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:149
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_TMR);
20012f2e:	3391                	jal	20012c72 <__metal_myhart_id>
20012f30:	872a                	mv	a4,a0
20012f32:	800017b7          	lui	a5,0x80001
20012f36:	070a                	slli	a4,a4,0x2
20012f38:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20012f3c:	97ba                	add	a5,a5,a4
20012f3e:	439c                	lw	a5,0(a5)
20012f40:	faf42623          	sw	a5,-84(s0)
20012f44:	fac42783          	lw	a5,-84(s0)
20012f48:	c785                	beqz	a5,20012f70 <metal_timer_interrupt_vector_handler+0x68>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:149 (discriminator 1)
20012f4a:	fac42503          	lw	a0,-84(s0)
20012f4e:	315d                	jal	20012bf4 <__metal_driver_cpu_interrupt_controller>
20012f50:	faa42423          	sw	a0,-88(s0)
20012f54:	fa842783          	lw	a5,-88(s0)
20012f58:	1407a783          	lw	a5,320(a5)
20012f5c:	faf42223          	sw	a5,-92(s0)
20012f60:	fa842783          	lw	a5,-88(s0)
20012f64:	1387a783          	lw	a5,312(a5)
20012f68:	fa442583          	lw	a1,-92(s0)
20012f6c:	451d                	li	a0,7
20012f6e:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:150
}
20012f70:	0001                	nop
20012f72:	40f6                	lw	ra,92(sp)
20012f74:	42e6                	lw	t0,88(sp)
20012f76:	4356                	lw	t1,84(sp)
20012f78:	43c6                	lw	t2,80(sp)
20012f7a:	4436                	lw	s0,76(sp)
20012f7c:	4526                	lw	a0,72(sp)
20012f7e:	4596                	lw	a1,68(sp)
20012f80:	4606                	lw	a2,64(sp)
20012f82:	56f2                	lw	a3,60(sp)
20012f84:	5762                	lw	a4,56(sp)
20012f86:	57d2                	lw	a5,52(sp)
20012f88:	5842                	lw	a6,48(sp)
20012f8a:	58b2                	lw	a7,44(sp)
20012f8c:	5e22                	lw	t3,40(sp)
20012f8e:	5e92                	lw	t4,36(sp)
20012f90:	5f02                	lw	t5,32(sp)
20012f92:	4ff2                	lw	t6,28(sp)
20012f94:	6125                	addi	sp,sp,96
20012f96:	30200073          	mret

20012f9a <__metal_default_beu_handler>:
__metal_default_beu_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:152

void __metal_default_beu_handler(int id, void *priv) {}
20012f9a:	1101                	addi	sp,sp,-32
20012f9c:	ce22                	sw	s0,28(sp)
20012f9e:	1000                	addi	s0,sp,32
20012fa0:	fea42623          	sw	a0,-20(s0)
20012fa4:	feb42423          	sw	a1,-24(s0)
20012fa8:	0001                	nop
20012faa:	4472                	lw	s0,28(sp)
20012fac:	6105                	addi	sp,sp,32
20012fae:	8082                	ret

20012fb0 <__metal_default_timer_handler>:
__metal_default_timer_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:154

void __metal_default_timer_handler(int id, void *priv) {
20012fb0:	7179                	addi	sp,sp,-48
20012fb2:	d606                	sw	ra,44(sp)
20012fb4:	d422                	sw	s0,40(sp)
20012fb6:	1800                	addi	s0,sp,48
20012fb8:	fca42e23          	sw	a0,-36(s0)
20012fbc:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:155
    struct metal_cpu *cpu = __metal_driver_cpu_get(__metal_myhart_id());
20012fc0:	394d                	jal	20012c72 <__metal_myhart_id>
20012fc2:	87aa                	mv	a5,a0
20012fc4:	853e                	mv	a0,a5
20012fc6:	39b5                	jal	20012c42 <__metal_driver_cpu_get>
20012fc8:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:156
    unsigned long long time = __metal_driver_cpu_mtime_get(cpu);
20012fcc:	fec42503          	lw	a0,-20(s0)
20012fd0:	2ae010ef          	jal	ra,2001427e <__metal_driver_cpu_mtime_get>
20012fd4:	fea42023          	sw	a0,-32(s0)
20012fd8:	feb42223          	sw	a1,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:159

    /* Set a 10 cycle timer */
    __metal_driver_cpu_mtimecmp_set(cpu, time + 10);
20012fdc:	fe042783          	lw	a5,-32(s0)
20012fe0:	fe442803          	lw	a6,-28(s0)
20012fe4:	45a9                	li	a1,10
20012fe6:	4601                	li	a2,0
20012fe8:	00b786b3          	add	a3,a5,a1
20012fec:	8536                	mv	a0,a3
20012fee:	00f53533          	sltu	a0,a0,a5
20012ff2:	00c80733          	add	a4,a6,a2
20012ff6:	00e507b3          	add	a5,a0,a4
20012ffa:	873e                	mv	a4,a5
20012ffc:	87b6                	mv	a5,a3
20012ffe:	883a                	mv	a6,a4
20013000:	85be                	mv	a1,a5
20013002:	8642                	mv	a2,a6
20013004:	fec42503          	lw	a0,-20(s0)
20013008:	2dc010ef          	jal	ra,200142e4 <__metal_driver_cpu_mtimecmp_set>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:160
}
2001300c:	0001                	nop
2001300e:	50b2                	lw	ra,44(sp)
20013010:	5422                	lw	s0,40(sp)
20013012:	6145                	addi	sp,sp,48
20013014:	8082                	ret
	...

20013080 <__metal_exception_handler>:
__metal_exception_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:169
metal_external_interrupt_vector_handler(void) {
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_EXT);
}

void __metal_exception_handler(void) __attribute__((interrupt, aligned(128)));
void __metal_exception_handler(void) {
20013080:	7119                	addi	sp,sp,-128
20013082:	de86                	sw	ra,124(sp)
20013084:	dc96                	sw	t0,120(sp)
20013086:	da9a                	sw	t1,116(sp)
20013088:	d89e                	sw	t2,112(sp)
2001308a:	d6a2                	sw	s0,108(sp)
2001308c:	d4aa                	sw	a0,104(sp)
2001308e:	d2ae                	sw	a1,100(sp)
20013090:	d0b2                	sw	a2,96(sp)
20013092:	ceb6                	sw	a3,92(sp)
20013094:	ccba                	sw	a4,88(sp)
20013096:	cabe                	sw	a5,84(sp)
20013098:	c8c2                	sw	a6,80(sp)
2001309a:	c6c6                	sw	a7,76(sp)
2001309c:	c4f2                	sw	t3,72(sp)
2001309e:	c2f6                	sw	t4,68(sp)
200130a0:	c0fa                	sw	t5,64(sp)
200130a2:	de7e                	sw	t6,60(sp)
200130a4:	0100                	addi	s0,sp,128
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:174
    int id;
    void *priv;
    uintptr_t mcause, mepc, mtval, mtvec;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
200130a6:	36f1                	jal	20012c72 <__metal_myhart_id>
200130a8:	872a                	mv	a4,a0
200130aa:	800017b7          	lui	a5,0x80001
200130ae:	070a                	slli	a4,a4,0x2
200130b0:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
200130b4:	97ba                	add	a5,a5,a4
200130b6:	439c                	lw	a5,0(a5)
200130b8:	faf42623          	sw	a5,-84(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:176

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
200130bc:	342027f3          	csrr	a5,mcause
200130c0:	faf42423          	sw	a5,-88(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:177
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
200130c4:	341027f3          	csrr	a5,mepc
200130c8:	faf42223          	sw	a5,-92(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:178
    __asm__ volatile("csrr %0, mtval" : "=r"(mtval));
200130cc:	343027f3          	csrr	a5,mtval
200130d0:	faf42023          	sw	a5,-96(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:179
    __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
200130d4:	305027f3          	csrr	a5,mtvec
200130d8:	f8f42e23          	sw	a5,-100(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:181

    if (cpu) {
200130dc:	fac42783          	lw	a5,-84(s0)
200130e0:	cbfd                	beqz	a5,200131d6 <__metal_exception_handler+0x156>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:183
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
200130e2:	fac42503          	lw	a0,-84(s0)
200130e6:	b0fff0ef          	jal	ra,20012bf4 <__metal_driver_cpu_interrupt_controller>
200130ea:	f8a42c23          	sw	a0,-104(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:184
        id = mcause & METAL_MCAUSE_CAUSE;
200130ee:	fa842783          	lw	a5,-88(s0)
200130f2:	3ff7f793          	andi	a5,a5,1023
200130f6:	f8f42a23          	sw	a5,-108(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:185
        if (mcause & METAL_MCAUSE_INTR) {
200130fa:	fa842783          	lw	a5,-88(s0)
200130fe:	0a07de63          	bgez	a5,200131ba <__metal_exception_handler+0x13a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:186
            if (id == METAL_INTERRUPT_ID_BEU) {
20013102:	f9442703          	lw	a4,-108(s0)
20013106:	08000793          	li	a5,128
2001310a:	02f71263          	bne	a4,a5,2001312e <__metal_exception_handler+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:187
                priv = intc->metal_int_beu.exint_data;
2001310e:	f9842783          	lw	a5,-104(s0)
20013112:	3987a783          	lw	a5,920(a5)
20013116:	f8f42823          	sw	a5,-112(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:188
                intc->metal_int_beu.handler(id, priv);
2001311a:	f9842783          	lw	a5,-104(s0)
2001311e:	3907a783          	lw	a5,912(a5)
20013122:	f9042583          	lw	a1,-112(s0)
20013126:	f9442503          	lw	a0,-108(s0)
2001312a:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:189
                return;
2001312c:	a06d                	j	200131d6 <__metal_exception_handler+0x156>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:191
            }
            if ((id < METAL_INTERRUPT_ID_CSW) ||
2001312e:	f9442703          	lw	a4,-108(s0)
20013132:	47ad                	li	a5,11
20013134:	00e7d763          	bge	a5,a4,20013142 <__metal_exception_handler+0xc2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:192 (discriminator 1)
                ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_DIRECT)) {
20013138:	f9c42783          	lw	a5,-100(s0)
2001313c:	03f7f793          	andi	a5,a5,63
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:191 (discriminator 1)
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20013140:	ef9d                	bnez	a5,2001317e <__metal_exception_handler+0xfe>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:193
                priv = intc->metal_int_table[id].exint_data;
20013142:	f9842683          	lw	a3,-104(s0)
20013146:	f9442703          	lw	a4,-108(s0)
2001314a:	87ba                	mv	a5,a4
2001314c:	0786                	slli	a5,a5,0x1
2001314e:	97ba                	add	a5,a5,a4
20013150:	078e                	slli	a5,a5,0x3
20013152:	97b6                	add	a5,a5,a3
20013154:	0987a783          	lw	a5,152(a5)
20013158:	f8f42823          	sw	a5,-112(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:194
                intc->metal_int_table[id].handler(id, priv);
2001315c:	f9842683          	lw	a3,-104(s0)
20013160:	f9442703          	lw	a4,-108(s0)
20013164:	87ba                	mv	a5,a4
20013166:	0786                	slli	a5,a5,0x1
20013168:	97ba                	add	a5,a5,a4
2001316a:	078e                	slli	a5,a5,0x3
2001316c:	97b6                	add	a5,a5,a3
2001316e:	0907a783          	lw	a5,144(a5)
20013172:	f9042583          	lw	a1,-112(s0)
20013176:	f9442503          	lw	a0,-108(s0)
2001317a:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:195
                return;
2001317c:	a8a9                	j	200131d6 <__metal_exception_handler+0x156>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:197
            }
            if ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_CLIC) {
2001317e:	f9c42783          	lw	a5,-100(s0)
20013182:	03f7f713          	andi	a4,a5,63
20013186:	4789                	li	a5,2
20013188:	04f71763          	bne	a4,a5,200131d6 <__metal_exception_handler+0x156>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:201
                uintptr_t mtvt;
                metal_interrupt_handler_t mtvt_handler;

                __asm__ volatile("csrr %0, 0x307" : "=r"(mtvt));
2001318c:	307027f3          	csrr	a5,mtvt
20013190:	f8f42623          	sw	a5,-116(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:202
                priv = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20013194:	f9842783          	lw	a5,-104(s0)
20013198:	0dc7a783          	lw	a5,220(a5)
2001319c:	f8f42823          	sw	a5,-112(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:203
                mtvt_handler = (metal_interrupt_handler_t) * (uintptr_t *)mtvt;
200131a0:	f8c42783          	lw	a5,-116(s0)
200131a4:	439c                	lw	a5,0(a5)
200131a6:	f8f42423          	sw	a5,-120(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:204
                mtvt_handler(id, priv);
200131aa:	f8842783          	lw	a5,-120(s0)
200131ae:	f9042583          	lw	a1,-112(s0)
200131b2:	f9442503          	lw	a0,-108(s0)
200131b6:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:205
                return;
200131b8:	a839                	j	200131d6 <__metal_exception_handler+0x156>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:208
            }
        } else {
            intc->metal_exception_table[id]((struct metal_cpu *)cpu, id);
200131ba:	f9842703          	lw	a4,-104(s0)
200131be:	f9442783          	lw	a5,-108(s0)
200131c2:	0e878793          	addi	a5,a5,232
200131c6:	078a                	slli	a5,a5,0x2
200131c8:	97ba                	add	a5,a5,a4
200131ca:	439c                	lw	a5,0(a5)
200131cc:	f9442583          	lw	a1,-108(s0)
200131d0:	fac42503          	lw	a0,-84(s0)
200131d4:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:211
        }
    }
}
200131d6:	50f6                	lw	ra,124(sp)
200131d8:	52e6                	lw	t0,120(sp)
200131da:	5356                	lw	t1,116(sp)
200131dc:	53c6                	lw	t2,112(sp)
200131de:	5436                	lw	s0,108(sp)
200131e0:	5526                	lw	a0,104(sp)
200131e2:	5596                	lw	a1,100(sp)
200131e4:	5606                	lw	a2,96(sp)
200131e6:	46f6                	lw	a3,92(sp)
200131e8:	4766                	lw	a4,88(sp)
200131ea:	47d6                	lw	a5,84(sp)
200131ec:	4846                	lw	a6,80(sp)
200131ee:	48b6                	lw	a7,76(sp)
200131f0:	4e26                	lw	t3,72(sp)
200131f2:	4e96                	lw	t4,68(sp)
200131f4:	4f06                	lw	t5,64(sp)
200131f6:	5ff2                	lw	t6,60(sp)
200131f8:	6109                	addi	sp,sp,128
200131fa:	30200073          	mret
	...

20013278 <metal_lc0_interrupt_vector_handler>:
metal_lc0_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:214

/* The metal_lc0_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc0_interrupt_vector_handler(void) {
20013278:	711d                	addi	sp,sp,-96
2001327a:	ce86                	sw	ra,92(sp)
2001327c:	cc96                	sw	t0,88(sp)
2001327e:	ca9a                	sw	t1,84(sp)
20013280:	c89e                	sw	t2,80(sp)
20013282:	c6a2                	sw	s0,76(sp)
20013284:	c4aa                	sw	a0,72(sp)
20013286:	c2ae                	sw	a1,68(sp)
20013288:	c0b2                	sw	a2,64(sp)
2001328a:	de36                	sw	a3,60(sp)
2001328c:	dc3a                	sw	a4,56(sp)
2001328e:	da3e                	sw	a5,52(sp)
20013290:	d842                	sw	a6,48(sp)
20013292:	d646                	sw	a7,44(sp)
20013294:	d472                	sw	t3,40(sp)
20013296:	d276                	sw	t4,36(sp)
20013298:	d07a                	sw	t5,32(sp)
2001329a:	ce7e                	sw	t6,28(sp)
2001329c:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:215
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC0);
2001329e:	9d5ff0ef          	jal	ra,20012c72 <__metal_myhart_id>
200132a2:	872a                	mv	a4,a0
200132a4:	800017b7          	lui	a5,0x80001
200132a8:	070a                	slli	a4,a4,0x2
200132aa:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
200132ae:	97ba                	add	a5,a5,a4
200132b0:	439c                	lw	a5,0(a5)
200132b2:	faf42623          	sw	a5,-84(s0)
200132b6:	fac42783          	lw	a5,-84(s0)
200132ba:	c78d                	beqz	a5,200132e4 <metal_lc0_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:215 (discriminator 1)
200132bc:	fac42503          	lw	a0,-84(s0)
200132c0:	935ff0ef          	jal	ra,20012bf4 <__metal_driver_cpu_interrupt_controller>
200132c4:	faa42423          	sw	a0,-88(s0)
200132c8:	fa842783          	lw	a5,-88(s0)
200132cc:	2187a783          	lw	a5,536(a5)
200132d0:	faf42223          	sw	a5,-92(s0)
200132d4:	fa842783          	lw	a5,-88(s0)
200132d8:	2107a783          	lw	a5,528(a5)
200132dc:	fa442583          	lw	a1,-92(s0)
200132e0:	4541                	li	a0,16
200132e2:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:216
}
200132e4:	0001                	nop
200132e6:	40f6                	lw	ra,92(sp)
200132e8:	42e6                	lw	t0,88(sp)
200132ea:	4356                	lw	t1,84(sp)
200132ec:	43c6                	lw	t2,80(sp)
200132ee:	4436                	lw	s0,76(sp)
200132f0:	4526                	lw	a0,72(sp)
200132f2:	4596                	lw	a1,68(sp)
200132f4:	4606                	lw	a2,64(sp)
200132f6:	56f2                	lw	a3,60(sp)
200132f8:	5762                	lw	a4,56(sp)
200132fa:	57d2                	lw	a5,52(sp)
200132fc:	5842                	lw	a6,48(sp)
200132fe:	58b2                	lw	a7,44(sp)
20013300:	5e22                	lw	t3,40(sp)
20013302:	5e92                	lw	t4,36(sp)
20013304:	5f02                	lw	t5,32(sp)
20013306:	4ff2                	lw	t6,28(sp)
20013308:	6125                	addi	sp,sp,96
2001330a:	30200073          	mret

2001330e <metal_lc1_interrupt_vector_handler>:
metal_lc1_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:219

/* The metal_lc1_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc1_interrupt_vector_handler(void) {
2001330e:	711d                	addi	sp,sp,-96
20013310:	ce86                	sw	ra,92(sp)
20013312:	cc96                	sw	t0,88(sp)
20013314:	ca9a                	sw	t1,84(sp)
20013316:	c89e                	sw	t2,80(sp)
20013318:	c6a2                	sw	s0,76(sp)
2001331a:	c4aa                	sw	a0,72(sp)
2001331c:	c2ae                	sw	a1,68(sp)
2001331e:	c0b2                	sw	a2,64(sp)
20013320:	de36                	sw	a3,60(sp)
20013322:	dc3a                	sw	a4,56(sp)
20013324:	da3e                	sw	a5,52(sp)
20013326:	d842                	sw	a6,48(sp)
20013328:	d646                	sw	a7,44(sp)
2001332a:	d472                	sw	t3,40(sp)
2001332c:	d276                	sw	t4,36(sp)
2001332e:	d07a                	sw	t5,32(sp)
20013330:	ce7e                	sw	t6,28(sp)
20013332:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:220
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC1);
20013334:	93fff0ef          	jal	ra,20012c72 <__metal_myhart_id>
20013338:	872a                	mv	a4,a0
2001333a:	800017b7          	lui	a5,0x80001
2001333e:	070a                	slli	a4,a4,0x2
20013340:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20013344:	97ba                	add	a5,a5,a4
20013346:	439c                	lw	a5,0(a5)
20013348:	faf42623          	sw	a5,-84(s0)
2001334c:	fac42783          	lw	a5,-84(s0)
20013350:	c78d                	beqz	a5,2001337a <metal_lc1_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:220 (discriminator 1)
20013352:	fac42503          	lw	a0,-84(s0)
20013356:	89fff0ef          	jal	ra,20012bf4 <__metal_driver_cpu_interrupt_controller>
2001335a:	faa42423          	sw	a0,-88(s0)
2001335e:	fa842783          	lw	a5,-88(s0)
20013362:	2307a783          	lw	a5,560(a5)
20013366:	faf42223          	sw	a5,-92(s0)
2001336a:	fa842783          	lw	a5,-88(s0)
2001336e:	2287a783          	lw	a5,552(a5)
20013372:	fa442583          	lw	a1,-92(s0)
20013376:	4545                	li	a0,17
20013378:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:221
}
2001337a:	0001                	nop
2001337c:	40f6                	lw	ra,92(sp)
2001337e:	42e6                	lw	t0,88(sp)
20013380:	4356                	lw	t1,84(sp)
20013382:	43c6                	lw	t2,80(sp)
20013384:	4436                	lw	s0,76(sp)
20013386:	4526                	lw	a0,72(sp)
20013388:	4596                	lw	a1,68(sp)
2001338a:	4606                	lw	a2,64(sp)
2001338c:	56f2                	lw	a3,60(sp)
2001338e:	5762                	lw	a4,56(sp)
20013390:	57d2                	lw	a5,52(sp)
20013392:	5842                	lw	a6,48(sp)
20013394:	58b2                	lw	a7,44(sp)
20013396:	5e22                	lw	t3,40(sp)
20013398:	5e92                	lw	t4,36(sp)
2001339a:	5f02                	lw	t5,32(sp)
2001339c:	4ff2                	lw	t6,28(sp)
2001339e:	6125                	addi	sp,sp,96
200133a0:	30200073          	mret

200133a4 <metal_lc2_interrupt_vector_handler>:
metal_lc2_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:224

/* The metal_lc2_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc2_interrupt_vector_handler(void) {
200133a4:	711d                	addi	sp,sp,-96
200133a6:	ce86                	sw	ra,92(sp)
200133a8:	cc96                	sw	t0,88(sp)
200133aa:	ca9a                	sw	t1,84(sp)
200133ac:	c89e                	sw	t2,80(sp)
200133ae:	c6a2                	sw	s0,76(sp)
200133b0:	c4aa                	sw	a0,72(sp)
200133b2:	c2ae                	sw	a1,68(sp)
200133b4:	c0b2                	sw	a2,64(sp)
200133b6:	de36                	sw	a3,60(sp)
200133b8:	dc3a                	sw	a4,56(sp)
200133ba:	da3e                	sw	a5,52(sp)
200133bc:	d842                	sw	a6,48(sp)
200133be:	d646                	sw	a7,44(sp)
200133c0:	d472                	sw	t3,40(sp)
200133c2:	d276                	sw	t4,36(sp)
200133c4:	d07a                	sw	t5,32(sp)
200133c6:	ce7e                	sw	t6,28(sp)
200133c8:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:225
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC2);
200133ca:	8a9ff0ef          	jal	ra,20012c72 <__metal_myhart_id>
200133ce:	872a                	mv	a4,a0
200133d0:	800017b7          	lui	a5,0x80001
200133d4:	070a                	slli	a4,a4,0x2
200133d6:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
200133da:	97ba                	add	a5,a5,a4
200133dc:	439c                	lw	a5,0(a5)
200133de:	faf42623          	sw	a5,-84(s0)
200133e2:	fac42783          	lw	a5,-84(s0)
200133e6:	c78d                	beqz	a5,20013410 <metal_lc2_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:225 (discriminator 1)
200133e8:	fac42503          	lw	a0,-84(s0)
200133ec:	809ff0ef          	jal	ra,20012bf4 <__metal_driver_cpu_interrupt_controller>
200133f0:	faa42423          	sw	a0,-88(s0)
200133f4:	fa842783          	lw	a5,-88(s0)
200133f8:	2487a783          	lw	a5,584(a5)
200133fc:	faf42223          	sw	a5,-92(s0)
20013400:	fa842783          	lw	a5,-88(s0)
20013404:	2407a783          	lw	a5,576(a5)
20013408:	fa442583          	lw	a1,-92(s0)
2001340c:	4549                	li	a0,18
2001340e:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:226
}
20013410:	0001                	nop
20013412:	40f6                	lw	ra,92(sp)
20013414:	42e6                	lw	t0,88(sp)
20013416:	4356                	lw	t1,84(sp)
20013418:	43c6                	lw	t2,80(sp)
2001341a:	4436                	lw	s0,76(sp)
2001341c:	4526                	lw	a0,72(sp)
2001341e:	4596                	lw	a1,68(sp)
20013420:	4606                	lw	a2,64(sp)
20013422:	56f2                	lw	a3,60(sp)
20013424:	5762                	lw	a4,56(sp)
20013426:	57d2                	lw	a5,52(sp)
20013428:	5842                	lw	a6,48(sp)
2001342a:	58b2                	lw	a7,44(sp)
2001342c:	5e22                	lw	t3,40(sp)
2001342e:	5e92                	lw	t4,36(sp)
20013430:	5f02                	lw	t5,32(sp)
20013432:	4ff2                	lw	t6,28(sp)
20013434:	6125                	addi	sp,sp,96
20013436:	30200073          	mret

2001343a <metal_lc3_interrupt_vector_handler>:
metal_lc3_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:229

/* The metal_lc3_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc3_interrupt_vector_handler(void) {
2001343a:	711d                	addi	sp,sp,-96
2001343c:	ce86                	sw	ra,92(sp)
2001343e:	cc96                	sw	t0,88(sp)
20013440:	ca9a                	sw	t1,84(sp)
20013442:	c89e                	sw	t2,80(sp)
20013444:	c6a2                	sw	s0,76(sp)
20013446:	c4aa                	sw	a0,72(sp)
20013448:	c2ae                	sw	a1,68(sp)
2001344a:	c0b2                	sw	a2,64(sp)
2001344c:	de36                	sw	a3,60(sp)
2001344e:	dc3a                	sw	a4,56(sp)
20013450:	da3e                	sw	a5,52(sp)
20013452:	d842                	sw	a6,48(sp)
20013454:	d646                	sw	a7,44(sp)
20013456:	d472                	sw	t3,40(sp)
20013458:	d276                	sw	t4,36(sp)
2001345a:	d07a                	sw	t5,32(sp)
2001345c:	ce7e                	sw	t6,28(sp)
2001345e:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:230
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC3);
20013460:	813ff0ef          	jal	ra,20012c72 <__metal_myhart_id>
20013464:	872a                	mv	a4,a0
20013466:	800017b7          	lui	a5,0x80001
2001346a:	070a                	slli	a4,a4,0x2
2001346c:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20013470:	97ba                	add	a5,a5,a4
20013472:	439c                	lw	a5,0(a5)
20013474:	faf42623          	sw	a5,-84(s0)
20013478:	fac42783          	lw	a5,-84(s0)
2001347c:	c78d                	beqz	a5,200134a6 <metal_lc3_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:230 (discriminator 1)
2001347e:	fac42503          	lw	a0,-84(s0)
20013482:	f72ff0ef          	jal	ra,20012bf4 <__metal_driver_cpu_interrupt_controller>
20013486:	faa42423          	sw	a0,-88(s0)
2001348a:	fa842783          	lw	a5,-88(s0)
2001348e:	2607a783          	lw	a5,608(a5)
20013492:	faf42223          	sw	a5,-92(s0)
20013496:	fa842783          	lw	a5,-88(s0)
2001349a:	2587a783          	lw	a5,600(a5)
2001349e:	fa442583          	lw	a1,-92(s0)
200134a2:	454d                	li	a0,19
200134a4:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:231
}
200134a6:	0001                	nop
200134a8:	40f6                	lw	ra,92(sp)
200134aa:	42e6                	lw	t0,88(sp)
200134ac:	4356                	lw	t1,84(sp)
200134ae:	43c6                	lw	t2,80(sp)
200134b0:	4436                	lw	s0,76(sp)
200134b2:	4526                	lw	a0,72(sp)
200134b4:	4596                	lw	a1,68(sp)
200134b6:	4606                	lw	a2,64(sp)
200134b8:	56f2                	lw	a3,60(sp)
200134ba:	5762                	lw	a4,56(sp)
200134bc:	57d2                	lw	a5,52(sp)
200134be:	5842                	lw	a6,48(sp)
200134c0:	58b2                	lw	a7,44(sp)
200134c2:	5e22                	lw	t3,40(sp)
200134c4:	5e92                	lw	t4,36(sp)
200134c6:	5f02                	lw	t5,32(sp)
200134c8:	4ff2                	lw	t6,28(sp)
200134ca:	6125                	addi	sp,sp,96
200134cc:	30200073          	mret

200134d0 <metal_lc4_interrupt_vector_handler>:
metal_lc4_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:234

/* The metal_lc4_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc4_interrupt_vector_handler(void) {
200134d0:	711d                	addi	sp,sp,-96
200134d2:	ce86                	sw	ra,92(sp)
200134d4:	cc96                	sw	t0,88(sp)
200134d6:	ca9a                	sw	t1,84(sp)
200134d8:	c89e                	sw	t2,80(sp)
200134da:	c6a2                	sw	s0,76(sp)
200134dc:	c4aa                	sw	a0,72(sp)
200134de:	c2ae                	sw	a1,68(sp)
200134e0:	c0b2                	sw	a2,64(sp)
200134e2:	de36                	sw	a3,60(sp)
200134e4:	dc3a                	sw	a4,56(sp)
200134e6:	da3e                	sw	a5,52(sp)
200134e8:	d842                	sw	a6,48(sp)
200134ea:	d646                	sw	a7,44(sp)
200134ec:	d472                	sw	t3,40(sp)
200134ee:	d276                	sw	t4,36(sp)
200134f0:	d07a                	sw	t5,32(sp)
200134f2:	ce7e                	sw	t6,28(sp)
200134f4:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:235
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC4);
200134f6:	f7cff0ef          	jal	ra,20012c72 <__metal_myhart_id>
200134fa:	872a                	mv	a4,a0
200134fc:	800017b7          	lui	a5,0x80001
20013500:	070a                	slli	a4,a4,0x2
20013502:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20013506:	97ba                	add	a5,a5,a4
20013508:	439c                	lw	a5,0(a5)
2001350a:	faf42623          	sw	a5,-84(s0)
2001350e:	fac42783          	lw	a5,-84(s0)
20013512:	c78d                	beqz	a5,2001353c <metal_lc4_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:235 (discriminator 1)
20013514:	fac42503          	lw	a0,-84(s0)
20013518:	edcff0ef          	jal	ra,20012bf4 <__metal_driver_cpu_interrupt_controller>
2001351c:	faa42423          	sw	a0,-88(s0)
20013520:	fa842783          	lw	a5,-88(s0)
20013524:	2787a783          	lw	a5,632(a5)
20013528:	faf42223          	sw	a5,-92(s0)
2001352c:	fa842783          	lw	a5,-88(s0)
20013530:	2707a783          	lw	a5,624(a5)
20013534:	fa442583          	lw	a1,-92(s0)
20013538:	4551                	li	a0,20
2001353a:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:236
}
2001353c:	0001                	nop
2001353e:	40f6                	lw	ra,92(sp)
20013540:	42e6                	lw	t0,88(sp)
20013542:	4356                	lw	t1,84(sp)
20013544:	43c6                	lw	t2,80(sp)
20013546:	4436                	lw	s0,76(sp)
20013548:	4526                	lw	a0,72(sp)
2001354a:	4596                	lw	a1,68(sp)
2001354c:	4606                	lw	a2,64(sp)
2001354e:	56f2                	lw	a3,60(sp)
20013550:	5762                	lw	a4,56(sp)
20013552:	57d2                	lw	a5,52(sp)
20013554:	5842                	lw	a6,48(sp)
20013556:	58b2                	lw	a7,44(sp)
20013558:	5e22                	lw	t3,40(sp)
2001355a:	5e92                	lw	t4,36(sp)
2001355c:	5f02                	lw	t5,32(sp)
2001355e:	4ff2                	lw	t6,28(sp)
20013560:	6125                	addi	sp,sp,96
20013562:	30200073          	mret

20013566 <metal_lc5_interrupt_vector_handler>:
metal_lc5_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:239

/* The metal_lc5_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc5_interrupt_vector_handler(void) {
20013566:	711d                	addi	sp,sp,-96
20013568:	ce86                	sw	ra,92(sp)
2001356a:	cc96                	sw	t0,88(sp)
2001356c:	ca9a                	sw	t1,84(sp)
2001356e:	c89e                	sw	t2,80(sp)
20013570:	c6a2                	sw	s0,76(sp)
20013572:	c4aa                	sw	a0,72(sp)
20013574:	c2ae                	sw	a1,68(sp)
20013576:	c0b2                	sw	a2,64(sp)
20013578:	de36                	sw	a3,60(sp)
2001357a:	dc3a                	sw	a4,56(sp)
2001357c:	da3e                	sw	a5,52(sp)
2001357e:	d842                	sw	a6,48(sp)
20013580:	d646                	sw	a7,44(sp)
20013582:	d472                	sw	t3,40(sp)
20013584:	d276                	sw	t4,36(sp)
20013586:	d07a                	sw	t5,32(sp)
20013588:	ce7e                	sw	t6,28(sp)
2001358a:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:240
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC5);
2001358c:	ee6ff0ef          	jal	ra,20012c72 <__metal_myhart_id>
20013590:	872a                	mv	a4,a0
20013592:	800017b7          	lui	a5,0x80001
20013596:	070a                	slli	a4,a4,0x2
20013598:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
2001359c:	97ba                	add	a5,a5,a4
2001359e:	439c                	lw	a5,0(a5)
200135a0:	faf42623          	sw	a5,-84(s0)
200135a4:	fac42783          	lw	a5,-84(s0)
200135a8:	c78d                	beqz	a5,200135d2 <metal_lc5_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:240 (discriminator 1)
200135aa:	fac42503          	lw	a0,-84(s0)
200135ae:	e46ff0ef          	jal	ra,20012bf4 <__metal_driver_cpu_interrupt_controller>
200135b2:	faa42423          	sw	a0,-88(s0)
200135b6:	fa842783          	lw	a5,-88(s0)
200135ba:	2907a783          	lw	a5,656(a5)
200135be:	faf42223          	sw	a5,-92(s0)
200135c2:	fa842783          	lw	a5,-88(s0)
200135c6:	2887a783          	lw	a5,648(a5)
200135ca:	fa442583          	lw	a1,-92(s0)
200135ce:	4555                	li	a0,21
200135d0:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:241
}
200135d2:	0001                	nop
200135d4:	40f6                	lw	ra,92(sp)
200135d6:	42e6                	lw	t0,88(sp)
200135d8:	4356                	lw	t1,84(sp)
200135da:	43c6                	lw	t2,80(sp)
200135dc:	4436                	lw	s0,76(sp)
200135de:	4526                	lw	a0,72(sp)
200135e0:	4596                	lw	a1,68(sp)
200135e2:	4606                	lw	a2,64(sp)
200135e4:	56f2                	lw	a3,60(sp)
200135e6:	5762                	lw	a4,56(sp)
200135e8:	57d2                	lw	a5,52(sp)
200135ea:	5842                	lw	a6,48(sp)
200135ec:	58b2                	lw	a7,44(sp)
200135ee:	5e22                	lw	t3,40(sp)
200135f0:	5e92                	lw	t4,36(sp)
200135f2:	5f02                	lw	t5,32(sp)
200135f4:	4ff2                	lw	t6,28(sp)
200135f6:	6125                	addi	sp,sp,96
200135f8:	30200073          	mret

200135fc <metal_lc6_interrupt_vector_handler>:
metal_lc6_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:244

/* The metal_lc6_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc6_interrupt_vector_handler(void) {
200135fc:	711d                	addi	sp,sp,-96
200135fe:	ce86                	sw	ra,92(sp)
20013600:	cc96                	sw	t0,88(sp)
20013602:	ca9a                	sw	t1,84(sp)
20013604:	c89e                	sw	t2,80(sp)
20013606:	c6a2                	sw	s0,76(sp)
20013608:	c4aa                	sw	a0,72(sp)
2001360a:	c2ae                	sw	a1,68(sp)
2001360c:	c0b2                	sw	a2,64(sp)
2001360e:	de36                	sw	a3,60(sp)
20013610:	dc3a                	sw	a4,56(sp)
20013612:	da3e                	sw	a5,52(sp)
20013614:	d842                	sw	a6,48(sp)
20013616:	d646                	sw	a7,44(sp)
20013618:	d472                	sw	t3,40(sp)
2001361a:	d276                	sw	t4,36(sp)
2001361c:	d07a                	sw	t5,32(sp)
2001361e:	ce7e                	sw	t6,28(sp)
20013620:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:245
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC6);
20013622:	e50ff0ef          	jal	ra,20012c72 <__metal_myhart_id>
20013626:	872a                	mv	a4,a0
20013628:	800017b7          	lui	a5,0x80001
2001362c:	070a                	slli	a4,a4,0x2
2001362e:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20013632:	97ba                	add	a5,a5,a4
20013634:	439c                	lw	a5,0(a5)
20013636:	faf42623          	sw	a5,-84(s0)
2001363a:	fac42783          	lw	a5,-84(s0)
2001363e:	c78d                	beqz	a5,20013668 <metal_lc6_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:245 (discriminator 1)
20013640:	fac42503          	lw	a0,-84(s0)
20013644:	db0ff0ef          	jal	ra,20012bf4 <__metal_driver_cpu_interrupt_controller>
20013648:	faa42423          	sw	a0,-88(s0)
2001364c:	fa842783          	lw	a5,-88(s0)
20013650:	2a87a783          	lw	a5,680(a5)
20013654:	faf42223          	sw	a5,-92(s0)
20013658:	fa842783          	lw	a5,-88(s0)
2001365c:	2a07a783          	lw	a5,672(a5)
20013660:	fa442583          	lw	a1,-92(s0)
20013664:	4559                	li	a0,22
20013666:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:246
}
20013668:	0001                	nop
2001366a:	40f6                	lw	ra,92(sp)
2001366c:	42e6                	lw	t0,88(sp)
2001366e:	4356                	lw	t1,84(sp)
20013670:	43c6                	lw	t2,80(sp)
20013672:	4436                	lw	s0,76(sp)
20013674:	4526                	lw	a0,72(sp)
20013676:	4596                	lw	a1,68(sp)
20013678:	4606                	lw	a2,64(sp)
2001367a:	56f2                	lw	a3,60(sp)
2001367c:	5762                	lw	a4,56(sp)
2001367e:	57d2                	lw	a5,52(sp)
20013680:	5842                	lw	a6,48(sp)
20013682:	58b2                	lw	a7,44(sp)
20013684:	5e22                	lw	t3,40(sp)
20013686:	5e92                	lw	t4,36(sp)
20013688:	5f02                	lw	t5,32(sp)
2001368a:	4ff2                	lw	t6,28(sp)
2001368c:	6125                	addi	sp,sp,96
2001368e:	30200073          	mret

20013692 <metal_lc7_interrupt_vector_handler>:
metal_lc7_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:249

/* The metal_lc7_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc7_interrupt_vector_handler(void) {
20013692:	711d                	addi	sp,sp,-96
20013694:	ce86                	sw	ra,92(sp)
20013696:	cc96                	sw	t0,88(sp)
20013698:	ca9a                	sw	t1,84(sp)
2001369a:	c89e                	sw	t2,80(sp)
2001369c:	c6a2                	sw	s0,76(sp)
2001369e:	c4aa                	sw	a0,72(sp)
200136a0:	c2ae                	sw	a1,68(sp)
200136a2:	c0b2                	sw	a2,64(sp)
200136a4:	de36                	sw	a3,60(sp)
200136a6:	dc3a                	sw	a4,56(sp)
200136a8:	da3e                	sw	a5,52(sp)
200136aa:	d842                	sw	a6,48(sp)
200136ac:	d646                	sw	a7,44(sp)
200136ae:	d472                	sw	t3,40(sp)
200136b0:	d276                	sw	t4,36(sp)
200136b2:	d07a                	sw	t5,32(sp)
200136b4:	ce7e                	sw	t6,28(sp)
200136b6:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:250
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC7);
200136b8:	dbaff0ef          	jal	ra,20012c72 <__metal_myhart_id>
200136bc:	872a                	mv	a4,a0
200136be:	800017b7          	lui	a5,0x80001
200136c2:	070a                	slli	a4,a4,0x2
200136c4:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
200136c8:	97ba                	add	a5,a5,a4
200136ca:	439c                	lw	a5,0(a5)
200136cc:	faf42623          	sw	a5,-84(s0)
200136d0:	fac42783          	lw	a5,-84(s0)
200136d4:	c78d                	beqz	a5,200136fe <metal_lc7_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:250 (discriminator 1)
200136d6:	fac42503          	lw	a0,-84(s0)
200136da:	d1aff0ef          	jal	ra,20012bf4 <__metal_driver_cpu_interrupt_controller>
200136de:	faa42423          	sw	a0,-88(s0)
200136e2:	fa842783          	lw	a5,-88(s0)
200136e6:	2c07a783          	lw	a5,704(a5)
200136ea:	faf42223          	sw	a5,-92(s0)
200136ee:	fa842783          	lw	a5,-88(s0)
200136f2:	2b87a783          	lw	a5,696(a5)
200136f6:	fa442583          	lw	a1,-92(s0)
200136fa:	455d                	li	a0,23
200136fc:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:251
}
200136fe:	0001                	nop
20013700:	40f6                	lw	ra,92(sp)
20013702:	42e6                	lw	t0,88(sp)
20013704:	4356                	lw	t1,84(sp)
20013706:	43c6                	lw	t2,80(sp)
20013708:	4436                	lw	s0,76(sp)
2001370a:	4526                	lw	a0,72(sp)
2001370c:	4596                	lw	a1,68(sp)
2001370e:	4606                	lw	a2,64(sp)
20013710:	56f2                	lw	a3,60(sp)
20013712:	5762                	lw	a4,56(sp)
20013714:	57d2                	lw	a5,52(sp)
20013716:	5842                	lw	a6,48(sp)
20013718:	58b2                	lw	a7,44(sp)
2001371a:	5e22                	lw	t3,40(sp)
2001371c:	5e92                	lw	t4,36(sp)
2001371e:	5f02                	lw	t5,32(sp)
20013720:	4ff2                	lw	t6,28(sp)
20013722:	6125                	addi	sp,sp,96
20013724:	30200073          	mret

20013728 <metal_lc8_interrupt_vector_handler>:
metal_lc8_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:254

/* The metal_lc8_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc8_interrupt_vector_handler(void) {
20013728:	711d                	addi	sp,sp,-96
2001372a:	ce86                	sw	ra,92(sp)
2001372c:	cc96                	sw	t0,88(sp)
2001372e:	ca9a                	sw	t1,84(sp)
20013730:	c89e                	sw	t2,80(sp)
20013732:	c6a2                	sw	s0,76(sp)
20013734:	c4aa                	sw	a0,72(sp)
20013736:	c2ae                	sw	a1,68(sp)
20013738:	c0b2                	sw	a2,64(sp)
2001373a:	de36                	sw	a3,60(sp)
2001373c:	dc3a                	sw	a4,56(sp)
2001373e:	da3e                	sw	a5,52(sp)
20013740:	d842                	sw	a6,48(sp)
20013742:	d646                	sw	a7,44(sp)
20013744:	d472                	sw	t3,40(sp)
20013746:	d276                	sw	t4,36(sp)
20013748:	d07a                	sw	t5,32(sp)
2001374a:	ce7e                	sw	t6,28(sp)
2001374c:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:255
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC8);
2001374e:	d24ff0ef          	jal	ra,20012c72 <__metal_myhart_id>
20013752:	872a                	mv	a4,a0
20013754:	800017b7          	lui	a5,0x80001
20013758:	070a                	slli	a4,a4,0x2
2001375a:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
2001375e:	97ba                	add	a5,a5,a4
20013760:	439c                	lw	a5,0(a5)
20013762:	faf42623          	sw	a5,-84(s0)
20013766:	fac42783          	lw	a5,-84(s0)
2001376a:	c78d                	beqz	a5,20013794 <metal_lc8_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:255 (discriminator 1)
2001376c:	fac42503          	lw	a0,-84(s0)
20013770:	c84ff0ef          	jal	ra,20012bf4 <__metal_driver_cpu_interrupt_controller>
20013774:	faa42423          	sw	a0,-88(s0)
20013778:	fa842783          	lw	a5,-88(s0)
2001377c:	2d87a783          	lw	a5,728(a5)
20013780:	faf42223          	sw	a5,-92(s0)
20013784:	fa842783          	lw	a5,-88(s0)
20013788:	2d07a783          	lw	a5,720(a5)
2001378c:	fa442583          	lw	a1,-92(s0)
20013790:	4561                	li	a0,24
20013792:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:256
}
20013794:	0001                	nop
20013796:	40f6                	lw	ra,92(sp)
20013798:	42e6                	lw	t0,88(sp)
2001379a:	4356                	lw	t1,84(sp)
2001379c:	43c6                	lw	t2,80(sp)
2001379e:	4436                	lw	s0,76(sp)
200137a0:	4526                	lw	a0,72(sp)
200137a2:	4596                	lw	a1,68(sp)
200137a4:	4606                	lw	a2,64(sp)
200137a6:	56f2                	lw	a3,60(sp)
200137a8:	5762                	lw	a4,56(sp)
200137aa:	57d2                	lw	a5,52(sp)
200137ac:	5842                	lw	a6,48(sp)
200137ae:	58b2                	lw	a7,44(sp)
200137b0:	5e22                	lw	t3,40(sp)
200137b2:	5e92                	lw	t4,36(sp)
200137b4:	5f02                	lw	t5,32(sp)
200137b6:	4ff2                	lw	t6,28(sp)
200137b8:	6125                	addi	sp,sp,96
200137ba:	30200073          	mret

200137be <metal_lc9_interrupt_vector_handler>:
metal_lc9_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:259

/* The metal_lc9_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc9_interrupt_vector_handler(void) {
200137be:	711d                	addi	sp,sp,-96
200137c0:	ce86                	sw	ra,92(sp)
200137c2:	cc96                	sw	t0,88(sp)
200137c4:	ca9a                	sw	t1,84(sp)
200137c6:	c89e                	sw	t2,80(sp)
200137c8:	c6a2                	sw	s0,76(sp)
200137ca:	c4aa                	sw	a0,72(sp)
200137cc:	c2ae                	sw	a1,68(sp)
200137ce:	c0b2                	sw	a2,64(sp)
200137d0:	de36                	sw	a3,60(sp)
200137d2:	dc3a                	sw	a4,56(sp)
200137d4:	da3e                	sw	a5,52(sp)
200137d6:	d842                	sw	a6,48(sp)
200137d8:	d646                	sw	a7,44(sp)
200137da:	d472                	sw	t3,40(sp)
200137dc:	d276                	sw	t4,36(sp)
200137de:	d07a                	sw	t5,32(sp)
200137e0:	ce7e                	sw	t6,28(sp)
200137e2:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:260
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC9);
200137e4:	c8eff0ef          	jal	ra,20012c72 <__metal_myhart_id>
200137e8:	872a                	mv	a4,a0
200137ea:	800017b7          	lui	a5,0x80001
200137ee:	070a                	slli	a4,a4,0x2
200137f0:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
200137f4:	97ba                	add	a5,a5,a4
200137f6:	439c                	lw	a5,0(a5)
200137f8:	faf42623          	sw	a5,-84(s0)
200137fc:	fac42783          	lw	a5,-84(s0)
20013800:	c78d                	beqz	a5,2001382a <metal_lc9_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:260 (discriminator 1)
20013802:	fac42503          	lw	a0,-84(s0)
20013806:	beeff0ef          	jal	ra,20012bf4 <__metal_driver_cpu_interrupt_controller>
2001380a:	faa42423          	sw	a0,-88(s0)
2001380e:	fa842783          	lw	a5,-88(s0)
20013812:	2f07a783          	lw	a5,752(a5)
20013816:	faf42223          	sw	a5,-92(s0)
2001381a:	fa842783          	lw	a5,-88(s0)
2001381e:	2e87a783          	lw	a5,744(a5)
20013822:	fa442583          	lw	a1,-92(s0)
20013826:	4565                	li	a0,25
20013828:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:261
}
2001382a:	0001                	nop
2001382c:	40f6                	lw	ra,92(sp)
2001382e:	42e6                	lw	t0,88(sp)
20013830:	4356                	lw	t1,84(sp)
20013832:	43c6                	lw	t2,80(sp)
20013834:	4436                	lw	s0,76(sp)
20013836:	4526                	lw	a0,72(sp)
20013838:	4596                	lw	a1,68(sp)
2001383a:	4606                	lw	a2,64(sp)
2001383c:	56f2                	lw	a3,60(sp)
2001383e:	5762                	lw	a4,56(sp)
20013840:	57d2                	lw	a5,52(sp)
20013842:	5842                	lw	a6,48(sp)
20013844:	58b2                	lw	a7,44(sp)
20013846:	5e22                	lw	t3,40(sp)
20013848:	5e92                	lw	t4,36(sp)
2001384a:	5f02                	lw	t5,32(sp)
2001384c:	4ff2                	lw	t6,28(sp)
2001384e:	6125                	addi	sp,sp,96
20013850:	30200073          	mret

20013854 <metal_lc10_interrupt_vector_handler>:
metal_lc10_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:265

/* The metal_lc10_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc10_interrupt_vector_handler(void) {
20013854:	711d                	addi	sp,sp,-96
20013856:	ce86                	sw	ra,92(sp)
20013858:	cc96                	sw	t0,88(sp)
2001385a:	ca9a                	sw	t1,84(sp)
2001385c:	c89e                	sw	t2,80(sp)
2001385e:	c6a2                	sw	s0,76(sp)
20013860:	c4aa                	sw	a0,72(sp)
20013862:	c2ae                	sw	a1,68(sp)
20013864:	c0b2                	sw	a2,64(sp)
20013866:	de36                	sw	a3,60(sp)
20013868:	dc3a                	sw	a4,56(sp)
2001386a:	da3e                	sw	a5,52(sp)
2001386c:	d842                	sw	a6,48(sp)
2001386e:	d646                	sw	a7,44(sp)
20013870:	d472                	sw	t3,40(sp)
20013872:	d276                	sw	t4,36(sp)
20013874:	d07a                	sw	t5,32(sp)
20013876:	ce7e                	sw	t6,28(sp)
20013878:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:266
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC10);
2001387a:	bf8ff0ef          	jal	ra,20012c72 <__metal_myhart_id>
2001387e:	872a                	mv	a4,a0
20013880:	800017b7          	lui	a5,0x80001
20013884:	070a                	slli	a4,a4,0x2
20013886:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
2001388a:	97ba                	add	a5,a5,a4
2001388c:	439c                	lw	a5,0(a5)
2001388e:	faf42623          	sw	a5,-84(s0)
20013892:	fac42783          	lw	a5,-84(s0)
20013896:	c78d                	beqz	a5,200138c0 <metal_lc10_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:266 (discriminator 1)
20013898:	fac42503          	lw	a0,-84(s0)
2001389c:	b58ff0ef          	jal	ra,20012bf4 <__metal_driver_cpu_interrupt_controller>
200138a0:	faa42423          	sw	a0,-88(s0)
200138a4:	fa842783          	lw	a5,-88(s0)
200138a8:	3087a783          	lw	a5,776(a5)
200138ac:	faf42223          	sw	a5,-92(s0)
200138b0:	fa842783          	lw	a5,-88(s0)
200138b4:	3007a783          	lw	a5,768(a5)
200138b8:	fa442583          	lw	a1,-92(s0)
200138bc:	4569                	li	a0,26
200138be:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:267
}
200138c0:	0001                	nop
200138c2:	40f6                	lw	ra,92(sp)
200138c4:	42e6                	lw	t0,88(sp)
200138c6:	4356                	lw	t1,84(sp)
200138c8:	43c6                	lw	t2,80(sp)
200138ca:	4436                	lw	s0,76(sp)
200138cc:	4526                	lw	a0,72(sp)
200138ce:	4596                	lw	a1,68(sp)
200138d0:	4606                	lw	a2,64(sp)
200138d2:	56f2                	lw	a3,60(sp)
200138d4:	5762                	lw	a4,56(sp)
200138d6:	57d2                	lw	a5,52(sp)
200138d8:	5842                	lw	a6,48(sp)
200138da:	58b2                	lw	a7,44(sp)
200138dc:	5e22                	lw	t3,40(sp)
200138de:	5e92                	lw	t4,36(sp)
200138e0:	5f02                	lw	t5,32(sp)
200138e2:	4ff2                	lw	t6,28(sp)
200138e4:	6125                	addi	sp,sp,96
200138e6:	30200073          	mret

200138ea <metal_lc11_interrupt_vector_handler>:
metal_lc11_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:271

/* The metal_lc11_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc11_interrupt_vector_handler(void) {
200138ea:	711d                	addi	sp,sp,-96
200138ec:	ce86                	sw	ra,92(sp)
200138ee:	cc96                	sw	t0,88(sp)
200138f0:	ca9a                	sw	t1,84(sp)
200138f2:	c89e                	sw	t2,80(sp)
200138f4:	c6a2                	sw	s0,76(sp)
200138f6:	c4aa                	sw	a0,72(sp)
200138f8:	c2ae                	sw	a1,68(sp)
200138fa:	c0b2                	sw	a2,64(sp)
200138fc:	de36                	sw	a3,60(sp)
200138fe:	dc3a                	sw	a4,56(sp)
20013900:	da3e                	sw	a5,52(sp)
20013902:	d842                	sw	a6,48(sp)
20013904:	d646                	sw	a7,44(sp)
20013906:	d472                	sw	t3,40(sp)
20013908:	d276                	sw	t4,36(sp)
2001390a:	d07a                	sw	t5,32(sp)
2001390c:	ce7e                	sw	t6,28(sp)
2001390e:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:272
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC11);
20013910:	b62ff0ef          	jal	ra,20012c72 <__metal_myhart_id>
20013914:	872a                	mv	a4,a0
20013916:	800017b7          	lui	a5,0x80001
2001391a:	070a                	slli	a4,a4,0x2
2001391c:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20013920:	97ba                	add	a5,a5,a4
20013922:	439c                	lw	a5,0(a5)
20013924:	faf42623          	sw	a5,-84(s0)
20013928:	fac42783          	lw	a5,-84(s0)
2001392c:	c78d                	beqz	a5,20013956 <metal_lc11_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:272 (discriminator 1)
2001392e:	fac42503          	lw	a0,-84(s0)
20013932:	ac2ff0ef          	jal	ra,20012bf4 <__metal_driver_cpu_interrupt_controller>
20013936:	faa42423          	sw	a0,-88(s0)
2001393a:	fa842783          	lw	a5,-88(s0)
2001393e:	3207a783          	lw	a5,800(a5)
20013942:	faf42223          	sw	a5,-92(s0)
20013946:	fa842783          	lw	a5,-88(s0)
2001394a:	3187a783          	lw	a5,792(a5)
2001394e:	fa442583          	lw	a1,-92(s0)
20013952:	456d                	li	a0,27
20013954:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:273
}
20013956:	0001                	nop
20013958:	40f6                	lw	ra,92(sp)
2001395a:	42e6                	lw	t0,88(sp)
2001395c:	4356                	lw	t1,84(sp)
2001395e:	43c6                	lw	t2,80(sp)
20013960:	4436                	lw	s0,76(sp)
20013962:	4526                	lw	a0,72(sp)
20013964:	4596                	lw	a1,68(sp)
20013966:	4606                	lw	a2,64(sp)
20013968:	56f2                	lw	a3,60(sp)
2001396a:	5762                	lw	a4,56(sp)
2001396c:	57d2                	lw	a5,52(sp)
2001396e:	5842                	lw	a6,48(sp)
20013970:	58b2                	lw	a7,44(sp)
20013972:	5e22                	lw	t3,40(sp)
20013974:	5e92                	lw	t4,36(sp)
20013976:	5f02                	lw	t5,32(sp)
20013978:	4ff2                	lw	t6,28(sp)
2001397a:	6125                	addi	sp,sp,96
2001397c:	30200073          	mret

20013980 <metal_lc12_interrupt_vector_handler>:
metal_lc12_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:277

/* The metal_lc12_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc12_interrupt_vector_handler(void) {
20013980:	711d                	addi	sp,sp,-96
20013982:	ce86                	sw	ra,92(sp)
20013984:	cc96                	sw	t0,88(sp)
20013986:	ca9a                	sw	t1,84(sp)
20013988:	c89e                	sw	t2,80(sp)
2001398a:	c6a2                	sw	s0,76(sp)
2001398c:	c4aa                	sw	a0,72(sp)
2001398e:	c2ae                	sw	a1,68(sp)
20013990:	c0b2                	sw	a2,64(sp)
20013992:	de36                	sw	a3,60(sp)
20013994:	dc3a                	sw	a4,56(sp)
20013996:	da3e                	sw	a5,52(sp)
20013998:	d842                	sw	a6,48(sp)
2001399a:	d646                	sw	a7,44(sp)
2001399c:	d472                	sw	t3,40(sp)
2001399e:	d276                	sw	t4,36(sp)
200139a0:	d07a                	sw	t5,32(sp)
200139a2:	ce7e                	sw	t6,28(sp)
200139a4:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:278
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC12);
200139a6:	accff0ef          	jal	ra,20012c72 <__metal_myhart_id>
200139aa:	872a                	mv	a4,a0
200139ac:	800017b7          	lui	a5,0x80001
200139b0:	070a                	slli	a4,a4,0x2
200139b2:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
200139b6:	97ba                	add	a5,a5,a4
200139b8:	439c                	lw	a5,0(a5)
200139ba:	faf42623          	sw	a5,-84(s0)
200139be:	fac42783          	lw	a5,-84(s0)
200139c2:	c78d                	beqz	a5,200139ec <metal_lc12_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:278 (discriminator 1)
200139c4:	fac42503          	lw	a0,-84(s0)
200139c8:	a2cff0ef          	jal	ra,20012bf4 <__metal_driver_cpu_interrupt_controller>
200139cc:	faa42423          	sw	a0,-88(s0)
200139d0:	fa842783          	lw	a5,-88(s0)
200139d4:	3387a783          	lw	a5,824(a5)
200139d8:	faf42223          	sw	a5,-92(s0)
200139dc:	fa842783          	lw	a5,-88(s0)
200139e0:	3307a783          	lw	a5,816(a5)
200139e4:	fa442583          	lw	a1,-92(s0)
200139e8:	4571                	li	a0,28
200139ea:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:279
}
200139ec:	0001                	nop
200139ee:	40f6                	lw	ra,92(sp)
200139f0:	42e6                	lw	t0,88(sp)
200139f2:	4356                	lw	t1,84(sp)
200139f4:	43c6                	lw	t2,80(sp)
200139f6:	4436                	lw	s0,76(sp)
200139f8:	4526                	lw	a0,72(sp)
200139fa:	4596                	lw	a1,68(sp)
200139fc:	4606                	lw	a2,64(sp)
200139fe:	56f2                	lw	a3,60(sp)
20013a00:	5762                	lw	a4,56(sp)
20013a02:	57d2                	lw	a5,52(sp)
20013a04:	5842                	lw	a6,48(sp)
20013a06:	58b2                	lw	a7,44(sp)
20013a08:	5e22                	lw	t3,40(sp)
20013a0a:	5e92                	lw	t4,36(sp)
20013a0c:	5f02                	lw	t5,32(sp)
20013a0e:	4ff2                	lw	t6,28(sp)
20013a10:	6125                	addi	sp,sp,96
20013a12:	30200073          	mret

20013a16 <metal_lc13_interrupt_vector_handler>:
metal_lc13_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:283

/* The metal_lc13_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc13_interrupt_vector_handler(void) {
20013a16:	711d                	addi	sp,sp,-96
20013a18:	ce86                	sw	ra,92(sp)
20013a1a:	cc96                	sw	t0,88(sp)
20013a1c:	ca9a                	sw	t1,84(sp)
20013a1e:	c89e                	sw	t2,80(sp)
20013a20:	c6a2                	sw	s0,76(sp)
20013a22:	c4aa                	sw	a0,72(sp)
20013a24:	c2ae                	sw	a1,68(sp)
20013a26:	c0b2                	sw	a2,64(sp)
20013a28:	de36                	sw	a3,60(sp)
20013a2a:	dc3a                	sw	a4,56(sp)
20013a2c:	da3e                	sw	a5,52(sp)
20013a2e:	d842                	sw	a6,48(sp)
20013a30:	d646                	sw	a7,44(sp)
20013a32:	d472                	sw	t3,40(sp)
20013a34:	d276                	sw	t4,36(sp)
20013a36:	d07a                	sw	t5,32(sp)
20013a38:	ce7e                	sw	t6,28(sp)
20013a3a:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:284
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC13);
20013a3c:	a36ff0ef          	jal	ra,20012c72 <__metal_myhart_id>
20013a40:	872a                	mv	a4,a0
20013a42:	800017b7          	lui	a5,0x80001
20013a46:	070a                	slli	a4,a4,0x2
20013a48:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20013a4c:	97ba                	add	a5,a5,a4
20013a4e:	439c                	lw	a5,0(a5)
20013a50:	faf42623          	sw	a5,-84(s0)
20013a54:	fac42783          	lw	a5,-84(s0)
20013a58:	c78d                	beqz	a5,20013a82 <metal_lc13_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:284 (discriminator 1)
20013a5a:	fac42503          	lw	a0,-84(s0)
20013a5e:	996ff0ef          	jal	ra,20012bf4 <__metal_driver_cpu_interrupt_controller>
20013a62:	faa42423          	sw	a0,-88(s0)
20013a66:	fa842783          	lw	a5,-88(s0)
20013a6a:	3507a783          	lw	a5,848(a5)
20013a6e:	faf42223          	sw	a5,-92(s0)
20013a72:	fa842783          	lw	a5,-88(s0)
20013a76:	3487a783          	lw	a5,840(a5)
20013a7a:	fa442583          	lw	a1,-92(s0)
20013a7e:	4575                	li	a0,29
20013a80:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:285
}
20013a82:	0001                	nop
20013a84:	40f6                	lw	ra,92(sp)
20013a86:	42e6                	lw	t0,88(sp)
20013a88:	4356                	lw	t1,84(sp)
20013a8a:	43c6                	lw	t2,80(sp)
20013a8c:	4436                	lw	s0,76(sp)
20013a8e:	4526                	lw	a0,72(sp)
20013a90:	4596                	lw	a1,68(sp)
20013a92:	4606                	lw	a2,64(sp)
20013a94:	56f2                	lw	a3,60(sp)
20013a96:	5762                	lw	a4,56(sp)
20013a98:	57d2                	lw	a5,52(sp)
20013a9a:	5842                	lw	a6,48(sp)
20013a9c:	58b2                	lw	a7,44(sp)
20013a9e:	5e22                	lw	t3,40(sp)
20013aa0:	5e92                	lw	t4,36(sp)
20013aa2:	5f02                	lw	t5,32(sp)
20013aa4:	4ff2                	lw	t6,28(sp)
20013aa6:	6125                	addi	sp,sp,96
20013aa8:	30200073          	mret

20013aac <metal_lc14_interrupt_vector_handler>:
metal_lc14_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:289

/* The metal_lc14_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc14_interrupt_vector_handler(void) {
20013aac:	711d                	addi	sp,sp,-96
20013aae:	ce86                	sw	ra,92(sp)
20013ab0:	cc96                	sw	t0,88(sp)
20013ab2:	ca9a                	sw	t1,84(sp)
20013ab4:	c89e                	sw	t2,80(sp)
20013ab6:	c6a2                	sw	s0,76(sp)
20013ab8:	c4aa                	sw	a0,72(sp)
20013aba:	c2ae                	sw	a1,68(sp)
20013abc:	c0b2                	sw	a2,64(sp)
20013abe:	de36                	sw	a3,60(sp)
20013ac0:	dc3a                	sw	a4,56(sp)
20013ac2:	da3e                	sw	a5,52(sp)
20013ac4:	d842                	sw	a6,48(sp)
20013ac6:	d646                	sw	a7,44(sp)
20013ac8:	d472                	sw	t3,40(sp)
20013aca:	d276                	sw	t4,36(sp)
20013acc:	d07a                	sw	t5,32(sp)
20013ace:	ce7e                	sw	t6,28(sp)
20013ad0:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:290
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC14);
20013ad2:	9a0ff0ef          	jal	ra,20012c72 <__metal_myhart_id>
20013ad6:	872a                	mv	a4,a0
20013ad8:	800017b7          	lui	a5,0x80001
20013adc:	070a                	slli	a4,a4,0x2
20013ade:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20013ae2:	97ba                	add	a5,a5,a4
20013ae4:	439c                	lw	a5,0(a5)
20013ae6:	faf42623          	sw	a5,-84(s0)
20013aea:	fac42783          	lw	a5,-84(s0)
20013aee:	c78d                	beqz	a5,20013b18 <metal_lc14_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:290 (discriminator 1)
20013af0:	fac42503          	lw	a0,-84(s0)
20013af4:	900ff0ef          	jal	ra,20012bf4 <__metal_driver_cpu_interrupt_controller>
20013af8:	faa42423          	sw	a0,-88(s0)
20013afc:	fa842783          	lw	a5,-88(s0)
20013b00:	3687a783          	lw	a5,872(a5)
20013b04:	faf42223          	sw	a5,-92(s0)
20013b08:	fa842783          	lw	a5,-88(s0)
20013b0c:	3607a783          	lw	a5,864(a5)
20013b10:	fa442583          	lw	a1,-92(s0)
20013b14:	4579                	li	a0,30
20013b16:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:291
}
20013b18:	0001                	nop
20013b1a:	40f6                	lw	ra,92(sp)
20013b1c:	42e6                	lw	t0,88(sp)
20013b1e:	4356                	lw	t1,84(sp)
20013b20:	43c6                	lw	t2,80(sp)
20013b22:	4436                	lw	s0,76(sp)
20013b24:	4526                	lw	a0,72(sp)
20013b26:	4596                	lw	a1,68(sp)
20013b28:	4606                	lw	a2,64(sp)
20013b2a:	56f2                	lw	a3,60(sp)
20013b2c:	5762                	lw	a4,56(sp)
20013b2e:	57d2                	lw	a5,52(sp)
20013b30:	5842                	lw	a6,48(sp)
20013b32:	58b2                	lw	a7,44(sp)
20013b34:	5e22                	lw	t3,40(sp)
20013b36:	5e92                	lw	t4,36(sp)
20013b38:	5f02                	lw	t5,32(sp)
20013b3a:	4ff2                	lw	t6,28(sp)
20013b3c:	6125                	addi	sp,sp,96
20013b3e:	30200073          	mret

20013b42 <metal_lc15_interrupt_vector_handler>:
metal_lc15_interrupt_vector_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:295

/* The metal_lc15_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc15_interrupt_vector_handler(void) {
20013b42:	711d                	addi	sp,sp,-96
20013b44:	ce86                	sw	ra,92(sp)
20013b46:	cc96                	sw	t0,88(sp)
20013b48:	ca9a                	sw	t1,84(sp)
20013b4a:	c89e                	sw	t2,80(sp)
20013b4c:	c6a2                	sw	s0,76(sp)
20013b4e:	c4aa                	sw	a0,72(sp)
20013b50:	c2ae                	sw	a1,68(sp)
20013b52:	c0b2                	sw	a2,64(sp)
20013b54:	de36                	sw	a3,60(sp)
20013b56:	dc3a                	sw	a4,56(sp)
20013b58:	da3e                	sw	a5,52(sp)
20013b5a:	d842                	sw	a6,48(sp)
20013b5c:	d646                	sw	a7,44(sp)
20013b5e:	d472                	sw	t3,40(sp)
20013b60:	d276                	sw	t4,36(sp)
20013b62:	d07a                	sw	t5,32(sp)
20013b64:	ce7e                	sw	t6,28(sp)
20013b66:	1080                	addi	s0,sp,96
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:296
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC15);
20013b68:	90aff0ef          	jal	ra,20012c72 <__metal_myhart_id>
20013b6c:	872a                	mv	a4,a0
20013b6e:	800017b7          	lui	a5,0x80001
20013b72:	070a                	slli	a4,a4,0x2
20013b74:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
20013b78:	97ba                	add	a5,a5,a4
20013b7a:	439c                	lw	a5,0(a5)
20013b7c:	faf42623          	sw	a5,-84(s0)
20013b80:	fac42783          	lw	a5,-84(s0)
20013b84:	c78d                	beqz	a5,20013bae <metal_lc15_interrupt_vector_handler+0x6c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:296 (discriminator 1)
20013b86:	fac42503          	lw	a0,-84(s0)
20013b8a:	86aff0ef          	jal	ra,20012bf4 <__metal_driver_cpu_interrupt_controller>
20013b8e:	faa42423          	sw	a0,-88(s0)
20013b92:	fa842783          	lw	a5,-88(s0)
20013b96:	3807a783          	lw	a5,896(a5)
20013b9a:	faf42223          	sw	a5,-92(s0)
20013b9e:	fa842783          	lw	a5,-88(s0)
20013ba2:	3787a783          	lw	a5,888(a5)
20013ba6:	fa442583          	lw	a1,-92(s0)
20013baa:	457d                	li	a0,31
20013bac:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:297
}
20013bae:	0001                	nop
20013bb0:	40f6                	lw	ra,92(sp)
20013bb2:	42e6                	lw	t0,88(sp)
20013bb4:	4356                	lw	t1,84(sp)
20013bb6:	43c6                	lw	t2,80(sp)
20013bb8:	4436                	lw	s0,76(sp)
20013bba:	4526                	lw	a0,72(sp)
20013bbc:	4596                	lw	a1,68(sp)
20013bbe:	4606                	lw	a2,64(sp)
20013bc0:	56f2                	lw	a3,60(sp)
20013bc2:	5762                	lw	a4,56(sp)
20013bc4:	57d2                	lw	a5,52(sp)
20013bc6:	5842                	lw	a6,48(sp)
20013bc8:	58b2                	lw	a7,44(sp)
20013bca:	5e22                	lw	t3,40(sp)
20013bcc:	5e92                	lw	t4,36(sp)
20013bce:	5f02                	lw	t5,32(sp)
20013bd0:	4ff2                	lw	t6,28(sp)
20013bd2:	6125                	addi	sp,sp,96
20013bd4:	30200073          	mret

20013bd8 <__metal_controller_interrupt_vector_mode>:
__metal_controller_interrupt_vector_mode():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:299

metal_vector_mode __metal_controller_interrupt_vector_mode(void) {
20013bd8:	1101                	addi	sp,sp,-32
20013bda:	ce22                	sw	s0,28(sp)
20013bdc:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:302
    uintptr_t val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
20013bde:	305027f3          	csrr	a5,mtvec
20013be2:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:303
    val &= METAL_MTVEC_MASK;
20013be6:	fec42783          	lw	a5,-20(s0)
20013bea:	03f7f793          	andi	a5,a5,63
20013bee:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:305

    switch (val) {
20013bf2:	fec42703          	lw	a4,-20(s0)
20013bf6:	4789                	li	a5,2
20013bf8:	00f70d63          	beq	a4,a5,20013c12 <__metal_controller_interrupt_vector_mode+0x3a>
20013bfc:	fec42703          	lw	a4,-20(s0)
20013c00:	478d                	li	a5,3
20013c02:	00f70a63          	beq	a4,a5,20013c16 <__metal_controller_interrupt_vector_mode+0x3e>
20013c06:	fec42703          	lw	a4,-20(s0)
20013c0a:	4785                	li	a5,1
20013c0c:	00f70763          	beq	a4,a5,20013c1a <__metal_controller_interrupt_vector_mode+0x42>
20013c10:	a039                	j	20013c1e <__metal_controller_interrupt_vector_mode+0x46>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:307
    case METAL_MTVEC_CLIC:
        return METAL_SELECTIVE_VECTOR_MODE;
20013c12:	478d                	li	a5,3
20013c14:	a031                	j	20013c20 <__metal_controller_interrupt_vector_mode+0x48>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:309
    case METAL_MTVEC_CLIC_VECTORED:
        return METAL_HARDWARE_VECTOR_MODE;
20013c16:	4791                	li	a5,4
20013c18:	a021                	j	20013c20 <__metal_controller_interrupt_vector_mode+0x48>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:311
    case METAL_MTVEC_VECTORED:
        return METAL_VECTOR_MODE;
20013c1a:	4785                	li	a5,1
20013c1c:	a011                	j	20013c20 <__metal_controller_interrupt_vector_mode+0x48>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:313
    }
    return METAL_DIRECT_MODE;
20013c1e:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:314
}
20013c20:	853e                	mv	a0,a5
20013c22:	4472                	lw	s0,28(sp)
20013c24:	6105                	addi	sp,sp,32
20013c26:	8082                	ret

20013c28 <__metal_controller_interrupt_vector>:
__metal_controller_interrupt_vector():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:317

void __metal_controller_interrupt_vector(metal_vector_mode mode,
                                         void *vec_table) {
20013c28:	7179                	addi	sp,sp,-48
20013c2a:	d622                	sw	s0,44(sp)
20013c2c:	1800                	addi	s0,sp,48
20013c2e:	fca42e23          	sw	a0,-36(s0)
20013c32:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:320
    uintptr_t trap_entry, val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
20013c36:	305027f3          	csrr	a5,mtvec
20013c3a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:321
    val &= ~(METAL_MTVEC_CLIC_VECTORED | METAL_MTVEC_CLIC_RESERVED);
20013c3e:	fec42783          	lw	a5,-20(s0)
20013c42:	fc07f793          	andi	a5,a5,-64
20013c46:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:322
    trap_entry = (uintptr_t)vec_table;
20013c4a:	fd842783          	lw	a5,-40(s0)
20013c4e:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:324

    switch (mode) {
20013c52:	fdc42703          	lw	a4,-36(s0)
20013c56:	4791                	li	a5,4
20013c58:	06e7e063          	bltu	a5,a4,20013cb8 <__metal_controller_interrupt_vector+0x90>
20013c5c:	fdc42783          	lw	a5,-36(s0)
20013c60:	00279713          	slli	a4,a5,0x2
20013c64:	200107b7          	lui	a5,0x20010
20013c68:	53478793          	addi	a5,a5,1332 # 20010534 <__metal_driver_vtable_riscv_clint0+0x64>
20013c6c:	97ba                	add	a5,a5,a4
20013c6e:	439c                	lw	a5,0(a5)
20013c70:	8782                	jr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:327
    case METAL_SELECTIVE_NONVECTOR_MODE:
    case METAL_SELECTIVE_VECTOR_MODE:
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
20013c72:	fe842783          	lw	a5,-24(s0)
20013c76:	30779073          	csrw	mtvt,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:328
        __asm__ volatile("csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC));
20013c7a:	fec42783          	lw	a5,-20(s0)
20013c7e:	0027e793          	ori	a5,a5,2
20013c82:	30579073          	csrw	mtvec,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:329
        break;
20013c86:	a80d                	j	20013cb8 <__metal_controller_interrupt_vector+0x90>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:331
    case METAL_HARDWARE_VECTOR_MODE:
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
20013c88:	fe842783          	lw	a5,-24(s0)
20013c8c:	30779073          	csrw	mtvt,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:333
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC_VECTORED));
20013c90:	fec42783          	lw	a5,-20(s0)
20013c94:	0037e793          	ori	a5,a5,3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:332
        __asm__ volatile(
20013c98:	30579073          	csrw	mtvec,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:334
        break;
20013c9c:	a831                	j	20013cb8 <__metal_controller_interrupt_vector+0x90>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:337
    case METAL_VECTOR_MODE:
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(trap_entry | METAL_MTVEC_VECTORED));
20013c9e:	fe842783          	lw	a5,-24(s0)
20013ca2:	0017e793          	ori	a5,a5,1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:336
        __asm__ volatile(
20013ca6:	30579073          	csrw	mtvec,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:338
        break;
20013caa:	a039                	j	20013cb8 <__metal_controller_interrupt_vector+0x90>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:341
    case METAL_DIRECT_MODE:
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
20013cac:	fe842783          	lw	a5,-24(s0)
20013cb0:	9bf1                	andi	a5,a5,-4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:340
        __asm__ volatile(
20013cb2:	30579073          	csrw	mtvec,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:342
        break;
20013cb6:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:344
    }
}
20013cb8:	0001                	nop
20013cba:	5432                	lw	s0,44(sp)
20013cbc:	6145                	addi	sp,sp,48
20013cbe:	8082                	ret

20013cc0 <__metal_valid_interrupt_id>:
__metal_valid_interrupt_id():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:346

int __metal_valid_interrupt_id(int id) {
20013cc0:	1101                	addi	sp,sp,-32
20013cc2:	ce22                	sw	s0,28(sp)
20013cc4:	1000                	addi	s0,sp,32
20013cc6:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
20013cca:	fec42703          	lw	a4,-20(s0)
20013cce:	47ad                	li	a5,11
20013cd0:	04f70263          	beq	a4,a5,20013d14 <__metal_valid_interrupt_id+0x54>
20013cd4:	fec42703          	lw	a4,-20(s0)
20013cd8:	47ad                	li	a5,11
20013cda:	00e7cd63          	blt	a5,a4,20013cf4 <__metal_valid_interrupt_id+0x34>
20013cde:	fec42703          	lw	a4,-20(s0)
20013ce2:	478d                	li	a5,3
20013ce4:	02f70863          	beq	a4,a5,20013d14 <__metal_valid_interrupt_id+0x54>
20013ce8:	fec42703          	lw	a4,-20(s0)
20013cec:	479d                	li	a5,7
20013cee:	02f70363          	beq	a4,a5,20013d14 <__metal_valid_interrupt_id+0x54>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:370
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
    case METAL_INTERRUPT_ID_BEU:
        return 1;
    default:
        break;
20013cf2:	a01d                	j	20013d18 <__metal_valid_interrupt_id+0x58>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
20013cf4:	fec42703          	lw	a4,-20(s0)
20013cf8:	47c1                	li	a5,16
20013cfa:	00f74f63          	blt	a4,a5,20013d18 <__metal_valid_interrupt_id+0x58>
20013cfe:	fec42703          	lw	a4,-20(s0)
20013d02:	47fd                	li	a5,31
20013d04:	00e7d863          	bge	a5,a4,20013d14 <__metal_valid_interrupt_id+0x54>
20013d08:	fec42703          	lw	a4,-20(s0)
20013d0c:	08000793          	li	a5,128
20013d10:	00f71463          	bne	a4,a5,20013d18 <__metal_valid_interrupt_id+0x58>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:368
        return 1;
20013d14:	4785                	li	a5,1
20013d16:	a019                	j	20013d1c <__metal_valid_interrupt_id+0x5c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:370
        break;
20013d18:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:373
    }

    return 0;
20013d1a:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:374
}
20013d1c:	853e                	mv	a0,a5
20013d1e:	4472                	lw	s0,28(sp)
20013d20:	6105                	addi	sp,sp,32
20013d22:	8082                	ret

20013d24 <__metal_local_interrupt_enable>:
__metal_local_interrupt_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:377

int __metal_local_interrupt_enable(struct metal_interrupt *controller,
                                   metal_interrupt_id_e id, int enable) {
20013d24:	7179                	addi	sp,sp,-48
20013d26:	d606                	sw	ra,44(sp)
20013d28:	d422                	sw	s0,40(sp)
20013d2a:	1800                	addi	s0,sp,48
20013d2c:	fca42e23          	sw	a0,-36(s0)
20013d30:	fcb42c23          	sw	a1,-40(s0)
20013d34:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:378
    int rc = 0;
20013d38:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:380

    if (!controller) {
20013d3c:	fdc42783          	lw	a5,-36(s0)
20013d40:	e399                	bnez	a5,20013d46 <__metal_local_interrupt_enable+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:381
        return -1;
20013d42:	57fd                	li	a5,-1
20013d44:	a849                	j	20013dd6 <__metal_local_interrupt_enable+0xb2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:384
    }

    switch (id) {
20013d46:	fd842703          	lw	a4,-40(s0)
20013d4a:	47fd                	li	a5,31
20013d4c:	08e7e063          	bltu	a5,a4,20013dcc <__metal_local_interrupt_enable+0xa8>
20013d50:	fd842783          	lw	a5,-40(s0)
20013d54:	00279713          	slli	a4,a5,0x2
20013d58:	200107b7          	lui	a5,0x20010
20013d5c:	54878793          	addi	a5,a5,1352 # 20010548 <__metal_driver_vtable_riscv_clint0+0x78>
20013d60:	97ba                	add	a5,a5,a4
20013d62:	439c                	lw	a5,0(a5)
20013d64:	8782                	jr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:386
    case METAL_INTERRUPT_ID_BASE:
        if (enable) {
20013d66:	fd442783          	lw	a5,-44(s0)
20013d6a:	c781                	beqz	a5,20013d72 <__metal_local_interrupt_enable+0x4e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:387
            __metal_interrupt_global_enable();
20013d6c:	f21fe0ef          	jal	ra,20012c8c <__metal_interrupt_global_enable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:391
        } else {
            __metal_interrupt_global_disable();
        }
        break;
20013d70:	a08d                	j	20013dd2 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:389
            __metal_interrupt_global_disable();
20013d72:	f33fe0ef          	jal	ra,20012ca4 <__metal_interrupt_global_disable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:391
        break;
20013d76:	a8b1                	j	20013dd2 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:393
    case METAL_INTERRUPT_ID_SW:
        if (enable) {
20013d78:	fd442783          	lw	a5,-44(s0)
20013d7c:	c781                	beqz	a5,20013d84 <__metal_local_interrupt_enable+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:394
            __metal_interrupt_software_enable();
20013d7e:	f3ffe0ef          	jal	ra,20012cbc <__metal_interrupt_software_enable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:398
        } else {
            __metal_interrupt_software_disable();
        }
        break;
20013d82:	a881                	j	20013dd2 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:396
            __metal_interrupt_software_disable();
20013d84:	f51fe0ef          	jal	ra,20012cd4 <__metal_interrupt_software_disable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:398
        break;
20013d88:	a0a9                	j	20013dd2 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:400
    case METAL_INTERRUPT_ID_TMR:
        if (enable) {
20013d8a:	fd442783          	lw	a5,-44(s0)
20013d8e:	c781                	beqz	a5,20013d96 <__metal_local_interrupt_enable+0x72>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:401
            __metal_interrupt_timer_enable();
20013d90:	f5dfe0ef          	jal	ra,20012cec <__metal_interrupt_timer_enable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:405
        } else {
            __metal_interrupt_timer_disable();
        }
        break;
20013d94:	a83d                	j	20013dd2 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:403
            __metal_interrupt_timer_disable();
20013d96:	f71fe0ef          	jal	ra,20012d06 <__metal_interrupt_timer_disable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:405
        break;
20013d9a:	a825                	j	20013dd2 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:407
    case METAL_INTERRUPT_ID_EXT:
        if (enable) {
20013d9c:	fd442783          	lw	a5,-44(s0)
20013da0:	c781                	beqz	a5,20013da8 <__metal_local_interrupt_enable+0x84>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:408
            __metal_interrupt_external_enable();
20013da2:	f7ffe0ef          	jal	ra,20012d20 <__metal_interrupt_external_enable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:412
        } else {
            __metal_interrupt_external_disable();
        }
        break;
20013da6:	a035                	j	20013dd2 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:410
            __metal_interrupt_external_disable();
20013da8:	f95fe0ef          	jal	ra,20012d3c <__metal_interrupt_external_disable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:412
        break;
20013dac:	a01d                	j	20013dd2 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:429
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        if (enable) {
20013dae:	fd442783          	lw	a5,-44(s0)
20013db2:	c799                	beqz	a5,20013dc0 <__metal_local_interrupt_enable+0x9c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:430
            __metal_interrupt_local_enable(id);
20013db4:	fd842783          	lw	a5,-40(s0)
20013db8:	853e                	mv	a0,a5
20013dba:	f9ffe0ef          	jal	ra,20012d58 <__metal_interrupt_local_enable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:434
        } else {
            __metal_interrupt_local_disable(id);
        }
        break;
20013dbe:	a811                	j	20013dd2 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:432
            __metal_interrupt_local_disable(id);
20013dc0:	fd842783          	lw	a5,-40(s0)
20013dc4:	853e                	mv	a0,a5
20013dc6:	fbffe0ef          	jal	ra,20012d84 <__metal_interrupt_local_disable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:434
        break;
20013dca:	a021                	j	20013dd2 <__metal_local_interrupt_enable+0xae>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:436
    default:
        rc = -1;
20013dcc:	57fd                	li	a5,-1
20013dce:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:438
    }
    return rc;
20013dd2:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:439
}
20013dd6:	853e                	mv	a0,a5
20013dd8:	50b2                	lw	ra,44(sp)
20013dda:	5422                	lw	s0,40(sp)
20013ddc:	6145                	addi	sp,sp,48
20013dde:	8082                	ret

20013de0 <__metal_exception_register>:
__metal_exception_register():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:442

int __metal_exception_register(struct metal_interrupt *controller, int ecode,
                               metal_exception_handler_t isr) {
20013de0:	7179                	addi	sp,sp,-48
20013de2:	d622                	sw	s0,44(sp)
20013de4:	1800                	addi	s0,sp,48
20013de6:	fca42e23          	sw	a0,-36(s0)
20013dea:	fcb42c23          	sw	a1,-40(s0)
20013dee:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:443
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20013df2:	fdc42783          	lw	a5,-36(s0)
20013df6:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:445

    if ((ecode < METAL_MAX_EXCEPTION_CODE) && isr) {
20013dfa:	fd842703          	lw	a4,-40(s0)
20013dfe:	47ad                	li	a5,11
20013e00:	02e7c263          	blt	a5,a4,20013e24 <__metal_exception_register+0x44>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:445 (discriminator 1)
20013e04:	fd442783          	lw	a5,-44(s0)
20013e08:	cf91                	beqz	a5,20013e24 <__metal_exception_register+0x44>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:446
        intc->metal_exception_table[ecode] = isr;
20013e0a:	fec42703          	lw	a4,-20(s0)
20013e0e:	fd842783          	lw	a5,-40(s0)
20013e12:	0e878793          	addi	a5,a5,232
20013e16:	078a                	slli	a5,a5,0x2
20013e18:	97ba                	add	a5,a5,a4
20013e1a:	fd442703          	lw	a4,-44(s0)
20013e1e:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:447
        return 0;
20013e20:	4781                	li	a5,0
20013e22:	a011                	j	20013e26 <__metal_exception_register+0x46>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:449
    }
    return -1;
20013e24:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:450
}
20013e26:	853e                	mv	a0,a5
20013e28:	5432                	lw	s0,44(sp)
20013e2a:	6145                	addi	sp,sp,48
20013e2c:	8082                	ret

20013e2e <__metal_driver_riscv_cpu_controller_interrupt_init>:
__metal_driver_riscv_cpu_controller_interrupt_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:454

extern void early_trap_vector(void);
void __metal_driver_riscv_cpu_controller_interrupt_init(
    struct metal_interrupt *controller) {
20013e2e:	7179                	addi	sp,sp,-48
20013e30:	d606                	sw	ra,44(sp)
20013e32:	d422                	sw	s0,40(sp)
20013e34:	1800                	addi	s0,sp,48
20013e36:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:455
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20013e3a:	fdc42783          	lw	a5,-36(s0)
20013e3e:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:457

    if (!intc->init_done) {
20013e42:	fe442783          	lw	a5,-28(s0)
20013e46:	43dc                	lw	a5,4(a5)
20013e48:	efdd                	bnez	a5,20013f06 <__metal_driver_riscv_cpu_controller_interrupt_init+0xd8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:459
        /* Default to use direct interrupt, setup sw cb table*/
        for (int i = 0; i < METAL_MAX_MI; i++) {
20013e4a:	fe042623          	sw	zero,-20(s0)
20013e4e:	a0b9                	j	20013e9c <__metal_driver_riscv_cpu_controller_interrupt_init+0x6e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:460 (discriminator 3)
            intc->metal_int_table[i].handler = NULL;
20013e50:	fe442683          	lw	a3,-28(s0)
20013e54:	fec42703          	lw	a4,-20(s0)
20013e58:	87ba                	mv	a5,a4
20013e5a:	0786                	slli	a5,a5,0x1
20013e5c:	97ba                	add	a5,a5,a4
20013e5e:	078e                	slli	a5,a5,0x3
20013e60:	97b6                	add	a5,a5,a3
20013e62:	0807a823          	sw	zero,144(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:461 (discriminator 3)
            intc->metal_int_table[i].sub_int = NULL;
20013e66:	fe442683          	lw	a3,-28(s0)
20013e6a:	fec42703          	lw	a4,-20(s0)
20013e6e:	87ba                	mv	a5,a4
20013e70:	0786                	slli	a5,a5,0x1
20013e72:	97ba                	add	a5,a5,a4
20013e74:	078e                	slli	a5,a5,0x3
20013e76:	97b6                	add	a5,a5,a3
20013e78:	0807aa23          	sw	zero,148(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:462 (discriminator 3)
            intc->metal_int_table[i].exint_data = NULL;
20013e7c:	fe442683          	lw	a3,-28(s0)
20013e80:	fec42703          	lw	a4,-20(s0)
20013e84:	87ba                	mv	a5,a4
20013e86:	0786                	slli	a5,a5,0x1
20013e88:	97ba                	add	a5,a5,a4
20013e8a:	078e                	slli	a5,a5,0x3
20013e8c:	97b6                	add	a5,a5,a3
20013e8e:	0807ac23          	sw	zero,152(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 3)
        for (int i = 0; i < METAL_MAX_MI; i++) {
20013e92:	fec42783          	lw	a5,-20(s0)
20013e96:	0785                	addi	a5,a5,1
20013e98:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 1)
20013e9c:	fec42703          	lw	a4,-20(s0)
20013ea0:	47fd                	li	a5,31
20013ea2:	fae7d7e3          	bge	a5,a4,20013e50 <__metal_driver_riscv_cpu_controller_interrupt_init+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:465
        }

        for (int i = 0; i < METAL_MAX_ME; i++) {
20013ea6:	fe042423          	sw	zero,-24(s0)
20013eaa:	a01d                	j	20013ed0 <__metal_driver_riscv_cpu_controller_interrupt_init+0xa2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:466 (discriminator 3)
            intc->metal_exception_table[i] = __metal_default_exception_handler;
20013eac:	fe442703          	lw	a4,-28(s0)
20013eb0:	fe842783          	lw	a5,-24(s0)
20013eb4:	0e878793          	addi	a5,a5,232
20013eb8:	078a                	slli	a5,a5,0x2
20013eba:	97ba                	add	a5,a5,a4
20013ebc:	20013737          	lui	a4,0x20013
20013ec0:	db070713          	addi	a4,a4,-592 # 20012db0 <__metal_default_exception_handler>
20013ec4:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 3)
        for (int i = 0; i < METAL_MAX_ME; i++) {
20013ec6:	fe842783          	lw	a5,-24(s0)
20013eca:	0785                	addi	a5,a5,1
20013ecc:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 1)
20013ed0:	fe842703          	lw	a4,-24(s0)
20013ed4:	47ad                	li	a5,11
20013ed6:	fce7dbe3          	bge	a5,a4,20013eac <__metal_driver_riscv_cpu_controller_interrupt_init+0x7e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:475
         * Set the real trap handler if the value of mtvec is equal to
         * early_trap_vector. If mtvec is not equal to early_trap_vector,
         * that means user has own trap handler, then we don't overwrite it.
         */
        uintptr_t mtvec;
        __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
20013eda:	305027f3          	csrr	a5,mtvec
20013ede:	fef42023          	sw	a5,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:476
        if (mtvec == (uintptr_t)&early_trap_vector) {
20013ee2:	200107b7          	lui	a5,0x20010
20013ee6:	13c78793          	addi	a5,a5,316 # 2001013c <early_trap_vector>
20013eea:	fe042703          	lw	a4,-32(s0)
20013eee:	00f71863          	bne	a4,a5,20013efe <__metal_driver_riscv_cpu_controller_interrupt_init+0xd0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:477
            __metal_controller_interrupt_vector(
20013ef2:	200137b7          	lui	a5,0x20013
20013ef6:	08078593          	addi	a1,a5,128 # 20013080 <__metal_exception_handler>
20013efa:	4501                	li	a0,0
20013efc:	3335                	jal	20013c28 <__metal_controller_interrupt_vector>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:481
                METAL_DIRECT_MODE,
                (void *)(uintptr_t)&__metal_exception_handler);
        }
        intc->init_done = 1;
20013efe:	fe442783          	lw	a5,-28(s0)
20013f02:	4705                	li	a4,1
20013f04:	c3d8                	sw	a4,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:483
    }
}
20013f06:	0001                	nop
20013f08:	50b2                	lw	ra,44(sp)
20013f0a:	5422                	lw	s0,40(sp)
20013f0c:	6145                	addi	sp,sp,48
20013f0e:	8082                	ret

20013f10 <__metal_driver_riscv_cpu_controller_interrupt_register>:
__metal_driver_riscv_cpu_controller_interrupt_register():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:487

int __metal_driver_riscv_cpu_controller_interrupt_register(
    struct metal_interrupt *controller, int id, metal_interrupt_handler_t isr,
    void *priv) {
20013f10:	7179                	addi	sp,sp,-48
20013f12:	d606                	sw	ra,44(sp)
20013f14:	d422                	sw	s0,40(sp)
20013f16:	1800                	addi	s0,sp,48
20013f18:	fca42e23          	sw	a0,-36(s0)
20013f1c:	fcb42c23          	sw	a1,-40(s0)
20013f20:	fcc42a23          	sw	a2,-44(s0)
20013f24:	fcd42823          	sw	a3,-48(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:488
    int rc = 0;
20013f28:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:489
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20013f2c:	fdc42783          	lw	a5,-36(s0)
20013f30:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:491

    if (!__metal_valid_interrupt_id(id)) {
20013f34:	fd842503          	lw	a0,-40(s0)
20013f38:	3361                	jal	20013cc0 <__metal_valid_interrupt_id>
20013f3a:	87aa                	mv	a5,a0
20013f3c:	e399                	bnez	a5,20013f42 <__metal_driver_riscv_cpu_controller_interrupt_register+0x32>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:492
        return -11;
20013f3e:	57d5                	li	a5,-11
20013f40:	aa71                	j	200140dc <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:494
    }
    if ((id == METAL_INTERRUPT_ID_BEU) &&
20013f42:	fd842703          	lw	a4,-40(s0)
20013f46:	08000793          	li	a5,128
20013f4a:	00f71763          	bne	a4,a5,20013f58 <__metal_driver_riscv_cpu_controller_interrupt_register+0x48>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:495 (discriminator 1)
        (__metal_controller_interrupt_vector_mode() != METAL_DIRECT_MODE)) {
20013f4e:	3169                	jal	20013bd8 <__metal_controller_interrupt_vector_mode>
20013f50:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:494 (discriminator 1)
    if ((id == METAL_INTERRUPT_ID_BEU) &&
20013f52:	c399                	beqz	a5,20013f58 <__metal_driver_riscv_cpu_controller_interrupt_register+0x48>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:498
        /* Only allow registration of the bus error unit interrupt if
         * interrupt vectoring if off */
        return -13;
20013f54:	57cd                	li	a5,-13
20013f56:	a259                	j	200140dc <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:501
    }

    if (isr) {
20013f58:	fd442783          	lw	a5,-44(s0)
20013f5c:	cfb9                	beqz	a5,20013fba <__metal_driver_riscv_cpu_controller_interrupt_register+0xaa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:502
        if (id == METAL_INTERRUPT_ID_BEU) {
20013f5e:	fd842703          	lw	a4,-40(s0)
20013f62:	08000793          	li	a5,128
20013f66:	00f71f63          	bne	a4,a5,20013f84 <__metal_driver_riscv_cpu_controller_interrupt_register+0x74>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:503
            intc->metal_int_beu.handler = isr;
20013f6a:	fe842783          	lw	a5,-24(s0)
20013f6e:	fd442703          	lw	a4,-44(s0)
20013f72:	38e7a823          	sw	a4,912(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:504
            intc->metal_int_beu.exint_data = priv;
20013f76:	fe842783          	lw	a5,-24(s0)
20013f7a:	fd042703          	lw	a4,-48(s0)
20013f7e:	38e7ac23          	sw	a4,920(a5)
20013f82:	aa99                	j	200140d8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:506
        } else {
            intc->metal_int_table[id].handler = isr;
20013f84:	fe842683          	lw	a3,-24(s0)
20013f88:	fd842703          	lw	a4,-40(s0)
20013f8c:	87ba                	mv	a5,a4
20013f8e:	0786                	slli	a5,a5,0x1
20013f90:	97ba                	add	a5,a5,a4
20013f92:	078e                	slli	a5,a5,0x3
20013f94:	97b6                	add	a5,a5,a3
20013f96:	fd442703          	lw	a4,-44(s0)
20013f9a:	08e7a823          	sw	a4,144(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:507
            intc->metal_int_table[id].exint_data = priv;
20013f9e:	fe842683          	lw	a3,-24(s0)
20013fa2:	fd842703          	lw	a4,-40(s0)
20013fa6:	87ba                	mv	a5,a4
20013fa8:	0786                	slli	a5,a5,0x1
20013faa:	97ba                	add	a5,a5,a4
20013fac:	078e                	slli	a5,a5,0x3
20013fae:	97b6                	add	a5,a5,a3
20013fb0:	fd042703          	lw	a4,-48(s0)
20013fb4:	08e7ac23          	sw	a4,152(a5)
20013fb8:	a205                	j	200140d8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:510
        }
    } else {
        switch (id) {
20013fba:	fd842703          	lw	a4,-40(s0)
20013fbe:	47ad                	li	a5,11
20013fc0:	0cf70c63          	beq	a4,a5,20014098 <__metal_driver_riscv_cpu_controller_interrupt_register+0x188>
20013fc4:	fd842703          	lw	a4,-40(s0)
20013fc8:	47ad                	li	a5,11
20013fca:	00e7cd63          	blt	a5,a4,20013fe4 <__metal_driver_riscv_cpu_controller_interrupt_register+0xd4>
20013fce:	fd842703          	lw	a4,-40(s0)
20013fd2:	478d                	li	a5,3
20013fd4:	02f70963          	beq	a4,a5,20014006 <__metal_driver_riscv_cpu_controller_interrupt_register+0xf6>
20013fd8:	fd842703          	lw	a4,-40(s0)
20013fdc:	479d                	li	a5,7
20013fde:	06f70163          	beq	a4,a5,20014040 <__metal_driver_riscv_cpu_controller_interrupt_register+0x130>
20013fe2:	a8c5                	j	200140d2 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c2>
20013fe4:	fd842703          	lw	a4,-40(s0)
20013fe8:	47c1                	li	a5,16
20013fea:	0ef74463          	blt	a4,a5,200140d2 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c2>
20013fee:	fd842703          	lw	a4,-40(s0)
20013ff2:	47fd                	li	a5,31
20013ff4:	0ae7d263          	bge	a5,a4,20014098 <__metal_driver_riscv_cpu_controller_interrupt_register+0x188>
20013ff8:	fd842703          	lw	a4,-40(s0)
20013ffc:	08000793          	li	a5,128
20014000:	06f70d63          	beq	a4,a5,2001407a <__metal_driver_riscv_cpu_controller_interrupt_register+0x16a>
20014004:	a0f9                	j	200140d2 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:512
        case METAL_INTERRUPT_ID_SW:
            intc->metal_int_table[id].handler = __metal_default_sw_handler;
20014006:	fe842683          	lw	a3,-24(s0)
2001400a:	fd842703          	lw	a4,-40(s0)
2001400e:	87ba                	mv	a5,a4
20014010:	0786                	slli	a5,a5,0x1
20014012:	97ba                	add	a5,a5,a4
20014014:	078e                	slli	a5,a5,0x3
20014016:	97b6                	add	a5,a5,a3
20014018:	20013737          	lui	a4,0x20013
2001401c:	ea070713          	addi	a4,a4,-352 # 20012ea0 <__metal_default_sw_handler>
20014020:	08e7a823          	sw	a4,144(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:513
            intc->metal_int_table[id].sub_int = priv;
20014024:	fe842683          	lw	a3,-24(s0)
20014028:	fd842703          	lw	a4,-40(s0)
2001402c:	87ba                	mv	a5,a4
2001402e:	0786                	slli	a5,a5,0x1
20014030:	97ba                	add	a5,a5,a4
20014032:	078e                	slli	a5,a5,0x3
20014034:	97b6                	add	a5,a5,a3
20014036:	fd042703          	lw	a4,-48(s0)
2001403a:	08e7aa23          	sw	a4,148(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:514
            break;
2001403e:	a869                	j	200140d8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:516
        case METAL_INTERRUPT_ID_TMR:
            intc->metal_int_table[id].handler = __metal_default_timer_handler;
20014040:	fe842683          	lw	a3,-24(s0)
20014044:	fd842703          	lw	a4,-40(s0)
20014048:	87ba                	mv	a5,a4
2001404a:	0786                	slli	a5,a5,0x1
2001404c:	97ba                	add	a5,a5,a4
2001404e:	078e                	slli	a5,a5,0x3
20014050:	97b6                	add	a5,a5,a3
20014052:	20013737          	lui	a4,0x20013
20014056:	fb070713          	addi	a4,a4,-80 # 20012fb0 <__metal_default_timer_handler>
2001405a:	08e7a823          	sw	a4,144(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:517
            intc->metal_int_table[id].sub_int = priv;
2001405e:	fe842683          	lw	a3,-24(s0)
20014062:	fd842703          	lw	a4,-40(s0)
20014066:	87ba                	mv	a5,a4
20014068:	0786                	slli	a5,a5,0x1
2001406a:	97ba                	add	a5,a5,a4
2001406c:	078e                	slli	a5,a5,0x3
2001406e:	97b6                	add	a5,a5,a3
20014070:	fd042703          	lw	a4,-48(s0)
20014074:	08e7aa23          	sw	a4,148(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:518
            break;
20014078:	a085                	j	200140d8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:520
        case METAL_INTERRUPT_ID_BEU:
            intc->metal_int_beu.handler = __metal_default_beu_handler;
2001407a:	fe842783          	lw	a5,-24(s0)
2001407e:	20013737          	lui	a4,0x20013
20014082:	f9a70713          	addi	a4,a4,-102 # 20012f9a <__metal_default_beu_handler>
20014086:	38e7a823          	sw	a4,912(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:521
            intc->metal_int_beu.exint_data = priv;
2001408a:	fe842783          	lw	a5,-24(s0)
2001408e:	fd042703          	lw	a4,-48(s0)
20014092:	38e7ac23          	sw	a4,920(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:522
            break;
20014096:	a089                	j	200140d8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:540
        case METAL_INTERRUPT_ID_LC11:
        case METAL_INTERRUPT_ID_LC12:
        case METAL_INTERRUPT_ID_LC13:
        case METAL_INTERRUPT_ID_LC14:
        case METAL_INTERRUPT_ID_LC15:
            intc->metal_int_table[id].handler =
20014098:	fe842683          	lw	a3,-24(s0)
2001409c:	fd842703          	lw	a4,-40(s0)
200140a0:	87ba                	mv	a5,a4
200140a2:	0786                	slli	a5,a5,0x1
200140a4:	97ba                	add	a5,a5,a4
200140a6:	078e                	slli	a5,a5,0x3
200140a8:	97b6                	add	a5,a5,a3
200140aa:	20013737          	lui	a4,0x20013
200140ae:	dc870713          	addi	a4,a4,-568 # 20012dc8 <__metal_default_interrupt_handler>
200140b2:	08e7a823          	sw	a4,144(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:542
                __metal_default_interrupt_handler;
            intc->metal_int_table[id].sub_int = priv;
200140b6:	fe842683          	lw	a3,-24(s0)
200140ba:	fd842703          	lw	a4,-40(s0)
200140be:	87ba                	mv	a5,a4
200140c0:	0786                	slli	a5,a5,0x1
200140c2:	97ba                	add	a5,a5,a4
200140c4:	078e                	slli	a5,a5,0x3
200140c6:	97b6                	add	a5,a5,a3
200140c8:	fd042703          	lw	a4,-48(s0)
200140cc:	08e7aa23          	sw	a4,148(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:543
            break;
200140d0:	a021                	j	200140d8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:545
        default:
            rc = -12;
200140d2:	57d1                	li	a5,-12
200140d4:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:548
        }
    }
    return rc;
200140d8:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:549
}
200140dc:	853e                	mv	a0,a5
200140de:	50b2                	lw	ra,44(sp)
200140e0:	5422                	lw	s0,40(sp)
200140e2:	6145                	addi	sp,sp,48
200140e4:	8082                	ret

200140e6 <__metal_driver_riscv_cpu_controller_interrupt_enable>:
__metal_driver_riscv_cpu_controller_interrupt_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:552

int __metal_driver_riscv_cpu_controller_interrupt_enable(
    struct metal_interrupt *controller, int id) {
200140e6:	1101                	addi	sp,sp,-32
200140e8:	ce06                	sw	ra,28(sp)
200140ea:	cc22                	sw	s0,24(sp)
200140ec:	1000                	addi	s0,sp,32
200140ee:	fea42623          	sw	a0,-20(s0)
200140f2:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:553
    return __metal_local_interrupt_enable(controller, id, METAL_ENABLE);
200140f6:	fe842783          	lw	a5,-24(s0)
200140fa:	4605                	li	a2,1
200140fc:	85be                	mv	a1,a5
200140fe:	fec42503          	lw	a0,-20(s0)
20014102:	310d                	jal	20013d24 <__metal_local_interrupt_enable>
20014104:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:554
}
20014106:	853e                	mv	a0,a5
20014108:	40f2                	lw	ra,28(sp)
2001410a:	4462                	lw	s0,24(sp)
2001410c:	6105                	addi	sp,sp,32
2001410e:	8082                	ret

20014110 <__metal_driver_riscv_cpu_controller_interrupt_disable>:
__metal_driver_riscv_cpu_controller_interrupt_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:557

int __metal_driver_riscv_cpu_controller_interrupt_disable(
    struct metal_interrupt *controller, int id) {
20014110:	1101                	addi	sp,sp,-32
20014112:	ce06                	sw	ra,28(sp)
20014114:	cc22                	sw	s0,24(sp)
20014116:	1000                	addi	s0,sp,32
20014118:	fea42623          	sw	a0,-20(s0)
2001411c:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:558
    return __metal_local_interrupt_enable(controller, id, METAL_DISABLE);
20014120:	fe842783          	lw	a5,-24(s0)
20014124:	4601                	li	a2,0
20014126:	85be                	mv	a1,a5
20014128:	fec42503          	lw	a0,-20(s0)
2001412c:	3ee5                	jal	20013d24 <__metal_local_interrupt_enable>
2001412e:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:559
}
20014130:	853e                	mv	a0,a5
20014132:	40f2                	lw	ra,28(sp)
20014134:	4462                	lw	s0,24(sp)
20014136:	6105                	addi	sp,sp,32
20014138:	8082                	ret

2001413a <__metal_driver_riscv_cpu_controller_get_vector_mode>:
__metal_driver_riscv_cpu_controller_get_vector_mode():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:591
    }
    return -1;
}

metal_vector_mode __metal_driver_riscv_cpu_controller_get_vector_mode(
    struct metal_interrupt *controller) {
2001413a:	1101                	addi	sp,sp,-32
2001413c:	ce06                	sw	ra,28(sp)
2001413e:	cc22                	sw	s0,24(sp)
20014140:	1000                	addi	s0,sp,32
20014142:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:592
    return __metal_controller_interrupt_vector_mode();
20014146:	a93ff0ef          	jal	ra,20013bd8 <__metal_controller_interrupt_vector_mode>
2001414a:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:593
}
2001414c:	853e                	mv	a0,a5
2001414e:	40f2                	lw	ra,28(sp)
20014150:	4462                	lw	s0,24(sp)
20014152:	6105                	addi	sp,sp,32
20014154:	8082                	ret

20014156 <__metal_driver_riscv_cpu_controller_set_vector_mode>:
__metal_driver_riscv_cpu_controller_set_vector_mode():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:596

int __metal_driver_riscv_cpu_controller_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
20014156:	1101                	addi	sp,sp,-32
20014158:	ce06                	sw	ra,28(sp)
2001415a:	cc22                	sw	s0,24(sp)
2001415c:	1000                	addi	s0,sp,32
2001415e:	fea42623          	sw	a0,-20(s0)
20014162:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:598

    if (mode == METAL_DIRECT_MODE) {
20014166:	fe842783          	lw	a5,-24(s0)
2001416a:	eb99                	bnez	a5,20014180 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x2a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:599
        __metal_controller_interrupt_vector(
2001416c:	200137b7          	lui	a5,0x20013
20014170:	08078593          	addi	a1,a5,128 # 20013080 <__metal_exception_handler>
20014174:	fe842503          	lw	a0,-24(s0)
20014178:	ab1ff0ef          	jal	ra,20013c28 <__metal_controller_interrupt_vector>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:601
            mode, (void *)(uintptr_t)&__metal_exception_handler);
        return 0;
2001417c:	4781                	li	a5,0
2001417e:	a00d                	j	200141a0 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:603
    }
    if (mode == METAL_VECTOR_MODE) {
20014180:	fe842703          	lw	a4,-24(s0)
20014184:	4785                	li	a5,1
20014186:	00f71c63          	bne	a4,a5,2001419e <__metal_driver_riscv_cpu_controller_set_vector_mode+0x48>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:604
        __metal_controller_interrupt_vector(
2001418a:	200187b7          	lui	a5,0x20018
2001418e:	80078593          	addi	a1,a5,-2048 # 20017800 <__metal_vector_table>
20014192:	fe842503          	lw	a0,-24(s0)
20014196:	a93ff0ef          	jal	ra,20013c28 <__metal_controller_interrupt_vector>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:606
            mode, (void *)(uintptr_t)__metal_vector_table);
        return 0;
2001419a:	4781                	li	a5,0
2001419c:	a011                	j	200141a0 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:608
    }
    return -1;
2001419e:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:609
}
200141a0:	853e                	mv	a0,a5
200141a2:	40f2                	lw	ra,28(sp)
200141a4:	4462                	lw	s0,24(sp)
200141a6:	6105                	addi	sp,sp,32
200141a8:	8082                	ret

200141aa <__metal_driver_riscv_cpu_controller_command_request>:
__metal_driver_riscv_cpu_controller_command_request():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:612

int __metal_driver_riscv_cpu_controller_command_request(
    struct metal_interrupt *controller, int cmd, void *data) {
200141aa:	1101                	addi	sp,sp,-32
200141ac:	ce22                	sw	s0,28(sp)
200141ae:	1000                	addi	s0,sp,32
200141b0:	fea42623          	sw	a0,-20(s0)
200141b4:	feb42423          	sw	a1,-24(s0)
200141b8:	fec42223          	sw	a2,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:615
    /* NOP for now, unless local interrupt lines the like of clic, clint, plic
     */
    return 0;
200141bc:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:616
}
200141be:	853e                	mv	a0,a5
200141c0:	4472                	lw	s0,28(sp)
200141c2:	6105                	addi	sp,sp,32
200141c4:	8082                	ret

200141c6 <__metal_driver_cpu_mcycle_get>:
__metal_driver_cpu_mcycle_get():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:620

/* CPU driver !!! */

unsigned long long __metal_driver_cpu_mcycle_get(struct metal_cpu *cpu) {
200141c6:	7139                	addi	sp,sp,-64
200141c8:	de22                	sw	s0,60(sp)
200141ca:	0080                	addi	s0,sp,64
200141cc:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:621
    unsigned long long val = 0;
200141d0:	4301                	li	t1,0
200141d2:	4381                	li	t2,0
200141d4:	fe642423          	sw	t1,-24(s0)
200141d8:	fe742623          	sw	t2,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:627 (discriminator 1)

#if __riscv_xlen == 32
    unsigned long hi, hi1, lo;

    do {
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi));
200141dc:	b8002573          	csrr	a0,mcycleh
200141e0:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:628 (discriminator 1)
        __asm__ volatile("csrr %0, mcycle" : "=r"(lo));
200141e4:	b0002573          	csrr	a0,mcycle
200141e8:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:629 (discriminator 1)
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi1));
200141ec:	b8002573          	csrr	a0,mcycleh
200141f0:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:632 (discriminator 1)
        /* hi != hi1 means mcycle overflow during we get value,
         * so we must retry. */
    } while (hi != hi1);
200141f4:	fe442883          	lw	a7,-28(s0)
200141f8:	fdc42503          	lw	a0,-36(s0)
200141fc:	fea890e3          	bne	a7,a0,200141dc <__metal_driver_cpu_mcycle_get+0x16>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:634

    val = ((unsigned long long)hi << 32) | lo;
20014200:	fe442503          	lw	a0,-28(s0)
20014204:	85aa                	mv	a1,a0
20014206:	4601                	li	a2,0
20014208:	00059813          	slli	a6,a1,0x0
2001420c:	4781                	li	a5,0
2001420e:	fe042603          	lw	a2,-32(s0)
20014212:	86b2                	mv	a3,a2
20014214:	4701                	li	a4,0
20014216:	00d7e633          	or	a2,a5,a3
2001421a:	fec42423          	sw	a2,-24(s0)
2001421e:	00e867b3          	or	a5,a6,a4
20014222:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:639
#else
    __asm__ volatile("csrr %0, mcycle" : "=r"(val));
#endif

    return val;
20014226:	fe842783          	lw	a5,-24(s0)
2001422a:	fec42803          	lw	a6,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:640
}
2001422e:	853e                	mv	a0,a5
20014230:	85c2                	mv	a1,a6
20014232:	5472                	lw	s0,60(sp)
20014234:	6121                	addi	sp,sp,64
20014236:	8082                	ret

20014238 <__metal_driver_cpu_timebase_get>:
__metal_driver_cpu_timebase_get():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:642

unsigned long long __metal_driver_cpu_timebase_get(struct metal_cpu *cpu) {
20014238:	7179                	addi	sp,sp,-48
2001423a:	d606                	sw	ra,44(sp)
2001423c:	d422                	sw	s0,40(sp)
2001423e:	d24a                	sw	s2,36(sp)
20014240:	d04e                	sw	s3,32(sp)
20014242:	1800                	addi	s0,sp,48
20014244:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:644
    int timebase;
    if (!cpu) {
20014248:	fdc42783          	lw	a5,-36(s0)
2001424c:	e781                	bnez	a5,20014254 <__metal_driver_cpu_timebase_get+0x1c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:645
        return 0;
2001424e:	4901                	li	s2,0
20014250:	4981                	li	s3,0
20014252:	a821                	j	2001426a <__metal_driver_cpu_timebase_get+0x32>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:648
    }

    timebase = __metal_driver_cpu_timebase((struct metal_cpu *)cpu);
20014254:	fdc42503          	lw	a0,-36(s0)
20014258:	973fe0ef          	jal	ra,20012bca <__metal_driver_cpu_timebase>
2001425c:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:649
    return timebase;
20014260:	fec42783          	lw	a5,-20(s0)
20014264:	893e                	mv	s2,a5
20014266:	87fd                	srai	a5,a5,0x1f
20014268:	89be                	mv	s3,a5
2001426a:	87ca                	mv	a5,s2
2001426c:	884e                	mv	a6,s3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:650
}
2001426e:	853e                	mv	a0,a5
20014270:	85c2                	mv	a1,a6
20014272:	50b2                	lw	ra,44(sp)
20014274:	5422                	lw	s0,40(sp)
20014276:	5912                	lw	s2,36(sp)
20014278:	5982                	lw	s3,32(sp)
2001427a:	6145                	addi	sp,sp,48
2001427c:	8082                	ret

2001427e <__metal_driver_cpu_mtime_get>:
__metal_driver_cpu_mtime_get():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:652

unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu) {
2001427e:	7179                	addi	sp,sp,-48
20014280:	d606                	sw	ra,44(sp)
20014282:	d422                	sw	s0,40(sp)
20014284:	1800                	addi	s0,sp,48
20014286:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:653
    unsigned long long time = 0;
2001428a:	4781                	li	a5,0
2001428c:	4801                	li	a6,0
2001428e:	fef42023          	sw	a5,-32(s0)
20014292:	ff042223          	sw	a6,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:657
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20014296:	fdc42503          	lw	a0,-36(s0)
2001429a:	95bfe0ef          	jal	ra,20012bf4 <__metal_driver_cpu_interrupt_controller>
2001429e:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:659

    if (intc) {
200142a2:	fec42783          	lw	a5,-20(s0)
200142a6:	c78d                	beqz	a5,200142d0 <__metal_driver_cpu_mtime_get+0x52>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:660
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
200142a8:	fec42783          	lw	a5,-20(s0)
200142ac:	13c7a783          	lw	a5,316(a5)
200142b0:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:661
        if (tmr_intc) {
200142b4:	fe842783          	lw	a5,-24(s0)
200142b8:	cf81                	beqz	a5,200142d0 <__metal_driver_cpu_mtime_get+0x52>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:662
            tmr_intc->vtable->command_request(tmr_intc, METAL_TIMER_MTIME_GET,
200142ba:	fe842783          	lw	a5,-24(s0)
200142be:	439c                	lw	a5,0(a5)
200142c0:	47f8                	lw	a4,76(a5)
200142c2:	fe040793          	addi	a5,s0,-32
200142c6:	863e                	mv	a2,a5
200142c8:	4585                	li	a1,1
200142ca:	fe842503          	lw	a0,-24(s0)
200142ce:	9702                	jalr	a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:666
                                              &time);
        }
    }
    return time;
200142d0:	fe042783          	lw	a5,-32(s0)
200142d4:	fe442803          	lw	a6,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:667
}
200142d8:	853e                	mv	a0,a5
200142da:	85c2                	mv	a1,a6
200142dc:	50b2                	lw	ra,44(sp)
200142de:	5422                	lw	s0,40(sp)
200142e0:	6145                	addi	sp,sp,48
200142e2:	8082                	ret

200142e4 <__metal_driver_cpu_mtimecmp_set>:
__metal_driver_cpu_mtimecmp_set():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:670

int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time) {
200142e4:	7179                	addi	sp,sp,-48
200142e6:	d606                	sw	ra,44(sp)
200142e8:	d422                	sw	s0,40(sp)
200142ea:	d226                	sw	s1,36(sp)
200142ec:	1800                	addi	s0,sp,48
200142ee:	fca42e23          	sw	a0,-36(s0)
200142f2:	fcb42823          	sw	a1,-48(s0)
200142f6:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:671
    int rc = -1;
200142fa:	57fd                	li	a5,-1
200142fc:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:675
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20014300:	fdc42503          	lw	a0,-36(s0)
20014304:	8f1fe0ef          	jal	ra,20012bf4 <__metal_driver_cpu_interrupt_controller>
20014308:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:677

    if (intc) {
2001430c:	fe842783          	lw	a5,-24(s0)
20014310:	cf8d                	beqz	a5,2001434a <__metal_driver_cpu_mtimecmp_set+0x66>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:678
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20014312:	fe842783          	lw	a5,-24(s0)
20014316:	13c7a783          	lw	a5,316(a5)
2001431a:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:679
        if (tmr_intc) {
2001431e:	fe442783          	lw	a5,-28(s0)
20014322:	c785                	beqz	a5,2001434a <__metal_driver_cpu_mtimecmp_set+0x66>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:680
            rc = tmr_intc->vtable->mtimecmp_set(
20014324:	fe442783          	lw	a5,-28(s0)
20014328:	439c                	lw	a5,0(a5)
2001432a:	4ba4                	lw	s1,80(a5)
2001432c:	fdc42503          	lw	a0,-36(s0)
20014330:	877fe0ef          	jal	ra,20012ba6 <__metal_driver_cpu_hartid>
20014334:	87aa                	mv	a5,a0
20014336:	fd042603          	lw	a2,-48(s0)
2001433a:	fd442683          	lw	a3,-44(s0)
2001433e:	85be                	mv	a1,a5
20014340:	fe442503          	lw	a0,-28(s0)
20014344:	9482                	jalr	s1
20014346:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:684
                tmr_intc, __metal_driver_cpu_hartid(cpu), time);
        }
    }
    return rc;
2001434a:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:685
}
2001434e:	853e                	mv	a0,a5
20014350:	50b2                	lw	ra,44(sp)
20014352:	5422                	lw	s0,40(sp)
20014354:	5492                	lw	s1,36(sp)
20014356:	6145                	addi	sp,sp,48
20014358:	8082                	ret

2001435a <__metal_driver_cpu_timer_controller_interrupt>:
__metal_driver_cpu_timer_controller_interrupt():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:688

struct metal_interrupt *
__metal_driver_cpu_timer_controller_interrupt(struct metal_cpu *cpu) {
2001435a:	1101                	addi	sp,sp,-32
2001435c:	ce22                	sw	s0,28(sp)
2001435e:	1000                	addi	s0,sp,32
20014360:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:690
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
20014364:	81018793          	addi	a5,gp,-2032 # 80000ad0 <__metal_dt_clint_2000000>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:699
#else
#pragma message("There is no interrupt controller for Timer interrupt")
    return NULL;
#endif
#endif
}
20014368:	853e                	mv	a0,a5
2001436a:	4472                	lw	s0,28(sp)
2001436c:	6105                	addi	sp,sp,32
2001436e:	8082                	ret

20014370 <__metal_driver_cpu_get_timer_interrupt_id>:
__metal_driver_cpu_get_timer_interrupt_id():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:701

int __metal_driver_cpu_get_timer_interrupt_id(struct metal_cpu *cpu) {
20014370:	1101                	addi	sp,sp,-32
20014372:	ce22                	sw	s0,28(sp)
20014374:	1000                	addi	s0,sp,32
20014376:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:702
    return METAL_INTERRUPT_ID_TMR;
2001437a:	479d                	li	a5,7
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:703
}
2001437c:	853e                	mv	a0,a5
2001437e:	4472                	lw	s0,28(sp)
20014380:	6105                	addi	sp,sp,32
20014382:	8082                	ret

20014384 <__metal_driver_cpu_sw_controller_interrupt>:
__metal_driver_cpu_sw_controller_interrupt():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:706

struct metal_interrupt *
__metal_driver_cpu_sw_controller_interrupt(struct metal_cpu *cpu) {
20014384:	1101                	addi	sp,sp,-32
20014386:	ce22                	sw	s0,28(sp)
20014388:	1000                	addi	s0,sp,32
2001438a:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:708
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
2001438e:	81018793          	addi	a5,gp,-2032 # 80000ad0 <__metal_dt_clint_2000000>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:717
#else
#pragma message("There is no interrupt controller for Software interrupt")
    return NULL;
#endif
#endif
}
20014392:	853e                	mv	a0,a5
20014394:	4472                	lw	s0,28(sp)
20014396:	6105                	addi	sp,sp,32
20014398:	8082                	ret

2001439a <__metal_driver_cpu_get_sw_interrupt_id>:
__metal_driver_cpu_get_sw_interrupt_id():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:719

int __metal_driver_cpu_get_sw_interrupt_id(struct metal_cpu *cpu) {
2001439a:	1101                	addi	sp,sp,-32
2001439c:	ce22                	sw	s0,28(sp)
2001439e:	1000                	addi	s0,sp,32
200143a0:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:720
    return METAL_INTERRUPT_ID_SW;
200143a4:	478d                	li	a5,3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:721
}
200143a6:	853e                	mv	a0,a5
200143a8:	4472                	lw	s0,28(sp)
200143aa:	6105                	addi	sp,sp,32
200143ac:	8082                	ret

200143ae <__metal_driver_cpu_set_sw_ipi>:
__metal_driver_cpu_set_sw_ipi():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:723

int __metal_driver_cpu_set_sw_ipi(struct metal_cpu *cpu, int hartid) {
200143ae:	7179                	addi	sp,sp,-48
200143b0:	d606                	sw	ra,44(sp)
200143b2:	d422                	sw	s0,40(sp)
200143b4:	1800                	addi	s0,sp,48
200143b6:	fca42e23          	sw	a0,-36(s0)
200143ba:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:724
    int rc = -1;
200143be:	57fd                	li	a5,-1
200143c0:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:728
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
200143c4:	fdc42503          	lw	a0,-36(s0)
200143c8:	82dfe0ef          	jal	ra,20012bf4 <__metal_driver_cpu_interrupt_controller>
200143cc:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:730

    if (intc) {
200143d0:	fe842783          	lw	a5,-24(s0)
200143d4:	c79d                	beqz	a5,20014402 <__metal_driver_cpu_set_sw_ipi+0x54>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:731
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
200143d6:	fe842783          	lw	a5,-24(s0)
200143da:	0dc7a783          	lw	a5,220(a5)
200143de:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:732
        if (sw_intc) {
200143e2:	fe442783          	lw	a5,-28(s0)
200143e6:	cf91                	beqz	a5,20014402 <__metal_driver_cpu_set_sw_ipi+0x54>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:733
            rc = sw_intc->vtable->command_request(
200143e8:	fe442783          	lw	a5,-28(s0)
200143ec:	439c                	lw	a5,0(a5)
200143ee:	47f8                	lw	a4,76(a5)
200143f0:	fd840793          	addi	a5,s0,-40
200143f4:	863e                	mv	a2,a5
200143f6:	458d                	li	a1,3
200143f8:	fe442503          	lw	a0,-28(s0)
200143fc:	9702                	jalr	a4
200143fe:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:737
                sw_intc, METAL_SOFTWARE_IPI_SET, &hartid);
        }
    }
    return rc;
20014402:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:738
}
20014406:	853e                	mv	a0,a5
20014408:	50b2                	lw	ra,44(sp)
2001440a:	5422                	lw	s0,40(sp)
2001440c:	6145                	addi	sp,sp,48
2001440e:	8082                	ret

20014410 <__metal_driver_cpu_clear_sw_ipi>:
__metal_driver_cpu_clear_sw_ipi():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:740

int __metal_driver_cpu_clear_sw_ipi(struct metal_cpu *cpu, int hartid) {
20014410:	7179                	addi	sp,sp,-48
20014412:	d606                	sw	ra,44(sp)
20014414:	d422                	sw	s0,40(sp)
20014416:	1800                	addi	s0,sp,48
20014418:	fca42e23          	sw	a0,-36(s0)
2001441c:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:741
    int rc = -1;
20014420:	57fd                	li	a5,-1
20014422:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:745
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20014426:	fdc42503          	lw	a0,-36(s0)
2001442a:	fcafe0ef          	jal	ra,20012bf4 <__metal_driver_cpu_interrupt_controller>
2001442e:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:747

    if (intc) {
20014432:	fe842783          	lw	a5,-24(s0)
20014436:	c79d                	beqz	a5,20014464 <__metal_driver_cpu_clear_sw_ipi+0x54>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:748
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20014438:	fe842783          	lw	a5,-24(s0)
2001443c:	0dc7a783          	lw	a5,220(a5)
20014440:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:749
        if (sw_intc) {
20014444:	fe442783          	lw	a5,-28(s0)
20014448:	cf91                	beqz	a5,20014464 <__metal_driver_cpu_clear_sw_ipi+0x54>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:750
            rc = sw_intc->vtable->command_request(
2001444a:	fe442783          	lw	a5,-28(s0)
2001444e:	439c                	lw	a5,0(a5)
20014450:	47f8                	lw	a4,76(a5)
20014452:	fd840793          	addi	a5,s0,-40
20014456:	863e                	mv	a2,a5
20014458:	4589                	li	a1,2
2001445a:	fe442503          	lw	a0,-28(s0)
2001445e:	9702                	jalr	a4
20014460:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:754
                sw_intc, METAL_SOFTWARE_IPI_CLEAR, &hartid);
        }
    }
    return rc;
20014464:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:755
}
20014468:	853e                	mv	a0,a5
2001446a:	50b2                	lw	ra,44(sp)
2001446c:	5422                	lw	s0,40(sp)
2001446e:	6145                	addi	sp,sp,48
20014470:	8082                	ret

20014472 <__metal_driver_cpu_get_msip>:
__metal_driver_cpu_get_msip():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:757

int __metal_driver_cpu_get_msip(struct metal_cpu *cpu, int hartid) {
20014472:	7179                	addi	sp,sp,-48
20014474:	d606                	sw	ra,44(sp)
20014476:	d422                	sw	s0,40(sp)
20014478:	1800                	addi	s0,sp,48
2001447a:	fca42e23          	sw	a0,-36(s0)
2001447e:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:758
    int rc = 0;
20014482:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:762
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20014486:	fdc42503          	lw	a0,-36(s0)
2001448a:	f6afe0ef          	jal	ra,20012bf4 <__metal_driver_cpu_interrupt_controller>
2001448e:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:764

    if (intc) {
20014492:	fe842783          	lw	a5,-24(s0)
20014496:	c79d                	beqz	a5,200144c4 <__metal_driver_cpu_get_msip+0x52>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:765
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20014498:	fe842783          	lw	a5,-24(s0)
2001449c:	0dc7a783          	lw	a5,220(a5)
200144a0:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:766
        if (sw_intc) {
200144a4:	fe442783          	lw	a5,-28(s0)
200144a8:	cf91                	beqz	a5,200144c4 <__metal_driver_cpu_get_msip+0x52>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:767
            rc = sw_intc->vtable->command_request(
200144aa:	fe442783          	lw	a5,-28(s0)
200144ae:	439c                	lw	a5,0(a5)
200144b0:	47f8                	lw	a4,76(a5)
200144b2:	fd840793          	addi	a5,s0,-40
200144b6:	863e                	mv	a2,a5
200144b8:	4591                	li	a1,4
200144ba:	fe442503          	lw	a0,-28(s0)
200144be:	9702                	jalr	a4
200144c0:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:771
                sw_intc, METAL_SOFTWARE_MSIP_GET, &hartid);
        }
    }
    return rc;
200144c4:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:772
}
200144c8:	853e                	mv	a0,a5
200144ca:	50b2                	lw	ra,44(sp)
200144cc:	5422                	lw	s0,40(sp)
200144ce:	6145                	addi	sp,sp,48
200144d0:	8082                	ret

200144d2 <__metal_driver_cpu_controller_interrupt>:
__metal_driver_cpu_controller_interrupt():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:775

struct metal_interrupt *
__metal_driver_cpu_controller_interrupt(struct metal_cpu *cpu) {
200144d2:	1101                	addi	sp,sp,-32
200144d4:	ce06                	sw	ra,28(sp)
200144d6:	cc22                	sw	s0,24(sp)
200144d8:	1000                	addi	s0,sp,32
200144da:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:776
    return __metal_driver_cpu_interrupt_controller(cpu);
200144de:	fec42503          	lw	a0,-20(s0)
200144e2:	f12fe0ef          	jal	ra,20012bf4 <__metal_driver_cpu_interrupt_controller>
200144e6:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:777
}
200144e8:	853e                	mv	a0,a5
200144ea:	40f2                	lw	ra,28(sp)
200144ec:	4462                	lw	s0,24(sp)
200144ee:	6105                	addi	sp,sp,32
200144f0:	8082                	ret

200144f2 <__metal_driver_cpu_exception_register>:
__metal_driver_cpu_exception_register():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:798
    }
    return -1;
}

int __metal_driver_cpu_exception_register(struct metal_cpu *cpu, int ecode,
                                          metal_exception_handler_t isr) {
200144f2:	7179                	addi	sp,sp,-48
200144f4:	d606                	sw	ra,44(sp)
200144f6:	d422                	sw	s0,40(sp)
200144f8:	1800                	addi	s0,sp,48
200144fa:	fca42e23          	sw	a0,-36(s0)
200144fe:	fcb42c23          	sw	a1,-40(s0)
20014502:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:801
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20014506:	fdc42503          	lw	a0,-36(s0)
2001450a:	eeafe0ef          	jal	ra,20012bf4 <__metal_driver_cpu_interrupt_controller>
2001450e:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:803

    if (intc) {
20014512:	fec42783          	lw	a5,-20(s0)
20014516:	cb99                	beqz	a5,2001452c <__metal_driver_cpu_exception_register+0x3a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:804
        return __metal_exception_register((struct metal_interrupt *)intc, ecode,
20014518:	fd442603          	lw	a2,-44(s0)
2001451c:	fd842583          	lw	a1,-40(s0)
20014520:	fec42503          	lw	a0,-20(s0)
20014524:	8bdff0ef          	jal	ra,20013de0 <__metal_exception_register>
20014528:	87aa                	mv	a5,a0
2001452a:	a011                	j	2001452e <__metal_driver_cpu_exception_register+0x3c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:807
                                          isr);
    }
    return -1;
2001452c:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:808
}
2001452e:	853e                	mv	a0,a5
20014530:	50b2                	lw	ra,44(sp)
20014532:	5422                	lw	s0,40(sp)
20014534:	6145                	addi	sp,sp,48
20014536:	8082                	ret

20014538 <__metal_driver_cpu_get_instruction_length>:
__metal_driver_cpu_get_instruction_length():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:811

int __metal_driver_cpu_get_instruction_length(struct metal_cpu *cpu,
                                              uintptr_t epc) {
20014538:	1101                	addi	sp,sp,-32
2001453a:	ce22                	sw	s0,28(sp)
2001453c:	1000                	addi	s0,sp,32
2001453e:	fea42623          	sw	a0,-20(s0)
20014542:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:817
    /**
     * Per ISA compressed instruction has last two bits of opcode set.
     * The encoding '00' '01' '10' are used for compressed instruction.
     * Only enconding '11' isn't regarded as compressed instruction (>16b).
     */
    return ((*(unsigned short *)epc & METAL_INSN_LENGTH_MASK) ==
20014546:	fe842783          	lw	a5,-24(s0)
2001454a:	0007d783          	lhu	a5,0(a5)
2001454e:	0037f713          	andi	a4,a5,3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:820
            METAL_INSN_NOT_COMPRESSED)
               ? 4
               : 2;
20014552:	478d                	li	a5,3
20014554:	00f71463          	bne	a4,a5,2001455c <__metal_driver_cpu_get_instruction_length+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 1)
20014558:	4791                	li	a5,4
2001455a:	a011                	j	2001455e <__metal_driver_cpu_get_instruction_length+0x26>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 2)
2001455c:	4789                	li	a5,2
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:821 (discriminator 5)
}
2001455e:	853e                	mv	a0,a5
20014560:	4472                	lw	s0,28(sp)
20014562:	6105                	addi	sp,sp,32
20014564:	8082                	ret

20014566 <__metal_driver_cpu_get_exception_pc>:
__metal_driver_cpu_get_exception_pc():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:823

uintptr_t __metal_driver_cpu_get_exception_pc(struct metal_cpu *cpu) {
20014566:	7179                	addi	sp,sp,-48
20014568:	d622                	sw	s0,44(sp)
2001456a:	1800                	addi	s0,sp,48
2001456c:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:825
    uintptr_t mepc;
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
20014570:	341027f3          	csrr	a5,mepc
20014574:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:826
    return mepc;
20014578:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:827
}
2001457c:	853e                	mv	a0,a5
2001457e:	5432                	lw	s0,44(sp)
20014580:	6145                	addi	sp,sp,48
20014582:	8082                	ret

20014584 <__metal_driver_cpu_set_exception_pc>:
__metal_driver_cpu_set_exception_pc():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:829

int __metal_driver_cpu_set_exception_pc(struct metal_cpu *cpu, uintptr_t mepc) {
20014584:	1101                	addi	sp,sp,-32
20014586:	ce22                	sw	s0,28(sp)
20014588:	1000                	addi	s0,sp,32
2001458a:	fea42623          	sw	a0,-20(s0)
2001458e:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:830
    __asm__ volatile("csrw mepc, %0" ::"r"(mepc));
20014592:	fe842783          	lw	a5,-24(s0)
20014596:	34179073          	csrw	mepc,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:831
    return 0;
2001459a:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:832
}
2001459c:	853e                	mv	a0,a5
2001459e:	4472                	lw	s0,28(sp)
200145a0:	6105                	addi	sp,sp,32
200145a2:	8082                	ret

200145a4 <__metal_driver_cpu_get_buserror>:
__metal_driver_cpu_get_buserror():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:834

struct metal_buserror *__metal_driver_cpu_get_buserror(struct metal_cpu *cpu) {
200145a4:	1101                	addi	sp,sp,-32
200145a6:	ce06                	sw	ra,28(sp)
200145a8:	cc22                	sw	s0,24(sp)
200145aa:	1000                	addi	s0,sp,32
200145ac:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:835
    return __metal_driver_cpu_buserror(cpu);
200145b0:	fec42503          	lw	a0,-20(s0)
200145b4:	e6afe0ef          	jal	ra,20012c1e <__metal_driver_cpu_buserror>
200145b8:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_cpu.c:836
}
200145ba:	853e                	mv	a0,a5
200145bc:	40f2                	lw	ra,28(sp)
200145be:	4462                	lw	s0,24(sp)
200145c0:	6105                	addi	sp,sp,32
200145c2:	8082                	ret

200145c4 <__metal_driver_sifive_plic0_control_base>:
__metal_driver_sifive_plic0_control_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:345



/* --------------------- sifive_plic0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_plic0_control_base(struct metal_interrupt *controller)
{
200145c4:	1101                	addi	sp,sp,-32
200145c6:	ce22                	sw	s0,28(sp)
200145c8:	1000                	addi	s0,sp,32
200145ca:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:346
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
200145ce:	fec42703          	lw	a4,-20(s0)
200145d2:	800007b7          	lui	a5,0x80000
200145d6:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffeca0>
200145da:	00f71563          	bne	a4,a5,200145e4 <__metal_driver_sifive_plic0_control_base+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:347
		return METAL_RISCV_PLIC0_C000000_BASE_ADDRESS;
200145de:	0c0007b7          	lui	a5,0xc000
200145e2:	a011                	j	200145e6 <__metal_driver_sifive_plic0_control_base+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:350
	}
	else {
		return 0;
200145e4:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:352
	}
}
200145e6:	853e                	mv	a0,a5
200145e8:	4472                	lw	s0,28(sp)
200145ea:	6105                	addi	sp,sp,32
200145ec:	8082                	ret

200145ee <__metal_driver_sifive_plic0_num_interrupts>:
__metal_driver_sifive_plic0_num_interrupts():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:365
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_plic0_num_interrupts(struct metal_interrupt *controller)
{
200145ee:	1101                	addi	sp,sp,-32
200145f0:	ce22                	sw	s0,28(sp)
200145f2:	1000                	addi	s0,sp,32
200145f4:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:366
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
200145f8:	fec42703          	lw	a4,-20(s0)
200145fc:	800007b7          	lui	a5,0x80000
20014600:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffeca0>
20014604:	00f71563          	bne	a4,a5,2001460e <__metal_driver_sifive_plic0_num_interrupts+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:367
		return METAL_RISCV_PLIC0_C000000_RISCV_NDEV;
20014608:	03500793          	li	a5,53
2001460c:	a011                	j	20014610 <__metal_driver_sifive_plic0_num_interrupts+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:370
	}
	else {
		return 0;
2001460e:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:372
	}
}
20014610:	853e                	mv	a0,a5
20014612:	4472                	lw	s0,28(sp)
20014614:	6105                	addi	sp,sp,32
20014616:	8082                	ret

20014618 <__metal_driver_sifive_plic0_max_priority>:
__metal_driver_sifive_plic0_max_priority():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:375

static __inline__ int __metal_driver_sifive_plic0_max_priority(struct metal_interrupt *controller)
{
20014618:	1101                	addi	sp,sp,-32
2001461a:	ce22                	sw	s0,28(sp)
2001461c:	1000                	addi	s0,sp,32
2001461e:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:376
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20014622:	fec42703          	lw	a4,-20(s0)
20014626:	800007b7          	lui	a5,0x80000
2001462a:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffeca0>
2001462e:	00f71463          	bne	a4,a5,20014636 <__metal_driver_sifive_plic0_max_priority+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:377
		return METAL_RISCV_PLIC0_C000000_RISCV_MAX_PRIORITY;
20014632:	479d                	li	a5,7
20014634:	a011                	j	20014638 <__metal_driver_sifive_plic0_max_priority+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:380
	}
	else {
		return 0;
20014636:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:382
	}
}
20014638:	853e                	mv	a0,a5
2001463a:	4472                	lw	s0,28(sp)
2001463c:	6105                	addi	sp,sp,32
2001463e:	8082                	ret

20014640 <__metal_driver_sifive_plic0_interrupt_parents>:
__metal_driver_sifive_plic0_interrupt_parents():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:385

static __inline__ struct metal_interrupt * __metal_driver_sifive_plic0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
20014640:	1101                	addi	sp,sp,-32
20014642:	ce22                	sw	s0,28(sp)
20014644:	1000                	addi	s0,sp,32
20014646:	fea42623          	sw	a0,-20(s0)
2001464a:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:386
	if (idx == 0) {
2001464e:	fe842783          	lw	a5,-24(s0)
20014652:	e791                	bnez	a5,2001465e <__metal_driver_sifive_plic0_interrupt_parents+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:387
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20014654:	800007b7          	lui	a5,0x80000
20014658:	09078793          	addi	a5,a5,144 # 80000090 <metal_segment_heap_target_end+0xffffe8d0>
2001465c:	a011                	j	20014660 <__metal_driver_sifive_plic0_interrupt_parents+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:390
	}
	else {
		return NULL;
2001465e:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:392
	}
}
20014660:	853e                	mv	a0,a5
20014662:	4472                	lw	s0,28(sp)
20014664:	6105                	addi	sp,sp,32
20014666:	8082                	ret

20014668 <__metal_driver_sifive_plic0_interrupt_lines>:
__metal_driver_sifive_plic0_interrupt_lines():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:395

static __inline__ int __metal_driver_sifive_plic0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
20014668:	1101                	addi	sp,sp,-32
2001466a:	ce22                	sw	s0,28(sp)
2001466c:	1000                	addi	s0,sp,32
2001466e:	fea42623          	sw	a0,-20(s0)
20014672:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:396
	if (idx == 0) {
20014676:	fe842783          	lw	a5,-24(s0)
2001467a:	e399                	bnez	a5,20014680 <__metal_driver_sifive_plic0_interrupt_lines+0x18>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:397
		return 11;
2001467c:	47ad                	li	a5,11
2001467e:	a011                	j	20014682 <__metal_driver_sifive_plic0_interrupt_lines+0x1a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:400
	}
	else {
		return 0;
20014680:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:402
	}
}
20014682:	853e                	mv	a0,a5
20014684:	4472                	lw	s0,28(sp)
20014686:	6105                	addi	sp,sp,32
20014688:	8082                	ret

2001468a <__metal_driver_sifive_plic0_context_ids>:
__metal_driver_sifive_plic0_context_ids():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:405

static __inline__ int __metal_driver_sifive_plic0_context_ids(int hartid)
{
2001468a:	1101                	addi	sp,sp,-32
2001468c:	ce22                	sw	s0,28(sp)
2001468e:	1000                	addi	s0,sp,32
20014690:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:406
	if (hartid == 0) {
20014694:	fec42783          	lw	a5,-20(s0)
20014698:	e399                	bnez	a5,2001469e <__metal_driver_sifive_plic0_context_ids+0x14>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:407
		return 0;
2001469a:	4781                	li	a5,0
2001469c:	a011                	j	200146a0 <__metal_driver_sifive_plic0_context_ids+0x16>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:410
	}
	else {
		return -1;
2001469e:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:412
	}
}
200146a0:	853e                	mv	a0,a5
200146a2:	4472                	lw	s0,28(sp)
200146a4:	6105                	addi	sp,sp,32
200146a6:	8082                	ret

200146a8 <__metal_plic0_claim_interrupt>:
__metal_plic0_claim_interrupt():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:18
#include <metal/machine.h>
#include <metal/shutdown.h>

unsigned int
__metal_plic0_claim_interrupt(struct __metal_driver_riscv_plic0 *plic,
                              int context_id) {
200146a8:	7179                	addi	sp,sp,-48
200146aa:	d606                	sw	ra,44(sp)
200146ac:	d422                	sw	s0,40(sp)
200146ae:	1800                	addi	s0,sp,48
200146b0:	fca42e23          	sw	a0,-36(s0)
200146b4:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:19
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
200146b8:	fdc42503          	lw	a0,-36(s0)
200146bc:	3721                	jal	200145c4 <__metal_driver_sifive_plic0_control_base>
200146be:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:21
        (struct metal_interrupt *)plic);
    return __METAL_ACCESS_ONCE(
200146c2:	fd842783          	lw	a5,-40(s0)
200146c6:	00c79713          	slli	a4,a5,0xc
200146ca:	fec42783          	lw	a5,-20(s0)
200146ce:	973e                	add	a4,a4,a5
200146d0:	002007b7          	lui	a5,0x200
200146d4:	0791                	addi	a5,a5,4
200146d6:	97ba                	add	a5,a5,a4
200146d8:	439c                	lw	a5,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:25
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM));
}
200146da:	853e                	mv	a0,a5
200146dc:	50b2                	lw	ra,44(sp)
200146de:	5422                	lw	s0,40(sp)
200146e0:	6145                	addi	sp,sp,48
200146e2:	8082                	ret

200146e4 <__metal_plic0_complete_interrupt>:
__metal_plic0_complete_interrupt():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:28

void __metal_plic0_complete_interrupt(struct __metal_driver_riscv_plic0 *plic,
                                      int context_id, unsigned int id) {
200146e4:	7179                	addi	sp,sp,-48
200146e6:	d606                	sw	ra,44(sp)
200146e8:	d422                	sw	s0,40(sp)
200146ea:	1800                	addi	s0,sp,48
200146ec:	fca42e23          	sw	a0,-36(s0)
200146f0:	fcb42c23          	sw	a1,-40(s0)
200146f4:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:29
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
200146f8:	fdc42503          	lw	a0,-36(s0)
200146fc:	35e1                	jal	200145c4 <__metal_driver_sifive_plic0_control_base>
200146fe:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:31
        (struct metal_interrupt *)plic);
    __METAL_ACCESS_ONCE(
20014702:	fd842783          	lw	a5,-40(s0)
20014706:	00c79713          	slli	a4,a5,0xc
2001470a:	fec42783          	lw	a5,-20(s0)
2001470e:	973e                	add	a4,a4,a5
20014710:	002007b7          	lui	a5,0x200
20014714:	0791                	addi	a5,a5,4
20014716:	97ba                	add	a5,a5,a4
20014718:	873e                	mv	a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:34
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM)) = id;
2001471a:	fd442783          	lw	a5,-44(s0)
2001471e:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:35
}
20014720:	0001                	nop
20014722:	50b2                	lw	ra,44(sp)
20014724:	5422                	lw	s0,40(sp)
20014726:	6145                	addi	sp,sp,48
20014728:	8082                	ret

2001472a <__metal_plic0_set_threshold>:
__metal_plic0_set_threshold():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:38

int __metal_plic0_set_threshold(struct metal_interrupt *controller,
                                int context_id, unsigned int threshold) {
2001472a:	7179                	addi	sp,sp,-48
2001472c:	d606                	sw	ra,44(sp)
2001472e:	d422                	sw	s0,40(sp)
20014730:	1800                	addi	s0,sp,48
20014732:	fca42e23          	sw	a0,-36(s0)
20014736:	fcb42c23          	sw	a1,-40(s0)
2001473a:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:40
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
2001473e:	fdc42503          	lw	a0,-36(s0)
20014742:	3549                	jal	200145c4 <__metal_driver_sifive_plic0_control_base>
20014744:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:41
    __METAL_ACCESS_ONCE(
20014748:	fd842783          	lw	a5,-40(s0)
2001474c:	00c79713          	slli	a4,a5,0xc
20014750:	fec42783          	lw	a5,-20(s0)
20014754:	973e                	add	a4,a4,a5
20014756:	002007b7          	lui	a5,0x200
2001475a:	97ba                	add	a5,a5,a4
2001475c:	873e                	mv	a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:44
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD)) = threshold;
2001475e:	fd442783          	lw	a5,-44(s0)
20014762:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:45
    return 0;
20014764:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:46
}
20014766:	853e                	mv	a0,a5
20014768:	50b2                	lw	ra,44(sp)
2001476a:	5422                	lw	s0,40(sp)
2001476c:	6145                	addi	sp,sp,48
2001476e:	8082                	ret

20014770 <__metal_plic0_get_threshold>:
__metal_plic0_get_threshold():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:49

unsigned int __metal_plic0_get_threshold(struct metal_interrupt *controller,
                                         int context_id) {
20014770:	7179                	addi	sp,sp,-48
20014772:	d606                	sw	ra,44(sp)
20014774:	d422                	sw	s0,40(sp)
20014776:	1800                	addi	s0,sp,48
20014778:	fca42e23          	sw	a0,-36(s0)
2001477c:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:51
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
20014780:	fdc42503          	lw	a0,-36(s0)
20014784:	3581                	jal	200145c4 <__metal_driver_sifive_plic0_control_base>
20014786:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:52
    return __METAL_ACCESS_ONCE(
2001478a:	fd842783          	lw	a5,-40(s0)
2001478e:	00c79713          	slli	a4,a5,0xc
20014792:	fec42783          	lw	a5,-20(s0)
20014796:	973e                	add	a4,a4,a5
20014798:	002007b7          	lui	a5,0x200
2001479c:	97ba                	add	a5,a5,a4
2001479e:	439c                	lw	a5,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:56
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD));
}
200147a0:	853e                	mv	a0,a5
200147a2:	50b2                	lw	ra,44(sp)
200147a4:	5422                	lw	s0,40(sp)
200147a6:	6145                	addi	sp,sp,48
200147a8:	8082                	ret

200147aa <__metal_driver_riscv_plic0_set_priority>:
__metal_driver_riscv_plic0_set_priority():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:59

int __metal_driver_riscv_plic0_set_priority(struct metal_interrupt *controller,
                                            int id, unsigned int priority) {
200147aa:	7179                	addi	sp,sp,-48
200147ac:	d606                	sw	ra,44(sp)
200147ae:	d422                	sw	s0,40(sp)
200147b0:	1800                	addi	s0,sp,48
200147b2:	fca42e23          	sw	a0,-36(s0)
200147b6:	fcb42c23          	sw	a1,-40(s0)
200147ba:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:60
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
200147be:	fdc42503          	lw	a0,-36(s0)
200147c2:	3509                	jal	200145c4 <__metal_driver_sifive_plic0_control_base>
200147c4:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:62
        (struct metal_interrupt *)controller);
    unsigned int max_priority = __metal_driver_sifive_plic0_max_priority(
200147c8:	fdc42503          	lw	a0,-36(s0)
200147cc:	35b1                	jal	20014618 <__metal_driver_sifive_plic0_max_priority>
200147ce:	87aa                	mv	a5,a0
200147d0:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:64
        (struct metal_interrupt *)controller);
    if ((max_priority) && (priority < max_priority)) {
200147d4:	fe842783          	lw	a5,-24(s0)
200147d8:	c785                	beqz	a5,20014800 <__metal_driver_riscv_plic0_set_priority+0x56>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:64 (discriminator 1)
200147da:	fd442703          	lw	a4,-44(s0)
200147de:	fe842783          	lw	a5,-24(s0)
200147e2:	00f77f63          	bgeu	a4,a5,20014800 <__metal_driver_riscv_plic0_set_priority+0x56>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:65
        __METAL_ACCESS_ONCE(
200147e6:	fd842783          	lw	a5,-40(s0)
200147ea:	078a                	slli	a5,a5,0x2
200147ec:	873e                	mv	a4,a5
200147ee:	fec42783          	lw	a5,-20(s0)
200147f2:	97ba                	add	a5,a5,a4
200147f4:	873e                	mv	a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:67
            (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                               (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT))) =
200147f6:	fd442783          	lw	a5,-44(s0)
200147fa:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:69
            priority;
        return 0;
200147fc:	4781                	li	a5,0
200147fe:	a011                	j	20014802 <__metal_driver_riscv_plic0_set_priority+0x58>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:71
    }
    return -1;
20014800:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:72
}
20014802:	853e                	mv	a0,a5
20014804:	50b2                	lw	ra,44(sp)
20014806:	5422                	lw	s0,40(sp)
20014808:	6145                	addi	sp,sp,48
2001480a:	8082                	ret

2001480c <__metal_driver_riscv_plic0_get_priority>:
__metal_driver_riscv_plic0_get_priority():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:76

unsigned int
__metal_driver_riscv_plic0_get_priority(struct metal_interrupt *controller,
                                        int id) {
2001480c:	7179                	addi	sp,sp,-48
2001480e:	d606                	sw	ra,44(sp)
20014810:	d422                	sw	s0,40(sp)
20014812:	1800                	addi	s0,sp,48
20014814:	fca42e23          	sw	a0,-36(s0)
20014818:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:78
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
2001481c:	fdc42503          	lw	a0,-36(s0)
20014820:	3355                	jal	200145c4 <__metal_driver_sifive_plic0_control_base>
20014822:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:80

    return __METAL_ACCESS_ONCE(
20014826:	fd842783          	lw	a5,-40(s0)
2001482a:	078a                	slli	a5,a5,0x2
2001482c:	873e                	mv	a4,a5
2001482e:	fec42783          	lw	a5,-20(s0)
20014832:	97ba                	add	a5,a5,a4
20014834:	439c                	lw	a5,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:83
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                           (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT)));
}
20014836:	853e                	mv	a0,a5
20014838:	50b2                	lw	ra,44(sp)
2001483a:	5422                	lw	s0,40(sp)
2001483c:	6145                	addi	sp,sp,48
2001483e:	8082                	ret

20014840 <__metal_plic0_enable>:
__metal_plic0_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:86

int __metal_plic0_enable(struct __metal_driver_riscv_plic0 *plic,
                         int context_id, int id, int enable) {
20014840:	7179                	addi	sp,sp,-48
20014842:	d606                	sw	ra,44(sp)
20014844:	d422                	sw	s0,40(sp)
20014846:	1800                	addi	s0,sp,48
20014848:	fca42e23          	sw	a0,-36(s0)
2001484c:	fcb42c23          	sw	a1,-40(s0)
20014850:	fcc42a23          	sw	a2,-44(s0)
20014854:	fcd42823          	sw	a3,-48(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:88
    unsigned int current;
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20014858:	fdc42503          	lw	a0,-36(s0)
2001485c:	33a5                	jal	200145c4 <__metal_driver_sifive_plic0_control_base>
2001485e:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:91
        (struct metal_interrupt *)plic);

    current = __METAL_ACCESS_ONCE(
20014862:	fd842783          	lw	a5,-40(s0)
20014866:	00779713          	slli	a4,a5,0x7
2001486a:	fec42783          	lw	a5,-20(s0)
2001486e:	97ba                	add	a5,a5,a4
20014870:	fd442703          	lw	a4,-44(s0)
20014874:	8715                	srai	a4,a4,0x5
20014876:	070a                	slli	a4,a4,0x2
20014878:	973e                	add	a4,a4,a5
2001487a:	6789                	lui	a5,0x2
2001487c:	97ba                	add	a5,a5,a4
2001487e:	439c                	lw	a5,0(a5)
20014880:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:100
    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_ENABLE_BASE +
                           (context_id * METAL_RISCV_PLIC0_ENABLE_PER_HART) +
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
20014884:	fd042783          	lw	a5,-48(s0)
20014888:	cf81                	beqz	a5,200148a0 <__metal_plic0_enable+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:99 (discriminator 1)
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
2001488a:	fd442783          	lw	a5,-44(s0)
2001488e:	8bfd                	andi	a5,a5,31
20014890:	4705                	li	a4,1
20014892:	00f717b3          	sll	a5,a4,a5
20014896:	873e                	mv	a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 1)
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
20014898:	fe842783          	lw	a5,-24(s0)
2001489c:	8fd9                	or	a5,a5,a4
2001489e:	a829                	j	200148b8 <__metal_plic0_enable+0x78>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 2)
200148a0:	fd442783          	lw	a5,-44(s0)
200148a4:	8bfd                	andi	a5,a5,31
200148a6:	4705                	li	a4,1
200148a8:	00f717b3          	sll	a5,a4,a5
200148ac:	fff7c793          	not	a5,a5
200148b0:	873e                	mv	a4,a5
200148b2:	fe842783          	lw	a5,-24(s0)
200148b6:	8ff9                	and	a5,a5,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:95
    __METAL_ACCESS_ONCE(
200148b8:	fd842703          	lw	a4,-40(s0)
200148bc:	00771693          	slli	a3,a4,0x7
200148c0:	fec42703          	lw	a4,-20(s0)
200148c4:	9736                	add	a4,a4,a3
200148c6:	fd442683          	lw	a3,-44(s0)
200148ca:	8695                	srai	a3,a3,0x5
200148cc:	068a                	slli	a3,a3,0x2
200148ce:	96ba                	add	a3,a3,a4
200148d0:	6709                	lui	a4,0x2
200148d2:	9736                	add	a4,a4,a3
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:98
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
200148d4:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:102

    return 0;
200148d6:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:103
}
200148d8:	853e                	mv	a0,a5
200148da:	50b2                	lw	ra,44(sp)
200148dc:	5422                	lw	s0,40(sp)
200148de:	6145                	addi	sp,sp,48
200148e0:	8082                	ret

200148e2 <__metal_plic0_default_handler>:
__metal_plic0_default_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:105

void __metal_plic0_default_handler(int id, void *priv) { metal_shutdown(300); }
200148e2:	1101                	addi	sp,sp,-32
200148e4:	ce06                	sw	ra,28(sp)
200148e6:	cc22                	sw	s0,24(sp)
200148e8:	1000                	addi	s0,sp,32
200148ea:	fea42623          	sw	a0,-20(s0)
200148ee:	feb42423          	sw	a1,-24(s0)
200148f2:	12c00513          	li	a0,300
200148f6:	543020ef          	jal	ra,20017638 <metal_shutdown>

200148fa <__metal_plic0_handler>:
__metal_plic0_handler():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:107

void __metal_plic0_handler(int id, void *priv) {
200148fa:	7179                	addi	sp,sp,-48
200148fc:	d606                	sw	ra,44(sp)
200148fe:	d422                	sw	s0,40(sp)
20014900:	1800                	addi	s0,sp,48
20014902:	fca42e23          	sw	a0,-36(s0)
20014906:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:108
    struct __metal_driver_riscv_plic0 *plic = priv;
2001490a:	fd842783          	lw	a5,-40(s0)
2001490e:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:110
    int contextid =
        __metal_driver_sifive_plic0_context_ids(__metal_myhart_id());
20014912:	b60fe0ef          	jal	ra,20012c72 <__metal_myhart_id>
20014916:	87aa                	mv	a5,a0
20014918:	853e                	mv	a0,a5
2001491a:	3b85                	jal	2001468a <__metal_driver_sifive_plic0_context_ids>
2001491c:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:111
    unsigned int idx = __metal_plic0_claim_interrupt(plic, contextid);
20014920:	fe842583          	lw	a1,-24(s0)
20014924:	fec42503          	lw	a0,-20(s0)
20014928:	3341                	jal	200146a8 <__metal_plic0_claim_interrupt>
2001492a:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:112
    unsigned int num_interrupts = __metal_driver_sifive_plic0_num_interrupts(
2001492e:	fec42503          	lw	a0,-20(s0)
20014932:	3975                	jal	200145ee <__metal_driver_sifive_plic0_num_interrupts>
20014934:	87aa                	mv	a5,a0
20014936:	fef42023          	sw	a5,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:115
        (struct metal_interrupt *)plic);

    if ((idx < num_interrupts) && (plic->metal_exint_table[idx])) {
2001493a:	fe442703          	lw	a4,-28(s0)
2001493e:	fe042783          	lw	a5,-32(s0)
20014942:	04f77263          	bgeu	a4,a5,20014986 <__metal_plic0_handler+0x8c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:115 (discriminator 1)
20014946:	fec42703          	lw	a4,-20(s0)
2001494a:	fe442783          	lw	a5,-28(s0)
2001494e:	078a                	slli	a5,a5,0x2
20014950:	97ba                	add	a5,a5,a4
20014952:	479c                	lw	a5,8(a5)
20014954:	cb8d                	beqz	a5,20014986 <__metal_plic0_handler+0x8c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:116
        plic->metal_exint_table[idx](idx,
20014956:	fec42703          	lw	a4,-20(s0)
2001495a:	fe442783          	lw	a5,-28(s0)
2001495e:	078a                	slli	a5,a5,0x2
20014960:	97ba                	add	a5,a5,a4
20014962:	0087a803          	lw	a6,8(a5) # 2008 <__heap_size+0x1808>
20014966:	fe442603          	lw	a2,-28(s0)
2001496a:	fec42683          	lw	a3,-20(s0)
2001496e:	fe442703          	lw	a4,-28(s0)
20014972:	87ba                	mv	a5,a4
20014974:	0786                	slli	a5,a5,0x1
20014976:	97ba                	add	a5,a5,a4
20014978:	078e                	slli	a5,a5,0x3
2001497a:	97b6                	add	a5,a5,a3
2001497c:	0f07a783          	lw	a5,240(a5)
20014980:	85be                	mv	a1,a5
20014982:	8532                	mv	a0,a2
20014984:	9802                	jalr	a6
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:120
                                     plic->metal_exdata_table[idx].exint_data);
    }

    __metal_plic0_complete_interrupt(plic, contextid, idx);
20014986:	fe442603          	lw	a2,-28(s0)
2001498a:	fe842583          	lw	a1,-24(s0)
2001498e:	fec42503          	lw	a0,-20(s0)
20014992:	3b89                	jal	200146e4 <__metal_plic0_complete_interrupt>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:121
}
20014994:	0001                	nop
20014996:	50b2                	lw	ra,44(sp)
20014998:	5422                	lw	s0,40(sp)
2001499a:	6145                	addi	sp,sp,48
2001499c:	8082                	ret

2001499e <__metal_driver_riscv_plic0_init>:
__metal_driver_riscv_plic0_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:123

void __metal_driver_riscv_plic0_init(struct metal_interrupt *controller) {
2001499e:	7139                	addi	sp,sp,-64
200149a0:	de06                	sw	ra,60(sp)
200149a2:	dc22                	sw	s0,56(sp)
200149a4:	0080                	addi	s0,sp,64
200149a6:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:124
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
200149aa:	fcc42783          	lw	a5,-52(s0)
200149ae:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:126

    if (!plic->init_done) {
200149b2:	fe442783          	lw	a5,-28(s0)
200149b6:	43dc                	lw	a5,4(a5)
200149b8:	12079763          	bnez	a5,20014ae6 <__metal_driver_riscv_plic0_init+0x148>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:130
        int num_interrupts, line;
        struct metal_interrupt *intc;

        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
200149bc:	fe042623          	sw	zero,-20(s0)
200149c0:	aa19                	j	20014ad6 <__metal_driver_riscv_plic0_init+0x138>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:132
            num_interrupts =
                __metal_driver_sifive_plic0_num_interrupts(controller);
200149c2:	fcc42503          	lw	a0,-52(s0)
200149c6:	c29ff0ef          	jal	ra,200145ee <__metal_driver_sifive_plic0_num_interrupts>
200149ca:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:133
            intc = __metal_driver_sifive_plic0_interrupt_parents(controller,
200149ce:	fec42583          	lw	a1,-20(s0)
200149d2:	fcc42503          	lw	a0,-52(s0)
200149d6:	31ad                	jal	20014640 <__metal_driver_sifive_plic0_interrupt_parents>
200149d8:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:136
                                                                 parent);
            line =
                __metal_driver_sifive_plic0_interrupt_lines(controller, parent);
200149dc:	fec42583          	lw	a1,-20(s0)
200149e0:	fcc42503          	lw	a0,-52(s0)
200149e4:	3151                	jal	20014668 <__metal_driver_sifive_plic0_interrupt_lines>
200149e6:	fca42c23          	sw	a0,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:139

            /* Initialize ist parent controller, aka cpu_intc. */
            intc->vtable->interrupt_init(intc);
200149ea:	fdc42783          	lw	a5,-36(s0)
200149ee:	439c                	lw	a5,0(a5)
200149f0:	439c                	lw	a5,0(a5)
200149f2:	fdc42503          	lw	a0,-36(s0)
200149f6:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:141

            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
200149f8:	fe042423          	sw	zero,-24(s0)
200149fc:	a885                	j	20014a6c <__metal_driver_riscv_plic0_init+0xce>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:142
                __metal_plic0_enable(plic, parent, i, METAL_DISABLE);
200149fe:	4681                	li	a3,0
20014a00:	fe842603          	lw	a2,-24(s0)
20014a04:	fec42583          	lw	a1,-20(s0)
20014a08:	fe442503          	lw	a0,-28(s0)
20014a0c:	3d15                	jal	20014840 <__metal_plic0_enable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:143
                if (i < num_interrupts) {
20014a0e:	fe842703          	lw	a4,-24(s0)
20014a12:	fe042783          	lw	a5,-32(s0)
20014a16:	04f75663          	bge	a4,a5,20014a62 <__metal_driver_riscv_plic0_init+0xc4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:144
                    __metal_driver_riscv_plic0_set_priority(controller, i, 0);
20014a1a:	4601                	li	a2,0
20014a1c:	fe842583          	lw	a1,-24(s0)
20014a20:	fcc42503          	lw	a0,-52(s0)
20014a24:	3359                	jal	200147aa <__metal_driver_riscv_plic0_set_priority>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:145
                    plic->metal_exint_table[i] = NULL;
20014a26:	fe442703          	lw	a4,-28(s0)
20014a2a:	fe842783          	lw	a5,-24(s0)
20014a2e:	078a                	slli	a5,a5,0x2
20014a30:	97ba                	add	a5,a5,a4
20014a32:	0007a423          	sw	zero,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:146
                    plic->metal_exdata_table[i].sub_int = NULL;
20014a36:	fe442683          	lw	a3,-28(s0)
20014a3a:	fe842703          	lw	a4,-24(s0)
20014a3e:	87ba                	mv	a5,a4
20014a40:	0786                	slli	a5,a5,0x1
20014a42:	97ba                	add	a5,a5,a4
20014a44:	078e                	slli	a5,a5,0x3
20014a46:	97b6                	add	a5,a5,a3
20014a48:	0e07a623          	sw	zero,236(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:147
                    plic->metal_exdata_table[i].exint_data = NULL;
20014a4c:	fe442683          	lw	a3,-28(s0)
20014a50:	fe842703          	lw	a4,-24(s0)
20014a54:	87ba                	mv	a5,a4
20014a56:	0786                	slli	a5,a5,0x1
20014a58:	97ba                	add	a5,a5,a4
20014a5a:	078e                	slli	a5,a5,0x3
20014a5c:	97b6                	add	a5,a5,a3
20014a5e:	0e07a823          	sw	zero,240(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 2)
            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
20014a62:	fe842783          	lw	a5,-24(s0)
20014a66:	0785                	addi	a5,a5,1
20014a68:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 1)
20014a6c:	fe842703          	lw	a4,-24(s0)
20014a70:	3ff00793          	li	a5,1023
20014a74:	f8e7d5e3          	bge	a5,a4,200149fe <__metal_driver_riscv_plic0_init+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:151 (discriminator 2)
                }
            }

            __metal_plic0_set_threshold(controller, parent, 0);
20014a78:	4601                	li	a2,0
20014a7a:	fec42583          	lw	a1,-20(s0)
20014a7e:	fcc42503          	lw	a0,-52(s0)
20014a82:	3165                	jal	2001472a <__metal_plic0_set_threshold>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:154 (discriminator 2)

            /* Register plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_register(intc, line, NULL, plic);
20014a84:	fdc42783          	lw	a5,-36(s0)
20014a88:	439c                	lw	a5,0(a5)
20014a8a:	4fdc                	lw	a5,28(a5)
20014a8c:	fe442683          	lw	a3,-28(s0)
20014a90:	4601                	li	a2,0
20014a92:	fd842583          	lw	a1,-40(s0)
20014a96:	fdc42503          	lw	a0,-36(s0)
20014a9a:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:156 (discriminator 2)
            /* Register plic handler for dispatching its device interrupts */
            intc->vtable->interrupt_register(intc, line, __metal_plic0_handler,
20014a9c:	fdc42783          	lw	a5,-36(s0)
20014aa0:	439c                	lw	a5,0(a5)
20014aa2:	4fd8                	lw	a4,28(a5)
20014aa4:	fe442683          	lw	a3,-28(s0)
20014aa8:	200157b7          	lui	a5,0x20015
20014aac:	8fa78613          	addi	a2,a5,-1798 # 200148fa <__metal_plic0_handler>
20014ab0:	fd842583          	lw	a1,-40(s0)
20014ab4:	fdc42503          	lw	a0,-36(s0)
20014ab8:	9702                	jalr	a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:159 (discriminator 2)
                                             plic);
            /* Enable plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_enable(intc, line);
20014aba:	fdc42783          	lw	a5,-36(s0)
20014abe:	439c                	lw	a5,0(a5)
20014ac0:	53dc                	lw	a5,36(a5)
20014ac2:	fd842583          	lw	a1,-40(s0)
20014ac6:	fdc42503          	lw	a0,-36(s0)
20014aca:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 2)
        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
20014acc:	fec42783          	lw	a5,-20(s0)
20014ad0:	0785                	addi	a5,a5,1
20014ad2:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 1)
20014ad6:	fec42783          	lw	a5,-20(s0)
20014ada:	eef054e3          	blez	a5,200149c2 <__metal_driver_riscv_plic0_init+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:161
        }
        plic->init_done = 1;
20014ade:	fe442783          	lw	a5,-28(s0)
20014ae2:	4705                	li	a4,1
20014ae4:	c3d8                	sw	a4,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:163
    }
}
20014ae6:	0001                	nop
20014ae8:	50f2                	lw	ra,60(sp)
20014aea:	5462                	lw	s0,56(sp)
20014aec:	6121                	addi	sp,sp,64
20014aee:	8082                	ret

20014af0 <__metal_driver_riscv_plic0_register>:
__metal_driver_riscv_plic0_register():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:167

int __metal_driver_riscv_plic0_register(struct metal_interrupt *controller,
                                        int id, metal_interrupt_handler_t isr,
                                        void *priv) {
20014af0:	7179                	addi	sp,sp,-48
20014af2:	d606                	sw	ra,44(sp)
20014af4:	d422                	sw	s0,40(sp)
20014af6:	1800                	addi	s0,sp,48
20014af8:	fca42e23          	sw	a0,-36(s0)
20014afc:	fcb42c23          	sw	a1,-40(s0)
20014b00:	fcc42a23          	sw	a2,-44(s0)
20014b04:	fcd42823          	sw	a3,-48(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:168
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20014b08:	fdc42783          	lw	a5,-36(s0)
20014b0c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:170

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20014b10:	fdc42503          	lw	a0,-36(s0)
20014b14:	adbff0ef          	jal	ra,200145ee <__metal_driver_sifive_plic0_num_interrupts>
20014b18:	872a                	mv	a4,a0
20014b1a:	fd842783          	lw	a5,-40(s0)
20014b1e:	00e7c463          	blt	a5,a4,20014b26 <__metal_driver_riscv_plic0_register+0x36>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:171
        return -1;
20014b22:	57fd                	li	a5,-1
20014b24:	a051                	j	20014ba8 <__metal_driver_riscv_plic0_register+0xb8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:174
    }

    if (isr) {
20014b26:	fd442783          	lw	a5,-44(s0)
20014b2a:	cf9d                	beqz	a5,20014b68 <__metal_driver_riscv_plic0_register+0x78>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:175
        __metal_driver_riscv_plic0_set_priority(controller, id, 2);
20014b2c:	4609                	li	a2,2
20014b2e:	fd842583          	lw	a1,-40(s0)
20014b32:	fdc42503          	lw	a0,-36(s0)
20014b36:	c75ff0ef          	jal	ra,200147aa <__metal_driver_riscv_plic0_set_priority>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:176
        plic->metal_exint_table[id] = isr;
20014b3a:	fec42703          	lw	a4,-20(s0)
20014b3e:	fd842783          	lw	a5,-40(s0)
20014b42:	078a                	slli	a5,a5,0x2
20014b44:	97ba                	add	a5,a5,a4
20014b46:	fd442703          	lw	a4,-44(s0)
20014b4a:	c798                	sw	a4,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:177
        plic->metal_exdata_table[id].exint_data = priv;
20014b4c:	fec42683          	lw	a3,-20(s0)
20014b50:	fd842703          	lw	a4,-40(s0)
20014b54:	87ba                	mv	a5,a4
20014b56:	0786                	slli	a5,a5,0x1
20014b58:	97ba                	add	a5,a5,a4
20014b5a:	078e                	slli	a5,a5,0x3
20014b5c:	97b6                	add	a5,a5,a3
20014b5e:	fd042703          	lw	a4,-48(s0)
20014b62:	0ee7a823          	sw	a4,240(a5)
20014b66:	a081                	j	20014ba6 <__metal_driver_riscv_plic0_register+0xb6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:179
    } else {
        __metal_driver_riscv_plic0_set_priority(controller, id, 1);
20014b68:	4605                	li	a2,1
20014b6a:	fd842583          	lw	a1,-40(s0)
20014b6e:	fdc42503          	lw	a0,-36(s0)
20014b72:	c39ff0ef          	jal	ra,200147aa <__metal_driver_riscv_plic0_set_priority>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:180
        plic->metal_exint_table[id] = __metal_plic0_default_handler;
20014b76:	fec42703          	lw	a4,-20(s0)
20014b7a:	fd842783          	lw	a5,-40(s0)
20014b7e:	078a                	slli	a5,a5,0x2
20014b80:	97ba                	add	a5,a5,a4
20014b82:	20015737          	lui	a4,0x20015
20014b86:	8e270713          	addi	a4,a4,-1822 # 200148e2 <__metal_plic0_default_handler>
20014b8a:	c798                	sw	a4,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:181
        plic->metal_exdata_table[id].sub_int = priv;
20014b8c:	fec42683          	lw	a3,-20(s0)
20014b90:	fd842703          	lw	a4,-40(s0)
20014b94:	87ba                	mv	a5,a4
20014b96:	0786                	slli	a5,a5,0x1
20014b98:	97ba                	add	a5,a5,a4
20014b9a:	078e                	slli	a5,a5,0x3
20014b9c:	97b6                	add	a5,a5,a3
20014b9e:	fd042703          	lw	a4,-48(s0)
20014ba2:	0ee7a623          	sw	a4,236(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:184
    }

    return 0;
20014ba6:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:185
}
20014ba8:	853e                	mv	a0,a5
20014baa:	50b2                	lw	ra,44(sp)
20014bac:	5422                	lw	s0,40(sp)
20014bae:	6145                	addi	sp,sp,48
20014bb0:	8082                	ret

20014bb2 <__metal_driver_riscv_plic0_enable>:
__metal_driver_riscv_plic0_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:188

int __metal_driver_riscv_plic0_enable(struct metal_interrupt *controller,
                                      int id) {
20014bb2:	7179                	addi	sp,sp,-48
20014bb4:	d606                	sw	ra,44(sp)
20014bb6:	d422                	sw	s0,40(sp)
20014bb8:	1800                	addi	s0,sp,48
20014bba:	fca42e23          	sw	a0,-36(s0)
20014bbe:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:189
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20014bc2:	fdc42783          	lw	a5,-36(s0)
20014bc6:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:191

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20014bca:	fdc42503          	lw	a0,-36(s0)
20014bce:	a21ff0ef          	jal	ra,200145ee <__metal_driver_sifive_plic0_num_interrupts>
20014bd2:	872a                	mv	a4,a0
20014bd4:	fd842783          	lw	a5,-40(s0)
20014bd8:	00e7c463          	blt	a5,a4,20014be0 <__metal_driver_riscv_plic0_enable+0x2e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:192
        return -1;
20014bdc:	57fd                	li	a5,-1
20014bde:	a829                	j	20014bf8 <__metal_driver_riscv_plic0_enable+0x46>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:195
    }

    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_ENABLE);
20014be0:	892fe0ef          	jal	ra,20012c72 <__metal_myhart_id>
20014be4:	87aa                	mv	a5,a0
20014be6:	4685                	li	a3,1
20014be8:	fd842603          	lw	a2,-40(s0)
20014bec:	85be                	mv	a1,a5
20014bee:	fec42503          	lw	a0,-20(s0)
20014bf2:	c4fff0ef          	jal	ra,20014840 <__metal_plic0_enable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:196
    return 0;
20014bf6:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:197
}
20014bf8:	853e                	mv	a0,a5
20014bfa:	50b2                	lw	ra,44(sp)
20014bfc:	5422                	lw	s0,40(sp)
20014bfe:	6145                	addi	sp,sp,48
20014c00:	8082                	ret

20014c02 <__metal_driver_riscv_plic0_disable>:
__metal_driver_riscv_plic0_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:200

int __metal_driver_riscv_plic0_disable(struct metal_interrupt *controller,
                                       int id) {
20014c02:	7179                	addi	sp,sp,-48
20014c04:	d606                	sw	ra,44(sp)
20014c06:	d422                	sw	s0,40(sp)
20014c08:	1800                	addi	s0,sp,48
20014c0a:	fca42e23          	sw	a0,-36(s0)
20014c0e:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:201
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20014c12:	fdc42783          	lw	a5,-36(s0)
20014c16:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:203

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20014c1a:	fdc42503          	lw	a0,-36(s0)
20014c1e:	9d1ff0ef          	jal	ra,200145ee <__metal_driver_sifive_plic0_num_interrupts>
20014c22:	872a                	mv	a4,a0
20014c24:	fd842783          	lw	a5,-40(s0)
20014c28:	00e7c463          	blt	a5,a4,20014c30 <__metal_driver_riscv_plic0_disable+0x2e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:204
        return -1;
20014c2c:	57fd                	li	a5,-1
20014c2e:	a829                	j	20014c48 <__metal_driver_riscv_plic0_disable+0x46>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:206
    }
    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_DISABLE);
20014c30:	842fe0ef          	jal	ra,20012c72 <__metal_myhart_id>
20014c34:	87aa                	mv	a5,a0
20014c36:	4681                	li	a3,0
20014c38:	fd842603          	lw	a2,-40(s0)
20014c3c:	85be                	mv	a1,a5
20014c3e:	fec42503          	lw	a0,-20(s0)
20014c42:	bffff0ef          	jal	ra,20014840 <__metal_plic0_enable>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:207
    return 0;
20014c46:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:208
}
20014c48:	853e                	mv	a0,a5
20014c4a:	50b2                	lw	ra,44(sp)
20014c4c:	5422                	lw	s0,40(sp)
20014c4e:	6145                	addi	sp,sp,48
20014c50:	8082                	ret

20014c52 <__metal_driver_riscv_plic0_set_threshold>:
__metal_driver_riscv_plic0_set_threshold():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:211

int __metal_driver_riscv_plic0_set_threshold(struct metal_interrupt *controller,
                                             unsigned int threshold) {
20014c52:	1101                	addi	sp,sp,-32
20014c54:	ce06                	sw	ra,28(sp)
20014c56:	cc22                	sw	s0,24(sp)
20014c58:	1000                	addi	s0,sp,32
20014c5a:	fea42623          	sw	a0,-20(s0)
20014c5e:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:212
    return __metal_plic0_set_threshold(controller, __metal_myhart_id(),
20014c62:	810fe0ef          	jal	ra,20012c72 <__metal_myhart_id>
20014c66:	87aa                	mv	a5,a0
20014c68:	fe842603          	lw	a2,-24(s0)
20014c6c:	85be                	mv	a1,a5
20014c6e:	fec42503          	lw	a0,-20(s0)
20014c72:	ab9ff0ef          	jal	ra,2001472a <__metal_plic0_set_threshold>
20014c76:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:214
                                       threshold);
}
20014c78:	853e                	mv	a0,a5
20014c7a:	40f2                	lw	ra,28(sp)
20014c7c:	4462                	lw	s0,24(sp)
20014c7e:	6105                	addi	sp,sp,32
20014c80:	8082                	ret

20014c82 <__metal_driver_riscv_plic0_get_threshold>:
__metal_driver_riscv_plic0_get_threshold():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:217

unsigned int
__metal_driver_riscv_plic0_get_threshold(struct metal_interrupt *controller) {
20014c82:	1101                	addi	sp,sp,-32
20014c84:	ce06                	sw	ra,28(sp)
20014c86:	cc22                	sw	s0,24(sp)
20014c88:	1000                	addi	s0,sp,32
20014c8a:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:218
    return __metal_plic0_get_threshold(controller, __metal_myhart_id());
20014c8e:	fe5fd0ef          	jal	ra,20012c72 <__metal_myhart_id>
20014c92:	87aa                	mv	a5,a0
20014c94:	85be                	mv	a1,a5
20014c96:	fec42503          	lw	a0,-20(s0)
20014c9a:	ad7ff0ef          	jal	ra,20014770 <__metal_plic0_get_threshold>
20014c9e:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:219
}
20014ca0:	853e                	mv	a0,a5
20014ca2:	40f2                	lw	ra,28(sp)
20014ca4:	4462                	lw	s0,24(sp)
20014ca6:	6105                	addi	sp,sp,32
20014ca8:	8082                	ret

20014caa <__metal_driver_riscv_plic0_affinity_enable>:
__metal_driver_riscv_plic0_affinity_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:223

metal_affinity
__metal_driver_riscv_plic0_affinity_enable(struct metal_interrupt *controller,
                                           metal_affinity bitmask, int id) {
20014caa:	7179                	addi	sp,sp,-48
20014cac:	d606                	sw	ra,44(sp)
20014cae:	d422                	sw	s0,40(sp)
20014cb0:	1800                	addi	s0,sp,48
20014cb2:	fca42e23          	sw	a0,-36(s0)
20014cb6:	fcb42c23          	sw	a1,-40(s0)
20014cba:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:224
    metal_affinity ret = {0};
20014cbe:	fe042223          	sw	zero,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:227
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20014cc2:	fdc42783          	lw	a5,-36(s0)
20014cc6:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:229

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20014cca:	fdc42503          	lw	a0,-36(s0)
20014cce:	921ff0ef          	jal	ra,200145ee <__metal_driver_sifive_plic0_num_interrupts>
20014cd2:	872a                	mv	a4,a0
20014cd4:	fd442783          	lw	a5,-44(s0)
20014cd8:	00e7c863          	blt	a5,a4,20014ce8 <__metal_driver_riscv_plic0_affinity_enable+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:230
        metal_affinity_set_val(ret, -1);
20014cdc:	57fd                	li	a5,-1
20014cde:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:231
        return ret;
20014ce2:	fe442783          	lw	a5,-28(s0)
20014ce6:	a899                	j	20014d3c <__metal_driver_riscv_plic0_affinity_enable+0x92>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:234
    }

    for_each_metal_affinity(context, bitmask) {
20014ce8:	fe042623          	sw	zero,-20(s0)
20014cec:	a099                	j	20014d32 <__metal_driver_riscv_plic0_affinity_enable+0x88>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:235
        if (context != 0)
20014cee:	fec42783          	lw	a5,-20(s0)
20014cf2:	c795                	beqz	a5,20014d1e <__metal_driver_riscv_plic0_affinity_enable+0x74>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:236
            metal_affinity_set_bit(
20014cf4:	4685                	li	a3,1
20014cf6:	fd442603          	lw	a2,-44(s0)
20014cfa:	fec42583          	lw	a1,-20(s0)
20014cfe:	fe842503          	lw	a0,-24(s0)
20014d02:	b3fff0ef          	jal	ra,20014840 <__metal_plic0_enable>
20014d06:	87aa                	mv	a5,a0
20014d08:	0017f713          	andi	a4,a5,1
20014d0c:	fec42783          	lw	a5,-20(s0)
20014d10:	00f71733          	sll	a4,a4,a5
20014d14:	fe442783          	lw	a5,-28(s0)
20014d18:	8fd9                	or	a5,a5,a4
20014d1a:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
20014d1e:	fec42783          	lw	a5,-20(s0)
20014d22:	0785                	addi	a5,a5,1
20014d24:	fef42623          	sw	a5,-20(s0)
20014d28:	fd842783          	lw	a5,-40(s0)
20014d2c:	8385                	srli	a5,a5,0x1
20014d2e:	fcf42c23          	sw	a5,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 1)
20014d32:	fd842783          	lw	a5,-40(s0)
20014d36:	ffc5                	bnez	a5,20014cee <__metal_driver_riscv_plic0_affinity_enable+0x44>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:241
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_ENABLE));
    }

    return ret;
20014d38:	fe442783          	lw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:242 (discriminator 1)
}
20014d3c:	853e                	mv	a0,a5
20014d3e:	50b2                	lw	ra,44(sp)
20014d40:	5422                	lw	s0,40(sp)
20014d42:	6145                	addi	sp,sp,48
20014d44:	8082                	ret

20014d46 <__metal_driver_riscv_plic0_affinity_disable>:
__metal_driver_riscv_plic0_affinity_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:246

metal_affinity
__metal_driver_riscv_plic0_affinity_disable(struct metal_interrupt *controller,
                                            metal_affinity bitmask, int id) {
20014d46:	7179                	addi	sp,sp,-48
20014d48:	d606                	sw	ra,44(sp)
20014d4a:	d422                	sw	s0,40(sp)
20014d4c:	1800                	addi	s0,sp,48
20014d4e:	fca42e23          	sw	a0,-36(s0)
20014d52:	fcb42c23          	sw	a1,-40(s0)
20014d56:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:247
    metal_affinity ret = {0};
20014d5a:	fe042223          	sw	zero,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:250
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20014d5e:	fdc42783          	lw	a5,-36(s0)
20014d62:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:252

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20014d66:	fdc42503          	lw	a0,-36(s0)
20014d6a:	885ff0ef          	jal	ra,200145ee <__metal_driver_sifive_plic0_num_interrupts>
20014d6e:	872a                	mv	a4,a0
20014d70:	fd442783          	lw	a5,-44(s0)
20014d74:	00e7c863          	blt	a5,a4,20014d84 <__metal_driver_riscv_plic0_affinity_disable+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:253
        metal_affinity_set_val(ret, -1);
20014d78:	57fd                	li	a5,-1
20014d7a:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:254
        return ret;
20014d7e:	fe442783          	lw	a5,-28(s0)
20014d82:	a899                	j	20014dd8 <__metal_driver_riscv_plic0_affinity_disable+0x92>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:257
    }

    for_each_metal_affinity(context, bitmask) {
20014d84:	fe042623          	sw	zero,-20(s0)
20014d88:	a099                	j	20014dce <__metal_driver_riscv_plic0_affinity_disable+0x88>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:258
        if (context != 0)
20014d8a:	fec42783          	lw	a5,-20(s0)
20014d8e:	c795                	beqz	a5,20014dba <__metal_driver_riscv_plic0_affinity_disable+0x74>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:259
            metal_affinity_set_bit(
20014d90:	4681                	li	a3,0
20014d92:	fd442603          	lw	a2,-44(s0)
20014d96:	fec42583          	lw	a1,-20(s0)
20014d9a:	fe842503          	lw	a0,-24(s0)
20014d9e:	aa3ff0ef          	jal	ra,20014840 <__metal_plic0_enable>
20014da2:	87aa                	mv	a5,a0
20014da4:	0017f713          	andi	a4,a5,1
20014da8:	fec42783          	lw	a5,-20(s0)
20014dac:	00f71733          	sll	a4,a4,a5
20014db0:	fe442783          	lw	a5,-28(s0)
20014db4:	8fd9                	or	a5,a5,a4
20014db6:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
20014dba:	fec42783          	lw	a5,-20(s0)
20014dbe:	0785                	addi	a5,a5,1
20014dc0:	fef42623          	sw	a5,-20(s0)
20014dc4:	fd842783          	lw	a5,-40(s0)
20014dc8:	8385                	srli	a5,a5,0x1
20014dca:	fcf42c23          	sw	a5,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 1)
20014dce:	fd842783          	lw	a5,-40(s0)
20014dd2:	ffc5                	bnez	a5,20014d8a <__metal_driver_riscv_plic0_affinity_disable+0x44>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:264
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_DISABLE));
    }

    return ret;
20014dd4:	fe442783          	lw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:265 (discriminator 1)
}
20014dd8:	853e                	mv	a0,a5
20014dda:	50b2                	lw	ra,44(sp)
20014ddc:	5422                	lw	s0,40(sp)
20014dde:	6145                	addi	sp,sp,48
20014de0:	8082                	ret

20014de2 <__metal_driver_riscv_plic0_affinity_set_threshold>:
__metal_driver_riscv_plic0_affinity_set_threshold():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:269

metal_affinity __metal_driver_riscv_plic0_affinity_set_threshold(
    struct metal_interrupt *controller, metal_affinity bitmask,
    unsigned int threshold) {
20014de2:	7179                	addi	sp,sp,-48
20014de4:	d606                	sw	ra,44(sp)
20014de6:	d422                	sw	s0,40(sp)
20014de8:	1800                	addi	s0,sp,48
20014dea:	fca42e23          	sw	a0,-36(s0)
20014dee:	fcb42c23          	sw	a1,-40(s0)
20014df2:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:270
    metal_affinity ret = {0};
20014df6:	fe042423          	sw	zero,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:273
    int context;

    for_each_metal_affinity(context, bitmask) {
20014dfa:	fe042623          	sw	zero,-20(s0)
20014dfe:	a091                	j	20014e42 <__metal_driver_riscv_plic0_affinity_set_threshold+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:274
        if (context != 0)
20014e00:	fec42783          	lw	a5,-20(s0)
20014e04:	c78d                	beqz	a5,20014e2e <__metal_driver_riscv_plic0_affinity_set_threshold+0x4c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:275
            metal_affinity_set_bit(
20014e06:	fd442603          	lw	a2,-44(s0)
20014e0a:	fec42583          	lw	a1,-20(s0)
20014e0e:	fdc42503          	lw	a0,-36(s0)
20014e12:	919ff0ef          	jal	ra,2001472a <__metal_plic0_set_threshold>
20014e16:	87aa                	mv	a5,a0
20014e18:	0017f713          	andi	a4,a5,1
20014e1c:	fec42783          	lw	a5,-20(s0)
20014e20:	00f71733          	sll	a4,a4,a5
20014e24:	fe842783          	lw	a5,-24(s0)
20014e28:	8fd9                	or	a5,a5,a4
20014e2a:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
20014e2e:	fec42783          	lw	a5,-20(s0)
20014e32:	0785                	addi	a5,a5,1
20014e34:	fef42623          	sw	a5,-20(s0)
20014e38:	fd842783          	lw	a5,-40(s0)
20014e3c:	8385                	srli	a5,a5,0x1
20014e3e:	fcf42c23          	sw	a5,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 1)
20014e42:	fd842783          	lw	a5,-40(s0)
20014e46:	ffcd                	bnez	a5,20014e00 <__metal_driver_riscv_plic0_affinity_set_threshold+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:280
                ret, context,
                __metal_plic0_set_threshold(controller, context, threshold));
    }

    return ret;
20014e48:	fe842783          	lw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:281
}
20014e4c:	853e                	mv	a0,a5
20014e4e:	50b2                	lw	ra,44(sp)
20014e50:	5422                	lw	s0,40(sp)
20014e52:	6145                	addi	sp,sp,48
20014e54:	8082                	ret

20014e56 <__metal_driver_riscv_plic0_affinity_get_threshold>:
__metal_driver_riscv_plic0_affinity_get_threshold():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:284

unsigned int __metal_driver_riscv_plic0_affinity_get_threshold(
    struct metal_interrupt *controller, int context_id) {
20014e56:	1101                	addi	sp,sp,-32
20014e58:	ce06                	sw	ra,28(sp)
20014e5a:	cc22                	sw	s0,24(sp)
20014e5c:	1000                	addi	s0,sp,32
20014e5e:	fea42623          	sw	a0,-20(s0)
20014e62:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:285
    __metal_plic0_get_threshold(controller, context_id);
20014e66:	fe842583          	lw	a1,-24(s0)
20014e6a:	fec42503          	lw	a0,-20(s0)
20014e6e:	903ff0ef          	jal	ra,20014770 <__metal_plic0_get_threshold>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:286
    return 0;
20014e72:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/riscv_plic0.c:287
}
20014e74:	853e                	mv	a0,a5
20014e76:	40f2                	lw	ra,28(sp)
20014e78:	4462                	lw	s0,24(sp)
20014e7a:	6105                	addi	sp,sp,32
20014e7c:	8082                	ret

20014e7e <__metal_driver_sifive_fe310_g000_hfrosc_ref>:
__metal_driver_sifive_fe310_g000_hfrosc_ref():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1242



/* --------------------- sifive_fe310_g000_hfrosc ------------ */
static __inline__ struct metal_clock * __metal_driver_sifive_fe310_g000_hfrosc_ref(const struct metal_clock *clock)
{
20014e7e:	1101                	addi	sp,sp,-32
20014e80:	ce22                	sw	s0,28(sp)
20014e82:	1000                	addi	s0,sp,32
20014e84:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1243
		return (struct metal_clock *)&__metal_dt_clock_2.clock;
20014e88:	800007b7          	lui	a5,0x80000
20014e8c:	06c78793          	addi	a5,a5,108 # 8000006c <metal_segment_heap_target_end+0xffffe8ac>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1244
}
20014e90:	853e                	mv	a0,a5
20014e92:	4472                	lw	s0,28(sp)
20014e94:	6105                	addi	sp,sp,32
20014e96:	8082                	ret

20014e98 <__metal_driver_sifive_fe310_g000_hfrosc_config_base>:
__metal_driver_sifive_fe310_g000_hfrosc_config_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1247

static __inline__ struct __metal_driver_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_hfrosc_config_base(const struct metal_clock *clock)
{
20014e98:	1101                	addi	sp,sp,-32
20014e9a:	ce22                	sw	s0,28(sp)
20014e9c:	1000                	addi	s0,sp,32
20014e9e:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1248
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20014ea2:	82418793          	addi	a5,gp,-2012 # 80000ae4 <__metal_dt_prci_10008000>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1249
}
20014ea6:	853e                	mv	a0,a5
20014ea8:	4472                	lw	s0,28(sp)
20014eaa:	6105                	addi	sp,sp,32
20014eac:	8082                	ret

20014eae <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfrosc_config_offset():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1257
{
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
}

static __inline__ long __metal_driver_sifive_fe310_g000_hfrosc_config_offset(const struct metal_clock *clock)
{
20014eae:	1101                	addi	sp,sp,-32
20014eb0:	ce22                	sw	s0,28(sp)
20014eb2:	1000                	addi	s0,sp,32
20014eb4:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1258
		return METAL_SIFIVE_FE310_G000_PRCI_HFROSCCFG;
20014eb8:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1259
}
20014eba:	853e                	mv	a0,a5
20014ebc:	4472                	lw	s0,28(sp)
20014ebe:	6105                	addi	sp,sp,32
20014ec0:	8082                	ret

20014ec2 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1374
{
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_SIZE;
}

static __inline__ const struct __metal_driver_vtable_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_prci_vtable( )
{
20014ec2:	1141                	addi	sp,sp,-16
20014ec4:	c622                	sw	s0,12(sp)
20014ec6:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1375
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20014ec8:	83818793          	addi	a5,gp,-1992 # 80000af8 <__metal_driver_vtable_sifive_fe310_g000_prci>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1376
}
20014ecc:	853e                	mv	a0,a5
20014ece:	4432                	lw	s0,12(sp)
20014ed0:	0141                	addi	sp,sp,16
20014ed2:	8082                	ret

20014ed4 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:17
#define CONFIG_TRIM 0x001F0000UL
#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(
    const struct metal_clock *clock) {
20014ed4:	7139                	addi	sp,sp,-64
20014ed6:	de06                	sw	ra,60(sp)
20014ed8:	dc22                	sw	s0,56(sp)
20014eda:	0080                	addi	s0,sp,64
20014edc:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:19
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfrosc_ref(clock);
20014ee0:	fcc42503          	lw	a0,-52(s0)
20014ee4:	3f69                	jal	20014e7e <__metal_driver_sifive_fe310_g000_hfrosc_ref>
20014ee6:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:21
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfrosc_config_offset(clock);
20014eea:	fcc42503          	lw	a0,-52(s0)
20014eee:	37c1                	jal	20014eae <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>
20014ef0:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:23
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfrosc_config_base(clock);
20014ef4:	fcc42503          	lw	a0,-52(s0)
20014ef8:	3745                	jal	20014e98 <__metal_driver_sifive_fe310_g000_hfrosc_config_base>
20014efa:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:25
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
20014efe:	37d1                	jal	20014ec2 <__metal_driver_sifive_fe310_g000_prci_vtable>
20014f00:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:26
    long cfg = vtable->get_reg(config_base, config_offset);
20014f04:	fe042783          	lw	a5,-32(s0)
20014f08:	439c                	lw	a5,0(a5)
20014f0a:	fe842583          	lw	a1,-24(s0)
20014f0e:	fe442503          	lw	a0,-28(s0)
20014f12:	9782                	jalr	a5
20014f14:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:28

    if ((cfg & CONFIG_ENABLE) == 0)
20014f18:	fdc42703          	lw	a4,-36(s0)
20014f1c:	400007b7          	lui	a5,0x40000
20014f20:	8ff9                	and	a5,a5,a4
20014f22:	e399                	bnez	a5,20014f28 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x54>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:29
        return -1;
20014f24:	57fd                	li	a5,-1
20014f26:	a025                	j	20014f4e <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:30
    if ((cfg & CONFIG_READY) == 0)
20014f28:	fdc42783          	lw	a5,-36(s0)
20014f2c:	0007c463          	bltz	a5,20014f34 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:31
        return -1;
20014f30:	57fd                	li	a5,-1
20014f32:	a831                	j	20014f4e <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:32
    return metal_clock_get_rate_hz(ref) / ((cfg & CONFIG_DIVIDER) + 1);
20014f34:	fec42503          	lw	a0,-20(s0)
20014f38:	44a020ef          	jal	ra,20017382 <metal_clock_get_rate_hz>
20014f3c:	87aa                	mv	a5,a0
20014f3e:	873e                	mv	a4,a5
20014f40:	fdc42783          	lw	a5,-36(s0)
20014f44:	03f7f793          	andi	a5,a5,63
20014f48:	0785                	addi	a5,a5,1
20014f4a:	02f757b3          	divu	a5,a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:33
}
20014f4e:	853e                	mv	a0,a5
20014f50:	50f2                	lw	ra,60(sp)
20014f52:	5462                	lw	s0,56(sp)
20014f54:	6121                	addi	sp,sp,64
20014f56:	8082                	ret

20014f58 <__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:36

long __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
20014f58:	1101                	addi	sp,sp,-32
20014f5a:	ce06                	sw	ra,28(sp)
20014f5c:	cc22                	sw	s0,24(sp)
20014f5e:	1000                	addi	s0,sp,32
20014f60:	fea42623          	sw	a0,-20(s0)
20014f64:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:37
    return __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(clock);
20014f68:	fec42503          	lw	a0,-20(s0)
20014f6c:	37a5                	jal	20014ed4 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>
20014f6e:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:38
}
20014f70:	853e                	mv	a0,a5
20014f72:	40f2                	lw	ra,28(sp)
20014f74:	4462                	lw	s0,24(sp)
20014f76:	6105                	addi	sp,sp,32
20014f78:	8082                	ret

20014f7a <__metal_driver_sifive_fe310_g000_hfxosc_ref>:
__metal_driver_sifive_fe310_g000_hfxosc_ref():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1265
{
20014f7a:	1101                	addi	sp,sp,-32
20014f7c:	ce22                	sw	s0,28(sp)
20014f7e:	1000                	addi	s0,sp,32
20014f80:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1266
		return (struct metal_clock *)&__metal_dt_clock_0.clock;
20014f84:	800007b7          	lui	a5,0x80000
20014f88:	06078793          	addi	a5,a5,96 # 80000060 <metal_segment_heap_target_end+0xffffe8a0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1267
}
20014f8c:	853e                	mv	a0,a5
20014f8e:	4472                	lw	s0,28(sp)
20014f90:	6105                	addi	sp,sp,32
20014f92:	8082                	ret

20014f94 <__metal_driver_sifive_fe310_g000_hfxosc_config_base>:
__metal_driver_sifive_fe310_g000_hfxosc_config_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1270
{
20014f94:	1101                	addi	sp,sp,-32
20014f96:	ce22                	sw	s0,28(sp)
20014f98:	1000                	addi	s0,sp,32
20014f9a:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1271
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20014f9e:	82418793          	addi	a5,gp,-2012 # 80000ae4 <__metal_dt_prci_10008000>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1272
}
20014fa2:	853e                	mv	a0,a5
20014fa4:	4472                	lw	s0,28(sp)
20014fa6:	6105                	addi	sp,sp,32
20014fa8:	8082                	ret

20014faa <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfxosc_config_offset():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1275
{
20014faa:	1101                	addi	sp,sp,-32
20014fac:	ce22                	sw	s0,28(sp)
20014fae:	1000                	addi	s0,sp,32
20014fb0:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1276
		return METAL_SIFIVE_FE310_G000_PRCI_HFXOSCCFG;
20014fb4:	4791                	li	a5,4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1277
}
20014fb6:	853e                	mv	a0,a5
20014fb8:	4472                	lw	s0,28(sp)
20014fba:	6105                	addi	sp,sp,32
20014fbc:	8082                	ret

20014fbe <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1374
{
20014fbe:	1141                	addi	sp,sp,-16
20014fc0:	c622                	sw	s0,12(sp)
20014fc2:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1375
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20014fc4:	83818793          	addi	a5,gp,-1992 # 80000af8 <__metal_driver_vtable_sifive_fe310_g000_prci>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1376
}
20014fc8:	853e                	mv	a0,a5
20014fca:	4432                	lw	s0,12(sp)
20014fcc:	0141                	addi	sp,sp,16
20014fce:	8082                	ret

20014fd0 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:15

#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(
    const struct metal_clock *clock) {
20014fd0:	7139                	addi	sp,sp,-64
20014fd2:	de06                	sw	ra,60(sp)
20014fd4:	dc22                	sw	s0,56(sp)
20014fd6:	0080                	addi	s0,sp,64
20014fd8:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:17
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfxosc_ref(clock);
20014fdc:	fcc42503          	lw	a0,-52(s0)
20014fe0:	3f69                	jal	20014f7a <__metal_driver_sifive_fe310_g000_hfxosc_ref>
20014fe2:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:19
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfxosc_config_offset(clock);
20014fe6:	fcc42503          	lw	a0,-52(s0)
20014fea:	37c1                	jal	20014faa <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>
20014fec:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:21
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfxosc_config_base(clock);
20014ff0:	fcc42503          	lw	a0,-52(s0)
20014ff4:	3745                	jal	20014f94 <__metal_driver_sifive_fe310_g000_hfxosc_config_base>
20014ff6:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:23
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
20014ffa:	37d1                	jal	20014fbe <__metal_driver_sifive_fe310_g000_prci_vtable>
20014ffc:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:24
    long cfg = vtable->get_reg(config_base, config_offset);
20015000:	fe042783          	lw	a5,-32(s0)
20015004:	439c                	lw	a5,0(a5)
20015006:	fe842583          	lw	a1,-24(s0)
2001500a:	fe442503          	lw	a0,-28(s0)
2001500e:	9782                	jalr	a5
20015010:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:26

    if ((cfg & CONFIG_ENABLE) == 0)
20015014:	fdc42703          	lw	a4,-36(s0)
20015018:	400007b7          	lui	a5,0x40000
2001501c:	8ff9                	and	a5,a5,a4
2001501e:	e399                	bnez	a5,20015024 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x54>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:27
        return -1;
20015020:	57fd                	li	a5,-1
20015022:	a821                	j	2001503a <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:28
    if ((cfg & CONFIG_READY) == 0)
20015024:	fdc42783          	lw	a5,-36(s0)
20015028:	0007c463          	bltz	a5,20015030 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:29
        return -1;
2001502c:	57fd                	li	a5,-1
2001502e:	a031                	j	2001503a <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:30
    return metal_clock_get_rate_hz(ref);
20015030:	fec42503          	lw	a0,-20(s0)
20015034:	34e020ef          	jal	ra,20017382 <metal_clock_get_rate_hz>
20015038:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:31
}
2001503a:	853e                	mv	a0,a5
2001503c:	50f2                	lw	ra,60(sp)
2001503e:	5462                	lw	s0,56(sp)
20015040:	6121                	addi	sp,sp,64
20015042:	8082                	ret

20015044 <__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:34

long __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
20015044:	1101                	addi	sp,sp,-32
20015046:	ce06                	sw	ra,28(sp)
20015048:	cc22                	sw	s0,24(sp)
2001504a:	1000                	addi	s0,sp,32
2001504c:	fea42623          	sw	a0,-20(s0)
20015050:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:35
    return __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(clock);
20015054:	fec42503          	lw	a0,-20(s0)
20015058:	3fa5                	jal	20014fd0 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>
2001505a:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:36
}
2001505c:	853e                	mv	a0,a5
2001505e:	40f2                	lw	ra,28(sp)
20015060:	4462                	lw	s0,24(sp)
20015062:	6105                	addi	sp,sp,32
20015064:	8082                	ret

20015066 <__metal_driver_sifive_fe310_g000_pll_pllsel0>:
__metal_driver_sifive_fe310_g000_pll_pllsel0():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1326
{
20015066:	1101                	addi	sp,sp,-32
20015068:	ce22                	sw	s0,28(sp)
2001506a:	1000                	addi	s0,sp,32
2001506c:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1327
		return (struct metal_clock *)&__metal_dt_clock_3.clock;
20015070:	800017b7          	lui	a5,0x80001
20015074:	a9c78793          	addi	a5,a5,-1380 # 80000a9c <metal_segment_heap_target_end+0xfffff2dc>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1328
}
20015078:	853e                	mv	a0,a5
2001507a:	4472                	lw	s0,28(sp)
2001507c:	6105                	addi	sp,sp,32
2001507e:	8082                	ret

20015080 <__metal_driver_sifive_fe310_g000_pll_pllref>:
__metal_driver_sifive_fe310_g000_pll_pllref():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1331
{
20015080:	1101                	addi	sp,sp,-32
20015082:	ce22                	sw	s0,28(sp)
20015084:	1000                	addi	s0,sp,32
20015086:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1332
		return (struct metal_clock *)&__metal_dt_clock_1.clock;
2001508a:	800017b7          	lui	a5,0x80001
2001508e:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xfffff2e8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1333
}
20015092:	853e                	mv	a0,a5
20015094:	4472                	lw	s0,28(sp)
20015096:	6105                	addi	sp,sp,32
20015098:	8082                	ret

2001509a <__metal_driver_sifive_fe310_g000_pll_divider_base>:
__metal_driver_sifive_fe310_g000_pll_divider_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1336
{
2001509a:	1101                	addi	sp,sp,-32
2001509c:	ce22                	sw	s0,28(sp)
2001509e:	1000                	addi	s0,sp,32
200150a0:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1337
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
200150a4:	82418793          	addi	a5,gp,-2012 # 80000ae4 <__metal_dt_prci_10008000>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1338
}
200150a8:	853e                	mv	a0,a5
200150aa:	4472                	lw	s0,28(sp)
200150ac:	6105                	addi	sp,sp,32
200150ae:	8082                	ret

200150b0 <__metal_driver_sifive_fe310_g000_pll_divider_offset>:
__metal_driver_sifive_fe310_g000_pll_divider_offset():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1341
{
200150b0:	1101                	addi	sp,sp,-32
200150b2:	ce22                	sw	s0,28(sp)
200150b4:	1000                	addi	s0,sp,32
200150b6:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1342
		return METAL_SIFIVE_FE310_G000_PRCI_PLLOUTDIV;
200150ba:	47b1                	li	a5,12
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1343
}
200150bc:	853e                	mv	a0,a5
200150be:	4472                	lw	s0,28(sp)
200150c0:	6105                	addi	sp,sp,32
200150c2:	8082                	ret

200150c4 <__metal_driver_sifive_fe310_g000_pll_config_base>:
__metal_driver_sifive_fe310_g000_pll_config_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1346
{
200150c4:	1141                	addi	sp,sp,-16
200150c6:	c622                	sw	s0,12(sp)
200150c8:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1347
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
200150ca:	82418793          	addi	a5,gp,-2012 # 80000ae4 <__metal_dt_prci_10008000>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1348
}
200150ce:	853e                	mv	a0,a5
200150d0:	4432                	lw	s0,12(sp)
200150d2:	0141                	addi	sp,sp,16
200150d4:	8082                	ret

200150d6 <__metal_driver_sifive_fe310_g000_pll_config_offset>:
__metal_driver_sifive_fe310_g000_pll_config_offset():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1351
{
200150d6:	1141                	addi	sp,sp,-16
200150d8:	c622                	sw	s0,12(sp)
200150da:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1352
		return METAL_SIFIVE_FE310_G000_PRCI_PLLCFG;
200150dc:	47a1                	li	a5,8
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1353
}
200150de:	853e                	mv	a0,a5
200150e0:	4432                	lw	s0,12(sp)
200150e2:	0141                	addi	sp,sp,16
200150e4:	8082                	ret

200150e6 <__metal_driver_sifive_fe310_g000_pll_init_rate>:
__metal_driver_sifive_fe310_g000_pll_init_rate():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1356
{
200150e6:	1141                	addi	sp,sp,-16
200150e8:	c622                	sw	s0,12(sp)
200150ea:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1357
		return 16000000;
200150ec:	00f427b7          	lui	a5,0xf42
200150f0:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1358
}
200150f4:	853e                	mv	a0,a5
200150f6:	4432                	lw	s0,12(sp)
200150f8:	0141                	addi	sp,sp,16
200150fa:	8082                	ret

200150fc <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1364
{
200150fc:	1141                	addi	sp,sp,-16
200150fe:	c622                	sw	s0,12(sp)
20015100:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1365
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
20015102:	100087b7          	lui	a5,0x10008
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1366
}
20015106:	853e                	mv	a0,a5
20015108:	4432                	lw	s0,12(sp)
2001510a:	0141                	addi	sp,sp,16
2001510c:	8082                	ret

2001510e <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1374
{
2001510e:	1141                	addi	sp,sp,-16
20015110:	c622                	sw	s0,12(sp)
20015112:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1375
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20015114:	83818793          	addi	a5,gp,-1992 # 80000af8 <__metal_driver_vtable_sifive_fe310_g000_prci>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1376
}
20015118:	853e                	mv	a0,a5
2001511a:	4432                	lw	s0,12(sp)
2001511c:	0141                	addi	sp,sp,16
2001511e:	8082                	ret

20015120 <get_pll_config_freq>:
get_pll_config_freq():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:141
                                const struct pll_config_t *config) {
20015120:	1101                	addi	sp,sp,-32
20015122:	ce22                	sw	s0,28(sp)
20015124:	1000                	addi	s0,sp,32
20015126:	fea42623          	sw	a0,-20(s0)
2001512a:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142
    if (pll_input_rate < config->min_input_rate ||
2001512e:	fe842783          	lw	a5,-24(s0)
20015132:	479c                	lw	a5,8(a5)
20015134:	fec42703          	lw	a4,-20(s0)
20015138:	00f76963          	bltu	a4,a5,2001514a <get_pll_config_freq+0x2a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:143 (discriminator 1)
        pll_input_rate > config->max_input_rate)
2001513c:	fe842783          	lw	a5,-24(s0)
20015140:	47dc                	lw	a5,12(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142 (discriminator 1)
    if (pll_input_rate < config->min_input_rate ||
20015142:	fec42703          	lw	a4,-20(s0)
20015146:	00e7f463          	bgeu	a5,a4,2001514e <get_pll_config_freq+0x2e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:144
        return PLL_CONFIG_NOT_VALID;
2001514a:	57fd                	li	a5,-1
2001514c:	a829                	j	20015166 <get_pll_config_freq+0x46>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:146
    return pll_input_rate * config->multiplier / config->divisor;
2001514e:	fe842783          	lw	a5,-24(s0)
20015152:	4398                	lw	a4,0(a5)
20015154:	fec42783          	lw	a5,-20(s0)
20015158:	02f70733          	mul	a4,a4,a5
2001515c:	fe842783          	lw	a5,-24(s0)
20015160:	43dc                	lw	a5,4(a5)
20015162:	02f757b3          	divu	a5,a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:147
}
20015166:	853e                	mv	a0,a5
20015168:	4472                	lw	s0,28(sp)
2001516a:	6105                	addi	sp,sp,32
2001516c:	8082                	ret

2001516e <__metal_driver_sifive_fe310_g000_pll_init>:
__metal_driver_sifive_fe310_g000_pll_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:162
    struct __metal_driver_sifive_fe310_g000_pll *pll) {
2001516e:	7139                	addi	sp,sp,-64
20015170:	de06                	sw	ra,60(sp)
20015172:	dc22                	sw	s0,56(sp)
20015174:	0080                	addi	s0,sp,64
20015176:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:164
        __metal_driver_sifive_fe310_g000_pll_pllref(&(pll->clock));
2001517a:	fcc42783          	lw	a5,-52(s0)
2001517e:	853e                	mv	a0,a5
20015180:	3701                	jal	20015080 <__metal_driver_sifive_fe310_g000_pll_pllref>
20015182:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:165
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20015186:	3785                	jal	200150e6 <__metal_driver_sifive_fe310_g000_pll_init_rate>
20015188:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:166
    long config_offset = __metal_driver_sifive_fe310_g000_pll_config_offset();
2001518c:	37a9                	jal	200150d6 <__metal_driver_sifive_fe310_g000_pll_config_offset>
2001518e:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:167
    long base = __metal_driver_sifive_fe310_g000_prci_base();
20015192:	37ad                	jal	200150fc <__metal_driver_sifive_fe310_g000_prci_base>
20015194:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:169
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
20015198:	fe042703          	lw	a4,-32(s0)
2001519c:	fe442783          	lw	a5,-28(s0)
200151a0:	97ba                	add	a5,a5,a4
200151a2:	fcf42e23          	sw	a5,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:173
    _metal_clock_call_all_callbacks(pll->clock._pre_rate_change_callback);
200151a6:	fcc42783          	lw	a5,-52(s0)
200151aa:	43dc                	lw	a5,4(a5)
200151ac:	853e                	mv	a0,a5
200151ae:	140020ef          	jal	ra,200172ee <_metal_clock_call_all_callbacks>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:177
    if ((__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL) != 0)
200151b2:	fdc42783          	lw	a5,-36(s0)
200151b6:	4398                	lw	a4,0(a5)
200151b8:	67c1                	lui	a5,0x10
200151ba:	8ff9                	and	a5,a5,a4
200151bc:	cb91                	beqz	a5,200151d0 <__metal_driver_sifive_fe310_g000_pll_init+0x62>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:178
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
200151be:	fdc42783          	lw	a5,-36(s0)
200151c2:	4398                	lw	a4,0(a5)
200151c4:	77c1                	lui	a5,0xffff0
200151c6:	17fd                	addi	a5,a5,-1
200151c8:	8f7d                	and	a4,a4,a5
200151ca:	fdc42783          	lw	a5,-36(s0)
200151ce:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:181
    if (pllref != NULL)
200151d0:	fec42783          	lw	a5,-20(s0)
200151d4:	cb91                	beqz	a5,200151e8 <__metal_driver_sifive_fe310_g000_pll_init+0x7a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:182
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_REFSEL;
200151d6:	fdc42783          	lw	a5,-36(s0)
200151da:	4398                	lw	a4,0(a5)
200151dc:	000207b7          	lui	a5,0x20
200151e0:	8f5d                	or	a4,a4,a5
200151e2:	fdc42783          	lw	a5,-36(s0)
200151e6:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:187
    pll->clock.vtable->set_rate_hz(&(pll->clock), init_rate);
200151e8:	fcc42783          	lw	a5,-52(s0)
200151ec:	439c                	lw	a5,0(a5)
200151ee:	43d8                	lw	a4,4(a5)
200151f0:	fcc42783          	lw	a5,-52(s0)
200151f4:	fe842583          	lw	a1,-24(s0)
200151f8:	853e                	mv	a0,a5
200151fa:	9702                	jalr	a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:190
    _metal_clock_call_all_callbacks(pll->clock._post_rate_change_callback);
200151fc:	fcc42783          	lw	a5,-52(s0)
20015200:	479c                	lw	a5,8(a5)
20015202:	853e                	mv	a0,a5
20015204:	0ea020ef          	jal	ra,200172ee <_metal_clock_call_all_callbacks>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:191
}
20015208:	0001                	nop
2001520a:	50f2                	lw	ra,60(sp)
2001520c:	5462                	lw	s0,56(sp)
2001520e:	6121                	addi	sp,sp,64
20015210:	8082                	ret

20015212 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_get_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:194
    const struct metal_clock *clock) {
20015212:	711d                	addi	sp,sp,-96
20015214:	ce86                	sw	ra,92(sp)
20015216:	cca2                	sw	s0,88(sp)
20015218:	1080                	addi	s0,sp,96
2001521a:	faa42623          	sw	a0,-84(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:196
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
2001521e:	fac42503          	lw	a0,-84(s0)
20015222:	3db9                	jal	20015080 <__metal_driver_sifive_fe310_g000_pll_pllref>
20015224:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:198
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
20015228:	fac42503          	lw	a0,-84(s0)
2001522c:	3d2d                	jal	20015066 <__metal_driver_sifive_fe310_g000_pll_pllsel0>
2001522e:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:200
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
20015232:	fac42503          	lw	a0,-84(s0)
20015236:	3545                	jal	200150d6 <__metal_driver_sifive_fe310_g000_pll_config_offset>
20015238:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:202
        __metal_driver_sifive_fe310_g000_pll_config_base(clock);
2001523c:	fac42503          	lw	a0,-84(s0)
20015240:	3551                	jal	200150c4 <__metal_driver_sifive_fe310_g000_pll_config_base>
20015242:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:204
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
20015246:	fac42503          	lw	a0,-84(s0)
2001524a:	359d                	jal	200150b0 <__metal_driver_sifive_fe310_g000_pll_divider_offset>
2001524c:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:206
        __metal_driver_sifive_fe310_g000_pll_divider_base(clock);
20015250:	fac42503          	lw	a0,-84(s0)
20015254:	3599                	jal	2001509a <__metal_driver_sifive_fe310_g000_pll_divider_base>
20015256:	fca42c23          	sw	a0,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:208
        __metal_driver_sifive_fe310_g000_prci_vtable();
2001525a:	3d55                	jal	2001510e <__metal_driver_sifive_fe310_g000_prci_vtable>
2001525c:	fca42a23          	sw	a0,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:210
    long cfg = vtable->get_reg(config_base, config_offset);
20015260:	fd442783          	lw	a5,-44(s0)
20015264:	439c                	lw	a5,0(a5)
20015266:	fe442583          	lw	a1,-28(s0)
2001526a:	fe042503          	lw	a0,-32(s0)
2001526e:	9782                	jalr	a5
20015270:	fca42823          	sw	a0,-48(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:211
    long div = vtable->get_reg(divider_base, divider_offset);
20015274:	fd442783          	lw	a5,-44(s0)
20015278:	439c                	lw	a5,0(a5)
2001527a:	fdc42583          	lw	a1,-36(s0)
2001527e:	fd842503          	lw	a0,-40(s0)
20015282:	9782                	jalr	a5
20015284:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:215
    if (__METAL_GET_FIELD(cfg, PLL_SEL) == 0)
20015288:	fd042703          	lw	a4,-48(s0)
2001528c:	67c1                	lui	a5,0x10
2001528e:	8f7d                	and	a4,a4,a5
20015290:	67c1                	lui	a5,0x10
20015292:	00f77863          	bgeu	a4,a5,200152a2 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x90>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:216
        return metal_clock_get_rate_hz(pllsel0);
20015296:	fe842503          	lw	a0,-24(s0)
2001529a:	0e8020ef          	jal	ra,20017382 <metal_clock_get_rate_hz>
2001529e:	87aa                	mv	a5,a0
200152a0:	a8e1                	j	20015378 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:221
        __METAL_GET_FIELD(cfg, PLL_REFSEL) ? pllref : pllsel0);
200152a2:	fd042703          	lw	a4,-48(s0)
200152a6:	000207b7          	lui	a5,0x20
200152aa:	8f7d                	and	a4,a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220
    long ref_hz = metal_clock_get_rate_hz(
200152ac:	000207b7          	lui	a5,0x20
200152b0:	00f76563          	bltu	a4,a5,200152ba <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xa8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 1)
200152b4:	fec42783          	lw	a5,-20(s0)
200152b8:	a019                	j	200152be <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xac>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 2)
200152ba:	fe842783          	lw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 4)
200152be:	853e                	mv	a0,a5
200152c0:	0c2020ef          	jal	ra,20017382 <metal_clock_get_rate_hz>
200152c4:	fca42423          	sw	a0,-56(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:225 (discriminator 4)
    if (__METAL_GET_FIELD(cfg, PLL_BYPASS))
200152c8:	fd042703          	lw	a4,-48(s0)
200152cc:	000407b7          	lui	a5,0x40
200152d0:	8f7d                	and	a4,a4,a5
200152d2:	000407b7          	lui	a5,0x40
200152d6:	00f76563          	bltu	a4,a5,200152e0 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xce>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:226
        return ref_hz;
200152da:	fc842783          	lw	a5,-56(s0)
200152de:	a869                	j	20015378 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:229
    long div_r = __METAL_GET_FIELD(cfg, PLL_R) + 1;
200152e0:	fd042783          	lw	a5,-48(s0)
200152e4:	8b9d                	andi	a5,a5,7
200152e6:	0785                	addi	a5,a5,1
200152e8:	fcf42223          	sw	a5,-60(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:230
    long mul_f = 2 * (__METAL_GET_FIELD(cfg, PLL_F) + 1);
200152ec:	fd042783          	lw	a5,-48(s0)
200152f0:	3f07f793          	andi	a5,a5,1008
200152f4:	8391                	srli	a5,a5,0x4
200152f6:	0785                	addi	a5,a5,1
200152f8:	0786                	slli	a5,a5,0x1
200152fa:	fcf42023          	sw	a5,-64(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:231
    if (__METAL_GET_FIELD(cfg, PLL_Q) == 0)
200152fe:	fd042703          	lw	a4,-48(s0)
20015302:	6785                	lui	a5,0x1
20015304:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20015308:	8f7d                	and	a4,a4,a5
2001530a:	3ff00793          	li	a5,1023
2001530e:	00e7e463          	bltu	a5,a4,20015316 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x104>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:232
        return -1;
20015312:	57fd                	li	a5,-1
20015314:	a095                	j	20015378 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:233
    long div_q = 1 << __METAL_GET_FIELD(cfg, PLL_Q);
20015316:	fd042703          	lw	a4,-48(s0)
2001531a:	6785                	lui	a5,0x1
2001531c:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20015320:	8ff9                	and	a5,a5,a4
20015322:	83a9                	srli	a5,a5,0xa
20015324:	4705                	li	a4,1
20015326:	00f717b3          	sll	a5,a4,a5
2001532a:	faf42e23          	sw	a5,-68(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:238
    long pllout = (((ref_hz / div_r) * mul_f) / div_q);
2001532e:	fc842703          	lw	a4,-56(s0)
20015332:	fc442783          	lw	a5,-60(s0)
20015336:	02f74733          	div	a4,a4,a5
2001533a:	fc042783          	lw	a5,-64(s0)
2001533e:	02f70733          	mul	a4,a4,a5
20015342:	fbc42783          	lw	a5,-68(s0)
20015346:	02f747b3          	div	a5,a4,a5
2001534a:	faf42c23          	sw	a5,-72(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:239
    if (__METAL_GET_FIELD(div, DIV_1))
2001534e:	fcc42783          	lw	a5,-52(s0)
20015352:	1007f713          	andi	a4,a5,256
20015356:	0ff00793          	li	a5,255
2001535a:	00e7f563          	bgeu	a5,a4,20015364 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x152>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:240
        return pllout;
2001535e:	fb842783          	lw	a5,-72(s0)
20015362:	a819                	j	20015378 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:242
    return pllout / (2 * (__METAL_GET_FIELD(div, DIV_DIV) + 1));
20015364:	fb842703          	lw	a4,-72(s0)
20015368:	fcc42783          	lw	a5,-52(s0)
2001536c:	03f7f793          	andi	a5,a5,63
20015370:	0785                	addi	a5,a5,1
20015372:	0786                	slli	a5,a5,0x1
20015374:	02f757b3          	divu	a5,a4,a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:243
}
20015378:	853e                	mv	a0,a5
2001537a:	40f6                	lw	ra,92(sp)
2001537c:	4466                	lw	s0,88(sp)
2001537e:	6125                	addi	sp,sp,96
20015380:	8082                	ret

20015382 <find_closest_config>:
find_closest_config():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:253
static int find_closest_config(long ref_hz, long rate) {
20015382:	7139                	addi	sp,sp,-64
20015384:	de06                	sw	ra,60(sp)
20015386:	dc22                	sw	s0,56(sp)
20015388:	0080                	addi	s0,sp,64
2001538a:	fca42623          	sw	a0,-52(s0)
2001538e:	fcb42423          	sw	a1,-56(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:254
    int closest_index = -1;
20015392:	57fd                	li	a5,-1
20015394:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:255
    long closest_diff = LONG_MAX;
20015398:	800007b7          	lui	a5,0x80000
2001539c:	fff7c793          	not	a5,a5
200153a0:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
200153a4:	04300793          	li	a5,67
200153a8:	fef42223          	sw	a5,-28(s0)
200153ac:	a0b5                	j	20015418 <find_closest_config+0x96>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:261
        long config_freq = get_pll_config_freq(ref_hz, &(pll_configs[i]));
200153ae:	fcc42683          	lw	a3,-52(s0)
200153b2:	fe442783          	lw	a5,-28(s0)
200153b6:	00579713          	slli	a4,a5,0x5
200153ba:	200107b7          	lui	a5,0x20010
200153be:	6d478793          	addi	a5,a5,1748 # 200106d4 <pll_configs>
200153c2:	97ba                	add	a5,a5,a4
200153c4:	85be                	mv	a1,a5
200153c6:	8536                	mv	a0,a3
200153c8:	d59ff0ef          	jal	ra,20015120 <get_pll_config_freq>
200153cc:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:262
        if (config_freq != PLL_CONFIG_NOT_VALID) {
200153d0:	fe042703          	lw	a4,-32(s0)
200153d4:	57fd                	li	a5,-1
200153d6:	02f70c63          	beq	a4,a5,2001540e <find_closest_config+0x8c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:263
            long freq_diff = labs(config_freq - rate);
200153da:	fe042703          	lw	a4,-32(s0)
200153de:	fc842783          	lw	a5,-56(s0)
200153e2:	8f1d                	sub	a4,a4,a5
200153e4:	41f75793          	srai	a5,a4,0x1f
200153e8:	8f3d                	xor	a4,a4,a5
200153ea:	40f707b3          	sub	a5,a4,a5
200153ee:	fcf42e23          	sw	a5,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:265
            if (freq_diff < closest_diff) {
200153f2:	fdc42703          	lw	a4,-36(s0)
200153f6:	fe842783          	lw	a5,-24(s0)
200153fa:	00f75a63          	bge	a4,a5,2001540e <find_closest_config+0x8c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:266
                closest_index = i;
200153fe:	fe442783          	lw	a5,-28(s0)
20015402:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:267
                closest_diff = freq_diff;
20015406:	fdc42783          	lw	a5,-36(s0)
2001540a:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:260
         i--) {
2001540e:	fe442783          	lw	a5,-28(s0)
20015412:	17fd                	addi	a5,a5,-1
20015414:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259 (discriminator 1)
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
20015418:	fe442783          	lw	a5,-28(s0)
2001541c:	f807d9e3          	bgez	a5,200153ae <find_closest_config+0x2c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:272
    return closest_index;
20015420:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:273
}
20015424:	853e                	mv	a0,a5
20015426:	50f2                	lw	ra,60(sp)
20015428:	5462                	lw	s0,56(sp)
2001542a:	6121                	addi	sp,sp,64
2001542c:	8082                	ret

2001542e <configure_pll>:
configure_pll():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:290
                          const struct pll_config_t *config) {
2001542e:	7179                	addi	sp,sp,-48
20015430:	d606                	sw	ra,44(sp)
20015432:	d422                	sw	s0,40(sp)
20015434:	1800                	addi	s0,sp,48
20015436:	fca42e23          	sw	a0,-36(s0)
2001543a:	fcb42c23          	sw	a1,-40(s0)
2001543e:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:291
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_R);
20015442:	fdc42783          	lw	a5,-36(s0)
20015446:	439c                	lw	a5,0(a5)
20015448:	ff87f713          	andi	a4,a5,-8
2001544c:	fdc42783          	lw	a5,-36(s0)
20015450:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:292
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_R_SHIFT(config->r);
20015452:	fdc42783          	lw	a5,-36(s0)
20015456:	4398                	lw	a4,0(a5)
20015458:	fd442783          	lw	a5,-44(s0)
2001545c:	4b9c                	lw	a5,16(a5)
2001545e:	8b9d                	andi	a5,a5,7
20015460:	8f5d                	or	a4,a4,a5
20015462:	fdc42783          	lw	a5,-36(s0)
20015466:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:294
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_F);
20015468:	fdc42783          	lw	a5,-36(s0)
2001546c:	439c                	lw	a5,0(a5)
2001546e:	c0f7f713          	andi	a4,a5,-1009
20015472:	fdc42783          	lw	a5,-36(s0)
20015476:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:295
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_F_SHIFT(config->f);
20015478:	fdc42783          	lw	a5,-36(s0)
2001547c:	4398                	lw	a4,0(a5)
2001547e:	fd442783          	lw	a5,-44(s0)
20015482:	4bdc                	lw	a5,20(a5)
20015484:	0792                	slli	a5,a5,0x4
20015486:	3f07f793          	andi	a5,a5,1008
2001548a:	8f5d                	or	a4,a4,a5
2001548c:	fdc42783          	lw	a5,-36(s0)
20015490:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:297
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_Q);
20015492:	fdc42783          	lw	a5,-36(s0)
20015496:	4398                	lw	a4,0(a5)
20015498:	77fd                	lui	a5,0xfffff
2001549a:	3ff78793          	addi	a5,a5,1023 # fffff3ff <metal_segment_heap_target_end+0x7fffdc3f>
2001549e:	8f7d                	and	a4,a4,a5
200154a0:	fdc42783          	lw	a5,-36(s0)
200154a4:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:298
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_Q_SHIFT(config->q);
200154a6:	fdc42783          	lw	a5,-36(s0)
200154aa:	4398                	lw	a4,0(a5)
200154ac:	fd442783          	lw	a5,-44(s0)
200154b0:	4f9c                	lw	a5,24(a5)
200154b2:	00a79693          	slli	a3,a5,0xa
200154b6:	6785                	lui	a5,0x1
200154b8:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
200154bc:	8ff5                	and	a5,a5,a3
200154be:	8f5d                	or	a4,a4,a5
200154c0:	fdc42783          	lw	a5,-36(s0)
200154c4:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:300
    if (config->d < 0) {
200154c6:	fd442783          	lw	a5,-44(s0)
200154ca:	4fdc                	lw	a5,28(a5)
200154cc:	0207db63          	bgez	a5,20015502 <configure_pll+0xd4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:302
        __METAL_ACCESS_ONCE(plloutdiv) |= DIV_1;
200154d0:	fd842783          	lw	a5,-40(s0)
200154d4:	439c                	lw	a5,0(a5)
200154d6:	1007e713          	ori	a4,a5,256
200154da:	fd842783          	lw	a5,-40(s0)
200154de:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:304
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
200154e0:	fd842783          	lw	a5,-40(s0)
200154e4:	439c                	lw	a5,0(a5)
200154e6:	fc07f713          	andi	a4,a5,-64
200154ea:	fd842783          	lw	a5,-40(s0)
200154ee:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:305
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(1);
200154f0:	fd842783          	lw	a5,-40(s0)
200154f4:	439c                	lw	a5,0(a5)
200154f6:	0017e713          	ori	a4,a5,1
200154fa:	fd842783          	lw	a5,-40(s0)
200154fe:	c398                	sw	a4,0(a5)
20015500:	a82d                	j	2001553a <configure_pll+0x10c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:307
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_1);
20015502:	fd842783          	lw	a5,-40(s0)
20015506:	439c                	lw	a5,0(a5)
20015508:	eff7f713          	andi	a4,a5,-257
2001550c:	fd842783          	lw	a5,-40(s0)
20015510:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:309
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
20015512:	fd842783          	lw	a5,-40(s0)
20015516:	439c                	lw	a5,0(a5)
20015518:	fc07f713          	andi	a4,a5,-64
2001551c:	fd842783          	lw	a5,-40(s0)
20015520:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:310
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(config->d);
20015522:	fd842783          	lw	a5,-40(s0)
20015526:	4398                	lw	a4,0(a5)
20015528:	fd442783          	lw	a5,-44(s0)
2001552c:	4fdc                	lw	a5,28(a5)
2001552e:	03f7f793          	andi	a5,a5,63
20015532:	8f5d                	or	a4,a4,a5
20015534:	fd842783          	lw	a5,-40(s0)
20015538:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:313
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_BYPASS);
2001553a:	fdc42783          	lw	a5,-36(s0)
2001553e:	4398                	lw	a4,0(a5)
20015540:	fffc07b7          	lui	a5,0xfffc0
20015544:	17fd                	addi	a5,a5,-1
20015546:	8f7d                	and	a4,a4,a5
20015548:	fdc42783          	lw	a5,-36(s0)
2001554c:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:318
    __metal_driver_riscv_clint0_command_request(__METAL_DT_RISCV_CLINT0_HANDLE,
2001554e:	fe040793          	addi	a5,s0,-32
20015552:	863e                	mv	a2,a5
20015554:	4585                	li	a1,1
20015556:	81018513          	addi	a0,gp,-2032 # 80000ad0 <__metal_dt_clint_2000000>
2001555a:	cb2fd0ef          	jal	ra,20012a0c <__metal_driver_riscv_clint0_command_request>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:320
    mtime_end = mtime + PLL_LOCK_WAIT_TICKS;
2001555e:	fe042683          	lw	a3,-32(s0)
20015562:	fe442703          	lw	a4,-28(s0)
20015566:	4591                	li	a1,4
20015568:	4601                	li	a2,0
2001556a:	00b687b3          	add	a5,a3,a1
2001556e:	853e                	mv	a0,a5
20015570:	00d53533          	sltu	a0,a0,a3
20015574:	00c70833          	add	a6,a4,a2
20015578:	01050733          	add	a4,a0,a6
2001557c:	883a                	mv	a6,a4
2001557e:	fef42423          	sw	a5,-24(s0)
20015582:	ff042623          	sw	a6,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
20015586:	a809                	j	20015598 <configure_pll+0x16a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:322
        __metal_driver_riscv_clint0_command_request(
20015588:	fe040793          	addi	a5,s0,-32
2001558c:	863e                	mv	a2,a5
2001558e:	4585                	li	a1,1
20015590:	81018513          	addi	a0,gp,-2032 # 80000ad0 <__metal_dt_clint_2000000>
20015594:	c78fd0ef          	jal	ra,20012a0c <__metal_driver_riscv_clint0_command_request>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
20015598:	fe042783          	lw	a5,-32(s0)
2001559c:	fe442803          	lw	a6,-28(s0)
200155a0:	fec42703          	lw	a4,-20(s0)
200155a4:	86c2                	mv	a3,a6
200155a6:	00d76b63          	bltu	a4,a3,200155bc <configure_pll+0x18e>
200155aa:	fec42703          	lw	a4,-20(s0)
200155ae:	86c2                	mv	a3,a6
200155b0:	fcd71ce3          	bne	a4,a3,20015588 <configure_pll+0x15a>
200155b4:	fe842703          	lw	a4,-24(s0)
200155b8:	fcf778e3          	bgeu	a4,a5,20015588 <configure_pll+0x15a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340
    while ((__METAL_ACCESS_ONCE(pllcfg) & PLL_LOCK) == 0)
200155bc:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340 (discriminator 1)
200155be:	fdc42783          	lw	a5,-36(s0)
200155c2:	439c                	lw	a5,0(a5)
200155c4:	fe07dde3          	bgez	a5,200155be <configure_pll+0x190>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:342
}
200155c8:	0001                	nop
200155ca:	50b2                	lw	ra,44(sp)
200155cc:	5422                	lw	s0,40(sp)
200155ce:	6145                	addi	sp,sp,48
200155d0:	8082                	ret

200155d2 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_set_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:345
                                                      long rate) {
200155d2:	715d                	addi	sp,sp,-80
200155d4:	c686                	sw	ra,76(sp)
200155d6:	c4a2                	sw	s0,72(sp)
200155d8:	0880                	addi	s0,sp,80
200155da:	faa42e23          	sw	a0,-68(s0)
200155de:	fab42c23          	sw	a1,-72(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:347
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
200155e2:	fbc42503          	lw	a0,-68(s0)
200155e6:	a9bff0ef          	jal	ra,20015080 <__metal_driver_sifive_fe310_g000_pll_pllref>
200155ea:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:349
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
200155ee:	fbc42503          	lw	a0,-68(s0)
200155f2:	a75ff0ef          	jal	ra,20015066 <__metal_driver_sifive_fe310_g000_pll_pllsel0>
200155f6:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:351
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
200155fa:	fbc42503          	lw	a0,-68(s0)
200155fe:	ad9ff0ef          	jal	ra,200150d6 <__metal_driver_sifive_fe310_g000_pll_config_offset>
20015602:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:353
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
20015606:	fbc42503          	lw	a0,-68(s0)
2001560a:	aa7ff0ef          	jal	ra,200150b0 <__metal_driver_sifive_fe310_g000_pll_divider_offset>
2001560e:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:354
    long base = __metal_driver_sifive_fe310_g000_prci_base();
20015612:	aebff0ef          	jal	ra,200150fc <__metal_driver_sifive_fe310_g000_prci_base>
20015616:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:356
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
2001561a:	fdc42703          	lw	a4,-36(s0)
2001561e:	fe442783          	lw	a5,-28(s0)
20015622:	97ba                	add	a5,a5,a4
20015624:	fcf42c23          	sw	a5,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:357
    __metal_io_u32 *plloutdiv = (__metal_io_u32 *)(base + divider_offset);
20015628:	fdc42703          	lw	a4,-36(s0)
2001562c:	fe042783          	lw	a5,-32(s0)
20015630:	97ba                	add	a5,a5,a4
20015632:	fcf42a23          	sw	a5,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:360
    if (__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL)
20015636:	fd842783          	lw	a5,-40(s0)
2001563a:	4398                	lw	a4,0(a5)
2001563c:	67c1                	lui	a5,0x10
2001563e:	8ff9                	and	a5,a5,a4
20015640:	cb91                	beqz	a5,20015654 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x82>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:361
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
20015642:	fd842783          	lw	a5,-40(s0)
20015646:	4398                	lw	a4,0(a5)
20015648:	77c1                	lui	a5,0xffff0
2001564a:	17fd                	addi	a5,a5,-1
2001564c:	8f7d                	and	a4,a4,a5
2001564e:	fd842783          	lw	a5,-40(s0)
20015652:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:366
        __METAL_ACCESS_ONCE(pllcfg) & PLL_REFSEL ? pllref : pllsel0);
20015654:	fd842783          	lw	a5,-40(s0)
20015658:	4398                	lw	a4,0(a5)
2001565a:	000207b7          	lui	a5,0x20
2001565e:	8ff9                	and	a5,a5,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365
    long ref_hz = metal_clock_get_rate_hz(
20015660:	c781                	beqz	a5,20015668 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x96>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 1)
20015662:	fec42783          	lw	a5,-20(s0)
20015666:	a019                	j	2001566c <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x9a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 2)
20015668:	fe842783          	lw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 4)
2001566c:	853e                	mv	a0,a5
2001566e:	515010ef          	jal	ra,20017382 <metal_clock_get_rate_hz>
20015672:	fca42823          	sw	a0,-48(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 4)
    if ((ref_hz * 3 / 4) <= rate && (ref_hz * 5 / 4) >= rate) {
20015676:	fd042703          	lw	a4,-48(s0)
2001567a:	87ba                	mv	a5,a4
2001567c:	0786                	slli	a5,a5,0x1
2001567e:	97ba                	add	a5,a5,a4
20015680:	41f7d713          	srai	a4,a5,0x1f
20015684:	8b0d                	andi	a4,a4,3
20015686:	97ba                	add	a5,a5,a4
20015688:	8789                	srai	a5,a5,0x2
2001568a:	873e                	mv	a4,a5
2001568c:	fb842783          	lw	a5,-72(s0)
20015690:	02e7cb63          	blt	a5,a4,200156c6 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 1)
20015694:	fd042703          	lw	a4,-48(s0)
20015698:	87ba                	mv	a5,a4
2001569a:	078a                	slli	a5,a5,0x2
2001569c:	97ba                	add	a5,a5,a4
2001569e:	41f7d713          	srai	a4,a5,0x1f
200156a2:	8b0d                	andi	a4,a4,3
200156a4:	97ba                	add	a5,a5,a4
200156a6:	8789                	srai	a5,a5,0x2
200156a8:	873e                	mv	a4,a5
200156aa:	fb842783          	lw	a5,-72(s0)
200156ae:	00f74c63          	blt	a4,a5,200156c6 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:371
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
200156b2:	fd842783          	lw	a5,-40(s0)
200156b6:	4398                	lw	a4,0(a5)
200156b8:	000407b7          	lui	a5,0x40
200156bc:	8f5d                	or	a4,a4,a5
200156be:	fd842783          	lw	a5,-40(s0)
200156c2:	c398                	sw	a4,0(a5)
200156c4:	a881                	j	20015714 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:373
        int config_index = find_closest_config(ref_hz, rate);
200156c6:	fb842583          	lw	a1,-72(s0)
200156ca:	fd042503          	lw	a0,-48(s0)
200156ce:	cb5ff0ef          	jal	ra,20015382 <find_closest_config>
200156d2:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:374
        if (config_index != -1) {
200156d6:	fcc42703          	lw	a4,-52(s0)
200156da:	57fd                	li	a5,-1
200156dc:	02f70363          	beq	a4,a5,20015702 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x130>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:375
            configure_pll(pllcfg, plloutdiv, &(pll_configs[config_index]));
200156e0:	fcc42783          	lw	a5,-52(s0)
200156e4:	00579713          	slli	a4,a5,0x5
200156e8:	200107b7          	lui	a5,0x20010
200156ec:	6d478793          	addi	a5,a5,1748 # 200106d4 <pll_configs>
200156f0:	97ba                	add	a5,a5,a4
200156f2:	863e                	mv	a2,a5
200156f4:	fd442583          	lw	a1,-44(s0)
200156f8:	fd842503          	lw	a0,-40(s0)
200156fc:	d33ff0ef          	jal	ra,2001542e <configure_pll>
20015700:	a811                	j	20015714 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:378
            __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
20015702:	fd842783          	lw	a5,-40(s0)
20015706:	4398                	lw	a4,0(a5)
20015708:	000407b7          	lui	a5,0x40
2001570c:	8f5d                	or	a4,a4,a5
2001570e:	fd842783          	lw	a5,-40(s0)
20015712:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:383
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_SEL;
20015714:	fd842783          	lw	a5,-40(s0)
20015718:	4398                	lw	a4,0(a5)
2001571a:	67c1                	lui	a5,0x10
2001571c:	8f5d                	or	a4,a4,a5
2001571e:	fd842783          	lw	a5,-40(s0)
20015722:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:385
    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
20015724:	fbc42503          	lw	a0,-68(s0)
20015728:	aebff0ef          	jal	ra,20015212 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>
2001572c:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:386
}
2001572e:	853e                	mv	a0,a5
20015730:	40b6                	lw	ra,76(sp)
20015732:	4426                	lw	s0,72(sp)
20015734:	6161                	addi	sp,sp,80
20015736:	8082                	ret

20015738 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1364
{
20015738:	1141                	addi	sp,sp,-16
2001573a:	c622                	sw	s0,12(sp)
2001573c:	0800                	addi	s0,sp,16
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1365
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
2001573e:	100087b7          	lui	a5,0x10008
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1366
}
20015742:	853e                	mv	a0,a5
20015744:	4432                	lw	s0,12(sp)
20015746:	0141                	addi	sp,sp,16
20015748:	8082                	ret

2001574a <__metal_driver_sifive_fe310_g000_prci_get_reg>:
__metal_driver_sifive_fe310_g000_prci_get_reg():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:12

#include <metal/drivers/sifive_fe310-g000_prci.h>
#include <metal/machine.h>

long __metal_driver_sifive_fe310_g000_prci_get_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset) {
2001574a:	7179                	addi	sp,sp,-48
2001574c:	d606                	sw	ra,44(sp)
2001574e:	d422                	sw	s0,40(sp)
20015750:	1800                	addi	s0,sp,48
20015752:	fca42e23          	sw	a0,-36(s0)
20015756:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:13
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
2001575a:	3ff9                	jal	20015738 <__metal_driver_sifive_fe310_g000_prci_base>
2001575c:	87aa                	mv	a5,a0
2001575e:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:14
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset));
20015762:	fd842703          	lw	a4,-40(s0)
20015766:	fec42783          	lw	a5,-20(s0)
2001576a:	97ba                	add	a5,a5,a4
2001576c:	439c                	lw	a5,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:15
}
2001576e:	853e                	mv	a0,a5
20015770:	50b2                	lw	ra,44(sp)
20015772:	5422                	lw	s0,40(sp)
20015774:	6145                	addi	sp,sp,48
20015776:	8082                	ret

20015778 <__metal_driver_sifive_fe310_g000_prci_set_reg>:
__metal_driver_sifive_fe310_g000_prci_set_reg():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:19

long __metal_driver_sifive_fe310_g000_prci_set_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset,
    long value) {
20015778:	7179                	addi	sp,sp,-48
2001577a:	d606                	sw	ra,44(sp)
2001577c:	d422                	sw	s0,40(sp)
2001577e:	1800                	addi	s0,sp,48
20015780:	fca42e23          	sw	a0,-36(s0)
20015784:	fcb42c23          	sw	a1,-40(s0)
20015788:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:20
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
2001578c:	3775                	jal	20015738 <__metal_driver_sifive_fe310_g000_prci_base>
2001578e:	87aa                	mv	a5,a0
20015790:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:21
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset)) = value;
20015794:	fd842703          	lw	a4,-40(s0)
20015798:	fec42783          	lw	a5,-20(s0)
2001579c:	97ba                	add	a5,a5,a4
2001579e:	873e                	mv	a4,a5
200157a0:	fd442783          	lw	a5,-44(s0)
200157a4:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:22
}
200157a6:	853e                	mv	a0,a5
200157a8:	50b2                	lw	ra,44(sp)
200157aa:	5422                	lw	s0,40(sp)
200157ac:	6145                	addi	sp,sp,48
200157ae:	8082                	ret

200157b0 <__metal_driver_sifive_gpio0_base>:
__metal_driver_sifive_gpio0_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:430
{
200157b0:	1101                	addi	sp,sp,-32
200157b2:	ce22                	sw	s0,28(sp)
200157b4:	1000                	addi	s0,sp,32
200157b6:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:431
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
200157ba:	fec42703          	lw	a4,-20(s0)
200157be:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
200157c2:	00f71563          	bne	a4,a5,200157cc <__metal_driver_sifive_gpio0_base+0x1c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:432
		return METAL_SIFIVE_GPIO0_10012000_BASE_ADDRESS;
200157c6:	100127b7          	lui	a5,0x10012
200157ca:	a011                	j	200157ce <__metal_driver_sifive_gpio0_base+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:435
		return 0;
200157cc:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:437
}
200157ce:	853e                	mv	a0,a5
200157d0:	4472                	lw	s0,28(sp)
200157d2:	6105                	addi	sp,sp,32
200157d4:	8082                	ret

200157d6 <__metal_driver_sifive_gpio0_interrupt_parent>:
__metal_driver_sifive_gpio0_interrupt_parent():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:460
{
200157d6:	1101                	addi	sp,sp,-32
200157d8:	ce22                	sw	s0,28(sp)
200157da:	1000                	addi	s0,sp,32
200157dc:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:461
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
200157e0:	fec42703          	lw	a4,-20(s0)
200157e4:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
200157e8:	00f71763          	bne	a4,a5,200157f6 <__metal_driver_sifive_gpio0_interrupt_parent+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:462
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
200157ec:	800007b7          	lui	a5,0x80000
200157f0:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffeca0>
200157f4:	a011                	j	200157f8 <__metal_driver_sifive_gpio0_interrupt_parent+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:465
		return 0;
200157f6:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:467
}
200157f8:	853e                	mv	a0,a5
200157fa:	4472                	lw	s0,28(sp)
200157fc:	6105                	addi	sp,sp,32
200157fe:	8082                	ret

20015800 <__metal_driver_sifive_gpio0_interrupt_lines>:
__metal_driver_sifive_gpio0_interrupt_lines():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:470
{
20015800:	1101                	addi	sp,sp,-32
20015802:	ce22                	sw	s0,28(sp)
20015804:	1000                	addi	s0,sp,32
20015806:	fea42623          	sw	a0,-20(s0)
2001580a:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:471
	if (((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 0)) {
2001580e:	fec42703          	lw	a4,-20(s0)
20015812:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015816:	00f71763          	bne	a4,a5,20015824 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:471 (discriminator 1)
2001581a:	fe842783          	lw	a5,-24(s0)
2001581e:	e399                	bnez	a5,20015824 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:472
		return 8;
20015820:	47a1                	li	a5,8
20015822:	ae15                	j	20015b56 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:474
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 1))) {
20015824:	fec42703          	lw	a4,-20(s0)
20015828:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
2001582c:	00f71963          	bne	a4,a5,2001583e <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:474 (discriminator 1)
20015830:	fe842703          	lw	a4,-24(s0)
20015834:	4785                	li	a5,1
20015836:	00f71463          	bne	a4,a5,2001583e <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:475
		return 9;
2001583a:	47a5                	li	a5,9
2001583c:	ae29                	j	20015b56 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:477
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 2))) {
2001583e:	fec42703          	lw	a4,-20(s0)
20015842:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015846:	00f71963          	bne	a4,a5,20015858 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:477 (discriminator 1)
2001584a:	fe842703          	lw	a4,-24(s0)
2001584e:	4789                	li	a5,2
20015850:	00f71463          	bne	a4,a5,20015858 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:478
		return 10;
20015854:	47a9                	li	a5,10
20015856:	a601                	j	20015b56 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:480
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 3))) {
20015858:	fec42703          	lw	a4,-20(s0)
2001585c:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015860:	00f71963          	bne	a4,a5,20015872 <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:480 (discriminator 1)
20015864:	fe842703          	lw	a4,-24(s0)
20015868:	478d                	li	a5,3
2001586a:	00f71463          	bne	a4,a5,20015872 <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:481
		return 11;
2001586e:	47ad                	li	a5,11
20015870:	a4dd                	j	20015b56 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:483
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 4))) {
20015872:	fec42703          	lw	a4,-20(s0)
20015876:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
2001587a:	00f71963          	bne	a4,a5,2001588c <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:483 (discriminator 1)
2001587e:	fe842703          	lw	a4,-24(s0)
20015882:	4791                	li	a5,4
20015884:	00f71463          	bne	a4,a5,2001588c <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:484
		return 12;
20015888:	47b1                	li	a5,12
2001588a:	a4f1                	j	20015b56 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:486
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 5))) {
2001588c:	fec42703          	lw	a4,-20(s0)
20015890:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015894:	00f71963          	bne	a4,a5,200158a6 <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:486 (discriminator 1)
20015898:	fe842703          	lw	a4,-24(s0)
2001589c:	4795                	li	a5,5
2001589e:	00f71463          	bne	a4,a5,200158a6 <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:487
		return 13;
200158a2:	47b5                	li	a5,13
200158a4:	ac4d                	j	20015b56 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:489
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 6))) {
200158a6:	fec42703          	lw	a4,-20(s0)
200158aa:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
200158ae:	00f71963          	bne	a4,a5,200158c0 <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:489 (discriminator 1)
200158b2:	fe842703          	lw	a4,-24(s0)
200158b6:	4799                	li	a5,6
200158b8:	00f71463          	bne	a4,a5,200158c0 <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:490
		return 14;
200158bc:	47b9                	li	a5,14
200158be:	ac61                	j	20015b56 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:492
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 7))) {
200158c0:	fec42703          	lw	a4,-20(s0)
200158c4:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
200158c8:	00f71963          	bne	a4,a5,200158da <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:492 (discriminator 1)
200158cc:	fe842703          	lw	a4,-24(s0)
200158d0:	479d                	li	a5,7
200158d2:	00f71463          	bne	a4,a5,200158da <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:493
		return 15;
200158d6:	47bd                	li	a5,15
200158d8:	acbd                	j	20015b56 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:495
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 8))) {
200158da:	fec42703          	lw	a4,-20(s0)
200158de:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
200158e2:	00f71963          	bne	a4,a5,200158f4 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:495 (discriminator 1)
200158e6:	fe842703          	lw	a4,-24(s0)
200158ea:	47a1                	li	a5,8
200158ec:	00f71463          	bne	a4,a5,200158f4 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:496
		return 16;
200158f0:	47c1                	li	a5,16
200158f2:	a495                	j	20015b56 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:498
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 9))) {
200158f4:	fec42703          	lw	a4,-20(s0)
200158f8:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
200158fc:	00f71963          	bne	a4,a5,2001590e <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:498 (discriminator 1)
20015900:	fe842703          	lw	a4,-24(s0)
20015904:	47a5                	li	a5,9
20015906:	00f71463          	bne	a4,a5,2001590e <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:499
		return 17;
2001590a:	47c5                	li	a5,17
2001590c:	a4a9                	j	20015b56 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:501
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 10))) {
2001590e:	fec42703          	lw	a4,-20(s0)
20015912:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015916:	00f71963          	bne	a4,a5,20015928 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:501 (discriminator 1)
2001591a:	fe842703          	lw	a4,-24(s0)
2001591e:	47a9                	li	a5,10
20015920:	00f71463          	bne	a4,a5,20015928 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:502
		return 18;
20015924:	47c9                	li	a5,18
20015926:	ac05                	j	20015b56 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:504
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 11))) {
20015928:	fec42703          	lw	a4,-20(s0)
2001592c:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015930:	00f71963          	bne	a4,a5,20015942 <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:504 (discriminator 1)
20015934:	fe842703          	lw	a4,-24(s0)
20015938:	47ad                	li	a5,11
2001593a:	00f71463          	bne	a4,a5,20015942 <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:505
		return 19;
2001593e:	47cd                	li	a5,19
20015940:	ac19                	j	20015b56 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:507
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 12))) {
20015942:	fec42703          	lw	a4,-20(s0)
20015946:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
2001594a:	00f71963          	bne	a4,a5,2001595c <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:507 (discriminator 1)
2001594e:	fe842703          	lw	a4,-24(s0)
20015952:	47b1                	li	a5,12
20015954:	00f71463          	bne	a4,a5,2001595c <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:508
		return 20;
20015958:	47d1                	li	a5,20
2001595a:	aaf5                	j	20015b56 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:510
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 13))) {
2001595c:	fec42703          	lw	a4,-20(s0)
20015960:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015964:	00f71963          	bne	a4,a5,20015976 <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:510 (discriminator 1)
20015968:	fe842703          	lw	a4,-24(s0)
2001596c:	47b5                	li	a5,13
2001596e:	00f71463          	bne	a4,a5,20015976 <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:511
		return 21;
20015972:	47d5                	li	a5,21
20015974:	a2cd                	j	20015b56 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:513
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 14))) {
20015976:	fec42703          	lw	a4,-20(s0)
2001597a:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
2001597e:	00f71963          	bne	a4,a5,20015990 <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:513 (discriminator 1)
20015982:	fe842703          	lw	a4,-24(s0)
20015986:	47b9                	li	a5,14
20015988:	00f71463          	bne	a4,a5,20015990 <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:514
		return 22;
2001598c:	47d9                	li	a5,22
2001598e:	a2e1                	j	20015b56 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:516
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 15))) {
20015990:	fec42703          	lw	a4,-20(s0)
20015994:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015998:	00f71963          	bne	a4,a5,200159aa <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:516 (discriminator 1)
2001599c:	fe842703          	lw	a4,-24(s0)
200159a0:	47bd                	li	a5,15
200159a2:	00f71463          	bne	a4,a5,200159aa <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:517
		return 23;
200159a6:	47dd                	li	a5,23
200159a8:	a27d                	j	20015b56 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:519
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 16))) {
200159aa:	fec42703          	lw	a4,-20(s0)
200159ae:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
200159b2:	00f71963          	bne	a4,a5,200159c4 <__metal_driver_sifive_gpio0_interrupt_lines+0x1c4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:519 (discriminator 1)
200159b6:	fe842703          	lw	a4,-24(s0)
200159ba:	47c1                	li	a5,16
200159bc:	00f71463          	bne	a4,a5,200159c4 <__metal_driver_sifive_gpio0_interrupt_lines+0x1c4>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:520
		return 24;
200159c0:	47e1                	li	a5,24
200159c2:	aa51                	j	20015b56 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:522
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 17))) {
200159c4:	fec42703          	lw	a4,-20(s0)
200159c8:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
200159cc:	00f71963          	bne	a4,a5,200159de <__metal_driver_sifive_gpio0_interrupt_lines+0x1de>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:522 (discriminator 1)
200159d0:	fe842703          	lw	a4,-24(s0)
200159d4:	47c5                	li	a5,17
200159d6:	00f71463          	bne	a4,a5,200159de <__metal_driver_sifive_gpio0_interrupt_lines+0x1de>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:523
		return 25;
200159da:	47e5                	li	a5,25
200159dc:	aaad                	j	20015b56 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:525
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 18))) {
200159de:	fec42703          	lw	a4,-20(s0)
200159e2:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
200159e6:	00f71963          	bne	a4,a5,200159f8 <__metal_driver_sifive_gpio0_interrupt_lines+0x1f8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:525 (discriminator 1)
200159ea:	fe842703          	lw	a4,-24(s0)
200159ee:	47c9                	li	a5,18
200159f0:	00f71463          	bne	a4,a5,200159f8 <__metal_driver_sifive_gpio0_interrupt_lines+0x1f8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:526
		return 26;
200159f4:	47e9                	li	a5,26
200159f6:	a285                	j	20015b56 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:528
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 19))) {
200159f8:	fec42703          	lw	a4,-20(s0)
200159fc:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015a00:	00f71963          	bne	a4,a5,20015a12 <__metal_driver_sifive_gpio0_interrupt_lines+0x212>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:528 (discriminator 1)
20015a04:	fe842703          	lw	a4,-24(s0)
20015a08:	47cd                	li	a5,19
20015a0a:	00f71463          	bne	a4,a5,20015a12 <__metal_driver_sifive_gpio0_interrupt_lines+0x212>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:529
		return 27;
20015a0e:	47ed                	li	a5,27
20015a10:	a299                	j	20015b56 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:531
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 20))) {
20015a12:	fec42703          	lw	a4,-20(s0)
20015a16:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015a1a:	00f71963          	bne	a4,a5,20015a2c <__metal_driver_sifive_gpio0_interrupt_lines+0x22c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:531 (discriminator 1)
20015a1e:	fe842703          	lw	a4,-24(s0)
20015a22:	47d1                	li	a5,20
20015a24:	00f71463          	bne	a4,a5,20015a2c <__metal_driver_sifive_gpio0_interrupt_lines+0x22c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:532
		return 28;
20015a28:	47f1                	li	a5,28
20015a2a:	a235                	j	20015b56 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:534
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 21))) {
20015a2c:	fec42703          	lw	a4,-20(s0)
20015a30:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015a34:	00f71963          	bne	a4,a5,20015a46 <__metal_driver_sifive_gpio0_interrupt_lines+0x246>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:534 (discriminator 1)
20015a38:	fe842703          	lw	a4,-24(s0)
20015a3c:	47d5                	li	a5,21
20015a3e:	00f71463          	bne	a4,a5,20015a46 <__metal_driver_sifive_gpio0_interrupt_lines+0x246>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:535
		return 29;
20015a42:	47f5                	li	a5,29
20015a44:	aa09                	j	20015b56 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:537
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 22))) {
20015a46:	fec42703          	lw	a4,-20(s0)
20015a4a:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015a4e:	00f71963          	bne	a4,a5,20015a60 <__metal_driver_sifive_gpio0_interrupt_lines+0x260>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:537 (discriminator 1)
20015a52:	fe842703          	lw	a4,-24(s0)
20015a56:	47d9                	li	a5,22
20015a58:	00f71463          	bne	a4,a5,20015a60 <__metal_driver_sifive_gpio0_interrupt_lines+0x260>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:538
		return 30;
20015a5c:	47f9                	li	a5,30
20015a5e:	a8e5                	j	20015b56 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:540
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 23))) {
20015a60:	fec42703          	lw	a4,-20(s0)
20015a64:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015a68:	00f71963          	bne	a4,a5,20015a7a <__metal_driver_sifive_gpio0_interrupt_lines+0x27a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:540 (discriminator 1)
20015a6c:	fe842703          	lw	a4,-24(s0)
20015a70:	47dd                	li	a5,23
20015a72:	00f71463          	bne	a4,a5,20015a7a <__metal_driver_sifive_gpio0_interrupt_lines+0x27a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:541
		return 31;
20015a76:	47fd                	li	a5,31
20015a78:	a8f9                	j	20015b56 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:543
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 24))) {
20015a7a:	fec42703          	lw	a4,-20(s0)
20015a7e:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015a82:	00f71a63          	bne	a4,a5,20015a96 <__metal_driver_sifive_gpio0_interrupt_lines+0x296>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:543 (discriminator 1)
20015a86:	fe842703          	lw	a4,-24(s0)
20015a8a:	47e1                	li	a5,24
20015a8c:	00f71563          	bne	a4,a5,20015a96 <__metal_driver_sifive_gpio0_interrupt_lines+0x296>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:544
		return 32;
20015a90:	02000793          	li	a5,32
20015a94:	a0c9                	j	20015b56 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:546
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 25))) {
20015a96:	fec42703          	lw	a4,-20(s0)
20015a9a:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015a9e:	00f71a63          	bne	a4,a5,20015ab2 <__metal_driver_sifive_gpio0_interrupt_lines+0x2b2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:546 (discriminator 1)
20015aa2:	fe842703          	lw	a4,-24(s0)
20015aa6:	47e5                	li	a5,25
20015aa8:	00f71563          	bne	a4,a5,20015ab2 <__metal_driver_sifive_gpio0_interrupt_lines+0x2b2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:547
		return 33;
20015aac:	02100793          	li	a5,33
20015ab0:	a05d                	j	20015b56 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:549
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 26))) {
20015ab2:	fec42703          	lw	a4,-20(s0)
20015ab6:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015aba:	00f71a63          	bne	a4,a5,20015ace <__metal_driver_sifive_gpio0_interrupt_lines+0x2ce>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:549 (discriminator 1)
20015abe:	fe842703          	lw	a4,-24(s0)
20015ac2:	47e9                	li	a5,26
20015ac4:	00f71563          	bne	a4,a5,20015ace <__metal_driver_sifive_gpio0_interrupt_lines+0x2ce>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:550
		return 34;
20015ac8:	02200793          	li	a5,34
20015acc:	a069                	j	20015b56 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:552
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 27))) {
20015ace:	fec42703          	lw	a4,-20(s0)
20015ad2:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015ad6:	00f71a63          	bne	a4,a5,20015aea <__metal_driver_sifive_gpio0_interrupt_lines+0x2ea>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:552 (discriminator 1)
20015ada:	fe842703          	lw	a4,-24(s0)
20015ade:	47ed                	li	a5,27
20015ae0:	00f71563          	bne	a4,a5,20015aea <__metal_driver_sifive_gpio0_interrupt_lines+0x2ea>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:553
		return 35;
20015ae4:	02300793          	li	a5,35
20015ae8:	a0bd                	j	20015b56 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:555
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 28))) {
20015aea:	fec42703          	lw	a4,-20(s0)
20015aee:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015af2:	00f71a63          	bne	a4,a5,20015b06 <__metal_driver_sifive_gpio0_interrupt_lines+0x306>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:555 (discriminator 1)
20015af6:	fe842703          	lw	a4,-24(s0)
20015afa:	47f1                	li	a5,28
20015afc:	00f71563          	bne	a4,a5,20015b06 <__metal_driver_sifive_gpio0_interrupt_lines+0x306>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:556
		return 36;
20015b00:	02400793          	li	a5,36
20015b04:	a889                	j	20015b56 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:558
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 29))) {
20015b06:	fec42703          	lw	a4,-20(s0)
20015b0a:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015b0e:	00f71963          	bne	a4,a5,20015b20 <__metal_driver_sifive_gpio0_interrupt_lines+0x320>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:558 (discriminator 1)
20015b12:	fe842703          	lw	a4,-24(s0)
20015b16:	47f5                	li	a5,29
20015b18:	00f71463          	bne	a4,a5,20015b20 <__metal_driver_sifive_gpio0_interrupt_lines+0x320>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:559
		return 27;
20015b1c:	47ed                	li	a5,27
20015b1e:	a825                	j	20015b56 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:561
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 30))) {
20015b20:	fec42703          	lw	a4,-20(s0)
20015b24:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015b28:	00f71963          	bne	a4,a5,20015b3a <__metal_driver_sifive_gpio0_interrupt_lines+0x33a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:561 (discriminator 1)
20015b2c:	fe842703          	lw	a4,-24(s0)
20015b30:	47f9                	li	a5,30
20015b32:	00f71463          	bne	a4,a5,20015b3a <__metal_driver_sifive_gpio0_interrupt_lines+0x33a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:562
		return 28;
20015b36:	47f1                	li	a5,28
20015b38:	a839                	j	20015b56 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:564
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 31))) {
20015b3a:	fec42703          	lw	a4,-20(s0)
20015b3e:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20015b42:	00f71963          	bne	a4,a5,20015b54 <__metal_driver_sifive_gpio0_interrupt_lines+0x354>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:564 (discriminator 1)
20015b46:	fe842703          	lw	a4,-24(s0)
20015b4a:	47fd                	li	a5,31
20015b4c:	00f71463          	bne	a4,a5,20015b54 <__metal_driver_sifive_gpio0_interrupt_lines+0x354>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:565
		return 29;
20015b50:	47f5                	li	a5,29
20015b52:	a011                	j	20015b56 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:568
		return 0;
20015b54:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:570
}
20015b56:	853e                	mv	a0,a5
20015b58:	4472                	lw	s0,28(sp)
20015b5a:	6105                	addi	sp,sp,32
20015b5c:	8082                	ret

20015b5e <__metal_driver_sifive_gpio0_enable_input>:
__metal_driver_sifive_gpio0_enable_input():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:13
#include <metal/drivers/sifive_gpio0.h>
#include <metal/io.h>
#include <metal/machine.h>

int __metal_driver_sifive_gpio0_enable_input(struct metal_gpio *ggpio,
                                             long source) {
20015b5e:	7179                	addi	sp,sp,-48
20015b60:	d606                	sw	ra,44(sp)
20015b62:	d422                	sw	s0,40(sp)
20015b64:	1800                	addi	s0,sp,48
20015b66:	fca42e23          	sw	a0,-36(s0)
20015b6a:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:14
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015b6e:	fdc42503          	lw	a0,-36(s0)
20015b72:	c3fff0ef          	jal	ra,200157b0 <__metal_driver_sifive_gpio0_base>
20015b76:	87aa                	mv	a5,a0
20015b78:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:17

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) |= source;
20015b7c:	fec42783          	lw	a5,-20(s0)
20015b80:	0791                	addi	a5,a5,4
20015b82:	4398                	lw	a4,0(a5)
20015b84:	fd842783          	lw	a5,-40(s0)
20015b88:	fec42683          	lw	a3,-20(s0)
20015b8c:	0691                	addi	a3,a3,4
20015b8e:	8fd9                	or	a5,a5,a4
20015b90:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:19

    return 0;
20015b92:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:20
}
20015b94:	853e                	mv	a0,a5
20015b96:	50b2                	lw	ra,44(sp)
20015b98:	5422                	lw	s0,40(sp)
20015b9a:	6145                	addi	sp,sp,48
20015b9c:	8082                	ret

20015b9e <__metal_driver_sifive_gpio0_disable_input>:
__metal_driver_sifive_gpio0_disable_input():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:23

int __metal_driver_sifive_gpio0_disable_input(struct metal_gpio *ggpio,
                                              long source) {
20015b9e:	7179                	addi	sp,sp,-48
20015ba0:	d606                	sw	ra,44(sp)
20015ba2:	d422                	sw	s0,40(sp)
20015ba4:	1800                	addi	s0,sp,48
20015ba6:	fca42e23          	sw	a0,-36(s0)
20015baa:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:24
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015bae:	fdc42503          	lw	a0,-36(s0)
20015bb2:	bffff0ef          	jal	ra,200157b0 <__metal_driver_sifive_gpio0_base>
20015bb6:	87aa                	mv	a5,a0
20015bb8:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:27

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) &= ~source;
20015bbc:	fec42783          	lw	a5,-20(s0)
20015bc0:	0791                	addi	a5,a5,4
20015bc2:	439c                	lw	a5,0(a5)
20015bc4:	fd842703          	lw	a4,-40(s0)
20015bc8:	fff74713          	not	a4,a4
20015bcc:	86ba                	mv	a3,a4
20015bce:	fec42703          	lw	a4,-20(s0)
20015bd2:	0711                	addi	a4,a4,4
20015bd4:	8ff5                	and	a5,a5,a3
20015bd6:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:29

    return 0;
20015bd8:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:30
}
20015bda:	853e                	mv	a0,a5
20015bdc:	50b2                	lw	ra,44(sp)
20015bde:	5422                	lw	s0,40(sp)
20015be0:	6145                	addi	sp,sp,48
20015be2:	8082                	ret

20015be4 <__metal_driver_sifive_gpio0_input>:
__metal_driver_sifive_gpio0_input():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:32

long __metal_driver_sifive_gpio0_input(struct metal_gpio *ggpio) {
20015be4:	7179                	addi	sp,sp,-48
20015be6:	d606                	sw	ra,44(sp)
20015be8:	d422                	sw	s0,40(sp)
20015bea:	1800                	addi	s0,sp,48
20015bec:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:33
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015bf0:	fdc42503          	lw	a0,-36(s0)
20015bf4:	bbdff0ef          	jal	ra,200157b0 <__metal_driver_sifive_gpio0_base>
20015bf8:	87aa                	mv	a5,a0
20015bfa:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:35

    return __METAL_ACCESS_ONCE(
20015bfe:	fec42783          	lw	a5,-20(s0)
20015c02:	439c                	lw	a5,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:37
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_VALUE));
}
20015c04:	853e                	mv	a0,a5
20015c06:	50b2                	lw	ra,44(sp)
20015c08:	5422                	lw	s0,40(sp)
20015c0a:	6145                	addi	sp,sp,48
20015c0c:	8082                	ret

20015c0e <__metal_driver_sifive_gpio0_output>:
__metal_driver_sifive_gpio0_output():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:39

long __metal_driver_sifive_gpio0_output(struct metal_gpio *ggpio) {
20015c0e:	7179                	addi	sp,sp,-48
20015c10:	d606                	sw	ra,44(sp)
20015c12:	d422                	sw	s0,40(sp)
20015c14:	1800                	addi	s0,sp,48
20015c16:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:40
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015c1a:	fdc42503          	lw	a0,-36(s0)
20015c1e:	b93ff0ef          	jal	ra,200157b0 <__metal_driver_sifive_gpio0_base>
20015c22:	87aa                	mv	a5,a0
20015c24:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:42

    return __METAL_ACCESS_ONCE(
20015c28:	fec42783          	lw	a5,-20(s0)
20015c2c:	07b1                	addi	a5,a5,12
20015c2e:	439c                	lw	a5,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:44
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT));
}
20015c30:	853e                	mv	a0,a5
20015c32:	50b2                	lw	ra,44(sp)
20015c34:	5422                	lw	s0,40(sp)
20015c36:	6145                	addi	sp,sp,48
20015c38:	8082                	ret

20015c3a <__metal_driver_sifive_gpio0_disable_output>:
__metal_driver_sifive_gpio0_disable_output():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:47

int __metal_driver_sifive_gpio0_disable_output(struct metal_gpio *ggpio,
                                               long source) {
20015c3a:	7179                	addi	sp,sp,-48
20015c3c:	d606                	sw	ra,44(sp)
20015c3e:	d422                	sw	s0,40(sp)
20015c40:	1800                	addi	s0,sp,48
20015c42:	fca42e23          	sw	a0,-36(s0)
20015c46:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:48
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015c4a:	fdc42503          	lw	a0,-36(s0)
20015c4e:	b63ff0ef          	jal	ra,200157b0 <__metal_driver_sifive_gpio0_base>
20015c52:	87aa                	mv	a5,a0
20015c54:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:51

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) &= ~source;
20015c58:	fec42783          	lw	a5,-20(s0)
20015c5c:	07a1                	addi	a5,a5,8
20015c5e:	439c                	lw	a5,0(a5)
20015c60:	fd842703          	lw	a4,-40(s0)
20015c64:	fff74713          	not	a4,a4
20015c68:	86ba                	mv	a3,a4
20015c6a:	fec42703          	lw	a4,-20(s0)
20015c6e:	0721                	addi	a4,a4,8
20015c70:	8ff5                	and	a5,a5,a3
20015c72:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:53

    return 0;
20015c74:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:54
}
20015c76:	853e                	mv	a0,a5
20015c78:	50b2                	lw	ra,44(sp)
20015c7a:	5422                	lw	s0,40(sp)
20015c7c:	6145                	addi	sp,sp,48
20015c7e:	8082                	ret

20015c80 <__metal_driver_sifive_gpio0_enable_output>:
__metal_driver_sifive_gpio0_enable_output():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:57

int __metal_driver_sifive_gpio0_enable_output(struct metal_gpio *ggpio,
                                              long source) {
20015c80:	7179                	addi	sp,sp,-48
20015c82:	d606                	sw	ra,44(sp)
20015c84:	d422                	sw	s0,40(sp)
20015c86:	1800                	addi	s0,sp,48
20015c88:	fca42e23          	sw	a0,-36(s0)
20015c8c:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:58
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015c90:	fdc42503          	lw	a0,-36(s0)
20015c94:	b1dff0ef          	jal	ra,200157b0 <__metal_driver_sifive_gpio0_base>
20015c98:	87aa                	mv	a5,a0
20015c9a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:61

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) |= source;
20015c9e:	fec42783          	lw	a5,-20(s0)
20015ca2:	07a1                	addi	a5,a5,8
20015ca4:	4398                	lw	a4,0(a5)
20015ca6:	fd842783          	lw	a5,-40(s0)
20015caa:	fec42683          	lw	a3,-20(s0)
20015cae:	06a1                	addi	a3,a3,8
20015cb0:	8fd9                	or	a5,a5,a4
20015cb2:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:63

    return 0;
20015cb4:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:64
}
20015cb6:	853e                	mv	a0,a5
20015cb8:	50b2                	lw	ra,44(sp)
20015cba:	5422                	lw	s0,40(sp)
20015cbc:	6145                	addi	sp,sp,48
20015cbe:	8082                	ret

20015cc0 <__metal_driver_sifive_gpio0_output_set>:
__metal_driver_sifive_gpio0_output_set():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:67

int __metal_driver_sifive_gpio0_output_set(struct metal_gpio *ggpio,
                                           long value) {
20015cc0:	7179                	addi	sp,sp,-48
20015cc2:	d606                	sw	ra,44(sp)
20015cc4:	d422                	sw	s0,40(sp)
20015cc6:	1800                	addi	s0,sp,48
20015cc8:	fca42e23          	sw	a0,-36(s0)
20015ccc:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:68
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015cd0:	fdc42503          	lw	a0,-36(s0)
20015cd4:	addff0ef          	jal	ra,200157b0 <__metal_driver_sifive_gpio0_base>
20015cd8:	87aa                	mv	a5,a0
20015cda:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:70

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) |=
20015cde:	fec42783          	lw	a5,-20(s0)
20015ce2:	07b1                	addi	a5,a5,12
20015ce4:	4398                	lw	a4,0(a5)
20015ce6:	fd842783          	lw	a5,-40(s0)
20015cea:	fec42683          	lw	a3,-20(s0)
20015cee:	06b1                	addi	a3,a3,12
20015cf0:	8fd9                	or	a5,a5,a4
20015cf2:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:73
        value;

    return 0;
20015cf4:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:74
}
20015cf6:	853e                	mv	a0,a5
20015cf8:	50b2                	lw	ra,44(sp)
20015cfa:	5422                	lw	s0,40(sp)
20015cfc:	6145                	addi	sp,sp,48
20015cfe:	8082                	ret

20015d00 <__metal_driver_sifive_gpio0_output_clear>:
__metal_driver_sifive_gpio0_output_clear():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:77

int __metal_driver_sifive_gpio0_output_clear(struct metal_gpio *ggpio,
                                             long value) {
20015d00:	7179                	addi	sp,sp,-48
20015d02:	d606                	sw	ra,44(sp)
20015d04:	d422                	sw	s0,40(sp)
20015d06:	1800                	addi	s0,sp,48
20015d08:	fca42e23          	sw	a0,-36(s0)
20015d0c:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:78
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015d10:	fdc42503          	lw	a0,-36(s0)
20015d14:	a9dff0ef          	jal	ra,200157b0 <__metal_driver_sifive_gpio0_base>
20015d18:	87aa                	mv	a5,a0
20015d1a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:80

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
20015d1e:	fec42783          	lw	a5,-20(s0)
20015d22:	07b1                	addi	a5,a5,12
20015d24:	439c                	lw	a5,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:81
        ~value;
20015d26:	fd842703          	lw	a4,-40(s0)
20015d2a:	fff74713          	not	a4,a4
20015d2e:	86ba                	mv	a3,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:80
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
20015d30:	fec42703          	lw	a4,-20(s0)
20015d34:	0731                	addi	a4,a4,12
20015d36:	8ff5                	and	a5,a5,a3
20015d38:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:83

    return 0;
20015d3a:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:84
}
20015d3c:	853e                	mv	a0,a5
20015d3e:	50b2                	lw	ra,44(sp)
20015d40:	5422                	lw	s0,40(sp)
20015d42:	6145                	addi	sp,sp,48
20015d44:	8082                	ret

20015d46 <__metal_driver_sifive_gpio0_output_toggle>:
__metal_driver_sifive_gpio0_output_toggle():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:87

int __metal_driver_sifive_gpio0_output_toggle(struct metal_gpio *ggpio,
                                              long value) {
20015d46:	7179                	addi	sp,sp,-48
20015d48:	d606                	sw	ra,44(sp)
20015d4a:	d422                	sw	s0,40(sp)
20015d4c:	1800                	addi	s0,sp,48
20015d4e:	fca42e23          	sw	a0,-36(s0)
20015d52:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:88
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015d56:	fdc42503          	lw	a0,-36(s0)
20015d5a:	a57ff0ef          	jal	ra,200157b0 <__metal_driver_sifive_gpio0_base>
20015d5e:	87aa                	mv	a5,a0
20015d60:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:91

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
        __METAL_ACCESS_ONCE(
20015d64:	fec42783          	lw	a5,-20(s0)
20015d68:	07b1                	addi	a5,a5,12
20015d6a:	4398                	lw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
20015d6c:	fd842783          	lw	a5,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
20015d70:	fec42683          	lw	a3,-20(s0)
20015d74:	06b1                	addi	a3,a3,12
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
20015d76:	8fb9                	xor	a5,a5,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
20015d78:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:95
        value;

    return 0;
20015d7a:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:96
}
20015d7c:	853e                	mv	a0,a5
20015d7e:	50b2                	lw	ra,44(sp)
20015d80:	5422                	lw	s0,40(sp)
20015d82:	6145                	addi	sp,sp,48
20015d84:	8082                	ret

20015d86 <__metal_driver_sifive_gpio0_enable_io>:
__metal_driver_sifive_gpio0_enable_io():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:99

int __metal_driver_sifive_gpio0_enable_io(struct metal_gpio *ggpio, long source,
                                          long dest) {
20015d86:	7179                	addi	sp,sp,-48
20015d88:	d606                	sw	ra,44(sp)
20015d8a:	d422                	sw	s0,40(sp)
20015d8c:	1800                	addi	s0,sp,48
20015d8e:	fca42e23          	sw	a0,-36(s0)
20015d92:	fcb42c23          	sw	a1,-40(s0)
20015d96:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:100
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015d9a:	fdc42503          	lw	a0,-36(s0)
20015d9e:	a13ff0ef          	jal	ra,200157b0 <__metal_driver_sifive_gpio0_base>
20015da2:	87aa                	mv	a5,a0
20015da4:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:103

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_SEL)) |= source;
20015da8:	fec42783          	lw	a5,-20(s0)
20015dac:	03c78793          	addi	a5,a5,60
20015db0:	4398                	lw	a4,0(a5)
20015db2:	fd842783          	lw	a5,-40(s0)
20015db6:	fec42683          	lw	a3,-20(s0)
20015dba:	03c68693          	addi	a3,a3,60
20015dbe:	8fd9                	or	a5,a5,a4
20015dc0:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:104
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) |=
20015dc2:	fec42783          	lw	a5,-20(s0)
20015dc6:	03878793          	addi	a5,a5,56
20015dca:	4398                	lw	a4,0(a5)
20015dcc:	fd442783          	lw	a5,-44(s0)
20015dd0:	fec42683          	lw	a3,-20(s0)
20015dd4:	03868693          	addi	a3,a3,56
20015dd8:	8fd9                	or	a5,a5,a4
20015dda:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:107
        dest;

    return 0;
20015ddc:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:108
}
20015dde:	853e                	mv	a0,a5
20015de0:	50b2                	lw	ra,44(sp)
20015de2:	5422                	lw	s0,40(sp)
20015de4:	6145                	addi	sp,sp,48
20015de6:	8082                	ret

20015de8 <__metal_driver_sifive_gpio0_disable_io>:
__metal_driver_sifive_gpio0_disable_io():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:111

int __metal_driver_sifive_gpio0_disable_io(struct metal_gpio *ggpio,
                                           long source) {
20015de8:	7179                	addi	sp,sp,-48
20015dea:	d606                	sw	ra,44(sp)
20015dec:	d422                	sw	s0,40(sp)
20015dee:	1800                	addi	s0,sp,48
20015df0:	fca42e23          	sw	a0,-36(s0)
20015df4:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:112
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015df8:	fdc42503          	lw	a0,-36(s0)
20015dfc:	9b5ff0ef          	jal	ra,200157b0 <__metal_driver_sifive_gpio0_base>
20015e00:	87aa                	mv	a5,a0
20015e02:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:114

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
20015e06:	fec42783          	lw	a5,-20(s0)
20015e0a:	03878793          	addi	a5,a5,56
20015e0e:	439c                	lw	a5,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:115
        ~source;
20015e10:	fd842703          	lw	a4,-40(s0)
20015e14:	fff74713          	not	a4,a4
20015e18:	86ba                	mv	a3,a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:114
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
20015e1a:	fec42703          	lw	a4,-20(s0)
20015e1e:	03870713          	addi	a4,a4,56
20015e22:	8ff5                	and	a5,a5,a3
20015e24:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:117

    return 0;
20015e26:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:118
}
20015e28:	853e                	mv	a0,a5
20015e2a:	50b2                	lw	ra,44(sp)
20015e2c:	5422                	lw	s0,40(sp)
20015e2e:	6145                	addi	sp,sp,48
20015e30:	8082                	ret

20015e32 <__metal_driver_sifive_gpio0_config_int>:
__metal_driver_sifive_gpio0_config_int():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:121

int __metal_driver_sifive_gpio0_config_int(struct metal_gpio *ggpio,
                                           long source, int intr_type) {
20015e32:	7179                	addi	sp,sp,-48
20015e34:	d606                	sw	ra,44(sp)
20015e36:	d422                	sw	s0,40(sp)
20015e38:	1800                	addi	s0,sp,48
20015e3a:	fca42e23          	sw	a0,-36(s0)
20015e3e:	fcb42c23          	sw	a1,-40(s0)
20015e42:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:122
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20015e46:	fdc42503          	lw	a0,-36(s0)
20015e4a:	967ff0ef          	jal	ra,200157b0 <__metal_driver_sifive_gpio0_base>
20015e4e:	87aa                	mv	a5,a0
20015e50:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:124

    switch (intr_type) {
20015e54:	fd442703          	lw	a4,-44(s0)
20015e58:	479d                	li	a5,7
20015e5a:	1ce7e963          	bltu	a5,a4,2001602c <__metal_driver_sifive_gpio0_config_int+0x1fa>
20015e5e:	fd442783          	lw	a5,-44(s0)
20015e62:	00279713          	slli	a4,a5,0x2
20015e66:	200117b7          	lui	a5,0x20011
20015e6a:	f6078793          	addi	a5,a5,-160 # 20010f60 <__metal_driver_vtable_sifive_fe310_g000_pll+0xc>
20015e6e:	97ba                	add	a5,a5,a4
20015e70:	439c                	lw	a5,0(a5)
20015e72:	8782                	jr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:127
    case METAL_GPIO_INT_DISABLE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) &= ~source;
20015e74:	fec42783          	lw	a5,-20(s0)
20015e78:	07e1                	addi	a5,a5,24
20015e7a:	439c                	lw	a5,0(a5)
20015e7c:	fd842703          	lw	a4,-40(s0)
20015e80:	fff74713          	not	a4,a4
20015e84:	86ba                	mv	a3,a4
20015e86:	fec42703          	lw	a4,-20(s0)
20015e8a:	0761                	addi	a4,a4,24
20015e8c:	8ff5                	and	a5,a5,a3
20015e8e:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:129
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) &= ~source;
20015e90:	fec42783          	lw	a5,-20(s0)
20015e94:	02078793          	addi	a5,a5,32
20015e98:	439c                	lw	a5,0(a5)
20015e9a:	fd842703          	lw	a4,-40(s0)
20015e9e:	fff74713          	not	a4,a4
20015ea2:	86ba                	mv	a3,a4
20015ea4:	fec42703          	lw	a4,-20(s0)
20015ea8:	02070713          	addi	a4,a4,32
20015eac:	8ff5                	and	a5,a5,a3
20015eae:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:131
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) &= ~source;
20015eb0:	fec42783          	lw	a5,-20(s0)
20015eb4:	02878793          	addi	a5,a5,40
20015eb8:	439c                	lw	a5,0(a5)
20015eba:	fd842703          	lw	a4,-40(s0)
20015ebe:	fff74713          	not	a4,a4
20015ec2:	86ba                	mv	a3,a4
20015ec4:	fec42703          	lw	a4,-20(s0)
20015ec8:	02870713          	addi	a4,a4,40
20015ecc:	8ff5                	and	a5,a5,a3
20015ece:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:133
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) &= ~source;
20015ed0:	fec42783          	lw	a5,-20(s0)
20015ed4:	03078793          	addi	a5,a5,48
20015ed8:	439c                	lw	a5,0(a5)
20015eda:	fd842703          	lw	a4,-40(s0)
20015ede:	fff74713          	not	a4,a4
20015ee2:	86ba                	mv	a3,a4
20015ee4:	fec42703          	lw	a4,-20(s0)
20015ee8:	03070713          	addi	a4,a4,48
20015eec:	8ff5                	and	a5,a5,a3
20015eee:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:134
        break;
20015ef0:	aa35                	j	2001602c <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:137
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20015ef2:	fec42783          	lw	a5,-20(s0)
20015ef6:	07e1                	addi	a5,a5,24
20015ef8:	4398                	lw	a4,0(a5)
20015efa:	fd842783          	lw	a5,-40(s0)
20015efe:	fec42683          	lw	a3,-20(s0)
20015f02:	06e1                	addi	a3,a3,24
20015f04:	8fd9                	or	a5,a5,a4
20015f06:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:138
        break;
20015f08:	a215                	j	2001602c <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:141
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20015f0a:	fec42783          	lw	a5,-20(s0)
20015f0e:	02078793          	addi	a5,a5,32
20015f12:	4398                	lw	a4,0(a5)
20015f14:	fd842783          	lw	a5,-40(s0)
20015f18:	fec42683          	lw	a3,-20(s0)
20015f1c:	02068693          	addi	a3,a3,32
20015f20:	8fd9                	or	a5,a5,a4
20015f22:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:142
        break;
20015f24:	a221                	j	2001602c <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:145
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20015f26:	fec42783          	lw	a5,-20(s0)
20015f2a:	07e1                	addi	a5,a5,24
20015f2c:	4398                	lw	a4,0(a5)
20015f2e:	fd842783          	lw	a5,-40(s0)
20015f32:	fec42683          	lw	a3,-20(s0)
20015f36:	06e1                	addi	a3,a3,24
20015f38:	8fd9                	or	a5,a5,a4
20015f3a:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:147
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20015f3c:	fec42783          	lw	a5,-20(s0)
20015f40:	02078793          	addi	a5,a5,32
20015f44:	4398                	lw	a4,0(a5)
20015f46:	fd842783          	lw	a5,-40(s0)
20015f4a:	fec42683          	lw	a3,-20(s0)
20015f4e:	02068693          	addi	a3,a3,32
20015f52:	8fd9                	or	a5,a5,a4
20015f54:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:148
        break;
20015f56:	a8d9                	j	2001602c <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:151
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20015f58:	fec42783          	lw	a5,-20(s0)
20015f5c:	02878793          	addi	a5,a5,40
20015f60:	4398                	lw	a4,0(a5)
20015f62:	fd842783          	lw	a5,-40(s0)
20015f66:	fec42683          	lw	a3,-20(s0)
20015f6a:	02868693          	addi	a3,a3,40
20015f6e:	8fd9                	or	a5,a5,a4
20015f70:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:152
        break;
20015f72:	a86d                	j	2001602c <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:155
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20015f74:	fec42783          	lw	a5,-20(s0)
20015f78:	03078793          	addi	a5,a5,48
20015f7c:	4398                	lw	a4,0(a5)
20015f7e:	fd842783          	lw	a5,-40(s0)
20015f82:	fec42683          	lw	a3,-20(s0)
20015f86:	03068693          	addi	a3,a3,48
20015f8a:	8fd9                	or	a5,a5,a4
20015f8c:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:156
        break;
20015f8e:	a879                	j	2001602c <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:159
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20015f90:	fec42783          	lw	a5,-20(s0)
20015f94:	02878793          	addi	a5,a5,40
20015f98:	4398                	lw	a4,0(a5)
20015f9a:	fd842783          	lw	a5,-40(s0)
20015f9e:	fec42683          	lw	a3,-20(s0)
20015fa2:	02868693          	addi	a3,a3,40
20015fa6:	8fd9                	or	a5,a5,a4
20015fa8:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:161
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20015faa:	fec42783          	lw	a5,-20(s0)
20015fae:	03078793          	addi	a5,a5,48
20015fb2:	4398                	lw	a4,0(a5)
20015fb4:	fd842783          	lw	a5,-40(s0)
20015fb8:	fec42683          	lw	a3,-20(s0)
20015fbc:	03068693          	addi	a3,a3,48
20015fc0:	8fd9                	or	a5,a5,a4
20015fc2:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:162
        break;
20015fc4:	a0a5                	j	2001602c <__metal_driver_sifive_gpio0_config_int+0x1fa>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:165
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20015fc6:	fec42783          	lw	a5,-20(s0)
20015fca:	07e1                	addi	a5,a5,24
20015fcc:	4398                	lw	a4,0(a5)
20015fce:	fd842783          	lw	a5,-40(s0)
20015fd2:	fec42683          	lw	a3,-20(s0)
20015fd6:	06e1                	addi	a3,a3,24
20015fd8:	8fd9                	or	a5,a5,a4
20015fda:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:167
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20015fdc:	fec42783          	lw	a5,-20(s0)
20015fe0:	02078793          	addi	a5,a5,32
20015fe4:	4398                	lw	a4,0(a5)
20015fe6:	fd842783          	lw	a5,-40(s0)
20015fea:	fec42683          	lw	a3,-20(s0)
20015fee:	02068693          	addi	a3,a3,32
20015ff2:	8fd9                	or	a5,a5,a4
20015ff4:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:169
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20015ff6:	fec42783          	lw	a5,-20(s0)
20015ffa:	02878793          	addi	a5,a5,40
20015ffe:	4398                	lw	a4,0(a5)
20016000:	fd842783          	lw	a5,-40(s0)
20016004:	fec42683          	lw	a3,-20(s0)
20016008:	02868693          	addi	a3,a3,40
2001600c:	8fd9                	or	a5,a5,a4
2001600e:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:171
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20016010:	fec42783          	lw	a5,-20(s0)
20016014:	03078793          	addi	a5,a5,48
20016018:	4398                	lw	a4,0(a5)
2001601a:	fd842783          	lw	a5,-40(s0)
2001601e:	fec42683          	lw	a3,-20(s0)
20016022:	03068693          	addi	a3,a3,48
20016026:	8fd9                	or	a5,a5,a4
20016028:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:172
        break;
2001602a:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:174
    }
    return 0;
2001602c:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:175
}
2001602e:	853e                	mv	a0,a5
20016030:	50b2                	lw	ra,44(sp)
20016032:	5422                	lw	s0,40(sp)
20016034:	6145                	addi	sp,sp,48
20016036:	8082                	ret

20016038 <__metal_driver_sifive_gpio0_clear_int>:
__metal_driver_sifive_gpio0_clear_int():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:178

int __metal_driver_sifive_gpio0_clear_int(struct metal_gpio *ggpio, long source,
                                          int intr_type) {
20016038:	7179                	addi	sp,sp,-48
2001603a:	d606                	sw	ra,44(sp)
2001603c:	d422                	sw	s0,40(sp)
2001603e:	1800                	addi	s0,sp,48
20016040:	fca42e23          	sw	a0,-36(s0)
20016044:	fcb42c23          	sw	a1,-40(s0)
20016048:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:179
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2001604c:	fdc42503          	lw	a0,-36(s0)
20016050:	f60ff0ef          	jal	ra,200157b0 <__metal_driver_sifive_gpio0_base>
20016054:	87aa                	mv	a5,a0
20016056:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:181

    switch (intr_type) {
2001605a:	fd442703          	lw	a4,-44(s0)
2001605e:	479d                	li	a5,7
20016060:	14e7ea63          	bltu	a5,a4,200161b4 <__metal_driver_sifive_gpio0_clear_int+0x17c>
20016064:	fd442783          	lw	a5,-44(s0)
20016068:	00279713          	slli	a4,a5,0x2
2001606c:	200117b7          	lui	a5,0x20011
20016070:	f8078793          	addi	a5,a5,-128 # 20010f80 <__metal_driver_vtable_sifive_fe310_g000_pll+0x2c>
20016074:	97ba                	add	a5,a5,a4
20016076:	439c                	lw	a5,0(a5)
20016078:	8782                	jr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:184
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
2001607a:	fec42783          	lw	a5,-20(s0)
2001607e:	07f1                	addi	a5,a5,28
20016080:	4398                	lw	a4,0(a5)
20016082:	fd842783          	lw	a5,-40(s0)
20016086:	fec42683          	lw	a3,-20(s0)
2001608a:	06f1                	addi	a3,a3,28
2001608c:	8fd9                	or	a5,a5,a4
2001608e:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:185
        break;
20016090:	a215                	j	200161b4 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:188
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20016092:	fec42783          	lw	a5,-20(s0)
20016096:	02478793          	addi	a5,a5,36
2001609a:	4398                	lw	a4,0(a5)
2001609c:	fd842783          	lw	a5,-40(s0)
200160a0:	fec42683          	lw	a3,-20(s0)
200160a4:	02468693          	addi	a3,a3,36
200160a8:	8fd9                	or	a5,a5,a4
200160aa:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:189
        break;
200160ac:	a221                	j	200161b4 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:192
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
200160ae:	fec42783          	lw	a5,-20(s0)
200160b2:	07f1                	addi	a5,a5,28
200160b4:	4398                	lw	a4,0(a5)
200160b6:	fd842783          	lw	a5,-40(s0)
200160ba:	fec42683          	lw	a3,-20(s0)
200160be:	06f1                	addi	a3,a3,28
200160c0:	8fd9                	or	a5,a5,a4
200160c2:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:194
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
200160c4:	fec42783          	lw	a5,-20(s0)
200160c8:	02478793          	addi	a5,a5,36
200160cc:	4398                	lw	a4,0(a5)
200160ce:	fd842783          	lw	a5,-40(s0)
200160d2:	fec42683          	lw	a3,-20(s0)
200160d6:	02468693          	addi	a3,a3,36
200160da:	8fd9                	or	a5,a5,a4
200160dc:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:195
        break;
200160de:	a8d9                	j	200161b4 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:198
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
200160e0:	fec42783          	lw	a5,-20(s0)
200160e4:	02c78793          	addi	a5,a5,44
200160e8:	4398                	lw	a4,0(a5)
200160ea:	fd842783          	lw	a5,-40(s0)
200160ee:	fec42683          	lw	a3,-20(s0)
200160f2:	02c68693          	addi	a3,a3,44
200160f6:	8fd9                	or	a5,a5,a4
200160f8:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:199
        break;
200160fa:	a86d                	j	200161b4 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:202
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
200160fc:	fec42783          	lw	a5,-20(s0)
20016100:	03478793          	addi	a5,a5,52
20016104:	4398                	lw	a4,0(a5)
20016106:	fd842783          	lw	a5,-40(s0)
2001610a:	fec42683          	lw	a3,-20(s0)
2001610e:	03468693          	addi	a3,a3,52
20016112:	8fd9                	or	a5,a5,a4
20016114:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:203
        break;
20016116:	a879                	j	200161b4 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:206
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20016118:	fec42783          	lw	a5,-20(s0)
2001611c:	02c78793          	addi	a5,a5,44
20016120:	4398                	lw	a4,0(a5)
20016122:	fd842783          	lw	a5,-40(s0)
20016126:	fec42683          	lw	a3,-20(s0)
2001612a:	02c68693          	addi	a3,a3,44
2001612e:	8fd9                	or	a5,a5,a4
20016130:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:208
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20016132:	fec42783          	lw	a5,-20(s0)
20016136:	03478793          	addi	a5,a5,52
2001613a:	4398                	lw	a4,0(a5)
2001613c:	fd842783          	lw	a5,-40(s0)
20016140:	fec42683          	lw	a3,-20(s0)
20016144:	03468693          	addi	a3,a3,52
20016148:	8fd9                	or	a5,a5,a4
2001614a:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:209
        break;
2001614c:	a0a5                	j	200161b4 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:212
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
2001614e:	fec42783          	lw	a5,-20(s0)
20016152:	07f1                	addi	a5,a5,28
20016154:	4398                	lw	a4,0(a5)
20016156:	fd842783          	lw	a5,-40(s0)
2001615a:	fec42683          	lw	a3,-20(s0)
2001615e:	06f1                	addi	a3,a3,28
20016160:	8fd9                	or	a5,a5,a4
20016162:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:214
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20016164:	fec42783          	lw	a5,-20(s0)
20016168:	02478793          	addi	a5,a5,36
2001616c:	4398                	lw	a4,0(a5)
2001616e:	fd842783          	lw	a5,-40(s0)
20016172:	fec42683          	lw	a3,-20(s0)
20016176:	02468693          	addi	a3,a3,36
2001617a:	8fd9                	or	a5,a5,a4
2001617c:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:216
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
2001617e:	fec42783          	lw	a5,-20(s0)
20016182:	02c78793          	addi	a5,a5,44
20016186:	4398                	lw	a4,0(a5)
20016188:	fd842783          	lw	a5,-40(s0)
2001618c:	fec42683          	lw	a3,-20(s0)
20016190:	02c68693          	addi	a3,a3,44
20016194:	8fd9                	or	a5,a5,a4
20016196:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:218
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20016198:	fec42783          	lw	a5,-20(s0)
2001619c:	03478793          	addi	a5,a5,52
200161a0:	4398                	lw	a4,0(a5)
200161a2:	fd842783          	lw	a5,-40(s0)
200161a6:	fec42683          	lw	a3,-20(s0)
200161aa:	03468693          	addi	a3,a3,52
200161ae:	8fd9                	or	a5,a5,a4
200161b0:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:219
        break;
200161b2:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:221
    }
    return 0;
200161b4:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:222
}
200161b6:	853e                	mv	a0,a5
200161b8:	50b2                	lw	ra,44(sp)
200161ba:	5422                	lw	s0,40(sp)
200161bc:	6145                	addi	sp,sp,48
200161be:	8082                	ret

200161c0 <__metal_driver_gpio_interrupt_controller>:
__metal_driver_gpio_interrupt_controller():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:225

struct metal_interrupt *
__metal_driver_gpio_interrupt_controller(struct metal_gpio *gpio) {
200161c0:	1101                	addi	sp,sp,-32
200161c2:	ce06                	sw	ra,28(sp)
200161c4:	cc22                	sw	s0,24(sp)
200161c6:	1000                	addi	s0,sp,32
200161c8:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:226
    return __metal_driver_sifive_gpio0_interrupt_parent(gpio);
200161cc:	fec42503          	lw	a0,-20(s0)
200161d0:	e06ff0ef          	jal	ra,200157d6 <__metal_driver_sifive_gpio0_interrupt_parent>
200161d4:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:227
}
200161d6:	853e                	mv	a0,a5
200161d8:	40f2                	lw	ra,28(sp)
200161da:	4462                	lw	s0,24(sp)
200161dc:	6105                	addi	sp,sp,32
200161de:	8082                	ret

200161e0 <__metal_driver_gpio_get_interrupt_id>:
__metal_driver_gpio_get_interrupt_id():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:229

int __metal_driver_gpio_get_interrupt_id(struct metal_gpio *gpio, int pin) {
200161e0:	7179                	addi	sp,sp,-48
200161e2:	d606                	sw	ra,44(sp)
200161e4:	d422                	sw	s0,40(sp)
200161e6:	1800                	addi	s0,sp,48
200161e8:	fca42e23          	sw	a0,-36(s0)
200161ec:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:231
    int irq;
    irq = __metal_driver_sifive_gpio0_interrupt_lines(gpio, pin);
200161f0:	fd842583          	lw	a1,-40(s0)
200161f4:	fdc42503          	lw	a0,-36(s0)
200161f8:	e08ff0ef          	jal	ra,20015800 <__metal_driver_sifive_gpio0_interrupt_lines>
200161fc:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:232
    return irq;
20016200:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_gpio0.c:233
}
20016204:	853e                	mv	a0,a5
20016206:	50b2                	lw	ra,44(sp)
20016208:	5422                	lw	s0,40(sp)
2001620a:	6145                	addi	sp,sp,48
2001620c:	8082                	ret

2001620e <__metal_driver_sifive_i2c0_control_base>:
__metal_driver_sifive_i2c0_control_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:633
{
2001620e:	1101                	addi	sp,sp,-32
20016210:	ce22                	sw	s0,28(sp)
20016212:	1000                	addi	s0,sp,32
20016214:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:634
	if ((uintptr_t)i2c == (uintptr_t)&__metal_dt_i2c_10016000) {
20016218:	fec42703          	lw	a4,-20(s0)
2001621c:	800017b7          	lui	a5,0x80001
20016220:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xfffff278>
20016224:	00f71563          	bne	a4,a5,2001622e <__metal_driver_sifive_i2c0_control_base+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:635
		return METAL_SIFIVE_I2C0_10016000_BASE_ADDRESS;
20016228:	100167b7          	lui	a5,0x10016
2001622c:	a011                	j	20016230 <__metal_driver_sifive_i2c0_control_base+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:638
		return 0;
2001622e:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:640
}
20016230:	853e                	mv	a0,a5
20016232:	4472                	lw	s0,28(sp)
20016234:	6105                	addi	sp,sp,32
20016236:	8082                	ret

20016238 <__metal_driver_sifive_i2c0_clock>:
__metal_driver_sifive_i2c0_clock():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:653
{
20016238:	1101                	addi	sp,sp,-32
2001623a:	ce22                	sw	s0,28(sp)
2001623c:	1000                	addi	s0,sp,32
2001623e:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:654
	if ((uintptr_t)i2c == (uintptr_t)&__metal_dt_i2c_10016000) {
20016242:	fec42703          	lw	a4,-20(s0)
20016246:	800017b7          	lui	a5,0x80001
2001624a:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xfffff278>
2001624e:	00f71763          	bne	a4,a5,2001625c <__metal_driver_sifive_i2c0_clock+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:655
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
20016252:	800017b7          	lui	a5,0x80001
20016256:	ab478793          	addi	a5,a5,-1356 # 80000ab4 <metal_segment_heap_target_end+0xfffff2f4>
2001625a:	a011                	j	2001625e <__metal_driver_sifive_i2c0_clock+0x26>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:658
		return NULL;
2001625c:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:660
}
2001625e:	853e                	mv	a0,a5
20016260:	4472                	lw	s0,28(sp)
20016262:	6105                	addi	sp,sp,32
20016264:	8082                	ret

20016266 <__metal_driver_sifive_i2c0_pinmux>:
__metal_driver_sifive_i2c0_pinmux():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:663
{
20016266:	1101                	addi	sp,sp,-32
20016268:	ce22                	sw	s0,28(sp)
2001626a:	1000                	addi	s0,sp,32
2001626c:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:664
	if ((uintptr_t)i2c == (uintptr_t)&__metal_dt_i2c_10016000) {
20016270:	fec42703          	lw	a4,-20(s0)
20016274:	800017b7          	lui	a5,0x80001
20016278:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xfffff278>
2001627c:	00f71563          	bne	a4,a5,20016286 <__metal_driver_sifive_i2c0_pinmux+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:665
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
20016280:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20016284:	a011                	j	20016288 <__metal_driver_sifive_i2c0_pinmux+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:668
		return NULL;
20016286:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:670
}
20016288:	853e                	mv	a0,a5
2001628a:	4472                	lw	s0,28(sp)
2001628c:	6105                	addi	sp,sp,32
2001628e:	8082                	ret

20016290 <__metal_driver_sifive_i2c0_pinmux_output_selector>:
__metal_driver_sifive_i2c0_pinmux_output_selector():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:673
{
20016290:	1101                	addi	sp,sp,-32
20016292:	ce22                	sw	s0,28(sp)
20016294:	1000                	addi	s0,sp,32
20016296:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:674
	if ((uintptr_t)i2c == (uintptr_t)&__metal_dt_i2c_10016000) {
2001629a:	fec42703          	lw	a4,-20(s0)
2001629e:	800017b7          	lui	a5,0x80001
200162a2:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xfffff278>
200162a6:	00f71463          	bne	a4,a5,200162ae <__metal_driver_sifive_i2c0_pinmux_output_selector+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:675
		return 0;
200162aa:	4781                	li	a5,0
200162ac:	a011                	j	200162b0 <__metal_driver_sifive_i2c0_pinmux_output_selector+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:678
		return 0;
200162ae:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:680
}
200162b0:	853e                	mv	a0,a5
200162b2:	4472                	lw	s0,28(sp)
200162b4:	6105                	addi	sp,sp,32
200162b6:	8082                	ret

200162b8 <__metal_driver_sifive_i2c0_pinmux_source_selector>:
__metal_driver_sifive_i2c0_pinmux_source_selector():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:683
{
200162b8:	1101                	addi	sp,sp,-32
200162ba:	ce22                	sw	s0,28(sp)
200162bc:	1000                	addi	s0,sp,32
200162be:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:684
	if ((uintptr_t)i2c == (uintptr_t)&__metal_dt_i2c_10016000) {
200162c2:	fec42703          	lw	a4,-20(s0)
200162c6:	800017b7          	lui	a5,0x80001
200162ca:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xfffff278>
200162ce:	00f71463          	bne	a4,a5,200162d6 <__metal_driver_sifive_i2c0_pinmux_source_selector+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:685
		return 12288;
200162d2:	678d                	lui	a5,0x3
200162d4:	a011                	j	200162d8 <__metal_driver_sifive_i2c0_pinmux_source_selector+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:688
		return 0;
200162d6:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:690
}
200162d8:	853e                	mv	a0,a5
200162da:	4472                	lw	s0,28(sp)
200162dc:	6105                	addi	sp,sp,32
200162de:	8082                	ret

200162e0 <pre_rate_change_callback>:
pre_rate_change_callback():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:77
    ((clock_rate / (baud_rate * 5)) - 1)
#define METAL_I2C_INIT_OK 1
#define METAL_I2C_RET_OK 0
#define METAL_I2C_RET_ERR -1

static void pre_rate_change_callback(void *priv) {
200162e0:	7179                	addi	sp,sp,-48
200162e2:	d606                	sw	ra,44(sp)
200162e4:	d422                	sw	s0,40(sp)
200162e6:	1800                	addi	s0,sp,48
200162e8:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:79
    unsigned long base =
        __metal_driver_sifive_i2c0_control_base((struct metal_i2c *)priv);
200162ec:	fdc42503          	lw	a0,-36(s0)
200162f0:	3f39                	jal	2001620e <__metal_driver_sifive_i2c0_control_base>
200162f2:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:81
    /* Check for any pending transfers */
    while (METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) & METAL_I2C_STATUS_TIP)
200162f6:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:81 (discriminator 1)
200162f8:	fec42783          	lw	a5,-20(s0)
200162fc:	07c1                	addi	a5,a5,16
200162fe:	0007c783          	lbu	a5,0(a5) # 3000 <__heap_size+0x2800>
20016302:	0ff7f793          	andi	a5,a5,255
20016306:	8b89                	andi	a5,a5,2
20016308:	fbe5                	bnez	a5,200162f8 <pre_rate_change_callback+0x18>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:83
        ;
}
2001630a:	0001                	nop
2001630c:	50b2                	lw	ra,44(sp)
2001630e:	5422                	lw	s0,40(sp)
20016310:	6145                	addi	sp,sp,48
20016312:	8082                	ret

20016314 <post_rate_change_callback>:
post_rate_change_callback():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:85

static void post_rate_change_callback(void *priv) {
20016314:	7179                	addi	sp,sp,-48
20016316:	d606                	sw	ra,44(sp)
20016318:	d422                	sw	s0,40(sp)
2001631a:	1800                	addi	s0,sp,48
2001631c:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:86
    struct __metal_driver_sifive_i2c0 *i2c = priv;
20016320:	fdc42783          	lw	a5,-36(s0)
20016324:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:88
    /* Set baud rate after clock rate change */
    metal_i2c_set_baud_rate(&i2c->i2c, i2c->baud_rate);
20016328:	fec42703          	lw	a4,-20(s0)
2001632c:	fec42783          	lw	a5,-20(s0)
20016330:	479c                	lw	a5,8(a5)
20016332:	85be                	mv	a1,a5
20016334:	853a                	mv	a0,a4
20016336:	2a4010ef          	jal	ra,200175da <metal_i2c_set_baud_rate>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:89
}
2001633a:	0001                	nop
2001633c:	50b2                	lw	ra,44(sp)
2001633e:	5422                	lw	s0,40(sp)
20016340:	6145                	addi	sp,sp,48
20016342:	8082                	ret

20016344 <__metal_driver_sifive_i2c0_init>:
__metal_driver_sifive_i2c0_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:93

static void __metal_driver_sifive_i2c0_init(struct metal_i2c *gi2c,
                                            unsigned int baud_rate,
                                            metal_i2c_mode_t mode) {
20016344:	7179                	addi	sp,sp,-48
20016346:	d606                	sw	ra,44(sp)
20016348:	d422                	sw	s0,40(sp)
2001634a:	1800                	addi	s0,sp,48
2001634c:	fca42e23          	sw	a0,-36(s0)
20016350:	fcb42c23          	sw	a1,-40(s0)
20016354:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:95
    struct __metal_driver_sifive_gpio0 *pinmux =
        __metal_driver_sifive_i2c0_pinmux(gi2c);
20016358:	fdc42503          	lw	a0,-36(s0)
2001635c:	3729                	jal	20016266 <__metal_driver_sifive_i2c0_pinmux>
2001635e:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:96
    struct __metal_driver_sifive_i2c0 *i2c = (void *)gi2c;
20016362:	fdc42783          	lw	a5,-36(s0)
20016366:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:98

    if ((pinmux != NULL) && (gi2c != NULL)) {
2001636a:	fec42783          	lw	a5,-20(s0)
2001636e:	cfa9                	beqz	a5,200163c8 <__metal_driver_sifive_i2c0_init+0x84>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:98 (discriminator 1)
20016370:	fdc42783          	lw	a5,-36(s0)
20016374:	cbb1                	beqz	a5,200163c8 <__metal_driver_sifive_i2c0_init+0x84>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:101
        /* configure I2C I/O pins */
        long pinmux_output_selector =
            __metal_driver_sifive_i2c0_pinmux_output_selector(gi2c);
20016376:	fdc42503          	lw	a0,-36(s0)
2001637a:	3f19                	jal	20016290 <__metal_driver_sifive_i2c0_pinmux_output_selector>
2001637c:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:100
        long pinmux_output_selector =
2001637e:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:103
        long pinmux_source_selector =
            __metal_driver_sifive_i2c0_pinmux_source_selector(gi2c);
20016382:	fdc42503          	lw	a0,-36(s0)
20016386:	3f0d                	jal	200162b8 <__metal_driver_sifive_i2c0_pinmux_source_selector>
20016388:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:102
        long pinmux_source_selector =
2001638a:	fef42023          	sw	a5,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:104
        pinmux->gpio.vtable->enable_io((struct metal_gpio *)pinmux,
2001638e:	fec42783          	lw	a5,-20(s0)
20016392:	439c                	lw	a5,0(a5)
20016394:	53dc                	lw	a5,36(a5)
20016396:	fe042603          	lw	a2,-32(s0)
2001639a:	fe442583          	lw	a1,-28(s0)
2001639e:	fec42503          	lw	a0,-20(s0)
200163a2:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:109
                                       pinmux_output_selector,
                                       pinmux_source_selector);

        /* 1: Master 0: Slave */
        if (mode == METAL_I2C_MASTER) {
200163a4:	fd442703          	lw	a4,-44(s0)
200163a8:	4785                	li	a5,1
200163aa:	00f71f63          	bne	a4,a5,200163c8 <__metal_driver_sifive_i2c0_init+0x84>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:111
            /* Set requested baud rate */
            if (metal_i2c_set_baud_rate(gi2c, baud_rate) == METAL_I2C_RET_OK) {
200163ae:	fd842783          	lw	a5,-40(s0)
200163b2:	85be                	mv	a1,a5
200163b4:	fdc42503          	lw	a0,-36(s0)
200163b8:	222010ef          	jal	ra,200175da <metal_i2c_set_baud_rate>
200163bc:	87aa                	mv	a5,a0
200163be:	e789                	bnez	a5,200163c8 <__metal_driver_sifive_i2c0_init+0x84>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:112
                i2c->init_done = METAL_I2C_INIT_OK;
200163c0:	fe842783          	lw	a5,-24(s0)
200163c4:	4705                	li	a4,1
200163c6:	c3d8                	sw	a4,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:118
            }
        } else {
            /* Nothing to do. slave mode not supported */
        }
    }
}
200163c8:	0001                	nop
200163ca:	50b2                	lw	ra,44(sp)
200163cc:	5422                	lw	s0,40(sp)
200163ce:	6145                	addi	sp,sp,48
200163d0:	8082                	ret

200163d2 <__metal_driver_sifive_i2c0_get_baud_rate>:
__metal_driver_sifive_i2c0_get_baud_rate():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:120

static int __metal_driver_sifive_i2c0_get_baud_rate(struct metal_i2c *gi2c) {
200163d2:	7179                	addi	sp,sp,-48
200163d4:	d622                	sw	s0,44(sp)
200163d6:	1800                	addi	s0,sp,48
200163d8:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:121
    struct __metal_driver_sifive_i2c0 *i2c = (void *)gi2c;
200163dc:	fdc42783          	lw	a5,-36(s0)
200163e0:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:122
    return i2c->baud_rate;
200163e4:	fec42783          	lw	a5,-20(s0)
200163e8:	479c                	lw	a5,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:123
}
200163ea:	853e                	mv	a0,a5
200163ec:	5432                	lw	s0,44(sp)
200163ee:	6145                	addi	sp,sp,48
200163f0:	8082                	ret

200163f2 <__metal_driver_sifive_i2c0_set_baud_rate>:
__metal_driver_sifive_i2c0_set_baud_rate():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:126

static int __metal_driver_sifive_i2c0_set_baud_rate(struct metal_i2c *gi2c,
                                                    unsigned int baud_rate) {
200163f2:	7139                	addi	sp,sp,-64
200163f4:	de06                	sw	ra,60(sp)
200163f6:	dc22                	sw	s0,56(sp)
200163f8:	0080                	addi	s0,sp,64
200163fa:	fca42623          	sw	a0,-52(s0)
200163fe:	fcb42423          	sw	a1,-56(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:127
    struct metal_clock *clock = __metal_driver_sifive_i2c0_clock(gi2c);
20016402:	fcc42503          	lw	a0,-52(s0)
20016406:	e33ff0ef          	jal	ra,20016238 <__metal_driver_sifive_i2c0_clock>
2001640a:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:128
    struct __metal_driver_sifive_i2c0 *i2c = (void *)gi2c;
2001640e:	fcc42783          	lw	a5,-52(s0)
20016412:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:129
    unsigned long base = __metal_driver_sifive_i2c0_control_base(gi2c);
20016416:	fcc42503          	lw	a0,-52(s0)
2001641a:	df5ff0ef          	jal	ra,2001620e <__metal_driver_sifive_i2c0_control_base>
2001641e:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:130
    int ret = METAL_I2C_RET_ERR;
20016422:	57fd                	li	a5,-1
20016424:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:132

    if ((clock != NULL) && (gi2c != NULL)) {
20016428:	fe842783          	lw	a5,-24(s0)
2001642c:	10078763          	beqz	a5,2001653a <__metal_driver_sifive_i2c0_set_baud_rate+0x148>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:132 (discriminator 1)
20016430:	fcc42783          	lw	a5,-52(s0)
20016434:	10078363          	beqz	a5,2001653a <__metal_driver_sifive_i2c0_set_baud_rate+0x148>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:133
        long clock_rate = clock->vtable->get_rate_hz(clock);
20016438:	fe842783          	lw	a5,-24(s0)
2001643c:	439c                	lw	a5,0(a5)
2001643e:	439c                	lw	a5,0(a5)
20016440:	fe842503          	lw	a0,-24(s0)
20016444:	9782                	jalr	a5
20016446:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:135

        i2c->pre_rate_change_callback.callback = &pre_rate_change_callback;
2001644a:	fe442783          	lw	a5,-28(s0)
2001644e:	20016737          	lui	a4,0x20016
20016452:	2e070713          	addi	a4,a4,736 # 200162e0 <pre_rate_change_callback>
20016456:	c7d8                	sw	a4,12(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:136
        i2c->pre_rate_change_callback.priv = i2c;
20016458:	fe442783          	lw	a5,-28(s0)
2001645c:	fe442703          	lw	a4,-28(s0)
20016460:	cb98                	sw	a4,16(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:137
        metal_clock_register_pre_rate_change_callback(
20016462:	fe442783          	lw	a5,-28(s0)
20016466:	07b1                	addi	a5,a5,12
20016468:	85be                	mv	a1,a5
2001646a:	fe842503          	lw	a0,-24(s0)
2001646e:	787000ef          	jal	ra,200173f4 <metal_clock_register_pre_rate_change_callback>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:140
            clock, &(i2c->pre_rate_change_callback));

        i2c->post_rate_change_callback.callback = &post_rate_change_callback;
20016472:	fe442783          	lw	a5,-28(s0)
20016476:	20016737          	lui	a4,0x20016
2001647a:	31470713          	addi	a4,a4,788 # 20016314 <post_rate_change_callback>
2001647e:	cf98                	sw	a4,24(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:141
        i2c->post_rate_change_callback.priv = i2c;
20016480:	fe442783          	lw	a5,-28(s0)
20016484:	fe442703          	lw	a4,-28(s0)
20016488:	cfd8                	sw	a4,28(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:142
        metal_clock_register_post_rate_change_callback(
2001648a:	fe442783          	lw	a5,-28(s0)
2001648e:	07e1                	addi	a5,a5,24
20016490:	85be                	mv	a1,a5
20016492:	fe842503          	lw	a0,-24(s0)
20016496:	791000ef          	jal	ra,20017426 <metal_clock_register_post_rate_change_callback>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:146
            clock, &(i2c->post_rate_change_callback));

        /* Calculate prescaler value */
        long prescaler = METAL_SIFIVE_I2C_GET_PRESCALER(baud_rate);
2001649a:	fdc42683          	lw	a3,-36(s0)
2001649e:	fc842703          	lw	a4,-56(s0)
200164a2:	87ba                	mv	a5,a4
200164a4:	078a                	slli	a5,a5,0x2
200164a6:	97ba                	add	a5,a5,a4
200164a8:	02f6d7b3          	divu	a5,a3,a5
200164ac:	17fd                	addi	a5,a5,-1
200164ae:	fcf42c23          	sw	a5,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:148

        if ((prescaler > METAL_I2C_PRESCALE_MAX) || (prescaler < 0)) {
200164b2:	fd842703          	lw	a4,-40(s0)
200164b6:	67c1                	lui	a5,0x10
200164b8:	08f75163          	bge	a4,a5,2001653a <__metal_driver_sifive_i2c0_set_baud_rate+0x148>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:148 (discriminator 1)
200164bc:	fd842783          	lw	a5,-40(s0)
200164c0:	0607cd63          	bltz	a5,2001653a <__metal_driver_sifive_i2c0_set_baud_rate+0x148>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:153
            /* Out of range value, return error */
            METAL_I2C_LOG("I2C Set baud failed.\n");
        } else {
            /* Set pre-scaler value */
            METAL_I2C_REGB(METAL_SIFIVE_I2C0_CONTROL) &= ~METAL_I2C_CONTROL_EN;
200164c4:	fe042783          	lw	a5,-32(s0)
200164c8:	07a1                	addi	a5,a5,8
200164ca:	0007c783          	lbu	a5,0(a5) # 10000 <__heap_size+0xf800>
200164ce:	0ff7f793          	andi	a5,a5,255
200164d2:	fe042703          	lw	a4,-32(s0)
200164d6:	0721                	addi	a4,a4,8
200164d8:	07f7f793          	andi	a5,a5,127
200164dc:	0ff7f793          	andi	a5,a5,255
200164e0:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:154
            METAL_I2C_REGB(METAL_SIFIVE_I2C0_PRESCALE_LOW) = prescaler & 0xFF;
200164e4:	fe042783          	lw	a5,-32(s0)
200164e8:	fd842703          	lw	a4,-40(s0)
200164ec:	0ff77713          	andi	a4,a4,255
200164f0:	00e78023          	sb	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:156
            METAL_I2C_REGB(METAL_SIFIVE_I2C0_PRESCALE_HIGH) =
                (prescaler >> 8) & 0xFF;
200164f4:	fd842783          	lw	a5,-40(s0)
200164f8:	4087d693          	srai	a3,a5,0x8
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:155
            METAL_I2C_REGB(METAL_SIFIVE_I2C0_PRESCALE_HIGH) =
200164fc:	fe042783          	lw	a5,-32(s0)
20016500:	0791                	addi	a5,a5,4
20016502:	873e                	mv	a4,a5
20016504:	0ff6f793          	andi	a5,a3,255
20016508:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:157
            METAL_I2C_REGB(METAL_SIFIVE_I2C0_CONTROL) |= METAL_I2C_CONTROL_EN;
2001650c:	fe042783          	lw	a5,-32(s0)
20016510:	07a1                	addi	a5,a5,8
20016512:	0007c783          	lbu	a5,0(a5)
20016516:	0ff7f793          	andi	a5,a5,255
2001651a:	fe042703          	lw	a4,-32(s0)
2001651e:	0721                	addi	a4,a4,8
20016520:	f807e793          	ori	a5,a5,-128
20016524:	0ff7f793          	andi	a5,a5,255
20016528:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:159

            i2c->baud_rate = baud_rate;
2001652c:	fe442783          	lw	a5,-28(s0)
20016530:	fc842703          	lw	a4,-56(s0)
20016534:	c798                	sw	a4,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:160
            ret = METAL_I2C_RET_OK;
20016536:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:166
        }
    } else {
        METAL_I2C_LOG("I2C Set baud failed.\n");
    }

    return ret;
2001653a:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:167
}
2001653e:	853e                	mv	a0,a5
20016540:	50f2                	lw	ra,60(sp)
20016542:	5462                	lw	s0,56(sp)
20016544:	6121                	addi	sp,sp,64
20016546:	8082                	ret

20016548 <__metal_driver_sifive_i2c0_write_addr>:
__metal_driver_sifive_i2c0_write_addr():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:171

static int __metal_driver_sifive_i2c0_write_addr(unsigned long base,
                                                 unsigned int addr,
                                                 unsigned char rw_flag) {
20016548:	7179                	addi	sp,sp,-48
2001654a:	d606                	sw	ra,44(sp)
2001654c:	d422                	sw	s0,40(sp)
2001654e:	1800                	addi	s0,sp,48
20016550:	fca42e23          	sw	a0,-36(s0)
20016554:	fcb42c23          	sw	a1,-40(s0)
20016558:	87b2                	mv	a5,a2
2001655a:	fcf40ba3          	sb	a5,-41(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:173
    time_t timeout;
    int ret = METAL_I2C_RET_OK;
2001655e:	fe042623          	sw	zero,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:175
    /* Reset timeout */
    METAL_I2C_TIMEOUT_RESET(timeout);
20016562:	1ca010ef          	jal	ra,2001772c <metal_time>
20016566:	86aa                	mv	a3,a0
20016568:	872e                	mv	a4,a1
2001656a:	4585                	li	a1,1
2001656c:	4601                	li	a2,0
2001656e:	00b687b3          	add	a5,a3,a1
20016572:	853e                	mv	a0,a5
20016574:	00d53533          	sltu	a0,a0,a3
20016578:	00c70833          	add	a6,a4,a2
2001657c:	01050733          	add	a4,a0,a6
20016580:	883a                	mv	a6,a4
20016582:	fef42023          	sw	a5,-32(s0)
20016586:	ff042223          	sw	a6,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:178

    /* Check if any transfer is in progress */
    METAL_I2C_REG_CHECK(
2001658a:	a035                	j	200165b6 <__metal_driver_sifive_i2c0_write_addr+0x6e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:178 (discriminator 3)
2001658c:	1a0010ef          	jal	ra,2001772c <metal_time>
20016590:	87aa                	mv	a5,a0
20016592:	882e                	mv	a6,a1
20016594:	fe442703          	lw	a4,-28(s0)
20016598:	86c2                	mv	a3,a6
2001659a:	00d74c63          	blt	a4,a3,200165b2 <__metal_driver_sifive_i2c0_write_addr+0x6a>
2001659e:	fe442703          	lw	a4,-28(s0)
200165a2:	86c2                	mv	a3,a6
200165a4:	00d71963          	bne	a4,a3,200165b6 <__metal_driver_sifive_i2c0_write_addr+0x6e>
200165a8:	fe042703          	lw	a4,-32(s0)
200165ac:	00f76363          	bltu	a4,a5,200165b2 <__metal_driver_sifive_i2c0_write_addr+0x6a>
200165b0:	a019                	j	200165b6 <__metal_driver_sifive_i2c0_write_addr+0x6e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:178 (discriminator 1)
200165b2:	57fd                	li	a5,-1
200165b4:	a8c9                	j	20016686 <__metal_driver_sifive_i2c0_write_addr+0x13e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:178 (discriminator 2)
200165b6:	fdc42783          	lw	a5,-36(s0)
200165ba:	07c1                	addi	a5,a5,16
200165bc:	0007c783          	lbu	a5,0(a5)
200165c0:	0ff7f793          	andi	a5,a5,255
200165c4:	8b89                	andi	a5,a5,2
200165c6:	f3f9                	bnez	a5,2001658c <__metal_driver_sifive_i2c0_write_addr+0x44>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:184
        (METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) & METAL_I2C_STATUS_TIP),
        timeout);

    /* Set transmit register to given address with read/write flag */
    METAL_I2C_REGB(METAL_SIFIVE_I2C0_TRANSMIT) =
        METAL_SIFIVE_I2C_INSERT_RW_BIT(addr, rw_flag);
200165c8:	fd842783          	lw	a5,-40(s0)
200165cc:	0ff7f793          	andi	a5,a5,255
200165d0:	0786                	slli	a5,a5,0x1
200165d2:	0ff7f713          	andi	a4,a5,255
200165d6:	fd744783          	lbu	a5,-41(s0)
200165da:	8b85                	andi	a5,a5,1
200165dc:	0ff7f793          	andi	a5,a5,255
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:183
    METAL_I2C_REGB(METAL_SIFIVE_I2C0_TRANSMIT) =
200165e0:	fdc42683          	lw	a3,-36(s0)
200165e4:	06b1                	addi	a3,a3,12
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:184
        METAL_SIFIVE_I2C_INSERT_RW_BIT(addr, rw_flag);
200165e6:	8fd9                	or	a5,a5,a4
200165e8:	0ff7f793          	andi	a5,a5,255
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:183
    METAL_I2C_REGB(METAL_SIFIVE_I2C0_TRANSMIT) =
200165ec:	00f68023          	sb	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:187

    /* Set start flag to trigger the address transfer */
    METAL_I2C_REGB(METAL_SIFIVE_I2C0_COMMAND) =
200165f0:	fdc42783          	lw	a5,-36(s0)
200165f4:	07c1                	addi	a5,a5,16
200165f6:	873e                	mv	a4,a5
200165f8:	f9000793          	li	a5,-112
200165fc:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:190
        METAL_I2C_CMD_WRITE | METAL_I2C_CMD_START;
    /* Reset timeout */
    METAL_I2C_TIMEOUT_RESET(timeout);
20016600:	12c010ef          	jal	ra,2001772c <metal_time>
20016604:	86aa                	mv	a3,a0
20016606:	872e                	mv	a4,a1
20016608:	4585                	li	a1,1
2001660a:	4601                	li	a2,0
2001660c:	00b687b3          	add	a5,a3,a1
20016610:	853e                	mv	a0,a5
20016612:	00d53533          	sltu	a0,a0,a3
20016616:	00c70833          	add	a6,a4,a2
2001661a:	01050733          	add	a4,a0,a6
2001661e:	883a                	mv	a6,a4
20016620:	fef42023          	sw	a5,-32(s0)
20016624:	ff042223          	sw	a6,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:193

    /* Check for transmit completion */
    METAL_I2C_REG_CHECK(
20016628:	a035                	j	20016654 <__metal_driver_sifive_i2c0_write_addr+0x10c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:193 (discriminator 3)
2001662a:	102010ef          	jal	ra,2001772c <metal_time>
2001662e:	87aa                	mv	a5,a0
20016630:	882e                	mv	a6,a1
20016632:	fe442703          	lw	a4,-28(s0)
20016636:	86c2                	mv	a3,a6
20016638:	00d74c63          	blt	a4,a3,20016650 <__metal_driver_sifive_i2c0_write_addr+0x108>
2001663c:	fe442703          	lw	a4,-28(s0)
20016640:	86c2                	mv	a3,a6
20016642:	00d71963          	bne	a4,a3,20016654 <__metal_driver_sifive_i2c0_write_addr+0x10c>
20016646:	fe042703          	lw	a4,-32(s0)
2001664a:	00f76363          	bltu	a4,a5,20016650 <__metal_driver_sifive_i2c0_write_addr+0x108>
2001664e:	a019                	j	20016654 <__metal_driver_sifive_i2c0_write_addr+0x10c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:193 (discriminator 1)
20016650:	57fd                	li	a5,-1
20016652:	a815                	j	20016686 <__metal_driver_sifive_i2c0_write_addr+0x13e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:193 (discriminator 2)
20016654:	fdc42783          	lw	a5,-36(s0)
20016658:	07c1                	addi	a5,a5,16
2001665a:	0007c783          	lbu	a5,0(a5)
2001665e:	0ff7f793          	andi	a5,a5,255
20016662:	8b89                	andi	a5,a5,2
20016664:	f3f9                	bnez	a5,2001662a <__metal_driver_sifive_i2c0_write_addr+0xe2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:198
        (METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) & METAL_I2C_STATUS_TIP),
        timeout);

    /* Check for ACK from slave */
    if ((METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) & METAL_I2C_STATUS_RXACK)) {
20016666:	fdc42783          	lw	a5,-36(s0)
2001666a:	07c1                	addi	a5,a5,16
2001666c:	0007c783          	lbu	a5,0(a5)
20016670:	0ff7f793          	andi	a5,a5,255
20016674:	07e2                	slli	a5,a5,0x18
20016676:	87e1                	srai	a5,a5,0x18
20016678:	0007d563          	bgez	a5,20016682 <__metal_driver_sifive_i2c0_write_addr+0x13a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:201
        /* No ACK, return error */
        METAL_I2C_LOG("I2C RX ACK failed.\n");
        ret = METAL_I2C_RET_ERR;
2001667c:	57fd                	li	a5,-1
2001667e:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:204
    }

    return ret;
20016682:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:205
}
20016686:	853e                	mv	a0,a5
20016688:	50b2                	lw	ra,44(sp)
2001668a:	5422                	lw	s0,40(sp)
2001668c:	6145                	addi	sp,sp,48
2001668e:	8082                	ret

20016690 <__metal_driver_sifive_i2c0_write>:
__metal_driver_sifive_i2c0_write():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:210

static int __metal_driver_sifive_i2c0_write(struct metal_i2c *i2c,
                                            unsigned int addr, unsigned int len,
                                            unsigned char buf[],
                                            metal_i2c_stop_bit_t stop_bit) {
20016690:	715d                	addi	sp,sp,-80
20016692:	c686                	sw	ra,76(sp)
20016694:	c4a2                	sw	s0,72(sp)
20016696:	0880                	addi	s0,sp,80
20016698:	fca42623          	sw	a0,-52(s0)
2001669c:	fcb42423          	sw	a1,-56(s0)
200166a0:	fcc42223          	sw	a2,-60(s0)
200166a4:	fcd42023          	sw	a3,-64(s0)
200166a8:	fae42e23          	sw	a4,-68(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:214
    __metal_io_u8 command;
    time_t timeout;
    int ret;
    unsigned long base = __metal_driver_sifive_i2c0_control_base(i2c);
200166ac:	fcc42503          	lw	a0,-52(s0)
200166b0:	b5fff0ef          	jal	ra,2001620e <__metal_driver_sifive_i2c0_control_base>
200166b4:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:217
    unsigned int i;

    if ((i2c != NULL) &&
200166b8:	fcc42783          	lw	a5,-52(s0)
200166bc:	12078463          	beqz	a5,200167e4 <__metal_driver_sifive_i2c0_write+0x154>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:218 (discriminator 1)
        ((struct __metal_driver_sifive_i2c0 *)i2c)->init_done) {
200166c0:	fcc42783          	lw	a5,-52(s0)
200166c4:	43dc                	lw	a5,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:217 (discriminator 1)
    if ((i2c != NULL) &&
200166c6:	10078f63          	beqz	a5,200167e4 <__metal_driver_sifive_i2c0_write+0x154>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:223

        /* Send address over I2C bus, current driver supports only 7bit
         * addressing */
        ret =
            __metal_driver_sifive_i2c0_write_addr(base, addr, METAL_I2C_WRITE);
200166ca:	4601                	li	a2,0
200166cc:	fc842583          	lw	a1,-56(s0)
200166d0:	fe042503          	lw	a0,-32(s0)
200166d4:	e75ff0ef          	jal	ra,20016548 <__metal_driver_sifive_i2c0_write_addr>
200166d8:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:225

        if (ret != METAL_I2C_RET_OK) {
200166dc:	fe842783          	lw	a5,-24(s0)
200166e0:	10079563          	bnez	a5,200167ea <__metal_driver_sifive_i2c0_write+0x15a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:230
            /* Write address failed */
            METAL_I2C_LOG("I2C Address Write failed.\n");
        } else {
            /* Set command flags */
            command = METAL_I2C_CMD_WRITE;
200166e4:	47c1                	li	a5,16
200166e6:	fef407a3          	sb	a5,-17(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:232

            for (i = 0; i < len; i++) {
200166ea:	fe042223          	sw	zero,-28(s0)
200166ee:	a0e5                	j	200167d6 <__metal_driver_sifive_i2c0_write+0x146>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:234
                /* Copy into transmit register */
                METAL_I2C_REGB(METAL_SIFIVE_I2C0_TRANSMIT) = buf[i];
200166f0:	fc042703          	lw	a4,-64(s0)
200166f4:	fe442783          	lw	a5,-28(s0)
200166f8:	97ba                	add	a5,a5,a4
200166fa:	fe042703          	lw	a4,-32(s0)
200166fe:	0731                	addi	a4,a4,12
20016700:	0007c783          	lbu	a5,0(a5)
20016704:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:238

                /* for last byte transfer, check if stop condition is requested
                 */
                if (i == (len - 1)) {
20016708:	fc442783          	lw	a5,-60(s0)
2001670c:	17fd                	addi	a5,a5,-1
2001670e:	fe442703          	lw	a4,-28(s0)
20016712:	02f71263          	bne	a4,a5,20016736 <__metal_driver_sifive_i2c0_write+0xa6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:239
                    command |= METAL_SIFIVE_I2C_INSERT_STOP(stop_bit);
20016716:	fbc42783          	lw	a5,-68(s0)
2001671a:	0ff7f793          	andi	a5,a5,255
2001671e:	079a                	slli	a5,a5,0x6
20016720:	0ff7f793          	andi	a5,a5,255
20016724:	0407f793          	andi	a5,a5,64
20016728:	0ff7f713          	andi	a4,a5,255
2001672c:	fef44783          	lbu	a5,-17(s0)
20016730:	8fd9                	or	a5,a5,a4
20016732:	fef407a3          	sb	a5,-17(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:242
                }
                /* Write command register */
                METAL_I2C_REGB(METAL_SIFIVE_I2C0_COMMAND) = command;
20016736:	fe042783          	lw	a5,-32(s0)
2001673a:	07c1                	addi	a5,a5,16
2001673c:	873e                	mv	a4,a5
2001673e:	fef44783          	lbu	a5,-17(s0)
20016742:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:244
                /* Reset timeout */
                METAL_I2C_TIMEOUT_RESET(timeout);
20016746:	7e7000ef          	jal	ra,2001772c <metal_time>
2001674a:	86aa                	mv	a3,a0
2001674c:	872e                	mv	a4,a1
2001674e:	4585                	li	a1,1
20016750:	4601                	li	a2,0
20016752:	00b687b3          	add	a5,a3,a1
20016756:	853e                	mv	a0,a5
20016758:	00d53533          	sltu	a0,a0,a3
2001675c:	00c70833          	add	a6,a4,a2
20016760:	01050733          	add	a4,a0,a6
20016764:	883a                	mv	a6,a4
20016766:	fcf42c23          	sw	a5,-40(s0)
2001676a:	fd042e23          	sw	a6,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:247

                /* Check for transfer completion */
                METAL_I2C_REG_CHECK((METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) &
2001676e:	a035                	j	2001679a <__metal_driver_sifive_i2c0_write+0x10a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:247 (discriminator 3)
20016770:	7bd000ef          	jal	ra,2001772c <metal_time>
20016774:	87aa                	mv	a5,a0
20016776:	882e                	mv	a6,a1
20016778:	fdc42703          	lw	a4,-36(s0)
2001677c:	86c2                	mv	a3,a6
2001677e:	00d74c63          	blt	a4,a3,20016796 <__metal_driver_sifive_i2c0_write+0x106>
20016782:	fdc42703          	lw	a4,-36(s0)
20016786:	86c2                	mv	a3,a6
20016788:	00d71963          	bne	a4,a3,2001679a <__metal_driver_sifive_i2c0_write+0x10a>
2001678c:	fd842703          	lw	a4,-40(s0)
20016790:	00f76363          	bltu	a4,a5,20016796 <__metal_driver_sifive_i2c0_write+0x106>
20016794:	a019                	j	2001679a <__metal_driver_sifive_i2c0_write+0x10a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:247 (discriminator 1)
20016796:	57fd                	li	a5,-1
20016798:	a899                	j	200167ee <__metal_driver_sifive_i2c0_write+0x15e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:247 (discriminator 2)
2001679a:	fe042783          	lw	a5,-32(s0)
2001679e:	07c1                	addi	a5,a5,16
200167a0:	0007c783          	lbu	a5,0(a5)
200167a4:	0ff7f793          	andi	a5,a5,255
200167a8:	8b89                	andi	a5,a5,2
200167aa:	f3f9                	bnez	a5,20016770 <__metal_driver_sifive_i2c0_write+0xe0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:252
                                     METAL_I2C_STATUS_TIP),
                                    timeout);

                /* Check for ACK from slave */
                if ((METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) &
200167ac:	fe042783          	lw	a5,-32(s0)
200167b0:	07c1                	addi	a5,a5,16
200167b2:	0007c783          	lbu	a5,0(a5)
200167b6:	0ff7f793          	andi	a5,a5,255
200167ba:	07e2                	slli	a5,a5,0x18
200167bc:	87e1                	srai	a5,a5,0x18
200167be:	0007d763          	bgez	a5,200167cc <__metal_driver_sifive_i2c0_write+0x13c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:256
                     METAL_I2C_STATUS_RXACK)) {
                    /* No ACK, return error */
                    METAL_I2C_LOG("I2C RX ACK failed.\n");
                    ret = METAL_I2C_RET_ERR;
200167c2:	57fd                	li	a5,-1
200167c4:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:257
                    break;
200167c8:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:225
        if (ret != METAL_I2C_RET_OK) {
200167ca:	a005                	j	200167ea <__metal_driver_sifive_i2c0_write+0x15a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:232 (discriminator 2)
            for (i = 0; i < len; i++) {
200167cc:	fe442783          	lw	a5,-28(s0)
200167d0:	0785                	addi	a5,a5,1
200167d2:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:232 (discriminator 1)
200167d6:	fe442703          	lw	a4,-28(s0)
200167da:	fc442783          	lw	a5,-60(s0)
200167de:	f0f769e3          	bltu	a4,a5,200166f0 <__metal_driver_sifive_i2c0_write+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:225
        if (ret != METAL_I2C_RET_OK) {
200167e2:	a021                	j	200167ea <__metal_driver_sifive_i2c0_write+0x15a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:265
        }

    } else {
        /* I2C device not initialized, return error */
        METAL_I2C_LOG("I2C device not initialized.\n");
        ret = METAL_I2C_RET_ERR;
200167e4:	57fd                	li	a5,-1
200167e6:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:268
    }

    return ret;
200167ea:	fe842783          	lw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:269
}
200167ee:	853e                	mv	a0,a5
200167f0:	40b6                	lw	ra,76(sp)
200167f2:	4426                	lw	s0,72(sp)
200167f4:	6161                	addi	sp,sp,80
200167f6:	8082                	ret

200167f8 <__metal_driver_sifive_i2c0_read>:
__metal_driver_sifive_i2c0_read():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:273
static int __metal_driver_sifive_i2c0_read(struct metal_i2c *i2c,
                                           unsigned int addr, unsigned int len,
                                           unsigned char buf[],
                                           metal_i2c_stop_bit_t stop_bit) {
200167f8:	715d                	addi	sp,sp,-80
200167fa:	c686                	sw	ra,76(sp)
200167fc:	c4a2                	sw	s0,72(sp)
200167fe:	0880                	addi	s0,sp,80
20016800:	fca42623          	sw	a0,-52(s0)
20016804:	fcb42423          	sw	a1,-56(s0)
20016808:	fcc42223          	sw	a2,-60(s0)
2001680c:	fcd42023          	sw	a3,-64(s0)
20016810:	fae42e23          	sw	a4,-68(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:278
    int ret;
    __metal_io_u8 command;
    time_t timeout;
    unsigned int i;
    unsigned long base = __metal_driver_sifive_i2c0_control_base(i2c);
20016814:	fcc42503          	lw	a0,-52(s0)
20016818:	9f7ff0ef          	jal	ra,2001620e <__metal_driver_sifive_i2c0_control_base>
2001681c:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:280

    if ((i2c != NULL) &&
20016820:	fcc42783          	lw	a5,-52(s0)
20016824:	10078c63          	beqz	a5,2001693c <__metal_driver_sifive_i2c0_read+0x144>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:281 (discriminator 1)
        ((struct __metal_driver_sifive_i2c0 *)i2c)->init_done) {
20016828:	fcc42783          	lw	a5,-52(s0)
2001682c:	43dc                	lw	a5,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:280 (discriminator 1)
    if ((i2c != NULL) &&
2001682e:	10078763          	beqz	a5,2001693c <__metal_driver_sifive_i2c0_read+0x144>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:285

        /* Send address over I2C bus, current driver supports only 7bit
         * addressing */
        ret = __metal_driver_sifive_i2c0_write_addr(base, addr, METAL_I2C_READ);
20016832:	4605                	li	a2,1
20016834:	fc842583          	lw	a1,-56(s0)
20016838:	fe042503          	lw	a0,-32(s0)
2001683c:	d0dff0ef          	jal	ra,20016548 <__metal_driver_sifive_i2c0_write_addr>
20016840:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:287

        if (ret != METAL_I2C_RET_OK) {
20016844:	fec42783          	lw	a5,-20(s0)
20016848:	0e079d63          	bnez	a5,20016942 <__metal_driver_sifive_i2c0_read+0x14a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:292
            /* Write address failed */
            METAL_I2C_LOG("I2C Read failed.\n");
        } else {
            /* Set command flags */
            command = METAL_I2C_CMD_READ;
2001684c:	02000793          	li	a5,32
20016850:	fef405a3          	sb	a5,-21(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:294

            for (i = 0; i < len; i++) {
20016854:	fe042223          	sw	zero,-28(s0)
20016858:	a8d9                	j	2001692e <__metal_driver_sifive_i2c0_read+0x136>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:296
                /* check for last transfer */
                if (i == (len - 1)) {
2001685a:	fc442783          	lw	a5,-60(s0)
2001685e:	17fd                	addi	a5,a5,-1
20016860:	fe442703          	lw	a4,-28(s0)
20016864:	02f71663          	bne	a4,a5,20016890 <__metal_driver_sifive_i2c0_read+0x98>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:300
                    /* Set NACK to end read, if requested generate STOP
                     * condition */
                    command |= (METAL_I2C_CMD_ACK |
                                METAL_SIFIVE_I2C_INSERT_STOP(stop_bit));
20016868:	fbc42783          	lw	a5,-68(s0)
2001686c:	0ff7f793          	andi	a5,a5,255
20016870:	079a                	slli	a5,a5,0x6
20016872:	0ff7f793          	andi	a5,a5,255
20016876:	0407f793          	andi	a5,a5,64
2001687a:	0ff7f713          	andi	a4,a5,255
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:299
                    command |= (METAL_I2C_CMD_ACK |
2001687e:	feb44783          	lbu	a5,-21(s0)
20016882:	8fd9                	or	a5,a5,a4
20016884:	0ff7f793          	andi	a5,a5,255
20016888:	0087e793          	ori	a5,a5,8
2001688c:	fef405a3          	sb	a5,-21(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:303
                }
                /* Write command register */
                METAL_I2C_REGB(METAL_SIFIVE_I2C0_COMMAND) = command;
20016890:	fe042783          	lw	a5,-32(s0)
20016894:	07c1                	addi	a5,a5,16
20016896:	873e                	mv	a4,a5
20016898:	feb44783          	lbu	a5,-21(s0)
2001689c:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:305
                /* Reset timeout */
                METAL_I2C_TIMEOUT_RESET(timeout);
200168a0:	68d000ef          	jal	ra,2001772c <metal_time>
200168a4:	86aa                	mv	a3,a0
200168a6:	872e                	mv	a4,a1
200168a8:	4585                	li	a1,1
200168aa:	4601                	li	a2,0
200168ac:	00b687b3          	add	a5,a3,a1
200168b0:	853e                	mv	a0,a5
200168b2:	00d53533          	sltu	a0,a0,a3
200168b6:	00c70833          	add	a6,a4,a2
200168ba:	01050733          	add	a4,a0,a6
200168be:	883a                	mv	a6,a4
200168c0:	fcf42c23          	sw	a5,-40(s0)
200168c4:	fd042e23          	sw	a6,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:308

                /* Wait for the read to complete */
                METAL_I2C_REG_CHECK((METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) &
200168c8:	a035                	j	200168f4 <__metal_driver_sifive_i2c0_read+0xfc>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:308 (discriminator 3)
200168ca:	663000ef          	jal	ra,2001772c <metal_time>
200168ce:	87aa                	mv	a5,a0
200168d0:	882e                	mv	a6,a1
200168d2:	fdc42703          	lw	a4,-36(s0)
200168d6:	86c2                	mv	a3,a6
200168d8:	00d74c63          	blt	a4,a3,200168f0 <__metal_driver_sifive_i2c0_read+0xf8>
200168dc:	fdc42703          	lw	a4,-36(s0)
200168e0:	86c2                	mv	a3,a6
200168e2:	00d71963          	bne	a4,a3,200168f4 <__metal_driver_sifive_i2c0_read+0xfc>
200168e6:	fd842703          	lw	a4,-40(s0)
200168ea:	00f76363          	bltu	a4,a5,200168f0 <__metal_driver_sifive_i2c0_read+0xf8>
200168ee:	a019                	j	200168f4 <__metal_driver_sifive_i2c0_read+0xfc>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:308 (discriminator 1)
200168f0:	57fd                	li	a5,-1
200168f2:	a891                	j	20016946 <__metal_driver_sifive_i2c0_read+0x14e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:308 (discriminator 2)
200168f4:	fe042783          	lw	a5,-32(s0)
200168f8:	07c1                	addi	a5,a5,16
200168fa:	0007c783          	lbu	a5,0(a5)
200168fe:	0ff7f793          	andi	a5,a5,255
20016902:	8b89                	andi	a5,a5,2
20016904:	f3f9                	bnez	a5,200168ca <__metal_driver_sifive_i2c0_read+0xd2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:312 (discriminator 2)
                                     METAL_I2C_STATUS_TIP),
                                    timeout);
                /* Store the received byte */
                buf[i] = METAL_I2C_REGB(METAL_SIFIVE_I2C0_TRANSMIT);
20016906:	fe042783          	lw	a5,-32(s0)
2001690a:	07b1                	addi	a5,a5,12
2001690c:	86be                	mv	a3,a5
2001690e:	fc042703          	lw	a4,-64(s0)
20016912:	fe442783          	lw	a5,-28(s0)
20016916:	97ba                	add	a5,a5,a4
20016918:	0006c703          	lbu	a4,0(a3)
2001691c:	0ff77713          	andi	a4,a4,255
20016920:	00e78023          	sb	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:294 (discriminator 2)
            for (i = 0; i < len; i++) {
20016924:	fe442783          	lw	a5,-28(s0)
20016928:	0785                	addi	a5,a5,1
2001692a:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:294 (discriminator 1)
2001692e:	fe442703          	lw	a4,-28(s0)
20016932:	fc442783          	lw	a5,-60(s0)
20016936:	f2f762e3          	bltu	a4,a5,2001685a <__metal_driver_sifive_i2c0_read+0x62>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:287
        if (ret != METAL_I2C_RET_OK) {
2001693a:	a021                	j	20016942 <__metal_driver_sifive_i2c0_read+0x14a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:318
            }
        }
    } else {
        /* I2C device not initialized, return error */
        METAL_I2C_LOG("I2C device not initialized.\n");
        ret = METAL_I2C_RET_ERR;
2001693c:	57fd                	li	a5,-1
2001693e:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:321
    }

    return ret;
20016942:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:322
}
20016946:	853e                	mv	a0,a5
20016948:	40b6                	lw	ra,76(sp)
2001694a:	4426                	lw	s0,72(sp)
2001694c:	6161                	addi	sp,sp,80
2001694e:	8082                	ret

20016950 <__metal_driver_sifive_i2c0_transfer>:
__metal_driver_sifive_i2c0_transfer():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:327

static int
__metal_driver_sifive_i2c0_transfer(struct metal_i2c *i2c, unsigned int addr,
                                    unsigned char txbuf[], unsigned int txlen,
                                    unsigned char rxbuf[], unsigned int rxlen) {
20016950:	715d                	addi	sp,sp,-80
20016952:	c686                	sw	ra,76(sp)
20016954:	c4a2                	sw	s0,72(sp)
20016956:	0880                	addi	s0,sp,80
20016958:	fca42623          	sw	a0,-52(s0)
2001695c:	fcb42423          	sw	a1,-56(s0)
20016960:	fcc42223          	sw	a2,-60(s0)
20016964:	fcd42023          	sw	a3,-64(s0)
20016968:	fae42e23          	sw	a4,-68(s0)
2001696c:	faf42c23          	sw	a5,-72(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:332
    __metal_io_u8 command;
    time_t timeout;
    int ret;
    unsigned int i;
    unsigned long base = __metal_driver_sifive_i2c0_control_base(i2c);
20016970:	fcc42503          	lw	a0,-52(s0)
20016974:	89bff0ef          	jal	ra,2001620e <__metal_driver_sifive_i2c0_control_base>
20016978:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:334

    if ((i2c != NULL) &&
2001697c:	fcc42783          	lw	a5,-52(s0)
20016980:	20078e63          	beqz	a5,20016b9c <__metal_driver_sifive_i2c0_transfer+0x24c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:335 (discriminator 1)
        ((struct __metal_driver_sifive_i2c0 *)i2c)->init_done) {
20016984:	fcc42783          	lw	a5,-52(s0)
20016988:	43dc                	lw	a5,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:334 (discriminator 1)
    if ((i2c != NULL) &&
2001698a:	20078963          	beqz	a5,20016b9c <__metal_driver_sifive_i2c0_transfer+0x24c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:336
        if (txlen) {
2001698e:	fc042783          	lw	a5,-64(s0)
20016992:	10078863          	beqz	a5,20016aa2 <__metal_driver_sifive_i2c0_transfer+0x152>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:338
            /* Set command flags */
            command = METAL_I2C_CMD_WRITE;
20016996:	47c1                	li	a5,16
20016998:	fef407a3          	sb	a5,-17(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:341
            /* Send address over I2C bus, current driver supports only 7bit
             * addressing */
            ret = __metal_driver_sifive_i2c0_write_addr(base, addr,
2001699c:	4601                	li	a2,0
2001699e:	fc842583          	lw	a1,-56(s0)
200169a2:	fe042503          	lw	a0,-32(s0)
200169a6:	ba3ff0ef          	jal	ra,20016548 <__metal_driver_sifive_i2c0_write_addr>
200169aa:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:344
                                                        METAL_I2C_WRITE);

            if (ret != METAL_I2C_RET_OK) {
200169ae:	fe842783          	lw	a5,-24(s0)
200169b2:	c781                	beqz	a5,200169ba <__metal_driver_sifive_i2c0_transfer+0x6a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:347
                /* Write address failed */
                METAL_I2C_LOG("I2C Write failed.\n");
                return ret;
200169b4:	fe842783          	lw	a5,-24(s0)
200169b8:	a2fd                	j	20016ba6 <__metal_driver_sifive_i2c0_transfer+0x256>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:349
            }
            for (i = 0; i < txlen; i++) {
200169ba:	fe042223          	sw	zero,-28(s0)
200169be:	a8e1                	j	20016a96 <__metal_driver_sifive_i2c0_transfer+0x146>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:351
                /* Copy into transmit register */
                METAL_I2C_REGB(METAL_SIFIVE_I2C0_TRANSMIT) = txbuf[i];
200169c0:	fc442703          	lw	a4,-60(s0)
200169c4:	fe442783          	lw	a5,-28(s0)
200169c8:	97ba                	add	a5,a5,a4
200169ca:	fe042703          	lw	a4,-32(s0)
200169ce:	0731                	addi	a4,a4,12
200169d0:	0007c783          	lbu	a5,0(a5)
200169d4:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:353

                if (i == (txlen - 1) && (rxlen == 0)) {
200169d8:	fc042783          	lw	a5,-64(s0)
200169dc:	17fd                	addi	a5,a5,-1
200169de:	fe442703          	lw	a4,-28(s0)
200169e2:	00f71b63          	bne	a4,a5,200169f8 <__metal_driver_sifive_i2c0_transfer+0xa8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:353 (discriminator 1)
200169e6:	fb842783          	lw	a5,-72(s0)
200169ea:	e799                	bnez	a5,200169f8 <__metal_driver_sifive_i2c0_transfer+0xa8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:355
                    /* Insert stop condition to end transfer */
                    command |= METAL_I2C_CMD_STOP;
200169ec:	fef44783          	lbu	a5,-17(s0)
200169f0:	0407e793          	ori	a5,a5,64
200169f4:	fef407a3          	sb	a5,-17(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:358
                }
                /* Write command register */
                METAL_I2C_REGB(METAL_SIFIVE_I2C0_COMMAND) = command;
200169f8:	fe042783          	lw	a5,-32(s0)
200169fc:	07c1                	addi	a5,a5,16
200169fe:	873e                	mv	a4,a5
20016a00:	fef44783          	lbu	a5,-17(s0)
20016a04:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:360
                /* Reset timeout */
                METAL_I2C_TIMEOUT_RESET(timeout);
20016a08:	525000ef          	jal	ra,2001772c <metal_time>
20016a0c:	86aa                	mv	a3,a0
20016a0e:	872e                	mv	a4,a1
20016a10:	4585                	li	a1,1
20016a12:	4601                	li	a2,0
20016a14:	00b687b3          	add	a5,a3,a1
20016a18:	853e                	mv	a0,a5
20016a1a:	00d53533          	sltu	a0,a0,a3
20016a1e:	00c70833          	add	a6,a4,a2
20016a22:	01050733          	add	a4,a0,a6
20016a26:	883a                	mv	a6,a4
20016a28:	fcf42c23          	sw	a5,-40(s0)
20016a2c:	fd042e23          	sw	a6,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:363

                /* Check for transfer completion. */
                METAL_I2C_REG_CHECK((METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) &
20016a30:	a035                	j	20016a5c <__metal_driver_sifive_i2c0_transfer+0x10c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:363 (discriminator 3)
20016a32:	4fb000ef          	jal	ra,2001772c <metal_time>
20016a36:	87aa                	mv	a5,a0
20016a38:	882e                	mv	a6,a1
20016a3a:	fdc42703          	lw	a4,-36(s0)
20016a3e:	86c2                	mv	a3,a6
20016a40:	00d74c63          	blt	a4,a3,20016a58 <__metal_driver_sifive_i2c0_transfer+0x108>
20016a44:	fdc42703          	lw	a4,-36(s0)
20016a48:	86c2                	mv	a3,a6
20016a4a:	00d71963          	bne	a4,a3,20016a5c <__metal_driver_sifive_i2c0_transfer+0x10c>
20016a4e:	fd842703          	lw	a4,-40(s0)
20016a52:	00f76363          	bltu	a4,a5,20016a58 <__metal_driver_sifive_i2c0_transfer+0x108>
20016a56:	a019                	j	20016a5c <__metal_driver_sifive_i2c0_transfer+0x10c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:363 (discriminator 1)
20016a58:	57fd                	li	a5,-1
20016a5a:	a2b1                	j	20016ba6 <__metal_driver_sifive_i2c0_transfer+0x256>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:363 (discriminator 2)
20016a5c:	fe042783          	lw	a5,-32(s0)
20016a60:	07c1                	addi	a5,a5,16
20016a62:	0007c783          	lbu	a5,0(a5)
20016a66:	0ff7f793          	andi	a5,a5,255
20016a6a:	8b89                	andi	a5,a5,2
20016a6c:	f3f9                	bnez	a5,20016a32 <__metal_driver_sifive_i2c0_transfer+0xe2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:368
                                     METAL_I2C_STATUS_TIP),
                                    timeout);

                /* Check for ACK from slave. */
                if ((METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) &
20016a6e:	fe042783          	lw	a5,-32(s0)
20016a72:	07c1                	addi	a5,a5,16
20016a74:	0007c783          	lbu	a5,0(a5)
20016a78:	0ff7f793          	andi	a5,a5,255
20016a7c:	07e2                	slli	a5,a5,0x18
20016a7e:	87e1                	srai	a5,a5,0x18
20016a80:	0007d663          	bgez	a5,20016a8c <__metal_driver_sifive_i2c0_transfer+0x13c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:372
                     METAL_I2C_STATUS_RXACK)) {
                    /* No ACK, return error */
                    METAL_I2C_LOG("I2C RX ACK failed.\n");
                    ret = METAL_I2C_RET_ERR;
20016a84:	57fd                	li	a5,-1
20016a86:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:373
                    break;
20016a8a:	a821                	j	20016aa2 <__metal_driver_sifive_i2c0_transfer+0x152>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:349 (discriminator 2)
            for (i = 0; i < txlen; i++) {
20016a8c:	fe442783          	lw	a5,-28(s0)
20016a90:	0785                	addi	a5,a5,1
20016a92:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:349 (discriminator 1)
20016a96:	fe442703          	lw	a4,-28(s0)
20016a9a:	fc042783          	lw	a5,-64(s0)
20016a9e:	f2f761e3          	bltu	a4,a5,200169c0 <__metal_driver_sifive_i2c0_transfer+0x70>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:377
                }
            }
        }
        if (rxlen) {
20016aa2:	fb842783          	lw	a5,-72(s0)
20016aa6:	0e078e63          	beqz	a5,20016ba2 <__metal_driver_sifive_i2c0_transfer+0x252>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:378
            command = METAL_I2C_CMD_READ; /* Set command flags */
20016aaa:	02000793          	li	a5,32
20016aae:	fef407a3          	sb	a5,-17(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:381
            /* Send address over I2C bus, current driver supports only 7bit
             * addressing */
            ret = __metal_driver_sifive_i2c0_write_addr(base, addr,
20016ab2:	4605                	li	a2,1
20016ab4:	fc842583          	lw	a1,-56(s0)
20016ab8:	fe042503          	lw	a0,-32(s0)
20016abc:	a8dff0ef          	jal	ra,20016548 <__metal_driver_sifive_i2c0_write_addr>
20016ac0:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:384
                                                        METAL_I2C_READ);

            if (ret != METAL_I2C_RET_OK) {
20016ac4:	fe842783          	lw	a5,-24(s0)
20016ac8:	c781                	beqz	a5,20016ad0 <__metal_driver_sifive_i2c0_transfer+0x180>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:387
                /* Return error */
                METAL_I2C_LOG("I2C Read failed.\n");
                return ret;
20016aca:	fe842783          	lw	a5,-24(s0)
20016ace:	a8e1                	j	20016ba6 <__metal_driver_sifive_i2c0_transfer+0x256>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:389
            }
            for (i = 0; i < rxlen; i++) {
20016ad0:	fe042223          	sw	zero,-28(s0)
20016ad4:	a86d                	j	20016b8e <__metal_driver_sifive_i2c0_transfer+0x23e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:391
                /* check for last transfer */
                if (i == (rxlen - 1)) {
20016ad6:	fb842783          	lw	a5,-72(s0)
20016ada:	17fd                	addi	a5,a5,-1
20016adc:	fe442703          	lw	a4,-28(s0)
20016ae0:	00f71863          	bne	a4,a5,20016af0 <__metal_driver_sifive_i2c0_transfer+0x1a0>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:393
                    /* Set NACK to end read, generate STOP condition */
                    command |= (METAL_I2C_CMD_ACK | METAL_I2C_CMD_STOP);
20016ae4:	fef44783          	lbu	a5,-17(s0)
20016ae8:	0487e793          	ori	a5,a5,72
20016aec:	fef407a3          	sb	a5,-17(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:396
                }
                /* Write command register */
                METAL_I2C_REGB(METAL_SIFIVE_I2C0_COMMAND) = command;
20016af0:	fe042783          	lw	a5,-32(s0)
20016af4:	07c1                	addi	a5,a5,16
20016af6:	873e                	mv	a4,a5
20016af8:	fef44783          	lbu	a5,-17(s0)
20016afc:	00f70023          	sb	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:398
                /* Reset timeout */
                METAL_I2C_TIMEOUT_RESET(timeout);
20016b00:	42d000ef          	jal	ra,2001772c <metal_time>
20016b04:	86aa                	mv	a3,a0
20016b06:	872e                	mv	a4,a1
20016b08:	4585                	li	a1,1
20016b0a:	4601                	li	a2,0
20016b0c:	00b687b3          	add	a5,a3,a1
20016b10:	853e                	mv	a0,a5
20016b12:	00d53533          	sltu	a0,a0,a3
20016b16:	00c70833          	add	a6,a4,a2
20016b1a:	01050733          	add	a4,a0,a6
20016b1e:	883a                	mv	a6,a4
20016b20:	fcf42c23          	sw	a5,-40(s0)
20016b24:	fd042e23          	sw	a6,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:401

                /* Wait for the read to complete */
                METAL_I2C_REG_CHECK((METAL_I2C_REGB(METAL_SIFIVE_I2C0_STATUS) &
20016b28:	a035                	j	20016b54 <__metal_driver_sifive_i2c0_transfer+0x204>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:401 (discriminator 3)
20016b2a:	403000ef          	jal	ra,2001772c <metal_time>
20016b2e:	87aa                	mv	a5,a0
20016b30:	882e                	mv	a6,a1
20016b32:	fdc42703          	lw	a4,-36(s0)
20016b36:	86c2                	mv	a3,a6
20016b38:	00d74c63          	blt	a4,a3,20016b50 <__metal_driver_sifive_i2c0_transfer+0x200>
20016b3c:	fdc42703          	lw	a4,-36(s0)
20016b40:	86c2                	mv	a3,a6
20016b42:	00d71963          	bne	a4,a3,20016b54 <__metal_driver_sifive_i2c0_transfer+0x204>
20016b46:	fd842703          	lw	a4,-40(s0)
20016b4a:	00f76363          	bltu	a4,a5,20016b50 <__metal_driver_sifive_i2c0_transfer+0x200>
20016b4e:	a019                	j	20016b54 <__metal_driver_sifive_i2c0_transfer+0x204>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:401 (discriminator 1)
20016b50:	57fd                	li	a5,-1
20016b52:	a891                	j	20016ba6 <__metal_driver_sifive_i2c0_transfer+0x256>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:401 (discriminator 2)
20016b54:	fe042783          	lw	a5,-32(s0)
20016b58:	07c1                	addi	a5,a5,16
20016b5a:	0007c783          	lbu	a5,0(a5)
20016b5e:	0ff7f793          	andi	a5,a5,255
20016b62:	8b89                	andi	a5,a5,2
20016b64:	f3f9                	bnez	a5,20016b2a <__metal_driver_sifive_i2c0_transfer+0x1da>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:405 (discriminator 2)
                                     METAL_I2C_STATUS_TIP),
                                    timeout);
                /* Store the received byte */
                rxbuf[i] = METAL_I2C_REGB(METAL_SIFIVE_I2C0_TRANSMIT);
20016b66:	fe042783          	lw	a5,-32(s0)
20016b6a:	07b1                	addi	a5,a5,12
20016b6c:	86be                	mv	a3,a5
20016b6e:	fbc42703          	lw	a4,-68(s0)
20016b72:	fe442783          	lw	a5,-28(s0)
20016b76:	97ba                	add	a5,a5,a4
20016b78:	0006c703          	lbu	a4,0(a3)
20016b7c:	0ff77713          	andi	a4,a4,255
20016b80:	00e78023          	sb	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:389 (discriminator 2)
            for (i = 0; i < rxlen; i++) {
20016b84:	fe442783          	lw	a5,-28(s0)
20016b88:	0785                	addi	a5,a5,1
20016b8a:	fef42223          	sw	a5,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:389 (discriminator 1)
20016b8e:	fe442703          	lw	a4,-28(s0)
20016b92:	fb842783          	lw	a5,-72(s0)
20016b96:	f4f760e3          	bltu	a4,a5,20016ad6 <__metal_driver_sifive_i2c0_transfer+0x186>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:377
        if (rxlen) {
20016b9a:	a021                	j	20016ba2 <__metal_driver_sifive_i2c0_transfer+0x252>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:411
            }
        }
    } else {
        /* I2C device not initialized, return error */
        METAL_I2C_LOG("I2C device not initialized.\n");
        ret = METAL_I2C_RET_ERR;
20016b9c:	57fd                	li	a5,-1
20016b9e:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:414
    }

    return ret;
20016ba2:	fe842783          	lw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_i2c0.c:415
}
20016ba6:	853e                	mv	a0,a5
20016ba8:	40b6                	lw	ra,76(sp)
20016baa:	4426                	lw	s0,72(sp)
20016bac:	6161                	addi	sp,sp,80
20016bae:	8082                	ret

20016bb0 <__metal_driver_sifive_uart0_control_base>:
__metal_driver_sifive_uart0_control_base():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1066
{
20016bb0:	1101                	addi	sp,sp,-32
20016bb2:	ce22                	sw	s0,28(sp)
20016bb4:	1000                	addi	s0,sp,32
20016bb6:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1067
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20016bba:	fec42703          	lw	a4,-20(s0)
20016bbe:	800017b7          	lui	a5,0x80001
20016bc2:	a5c78793          	addi	a5,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
20016bc6:	00f71563          	bne	a4,a5,20016bd0 <__metal_driver_sifive_uart0_control_base+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1068
		return METAL_SIFIVE_UART0_10013000_BASE_ADDRESS;
20016bca:	100137b7          	lui	a5,0x10013
20016bce:	a829                	j	20016be8 <__metal_driver_sifive_uart0_control_base+0x38>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1070
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20016bd0:	fec42703          	lw	a4,-20(s0)
20016bd4:	800017b7          	lui	a5,0x80001
20016bd8:	a7c78793          	addi	a5,a5,-1412 # 80000a7c <metal_segment_heap_target_end+0xfffff2bc>
20016bdc:	00f71563          	bne	a4,a5,20016be6 <__metal_driver_sifive_uart0_control_base+0x36>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1071
		return METAL_SIFIVE_UART0_10023000_BASE_ADDRESS;
20016be0:	100237b7          	lui	a5,0x10023
20016be4:	a011                	j	20016be8 <__metal_driver_sifive_uart0_control_base+0x38>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1074
		return 0;
20016be6:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1076
}
20016be8:	853e                	mv	a0,a5
20016bea:	4472                	lw	s0,28(sp)
20016bec:	6105                	addi	sp,sp,32
20016bee:	8082                	ret

20016bf0 <__metal_driver_sifive_uart0_interrupt_parent>:
__metal_driver_sifive_uart0_interrupt_parent():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1105
{
20016bf0:	1101                	addi	sp,sp,-32
20016bf2:	ce22                	sw	s0,28(sp)
20016bf4:	1000                	addi	s0,sp,32
20016bf6:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1106
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20016bfa:	fec42703          	lw	a4,-20(s0)
20016bfe:	800017b7          	lui	a5,0x80001
20016c02:	a5c78793          	addi	a5,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
20016c06:	00f71763          	bne	a4,a5,20016c14 <__metal_driver_sifive_uart0_interrupt_parent+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1107
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20016c0a:	800007b7          	lui	a5,0x80000
20016c0e:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffeca0>
20016c12:	a839                	j	20016c30 <__metal_driver_sifive_uart0_interrupt_parent+0x40>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1109
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20016c14:	fec42703          	lw	a4,-20(s0)
20016c18:	800017b7          	lui	a5,0x80001
20016c1c:	a7c78793          	addi	a5,a5,-1412 # 80000a7c <metal_segment_heap_target_end+0xfffff2bc>
20016c20:	00f71763          	bne	a4,a5,20016c2e <__metal_driver_sifive_uart0_interrupt_parent+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1110
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20016c24:	800007b7          	lui	a5,0x80000
20016c28:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffeca0>
20016c2c:	a011                	j	20016c30 <__metal_driver_sifive_uart0_interrupt_parent+0x40>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1113
		return 0;
20016c2e:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1115
}
20016c30:	853e                	mv	a0,a5
20016c32:	4472                	lw	s0,28(sp)
20016c34:	6105                	addi	sp,sp,32
20016c36:	8082                	ret

20016c38 <__metal_driver_sifive_uart0_interrupt_line>:
__metal_driver_sifive_uart0_interrupt_line():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1118
{
20016c38:	1101                	addi	sp,sp,-32
20016c3a:	ce22                	sw	s0,28(sp)
20016c3c:	1000                	addi	s0,sp,32
20016c3e:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1119
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20016c42:	fec42703          	lw	a4,-20(s0)
20016c46:	800017b7          	lui	a5,0x80001
20016c4a:	a5c78793          	addi	a5,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
20016c4e:	00f71463          	bne	a4,a5,20016c56 <__metal_driver_sifive_uart0_interrupt_line+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1120
		return 3;
20016c52:	478d                	li	a5,3
20016c54:	a821                	j	20016c6c <__metal_driver_sifive_uart0_interrupt_line+0x34>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1122
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20016c56:	fec42703          	lw	a4,-20(s0)
20016c5a:	800017b7          	lui	a5,0x80001
20016c5e:	a7c78793          	addi	a5,a5,-1412 # 80000a7c <metal_segment_heap_target_end+0xfffff2bc>
20016c62:	00f71463          	bne	a4,a5,20016c6a <__metal_driver_sifive_uart0_interrupt_line+0x32>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1123
		return 4;
20016c66:	4791                	li	a5,4
20016c68:	a011                	j	20016c6c <__metal_driver_sifive_uart0_interrupt_line+0x34>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1126
		return 0;
20016c6a:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1128
}
20016c6c:	853e                	mv	a0,a5
20016c6e:	4472                	lw	s0,28(sp)
20016c70:	6105                	addi	sp,sp,32
20016c72:	8082                	ret

20016c74 <__metal_driver_sifive_uart0_clock>:
__metal_driver_sifive_uart0_clock():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1131
{
20016c74:	1101                	addi	sp,sp,-32
20016c76:	ce22                	sw	s0,28(sp)
20016c78:	1000                	addi	s0,sp,32
20016c7a:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1132
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20016c7e:	fec42703          	lw	a4,-20(s0)
20016c82:	800017b7          	lui	a5,0x80001
20016c86:	a5c78793          	addi	a5,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
20016c8a:	00f71763          	bne	a4,a5,20016c98 <__metal_driver_sifive_uart0_clock+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1133
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
20016c8e:	800017b7          	lui	a5,0x80001
20016c92:	ab478793          	addi	a5,a5,-1356 # 80000ab4 <metal_segment_heap_target_end+0xfffff2f4>
20016c96:	a839                	j	20016cb4 <__metal_driver_sifive_uart0_clock+0x40>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1135
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20016c98:	fec42703          	lw	a4,-20(s0)
20016c9c:	800017b7          	lui	a5,0x80001
20016ca0:	a7c78793          	addi	a5,a5,-1412 # 80000a7c <metal_segment_heap_target_end+0xfffff2bc>
20016ca4:	00f71763          	bne	a4,a5,20016cb2 <__metal_driver_sifive_uart0_clock+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1136
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
20016ca8:	800017b7          	lui	a5,0x80001
20016cac:	ab478793          	addi	a5,a5,-1356 # 80000ab4 <metal_segment_heap_target_end+0xfffff2f4>
20016cb0:	a011                	j	20016cb4 <__metal_driver_sifive_uart0_clock+0x40>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1139
		return 0;
20016cb2:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1141
}
20016cb4:	853e                	mv	a0,a5
20016cb6:	4472                	lw	s0,28(sp)
20016cb8:	6105                	addi	sp,sp,32
20016cba:	8082                	ret

20016cbc <__metal_driver_sifive_uart0_pinmux>:
__metal_driver_sifive_uart0_pinmux():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1144
{
20016cbc:	1101                	addi	sp,sp,-32
20016cbe:	ce22                	sw	s0,28(sp)
20016cc0:	1000                	addi	s0,sp,32
20016cc2:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1145
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20016cc6:	fec42703          	lw	a4,-20(s0)
20016cca:	800017b7          	lui	a5,0x80001
20016cce:	a5c78793          	addi	a5,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
20016cd2:	00f71563          	bne	a4,a5,20016cdc <__metal_driver_sifive_uart0_pinmux+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1146
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
20016cd6:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20016cda:	a829                	j	20016cf4 <__metal_driver_sifive_uart0_pinmux+0x38>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1148
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20016cdc:	fec42703          	lw	a4,-20(s0)
20016ce0:	800017b7          	lui	a5,0x80001
20016ce4:	a7c78793          	addi	a5,a5,-1412 # 80000a7c <metal_segment_heap_target_end+0xfffff2bc>
20016ce8:	00f71563          	bne	a4,a5,20016cf2 <__metal_driver_sifive_uart0_pinmux+0x36>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1149
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
20016cec:	82018793          	addi	a5,gp,-2016 # 80000ae0 <__metal_dt_gpio_10012000>
20016cf0:	a011                	j	20016cf4 <__metal_driver_sifive_uart0_pinmux+0x38>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1152
		return 0;
20016cf2:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1154
}
20016cf4:	853e                	mv	a0,a5
20016cf6:	4472                	lw	s0,28(sp)
20016cf8:	6105                	addi	sp,sp,32
20016cfa:	8082                	ret

20016cfc <__metal_driver_sifive_uart0_pinmux_output_selector>:
__metal_driver_sifive_uart0_pinmux_output_selector():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1157
{
20016cfc:	1101                	addi	sp,sp,-32
20016cfe:	ce22                	sw	s0,28(sp)
20016d00:	1000                	addi	s0,sp,32
20016d02:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1158
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20016d06:	fec42703          	lw	a4,-20(s0)
20016d0a:	800017b7          	lui	a5,0x80001
20016d0e:	a5c78793          	addi	a5,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
20016d12:	00f71463          	bne	a4,a5,20016d1a <__metal_driver_sifive_uart0_pinmux_output_selector+0x1e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1159
		return 0;
20016d16:	4781                	li	a5,0
20016d18:	a821                	j	20016d30 <__metal_driver_sifive_uart0_pinmux_output_selector+0x34>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1161
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20016d1a:	fec42703          	lw	a4,-20(s0)
20016d1e:	800017b7          	lui	a5,0x80001
20016d22:	a7c78793          	addi	a5,a5,-1412 # 80000a7c <metal_segment_heap_target_end+0xfffff2bc>
20016d26:	00f71463          	bne	a4,a5,20016d2e <__metal_driver_sifive_uart0_pinmux_output_selector+0x32>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1162
		return 0;
20016d2a:	4781                	li	a5,0
20016d2c:	a011                	j	20016d30 <__metal_driver_sifive_uart0_pinmux_output_selector+0x34>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1165
		return 0;
20016d2e:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1167
}
20016d30:	853e                	mv	a0,a5
20016d32:	4472                	lw	s0,28(sp)
20016d34:	6105                	addi	sp,sp,32
20016d36:	8082                	ret

20016d38 <__metal_driver_sifive_uart0_pinmux_source_selector>:
__metal_driver_sifive_uart0_pinmux_source_selector():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1170
{
20016d38:	1101                	addi	sp,sp,-32
20016d3a:	ce22                	sw	s0,28(sp)
20016d3c:	1000                	addi	s0,sp,32
20016d3e:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1171
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20016d42:	fec42703          	lw	a4,-20(s0)
20016d46:	800017b7          	lui	a5,0x80001
20016d4a:	a5c78793          	addi	a5,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
20016d4e:	00f71563          	bne	a4,a5,20016d58 <__metal_driver_sifive_uart0_pinmux_source_selector+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1172
		return 196608;
20016d52:	000307b7          	lui	a5,0x30
20016d56:	a829                	j	20016d70 <__metal_driver_sifive_uart0_pinmux_source_selector+0x38>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1174
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20016d58:	fec42703          	lw	a4,-20(s0)
20016d5c:	800017b7          	lui	a5,0x80001
20016d60:	a7c78793          	addi	a5,a5,-1412 # 80000a7c <metal_segment_heap_target_end+0xfffff2bc>
20016d64:	00f71563          	bne	a4,a5,20016d6e <__metal_driver_sifive_uart0_pinmux_source_selector+0x36>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1175
		return 8650752;
20016d68:	008407b7          	lui	a5,0x840
20016d6c:	a011                	j	20016d70 <__metal_driver_sifive_uart0_pinmux_source_selector+0x38>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1178
		return 0;
20016d6e:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:1180
}
20016d70:	853e                	mv	a0,a5
20016d72:	4472                	lw	s0,28(sp)
20016d74:	6105                	addi	sp,sp,32
20016d76:	8082                	ret

20016d78 <__metal_driver_sifive_uart0_interrupt_controller>:
__metal_driver_sifive_uart0_interrupt_controller():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:37
    (__METAL_ACCESS_ONCE((__metal_io_u8 *)UART_REG(offset)))
#define UART_REGW(offset)                                                      \
    (__METAL_ACCESS_ONCE((__metal_io_u32 *)UART_REG(offset)))

struct metal_interrupt *
__metal_driver_sifive_uart0_interrupt_controller(struct metal_uart *uart) {
20016d78:	1101                	addi	sp,sp,-32
20016d7a:	ce06                	sw	ra,28(sp)
20016d7c:	cc22                	sw	s0,24(sp)
20016d7e:	1000                	addi	s0,sp,32
20016d80:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:38
    return __metal_driver_sifive_uart0_interrupt_parent(uart);
20016d84:	fec42503          	lw	a0,-20(s0)
20016d88:	e69ff0ef          	jal	ra,20016bf0 <__metal_driver_sifive_uart0_interrupt_parent>
20016d8c:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:39
}
20016d8e:	853e                	mv	a0,a5
20016d90:	40f2                	lw	ra,28(sp)
20016d92:	4462                	lw	s0,24(sp)
20016d94:	6105                	addi	sp,sp,32
20016d96:	8082                	ret

20016d98 <__metal_driver_sifive_uart0_get_interrupt_id>:
__metal_driver_sifive_uart0_get_interrupt_id():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:41

int __metal_driver_sifive_uart0_get_interrupt_id(struct metal_uart *uart) {
20016d98:	1101                	addi	sp,sp,-32
20016d9a:	ce06                	sw	ra,28(sp)
20016d9c:	cc22                	sw	s0,24(sp)
20016d9e:	1000                	addi	s0,sp,32
20016da0:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:42
    return __metal_driver_sifive_uart0_interrupt_line(uart);
20016da4:	fec42503          	lw	a0,-20(s0)
20016da8:	e91ff0ef          	jal	ra,20016c38 <__metal_driver_sifive_uart0_interrupt_line>
20016dac:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:43
}
20016dae:	853e                	mv	a0,a5
20016db0:	40f2                	lw	ra,28(sp)
20016db2:	4462                	lw	s0,24(sp)
20016db4:	6105                	addi	sp,sp,32
20016db6:	8082                	ret

20016db8 <__metal_driver_sifive_uart0_tx_interrupt_enable>:
__metal_driver_sifive_uart0_tx_interrupt_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:45

int __metal_driver_sifive_uart0_tx_interrupt_enable(struct metal_uart *uart) {
20016db8:	7179                	addi	sp,sp,-48
20016dba:	d606                	sw	ra,44(sp)
20016dbc:	d422                	sw	s0,40(sp)
20016dbe:	1800                	addi	s0,sp,48
20016dc0:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:46
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20016dc4:	fdc42503          	lw	a0,-36(s0)
20016dc8:	de9ff0ef          	jal	ra,20016bb0 <__metal_driver_sifive_uart0_control_base>
20016dcc:	87aa                	mv	a5,a0
20016dce:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:48

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_TXWM;
20016dd2:	fec42783          	lw	a5,-20(s0)
20016dd6:	07c1                	addi	a5,a5,16
20016dd8:	439c                	lw	a5,0(a5)
20016dda:	fec42703          	lw	a4,-20(s0)
20016dde:	0741                	addi	a4,a4,16
20016de0:	0017e793          	ori	a5,a5,1
20016de4:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:49
    return 0;
20016de6:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:50
}
20016de8:	853e                	mv	a0,a5
20016dea:	50b2                	lw	ra,44(sp)
20016dec:	5422                	lw	s0,40(sp)
20016dee:	6145                	addi	sp,sp,48
20016df0:	8082                	ret

20016df2 <__metal_driver_sifive_uart0_tx_interrupt_disable>:
__metal_driver_sifive_uart0_tx_interrupt_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:52

int __metal_driver_sifive_uart0_tx_interrupt_disable(struct metal_uart *uart) {
20016df2:	7179                	addi	sp,sp,-48
20016df4:	d606                	sw	ra,44(sp)
20016df6:	d422                	sw	s0,40(sp)
20016df8:	1800                	addi	s0,sp,48
20016dfa:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:53
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20016dfe:	fdc42503          	lw	a0,-36(s0)
20016e02:	dafff0ef          	jal	ra,20016bb0 <__metal_driver_sifive_uart0_control_base>
20016e06:	87aa                	mv	a5,a0
20016e08:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:55

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_TXWM;
20016e0c:	fec42783          	lw	a5,-20(s0)
20016e10:	07c1                	addi	a5,a5,16
20016e12:	439c                	lw	a5,0(a5)
20016e14:	fec42703          	lw	a4,-20(s0)
20016e18:	0741                	addi	a4,a4,16
20016e1a:	9bf9                	andi	a5,a5,-2
20016e1c:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:56
    return 0;
20016e1e:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:57
}
20016e20:	853e                	mv	a0,a5
20016e22:	50b2                	lw	ra,44(sp)
20016e24:	5422                	lw	s0,40(sp)
20016e26:	6145                	addi	sp,sp,48
20016e28:	8082                	ret

20016e2a <__metal_driver_sifive_uart0_rx_interrupt_enable>:
__metal_driver_sifive_uart0_rx_interrupt_enable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:59

int __metal_driver_sifive_uart0_rx_interrupt_enable(struct metal_uart *uart) {
20016e2a:	7179                	addi	sp,sp,-48
20016e2c:	d606                	sw	ra,44(sp)
20016e2e:	d422                	sw	s0,40(sp)
20016e30:	1800                	addi	s0,sp,48
20016e32:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:60
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20016e36:	fdc42503          	lw	a0,-36(s0)
20016e3a:	d77ff0ef          	jal	ra,20016bb0 <__metal_driver_sifive_uart0_control_base>
20016e3e:	87aa                	mv	a5,a0
20016e40:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:62

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_RXWM;
20016e44:	fec42783          	lw	a5,-20(s0)
20016e48:	07c1                	addi	a5,a5,16
20016e4a:	439c                	lw	a5,0(a5)
20016e4c:	fec42703          	lw	a4,-20(s0)
20016e50:	0741                	addi	a4,a4,16
20016e52:	0027e793          	ori	a5,a5,2
20016e56:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:63
    return 0;
20016e58:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:64
}
20016e5a:	853e                	mv	a0,a5
20016e5c:	50b2                	lw	ra,44(sp)
20016e5e:	5422                	lw	s0,40(sp)
20016e60:	6145                	addi	sp,sp,48
20016e62:	8082                	ret

20016e64 <__metal_driver_sifive_uart0_rx_interrupt_disable>:
__metal_driver_sifive_uart0_rx_interrupt_disable():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:66

int __metal_driver_sifive_uart0_rx_interrupt_disable(struct metal_uart *uart) {
20016e64:	7179                	addi	sp,sp,-48
20016e66:	d606                	sw	ra,44(sp)
20016e68:	d422                	sw	s0,40(sp)
20016e6a:	1800                	addi	s0,sp,48
20016e6c:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:67
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20016e70:	fdc42503          	lw	a0,-36(s0)
20016e74:	d3dff0ef          	jal	ra,20016bb0 <__metal_driver_sifive_uart0_control_base>
20016e78:	87aa                	mv	a5,a0
20016e7a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:69

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_RXWM;
20016e7e:	fec42783          	lw	a5,-20(s0)
20016e82:	07c1                	addi	a5,a5,16
20016e84:	439c                	lw	a5,0(a5)
20016e86:	fec42703          	lw	a4,-20(s0)
20016e8a:	0741                	addi	a4,a4,16
20016e8c:	9bf5                	andi	a5,a5,-3
20016e8e:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:70
    return 0;
20016e90:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:71
}
20016e92:	853e                	mv	a0,a5
20016e94:	50b2                	lw	ra,44(sp)
20016e96:	5422                	lw	s0,40(sp)
20016e98:	6145                	addi	sp,sp,48
20016e9a:	8082                	ret

20016e9c <__metal_driver_sifive_uart0_txready>:
__metal_driver_sifive_uart0_txready():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:73

int __metal_driver_sifive_uart0_txready(struct metal_uart *uart) {
20016e9c:	7179                	addi	sp,sp,-48
20016e9e:	d606                	sw	ra,44(sp)
20016ea0:	d422                	sw	s0,40(sp)
20016ea2:	1800                	addi	s0,sp,48
20016ea4:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:74
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20016ea8:	fdc42503          	lw	a0,-36(s0)
20016eac:	d05ff0ef          	jal	ra,20016bb0 <__metal_driver_sifive_uart0_control_base>
20016eb0:	87aa                	mv	a5,a0
20016eb2:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:76

    return !!((UART_REGW(METAL_SIFIVE_UART0_TXDATA) & UART_TXFULL));
20016eb6:	fec42783          	lw	a5,-20(s0)
20016eba:	439c                	lw	a5,0(a5)
20016ebc:	83fd                	srli	a5,a5,0x1f
20016ebe:	0ff7f793          	andi	a5,a5,255
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:77
}
20016ec2:	853e                	mv	a0,a5
20016ec4:	50b2                	lw	ra,44(sp)
20016ec6:	5422                	lw	s0,40(sp)
20016ec8:	6145                	addi	sp,sp,48
20016eca:	8082                	ret

20016ecc <__metal_driver_sifive_uart0_set_tx_watermark>:
__metal_driver_sifive_uart0_set_tx_watermark():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:80

int __metal_driver_sifive_uart0_set_tx_watermark(struct metal_uart *uart,
                                                 size_t level) {
20016ecc:	7179                	addi	sp,sp,-48
20016ece:	d606                	sw	ra,44(sp)
20016ed0:	d422                	sw	s0,40(sp)
20016ed2:	1800                	addi	s0,sp,48
20016ed4:	fca42e23          	sw	a0,-36(s0)
20016ed8:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:81
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20016edc:	fdc42503          	lw	a0,-36(s0)
20016ee0:	cd1ff0ef          	jal	ra,20016bb0 <__metal_driver_sifive_uart0_control_base>
20016ee4:	87aa                	mv	a5,a0
20016ee6:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:83

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(level);
20016eea:	fec42783          	lw	a5,-20(s0)
20016eee:	07a1                	addi	a5,a5,8
20016ef0:	4398                	lw	a4,0(a5)
20016ef2:	fd842783          	lw	a5,-40(s0)
20016ef6:	01079693          	slli	a3,a5,0x10
20016efa:	000707b7          	lui	a5,0x70
20016efe:	8ff5                	and	a5,a5,a3
20016f00:	fec42683          	lw	a3,-20(s0)
20016f04:	06a1                	addi	a3,a3,8
20016f06:	8fd9                	or	a5,a5,a4
20016f08:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:84
    return 0;
20016f0a:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:85
}
20016f0c:	853e                	mv	a0,a5
20016f0e:	50b2                	lw	ra,44(sp)
20016f10:	5422                	lw	s0,40(sp)
20016f12:	6145                	addi	sp,sp,48
20016f14:	8082                	ret

20016f16 <__metal_driver_sifive_uart0_get_tx_watermark>:
__metal_driver_sifive_uart0_get_tx_watermark():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:87

size_t __metal_driver_sifive_uart0_get_tx_watermark(struct metal_uart *uart) {
20016f16:	7179                	addi	sp,sp,-48
20016f18:	d606                	sw	ra,44(sp)
20016f1a:	d422                	sw	s0,40(sp)
20016f1c:	1800                	addi	s0,sp,48
20016f1e:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:88
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20016f22:	fdc42503          	lw	a0,-36(s0)
20016f26:	c8bff0ef          	jal	ra,20016bb0 <__metal_driver_sifive_uart0_control_base>
20016f2a:	87aa                	mv	a5,a0
20016f2c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:90

    return ((UART_REGW(METAL_SIFIVE_UART0_TXCTRL) >> 16) & 0x7);
20016f30:	fec42783          	lw	a5,-20(s0)
20016f34:	07a1                	addi	a5,a5,8
20016f36:	439c                	lw	a5,0(a5)
20016f38:	83c1                	srli	a5,a5,0x10
20016f3a:	8b9d                	andi	a5,a5,7
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:91
}
20016f3c:	853e                	mv	a0,a5
20016f3e:	50b2                	lw	ra,44(sp)
20016f40:	5422                	lw	s0,40(sp)
20016f42:	6145                	addi	sp,sp,48
20016f44:	8082                	ret

20016f46 <__metal_driver_sifive_uart0_set_rx_watermark>:
__metal_driver_sifive_uart0_set_rx_watermark():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:94

int __metal_driver_sifive_uart0_set_rx_watermark(struct metal_uart *uart,
                                                 size_t level) {
20016f46:	7179                	addi	sp,sp,-48
20016f48:	d606                	sw	ra,44(sp)
20016f4a:	d422                	sw	s0,40(sp)
20016f4c:	1800                	addi	s0,sp,48
20016f4e:	fca42e23          	sw	a0,-36(s0)
20016f52:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:95
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20016f56:	fdc42503          	lw	a0,-36(s0)
20016f5a:	c57ff0ef          	jal	ra,20016bb0 <__metal_driver_sifive_uart0_control_base>
20016f5e:	87aa                	mv	a5,a0
20016f60:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:97

    UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXCNT(level);
20016f64:	fec42783          	lw	a5,-20(s0)
20016f68:	07b1                	addi	a5,a5,12
20016f6a:	4398                	lw	a4,0(a5)
20016f6c:	fd842783          	lw	a5,-40(s0)
20016f70:	01079693          	slli	a3,a5,0x10
20016f74:	000707b7          	lui	a5,0x70
20016f78:	8ff5                	and	a5,a5,a3
20016f7a:	fec42683          	lw	a3,-20(s0)
20016f7e:	06b1                	addi	a3,a3,12
20016f80:	8fd9                	or	a5,a5,a4
20016f82:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:98
    return 0;
20016f84:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:99
}
20016f86:	853e                	mv	a0,a5
20016f88:	50b2                	lw	ra,44(sp)
20016f8a:	5422                	lw	s0,40(sp)
20016f8c:	6145                	addi	sp,sp,48
20016f8e:	8082                	ret

20016f90 <__metal_driver_sifive_uart0_get_rx_watermark>:
__metal_driver_sifive_uart0_get_rx_watermark():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:101

size_t __metal_driver_sifive_uart0_get_rx_watermark(struct metal_uart *uart) {
20016f90:	7179                	addi	sp,sp,-48
20016f92:	d606                	sw	ra,44(sp)
20016f94:	d422                	sw	s0,40(sp)
20016f96:	1800                	addi	s0,sp,48
20016f98:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:102
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20016f9c:	fdc42503          	lw	a0,-36(s0)
20016fa0:	c11ff0ef          	jal	ra,20016bb0 <__metal_driver_sifive_uart0_control_base>
20016fa4:	87aa                	mv	a5,a0
20016fa6:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:104

    return ((UART_REGW(METAL_SIFIVE_UART0_RXCTRL) >> 16) & 0x7);
20016faa:	fec42783          	lw	a5,-20(s0)
20016fae:	07b1                	addi	a5,a5,12
20016fb0:	439c                	lw	a5,0(a5)
20016fb2:	83c1                	srli	a5,a5,0x10
20016fb4:	8b9d                	andi	a5,a5,7
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:105
}
20016fb6:	853e                	mv	a0,a5
20016fb8:	50b2                	lw	ra,44(sp)
20016fba:	5422                	lw	s0,40(sp)
20016fbc:	6145                	addi	sp,sp,48
20016fbe:	8082                	ret

20016fc0 <__metal_driver_sifive_uart0_putc>:
__metal_driver_sifive_uart0_putc():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:107

int __metal_driver_sifive_uart0_putc(struct metal_uart *uart, int c) {
20016fc0:	7179                	addi	sp,sp,-48
20016fc2:	d606                	sw	ra,44(sp)
20016fc4:	d422                	sw	s0,40(sp)
20016fc6:	1800                	addi	s0,sp,48
20016fc8:	fca42e23          	sw	a0,-36(s0)
20016fcc:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:108
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20016fd0:	fdc42503          	lw	a0,-36(s0)
20016fd4:	bddff0ef          	jal	ra,20016bb0 <__metal_driver_sifive_uart0_control_base>
20016fd8:	87aa                	mv	a5,a0
20016fda:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:110

    while (__metal_driver_sifive_uart0_txready(uart) != 0) {
20016fde:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:110 (discriminator 1)
20016fe0:	fdc42503          	lw	a0,-36(s0)
20016fe4:	eb9ff0ef          	jal	ra,20016e9c <__metal_driver_sifive_uart0_txready>
20016fe8:	87aa                	mv	a5,a0
20016fea:	fbfd                	bnez	a5,20016fe0 <__metal_driver_sifive_uart0_putc+0x20>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:113
        /* wait */
    }
    UART_REGW(METAL_SIFIVE_UART0_TXDATA) = c;
20016fec:	fec42783          	lw	a5,-20(s0)
20016ff0:	fd842703          	lw	a4,-40(s0)
20016ff4:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:114
    return 0;
20016ff6:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:115
}
20016ff8:	853e                	mv	a0,a5
20016ffa:	50b2                	lw	ra,44(sp)
20016ffc:	5422                	lw	s0,40(sp)
20016ffe:	6145                	addi	sp,sp,48
20017000:	8082                	ret

20017002 <__metal_driver_sifive_uart0_getc>:
__metal_driver_sifive_uart0_getc():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:117

int __metal_driver_sifive_uart0_getc(struct metal_uart *uart, int *c) {
20017002:	7179                	addi	sp,sp,-48
20017004:	d606                	sw	ra,44(sp)
20017006:	d422                	sw	s0,40(sp)
20017008:	1800                	addi	s0,sp,48
2001700a:	fca42e23          	sw	a0,-36(s0)
2001700e:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:119
    uint32_t ch;
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20017012:	fdc42503          	lw	a0,-36(s0)
20017016:	b9bff0ef          	jal	ra,20016bb0 <__metal_driver_sifive_uart0_control_base>
2001701a:	87aa                	mv	a5,a0
2001701c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:121
    /* No seperate status register, we get status and the byte at same time */
    ch = UART_REGW(METAL_SIFIVE_UART0_RXDATA);
20017020:	fec42783          	lw	a5,-20(s0)
20017024:	0791                	addi	a5,a5,4
20017026:	439c                	lw	a5,0(a5)
20017028:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:123
    ;
    if (ch & UART_RXEMPTY) {
2001702c:	fe842783          	lw	a5,-24(s0)
20017030:	0007d763          	bgez	a5,2001703e <__metal_driver_sifive_uart0_getc+0x3c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:124
        *c = -1; /* aka: EOF in most of the world */
20017034:	fd842783          	lw	a5,-40(s0)
20017038:	577d                	li	a4,-1
2001703a:	c398                	sw	a4,0(a5)
2001703c:	a801                	j	2001704c <__metal_driver_sifive_uart0_getc+0x4a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:126
    } else {
        *c = ch & 0x0ff;
2001703e:	fe842783          	lw	a5,-24(s0)
20017042:	0ff7f713          	andi	a4,a5,255
20017046:	fd842783          	lw	a5,-40(s0)
2001704a:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:128
    }
    return 0;
2001704c:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:129
}
2001704e:	853e                	mv	a0,a5
20017050:	50b2                	lw	ra,44(sp)
20017052:	5422                	lw	s0,40(sp)
20017054:	6145                	addi	sp,sp,48
20017056:	8082                	ret

20017058 <__metal_driver_sifive_uart0_get_baud_rate>:
__metal_driver_sifive_uart0_get_baud_rate():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:131

int __metal_driver_sifive_uart0_get_baud_rate(struct metal_uart *guart) {
20017058:	7179                	addi	sp,sp,-48
2001705a:	d622                	sw	s0,44(sp)
2001705c:	1800                	addi	s0,sp,48
2001705e:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:132
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
20017062:	fdc42783          	lw	a5,-36(s0)
20017066:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:133
    return uart->baud_rate;
2001706a:	fec42783          	lw	a5,-20(s0)
2001706e:	43dc                	lw	a5,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:134
}
20017070:	853e                	mv	a0,a5
20017072:	5432                	lw	s0,44(sp)
20017074:	6145                	addi	sp,sp,48
20017076:	8082                	ret

20017078 <__metal_driver_sifive_uart0_set_baud_rate>:
__metal_driver_sifive_uart0_set_baud_rate():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:137

int __metal_driver_sifive_uart0_set_baud_rate(struct metal_uart *guart,
                                              int baud_rate) {
20017078:	7179                	addi	sp,sp,-48
2001707a:	d606                	sw	ra,44(sp)
2001707c:	d422                	sw	s0,40(sp)
2001707e:	1800                	addi	s0,sp,48
20017080:	fca42e23          	sw	a0,-36(s0)
20017084:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:138
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
20017088:	fdc42783          	lw	a5,-36(s0)
2001708c:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:139
    long control_base = __metal_driver_sifive_uart0_control_base(guart);
20017090:	fdc42503          	lw	a0,-36(s0)
20017094:	b1dff0ef          	jal	ra,20016bb0 <__metal_driver_sifive_uart0_control_base>
20017098:	87aa                	mv	a5,a0
2001709a:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:140
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
2001709e:	fdc42503          	lw	a0,-36(s0)
200170a2:	bd3ff0ef          	jal	ra,20016c74 <__metal_driver_sifive_uart0_clock>
200170a6:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:142

    uart->baud_rate = baud_rate;
200170aa:	fd842703          	lw	a4,-40(s0)
200170ae:	fec42783          	lw	a5,-20(s0)
200170b2:	c3d8                	sw	a4,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:144

    if (clock != NULL) {
200170b4:	fe442783          	lw	a5,-28(s0)
200170b8:	cbb1                	beqz	a5,2001710c <__metal_driver_sifive_uart0_set_baud_rate+0x94>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:145
        long clock_rate = clock->vtable->get_rate_hz(clock);
200170ba:	fe442783          	lw	a5,-28(s0)
200170be:	439c                	lw	a5,0(a5)
200170c0:	439c                	lw	a5,0(a5)
200170c2:	fe442503          	lw	a0,-28(s0)
200170c6:	9782                	jalr	a5
200170c8:	fea42023          	sw	a0,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:146
        UART_REGW(METAL_SIFIVE_UART0_DIV) = clock_rate / baud_rate - 1;
200170cc:	fe042703          	lw	a4,-32(s0)
200170d0:	fd842783          	lw	a5,-40(s0)
200170d4:	02f747b3          	div	a5,a4,a5
200170d8:	fff78713          	addi	a4,a5,-1 # 6ffff <__heap_size+0x6f7ff>
200170dc:	fe842783          	lw	a5,-24(s0)
200170e0:	07e1                	addi	a5,a5,24
200170e2:	c398                	sw	a4,0(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:147
        UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXEN;
200170e4:	fe842783          	lw	a5,-24(s0)
200170e8:	07a1                	addi	a5,a5,8
200170ea:	439c                	lw	a5,0(a5)
200170ec:	fe842703          	lw	a4,-24(s0)
200170f0:	0721                	addi	a4,a4,8
200170f2:	0017e793          	ori	a5,a5,1
200170f6:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:148
        UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXEN;
200170f8:	fe842783          	lw	a5,-24(s0)
200170fc:	07b1                	addi	a5,a5,12
200170fe:	439c                	lw	a5,0(a5)
20017100:	fe842703          	lw	a4,-24(s0)
20017104:	0731                	addi	a4,a4,12
20017106:	0017e793          	ori	a5,a5,1
2001710a:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:150
    }
    return 0;
2001710c:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:151
}
2001710e:	853e                	mv	a0,a5
20017110:	50b2                	lw	ra,44(sp)
20017112:	5422                	lw	s0,40(sp)
20017114:	6145                	addi	sp,sp,48
20017116:	8082                	ret

20017118 <pre_rate_change_callback_func>:
pre_rate_change_callback_func():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:153

static void pre_rate_change_callback_func(void *priv) {
20017118:	7139                	addi	sp,sp,-64
2001711a:	de06                	sw	ra,60(sp)
2001711c:	dc22                	sw	s0,56(sp)
2001711e:	0080                	addi	s0,sp,64
20017120:	fca42623          	sw	a0,-52(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:154
    struct __metal_driver_sifive_uart0 *uart = priv;
20017124:	fcc42783          	lw	a5,-52(s0)
20017128:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:156
    long control_base =
        __metal_driver_sifive_uart0_control_base((struct metal_uart *)priv);
2001712c:	fcc42503          	lw	a0,-52(s0)
20017130:	a81ff0ef          	jal	ra,20016bb0 <__metal_driver_sifive_uart0_control_base>
20017134:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:155
    long control_base =
20017136:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:158
    struct metal_clock *clock =
        __metal_driver_sifive_uart0_clock((struct metal_uart *)priv);
2001713a:	fcc42503          	lw	a0,-52(s0)
2001713e:	b37ff0ef          	jal	ra,20016c74 <__metal_driver_sifive_uart0_clock>
20017142:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:163

    /* Detect when the TXDATA is empty by setting the transmit watermark count
     * to one and waiting until an interrupt is pending */

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) &= ~(UART_TXCNT(0x7));
20017146:	fe842783          	lw	a5,-24(s0)
2001714a:	07a1                	addi	a5,a5,8
2001714c:	4398                	lw	a4,0(a5)
2001714e:	fe842783          	lw	a5,-24(s0)
20017152:	07a1                	addi	a5,a5,8
20017154:	86be                	mv	a3,a5
20017156:	fff907b7          	lui	a5,0xfff90
2001715a:	17fd                	addi	a5,a5,-1
2001715c:	8ff9                	and	a5,a5,a4
2001715e:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:164
    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(1);
20017160:	fe842783          	lw	a5,-24(s0)
20017164:	07a1                	addi	a5,a5,8
20017166:	4398                	lw	a4,0(a5)
20017168:	fe842783          	lw	a5,-24(s0)
2001716c:	07a1                	addi	a5,a5,8
2001716e:	86be                	mv	a3,a5
20017170:	67c1                	lui	a5,0x10
20017172:	8fd9                	or	a5,a5,a4
20017174:	c29c                	sw	a5,0(a3)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:166

    while ((UART_REGW(METAL_SIFIVE_UART0_IP) & UART_TXWM) == 0)
20017176:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:166 (discriminator 1)
20017178:	fe842783          	lw	a5,-24(s0)
2001717c:	07d1                	addi	a5,a5,20
2001717e:	439c                	lw	a5,0(a5)
20017180:	8b85                	andi	a5,a5,1
20017182:	dbfd                	beqz	a5,20017178 <pre_rate_change_callback_func+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:174
    /* When the TXDATA clears, the UART is still shifting out the last byte.
     * Calculate the time we must drain to finish transmitting and then wait
     * that long. */

    long bits_per_symbol =
        (UART_REGW(METAL_SIFIVE_UART0_TXCTRL) & (1 << 1)) ? 9 : 10;
20017184:	fe842783          	lw	a5,-24(s0)
20017188:	07a1                	addi	a5,a5,8
2001718a:	439c                	lw	a5,0(a5)
2001718c:	8b89                	andi	a5,a5,2
2001718e:	c399                	beqz	a5,20017194 <pre_rate_change_callback_func+0x7c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 1)
20017190:	47a5                	li	a5,9
20017192:	a011                	j	20017196 <pre_rate_change_callback_func+0x7e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 2)
20017194:	47a9                	li	a5,10
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:173
    long bits_per_symbol =
20017196:	fef42023          	sw	a5,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:175
    long clk_freq = clock->vtable->get_rate_hz(clock);
2001719a:	fe442783          	lw	a5,-28(s0)
2001719e:	439c                	lw	a5,0(a5)
200171a0:	439c                	lw	a5,0(a5)
200171a2:	fe442503          	lw	a0,-28(s0)
200171a6:	9782                	jalr	a5
200171a8:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:176
    long cycles_to_wait = bits_per_symbol * clk_freq / uart->baud_rate;
200171ac:	fe042703          	lw	a4,-32(s0)
200171b0:	fdc42783          	lw	a5,-36(s0)
200171b4:	02f707b3          	mul	a5,a4,a5
200171b8:	873e                	mv	a4,a5
200171ba:	fec42783          	lw	a5,-20(s0)
200171be:	43dc                	lw	a5,4(a5)
200171c0:	02f757b3          	divu	a5,a4,a5
200171c4:	fcf42c23          	sw	a5,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:178

    for (volatile long x = 0; x < cycles_to_wait; x++)
200171c8:	fc042a23          	sw	zero,-44(s0)
200171cc:	a039                	j	200171da <pre_rate_change_callback_func+0xc2>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:179 (discriminator 3)
        __asm__("nop");
200171ce:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 3)
    for (volatile long x = 0; x < cycles_to_wait; x++)
200171d0:	fd442783          	lw	a5,-44(s0)
200171d4:	0785                	addi	a5,a5,1
200171d6:	fcf42a23          	sw	a5,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 1)
200171da:	fd442783          	lw	a5,-44(s0)
200171de:	fd842703          	lw	a4,-40(s0)
200171e2:	fee7c6e3          	blt	a5,a4,200171ce <pre_rate_change_callback_func+0xb6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:180
}
200171e6:	0001                	nop
200171e8:	50f2                	lw	ra,60(sp)
200171ea:	5462                	lw	s0,56(sp)
200171ec:	6121                	addi	sp,sp,64
200171ee:	8082                	ret

200171f0 <post_rate_change_callback_func>:
post_rate_change_callback_func():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:182

static void post_rate_change_callback_func(void *priv) {
200171f0:	7179                	addi	sp,sp,-48
200171f2:	d606                	sw	ra,44(sp)
200171f4:	d422                	sw	s0,40(sp)
200171f6:	1800                	addi	s0,sp,48
200171f8:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:183
    struct __metal_driver_sifive_uart0 *uart = priv;
200171fc:	fdc42783          	lw	a5,-36(s0)
20017200:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:184
    metal_uart_set_baud_rate(&uart->uart, uart->baud_rate);
20017204:	fec42703          	lw	a4,-20(s0)
20017208:	fec42783          	lw	a5,-20(s0)
2001720c:	43dc                	lw	a5,4(a5)
2001720e:	85be                	mv	a1,a5
20017210:	853a                	mv	a0,a4
20017212:	237d                	jal	200177c0 <metal_uart_set_baud_rate>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:185
}
20017214:	0001                	nop
20017216:	50b2                	lw	ra,44(sp)
20017218:	5422                	lw	s0,40(sp)
2001721a:	6145                	addi	sp,sp,48
2001721c:	8082                	ret

2001721e <__metal_driver_sifive_uart0_init>:
__metal_driver_sifive_uart0_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:187

void __metal_driver_sifive_uart0_init(struct metal_uart *guart, int baud_rate) {
2001721e:	7139                	addi	sp,sp,-64
20017220:	de06                	sw	ra,60(sp)
20017222:	dc22                	sw	s0,56(sp)
20017224:	0080                	addi	s0,sp,64
20017226:	fca42623          	sw	a0,-52(s0)
2001722a:	fcb42423          	sw	a1,-56(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:188
    struct __metal_driver_sifive_uart0 *uart = (void *)(guart);
2001722e:	fcc42783          	lw	a5,-52(s0)
20017232:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:189
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
20017236:	fcc42503          	lw	a0,-52(s0)
2001723a:	a3bff0ef          	jal	ra,20016c74 <__metal_driver_sifive_uart0_clock>
2001723e:	fea42423          	sw	a0,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:191
    struct __metal_driver_sifive_gpio0 *pinmux =
        __metal_driver_sifive_uart0_pinmux(guart);
20017242:	fcc42503          	lw	a0,-52(s0)
20017246:	a77ff0ef          	jal	ra,20016cbc <__metal_driver_sifive_uart0_pinmux>
2001724a:	fea42223          	sw	a0,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:193

    if (clock != NULL) {
2001724e:	fe842783          	lw	a5,-24(s0)
20017252:	c7b9                	beqz	a5,200172a0 <__metal_driver_sifive_uart0_init+0x82>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:194
        uart->pre_rate_change_callback.callback =
20017254:	fec42783          	lw	a5,-20(s0)
20017258:	20017737          	lui	a4,0x20017
2001725c:	11870713          	addi	a4,a4,280 # 20017118 <pre_rate_change_callback_func>
20017260:	c798                	sw	a4,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:196
            &pre_rate_change_callback_func;
        uart->pre_rate_change_callback.priv = guart;
20017262:	fec42783          	lw	a5,-20(s0)
20017266:	fcc42703          	lw	a4,-52(s0)
2001726a:	c7d8                	sw	a4,12(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:197
        metal_clock_register_pre_rate_change_callback(
2001726c:	fec42783          	lw	a5,-20(s0)
20017270:	07a1                	addi	a5,a5,8
20017272:	85be                	mv	a1,a5
20017274:	fe842503          	lw	a0,-24(s0)
20017278:	2ab5                	jal	200173f4 <metal_clock_register_pre_rate_change_callback>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:200
            clock, &(uart->pre_rate_change_callback));

        uart->post_rate_change_callback.callback =
2001727a:	fec42783          	lw	a5,-20(s0)
2001727e:	20017737          	lui	a4,0x20017
20017282:	1f070713          	addi	a4,a4,496 # 200171f0 <post_rate_change_callback_func>
20017286:	cbd8                	sw	a4,20(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:202
            &post_rate_change_callback_func;
        uart->post_rate_change_callback.priv = guart;
20017288:	fec42783          	lw	a5,-20(s0)
2001728c:	fcc42703          	lw	a4,-52(s0)
20017290:	cf98                	sw	a4,24(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:203
        metal_clock_register_post_rate_change_callback(
20017292:	fec42783          	lw	a5,-20(s0)
20017296:	07d1                	addi	a5,a5,20
20017298:	85be                	mv	a1,a5
2001729a:	fe842503          	lw	a0,-24(s0)
2001729e:	2261                	jal	20017426 <metal_clock_register_post_rate_change_callback>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:207
            clock, &(uart->post_rate_change_callback));
    }

    metal_uart_set_baud_rate(&(uart->uart), baud_rate);
200172a0:	fec42783          	lw	a5,-20(s0)
200172a4:	fc842583          	lw	a1,-56(s0)
200172a8:	853e                	mv	a0,a5
200172aa:	2b19                	jal	200177c0 <metal_uart_set_baud_rate>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:209

    if (pinmux != NULL) {
200172ac:	fe442783          	lw	a5,-28(s0)
200172b0:	cb95                	beqz	a5,200172e4 <__metal_driver_sifive_uart0_init+0xc6>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:211
        long pinmux_output_selector =
            __metal_driver_sifive_uart0_pinmux_output_selector(guart);
200172b2:	fcc42503          	lw	a0,-52(s0)
200172b6:	a47ff0ef          	jal	ra,20016cfc <__metal_driver_sifive_uart0_pinmux_output_selector>
200172ba:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:210
        long pinmux_output_selector =
200172bc:	fef42023          	sw	a5,-32(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:213
        long pinmux_source_selector =
            __metal_driver_sifive_uart0_pinmux_source_selector(guart);
200172c0:	fcc42503          	lw	a0,-52(s0)
200172c4:	a75ff0ef          	jal	ra,20016d38 <__metal_driver_sifive_uart0_pinmux_source_selector>
200172c8:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:212
        long pinmux_source_selector =
200172ca:	fcf42e23          	sw	a5,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:214
        pinmux->gpio.vtable->enable_io((struct metal_gpio *)pinmux,
200172ce:	fe442783          	lw	a5,-28(s0)
200172d2:	439c                	lw	a5,0(a5)
200172d4:	53dc                	lw	a5,36(a5)
200172d6:	fdc42603          	lw	a2,-36(s0)
200172da:	fe042583          	lw	a1,-32(s0)
200172de:	fe442503          	lw	a0,-28(s0)
200172e2:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/sifive_uart0.c:218
                                       pinmux_output_selector,
                                       pinmux_source_selector);
    }
}
200172e4:	0001                	nop
200172e6:	50f2                	lw	ra,60(sp)
200172e8:	5462                	lw	s0,56(sp)
200172ea:	6121                	addi	sp,sp,64
200172ec:	8082                	ret

200172ee <_metal_clock_call_all_callbacks>:
_metal_clock_call_all_callbacks():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:50

/*!
 * @brief Call all callbacks in the linked list, if any are registered
 */
__inline__ void
_metal_clock_call_all_callbacks(const metal_clock_callback *const list) {
200172ee:	7179                	addi	sp,sp,-48
200172f0:	d606                	sw	ra,44(sp)
200172f2:	d422                	sw	s0,40(sp)
200172f4:	1800                	addi	s0,sp,48
200172f6:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:51
    const metal_clock_callback *current = list;
200172fa:	fdc42783          	lw	a5,-36(s0)
200172fe:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:52
    while (current) {
20017302:	a831                	j	2001731e <_metal_clock_call_all_callbacks+0x30>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:53
        current->callback(current->priv);
20017304:	fec42783          	lw	a5,-20(s0)
20017308:	4398                	lw	a4,0(a5)
2001730a:	fec42783          	lw	a5,-20(s0)
2001730e:	43dc                	lw	a5,4(a5)
20017310:	853e                	mv	a0,a5
20017312:	9702                	jalr	a4
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:54
        current = current->_next;
20017314:	fec42783          	lw	a5,-20(s0)
20017318:	479c                	lw	a5,8(a5)
2001731a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:52
    while (current) {
2001731e:	fec42783          	lw	a5,-20(s0)
20017322:	f3ed                	bnez	a5,20017304 <_metal_clock_call_all_callbacks+0x16>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:56
    }
}
20017324:	0001                	nop
20017326:	50b2                	lw	ra,44(sp)
20017328:	5422                	lw	s0,40(sp)
2001732a:	6145                	addi	sp,sp,48
2001732c:	8082                	ret

2001732e <_metal_clock_append_to_callbacks>:
_metal_clock_append_to_callbacks():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:63
/*!
 * @brief Append a callback to the linked list and return the head of the list
 */
__inline__ metal_clock_callback *
_metal_clock_append_to_callbacks(metal_clock_callback *list,
                                 metal_clock_callback *const cb) {
2001732e:	7179                	addi	sp,sp,-48
20017330:	d622                	sw	s0,44(sp)
20017332:	1800                	addi	s0,sp,48
20017334:	fca42e23          	sw	a0,-36(s0)
20017338:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:64
    cb->_next = NULL;
2001733c:	fd842783          	lw	a5,-40(s0)
20017340:	0007a423          	sw	zero,8(a5) # 10008 <__heap_size+0xf808>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:66

    if (!list) {
20017344:	fdc42783          	lw	a5,-36(s0)
20017348:	e781                	bnez	a5,20017350 <_metal_clock_append_to_callbacks+0x22>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:67
        return cb;
2001734a:	fd842783          	lw	a5,-40(s0)
2001734e:	a035                	j	2001737a <_metal_clock_append_to_callbacks+0x4c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:70
    }

    metal_clock_callback *current = list;
20017350:	fdc42783          	lw	a5,-36(s0)
20017354:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:72

    while ((current->_next) != NULL) {
20017358:	a031                	j	20017364 <_metal_clock_append_to_callbacks+0x36>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:73
        current = current->_next;
2001735a:	fec42783          	lw	a5,-20(s0)
2001735e:	479c                	lw	a5,8(a5)
20017360:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:72
    while ((current->_next) != NULL) {
20017364:	fec42783          	lw	a5,-20(s0)
20017368:	479c                	lw	a5,8(a5)
2001736a:	fbe5                	bnez	a5,2001735a <_metal_clock_append_to_callbacks+0x2c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:76
    }

    current->_next = cb;
2001736c:	fec42783          	lw	a5,-20(s0)
20017370:	fd842703          	lw	a4,-40(s0)
20017374:	c798                	sw	a4,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:78

    return list;
20017376:	fdc42783          	lw	a5,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:79
}
2001737a:	853e                	mv	a0,a5
2001737c:	5432                	lw	s0,44(sp)
2001737e:	6145                	addi	sp,sp,48
20017380:	8082                	ret

20017382 <metal_clock_get_rate_hz>:
metal_clock_get_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:110
 * @brief Returns the current rate of the given clock
 *
 * @param clk The handle for the clock
 * @return The current rate of the clock in Hz
 */
__inline__ long metal_clock_get_rate_hz(const struct metal_clock *clk) {
20017382:	1101                	addi	sp,sp,-32
20017384:	ce06                	sw	ra,28(sp)
20017386:	cc22                	sw	s0,24(sp)
20017388:	1000                	addi	s0,sp,32
2001738a:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:111
    return clk->vtable->get_rate_hz(clk);
2001738e:	fec42783          	lw	a5,-20(s0)
20017392:	439c                	lw	a5,0(a5)
20017394:	439c                	lw	a5,0(a5)
20017396:	fec42503          	lw	a0,-20(s0)
2001739a:	9782                	jalr	a5
2001739c:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:112
}
2001739e:	853e                	mv	a0,a5
200173a0:	40f2                	lw	ra,28(sp)
200173a2:	4462                	lw	s0,24(sp)
200173a4:	6105                	addi	sp,sp,32
200173a6:	8082                	ret

200173a8 <metal_clock_set_rate_hz>:
metal_clock_set_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:128
 * could be anything!
 *
 * Prior to and after the rate change of the clock, this will call the
 * registered pre- and post-rate change callbacks.
 */
__inline__ long metal_clock_set_rate_hz(struct metal_clock *clk, long hz) {
200173a8:	7179                	addi	sp,sp,-48
200173aa:	d606                	sw	ra,44(sp)
200173ac:	d422                	sw	s0,40(sp)
200173ae:	1800                	addi	s0,sp,48
200173b0:	fca42e23          	sw	a0,-36(s0)
200173b4:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:129
    _metal_clock_call_all_callbacks(clk->_pre_rate_change_callback);
200173b8:	fdc42783          	lw	a5,-36(s0)
200173bc:	43dc                	lw	a5,4(a5)
200173be:	853e                	mv	a0,a5
200173c0:	f2fff0ef          	jal	ra,200172ee <_metal_clock_call_all_callbacks>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:131

    long out = clk->vtable->set_rate_hz(clk, hz);
200173c4:	fdc42783          	lw	a5,-36(s0)
200173c8:	439c                	lw	a5,0(a5)
200173ca:	43dc                	lw	a5,4(a5)
200173cc:	fd842583          	lw	a1,-40(s0)
200173d0:	fdc42503          	lw	a0,-36(s0)
200173d4:	9782                	jalr	a5
200173d6:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:133

    _metal_clock_call_all_callbacks(clk->_post_rate_change_callback);
200173da:	fdc42783          	lw	a5,-36(s0)
200173de:	479c                	lw	a5,8(a5)
200173e0:	853e                	mv	a0,a5
200173e2:	f0dff0ef          	jal	ra,200172ee <_metal_clock_call_all_callbacks>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:135

    return out;
200173e6:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:136
}
200173ea:	853e                	mv	a0,a5
200173ec:	50b2                	lw	ra,44(sp)
200173ee:	5422                	lw	s0,40(sp)
200173f0:	6145                	addi	sp,sp,48
200173f2:	8082                	ret

200173f4 <metal_clock_register_pre_rate_change_callback>:
metal_clock_register_pre_rate_change_callback():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:146
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_pre_rate_change_callback(struct metal_clock *clk,
                                              metal_clock_callback *cb) {
200173f4:	1101                	addi	sp,sp,-32
200173f6:	ce06                	sw	ra,28(sp)
200173f8:	cc22                	sw	s0,24(sp)
200173fa:	1000                	addi	s0,sp,32
200173fc:	fea42623          	sw	a0,-20(s0)
20017400:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:148
    clk->_pre_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_pre_rate_change_callback, cb);
20017404:	fec42783          	lw	a5,-20(s0)
20017408:	43dc                	lw	a5,4(a5)
2001740a:	fe842583          	lw	a1,-24(s0)
2001740e:	853e                	mv	a0,a5
20017410:	f1fff0ef          	jal	ra,2001732e <_metal_clock_append_to_callbacks>
20017414:	872a                	mv	a4,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:147
    clk->_pre_rate_change_callback =
20017416:	fec42783          	lw	a5,-20(s0)
2001741a:	c3d8                	sw	a4,4(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:149
}
2001741c:	0001                	nop
2001741e:	40f2                	lw	ra,28(sp)
20017420:	4462                	lw	s0,24(sp)
20017422:	6105                	addi	sp,sp,32
20017424:	8082                	ret

20017426 <metal_clock_register_post_rate_change_callback>:
metal_clock_register_post_rate_change_callback():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:159
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_post_rate_change_callback(struct metal_clock *clk,
                                               metal_clock_callback *cb) {
20017426:	1101                	addi	sp,sp,-32
20017428:	ce06                	sw	ra,28(sp)
2001742a:	cc22                	sw	s0,24(sp)
2001742c:	1000                	addi	s0,sp,32
2001742e:	fea42623          	sw	a0,-20(s0)
20017432:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:161
    clk->_post_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_post_rate_change_callback, cb);
20017436:	fec42783          	lw	a5,-20(s0)
2001743a:	479c                	lw	a5,8(a5)
2001743c:	fe842583          	lw	a1,-24(s0)
20017440:	853e                	mv	a0,a5
20017442:	eedff0ef          	jal	ra,2001732e <_metal_clock_append_to_callbacks>
20017446:	872a                	mv	a4,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:160
    clk->_post_rate_change_callback =
20017448:	fec42783          	lw	a5,-20(s0)
2001744c:	c798                	sw	a4,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/clock.h:162
}
2001744e:	0001                	nop
20017450:	40f2                	lw	ra,28(sp)
20017452:	4462                	lw	s0,24(sp)
20017454:	6105                	addi	sp,sp,32
20017456:	8082                	ret

20017458 <metal_cpu_get_timer>:
metal_cpu_get_timer():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:73
 * Get the value of the cycle count timer for a given CPU
 *
 * @param cpu The CPU device handle
 * @return The value of the CPU cycle count timer
 */
__inline__ unsigned long long metal_cpu_get_timer(struct metal_cpu *cpu) {
20017458:	1101                	addi	sp,sp,-32
2001745a:	ce06                	sw	ra,28(sp)
2001745c:	cc22                	sw	s0,24(sp)
2001745e:	1000                	addi	s0,sp,32
20017460:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:74
    return cpu->vtable->mcycle_get(cpu);
20017464:	fec42783          	lw	a5,-20(s0)
20017468:	439c                	lw	a5,0(a5)
2001746a:	439c                	lw	a5,0(a5)
2001746c:	fec42503          	lw	a0,-20(s0)
20017470:	9782                	jalr	a5
20017472:	87aa                	mv	a5,a0
20017474:	882e                	mv	a6,a1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:75
}
20017476:	853e                	mv	a0,a5
20017478:	85c2                	mv	a1,a6
2001747a:	40f2                	lw	ra,28(sp)
2001747c:	4462                	lw	s0,24(sp)
2001747e:	6105                	addi	sp,sp,32
20017480:	8082                	ret

20017482 <metal_cpu_get_timebase>:
metal_cpu_get_timebase():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:84
 * Get the value of the timebase of the cycle count timer
 *
 * @param cpu The CPU device handle
 * @return The value of the cycle count timer timebase
 */
__inline__ unsigned long long metal_cpu_get_timebase(struct metal_cpu *cpu) {
20017482:	1101                	addi	sp,sp,-32
20017484:	ce06                	sw	ra,28(sp)
20017486:	cc22                	sw	s0,24(sp)
20017488:	1000                	addi	s0,sp,32
2001748a:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:85
    return cpu->vtable->timebase_get(cpu);
2001748e:	fec42783          	lw	a5,-20(s0)
20017492:	439c                	lw	a5,0(a5)
20017494:	43dc                	lw	a5,4(a5)
20017496:	fec42503          	lw	a0,-20(s0)
2001749a:	9782                	jalr	a5
2001749c:	87aa                	mv	a5,a0
2001749e:	882e                	mv	a6,a1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:86
}
200174a0:	853e                	mv	a0,a5
200174a2:	85c2                	mv	a1,a6
200174a4:	40f2                	lw	ra,28(sp)
200174a6:	4462                	lw	s0,24(sp)
200174a8:	6105                	addi	sp,sp,32
200174aa:	8082                	ret

200174ac <metal_cpu_interrupt_controller>:
metal_cpu_interrupt_controller():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:224
 *
 * @param cpu The CPU device handle
 * @return The handle for the CPU interrupt controller
 */
__inline__ struct metal_interrupt *
metal_cpu_interrupt_controller(struct metal_cpu *cpu) {
200174ac:	1101                	addi	sp,sp,-32
200174ae:	ce06                	sw	ra,28(sp)
200174b0:	cc22                	sw	s0,24(sp)
200174b2:	1000                	addi	s0,sp,32
200174b4:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:225
    return cpu->vtable->controller_interrupt(cpu);
200174b8:	fec42783          	lw	a5,-20(s0)
200174bc:	439c                	lw	a5,0(a5)
200174be:	57dc                	lw	a5,44(a5)
200174c0:	fec42503          	lw	a0,-20(s0)
200174c4:	9782                	jalr	a5
200174c6:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/cpu.h:226
}
200174c8:	853e                	mv	a0,a5
200174ca:	40f2                	lw	ra,28(sp)
200174cc:	4462                	lw	s0,24(sp)
200174ce:	6105                	addi	sp,sp,32
200174d0:	8082                	ret

200174d2 <metal_cpu_get>:
metal_cpu_get():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:7
/* SPDX-License-Identifier: Apache-2.0 */

#include <metal/cpu.h>
#include <metal/machine.h>

struct metal_cpu *metal_cpu_get(unsigned int hartid) {
200174d2:	1101                	addi	sp,sp,-32
200174d4:	ce22                	sw	s0,28(sp)
200174d6:	1000                	addi	s0,sp,32
200174d8:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:8
    if (hartid < __METAL_DT_MAX_HARTS) {
200174dc:	fec42783          	lw	a5,-20(s0)
200174e0:	eb99                	bnez	a5,200174f6 <metal_cpu_get+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:9
        return (struct metal_cpu *)__metal_cpu_table[hartid];
200174e2:	800017b7          	lui	a5,0x80001
200174e6:	fec42703          	lw	a4,-20(s0)
200174ea:	070a                	slli	a4,a4,0x2
200174ec:	ac078793          	addi	a5,a5,-1344 # 80000ac0 <metal_segment_heap_target_end+0xfffff300>
200174f0:	97ba                	add	a5,a5,a4
200174f2:	439c                	lw	a5,0(a5)
200174f4:	a011                	j	200174f8 <metal_cpu_get+0x26>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:11
    }
    return NULL;
200174f6:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:12
}
200174f8:	853e                	mv	a0,a5
200174fa:	4472                	lw	s0,28(sp)
200174fc:	6105                	addi	sp,sp,32
200174fe:	8082                	ret

20017500 <metal_cpu_get_current_hartid>:
metal_cpu_get_current_hartid():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:14

int metal_cpu_get_current_hartid() {
20017500:	1101                	addi	sp,sp,-32
20017502:	ce22                	sw	s0,28(sp)
20017504:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:17
#ifdef __riscv
    int mhartid;
    __asm__ volatile("csrr %0, mhartid" : "=r"(mhartid));
20017506:	f14027f3          	csrr	a5,mhartid
2001750a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:18
    return mhartid;
2001750e:	fec42783          	lw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/cpu.c:20
#endif
}
20017512:	853e                	mv	a0,a5
20017514:	4472                	lw	s0,28(sp)
20017516:	6105                	addi	sp,sp,32
20017518:	8082                	ret

2001751a <metal_i2c_init>:
metal_i2c_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:48
 * @param i2c The handle for the I2C device to initialize.
 * @param baud_rate The baud rate for the I2C device to operate at.
 * @param mode I2C operation mode.
 */
inline void metal_i2c_init(struct metal_i2c *i2c, unsigned int baud_rate,
                           metal_i2c_mode_t mode) {
2001751a:	1101                	addi	sp,sp,-32
2001751c:	ce06                	sw	ra,28(sp)
2001751e:	cc22                	sw	s0,24(sp)
20017520:	1000                	addi	s0,sp,32
20017522:	fea42623          	sw	a0,-20(s0)
20017526:	feb42423          	sw	a1,-24(s0)
2001752a:	fec42223          	sw	a2,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:49
    i2c->vtable->init(i2c, baud_rate, mode);
2001752e:	fec42783          	lw	a5,-20(s0)
20017532:	439c                	lw	a5,0(a5)
20017534:	439c                	lw	a5,0(a5)
20017536:	fe442603          	lw	a2,-28(s0)
2001753a:	fe842583          	lw	a1,-24(s0)
2001753e:	fec42503          	lw	a0,-20(s0)
20017542:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:50
}
20017544:	0001                	nop
20017546:	40f2                	lw	ra,28(sp)
20017548:	4462                	lw	s0,24(sp)
2001754a:	6105                	addi	sp,sp,32
2001754c:	8082                	ret

2001754e <metal_i2c_write>:
metal_i2c_write():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:62
 * @param stop_bit Enable / Disable STOP condition.
 * @return 0 if the write succeeds.
 */
inline int metal_i2c_write(struct metal_i2c *i2c, unsigned int addr,
                           unsigned int len, unsigned char buf[],
                           metal_i2c_stop_bit_t stop_bit) {
2001754e:	7179                	addi	sp,sp,-48
20017550:	d606                	sw	ra,44(sp)
20017552:	d422                	sw	s0,40(sp)
20017554:	1800                	addi	s0,sp,48
20017556:	fea42623          	sw	a0,-20(s0)
2001755a:	feb42423          	sw	a1,-24(s0)
2001755e:	fec42223          	sw	a2,-28(s0)
20017562:	fed42023          	sw	a3,-32(s0)
20017566:	fce42e23          	sw	a4,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:63
    return i2c->vtable->write(i2c, addr, len, buf, stop_bit);
2001756a:	fec42783          	lw	a5,-20(s0)
2001756e:	439c                	lw	a5,0(a5)
20017570:	43dc                	lw	a5,4(a5)
20017572:	fdc42703          	lw	a4,-36(s0)
20017576:	fe042683          	lw	a3,-32(s0)
2001757a:	fe442603          	lw	a2,-28(s0)
2001757e:	fe842583          	lw	a1,-24(s0)
20017582:	fec42503          	lw	a0,-20(s0)
20017586:	9782                	jalr	a5
20017588:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:64
}
2001758a:	853e                	mv	a0,a5
2001758c:	50b2                	lw	ra,44(sp)
2001758e:	5422                	lw	s0,40(sp)
20017590:	6145                	addi	sp,sp,48
20017592:	8082                	ret

20017594 <metal_i2c_read>:
metal_i2c_read():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:76
 * @param stop_bit Enable / Disable STOP condition.
 * @return 0 if the read succeeds.
 */
inline int metal_i2c_read(struct metal_i2c *i2c, unsigned int addr,
                          unsigned int len, unsigned char buf[],
                          metal_i2c_stop_bit_t stop_bit) {
20017594:	7179                	addi	sp,sp,-48
20017596:	d606                	sw	ra,44(sp)
20017598:	d422                	sw	s0,40(sp)
2001759a:	1800                	addi	s0,sp,48
2001759c:	fea42623          	sw	a0,-20(s0)
200175a0:	feb42423          	sw	a1,-24(s0)
200175a4:	fec42223          	sw	a2,-28(s0)
200175a8:	fed42023          	sw	a3,-32(s0)
200175ac:	fce42e23          	sw	a4,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:77
    return i2c->vtable->read(i2c, addr, len, buf, stop_bit);
200175b0:	fec42783          	lw	a5,-20(s0)
200175b4:	439c                	lw	a5,0(a5)
200175b6:	479c                	lw	a5,8(a5)
200175b8:	fdc42703          	lw	a4,-36(s0)
200175bc:	fe042683          	lw	a3,-32(s0)
200175c0:	fe442603          	lw	a2,-28(s0)
200175c4:	fe842583          	lw	a1,-24(s0)
200175c8:	fec42503          	lw	a0,-20(s0)
200175cc:	9782                	jalr	a5
200175ce:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:78
}
200175d0:	853e                	mv	a0,a5
200175d2:	50b2                	lw	ra,44(sp)
200175d4:	5422                	lw	s0,40(sp)
200175d6:	6145                	addi	sp,sp,48
200175d8:	8082                	ret

200175da <metal_i2c_set_baud_rate>:
metal_i2c_set_baud_rate():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:108
/*! @brief Set the current baud rate of the I2C device.
 * @param i2c The handle for the I2C device.
 * @param baud_rate The desired baud rate of the I2C device.
 * @return 0 If the baud rate is successfully changed.
 */
inline int metal_i2c_set_baud_rate(struct metal_i2c *i2c, int baud_rate) {
200175da:	1101                	addi	sp,sp,-32
200175dc:	ce06                	sw	ra,28(sp)
200175de:	cc22                	sw	s0,24(sp)
200175e0:	1000                	addi	s0,sp,32
200175e2:	fea42623          	sw	a0,-20(s0)
200175e6:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:109
    return i2c->vtable->set_baud_rate(i2c, baud_rate);
200175ea:	fec42783          	lw	a5,-20(s0)
200175ee:	439c                	lw	a5,0(a5)
200175f0:	4bd8                	lw	a4,20(a5)
200175f2:	fe842783          	lw	a5,-24(s0)
200175f6:	85be                	mv	a1,a5
200175f8:	fec42503          	lw	a0,-20(s0)
200175fc:	9702                	jalr	a4
200175fe:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/i2c.h:110
}
20017600:	853e                	mv	a0,a5
20017602:	40f2                	lw	ra,28(sp)
20017604:	4462                	lw	s0,24(sp)
20017606:	6105                	addi	sp,sp,32
20017608:	8082                	ret

2001760a <metal_i2c_get_device>:
metal_i2c_get_device():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/i2c.c:21
                                     unsigned char txbuf[], unsigned int txlen,
                                     unsigned char rxbuf[], unsigned int rxlen);
extern inline int metal_i2c_get_baud_rate(struct metal_i2c *i2c);
extern inline int metal_i2c_set_baud_rate(struct metal_i2c *i2c, int baud_rate);

struct metal_i2c *metal_i2c_get_device(unsigned int device_num) {
2001760a:	1101                	addi	sp,sp,-32
2001760c:	ce22                	sw	s0,28(sp)
2001760e:	1000                	addi	s0,sp,32
20017610:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/i2c.c:23
#if __METAL_DT_MAX_I2CS > 0
    if (device_num < __METAL_DT_MAX_I2CS) {
20017614:	fec42783          	lw	a5,-20(s0)
20017618:	eb99                	bnez	a5,2001762e <metal_i2c_get_device+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/i2c.c:24
        return (struct metal_i2c *)__metal_i2c_table[device_num];
2001761a:	800017b7          	lui	a5,0x80001
2001761e:	fec42703          	lw	a4,-20(s0)
20017622:	070a                	slli	a4,a4,0x2
20017624:	ac478793          	addi	a5,a5,-1340 # 80000ac4 <metal_segment_heap_target_end+0xfffff304>
20017628:	97ba                	add	a5,a5,a4
2001762a:	439c                	lw	a5,0(a5)
2001762c:	a011                	j	20017630 <metal_i2c_get_device+0x26>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/i2c.c:27
    }
#endif
    return NULL;
2001762e:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/i2c.c:28
}
20017630:	853e                	mv	a0,a5
20017632:	4472                	lw	s0,28(sp)
20017634:	6105                	addi	sp,sp,32
20017636:	8082                	ret

20017638 <metal_shutdown>:
metal_shutdown():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/shutdown.c:17
    __metal_shutdown_exit(__METAL_DT_SHUTDOWN_HANDLE, code);
}
#else
#pragma message(                                                               \
    "There is no defined shutdown mechanism, metal_shutdown() will spin.")
void metal_shutdown(int code) {
20017638:	1101                	addi	sp,sp,-32
2001763a:	ce22                	sw	s0,28(sp)
2001763c:	1000                	addi	s0,sp,32
2001763e:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/shutdown.c:19 (discriminator 1)
    while (1) {
        __asm__ volatile("nop");
20017642:	0001                	nop
20017644:	bffd                	j	20017642 <metal_shutdown+0xa>

20017646 <metal_gettimeofday>:
metal_gettimeofday():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:9
#include <metal/time.h>
#include <metal/timer.h>

#include <stddef.h>

int metal_gettimeofday(struct timeval *tp, void *tzp) {
20017646:	7139                	addi	sp,sp,-64
20017648:	de06                	sw	ra,60(sp)
2001764a:	dc22                	sw	s0,56(sp)
2001764c:	da4a                	sw	s2,52(sp)
2001764e:	d84e                	sw	s3,48(sp)
20017650:	0080                	addi	s0,sp,64
20017652:	fca42623          	sw	a0,-52(s0)
20017656:	fcb42423          	sw	a1,-56(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:12
    int rv;
    unsigned long long mcc, timebase;
    rv = metal_timer_get_cyclecount(0, &mcc);
2001765a:	fe040793          	addi	a5,s0,-32
2001765e:	85be                	mv	a1,a5
20017660:	4501                	li	a0,0
20017662:	2cc9                	jal	20017934 <metal_timer_get_cyclecount>
20017664:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:13
    if (rv != 0) {
20017668:	fec42783          	lw	a5,-20(s0)
2001766c:	c399                	beqz	a5,20017672 <metal_gettimeofday+0x2c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:14
        return -1;
2001766e:	57fd                	li	a5,-1
20017670:	a07d                	j	2001771e <metal_gettimeofday+0xd8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:16
    }
    rv = metal_timer_get_timebase_frequency(0, &timebase);
20017672:	fd840793          	addi	a5,s0,-40
20017676:	85be                	mv	a1,a5
20017678:	4501                	li	a0,0
2001767a:	2611                	jal	2001797e <metal_timer_get_timebase_frequency>
2001767c:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:17
    if (rv != 0) {
20017680:	fec42783          	lw	a5,-20(s0)
20017684:	c399                	beqz	a5,2001768a <metal_gettimeofday+0x44>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:18
        return -1;
20017686:	57fd                	li	a5,-1
20017688:	a859                	j	2001771e <metal_gettimeofday+0xd8>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:20
    }
    tp->tv_sec = mcc / timebase;
2001768a:	fe042783          	lw	a5,-32(s0)
2001768e:	fe442803          	lw	a6,-28(s0)
20017692:	fd842683          	lw	a3,-40(s0)
20017696:	fdc42703          	lw	a4,-36(s0)
2001769a:	8636                	mv	a2,a3
2001769c:	86ba                	mv	a3,a4
2001769e:	853e                	mv	a0,a5
200176a0:	85c2                	mv	a1,a6
200176a2:	25f5                	jal	20017d8e <__udivdi3>
200176a4:	87aa                	mv	a5,a0
200176a6:	882e                	mv	a6,a1
200176a8:	fcc42703          	lw	a4,-52(s0)
200176ac:	c31c                	sw	a5,0(a4)
200176ae:	01072223          	sw	a6,4(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:21
    tp->tv_usec = mcc % timebase * 1000000 / timebase;
200176b2:	fe042783          	lw	a5,-32(s0)
200176b6:	fe442803          	lw	a6,-28(s0)
200176ba:	fd842683          	lw	a3,-40(s0)
200176be:	fdc42703          	lw	a4,-36(s0)
200176c2:	8636                	mv	a2,a3
200176c4:	86ba                	mv	a3,a4
200176c6:	853e                	mv	a0,a5
200176c8:	85c2                	mv	a1,a6
200176ca:	223000ef          	jal	ra,200180ec <__umoddi3>
200176ce:	87aa                	mv	a5,a0
200176d0:	882e                	mv	a6,a1
200176d2:	000f4737          	lui	a4,0xf4
200176d6:	24070713          	addi	a4,a4,576 # f4240 <__heap_size+0xf3a40>
200176da:	02e806b3          	mul	a3,a6,a4
200176de:	4701                	li	a4,0
200176e0:	02e78733          	mul	a4,a5,a4
200176e4:	96ba                	add	a3,a3,a4
200176e6:	000f4737          	lui	a4,0xf4
200176ea:	24070713          	addi	a4,a4,576 # f4240 <__heap_size+0xf3a40>
200176ee:	02e78633          	mul	a2,a5,a4
200176f2:	02e7b9b3          	mulhu	s3,a5,a4
200176f6:	8932                	mv	s2,a2
200176f8:	013687b3          	add	a5,a3,s3
200176fc:	89be                	mv	s3,a5
200176fe:	fd842783          	lw	a5,-40(s0)
20017702:	fdc42803          	lw	a6,-36(s0)
20017706:	863e                	mv	a2,a5
20017708:	86c2                	mv	a3,a6
2001770a:	854a                	mv	a0,s2
2001770c:	85ce                	mv	a1,s3
2001770e:	2541                	jal	20017d8e <__udivdi3>
20017710:	87aa                	mv	a5,a0
20017712:	882e                	mv	a6,a1
20017714:	873e                	mv	a4,a5
20017716:	fcc42783          	lw	a5,-52(s0)
2001771a:	c798                	sw	a4,8(a5)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:22
    return 0;
2001771c:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:23 (discriminator 1)
}
2001771e:	853e                	mv	a0,a5
20017720:	50f2                	lw	ra,60(sp)
20017722:	5462                	lw	s0,56(sp)
20017724:	5952                	lw	s2,52(sp)
20017726:	59c2                	lw	s3,48(sp)
20017728:	6121                	addi	sp,sp,64
2001772a:	8082                	ret

2001772c <metal_time>:
metal_time():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:25

time_t metal_time(void) {
2001772c:	1101                	addi	sp,sp,-32
2001772e:	ce06                	sw	ra,28(sp)
20017730:	cc22                	sw	s0,24(sp)
20017732:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:28
    struct timeval now;

    if (metal_gettimeofday(&now, NULL) < 0)
20017734:	fe040793          	addi	a5,s0,-32
20017738:	4581                	li	a1,0
2001773a:	853e                	mv	a0,a5
2001773c:	f0bff0ef          	jal	ra,20017646 <metal_gettimeofday>
20017740:	87aa                	mv	a5,a0
20017742:	0007d863          	bgez	a5,20017752 <metal_time+0x26>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:29
        now.tv_sec = (time_t)-1;
20017746:	57fd                	li	a5,-1
20017748:	587d                	li	a6,-1
2001774a:	fef42023          	sw	a5,-32(s0)
2001774e:	ff042223          	sw	a6,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:31

    return now.tv_sec;
20017752:	fe042783          	lw	a5,-32(s0)
20017756:	fe442803          	lw	a6,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/time.c:32
}
2001775a:	853e                	mv	a0,a5
2001775c:	85c2                	mv	a1,a6
2001775e:	40f2                	lw	ra,28(sp)
20017760:	4462                	lw	s0,24(sp)
20017762:	6105                	addi	sp,sp,32
20017764:	8082                	ret

20017766 <metal_uart_init>:
metal_uart_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:59
 more than once.
 *
 * @param uart The UART device handle
 * @param baud_rate the baud rate to set the UART to
 */
__inline__ void metal_uart_init(struct metal_uart *uart, int baud_rate) {
20017766:	1101                	addi	sp,sp,-32
20017768:	ce06                	sw	ra,28(sp)
2001776a:	cc22                	sw	s0,24(sp)
2001776c:	1000                	addi	s0,sp,32
2001776e:	fea42623          	sw	a0,-20(s0)
20017772:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:60
    uart->vtable->init(uart, baud_rate);
20017776:	fec42783          	lw	a5,-20(s0)
2001777a:	439c                	lw	a5,0(a5)
2001777c:	439c                	lw	a5,0(a5)
2001777e:	fe842583          	lw	a1,-24(s0)
20017782:	fec42503          	lw	a0,-20(s0)
20017786:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:61
}
20017788:	0001                	nop
2001778a:	40f2                	lw	ra,28(sp)
2001778c:	4462                	lw	s0,24(sp)
2001778e:	6105                	addi	sp,sp,32
20017790:	8082                	ret

20017792 <metal_uart_putc>:
metal_uart_putc():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:69
 * @brief Output a character over the UART
 * @param uart The UART device handle
 * @param c The character to send over the UART
 * @return 0 upon success
 */
__inline__ int metal_uart_putc(struct metal_uart *uart, int c) {
20017792:	1101                	addi	sp,sp,-32
20017794:	ce06                	sw	ra,28(sp)
20017796:	cc22                	sw	s0,24(sp)
20017798:	1000                	addi	s0,sp,32
2001779a:	fea42623          	sw	a0,-20(s0)
2001779e:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:70
    return uart->vtable->putc(uart, c);
200177a2:	fec42783          	lw	a5,-20(s0)
200177a6:	439c                	lw	a5,0(a5)
200177a8:	43dc                	lw	a5,4(a5)
200177aa:	fe842583          	lw	a1,-24(s0)
200177ae:	fec42503          	lw	a0,-20(s0)
200177b2:	9782                	jalr	a5
200177b4:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:71
}
200177b6:	853e                	mv	a0,a5
200177b8:	40f2                	lw	ra,28(sp)
200177ba:	4462                	lw	s0,24(sp)
200177bc:	6105                	addi	sp,sp,32
200177be:	8082                	ret

200177c0 <metal_uart_set_baud_rate>:
metal_uart_set_baud_rate():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:111
 * @param uart The UART device handle
 * @param baud_rate The baud rate to configure
 * @return the new baud rate of the UART
 */
__inline__ int metal_uart_set_baud_rate(struct metal_uart *uart,
                                        int baud_rate) {
200177c0:	1101                	addi	sp,sp,-32
200177c2:	ce06                	sw	ra,28(sp)
200177c4:	cc22                	sw	s0,24(sp)
200177c6:	1000                	addi	s0,sp,32
200177c8:	fea42623          	sw	a0,-20(s0)
200177cc:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:112
    return uart->vtable->set_baud_rate(uart, baud_rate);
200177d0:	fec42783          	lw	a5,-20(s0)
200177d4:	439c                	lw	a5,0(a5)
200177d6:	4bdc                	lw	a5,20(a5)
200177d8:	fe842583          	lw	a1,-24(s0)
200177dc:	fec42503          	lw	a0,-20(s0)
200177e0:	9782                	jalr	a5
200177e2:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/metal/uart.h:113
}
200177e4:	853e                	mv	a0,a5
200177e6:	40f2                	lw	ra,28(sp)
200177e8:	4462                	lw	s0,24(sp)
200177ea:	6105                	addi	sp,sp,32
200177ec:	8082                	ret
	...

20017800 <__metal_vector_table>:
IRQ_0():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:96
#endif
.option norvc
.global __metal_vector_table
__metal_vector_table:
IRQ_0:
        j metal_interrupt_vector_handler
20017800:	de0fb06f          	j	20012de0 <metal_interrupt_vector_handler>

20017804 <IRQ_1>:
IRQ_1():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:98
IRQ_1:
        j metal_interrupt_vector_handler
20017804:	ddcfb06f          	j	20012de0 <metal_interrupt_vector_handler>

20017808 <IRQ_2>:
IRQ_2():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:100
IRQ_2:
        j metal_interrupt_vector_handler
20017808:	dd8fb06f          	j	20012de0 <metal_interrupt_vector_handler>

2001780c <IRQ_3>:
IRQ_3():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:102
IRQ_3:
        j metal_software_interrupt_vector_handler
2001780c:	e02fb06f          	j	20012e0e <metal_software_interrupt_vector_handler>

20017810 <IRQ_4>:
IRQ_4():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:104
IRQ_4:
        j metal_interrupt_vector_handler
20017810:	dd0fb06f          	j	20012de0 <metal_interrupt_vector_handler>

20017814 <IRQ_5>:
IRQ_5():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:106
IRQ_5:
        j metal_interrupt_vector_handler
20017814:	dccfb06f          	j	20012de0 <metal_interrupt_vector_handler>

20017818 <IRQ_6>:
IRQ_6():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:108
IRQ_6:
        j metal_interrupt_vector_handler
20017818:	dc8fb06f          	j	20012de0 <metal_interrupt_vector_handler>

2001781c <IRQ_7>:
IRQ_7():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:110
IRQ_7:
        j metal_timer_interrupt_vector_handler
2001781c:	eecfb06f          	j	20012f08 <metal_timer_interrupt_vector_handler>

20017820 <IRQ_8>:
IRQ_8():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:112
IRQ_8:
        j metal_interrupt_vector_handler
20017820:	dc0fb06f          	j	20012de0 <metal_interrupt_vector_handler>

20017824 <IRQ_9>:
IRQ_9():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:114
IRQ_9:
        j metal_interrupt_vector_handler
20017824:	dbcfb06f          	j	20012de0 <metal_interrupt_vector_handler>

20017828 <IRQ_10>:
IRQ_10():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:116
IRQ_10:
        j metal_interrupt_vector_handler
20017828:	db8fb06f          	j	20012de0 <metal_interrupt_vector_handler>

2001782c <IRQ_11>:
IRQ_11():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:118
IRQ_11:
        j metal_interrupt_vector_handler
2001782c:	db4fb06f          	j	20012de0 <metal_interrupt_vector_handler>

20017830 <IRQ_12>:
IRQ_12():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:120
IRQ_12:
        j metal_interrupt_vector_handler
20017830:	db0fb06f          	j	20012de0 <metal_interrupt_vector_handler>

20017834 <IRQ_13>:
IRQ_13():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:122
IRQ_13:
        j metal_interrupt_vector_handler
20017834:	dacfb06f          	j	20012de0 <metal_interrupt_vector_handler>

20017838 <IRQ_14>:
IRQ_14():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:124
IRQ_14:
        j metal_interrupt_vector_handler
20017838:	da8fb06f          	j	20012de0 <metal_interrupt_vector_handler>

2001783c <IRQ_15>:
IRQ_15():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:126
IRQ_15:
        j metal_interrupt_vector_handler
2001783c:	da4fb06f          	j	20012de0 <metal_interrupt_vector_handler>

20017840 <IRQ_LC0>:
IRQ_LC0():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:128
IRQ_LC0:
        j metal_lc0_interrupt_vector_handler
20017840:	a39fb06f          	j	20013278 <metal_lc0_interrupt_vector_handler>

20017844 <IRQ_LC1>:
IRQ_LC1():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:130
IRQ_LC1:
        j metal_lc1_interrupt_vector_handler
20017844:	acbfb06f          	j	2001330e <metal_lc1_interrupt_vector_handler>

20017848 <IRQ_LC2>:
IRQ_LC2():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:132
IRQ_LC2:
        j metal_lc2_interrupt_vector_handler
20017848:	b5dfb06f          	j	200133a4 <metal_lc2_interrupt_vector_handler>

2001784c <IRQ_LC3>:
IRQ_LC3():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:134
IRQ_LC3:
        j metal_lc3_interrupt_vector_handler
2001784c:	beffb06f          	j	2001343a <metal_lc3_interrupt_vector_handler>

20017850 <IRQ_LC4>:
IRQ_LC4():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:136
IRQ_LC4:
        j metal_lc4_interrupt_vector_handler
20017850:	c81fb06f          	j	200134d0 <metal_lc4_interrupt_vector_handler>

20017854 <IRQ_LC5>:
IRQ_LC5():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:138
IRQ_LC5:
        j metal_lc5_interrupt_vector_handler
20017854:	d13fb06f          	j	20013566 <metal_lc5_interrupt_vector_handler>

20017858 <IRQ_LC6>:
IRQ_LC6():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:140
IRQ_LC6:
        j metal_lc6_interrupt_vector_handler
20017858:	da5fb06f          	j	200135fc <metal_lc6_interrupt_vector_handler>

2001785c <IRQ_LC7>:
IRQ_LC7():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:142
IRQ_LC7:
        j metal_lc7_interrupt_vector_handler
2001785c:	e37fb06f          	j	20013692 <metal_lc7_interrupt_vector_handler>

20017860 <IRQ_LC8>:
IRQ_LC8():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:144
IRQ_LC8:
        j metal_lc8_interrupt_vector_handler
20017860:	ec9fb06f          	j	20013728 <metal_lc8_interrupt_vector_handler>

20017864 <IRQ_LC9>:
IRQ_LC9():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:146
IRQ_LC9:
        j metal_lc9_interrupt_vector_handler
20017864:	f5bfb06f          	j	200137be <metal_lc9_interrupt_vector_handler>

20017868 <IRQ_LC10>:
IRQ_LC10():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:148
IRQ_LC10:
        j metal_lc10_interrupt_vector_handler
20017868:	fedfb06f          	j	20013854 <metal_lc10_interrupt_vector_handler>

2001786c <IRQ_LC11>:
IRQ_LC11():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:150
IRQ_LC11:
        j metal_lc11_interrupt_vector_handler
2001786c:	87efc06f          	j	200138ea <metal_lc11_interrupt_vector_handler>

20017870 <IRQ_LC12>:
IRQ_LC12():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:152
IRQ_LC12:
        j metal_lc12_interrupt_vector_handler
20017870:	910fc06f          	j	20013980 <metal_lc12_interrupt_vector_handler>

20017874 <IRQ_LC13>:
IRQ_LC13():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:154
IRQ_LC13:
        j metal_lc13_interrupt_vector_handler
20017874:	9a2fc06f          	j	20013a16 <metal_lc13_interrupt_vector_handler>

20017878 <IRQ_LC14>:
IRQ_LC14():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:156
IRQ_LC14:
        j metal_lc14_interrupt_vector_handler
20017878:	a34fc06f          	j	20013aac <metal_lc14_interrupt_vector_handler>

2001787c <IRQ_LC15>:
IRQ_LC15():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/vector.S:158
IRQ_LC15:
        j metal_lc15_interrupt_vector_handler
2001787c:	ac6fc06f          	j	20013b42 <metal_lc15_interrupt_vector_handler>

20017880 <__metal_driver_fixed_clock_rate>:
__metal_driver_fixed_clock_rate():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:208
{
20017880:	1101                	addi	sp,sp,-32
20017882:	ce22                	sw	s0,28(sp)
20017884:	1000                	addi	s0,sp,32
20017886:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:209
	if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_0) {
2001788a:	fec42703          	lw	a4,-20(s0)
2001788e:	800007b7          	lui	a5,0x80000
20017892:	06078793          	addi	a5,a5,96 # 80000060 <metal_segment_heap_target_end+0xffffe8a0>
20017896:	00f71763          	bne	a4,a5,200178a4 <__metal_driver_fixed_clock_rate+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:210
		return METAL_FIXED_CLOCK_0_CLOCK_FREQUENCY;
2001789a:	00f427b7          	lui	a5,0xf42
2001789e:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
200178a2:	a099                	j	200178e8 <__metal_driver_fixed_clock_rate+0x68>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:212
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_2) {
200178a4:	fec42703          	lw	a4,-20(s0)
200178a8:	800007b7          	lui	a5,0x80000
200178ac:	06c78793          	addi	a5,a5,108 # 8000006c <metal_segment_heap_target_end+0xffffe8ac>
200178b0:	00f71763          	bne	a4,a5,200178be <__metal_driver_fixed_clock_rate+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:213
		return METAL_FIXED_CLOCK_2_CLOCK_FREQUENCY;
200178b4:	044aa7b7          	lui	a5,0x44aa
200178b8:	20078793          	addi	a5,a5,512 # 44aa200 <__heap_size+0x44a9a00>
200178bc:	a035                	j	200178e8 <__metal_driver_fixed_clock_rate+0x68>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:215
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_5) {
200178be:	fec42703          	lw	a4,-20(s0)
200178c2:	800007b7          	lui	a5,0x80000
200178c6:	07878793          	addi	a5,a5,120 # 80000078 <metal_segment_heap_target_end+0xffffe8b8>
200178ca:	00f71463          	bne	a4,a5,200178d2 <__metal_driver_fixed_clock_rate+0x52>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:216
		return METAL_FIXED_CLOCK_5_CLOCK_FREQUENCY;
200178ce:	67a1                	lui	a5,0x8
200178d0:	a821                	j	200178e8 <__metal_driver_fixed_clock_rate+0x68>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:218
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_6) {
200178d2:	fec42703          	lw	a4,-20(s0)
200178d6:	800007b7          	lui	a5,0x80000
200178da:	08478793          	addi	a5,a5,132 # 80000084 <metal_segment_heap_target_end+0xffffe8c4>
200178de:	00f71463          	bne	a4,a5,200178e6 <__metal_driver_fixed_clock_rate+0x66>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:219
		return METAL_FIXED_CLOCK_6_CLOCK_FREQUENCY;
200178e2:	67a1                	lui	a5,0x8
200178e4:	a011                	j	200178e8 <__metal_driver_fixed_clock_rate+0x68>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:222
		return 0;
200178e6:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/bsp/build/debug/./metal/machine.h:224
}
200178e8:	853e                	mv	a0,a5
200178ea:	4472                	lw	s0,28(sp)
200178ec:	6105                	addi	sp,sp,32
200178ee:	8082                	ret

200178f0 <__metal_driver_fixed_clock_get_rate_hz>:
__metal_driver_fixed_clock_get_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/fixed-clock.c:12

#include <metal/drivers/fixed-clock.h>
#include <metal/machine.h>
#include <stddef.h>

long __metal_driver_fixed_clock_get_rate_hz(const struct metal_clock *gclk) {
200178f0:	1101                	addi	sp,sp,-32
200178f2:	ce06                	sw	ra,28(sp)
200178f4:	cc22                	sw	s0,24(sp)
200178f6:	1000                	addi	s0,sp,32
200178f8:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/fixed-clock.c:13
    return __metal_driver_fixed_clock_rate(gclk);
200178fc:	fec42503          	lw	a0,-20(s0)
20017900:	f81ff0ef          	jal	ra,20017880 <__metal_driver_fixed_clock_rate>
20017904:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/fixed-clock.c:14
}
20017906:	853e                	mv	a0,a5
20017908:	40f2                	lw	ra,28(sp)
2001790a:	4462                	lw	s0,24(sp)
2001790c:	6105                	addi	sp,sp,32
2001790e:	8082                	ret

20017910 <__metal_driver_fixed_clock_set_rate_hz>:
__metal_driver_fixed_clock_set_rate_hz():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/fixed-clock.c:17

long __metal_driver_fixed_clock_set_rate_hz(struct metal_clock *gclk,
                                            long target_hz) {
20017910:	1101                	addi	sp,sp,-32
20017912:	ce06                	sw	ra,28(sp)
20017914:	cc22                	sw	s0,24(sp)
20017916:	1000                	addi	s0,sp,32
20017918:	fea42623          	sw	a0,-20(s0)
2001791c:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/fixed-clock.c:18
    return __metal_driver_fixed_clock_get_rate_hz(gclk);
20017920:	fec42503          	lw	a0,-20(s0)
20017924:	fcdff0ef          	jal	ra,200178f0 <__metal_driver_fixed_clock_get_rate_hz>
20017928:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/drivers/fixed-clock.c:19
}
2001792a:	853e                	mv	a0,a5
2001792c:	40f2                	lw	ra,28(sp)
2001792e:	4462                	lw	s0,24(sp)
20017930:	6105                	addi	sp,sp,32
20017932:	8082                	ret

20017934 <metal_timer_get_cyclecount>:
metal_timer_get_cyclecount():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:15
#endif

#if defined(__METAL_DT_MAX_HARTS)
/* This implementation serves as a small shim that interfaces with the first
 * timer on a system. */
int metal_timer_get_cyclecount(int hartid, unsigned long long *mcc) {
20017934:	7179                	addi	sp,sp,-48
20017936:	d606                	sw	ra,44(sp)
20017938:	d422                	sw	s0,40(sp)
2001793a:	1800                	addi	s0,sp,48
2001793c:	fca42e23          	sw	a0,-36(s0)
20017940:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:16
    struct metal_cpu *cpu = metal_cpu_get(hartid);
20017944:	fdc42783          	lw	a5,-36(s0)
20017948:	853e                	mv	a0,a5
2001794a:	b89ff0ef          	jal	ra,200174d2 <metal_cpu_get>
2001794e:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:18

    if (cpu) {
20017952:	fec42783          	lw	a5,-20(s0)
20017956:	cf91                	beqz	a5,20017972 <metal_timer_get_cyclecount+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:19
        *mcc = metal_cpu_get_timer(cpu);
20017958:	fec42503          	lw	a0,-20(s0)
2001795c:	afdff0ef          	jal	ra,20017458 <metal_cpu_get_timer>
20017960:	87aa                	mv	a5,a0
20017962:	882e                	mv	a6,a1
20017964:	fd842703          	lw	a4,-40(s0)
20017968:	c31c                	sw	a5,0(a4)
2001796a:	01072223          	sw	a6,4(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:20
        return 0;
2001796e:	4781                	li	a5,0
20017970:	a011                	j	20017974 <metal_timer_get_cyclecount+0x40>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:22
    }
    return -1;
20017972:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:23
}
20017974:	853e                	mv	a0,a5
20017976:	50b2                	lw	ra,44(sp)
20017978:	5422                	lw	s0,40(sp)
2001797a:	6145                	addi	sp,sp,48
2001797c:	8082                	ret

2001797e <metal_timer_get_timebase_frequency>:
metal_timer_get_timebase_frequency():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:26

int metal_timer_get_timebase_frequency(int hartid,
                                       unsigned long long *timebase) {
2001797e:	7179                	addi	sp,sp,-48
20017980:	d606                	sw	ra,44(sp)
20017982:	d422                	sw	s0,40(sp)
20017984:	1800                	addi	s0,sp,48
20017986:	fca42e23          	sw	a0,-36(s0)
2001798a:	fcb42c23          	sw	a1,-40(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:27
    struct metal_cpu *cpu = metal_cpu_get(hartid);
2001798e:	fdc42783          	lw	a5,-36(s0)
20017992:	853e                	mv	a0,a5
20017994:	b3fff0ef          	jal	ra,200174d2 <metal_cpu_get>
20017998:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:29

    if (cpu) {
2001799c:	fec42783          	lw	a5,-20(s0)
200179a0:	cf91                	beqz	a5,200179bc <metal_timer_get_timebase_frequency+0x3e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:30
        *timebase = metal_cpu_get_timebase(cpu);
200179a2:	fec42503          	lw	a0,-20(s0)
200179a6:	addff0ef          	jal	ra,20017482 <metal_cpu_get_timebase>
200179aa:	87aa                	mv	a5,a0
200179ac:	882e                	mv	a6,a1
200179ae:	fd842703          	lw	a4,-40(s0)
200179b2:	c31c                	sw	a5,0(a4)
200179b4:	01072223          	sw	a6,4(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:31
        return 0;
200179b8:	4781                	li	a5,0
200179ba:	a011                	j	200179be <metal_timer_get_timebase_frequency+0x40>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:33
    }
    return -1;
200179bc:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/timer.c:34
}
200179be:	853e                	mv	a0,a5
200179c0:	50b2                	lw	ra,44(sp)
200179c2:	5422                	lw	s0,40(sp)
200179c4:	6145                	addi	sp,sp,48
200179c6:	8082                	ret

200179c8 <_close>:
_close():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_close.c:3
#include <errno.h>

int _close(int file) {
200179c8:	1101                	addi	sp,sp,-32
200179ca:	ce06                	sw	ra,28(sp)
200179cc:	cc22                	sw	s0,24(sp)
200179ce:	1000                	addi	s0,sp,32
200179d0:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_close.c:4
    errno = ENOSYS;
200179d4:	2a51                	jal	20017b68 <__errno>
200179d6:	872a                	mv	a4,a0
200179d8:	05800793          	li	a5,88
200179dc:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_close.c:5
    return -1;
200179de:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_close.c:6
}
200179e0:	853e                	mv	a0,a5
200179e2:	40f2                	lw	ra,28(sp)
200179e4:	4462                	lw	s0,24(sp)
200179e6:	6105                	addi	sp,sp,32
200179e8:	8082                	ret

200179ea <_fstat>:
_fstat():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_fstat.c:4
#include <errno.h>
#include <sys/stat.h>

int _fstat(int file, struct stat *st) {
200179ea:	1101                	addi	sp,sp,-32
200179ec:	ce06                	sw	ra,28(sp)
200179ee:	cc22                	sw	s0,24(sp)
200179f0:	1000                	addi	s0,sp,32
200179f2:	fea42623          	sw	a0,-20(s0)
200179f6:	feb42423          	sw	a1,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_fstat.c:5
    errno = -ENOSYS;
200179fa:	22bd                	jal	20017b68 <__errno>
200179fc:	872a                	mv	a4,a0
200179fe:	fa800793          	li	a5,-88
20017a02:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_fstat.c:6
    return -1;
20017a04:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_fstat.c:7
}
20017a06:	853e                	mv	a0,a5
20017a08:	40f2                	lw	ra,28(sp)
20017a0a:	4462                	lw	s0,24(sp)
20017a0c:	6105                	addi	sp,sp,32
20017a0e:	8082                	ret

20017a10 <_isatty>:
_isatty():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_isatty.c:3
#include <unistd.h>

int _isatty(int file) { return (file == STDOUT_FILENO); }
20017a10:	1101                	addi	sp,sp,-32
20017a12:	ce22                	sw	s0,28(sp)
20017a14:	1000                	addi	s0,sp,32
20017a16:	fea42623          	sw	a0,-20(s0)
20017a1a:	fec42783          	lw	a5,-20(s0)
20017a1e:	17fd                	addi	a5,a5,-1
20017a20:	0017b793          	seqz	a5,a5
20017a24:	0ff7f793          	andi	a5,a5,255
20017a28:	853e                	mv	a0,a5
20017a2a:	4472                	lw	s0,28(sp)
20017a2c:	6105                	addi	sp,sp,32
20017a2e:	8082                	ret

20017a30 <_lseek>:
_lseek():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_lseek.c:4
#include <errno.h>
#include <sys/types.h>

off_t _lseek(int file, off_t ptr, int dir) {
20017a30:	1101                	addi	sp,sp,-32
20017a32:	ce06                	sw	ra,28(sp)
20017a34:	cc22                	sw	s0,24(sp)
20017a36:	1000                	addi	s0,sp,32
20017a38:	fea42623          	sw	a0,-20(s0)
20017a3c:	feb42423          	sw	a1,-24(s0)
20017a40:	fec42223          	sw	a2,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_lseek.c:5
    errno = ENOSYS;
20017a44:	2215                	jal	20017b68 <__errno>
20017a46:	872a                	mv	a4,a0
20017a48:	05800793          	li	a5,88
20017a4c:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_lseek.c:6
    return -1;
20017a4e:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_lseek.c:7
}
20017a50:	853e                	mv	a0,a5
20017a52:	40f2                	lw	ra,28(sp)
20017a54:	4462                	lw	s0,24(sp)
20017a56:	6105                	addi	sp,sp,32
20017a58:	8082                	ret

20017a5a <_read>:
_read():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_read.c:4
#include <errno.h>
#include <sys/types.h>

ssize_t _read(int file, void *ptr, size_t len) {
20017a5a:	1101                	addi	sp,sp,-32
20017a5c:	ce06                	sw	ra,28(sp)
20017a5e:	cc22                	sw	s0,24(sp)
20017a60:	1000                	addi	s0,sp,32
20017a62:	fea42623          	sw	a0,-20(s0)
20017a66:	feb42423          	sw	a1,-24(s0)
20017a6a:	fec42223          	sw	a2,-28(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_read.c:5
    errno = ENOSYS;
20017a6e:	28ed                	jal	20017b68 <__errno>
20017a70:	872a                	mv	a4,a0
20017a72:	05800793          	li	a5,88
20017a76:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_read.c:6
    return -1;
20017a78:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_read.c:7
}
20017a7a:	853e                	mv	a0,a5
20017a7c:	40f2                	lw	ra,28(sp)
20017a7e:	4462                	lw	s0,24(sp)
20017a80:	6105                	addi	sp,sp,32
20017a82:	8082                	ret

20017a84 <_sbrk>:
_sbrk():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:24
int _brk(void *addr) {
    __brk = addr;
    return 0;
}

char *_sbrk(ptrdiff_t incr) {
20017a84:	7179                	addi	sp,sp,-48
20017a86:	d606                	sw	ra,44(sp)
20017a88:	d422                	sw	s0,40(sp)
20017a8a:	1800                	addi	s0,sp,48
20017a8c:	fca42e23          	sw	a0,-36(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:25
    char *old = __brk;
20017a90:	8481a783          	lw	a5,-1976(gp) # 80000b08 <__brk>
20017a94:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:28

    /* If __heap_size == 0, we can't allocate memory on the heap */
    if (&metal_segment_heap_target_start == &metal_segment_heap_target_end) {
20017a98:	d0018713          	addi	a4,gp,-768 # 80000fc0 <_sp>
20017a9c:	50018793          	addi	a5,gp,1280 # 800017c0 <metal_segment_heap_target_end>
20017aa0:	00f71463          	bne	a4,a5,20017aa8 <_sbrk+0x24>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:29
        return (void *)-1;
20017aa4:	57fd                	li	a5,-1
20017aa6:	a83d                	j	20017ae4 <_sbrk+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:33
    }

    /* Don't move the break past the end of the heap */
    if ((__brk + incr) < &metal_segment_heap_target_end) {
20017aa8:	8481a703          	lw	a4,-1976(gp) # 80000b08 <__brk>
20017aac:	fdc42783          	lw	a5,-36(s0)
20017ab0:	973e                	add	a4,a4,a5
20017ab2:	50018793          	addi	a5,gp,1280 # 800017c0 <metal_segment_heap_target_end>
20017ab6:	02f77263          	bgeu	a4,a5,20017ada <_sbrk+0x56>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:34
        __brk += incr;
20017aba:	8481a703          	lw	a4,-1976(gp) # 80000b08 <__brk>
20017abe:	fdc42783          	lw	a5,-36(s0)
20017ac2:	973e                	add	a4,a4,a5
20017ac4:	84e1a423          	sw	a4,-1976(gp) # 80000b08 <__brk>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:40
    } else {
        __brk = &metal_segment_heap_target_end;
        return (void *)-1;
    }
    /* Scrub out allocated memory to avoid spurious ECC errors */
    metal_mem_scrub(old, incr);
20017ac8:	fdc42583          	lw	a1,-36(s0)
20017acc:	fec42503          	lw	a0,-20(s0)
20017ad0:	dc2f80ef          	jal	ra,20010092 <metal_mem_scrub>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:42

    return old;
20017ad4:	fec42783          	lw	a5,-20(s0)
20017ad8:	a031                	j	20017ae4 <_sbrk+0x60>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:36
        __brk = &metal_segment_heap_target_end;
20017ada:	50018713          	addi	a4,gp,1280 # 800017c0 <metal_segment_heap_target_end>
20017ade:	84e1a423          	sw	a4,-1976(gp) # 80000b08 <__brk>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:37
        return (void *)-1;
20017ae2:	57fd                	li	a5,-1
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_sbrk.c:43
}
20017ae4:	853e                	mv	a0,a5
20017ae6:	50b2                	lw	ra,44(sp)
20017ae8:	5422                	lw	s0,40(sp)
20017aea:	6145                	addi	sp,sp,48
20017aec:	8082                	ret

20017aee <_write>:
_write():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:7
#include <metal/tty.h>
#include <sys/types.h>
#include <unistd.h>

/* Write to a file.  */
ssize_t _write(int file, const void *ptr, size_t len) {
20017aee:	7179                	addi	sp,sp,-48
20017af0:	d606                	sw	ra,44(sp)
20017af2:	d422                	sw	s0,40(sp)
20017af4:	1800                	addi	s0,sp,48
20017af6:	fca42e23          	sw	a0,-36(s0)
20017afa:	fcb42c23          	sw	a1,-40(s0)
20017afe:	fcc42a23          	sw	a2,-44(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:8
    if (file != STDOUT_FILENO) {
20017b02:	fdc42703          	lw	a4,-36(s0)
20017b06:	4785                	li	a5,1
20017b08:	00f70963          	beq	a4,a5,20017b1a <_write+0x2c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:9
        errno = ENOSYS;
20017b0c:	28b1                	jal	20017b68 <__errno>
20017b0e:	872a                	mv	a4,a0
20017b10:	05800793          	li	a5,88
20017b14:	c31c                	sw	a5,0(a4)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:10
        return -1;
20017b16:	57fd                	li	a5,-1
20017b18:	a835                	j	20017b54 <_write+0x66>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:13
    }

    const char *bptr = ptr;
20017b1a:	fd842783          	lw	a5,-40(s0)
20017b1e:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:14
    for (size_t i = 0; i < len; ++i)
20017b22:	fe042623          	sw	zero,-20(s0)
20017b26:	a005                	j	20017b46 <_write+0x58>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:15 (discriminator 3)
        metal_tty_putc(bptr[i]);
20017b28:	fe842703          	lw	a4,-24(s0)
20017b2c:	fec42783          	lw	a5,-20(s0)
20017b30:	97ba                	add	a5,a5,a4
20017b32:	0007c783          	lbu	a5,0(a5) # 8000 <__heap_size+0x7800>
20017b36:	853e                	mv	a0,a5
20017b38:	223000ef          	jal	ra,2001855a <metal_tty_putc>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:14 (discriminator 3)
    for (size_t i = 0; i < len; ++i)
20017b3c:	fec42783          	lw	a5,-20(s0)
20017b40:	0785                	addi	a5,a5,1
20017b42:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:14 (discriminator 1)
20017b46:	fec42703          	lw	a4,-20(s0)
20017b4a:	fd442783          	lw	a5,-44(s0)
20017b4e:	fcf76de3          	bltu	a4,a5,20017b28 <_write+0x3a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:16
    return 0;
20017b52:	4781                	li	a5,0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_write.c:17
}
20017b54:	853e                	mv	a0,a5
20017b56:	50b2                	lw	ra,44(sp)
20017b58:	5422                	lw	s0,40(sp)
20017b5a:	6145                	addi	sp,sp,48
20017b5c:	8082                	ret

20017b5e <atexit>:
atexit():
20017b5e:	85aa                	mv	a1,a0
20017b60:	4681                	li	a3,0
20017b62:	4601                	li	a2,0
20017b64:	4501                	li	a0,0
20017b66:	a8e1                	j	20017c3e <__register_exitproc>

20017b68 <__errno>:
__errno():
20017b68:	5ffe9797          	auipc	a5,0x5ffe9
20017b6c:	f6078793          	addi	a5,a5,-160 # 80000ac8 <_impure_ptr>
20017b70:	4388                	lw	a0,0(a5)
20017b72:	8082                	ret

20017b74 <exit>:
exit():
20017b74:	1141                	addi	sp,sp,-16
20017b76:	c422                	sw	s0,8(sp)
20017b78:	c606                	sw	ra,12(sp)
20017b7a:	00000797          	auipc	a5,0x0
20017b7e:	14c78793          	addi	a5,a5,332 # 20017cc6 <__call_exitprocs>
20017b82:	842a                	mv	s0,a0
20017b84:	c399                	beqz	a5,20017b8a <exit+0x16>
20017b86:	4581                	li	a1,0
20017b88:	2a3d                	jal	20017cc6 <__call_exitprocs>
20017b8a:	80c18793          	addi	a5,gp,-2036 # 80000acc <_global_impure_ptr>
20017b8e:	4388                	lw	a0,0(a5)
20017b90:	551c                	lw	a5,40(a0)
20017b92:	c391                	beqz	a5,20017b96 <exit+0x22>
20017b94:	9782                	jalr	a5
20017b96:	8522                	mv	a0,s0
20017b98:	1eb000ef          	jal	ra,20018582 <_exit>

20017b9c <__libc_fini_array>:
__libc_fini_array():
20017b9c:	1141                	addi	sp,sp,-16
20017b9e:	ffff8797          	auipc	a5,0xffff8
20017ba2:	75a78793          	addi	a5,a5,1882 # 200102f8 <__fini_array_end>
20017ba6:	c422                	sw	s0,8(sp)
20017ba8:	ffff8417          	auipc	s0,0xffff8
20017bac:	75040413          	addi	s0,s0,1872 # 200102f8 <__fini_array_end>
20017bb0:	8c1d                	sub	s0,s0,a5
20017bb2:	c226                	sw	s1,4(sp)
20017bb4:	c606                	sw	ra,12(sp)
20017bb6:	8409                	srai	s0,s0,0x2
20017bb8:	84be                	mv	s1,a5
20017bba:	e411                	bnez	s0,20017bc6 <__libc_fini_array+0x2a>
20017bbc:	40b2                	lw	ra,12(sp)
20017bbe:	4422                	lw	s0,8(sp)
20017bc0:	4492                	lw	s1,4(sp)
20017bc2:	0141                	addi	sp,sp,16
20017bc4:	8082                	ret
20017bc6:	147d                	addi	s0,s0,-1
20017bc8:	00241793          	slli	a5,s0,0x2
20017bcc:	97a6                	add	a5,a5,s1
20017bce:	439c                	lw	a5,0(a5)
20017bd0:	9782                	jalr	a5
20017bd2:	b7e5                	j	20017bba <__libc_fini_array+0x1e>

20017bd4 <__libc_init_array>:
__libc_init_array():
20017bd4:	1141                	addi	sp,sp,-16
20017bd6:	ffff8797          	auipc	a5,0xffff8
20017bda:	71278793          	addi	a5,a5,1810 # 200102e8 <_metal_sifive_fe310_g000_pll_init_ptr>
20017bde:	c422                	sw	s0,8(sp)
20017be0:	ffff8417          	auipc	s0,0xffff8
20017be4:	70840413          	addi	s0,s0,1800 # 200102e8 <_metal_sifive_fe310_g000_pll_init_ptr>
20017be8:	8c1d                	sub	s0,s0,a5
20017bea:	c226                	sw	s1,4(sp)
20017bec:	c04a                	sw	s2,0(sp)
20017bee:	c606                	sw	ra,12(sp)
20017bf0:	8409                	srai	s0,s0,0x2
20017bf2:	4481                	li	s1,0
20017bf4:	893e                	mv	s2,a5
20017bf6:	02849663          	bne	s1,s0,20017c22 <__libc_init_array+0x4e>
20017bfa:	ffff8797          	auipc	a5,0xffff8
20017bfe:	6ee78793          	addi	a5,a5,1774 # 200102e8 <_metal_sifive_fe310_g000_pll_init_ptr>
20017c02:	ffff8417          	auipc	s0,0xffff8
20017c06:	6e640413          	addi	s0,s0,1766 # 200102e8 <_metal_sifive_fe310_g000_pll_init_ptr>
20017c0a:	8c1d                	sub	s0,s0,a5
20017c0c:	8409                	srai	s0,s0,0x2
20017c0e:	4481                	li	s1,0
20017c10:	893e                	mv	s2,a5
20017c12:	00849f63          	bne	s1,s0,20017c30 <__libc_init_array+0x5c>
20017c16:	40b2                	lw	ra,12(sp)
20017c18:	4422                	lw	s0,8(sp)
20017c1a:	4492                	lw	s1,4(sp)
20017c1c:	4902                	lw	s2,0(sp)
20017c1e:	0141                	addi	sp,sp,16
20017c20:	8082                	ret
20017c22:	00249793          	slli	a5,s1,0x2
20017c26:	97ca                	add	a5,a5,s2
20017c28:	439c                	lw	a5,0(a5)
20017c2a:	0485                	addi	s1,s1,1
20017c2c:	9782                	jalr	a5
20017c2e:	b7e1                	j	20017bf6 <__libc_init_array+0x22>
20017c30:	00249793          	slli	a5,s1,0x2
20017c34:	97ca                	add	a5,a5,s2
20017c36:	439c                	lw	a5,0(a5)
20017c38:	0485                	addi	s1,s1,1
20017c3a:	9782                	jalr	a5
20017c3c:	bfd9                	j	20017c12 <__libc_init_array+0x3e>

20017c3e <__register_exitproc>:
__register_exitproc():
20017c3e:	5ffe9797          	auipc	a5,0x5ffe9
20017c42:	eda78793          	addi	a5,a5,-294 # 80000b18 <_global_atexit>
20017c46:	439c                	lw	a5,0(a5)
20017c48:	8e2a                	mv	t3,a0
20017c4a:	e39d                	bnez	a5,20017c70 <__register_exitproc+0x32>
20017c4c:	5ffe9717          	auipc	a4,0x5ffe9
20017c50:	ed870713          	addi	a4,a4,-296 # 80000b24 <_global_atexit0>
20017c54:	5ffe9797          	auipc	a5,0x5ffe9
20017c58:	ece7a223          	sw	a4,-316(a5) # 80000b18 <_global_atexit>
20017c5c:	dffe8517          	auipc	a0,0xdffe8
20017c60:	3a450513          	addi	a0,a0,932 # 0 <__metal_boot_hart>
20017c64:	87ba                	mv	a5,a4
20017c66:	c509                	beqz	a0,20017c70 <__register_exitproc+0x32>
20017c68:	411c                	lw	a5,0(a0)
20017c6a:	8ef1a623          	sw	a5,-1812(gp) # 80000bac <_global_atexit0+0x88>
20017c6e:	87ba                	mv	a5,a4
20017c70:	43d8                	lw	a4,4(a5)
20017c72:	487d                	li	a6,31
20017c74:	557d                	li	a0,-1
20017c76:	04e84763          	blt	a6,a4,20017cc4 <__register_exitproc+0x86>
20017c7a:	020e0e63          	beqz	t3,20017cb6 <__register_exitproc+0x78>
20017c7e:	0887a803          	lw	a6,136(a5)
20017c82:	04080163          	beqz	a6,20017cc4 <__register_exitproc+0x86>
20017c86:	00271893          	slli	a7,a4,0x2
20017c8a:	98c2                	add	a7,a7,a6
20017c8c:	00c8a023          	sw	a2,0(a7)
20017c90:	10082303          	lw	t1,256(a6)
20017c94:	4605                	li	a2,1
20017c96:	00e61633          	sll	a2,a2,a4
20017c9a:	00c36333          	or	t1,t1,a2
20017c9e:	10682023          	sw	t1,256(a6)
20017ca2:	08d8a023          	sw	a3,128(a7)
20017ca6:	4689                	li	a3,2
20017ca8:	00de1763          	bne	t3,a3,20017cb6 <__register_exitproc+0x78>
20017cac:	10482683          	lw	a3,260(a6)
20017cb0:	8e55                	or	a2,a2,a3
20017cb2:	10c82223          	sw	a2,260(a6)
20017cb6:	00170693          	addi	a3,a4,1
20017cba:	070a                	slli	a4,a4,0x2
20017cbc:	c3d4                	sw	a3,4(a5)
20017cbe:	97ba                	add	a5,a5,a4
20017cc0:	c78c                	sw	a1,8(a5)
20017cc2:	4501                	li	a0,0
20017cc4:	8082                	ret

20017cc6 <__call_exitprocs>:
__call_exitprocs():
20017cc6:	7179                	addi	sp,sp,-48
20017cc8:	cc52                	sw	s4,24(sp)
20017cca:	ca56                	sw	s5,20(sp)
20017ccc:	c85a                	sw	s6,16(sp)
20017cce:	c65e                	sw	s7,12(sp)
20017cd0:	d606                	sw	ra,44(sp)
20017cd2:	d422                	sw	s0,40(sp)
20017cd4:	d226                	sw	s1,36(sp)
20017cd6:	d04a                	sw	s2,32(sp)
20017cd8:	ce4e                	sw	s3,28(sp)
20017cda:	c462                	sw	s8,8(sp)
20017cdc:	8b2a                	mv	s6,a0
20017cde:	8a2e                	mv	s4,a1
20017ce0:	5ffe9a97          	auipc	s5,0x5ffe9
20017ce4:	e38a8a93          	addi	s5,s5,-456 # 80000b18 <_global_atexit>
20017ce8:	4b85                	li	s7,1
20017cea:	000aa403          	lw	s0,0(s5)
20017cee:	c811                	beqz	s0,20017d02 <__call_exitprocs+0x3c>
20017cf0:	4044                	lw	s1,4(s0)
20017cf2:	08842983          	lw	s3,136(s0)
20017cf6:	fff48913          	addi	s2,s1,-1
20017cfa:	048a                	slli	s1,s1,0x2
20017cfc:	94a2                	add	s1,s1,s0
20017cfe:	00095e63          	bgez	s2,20017d1a <__call_exitprocs+0x54>
20017d02:	50b2                	lw	ra,44(sp)
20017d04:	5422                	lw	s0,40(sp)
20017d06:	5492                	lw	s1,36(sp)
20017d08:	5902                	lw	s2,32(sp)
20017d0a:	49f2                	lw	s3,28(sp)
20017d0c:	4a62                	lw	s4,24(sp)
20017d0e:	4ad2                	lw	s5,20(sp)
20017d10:	4b42                	lw	s6,16(sp)
20017d12:	4bb2                	lw	s7,12(sp)
20017d14:	4c22                	lw	s8,8(sp)
20017d16:	6145                	addi	sp,sp,48
20017d18:	8082                	ret
20017d1a:	000a0e63          	beqz	s4,20017d36 <__call_exitprocs+0x70>
20017d1e:	00099563          	bnez	s3,20017d28 <__call_exitprocs+0x62>
20017d22:	197d                	addi	s2,s2,-1
20017d24:	14f1                	addi	s1,s1,-4
20017d26:	bfe1                	j	20017cfe <__call_exitprocs+0x38>
20017d28:	00291793          	slli	a5,s2,0x2
20017d2c:	97ce                	add	a5,a5,s3
20017d2e:	0807a783          	lw	a5,128(a5)
20017d32:	ff4798e3          	bne	a5,s4,20017d22 <__call_exitprocs+0x5c>
20017d36:	4058                	lw	a4,4(s0)
20017d38:	40dc                	lw	a5,4(s1)
20017d3a:	177d                	addi	a4,a4,-1
20017d3c:	03271863          	bne	a4,s2,20017d6c <__call_exitprocs+0xa6>
20017d40:	01242223          	sw	s2,4(s0)
20017d44:	dff9                	beqz	a5,20017d22 <__call_exitprocs+0x5c>
20017d46:	00442c03          	lw	s8,4(s0)
20017d4a:	00098863          	beqz	s3,20017d5a <__call_exitprocs+0x94>
20017d4e:	1009a683          	lw	a3,256(s3)
20017d52:	012b9733          	sll	a4,s7,s2
20017d56:	8ef9                	and	a3,a3,a4
20017d58:	ee89                	bnez	a3,20017d72 <__call_exitprocs+0xac>
20017d5a:	9782                	jalr	a5
20017d5c:	4058                	lw	a4,4(s0)
20017d5e:	000aa783          	lw	a5,0(s5)
20017d62:	f98714e3          	bne	a4,s8,20017cea <__call_exitprocs+0x24>
20017d66:	faf40ee3          	beq	s0,a5,20017d22 <__call_exitprocs+0x5c>
20017d6a:	b741                	j	20017cea <__call_exitprocs+0x24>
20017d6c:	0004a223          	sw	zero,4(s1)
20017d70:	bfd1                	j	20017d44 <__call_exitprocs+0x7e>
20017d72:	00291693          	slli	a3,s2,0x2
20017d76:	96ce                	add	a3,a3,s3
20017d78:	428c                	lw	a1,0(a3)
20017d7a:	1049a683          	lw	a3,260(s3)
20017d7e:	8f75                	and	a4,a4,a3
20017d80:	e701                	bnez	a4,20017d88 <__call_exitprocs+0xc2>
20017d82:	855a                	mv	a0,s6
20017d84:	9782                	jalr	a5
20017d86:	bfd9                	j	20017d5c <__call_exitprocs+0x96>
20017d88:	852e                	mv	a0,a1
20017d8a:	9782                	jalr	a5
20017d8c:	bfc1                	j	20017d5c <__call_exitprocs+0x96>

20017d8e <__udivdi3>:
__udivdi3():
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1319
20017d8e:	87ae                	mv	a5,a1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1024
20017d90:	8832                	mv	a6,a2
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1025
20017d92:	8736                	mv	a4,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1026
20017d94:	832a                	mv	t1,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1064
20017d96:	20069663          	bnez	a3,20017fa2 <__udivdi3+0x214>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1066
20017d9a:	ffff9897          	auipc	a7,0xffff9
20017d9e:	2ae88893          	addi	a7,a7,686 # 20011048 <__clz_tab>
20017da2:	0ac5fe63          	bgeu	a1,a2,20017e5e <__udivdi3+0xd0>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
20017da6:	6741                	lui	a4,0x10
20017da8:	0ae67463          	bgeu	a2,a4,20017e50 <__udivdi3+0xc2>
20017dac:	0ff00713          	li	a4,255
20017db0:	00c73733          	sltu	a4,a4,a2
20017db4:	070e                	slli	a4,a4,0x3
20017db6:	00e656b3          	srl	a3,a2,a4
20017dba:	98b6                	add	a7,a7,a3
20017dbc:	0008c683          	lbu	a3,0(a7)
20017dc0:	9736                	add	a4,a4,a3
20017dc2:	02000693          	li	a3,32
20017dc6:	8e99                	sub	a3,a3,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1072
20017dc8:	ca99                	beqz	a3,20017dde <__udivdi3+0x50>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
20017dca:	00d797b3          	sll	a5,a5,a3
20017dce:	00e55733          	srl	a4,a0,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1077
20017dd2:	00d61833          	sll	a6,a2,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
20017dd6:	00f765b3          	or	a1,a4,a5
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1079
20017dda:	00d51333          	sll	t1,a0,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1082
20017dde:	01085513          	srli	a0,a6,0x10
20017de2:	02a5f733          	remu	a4,a1,a0
20017de6:	01081613          	slli	a2,a6,0x10
20017dea:	8241                	srli	a2,a2,0x10
20017dec:	01035693          	srli	a3,t1,0x10
20017df0:	02a5d5b3          	divu	a1,a1,a0
20017df4:	0742                	slli	a4,a4,0x10
20017df6:	8ed9                	or	a3,a3,a4
20017df8:	02b607b3          	mul	a5,a2,a1
20017dfc:	872e                	mv	a4,a1
20017dfe:	00f6fc63          	bgeu	a3,a5,20017e16 <__udivdi3+0x88>
20017e02:	96c2                	add	a3,a3,a6
20017e04:	fff58713          	addi	a4,a1,-1
20017e08:	0106e763          	bltu	a3,a6,20017e16 <__udivdi3+0x88>
20017e0c:	00f6f563          	bgeu	a3,a5,20017e16 <__udivdi3+0x88>
20017e10:	ffe58713          	addi	a4,a1,-2
20017e14:	96c2                	add	a3,a3,a6
20017e16:	8e9d                	sub	a3,a3,a5
20017e18:	02a6f7b3          	remu	a5,a3,a0
20017e1c:	0342                	slli	t1,t1,0x10
20017e1e:	01035313          	srli	t1,t1,0x10
20017e22:	02a6d6b3          	divu	a3,a3,a0
20017e26:	07c2                	slli	a5,a5,0x10
20017e28:	0067e333          	or	t1,a5,t1
20017e2c:	02d605b3          	mul	a1,a2,a3
20017e30:	8536                	mv	a0,a3
20017e32:	00b37b63          	bgeu	t1,a1,20017e48 <__udivdi3+0xba>
20017e36:	9342                	add	t1,t1,a6
20017e38:	fff68513          	addi	a0,a3,-1
20017e3c:	01036663          	bltu	t1,a6,20017e48 <__udivdi3+0xba>
20017e40:	00b37463          	bgeu	t1,a1,20017e48 <__udivdi3+0xba>
20017e44:	ffe68513          	addi	a0,a3,-2
20017e48:	0742                	slli	a4,a4,0x10
20017e4a:	8f49                	or	a4,a4,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1209
20017e4c:	4581                	li	a1,0
20017e4e:	a84d                	j	20017f00 <__udivdi3+0x172>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
20017e50:	010006b7          	lui	a3,0x1000
20017e54:	4741                	li	a4,16
20017e56:	f6d660e3          	bltu	a2,a3,20017db6 <__udivdi3+0x28>
20017e5a:	4761                	li	a4,24
20017e5c:	bfa9                	j	20017db6 <__udivdi3+0x28>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1091
20017e5e:	e601                	bnez	a2,20017e66 <__udivdi3+0xd8>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1092
20017e60:	4685                	li	a3,1
20017e62:	02c6d833          	divu	a6,a3,a2
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
20017e66:	66c1                	lui	a3,0x10
20017e68:	08d87e63          	bgeu	a6,a3,20017f04 <__udivdi3+0x176>
20017e6c:	0ff00693          	li	a3,255
20017e70:	0106f363          	bgeu	a3,a6,20017e76 <__udivdi3+0xe8>
20017e74:	4721                	li	a4,8
20017e76:	00e856b3          	srl	a3,a6,a4
20017e7a:	98b6                	add	a7,a7,a3
20017e7c:	0008c683          	lbu	a3,0(a7)
20017e80:	96ba                	add	a3,a3,a4
20017e82:	02000713          	li	a4,32
20017e86:	8f15                	sub	a4,a4,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1096
20017e88:	e749                	bnez	a4,20017f12 <__udivdi3+0x184>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1105
20017e8a:	410787b3          	sub	a5,a5,a6
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1106
20017e8e:	4585                	li	a1,1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1124
20017e90:	01085613          	srli	a2,a6,0x10
20017e94:	01081893          	slli	a7,a6,0x10
20017e98:	0108d893          	srli	a7,a7,0x10
20017e9c:	01035693          	srli	a3,t1,0x10
20017ea0:	02c7f733          	remu	a4,a5,a2
20017ea4:	02c7d7b3          	divu	a5,a5,a2
20017ea8:	0742                	slli	a4,a4,0x10
20017eaa:	8ed9                	or	a3,a3,a4
20017eac:	02f88533          	mul	a0,a7,a5
20017eb0:	873e                	mv	a4,a5
20017eb2:	00a6fc63          	bgeu	a3,a0,20017eca <__udivdi3+0x13c>
20017eb6:	96c2                	add	a3,a3,a6
20017eb8:	fff78713          	addi	a4,a5,-1
20017ebc:	0106e763          	bltu	a3,a6,20017eca <__udivdi3+0x13c>
20017ec0:	00a6f563          	bgeu	a3,a0,20017eca <__udivdi3+0x13c>
20017ec4:	ffe78713          	addi	a4,a5,-2
20017ec8:	96c2                	add	a3,a3,a6
20017eca:	8e89                	sub	a3,a3,a0
20017ecc:	02c6f7b3          	remu	a5,a3,a2
20017ed0:	0342                	slli	t1,t1,0x10
20017ed2:	01035313          	srli	t1,t1,0x10
20017ed6:	02c6d6b3          	divu	a3,a3,a2
20017eda:	07c2                	slli	a5,a5,0x10
20017edc:	0067e333          	or	t1,a5,t1
20017ee0:	02d888b3          	mul	a7,a7,a3
20017ee4:	8536                	mv	a0,a3
20017ee6:	01137b63          	bgeu	t1,a7,20017efc <__udivdi3+0x16e>
20017eea:	9342                	add	t1,t1,a6
20017eec:	fff68513          	addi	a0,a3,-1 # ffff <__heap_size+0xf7ff>
20017ef0:	01036663          	bltu	t1,a6,20017efc <__udivdi3+0x16e>
20017ef4:	01137463          	bgeu	t1,a7,20017efc <__udivdi3+0x16e>
20017ef8:	ffe68513          	addi	a0,a3,-2
20017efc:	0742                	slli	a4,a4,0x10
20017efe:	8f49                	or	a4,a4,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1321
20017f00:	853a                	mv	a0,a4
20017f02:	8082                	ret
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
20017f04:	010006b7          	lui	a3,0x1000
20017f08:	4741                	li	a4,16
20017f0a:	f6d866e3          	bltu	a6,a3,20017e76 <__udivdi3+0xe8>
20017f0e:	4761                	li	a4,24
20017f10:	b79d                	j	20017e76 <__udivdi3+0xe8>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1114
20017f12:	00e81833          	sll	a6,a6,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1115
20017f16:	00d7d5b3          	srl	a1,a5,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1117
20017f1a:	00e51333          	sll	t1,a0,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
20017f1e:	00d556b3          	srl	a3,a0,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
20017f22:	01085513          	srli	a0,a6,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
20017f26:	00e797b3          	sll	a5,a5,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
20017f2a:	02a5f733          	remu	a4,a1,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
20017f2e:	00f6e8b3          	or	a7,a3,a5
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
20017f32:	01081793          	slli	a5,a6,0x10
20017f36:	83c1                	srli	a5,a5,0x10
20017f38:	0108d613          	srli	a2,a7,0x10
20017f3c:	02a5d5b3          	divu	a1,a1,a0
20017f40:	0742                	slli	a4,a4,0x10
20017f42:	8f51                	or	a4,a4,a2
20017f44:	02b786b3          	mul	a3,a5,a1
20017f48:	862e                	mv	a2,a1
20017f4a:	00d77c63          	bgeu	a4,a3,20017f62 <__udivdi3+0x1d4>
20017f4e:	9742                	add	a4,a4,a6
20017f50:	fff58613          	addi	a2,a1,-1
20017f54:	01076763          	bltu	a4,a6,20017f62 <__udivdi3+0x1d4>
20017f58:	00d77563          	bgeu	a4,a3,20017f62 <__udivdi3+0x1d4>
20017f5c:	ffe58613          	addi	a2,a1,-2
20017f60:	9742                	add	a4,a4,a6
20017f62:	40d706b3          	sub	a3,a4,a3
20017f66:	02a6f733          	remu	a4,a3,a0
20017f6a:	08c2                	slli	a7,a7,0x10
20017f6c:	0108d893          	srli	a7,a7,0x10
20017f70:	02a6d6b3          	divu	a3,a3,a0
20017f74:	0742                	slli	a4,a4,0x10
20017f76:	02d785b3          	mul	a1,a5,a3
20017f7a:	011767b3          	or	a5,a4,a7
20017f7e:	8736                	mv	a4,a3
20017f80:	00b7fc63          	bgeu	a5,a1,20017f98 <__udivdi3+0x20a>
20017f84:	97c2                	add	a5,a5,a6
20017f86:	fff68713          	addi	a4,a3,-1 # ffffff <__heap_size+0xfff7ff>
20017f8a:	0107e763          	bltu	a5,a6,20017f98 <__udivdi3+0x20a>
20017f8e:	00b7f563          	bgeu	a5,a1,20017f98 <__udivdi3+0x20a>
20017f92:	ffe68713          	addi	a4,a3,-2
20017f96:	97c2                	add	a5,a5,a6
20017f98:	8f8d                	sub	a5,a5,a1
20017f9a:	01061593          	slli	a1,a2,0x10
20017f9e:	8dd9                	or	a1,a1,a4
20017fa0:	bdc5                	j	20017e90 <__udivdi3+0x102>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1140
20017fa2:	14d5e263          	bltu	a1,a3,200180e6 <__udivdi3+0x358>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
20017fa6:	6741                	lui	a4,0x10
20017fa8:	02e6fe63          	bgeu	a3,a4,20017fe4 <__udivdi3+0x256>
20017fac:	0ff00813          	li	a6,255
20017fb0:	00d83733          	sltu	a4,a6,a3
20017fb4:	070e                	slli	a4,a4,0x3
20017fb6:	00e6d833          	srl	a6,a3,a4
20017fba:	ffff9597          	auipc	a1,0xffff9
20017fbe:	08e58593          	addi	a1,a1,142 # 20011048 <__clz_tab>
20017fc2:	95c2                	add	a1,a1,a6
20017fc4:	0005c803          	lbu	a6,0(a1)
20017fc8:	02000593          	li	a1,32
20017fcc:	983a                	add	a6,a6,a4
20017fce:	410585b3          	sub	a1,a1,a6
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1160
20017fd2:	e185                	bnez	a1,20017ff2 <__udivdi3+0x264>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1172
20017fd4:	4705                	li	a4,1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1170
20017fd6:	f2f6e5e3          	bltu	a3,a5,20017f00 <__udivdi3+0x172>
20017fda:	00c53533          	sltu	a0,a0,a2
20017fde:	00154713          	xori	a4,a0,1
20017fe2:	bf39                	j	20017f00 <__udivdi3+0x172>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
20017fe4:	010005b7          	lui	a1,0x1000
20017fe8:	4741                	li	a4,16
20017fea:	fcb6e6e3          	bltu	a3,a1,20017fb6 <__udivdi3+0x228>
20017fee:	4761                	li	a4,24
20017ff0:	b7d9                	j	20017fb6 <__udivdi3+0x228>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1194
20017ff2:	01065733          	srl	a4,a2,a6
20017ff6:	00b696b3          	sll	a3,a3,a1
20017ffa:	8ed9                	or	a3,a3,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20017ffc:	0106de93          	srli	t4,a3,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1196
20018000:	0107d733          	srl	a4,a5,a6
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20018004:	03d778b3          	remu	a7,a4,t4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1197
20018008:	00b797b3          	sll	a5,a5,a1
2001800c:	01055833          	srl	a6,a0,a6
20018010:	00f86333          	or	t1,a6,a5
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20018014:	01069793          	slli	a5,a3,0x10
20018018:	83c1                	srli	a5,a5,0x10
2001801a:	01035813          	srli	a6,t1,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1195
2001801e:	00b61633          	sll	a2,a2,a1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20018022:	03d75733          	divu	a4,a4,t4
20018026:	08c2                	slli	a7,a7,0x10
20018028:	0108e833          	or	a6,a7,a6
2001802c:	02e78f33          	mul	t5,a5,a4
20018030:	8e3a                	mv	t3,a4
20018032:	01e87c63          	bgeu	a6,t5,2001804a <__udivdi3+0x2bc>
20018036:	9836                	add	a6,a6,a3
20018038:	fff70e13          	addi	t3,a4,-1 # ffff <__heap_size+0xf7ff>
2001803c:	00d86763          	bltu	a6,a3,2001804a <__udivdi3+0x2bc>
20018040:	01e87563          	bgeu	a6,t5,2001804a <__udivdi3+0x2bc>
20018044:	ffe70e13          	addi	t3,a4,-2
20018048:	9836                	add	a6,a6,a3
2001804a:	41e80833          	sub	a6,a6,t5
2001804e:	03d878b3          	remu	a7,a6,t4
20018052:	03d85833          	divu	a6,a6,t4
20018056:	08c2                	slli	a7,a7,0x10
20018058:	03078eb3          	mul	t4,a5,a6
2001805c:	01031793          	slli	a5,t1,0x10
20018060:	83c1                	srli	a5,a5,0x10
20018062:	00f8e7b3          	or	a5,a7,a5
20018066:	8742                	mv	a4,a6
20018068:	01d7fc63          	bgeu	a5,t4,20018080 <__udivdi3+0x2f2>
2001806c:	97b6                	add	a5,a5,a3
2001806e:	fff80713          	addi	a4,a6,-1
20018072:	00d7e763          	bltu	a5,a3,20018080 <__udivdi3+0x2f2>
20018076:	01d7f563          	bgeu	a5,t4,20018080 <__udivdi3+0x2f2>
2001807a:	ffe80713          	addi	a4,a6,-2
2001807e:	97b6                	add	a5,a5,a3
20018080:	0e42                	slli	t3,t3,0x10
20018082:	41d787b3          	sub	a5,a5,t4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
20018086:	6ec1                	lui	t4,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20018088:	00ee6733          	or	a4,t3,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
2001808c:	fffe8813          	addi	a6,t4,-1 # ffff <__heap_size+0xf7ff>
20018090:	01077333          	and	t1,a4,a6
20018094:	01075893          	srli	a7,a4,0x10
20018098:	01067833          	and	a6,a2,a6
2001809c:	8241                	srli	a2,a2,0x10
2001809e:	03030e33          	mul	t3,t1,a6
200180a2:	03088833          	mul	a6,a7,a6
200180a6:	010e5693          	srli	a3,t3,0x10
200180aa:	02c30333          	mul	t1,t1,a2
200180ae:	9342                	add	t1,t1,a6
200180b0:	969a                	add	a3,a3,t1
200180b2:	02c888b3          	mul	a7,a7,a2
200180b6:	0106f363          	bgeu	a3,a6,200180bc <__udivdi3+0x32e>
200180ba:	98f6                	add	a7,a7,t4
200180bc:	0106d613          	srli	a2,a3,0x10
200180c0:	98b2                	add	a7,a7,a2
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1203
200180c2:	0317e063          	bltu	a5,a7,200180e2 <__udivdi3+0x354>
200180c6:	d91793e3          	bne	a5,a7,20017e4c <__udivdi3+0xbe>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
200180ca:	67c1                	lui	a5,0x10
200180cc:	17fd                	addi	a5,a5,-1
200180ce:	8efd                	and	a3,a3,a5
200180d0:	06c2                	slli	a3,a3,0x10
200180d2:	00fe7e33          	and	t3,t3,a5
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1198
200180d6:	00b51533          	sll	a0,a0,a1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
200180da:	96f2                	add	a3,a3,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1209
200180dc:	4581                	li	a1,0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1203
200180de:	e2d571e3          	bgeu	a0,a3,20017f00 <__udivdi3+0x172>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1205
200180e2:	177d                	addi	a4,a4,-1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1206
200180e4:	b3a5                	j	20017e4c <__udivdi3+0xbe>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1145
200180e6:	4581                	li	a1,0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1144
200180e8:	4701                	li	a4,0
200180ea:	bd19                	j	20017f00 <__udivdi3+0x172>

200180ec <__umoddi3>:
__udivmoddi4():
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1024
200180ec:	88b2                	mv	a7,a2
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1025
200180ee:	8736                	mv	a4,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1026
200180f0:	87aa                	mv	a5,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1027
200180f2:	882e                	mv	a6,a1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1064
200180f4:	1c069863          	bnez	a3,200182c4 <__umoddi3+0x1d8>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1066
200180f8:	ffff9697          	auipc	a3,0xffff9
200180fc:	f5068693          	addi	a3,a3,-176 # 20011048 <__clz_tab>
20018100:	0ac5f863          	bgeu	a1,a2,200181b0 <__umoddi3+0xc4>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
20018104:	6341                	lui	t1,0x10
20018106:	08667e63          	bgeu	a2,t1,200181a2 <__umoddi3+0xb6>
2001810a:	0ff00313          	li	t1,255
2001810e:	00c37363          	bgeu	t1,a2,20018114 <__umoddi3+0x28>
20018112:	4721                	li	a4,8
20018114:	00e65333          	srl	t1,a2,a4
20018118:	969a                	add	a3,a3,t1
2001811a:	0006ce03          	lbu	t3,0(a3)
2001811e:	02000313          	li	t1,32
20018122:	9e3a                	add	t3,t3,a4
20018124:	41c30333          	sub	t1,t1,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1072
20018128:	00030c63          	beqz	t1,20018140 <__umoddi3+0x54>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
2001812c:	006595b3          	sll	a1,a1,t1
20018130:	01c55e33          	srl	t3,a0,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1077
20018134:	006618b3          	sll	a7,a2,t1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1078
20018138:	00be6833          	or	a6,t3,a1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1079
2001813c:	006517b3          	sll	a5,a0,t1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1082
20018140:	0108d613          	srli	a2,a7,0x10
20018144:	02c87733          	remu	a4,a6,a2
20018148:	01089513          	slli	a0,a7,0x10
2001814c:	8141                	srli	a0,a0,0x10
2001814e:	0107d693          	srli	a3,a5,0x10
20018152:	02c85833          	divu	a6,a6,a2
20018156:	0742                	slli	a4,a4,0x10
20018158:	8ed9                	or	a3,a3,a4
2001815a:	03050833          	mul	a6,a0,a6
2001815e:	0106f863          	bgeu	a3,a6,2001816e <__umoddi3+0x82>
20018162:	96c6                	add	a3,a3,a7
20018164:	0116e563          	bltu	a3,a7,2001816e <__umoddi3+0x82>
20018168:	0106f363          	bgeu	a3,a6,2001816e <__umoddi3+0x82>
2001816c:	96c6                	add	a3,a3,a7
2001816e:	410686b3          	sub	a3,a3,a6
20018172:	02c6f733          	remu	a4,a3,a2
20018176:	07c2                	slli	a5,a5,0x10
20018178:	83c1                	srli	a5,a5,0x10
2001817a:	02c6d6b3          	divu	a3,a3,a2
2001817e:	02d506b3          	mul	a3,a0,a3
20018182:	01071513          	slli	a0,a4,0x10
20018186:	8fc9                	or	a5,a5,a0
20018188:	00d7f863          	bgeu	a5,a3,20018198 <__umoddi3+0xac>
2001818c:	97c6                	add	a5,a5,a7
2001818e:	0117e563          	bltu	a5,a7,20018198 <__umoddi3+0xac>
20018192:	00d7f363          	bgeu	a5,a3,20018198 <__umoddi3+0xac>
20018196:	97c6                	add	a5,a5,a7
20018198:	8f95                	sub	a5,a5,a3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1131
2001819a:	0067d533          	srl	a0,a5,t1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1133
2001819e:	4581                	li	a1,0
__umoddi3():
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1313
200181a0:	8082                	ret
__udivmoddi4():
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1070
200181a2:	01000337          	lui	t1,0x1000
200181a6:	4741                	li	a4,16
200181a8:	f66666e3          	bltu	a2,t1,20018114 <__umoddi3+0x28>
200181ac:	4761                	li	a4,24
200181ae:	b79d                	j	20018114 <__umoddi3+0x28>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1091
200181b0:	e601                	bnez	a2,200181b8 <__umoddi3+0xcc>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1092
200181b2:	4605                	li	a2,1
200181b4:	031658b3          	divu	a7,a2,a7
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
200181b8:	6641                	lui	a2,0x10
200181ba:	08c8f363          	bgeu	a7,a2,20018240 <__umoddi3+0x154>
200181be:	0ff00613          	li	a2,255
200181c2:	01167363          	bgeu	a2,a7,200181c8 <__umoddi3+0xdc>
200181c6:	4721                	li	a4,8
200181c8:	00e8d633          	srl	a2,a7,a4
200181cc:	96b2                	add	a3,a3,a2
200181ce:	0006ce03          	lbu	t3,0(a3)
200181d2:	02000313          	li	t1,32
200181d6:	9e3a                	add	t3,t3,a4
200181d8:	41c30333          	sub	t1,t1,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1096
200181dc:	06031963          	bnez	t1,2001824e <__umoddi3+0x162>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1105
200181e0:	411585b3          	sub	a1,a1,a7
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1124
200181e4:	0108d713          	srli	a4,a7,0x10
200181e8:	01089513          	slli	a0,a7,0x10
200181ec:	8141                	srli	a0,a0,0x10
200181ee:	0107d613          	srli	a2,a5,0x10
200181f2:	02e5f6b3          	remu	a3,a1,a4
200181f6:	02e5d5b3          	divu	a1,a1,a4
200181fa:	06c2                	slli	a3,a3,0x10
200181fc:	8ed1                	or	a3,a3,a2
200181fe:	02b505b3          	mul	a1,a0,a1
20018202:	00b6f863          	bgeu	a3,a1,20018212 <__umoddi3+0x126>
20018206:	96c6                	add	a3,a3,a7
20018208:	0116e563          	bltu	a3,a7,20018212 <__umoddi3+0x126>
2001820c:	00b6f363          	bgeu	a3,a1,20018212 <__umoddi3+0x126>
20018210:	96c6                	add	a3,a3,a7
20018212:	40b685b3          	sub	a1,a3,a1
20018216:	02e5f6b3          	remu	a3,a1,a4
2001821a:	07c2                	slli	a5,a5,0x10
2001821c:	83c1                	srli	a5,a5,0x10
2001821e:	02e5d5b3          	divu	a1,a1,a4
20018222:	02b505b3          	mul	a1,a0,a1
20018226:	01069513          	slli	a0,a3,0x10
2001822a:	8fc9                	or	a5,a5,a0
2001822c:	00b7f863          	bgeu	a5,a1,2001823c <__umoddi3+0x150>
20018230:	97c6                	add	a5,a5,a7
20018232:	0117e563          	bltu	a5,a7,2001823c <__umoddi3+0x150>
20018236:	00b7f363          	bgeu	a5,a1,2001823c <__umoddi3+0x150>
2001823a:	97c6                	add	a5,a5,a7
2001823c:	8f8d                	sub	a5,a5,a1
2001823e:	bfb1                	j	2001819a <__umoddi3+0xae>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1094
20018240:	01000637          	lui	a2,0x1000
20018244:	4741                	li	a4,16
20018246:	f8c8e1e3          	bltu	a7,a2,200181c8 <__umoddi3+0xdc>
2001824a:	4761                	li	a4,24
2001824c:	bfb5                	j	200181c8 <__umoddi3+0xdc>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1114
2001824e:	006898b3          	sll	a7,a7,t1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1115
20018252:	01c5d733          	srl	a4,a1,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1117
20018256:	006517b3          	sll	a5,a0,t1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
2001825a:	01c55e33          	srl	t3,a0,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
2001825e:	0108d513          	srli	a0,a7,0x10
20018262:	02a776b3          	remu	a3,a4,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1116
20018266:	006595b3          	sll	a1,a1,t1
2001826a:	00be6e33          	or	t3,t3,a1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1119
2001826e:	01089593          	slli	a1,a7,0x10
20018272:	81c1                	srli	a1,a1,0x10
20018274:	010e5613          	srli	a2,t3,0x10
20018278:	02a75733          	divu	a4,a4,a0
2001827c:	06c2                	slli	a3,a3,0x10
2001827e:	8ed1                	or	a3,a3,a2
20018280:	02e58733          	mul	a4,a1,a4
20018284:	00e6f863          	bgeu	a3,a4,20018294 <__umoddi3+0x1a8>
20018288:	96c6                	add	a3,a3,a7
2001828a:	0116e563          	bltu	a3,a7,20018294 <__umoddi3+0x1a8>
2001828e:	00e6f363          	bgeu	a3,a4,20018294 <__umoddi3+0x1a8>
20018292:	96c6                	add	a3,a3,a7
20018294:	40e68633          	sub	a2,a3,a4
20018298:	02a676b3          	remu	a3,a2,a0
2001829c:	0e42                	slli	t3,t3,0x10
2001829e:	010e5e13          	srli	t3,t3,0x10
200182a2:	02a65633          	divu	a2,a2,a0
200182a6:	06c2                	slli	a3,a3,0x10
200182a8:	02c58633          	mul	a2,a1,a2
200182ac:	01c6e5b3          	or	a1,a3,t3
200182b0:	00c5f863          	bgeu	a1,a2,200182c0 <__umoddi3+0x1d4>
200182b4:	95c6                	add	a1,a1,a7
200182b6:	0115e563          	bltu	a1,a7,200182c0 <__umoddi3+0x1d4>
200182ba:	00c5f363          	bgeu	a1,a2,200182c0 <__umoddi3+0x1d4>
200182be:	95c6                	add	a1,a1,a7
200182c0:	8d91                	sub	a1,a1,a2
200182c2:	b70d                	j	200181e4 <__umoddi3+0xf8>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1140
200182c4:	ecd5eee3          	bltu	a1,a3,200181a0 <__umoddi3+0xb4>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
200182c8:	6741                	lui	a4,0x10
200182ca:	04e6f563          	bgeu	a3,a4,20018314 <__umoddi3+0x228>
200182ce:	0ff00e93          	li	t4,255
200182d2:	00deb733          	sltu	a4,t4,a3
200182d6:	070e                	slli	a4,a4,0x3
200182d8:	00e6d333          	srl	t1,a3,a4
200182dc:	ffff9897          	auipc	a7,0xffff9
200182e0:	d6c88893          	addi	a7,a7,-660 # 20011048 <__clz_tab>
200182e4:	989a                	add	a7,a7,t1
200182e6:	0008ce83          	lbu	t4,0(a7)
200182ea:	02000e13          	li	t3,32
200182ee:	9eba                	add	t4,t4,a4
200182f0:	41de0e33          	sub	t3,t3,t4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1160
200182f4:	020e1763          	bnez	t3,20018322 <__umoddi3+0x236>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1170
200182f8:	00b6e463          	bltu	a3,a1,20018300 <__umoddi3+0x214>
200182fc:	00c56963          	bltu	a0,a2,2001830e <__umoddi3+0x222>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1173
20018300:	40c507b3          	sub	a5,a0,a2
20018304:	8d95                	sub	a1,a1,a3
20018306:	00f53533          	sltu	a0,a0,a5
2001830a:	40a58833          	sub	a6,a1,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1184
2001830e:	853e                	mv	a0,a5
20018310:	85c2                	mv	a1,a6
20018312:	b579                	j	200181a0 <__umoddi3+0xb4>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1159
20018314:	010008b7          	lui	a7,0x1000
20018318:	4741                	li	a4,16
2001831a:	fb16efe3          	bltu	a3,a7,200182d8 <__umoddi3+0x1ec>
2001831e:	4761                	li	a4,24
20018320:	bf65                	j	200182d8 <__umoddi3+0x1ec>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1194
20018322:	01d65733          	srl	a4,a2,t4
20018326:	01c696b3          	sll	a3,a3,t3
2001832a:	8ed9                	or	a3,a3,a4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
2001832c:	0106d813          	srli	a6,a3,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1196
20018330:	01d5d733          	srl	a4,a1,t4
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20018334:	03077333          	remu	t1,a4,a6
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1197
20018338:	01c595b3          	sll	a1,a1,t3
2001833c:	01d557b3          	srl	a5,a0,t4
20018340:	8fcd                	or	a5,a5,a1
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20018342:	01069593          	slli	a1,a3,0x10
20018346:	81c1                	srli	a1,a1,0x10
20018348:	0107d893          	srli	a7,a5,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1195
2001834c:	01c61633          	sll	a2,a2,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1198
20018350:	01c51533          	sll	a0,a0,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
20018354:	03075733          	divu	a4,a4,a6
20018358:	0342                	slli	t1,t1,0x10
2001835a:	011368b3          	or	a7,t1,a7
2001835e:	02e58f33          	mul	t5,a1,a4
20018362:	833a                	mv	t1,a4
20018364:	01e8fc63          	bgeu	a7,t5,2001837c <__umoddi3+0x290>
20018368:	98b6                	add	a7,a7,a3
2001836a:	fff70313          	addi	t1,a4,-1 # ffff <__heap_size+0xf7ff>
2001836e:	00d8e763          	bltu	a7,a3,2001837c <__umoddi3+0x290>
20018372:	01e8f563          	bgeu	a7,t5,2001837c <__umoddi3+0x290>
20018376:	ffe70313          	addi	t1,a4,-2
2001837a:	98b6                	add	a7,a7,a3
2001837c:	41e888b3          	sub	a7,a7,t5
20018380:	0308ff33          	remu	t5,a7,a6
20018384:	0308d8b3          	divu	a7,a7,a6
20018388:	0f42                	slli	t5,t5,0x10
2001838a:	03158833          	mul	a6,a1,a7
2001838e:	01079593          	slli	a1,a5,0x10
20018392:	81c1                	srli	a1,a1,0x10
20018394:	00bf65b3          	or	a1,t5,a1
20018398:	87c6                	mv	a5,a7
2001839a:	0105fc63          	bgeu	a1,a6,200183b2 <__umoddi3+0x2c6>
2001839e:	95b6                	add	a1,a1,a3
200183a0:	fff88793          	addi	a5,a7,-1 # ffffff <__heap_size+0xfff7ff>
200183a4:	00d5e763          	bltu	a1,a3,200183b2 <__umoddi3+0x2c6>
200183a8:	0105f563          	bgeu	a1,a6,200183b2 <__umoddi3+0x2c6>
200183ac:	ffe88793          	addi	a5,a7,-2
200183b0:	95b6                	add	a1,a1,a3
200183b2:	0342                	slli	t1,t1,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
200183b4:	6f41                	lui	t5,0x10
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
200183b6:	00f36333          	or	t1,t1,a5
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
200183ba:	ffff0793          	addi	a5,t5,-1 # ffff <__heap_size+0xf7ff>
200183be:	00f378b3          	and	a7,t1,a5
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1200
200183c2:	410585b3          	sub	a1,a1,a6
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1201
200183c6:	01035313          	srli	t1,t1,0x10
200183ca:	01065813          	srli	a6,a2,0x10
200183ce:	8ff1                	and	a5,a5,a2
200183d0:	02f88733          	mul	a4,a7,a5
200183d4:	02f307b3          	mul	a5,t1,a5
200183d8:	030888b3          	mul	a7,a7,a6
200183dc:	03030333          	mul	t1,t1,a6
200183e0:	98be                	add	a7,a7,a5
200183e2:	01075813          	srli	a6,a4,0x10
200183e6:	9846                	add	a6,a6,a7
200183e8:	00f87363          	bgeu	a6,a5,200183ee <__umoddi3+0x302>
200183ec:	937a                	add	t1,t1,t5
200183ee:	01085793          	srli	a5,a6,0x10
200183f2:	933e                	add	t1,t1,a5
200183f4:	67c1                	lui	a5,0x10
200183f6:	17fd                	addi	a5,a5,-1
200183f8:	00f87833          	and	a6,a6,a5
200183fc:	0842                	slli	a6,a6,0x10
200183fe:	8f7d                	and	a4,a4,a5
20018400:	9742                	add	a4,a4,a6
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1203
20018402:	0065e663          	bltu	a1,t1,2001840e <__umoddi3+0x322>
20018406:	00659c63          	bne	a1,t1,2001841e <__umoddi3+0x332>
2001840a:	00e57a63          	bgeu	a0,a4,2001841e <__umoddi3+0x332>
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1206
2001840e:	40c70633          	sub	a2,a4,a2
20018412:	00c73733          	sltu	a4,a4,a2
20018416:	9736                	add	a4,a4,a3
20018418:	40e30333          	sub	t1,t1,a4
2001841c:	8732                	mv	a4,a2
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1214
2001841e:	40e50733          	sub	a4,a0,a4
20018422:	00e53533          	sltu	a0,a0,a4
20018426:	406585b3          	sub	a1,a1,t1
2001842a:	8d89                	sub	a1,a1,a0
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1215
2001842c:	01d597b3          	sll	a5,a1,t4
20018430:	01c75733          	srl	a4,a4,t3
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1217
20018434:	00e7e533          	or	a0,a5,a4
20018438:	01c5d5b3          	srl	a1,a1,t3
__umoddi3():
/scratch/jenkins/workspace/tpp-freedom-tools/tpp04--build-binary-packages--parameterized/obj/x86_64-linux-centos6/build/riscv-gnu-toolchain/build-gcc-newlib-stage2/riscv64-unknown-elf/rv32imac/ilp32/libgcc/../../../../../riscv-gcc/libgcc/libgcc2.c:1312
2001843c:	b395                	j	200181a0 <__umoddi3+0xb4>

2001843e <metal_init>:
metal_init():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:17
extern metal_constructor_t metal_constructors_start;
extern metal_constructor_t metal_constructors_end;
extern metal_destructor_t metal_destructors_start;
extern metal_destructor_t metal_destructors_end;

void metal_init(void) {
2001843e:	1101                	addi	sp,sp,-32
20018440:	ce06                	sw	ra,28(sp)
20018442:	cc22                	sw	s0,24(sp)
20018444:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:20
    /* Make sure the constructors only run once */
    static int init_done = 0;
    if (init_done) {
20018446:	800017b7          	lui	a5,0x80001
2001844a:	b1c7a783          	lw	a5,-1252(a5) # 80000b1c <metal_segment_heap_target_end+0xfffff35c>
2001844e:	efa9                	bnez	a5,200184a8 <metal_init+0x6a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:23
        return;
    }
    init_done = 1;
20018450:	800017b7          	lui	a5,0x80001
20018454:	4705                	li	a4,1
20018456:	b0e7ae23          	sw	a4,-1252(a5) # 80000b1c <metal_segment_heap_target_end+0xfffff35c>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:25

    if (&metal_constructors_end <= &metal_constructors_start) {
2001845a:	200107b7          	lui	a5,0x20010
2001845e:	2f478713          	addi	a4,a5,756 # 200102f4 <metal_constructors_end>
20018462:	200107b7          	lui	a5,0x20010
20018466:	2e878793          	addi	a5,a5,744 # 200102e8 <_metal_sifive_fe310_g000_pll_init_ptr>
2001846a:	04e7f163          	bgeu	a5,a4,200184ac <metal_init+0x6e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:29
        return;
    }

    metal_constructor_t *funcptr = &metal_constructors_start;
2001846e:	200107b7          	lui	a5,0x20010
20018472:	2e878793          	addi	a5,a5,744 # 200102e8 <_metal_sifive_fe310_g000_pll_init_ptr>
20018476:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
2001847a:	a831                	j	20018496 <metal_init+0x58>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:31
        metal_constructor_t func = *funcptr;
2001847c:	fec42783          	lw	a5,-20(s0)
20018480:	439c                	lw	a5,0(a5)
20018482:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:33

        func();
20018486:	fe842783          	lw	a5,-24(s0)
2001848a:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:35

        funcptr += 1;
2001848c:	fec42783          	lw	a5,-20(s0)
20018490:	0791                	addi	a5,a5,4
20018492:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
20018496:	fec42703          	lw	a4,-20(s0)
2001849a:	200107b7          	lui	a5,0x20010
2001849e:	2f478793          	addi	a5,a5,756 # 200102f4 <metal_constructors_end>
200184a2:	fcf71de3          	bne	a4,a5,2001847c <metal_init+0x3e>
200184a6:	a021                	j	200184ae <metal_init+0x70>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:21
        return;
200184a8:	0001                	nop
200184aa:	a011                	j	200184ae <metal_init+0x70>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:26
        return;
200184ac:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:37
    }
}
200184ae:	40f2                	lw	ra,28(sp)
200184b0:	4462                	lw	s0,24(sp)
200184b2:	6105                	addi	sp,sp,32
200184b4:	8082                	ret

200184b6 <metal_fini>:
metal_fini():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:39

void metal_fini(void) {
200184b6:	1101                	addi	sp,sp,-32
200184b8:	ce06                	sw	ra,28(sp)
200184ba:	cc22                	sw	s0,24(sp)
200184bc:	1000                	addi	s0,sp,32
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:42
    /* Make sure the destructors only run once */
    static int fini_done = 0;
    if (fini_done) {
200184be:	800017b7          	lui	a5,0x80001
200184c2:	b207a783          	lw	a5,-1248(a5) # 80000b20 <metal_segment_heap_target_end+0xfffff360>
200184c6:	efa9                	bnez	a5,20018520 <metal_fini+0x6a>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:45
        return;
    }
    fini_done = 1;
200184c8:	800017b7          	lui	a5,0x80001
200184cc:	4705                	li	a4,1
200184ce:	b2e7a023          	sw	a4,-1248(a5) # 80000b20 <metal_segment_heap_target_end+0xfffff360>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:47

    if (&metal_destructors_end <= &metal_destructors_start) {
200184d2:	200107b7          	lui	a5,0x20010
200184d6:	2f878713          	addi	a4,a5,760 # 200102f8 <__fini_array_end>
200184da:	200107b7          	lui	a5,0x20010
200184de:	2f878793          	addi	a5,a5,760 # 200102f8 <__fini_array_end>
200184e2:	04e7f163          	bgeu	a5,a4,20018524 <metal_fini+0x6e>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:51
        return;
    }

    metal_destructor_t *funcptr = &metal_destructors_start;
200184e6:	200107b7          	lui	a5,0x20010
200184ea:	2f878793          	addi	a5,a5,760 # 200102f8 <__fini_array_end>
200184ee:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
200184f2:	a831                	j	2001850e <metal_fini+0x58>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:53
        metal_destructor_t func = *funcptr;
200184f4:	fec42783          	lw	a5,-20(s0)
200184f8:	439c                	lw	a5,0(a5)
200184fa:	fef42423          	sw	a5,-24(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:55

        func();
200184fe:	fe842783          	lw	a5,-24(s0)
20018502:	9782                	jalr	a5
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:57

        funcptr += 1;
20018504:	fec42783          	lw	a5,-20(s0)
20018508:	0791                	addi	a5,a5,4
2001850a:	fef42623          	sw	a5,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
2001850e:	fec42703          	lw	a4,-20(s0)
20018512:	200107b7          	lui	a5,0x20010
20018516:	2f878793          	addi	a5,a5,760 # 200102f8 <__fini_array_end>
2001851a:	fcf71de3          	bne	a4,a5,200184f4 <metal_fini+0x3e>
2001851e:	a021                	j	20018526 <metal_fini+0x70>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:43
        return;
20018520:	0001                	nop
20018522:	a011                	j	20018526 <metal_fini+0x70>
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:48
        return;
20018524:	0001                	nop
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:59
    }
}
20018526:	40f2                	lw	ra,28(sp)
20018528:	4462                	lw	s0,24(sp)
2001852a:	6105                	addi	sp,sp,32
2001852c:	8082                	ret

2001852e <metal_init_run>:
metal_init_run():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:69
 * in the case that users don't want the metal constructors or
 * destructors to run.
 */

void metal_init_run(void) __attribute__((weak));
void metal_init_run(void) { metal_init(); }
2001852e:	1141                	addi	sp,sp,-16
20018530:	c606                	sw	ra,12(sp)
20018532:	c422                	sw	s0,8(sp)
20018534:	0800                	addi	s0,sp,16
20018536:	f09ff0ef          	jal	ra,2001843e <metal_init>
2001853a:	0001                	nop
2001853c:	40b2                	lw	ra,12(sp)
2001853e:	4422                	lw	s0,8(sp)
20018540:	0141                	addi	sp,sp,16
20018542:	8082                	ret

20018544 <metal_fini_run>:
metal_fini_run():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/init.c:72

void metal_fini_run(void) __attribute__((weak));
void metal_fini_run(void) { metal_fini(); }
20018544:	1141                	addi	sp,sp,-16
20018546:	c606                	sw	ra,12(sp)
20018548:	c422                	sw	s0,8(sp)
2001854a:	0800                	addi	s0,sp,16
2001854c:	f6bff0ef          	jal	ra,200184b6 <metal_fini>
20018550:	0001                	nop
20018552:	40b2                	lw	ra,12(sp)
20018554:	4422                	lw	s0,8(sp)
20018556:	0141                	addi	sp,sp,16
20018558:	8082                	ret

2001855a <metal_tty_putc>:
metal_tty_putc():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/tty.c:12
int metal_tty_putc(int c) {
2001855a:	1101                	addi	sp,sp,-32
2001855c:	ce06                	sw	ra,28(sp)
2001855e:	cc22                	sw	s0,24(sp)
20018560:	1000                	addi	s0,sp,32
20018562:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/tty.c:13
    return metal_uart_putc(__METAL_DT_STDOUT_UART_HANDLE, c);
20018566:	fec42583          	lw	a1,-20(s0)
2001856a:	800017b7          	lui	a5,0x80001
2001856e:	a5c78513          	addi	a0,a5,-1444 # 80000a5c <metal_segment_heap_target_end+0xfffff29c>
20018572:	a20ff0ef          	jal	ra,20017792 <metal_uart_putc>
20018576:	87aa                	mv	a5,a0
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/src/tty.c:14
}
20018578:	853e                	mv	a0,a5
2001857a:	40f2                	lw	ra,28(sp)
2001857c:	4462                	lw	s0,24(sp)
2001857e:	6105                	addi	sp,sp,32
20018580:	8082                	ret

20018582 <_exit>:
_exit():
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_exit.c:3
#include <metal/shutdown.h>

void _exit(int exit_status) {
20018582:	1101                	addi	sp,sp,-32
20018584:	ce06                	sw	ra,28(sp)
20018586:	cc22                	sw	s0,24(sp)
20018588:	1000                	addi	s0,sp,32
2001858a:	fea42623          	sw	a0,-20(s0)
/home/letsgrillbananas/wsFreedomStudio/embedded-software/freedom-metal/gloss/sys_exit.c:4
    metal_shutdown(exit_status);
2001858e:	fec42503          	lw	a0,-20(s0)
20018592:	8a6ff0ef          	jal	ra,20017638 <metal_shutdown>
